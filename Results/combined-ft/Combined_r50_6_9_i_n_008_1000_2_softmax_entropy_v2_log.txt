[09/30 21:37:09] detectron2 INFO: Rank of current process: 0. World size: 2
[09/30 21:37:10] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/30 21:37:10] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_entropy_v2.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[09/30 21:37:10] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_entropy_v2.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_v2
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[09/30 21:37:10] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_v2
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/30 21:37:10] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_v2/config.yaml
[09/30 21:37:10] d2.utils.env INFO: Using a generated random seed 10890684
[09/30 21:37:14] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/30 21:37:14] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/30 21:37:15] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/30 21:37:15] d2.data.build INFO: Using training sampler TrainingSampler
[09/30 21:37:15] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/30 21:37:15] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/30 21:37:15] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/30 21:37:15] d2.data.build INFO: Making batched data loader with batch_size=4
[09/30 21:37:15] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/30 21:37:19] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/30 21:37:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 21:37:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 21:37:28] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 21:37:28] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 21:38:07] d2.utils.events INFO:  eta: 0:25:27  iter: 19  total_loss: 42.96  m1_loss_ce: 0.4709  m1_loss_mask: 0.1607  m1_loss_dice: 1.276  m1_loss_ce_0: 0.5972  m1_loss_mask_0: 0.1832  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.65  m1_loss_mask_1: 0.1784  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.5886  m1_loss_mask_2: 0.1665  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5244  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.5231  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.4703  m1_loss_mask_5: 0.1629  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.493  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.242  m1_loss_ce_7: 0.5074  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.5044  m1_loss_mask_8: 0.1629  m1_loss_dice_8: 1.25  m2_loss_ce: 0.4434  m2_loss_mask: 0.1636  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6121  m2_loss_mask_0: 0.1821  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6547  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6077  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5225  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.5244  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.4972  m2_loss_mask_5: 0.163  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.4637  m2_loss_mask_6: 0.1627  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.4853  m2_loss_mask_7: 0.1651  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4817  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.247  com_loss_ce: 1.782  com_loss_mask: 0.6924  com_loss_dice: 0.9717    time: 1.5692  last_time: 1.5593  data_time: 0.3183  last_data_time: 0.0642   lr: 0.0001  max_mem: 34634M
[09/30 21:38:38] d2.utils.events INFO:  eta: 0:24:54  iter: 39  total_loss: 43.99  m1_loss_ce: 0.5163  m1_loss_mask: 0.1765  m1_loss_dice: 1.228  m1_loss_ce_0: 0.5866  m1_loss_mask_0: 0.2019  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6807  m1_loss_mask_1: 0.1894  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.6146  m1_loss_mask_2: 0.1834  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5358  m1_loss_mask_3: 0.181  m1_loss_dice_3: 1.292  m1_loss_ce_4: 0.5577  m1_loss_mask_4: 0.175  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5168  m1_loss_mask_5: 0.1781  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.4885  m1_loss_mask_6: 0.1774  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.5263  m1_loss_mask_7: 0.1789  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.501  m1_loss_mask_8: 0.1795  m1_loss_dice_8: 1.248  m2_loss_ce: 0.5037  m2_loss_mask: 0.1781  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6194  m2_loss_mask_0: 0.2107  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6703  m2_loss_mask_1: 0.1981  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5993  m2_loss_mask_2: 0.1871  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5662  m2_loss_mask_3: 0.1813  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5389  m2_loss_mask_4: 0.1768  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5299  m2_loss_mask_5: 0.1777  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.5232  m2_loss_mask_6: 0.1774  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.5179  m2_loss_mask_7: 0.1769  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.5059  m2_loss_mask_8: 0.1773  m2_loss_dice_8: 1.221  com_loss_ce: 1.776  com_loss_mask: 0.6924  com_loss_dice: 0.969    time: 1.5492  last_time: 1.4518  data_time: 0.0625  last_data_time: 0.0666   lr: 0.0001  max_mem: 34676M
[09/30 21:39:09] d2.utils.events INFO:  eta: 0:24:21  iter: 59  total_loss: 44.97  m1_loss_ce: 0.4903  m1_loss_mask: 0.1695  m1_loss_dice: 1.32  m1_loss_ce_0: 0.6241  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.6979  m1_loss_mask_1: 0.1837  m1_loss_dice_1: 1.454  m1_loss_ce_2: 0.6195  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.383  m1_loss_ce_3: 0.6047  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.325  m1_loss_ce_4: 0.5418  m1_loss_mask_4: 0.171  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5351  m1_loss_mask_5: 0.171  m1_loss_dice_5: 1.321  m1_loss_ce_6: 0.5041  m1_loss_mask_6: 0.1712  m1_loss_dice_6: 1.291  m1_loss_ce_7: 0.4915  m1_loss_mask_7: 0.1705  m1_loss_dice_7: 1.263  m1_loss_ce_8: 0.5028  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.288  m2_loss_ce: 0.4863  m2_loss_mask: 0.1652  m2_loss_dice: 1.291  m2_loss_ce_0: 0.6429  m2_loss_mask_0: 0.2073  m2_loss_dice_0: 1.517  m2_loss_ce_1: 0.6878  m2_loss_mask_1: 0.1862  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.6182  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.37  m2_loss_ce_3: 0.5565  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.5512  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.323  m2_loss_ce_5: 0.5273  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.335  m2_loss_ce_6: 0.5005  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.307  m2_loss_ce_7: 0.5073  m2_loss_mask_7: 0.1663  m2_loss_dice_7: 1.296  m2_loss_ce_8: 0.4915  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.325  com_loss_ce: 1.788  com_loss_mask: 0.6924  com_loss_dice: 0.9695    time: 1.5497  last_time: 1.5472  data_time: 0.0778  last_data_time: 0.0845   lr: 0.0001  max_mem: 34676M
[09/30 21:39:40] d2.utils.events INFO:  eta: 0:23:52  iter: 79  total_loss: 43.74  m1_loss_ce: 0.4624  m1_loss_mask: 0.1721  m1_loss_dice: 1.247  m1_loss_ce_0: 0.5392  m1_loss_mask_0: 0.1978  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.6166  m1_loss_mask_1: 0.1885  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.5453  m1_loss_mask_2: 0.1798  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5294  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.236  m1_loss_ce_4: 0.5132  m1_loss_mask_4: 0.1723  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.5159  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.4916  m1_loss_mask_6: 0.1714  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.4704  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4655  m1_loss_mask_8: 0.1711  m1_loss_dice_8: 1.231  m2_loss_ce: 0.4803  m2_loss_mask: 0.1722  m2_loss_dice: 1.251  m2_loss_ce_0: 0.592  m2_loss_mask_0: 0.2094  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6243  m2_loss_mask_1: 0.1952  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.5689  m2_loss_mask_2: 0.1768  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5199  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.521  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5166  m2_loss_mask_5: 0.1686  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.4794  m2_loss_mask_6: 0.172  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4755  m2_loss_mask_7: 0.1741  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4944  m2_loss_mask_8: 0.1724  m2_loss_dice_8: 1.232  com_loss_ce: 1.767  com_loss_mask: 0.6924  com_loss_dice: 0.9709    time: 1.5502  last_time: 1.5389  data_time: 0.0878  last_data_time: 0.0714   lr: 0.0001  max_mem: 34676M
[09/30 21:40:12] d2.utils.events INFO:  eta: 0:23:23  iter: 99  total_loss: 43.63  m1_loss_ce: 0.4775  m1_loss_mask: 0.1607  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5463  m1_loss_mask_0: 0.1804  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.6464  m1_loss_mask_1: 0.1688  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.5719  m1_loss_mask_2: 0.1726  m1_loss_dice_2: 1.308  m1_loss_ce_3: 0.5185  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.4938  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4903  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4701  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.461  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.211  m1_loss_ce_8: 0.4597  m1_loss_mask_8: 0.1602  m1_loss_dice_8: 1.215  m2_loss_ce: 0.4876  m2_loss_mask: 0.1597  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6258  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6629  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.434  m2_loss_ce_2: 0.5859  m2_loss_mask_2: 0.1655  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5288  m2_loss_mask_3: 0.1588  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5173  m2_loss_mask_4: 0.1569  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.4843  m2_loss_mask_5: 0.1557  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.4966  m2_loss_mask_6: 0.1584  m2_loss_dice_6: 1.279  m2_loss_ce_7: 0.5139  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4772  m2_loss_mask_8: 0.1593  m2_loss_dice_8: 1.242  com_loss_ce: 1.766  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5529  last_time: 1.4748  data_time: 0.0841  last_data_time: 0.0733   lr: 0.0001  max_mem: 34770M
[09/30 21:40:44] d2.utils.events INFO:  eta: 0:22:54  iter: 119  total_loss: 43.87  m1_loss_ce: 0.4862  m1_loss_mask: 0.1595  m1_loss_dice: 1.258  m1_loss_ce_0: 0.5739  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.63  m1_loss_mask_1: 0.1777  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.6024  m1_loss_mask_2: 0.169  m1_loss_dice_2: 1.334  m1_loss_ce_3: 0.5315  m1_loss_mask_3: 0.1653  m1_loss_dice_3: 1.302  m1_loss_ce_4: 0.5159  m1_loss_mask_4: 0.1648  m1_loss_dice_4: 1.246  m1_loss_ce_5: 0.4875  m1_loss_mask_5: 0.1617  m1_loss_dice_5: 1.267  m1_loss_ce_6: 0.4969  m1_loss_mask_6: 0.163  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.4864  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.247  m1_loss_ce_8: 0.4692  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.219  m2_loss_ce: 0.4613  m2_loss_mask: 0.1577  m2_loss_dice: 1.29  m2_loss_ce_0: 0.5963  m2_loss_mask_0: 0.1855  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.6251  m2_loss_mask_1: 0.1767  m2_loss_dice_1: 1.431  m2_loss_ce_2: 0.5883  m2_loss_mask_2: 0.1573  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5491  m2_loss_mask_3: 0.1577  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.4929  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.4858  m2_loss_mask_5: 0.1571  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.4914  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.4656  m2_loss_mask_7: 0.1579  m2_loss_dice_7: 1.283  m2_loss_ce_8: 0.4584  m2_loss_mask_8: 0.1569  m2_loss_dice_8: 1.265  com_loss_ce: 1.746  com_loss_mask: 0.6923  com_loss_dice: 0.9725    time: 1.5589  last_time: 1.6197  data_time: 0.0742  last_data_time: 0.0473   lr: 0.0001  max_mem: 35379M
[09/30 21:41:15] d2.utils.events INFO:  eta: 0:22:24  iter: 139  total_loss: 43.61  m1_loss_ce: 0.5373  m1_loss_mask: 0.1658  m1_loss_dice: 1.214  m1_loss_ce_0: 0.6042  m1_loss_mask_0: 0.1955  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.6944  m1_loss_mask_1: 0.1796  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.6115  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.57  m1_loss_mask_3: 0.1707  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.5611  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.5611  m1_loss_mask_5: 0.1658  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.5431  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.161  m1_loss_ce_7: 0.5315  m1_loss_mask_7: 0.1655  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5293  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.176  m2_loss_ce: 0.5234  m2_loss_mask: 0.1684  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6169  m2_loss_mask_0: 0.2046  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.699  m2_loss_mask_1: 0.1835  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.5871  m2_loss_mask_2: 0.1733  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5561  m2_loss_mask_3: 0.171  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.534  m2_loss_mask_4: 0.1696  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.528  m2_loss_mask_5: 0.1653  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4859  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.5099  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.5159  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.247  com_loss_ce: 1.796  com_loss_mask: 0.6924  com_loss_dice: 0.9706    time: 1.5586  last_time: 1.6379  data_time: 0.0590  last_data_time: 0.0530   lr: 0.0001  max_mem: 35379M
[09/30 21:41:47] d2.utils.events INFO:  eta: 0:21:54  iter: 159  total_loss: 43.19  m1_loss_ce: 0.4774  m1_loss_mask: 0.1656  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5673  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.6544  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.571  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5362  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5017  m1_loss_mask_4: 0.1672  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4847  m1_loss_mask_5: 0.1673  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4874  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4878  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4679  m1_loss_mask_8: 0.1663  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4803  m2_loss_mask: 0.1645  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6156  m2_loss_mask_0: 0.1925  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.6572  m2_loss_mask_1: 0.1764  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6077  m2_loss_mask_2: 0.1692  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.5324  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.4763  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5267  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5143  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.4962  m2_loss_mask_7: 0.1634  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4758  m2_loss_mask_8: 0.1609  m2_loss_dice_8: 1.242  com_loss_ce: 1.761  com_loss_mask: 0.6924  com_loss_dice: 0.9715    time: 1.5610  last_time: 1.6443  data_time: 0.0584  last_data_time: 0.0545   lr: 0.0001  max_mem: 35379M
[09/30 21:42:18] d2.utils.events INFO:  eta: 0:21:23  iter: 179  total_loss: 42.39  m1_loss_ce: 0.46  m1_loss_mask: 0.1684  m1_loss_dice: 1.17  m1_loss_ce_0: 0.5408  m1_loss_mask_0: 0.1854  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.6179  m1_loss_mask_1: 0.1806  m1_loss_dice_1: 1.308  m1_loss_ce_2: 0.5387  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.4701  m1_loss_mask_3: 0.1742  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4633  m1_loss_mask_4: 0.1748  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.458  m1_loss_mask_5: 0.1703  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.4467  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.4431  m1_loss_mask_7: 0.1696  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4304  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.205  m2_loss_ce: 0.4461  m2_loss_mask: 0.1659  m2_loss_dice: 1.226  m2_loss_ce_0: 0.5521  m2_loss_mask_0: 0.1914  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.6267  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.5297  m2_loss_mask_2: 0.1692  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.4995  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.4864  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.4779  m2_loss_mask_5: 0.1637  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.4626  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.188  m2_loss_ce_7: 0.4358  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.4546  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.188  com_loss_ce: 1.759  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5613  last_time: 1.5720  data_time: 0.0701  last_data_time: 0.0498   lr: 0.0001  max_mem: 35379M
[09/30 21:42:50] d2.utils.events INFO:  eta: 0:20:54  iter: 199  total_loss: 44.76  m1_loss_ce: 0.4889  m1_loss_mask: 0.1671  m1_loss_dice: 1.298  m1_loss_ce_0: 0.5834  m1_loss_mask_0: 0.1866  m1_loss_dice_0: 1.527  m1_loss_ce_1: 0.6677  m1_loss_mask_1: 0.1743  m1_loss_dice_1: 1.412  m1_loss_ce_2: 0.5857  m1_loss_mask_2: 0.1705  m1_loss_dice_2: 1.372  m1_loss_ce_3: 0.5153  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.297  m1_loss_ce_4: 0.5025  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5069  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.474  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.4985  m1_loss_mask_7: 0.1684  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.474  m1_loss_mask_8: 0.1697  m1_loss_dice_8: 1.284  m2_loss_ce: 0.4608  m2_loss_mask: 0.1608  m2_loss_dice: 1.323  m2_loss_ce_0: 0.5975  m2_loss_mask_0: 0.1891  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.6925  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.579  m2_loss_mask_2: 0.1615  m2_loss_dice_2: 1.355  m2_loss_ce_3: 0.5298  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.341  m2_loss_ce_4: 0.5009  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.317  m2_loss_ce_5: 0.4908  m2_loss_mask_5: 0.1616  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.4884  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.281  m2_loss_ce_7: 0.455  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.297  m2_loss_ce_8: 0.4677  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.274  com_loss_ce: 1.774  com_loss_mask: 0.6924  com_loss_dice: 0.9718    time: 1.5632  last_time: 1.5834  data_time: 0.0603  last_data_time: 0.0503   lr: 0.0001  max_mem: 35379M
[09/30 21:43:21] d2.utils.events INFO:  eta: 0:20:22  iter: 219  total_loss: 41.84  m1_loss_ce: 0.4593  m1_loss_mask: 0.1814  m1_loss_dice: 1.178  m1_loss_ce_0: 0.5261  m1_loss_mask_0: 0.2119  m1_loss_dice_0: 1.395  m1_loss_ce_1: 0.5977  m1_loss_mask_1: 0.1953  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5471  m1_loss_mask_2: 0.1921  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.4993  m1_loss_mask_3: 0.1897  m1_loss_dice_3: 1.191  m1_loss_ce_4: 0.4675  m1_loss_mask_4: 0.185  m1_loss_dice_4: 1.18  m1_loss_ce_5: 0.4768  m1_loss_mask_5: 0.1822  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.4592  m1_loss_mask_6: 0.1809  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4458  m1_loss_mask_7: 0.1786  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.4403  m1_loss_mask_8: 0.1814  m1_loss_dice_8: 1.178  m2_loss_ce: 0.4538  m2_loss_mask: 0.1826  m2_loss_dice: 1.186  m2_loss_ce_0: 0.5825  m2_loss_mask_0: 0.2095  m2_loss_dice_0: 1.395  m2_loss_ce_1: 0.6371  m2_loss_mask_1: 0.1963  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.5821  m2_loss_mask_2: 0.1848  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.5023  m2_loss_mask_3: 0.1831  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.4715  m2_loss_mask_4: 0.1799  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4986  m2_loss_mask_5: 0.182  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.4628  m2_loss_mask_6: 0.1796  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4777  m2_loss_mask_7: 0.1796  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.4653  m2_loss_mask_8: 0.1831  m2_loss_dice_8: 1.177  com_loss_ce: 1.759  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5633  last_time: 1.6036  data_time: 0.0688  last_data_time: 0.0481   lr: 0.0001  max_mem: 35379M
[09/30 21:43:53] d2.utils.events INFO:  eta: 0:19:53  iter: 239  total_loss: 43.81  m1_loss_ce: 0.5329  m1_loss_mask: 0.1615  m1_loss_dice: 1.212  m1_loss_ce_0: 0.5757  m1_loss_mask_0: 0.1888  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6241  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.381  m1_loss_ce_2: 0.5495  m1_loss_mask_2: 0.1657  m1_loss_dice_2: 1.339  m1_loss_ce_3: 0.5571  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.5188  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.4884  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.5187  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.4762  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.265  m1_loss_ce_8: 0.511  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.219  m2_loss_ce: 0.4838  m2_loss_mask: 0.161  m2_loss_dice: 1.242  m2_loss_ce_0: 0.5655  m2_loss_mask_0: 0.1868  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6595  m2_loss_mask_1: 0.1764  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.5511  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5487  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5407  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5198  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.504  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.4835  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4808  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.287  com_loss_ce: 1.77  com_loss_mask: 0.6924  com_loss_dice: 0.9713    time: 1.5656  last_time: 1.5989  data_time: 0.0599  last_data_time: 0.0450   lr: 0.0001  max_mem: 35699M
[09/30 21:44:25] d2.utils.events INFO:  eta: 0:19:22  iter: 259  total_loss: 43.94  m1_loss_ce: 0.5267  m1_loss_mask: 0.1775  m1_loss_dice: 1.214  m1_loss_ce_0: 0.6168  m1_loss_mask_0: 0.1993  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.6574  m1_loss_mask_1: 0.1862  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.6266  m1_loss_mask_2: 0.188  m1_loss_dice_2: 1.359  m1_loss_ce_3: 0.5663  m1_loss_mask_3: 0.1833  m1_loss_dice_3: 1.293  m1_loss_ce_4: 0.5463  m1_loss_mask_4: 0.184  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.5373  m1_loss_mask_5: 0.1799  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.5179  m1_loss_mask_6: 0.1794  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5189  m1_loss_mask_7: 0.1769  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.5072  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.241  m2_loss_ce: 0.4738  m2_loss_mask: 0.1648  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6319  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.7103  m2_loss_mask_1: 0.1829  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.6122  m2_loss_mask_2: 0.1717  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5434  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5297  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5354  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4999  m2_loss_mask_6: 0.1636  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5043  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4871  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.256  com_loss_ce: 1.788  com_loss_mask: 0.6925  com_loss_dice: 0.9723    time: 1.5668  last_time: 1.5756  data_time: 0.0606  last_data_time: 0.0749   lr: 0.0001  max_mem: 35699M
[09/30 21:44:56] d2.utils.events INFO:  eta: 0:18:51  iter: 279  total_loss: 45.74  m1_loss_ce: 0.5408  m1_loss_mask: 0.1599  m1_loss_dice: 1.277  m1_loss_ce_0: 0.5937  m1_loss_mask_0: 0.1952  m1_loss_dice_0: 1.517  m1_loss_ce_1: 0.6653  m1_loss_mask_1: 0.1713  m1_loss_dice_1: 1.445  m1_loss_ce_2: 0.598  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.376  m1_loss_ce_3: 0.5991  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.34  m1_loss_ce_4: 0.5397  m1_loss_mask_4: 0.1609  m1_loss_dice_4: 1.355  m1_loss_ce_5: 0.5354  m1_loss_mask_5: 0.1592  m1_loss_dice_5: 1.315  m1_loss_ce_6: 0.5181  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.309  m1_loss_ce_7: 0.5141  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.319  m1_loss_ce_8: 0.4917  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.299  m2_loss_ce: 0.4888  m2_loss_mask: 0.1604  m2_loss_dice: 1.316  m2_loss_ce_0: 0.6169  m2_loss_mask_0: 0.1934  m2_loss_dice_0: 1.527  m2_loss_ce_1: 0.6864  m2_loss_mask_1: 0.1802  m2_loss_dice_1: 1.449  m2_loss_ce_2: 0.5852  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.386  m2_loss_ce_3: 0.5508  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.322  m2_loss_ce_4: 0.5379  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.323  m2_loss_ce_5: 0.5178  m2_loss_mask_5: 0.1616  m2_loss_dice_5: 1.342  m2_loss_ce_6: 0.5137  m2_loss_mask_6: 0.1644  m2_loss_dice_6: 1.303  m2_loss_ce_7: 0.5147  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.289  m2_loss_ce_8: 0.5039  m2_loss_mask_8: 0.1606  m2_loss_dice_8: 1.296  com_loss_ce: 1.767  com_loss_mask: 0.6924  com_loss_dice: 0.9729    time: 1.5674  last_time: 1.5677  data_time: 0.0647  last_data_time: 0.0473   lr: 0.0001  max_mem: 35699M
[09/30 21:45:28] d2.utils.events INFO:  eta: 0:18:19  iter: 299  total_loss: 43.33  m1_loss_ce: 0.4606  m1_loss_mask: 0.1777  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5668  m1_loss_mask_0: 0.2095  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.6279  m1_loss_mask_1: 0.1909  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.5695  m1_loss_mask_2: 0.1805  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.4762  m1_loss_mask_3: 0.1823  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.4828  m1_loss_mask_4: 0.1852  m1_loss_dice_4: 1.263  m1_loss_ce_5: 0.4613  m1_loss_mask_5: 0.1784  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.4578  m1_loss_mask_6: 0.1761  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.4621  m1_loss_mask_7: 0.1784  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4565  m1_loss_mask_8: 0.1801  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4589  m2_loss_mask: 0.1748  m2_loss_dice: 1.287  m2_loss_ce_0: 0.5861  m2_loss_mask_0: 0.2117  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6611  m2_loss_mask_1: 0.2009  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.5853  m2_loss_mask_2: 0.1905  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5265  m2_loss_mask_3: 0.1817  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5115  m2_loss_mask_4: 0.1813  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.4578  m2_loss_mask_5: 0.1806  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.4706  m2_loss_mask_6: 0.183  m2_loss_dice_6: 1.303  m2_loss_ce_7: 0.479  m2_loss_mask_7: 0.1824  m2_loss_dice_7: 1.27  m2_loss_ce_8: 0.4581  m2_loss_mask_8: 0.1782  m2_loss_dice_8: 1.285  com_loss_ce: 1.743  com_loss_mask: 0.6924  com_loss_dice: 0.9702    time: 1.5673  last_time: 1.5410  data_time: 0.0582  last_data_time: 0.0849   lr: 0.0001  max_mem: 35699M
[09/30 21:45:59] d2.utils.events INFO:  eta: 0:17:49  iter: 319  total_loss: 44.55  m1_loss_ce: 0.5465  m1_loss_mask: 0.1688  m1_loss_dice: 1.275  m1_loss_ce_0: 0.5496  m1_loss_mask_0: 0.2009  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.6447  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5856  m1_loss_mask_2: 0.1843  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5366  m1_loss_mask_3: 0.1797  m1_loss_dice_3: 1.279  m1_loss_ce_4: 0.5219  m1_loss_mask_4: 0.1762  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.504  m1_loss_mask_5: 0.1716  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.5374  m1_loss_mask_6: 0.1702  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4974  m1_loss_mask_7: 0.1699  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5005  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4996  m2_loss_mask: 0.1698  m2_loss_dice: 1.272  m2_loss_ce_0: 0.6142  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6626  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.589  m2_loss_mask_2: 0.1731  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.5351  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5281  m2_loss_mask_4: 0.173  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.5261  m2_loss_mask_5: 0.1687  m2_loss_dice_5: 1.296  m2_loss_ce_6: 0.5249  m2_loss_mask_6: 0.1705  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.5238  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.27  m2_loss_ce_8: 0.4973  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.263  com_loss_ce: 1.761  com_loss_mask: 0.6924  com_loss_dice: 0.9719    time: 1.5675  last_time: 1.5273  data_time: 0.0603  last_data_time: 0.0453   lr: 0.0001  max_mem: 35699M
[09/30 21:46:31] d2.utils.events INFO:  eta: 0:17:17  iter: 339  total_loss: 43.98  m1_loss_ce: 0.4763  m1_loss_mask: 0.1797  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5362  m1_loss_mask_0: 0.2004  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.5822  m1_loss_mask_1: 0.1906  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5503  m1_loss_mask_2: 0.1753  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.51  m1_loss_mask_3: 0.1754  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.526  m1_loss_mask_4: 0.1755  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.4678  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.226  m1_loss_ce_6: 0.46  m1_loss_mask_6: 0.1766  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.4682  m1_loss_mask_7: 0.1763  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.4584  m1_loss_mask_8: 0.1767  m1_loss_dice_8: 1.233  m2_loss_ce: 0.4424  m2_loss_mask: 0.177  m2_loss_dice: 1.233  m2_loss_ce_0: 0.5728  m2_loss_mask_0: 0.2038  m2_loss_dice_0: 1.476  m2_loss_ce_1: 0.6475  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5602  m2_loss_mask_2: 0.1782  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5063  m2_loss_mask_3: 0.1799  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.4995  m2_loss_mask_4: 0.178  m2_loss_dice_4: 1.291  m2_loss_ce_5: 0.5132  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.4464  m2_loss_mask_6: 0.1751  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.4721  m2_loss_mask_7: 0.1759  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4584  m2_loss_mask_8: 0.1776  m2_loss_dice_8: 1.243  com_loss_ce: 1.752  com_loss_mask: 0.6924  com_loss_dice: 0.9707    time: 1.5679  last_time: 1.5883  data_time: 0.0712  last_data_time: 0.0575   lr: 0.0001  max_mem: 35699M
[09/30 21:47:02] d2.utils.events INFO:  eta: 0:16:46  iter: 359  total_loss: 42.73  m1_loss_ce: 0.4987  m1_loss_mask: 0.1692  m1_loss_dice: 1.209  m1_loss_ce_0: 0.5498  m1_loss_mask_0: 0.2038  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.6573  m1_loss_mask_1: 0.1848  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5901  m1_loss_mask_2: 0.1746  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.551  m1_loss_mask_3: 0.1723  m1_loss_dice_3: 1.204  m1_loss_ce_4: 0.5215  m1_loss_mask_4: 0.1656  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.5079  m1_loss_mask_5: 0.1699  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.5043  m1_loss_mask_6: 0.1683  m1_loss_dice_6: 1.176  m1_loss_ce_7: 0.504  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.191  m1_loss_ce_8: 0.5015  m1_loss_mask_8: 0.1706  m1_loss_dice_8: 1.2  m2_loss_ce: 0.4789  m2_loss_mask: 0.1675  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6142  m2_loss_mask_0: 0.209  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6452  m2_loss_mask_1: 0.1919  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5834  m2_loss_mask_2: 0.1799  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.542  m2_loss_mask_3: 0.176  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.5207  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.5176  m2_loss_mask_5: 0.1702  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4913  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4884  m2_loss_mask_7: 0.1696  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.4819  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.212  com_loss_ce: 1.766  com_loss_mask: 0.6924  com_loss_dice: 0.9704    time: 1.5680  last_time: 1.5384  data_time: 0.0650  last_data_time: 0.0540   lr: 0.0001  max_mem: 35699M
[09/30 21:47:34] d2.utils.events INFO:  eta: 0:16:15  iter: 379  total_loss: 44.31  m1_loss_ce: 0.5441  m1_loss_mask: 0.1586  m1_loss_dice: 1.27  m1_loss_ce_0: 0.6058  m1_loss_mask_0: 0.1916  m1_loss_dice_0: 1.453  m1_loss_ce_1: 0.6714  m1_loss_mask_1: 0.179  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.6179  m1_loss_mask_2: 0.1649  m1_loss_dice_2: 1.326  m1_loss_ce_3: 0.5709  m1_loss_mask_3: 0.1653  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.555  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.303  m1_loss_ce_5: 0.5414  m1_loss_mask_5: 0.1623  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.5188  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.262  m1_loss_ce_7: 0.5111  m1_loss_mask_7: 0.1618  m1_loss_dice_7: 1.247  m1_loss_ce_8: 0.5082  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.243  m2_loss_ce: 0.4904  m2_loss_mask: 0.1548  m2_loss_dice: 1.288  m2_loss_ce_0: 0.6724  m2_loss_mask_0: 0.1928  m2_loss_dice_0: 1.491  m2_loss_ce_1: 0.7165  m2_loss_mask_1: 0.1785  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.5922  m2_loss_mask_2: 0.1629  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5909  m2_loss_mask_3: 0.1603  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.5514  m2_loss_mask_4: 0.1593  m2_loss_dice_4: 1.339  m2_loss_ce_5: 0.5258  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.276  m2_loss_ce_6: 0.4961  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.5052  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.5043  m2_loss_mask_8: 0.1548  m2_loss_dice_8: 1.28  com_loss_ce: 1.777  com_loss_mask: 0.6924  com_loss_dice: 0.9744    time: 1.5680  last_time: 1.5871  data_time: 0.0720  last_data_time: 0.1312   lr: 0.0001  max_mem: 35699M
[09/30 21:48:06] d2.utils.events INFO:  eta: 0:15:43  iter: 399  total_loss: 41.99  m1_loss_ce: 0.4853  m1_loss_mask: 0.1624  m1_loss_dice: 1.186  m1_loss_ce_0: 0.5859  m1_loss_mask_0: 0.1943  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6064  m1_loss_mask_1: 0.1818  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.5585  m1_loss_mask_2: 0.1683  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.5256  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.4905  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.4978  m1_loss_mask_5: 0.1657  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.4684  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.4979  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4539  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4285  m2_loss_mask: 0.1712  m2_loss_dice: 1.226  m2_loss_ce_0: 0.5923  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.431  m2_loss_ce_1: 0.6434  m2_loss_mask_1: 0.1914  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.5764  m2_loss_mask_2: 0.1798  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5001  m2_loss_mask_3: 0.1741  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.4988  m2_loss_mask_4: 0.1732  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.4908  m2_loss_mask_5: 0.1756  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4837  m2_loss_mask_6: 0.175  m2_loss_dice_6: 1.194  m2_loss_ce_7: 0.4761  m2_loss_mask_7: 0.1735  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.464  m2_loss_mask_8: 0.1706  m2_loss_dice_8: 1.247  com_loss_ce: 1.763  com_loss_mask: 0.6924  com_loss_dice: 0.9702    time: 1.5696  last_time: 1.5983  data_time: 0.0928  last_data_time: 0.0724   lr: 0.0001  max_mem: 35699M
[09/30 21:48:38] d2.utils.events INFO:  eta: 0:15:12  iter: 419  total_loss: 42.2  m1_loss_ce: 0.4563  m1_loss_mask: 0.16  m1_loss_dice: 1.167  m1_loss_ce_0: 0.5362  m1_loss_mask_0: 0.1916  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.5761  m1_loss_mask_1: 0.1722  m1_loss_dice_1: 1.281  m1_loss_ce_2: 0.5324  m1_loss_mask_2: 0.1621  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4991  m1_loss_mask_3: 0.1641  m1_loss_dice_3: 1.188  m1_loss_ce_4: 0.4822  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.4483  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.4636  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.4607  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.16  m1_loss_ce_8: 0.4428  m1_loss_mask_8: 0.159  m1_loss_dice_8: 1.164  m2_loss_ce: 0.4632  m2_loss_mask: 0.1637  m2_loss_dice: 1.21  m2_loss_ce_0: 0.6016  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.386  m2_loss_ce_1: 0.6467  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.35  m2_loss_ce_2: 0.5858  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5254  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.18  m2_loss_ce_4: 0.5062  m2_loss_mask_4: 0.1649  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.4897  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.2  m2_loss_ce_6: 0.4797  m2_loss_mask_6: 0.1644  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.465  m2_loss_mask_7: 0.1637  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.4919  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.239  com_loss_ce: 1.748  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5705  last_time: 1.6858  data_time: 0.0900  last_data_time: 0.1597   lr: 0.0001  max_mem: 35699M
[09/30 21:49:10] d2.utils.events INFO:  eta: 0:14:40  iter: 439  total_loss: 43.58  m1_loss_ce: 0.4687  m1_loss_mask: 0.1568  m1_loss_dice: 1.21  m1_loss_ce_0: 0.5191  m1_loss_mask_0: 0.1828  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6241  m1_loss_mask_1: 0.1716  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.5586  m1_loss_mask_2: 0.1642  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.4979  m1_loss_mask_3: 0.1603  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.4751  m1_loss_mask_4: 0.1583  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.4717  m1_loss_mask_5: 0.158  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.4832  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4669  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4958  m1_loss_mask_8: 0.1593  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4628  m2_loss_mask: 0.1598  m2_loss_dice: 1.284  m2_loss_ce_0: 0.5899  m2_loss_mask_0: 0.19  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.6453  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.5797  m2_loss_mask_2: 0.1616  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5006  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5327  m2_loss_mask_4: 0.1598  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.5036  m2_loss_mask_5: 0.1569  m2_loss_dice_5: 1.296  m2_loss_ce_6: 0.4625  m2_loss_mask_6: 0.1598  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4749  m2_loss_mask_7: 0.1612  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.4703  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.273  com_loss_ce: 1.777  com_loss_mask: 0.6924  com_loss_dice: 0.9726    time: 1.5716  last_time: 1.5434  data_time: 0.0780  last_data_time: 0.0899   lr: 0.0001  max_mem: 35699M
[09/30 21:49:42] d2.utils.events INFO:  eta: 0:14:09  iter: 459  total_loss: 42.66  m1_loss_ce: 0.4741  m1_loss_mask: 0.1605  m1_loss_dice: 1.23  m1_loss_ce_0: 0.5581  m1_loss_mask_0: 0.1814  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.6153  m1_loss_mask_1: 0.1676  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.5696  m1_loss_mask_2: 0.1577  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5077  m1_loss_mask_3: 0.1611  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5036  m1_loss_mask_4: 0.1609  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.5033  m1_loss_mask_5: 0.1549  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.492  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4559  m1_loss_mask_7: 0.1555  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.5083  m1_loss_mask_8: 0.1573  m1_loss_dice_8: 1.193  m2_loss_ce: 0.4731  m2_loss_mask: 0.164  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6318  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6533  m2_loss_mask_1: 0.1811  m2_loss_dice_1: 1.405  m2_loss_ce_2: 0.6025  m2_loss_mask_2: 0.17  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5493  m2_loss_mask_3: 0.1628  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5266  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.5297  m2_loss_mask_5: 0.1574  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.5121  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5025  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4831  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.268  com_loss_ce: 1.775  com_loss_mask: 0.6924  com_loss_dice: 0.9715    time: 1.5730  last_time: 1.6493  data_time: 0.0871  last_data_time: 0.1362   lr: 0.0001  max_mem: 35699M
[09/30 21:50:14] d2.utils.events INFO:  eta: 0:13:38  iter: 479  total_loss: 42.11  m1_loss_ce: 0.5209  m1_loss_mask: 0.1623  m1_loss_dice: 1.155  m1_loss_ce_0: 0.5648  m1_loss_mask_0: 0.19  m1_loss_dice_0: 1.368  m1_loss_ce_1: 0.6471  m1_loss_mask_1: 0.1761  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.599  m1_loss_mask_2: 0.1673  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.5339  m1_loss_mask_3: 0.1708  m1_loss_dice_3: 1.213  m1_loss_ce_4: 0.5151  m1_loss_mask_4: 0.1693  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.477  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.172  m1_loss_ce_6: 0.4946  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4656  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.155  m1_loss_ce_8: 0.4584  m1_loss_mask_8: 0.1643  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4462  m2_loss_mask: 0.1682  m2_loss_dice: 1.23  m2_loss_ce_0: 0.5739  m2_loss_mask_0: 0.2003  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.653  m2_loss_mask_1: 0.1844  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.5737  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5505  m2_loss_mask_3: 0.172  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.4971  m2_loss_mask_4: 0.171  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.5059  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.4593  m2_loss_mask_6: 0.1644  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.4659  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.213  m2_loss_ce_8: 0.4544  m2_loss_mask_8: 0.1674  m2_loss_dice_8: 1.261  com_loss_ce: 1.761  com_loss_mask: 0.6924  com_loss_dice: 0.9713    time: 1.5735  last_time: 1.4719  data_time: 0.0624  last_data_time: 0.0516   lr: 0.0001  max_mem: 35699M
[09/30 21:50:45] d2.utils.events INFO:  eta: 0:13:06  iter: 499  total_loss: 42.92  m1_loss_ce: 0.4597  m1_loss_mask: 0.1546  m1_loss_dice: 1.236  m1_loss_ce_0: 0.5679  m1_loss_mask_0: 0.1816  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.6338  m1_loss_mask_1: 0.1649  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.5834  m1_loss_mask_2: 0.1603  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5093  m1_loss_mask_3: 0.1588  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.4746  m1_loss_mask_4: 0.1574  m1_loss_dice_4: 1.226  m1_loss_ce_5: 0.4976  m1_loss_mask_5: 0.1565  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4719  m1_loss_mask_6: 0.1559  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4521  m1_loss_mask_7: 0.1568  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.4698  m1_loss_mask_8: 0.1547  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4668  m2_loss_mask: 0.1628  m2_loss_dice: 1.288  m2_loss_ce_0: 0.6153  m2_loss_mask_0: 0.1954  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6638  m2_loss_mask_1: 0.1846  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.5697  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5121  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.4971  m2_loss_mask_4: 0.1645  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.4982  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.302  m2_loss_ce_6: 0.4619  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.296  m2_loss_ce_7: 0.4689  m2_loss_mask_7: 0.1634  m2_loss_dice_7: 1.268  m2_loss_ce_8: 0.4731  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.307  com_loss_ce: 1.756  com_loss_mask: 0.6924  com_loss_dice: 0.9717    time: 1.5724  last_time: 1.5786  data_time: 0.0732  last_data_time: 0.0929   lr: 0.0001  max_mem: 35699M
[09/30 21:51:16] d2.utils.events INFO:  eta: 0:12:35  iter: 519  total_loss: 44.59  m1_loss_ce: 0.5098  m1_loss_mask: 0.183  m1_loss_dice: 1.197  m1_loss_ce_0: 0.583  m1_loss_mask_0: 0.21  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.633  m1_loss_mask_1: 0.1971  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.5706  m1_loss_mask_2: 0.1841  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.5225  m1_loss_mask_3: 0.1803  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5108  m1_loss_mask_4: 0.1854  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.5169  m1_loss_mask_5: 0.1814  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4801  m1_loss_mask_6: 0.1829  m1_loss_dice_6: 1.178  m1_loss_ce_7: 0.5021  m1_loss_mask_7: 0.1828  m1_loss_dice_7: 1.229  m1_loss_ce_8: 0.495  m1_loss_mask_8: 0.1849  m1_loss_dice_8: 1.188  m2_loss_ce: 0.5044  m2_loss_mask: 0.1828  m2_loss_dice: 1.268  m2_loss_ce_0: 0.639  m2_loss_mask_0: 0.2139  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6891  m2_loss_mask_1: 0.2045  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.5935  m2_loss_mask_2: 0.188  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.5726  m2_loss_mask_3: 0.1868  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5406  m2_loss_mask_4: 0.184  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.5095  m2_loss_mask_5: 0.1806  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.5201  m2_loss_mask_6: 0.1806  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.5212  m2_loss_mask_7: 0.1824  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.5208  m2_loss_mask_8: 0.1818  m2_loss_dice_8: 1.232  com_loss_ce: 1.783  com_loss_mask: 0.6924  com_loss_dice: 0.9715    time: 1.5724  last_time: 1.6093  data_time: 0.0720  last_data_time: 0.0534   lr: 0.0001  max_mem: 35699M
[09/30 21:51:48] d2.utils.events INFO:  eta: 0:12:03  iter: 539  total_loss: 43.97  m1_loss_ce: 0.4957  m1_loss_mask: 0.1613  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5467  m1_loss_mask_0: 0.1925  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.5922  m1_loss_mask_1: 0.181  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.5897  m1_loss_mask_2: 0.1651  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5103  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.4965  m1_loss_mask_4: 0.1645  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.5175  m1_loss_mask_5: 0.1612  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.4601  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4409  m1_loss_mask_7: 0.1611  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.4426  m1_loss_mask_8: 0.159  m1_loss_dice_8: 1.223  m2_loss_ce: 0.482  m2_loss_mask: 0.1703  m2_loss_dice: 1.294  m2_loss_ce_0: 0.6069  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6904  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.5888  m2_loss_mask_2: 0.1734  m2_loss_dice_2: 1.366  m2_loss_ce_3: 0.5537  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5161  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.503  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.4796  m2_loss_mask_6: 0.171  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.4715  m2_loss_mask_7: 0.1713  m2_loss_dice_7: 1.256  m2_loss_ce_8: 0.4763  m2_loss_mask_8: 0.1696  m2_loss_dice_8: 1.285  com_loss_ce: 1.786  com_loss_mask: 0.6924  com_loss_dice: 0.9717    time: 1.5722  last_time: 1.6096  data_time: 0.0666  last_data_time: 0.1218   lr: 0.0001  max_mem: 35699M
[09/30 21:52:20] d2.utils.events INFO:  eta: 0:11:32  iter: 559  total_loss: 42.72  m1_loss_ce: 0.4416  m1_loss_mask: 0.1657  m1_loss_dice: 1.219  m1_loss_ce_0: 0.5861  m1_loss_mask_0: 0.1811  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6136  m1_loss_mask_1: 0.1768  m1_loss_dice_1: 1.396  m1_loss_ce_2: 0.5696  m1_loss_mask_2: 0.1663  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.519  m1_loss_mask_3: 0.1635  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.4912  m1_loss_mask_4: 0.1664  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4787  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.477  m1_loss_mask_6: 0.1675  m1_loss_dice_6: 1.274  m1_loss_ce_7: 0.4744  m1_loss_mask_7: 0.1646  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.4222  m1_loss_mask_8: 0.1667  m1_loss_dice_8: 1.236  m2_loss_ce: 0.4427  m2_loss_mask: 0.1654  m2_loss_dice: 1.299  m2_loss_ce_0: 0.6076  m2_loss_mask_0: 0.2007  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.6135  m2_loss_mask_1: 0.1857  m2_loss_dice_1: 1.409  m2_loss_ce_2: 0.5401  m2_loss_mask_2: 0.1722  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5233  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.4783  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.4757  m2_loss_mask_5: 0.1637  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.4492  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.445  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.4315  m2_loss_mask_8: 0.1673  m2_loss_dice_8: 1.264  com_loss_ce: 1.775  com_loss_mask: 0.6924  com_loss_dice: 0.9721    time: 1.5727  last_time: 1.5812  data_time: 0.0908  last_data_time: 0.0876   lr: 0.0001  max_mem: 35699M
[09/30 21:52:52] d2.utils.events INFO:  eta: 0:11:01  iter: 579  total_loss: 43.7  m1_loss_ce: 0.4942  m1_loss_mask: 0.1607  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5882  m1_loss_mask_0: 0.1833  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6269  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.5866  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5627  m1_loss_mask_3: 0.1678  m1_loss_dice_3: 1.285  m1_loss_ce_4: 0.467  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.266  m1_loss_ce_5: 0.4889  m1_loss_mask_5: 0.1659  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.4714  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.245  m1_loss_ce_7: 0.4659  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.4538  m1_loss_mask_8: 0.1609  m1_loss_dice_8: 1.216  m2_loss_ce: 0.5029  m2_loss_mask: 0.1567  m2_loss_dice: 1.271  m2_loss_ce_0: 0.6201  m2_loss_mask_0: 0.1874  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6782  m2_loss_mask_1: 0.1742  m2_loss_dice_1: 1.423  m2_loss_ce_2: 0.5882  m2_loss_mask_2: 0.1604  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5226  m2_loss_mask_3: 0.1597  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5307  m2_loss_mask_4: 0.1569  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5263  m2_loss_mask_5: 0.1548  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.4958  m2_loss_mask_6: 0.156  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.4879  m2_loss_mask_7: 0.1565  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.5044  m2_loss_mask_8: 0.1555  m2_loss_dice_8: 1.255  com_loss_ce: 1.775  com_loss_mask: 0.6924  com_loss_dice: 0.971    time: 1.5734  last_time: 1.5666  data_time: 0.0941  last_data_time: 0.0477   lr: 0.0001  max_mem: 35699M
[09/30 21:53:24] d2.utils.events INFO:  eta: 0:10:29  iter: 599  total_loss: 42.16  m1_loss_ce: 0.477  m1_loss_mask: 0.154  m1_loss_dice: 1.196  m1_loss_ce_0: 0.567  m1_loss_mask_0: 0.1777  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.618  m1_loss_mask_1: 0.1655  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5538  m1_loss_mask_2: 0.1589  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.5217  m1_loss_mask_3: 0.1603  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.4735  m1_loss_mask_4: 0.1573  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.495  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.4496  m1_loss_mask_6: 0.1565  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4353  m1_loss_mask_7: 0.1549  m1_loss_dice_7: 1.177  m1_loss_ce_8: 0.4273  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.191  m2_loss_ce: 0.4466  m2_loss_mask: 0.155  m2_loss_dice: 1.26  m2_loss_ce_0: 0.5647  m2_loss_mask_0: 0.1813  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6356  m2_loss_mask_1: 0.1679  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.5561  m2_loss_mask_2: 0.16  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5171  m2_loss_mask_3: 0.1577  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.4928  m2_loss_mask_4: 0.1573  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.4917  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.4368  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4458  m2_loss_mask_7: 0.159  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.431  m2_loss_mask_8: 0.1572  m2_loss_dice_8: 1.262  com_loss_ce: 1.784  com_loss_mask: 0.6924  com_loss_dice: 0.9722    time: 1.5741  last_time: 1.5317  data_time: 0.0838  last_data_time: 0.0579   lr: 0.0001  max_mem: 35699M
[09/30 21:53:55] d2.utils.events INFO:  eta: 0:09:58  iter: 619  total_loss: 42.79  m1_loss_ce: 0.4705  m1_loss_mask: 0.1761  m1_loss_dice: 1.199  m1_loss_ce_0: 0.5407  m1_loss_mask_0: 0.2063  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.5756  m1_loss_mask_1: 0.191  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5526  m1_loss_mask_2: 0.1864  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.4943  m1_loss_mask_3: 0.1786  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.4711  m1_loss_mask_4: 0.1772  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4804  m1_loss_mask_5: 0.1774  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4734  m1_loss_mask_6: 0.1781  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4626  m1_loss_mask_7: 0.1803  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.436  m1_loss_mask_8: 0.1781  m1_loss_dice_8: 1.188  m2_loss_ce: 0.4714  m2_loss_mask: 0.1815  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5953  m2_loss_mask_0: 0.2123  m2_loss_dice_0: 1.382  m2_loss_ce_1: 0.6593  m2_loss_mask_1: 0.2002  m2_loss_dice_1: 1.308  m2_loss_ce_2: 0.593  m2_loss_mask_2: 0.1866  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.5512  m2_loss_mask_3: 0.1845  m2_loss_dice_3: 1.197  m2_loss_ce_4: 0.5158  m2_loss_mask_4: 0.181  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.4925  m2_loss_mask_5: 0.1805  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4684  m2_loss_mask_6: 0.1828  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.4835  m2_loss_mask_7: 0.1821  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4627  m2_loss_mask_8: 0.1808  m2_loss_dice_8: 1.195  com_loss_ce: 1.771  com_loss_mask: 0.6924  com_loss_dice: 0.9697    time: 1.5742  last_time: 1.5446  data_time: 0.0798  last_data_time: 0.0558   lr: 0.0001  max_mem: 35699M
[09/30 21:54:27] d2.utils.events INFO:  eta: 0:09:26  iter: 639  total_loss: 43.33  m1_loss_ce: 0.4555  m1_loss_mask: 0.175  m1_loss_dice: 1.232  m1_loss_ce_0: 0.6404  m1_loss_mask_0: 0.1982  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6725  m1_loss_mask_1: 0.1845  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.6034  m1_loss_mask_2: 0.177  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.5436  m1_loss_mask_3: 0.1745  m1_loss_dice_3: 1.281  m1_loss_ce_4: 0.5099  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.534  m1_loss_mask_5: 0.1715  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.4938  m1_loss_mask_6: 0.1751  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.4955  m1_loss_mask_7: 0.1741  m1_loss_dice_7: 1.241  m1_loss_ce_8: 0.4957  m1_loss_mask_8: 0.1744  m1_loss_dice_8: 1.19  m2_loss_ce: 0.4661  m2_loss_mask: 0.1697  m2_loss_dice: 1.294  m2_loss_ce_0: 0.6301  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.6774  m2_loss_mask_1: 0.1889  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.6067  m2_loss_mask_2: 0.1729  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5514  m2_loss_mask_3: 0.1774  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.5171  m2_loss_mask_4: 0.172  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5225  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.4785  m2_loss_mask_6: 0.173  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.48  m2_loss_mask_7: 0.1715  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.4865  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.21  com_loss_ce: 1.794  com_loss_mask: 0.6924  com_loss_dice: 0.9718    time: 1.5744  last_time: 1.4815  data_time: 0.0721  last_data_time: 0.0608   lr: 0.0001  max_mem: 35699M
[09/30 21:54:59] d2.utils.events INFO:  eta: 0:08:55  iter: 659  total_loss: 43.46  m1_loss_ce: 0.4717  m1_loss_mask: 0.165  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5741  m1_loss_mask_0: 0.1842  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6462  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.5792  m1_loss_mask_2: 0.1621  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5087  m1_loss_mask_3: 0.1641  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.497  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.4768  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.4645  m1_loss_mask_6: 0.1662  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.4717  m1_loss_mask_7: 0.1678  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4699  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4918  m2_loss_mask: 0.1602  m2_loss_dice: 1.204  m2_loss_ce_0: 0.5877  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.6805  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.6153  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5256  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.311  m2_loss_ce_4: 0.4946  m2_loss_mask_4: 0.1571  m2_loss_dice_4: 1.297  m2_loss_ce_5: 0.4973  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.5088  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.228  m2_loss_ce_7: 0.4869  m2_loss_mask_7: 0.1627  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.4799  m2_loss_mask_8: 0.1616  m2_loss_dice_8: 1.235  com_loss_ce: 1.777  com_loss_mask: 0.6924  com_loss_dice: 0.9726    time: 1.5752  last_time: 1.6039  data_time: 0.0859  last_data_time: 0.0602   lr: 0.0001  max_mem: 35699M
[09/30 21:55:31] d2.utils.events INFO:  eta: 0:08:24  iter: 679  total_loss: 44.53  m1_loss_ce: 0.5118  m1_loss_mask: 0.1598  m1_loss_dice: 1.259  m1_loss_ce_0: 0.5865  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.6628  m1_loss_mask_1: 0.1722  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.6056  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.5527  m1_loss_mask_3: 0.1628  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.4969  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.4797  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.291  m1_loss_ce_6: 0.5188  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.4987  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.4985  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.26  m2_loss_ce: 0.4743  m2_loss_mask: 0.1706  m2_loss_dice: 1.337  m2_loss_ce_0: 0.6558  m2_loss_mask_0: 0.1923  m2_loss_dice_0: 1.516  m2_loss_ce_1: 0.6831  m2_loss_mask_1: 0.1877  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.5957  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.387  m2_loss_ce_3: 0.5454  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.365  m2_loss_ce_4: 0.5519  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.314  m2_loss_ce_5: 0.5388  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.5339  m2_loss_mask_6: 0.1726  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.5171  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.319  m2_loss_ce_8: 0.541  m2_loss_mask_8: 0.1695  m2_loss_dice_8: 1.346  com_loss_ce: 1.786  com_loss_mask: 0.6924  com_loss_dice: 0.9719    time: 1.5755  last_time: 1.5952  data_time: 0.0848  last_data_time: 0.0464   lr: 0.0001  max_mem: 35699M
[09/30 21:56:03] d2.utils.events INFO:  eta: 0:07:52  iter: 699  total_loss: 43.04  m1_loss_ce: 0.4975  m1_loss_mask: 0.1604  m1_loss_dice: 1.278  m1_loss_ce_0: 0.575  m1_loss_mask_0: 0.1798  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.6453  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.5791  m1_loss_mask_2: 0.1657  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.5268  m1_loss_mask_3: 0.1596  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5083  m1_loss_mask_4: 0.1622  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.5315  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.27  m1_loss_ce_6: 0.4826  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4678  m1_loss_mask_7: 0.1594  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.4655  m1_loss_mask_8: 0.1584  m1_loss_dice_8: 1.243  m2_loss_ce: 0.5208  m2_loss_mask: 0.1711  m2_loss_dice: 1.342  m2_loss_ce_0: 0.6141  m2_loss_mask_0: 0.2061  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.7101  m2_loss_mask_1: 0.1943  m2_loss_dice_1: 1.422  m2_loss_ce_2: 0.6307  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5498  m2_loss_mask_3: 0.176  m2_loss_dice_3: 1.343  m2_loss_ce_4: 0.5269  m2_loss_mask_4: 0.1742  m2_loss_dice_4: 1.32  m2_loss_ce_5: 0.5343  m2_loss_mask_5: 0.1732  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5072  m2_loss_mask_6: 0.1749  m2_loss_dice_6: 1.334  m2_loss_ce_7: 0.5295  m2_loss_mask_7: 0.1757  m2_loss_dice_7: 1.35  m2_loss_ce_8: 0.5228  m2_loss_mask_8: 0.1695  m2_loss_dice_8: 1.326  com_loss_ce: 1.788  com_loss_mask: 0.6924  com_loss_dice: 0.9708    time: 1.5759  last_time: 1.7108  data_time: 0.0708  last_data_time: 0.1045   lr: 0.0001  max_mem: 35699M
[09/30 21:56:35] d2.utils.events INFO:  eta: 0:07:21  iter: 719  total_loss: 44.05  m1_loss_ce: 0.4805  m1_loss_mask: 0.1818  m1_loss_dice: 1.225  m1_loss_ce_0: 0.5877  m1_loss_mask_0: 0.206  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.5905  m1_loss_mask_1: 0.1929  m1_loss_dice_1: 1.356  m1_loss_ce_2: 0.5409  m1_loss_mask_2: 0.1807  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.523  m1_loss_mask_3: 0.1775  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.467  m1_loss_mask_4: 0.1825  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.4407  m1_loss_mask_5: 0.1801  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.4389  m1_loss_mask_6: 0.1814  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.448  m1_loss_mask_7: 0.1804  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4354  m1_loss_mask_8: 0.1796  m1_loss_dice_8: 1.235  m2_loss_ce: 0.4789  m2_loss_mask: 0.1722  m2_loss_dice: 1.276  m2_loss_ce_0: 0.6368  m2_loss_mask_0: 0.2013  m2_loss_dice_0: 1.51  m2_loss_ce_1: 0.6525  m2_loss_mask_1: 0.1918  m2_loss_dice_1: 1.425  m2_loss_ce_2: 0.567  m2_loss_mask_2: 0.1789  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5094  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.5301  m2_loss_mask_4: 0.1747  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5063  m2_loss_mask_5: 0.1724  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4901  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.4941  m2_loss_mask_7: 0.1725  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4996  m2_loss_mask_8: 0.1731  m2_loss_dice_8: 1.26  com_loss_ce: 1.778  com_loss_mask: 0.6924  com_loss_dice: 0.9714    time: 1.5766  last_time: 1.6262  data_time: 0.0953  last_data_time: 0.0543   lr: 0.0001  max_mem: 35845M
[09/30 21:57:07] d2.utils.events INFO:  eta: 0:06:49  iter: 739  total_loss: 42.84  m1_loss_ce: 0.451  m1_loss_mask: 0.1597  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5307  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.5846  m1_loss_mask_1: 0.1772  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.5486  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.4871  m1_loss_mask_3: 0.1645  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.4823  m1_loss_mask_4: 0.1639  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.4697  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.4626  m1_loss_mask_6: 0.1629  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.4549  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.4406  m1_loss_mask_8: 0.1588  m1_loss_dice_8: 1.191  m2_loss_ce: 0.4439  m2_loss_mask: 0.1596  m2_loss_dice: 1.27  m2_loss_ce_0: 0.5348  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.6323  m2_loss_mask_1: 0.179  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.5547  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.4891  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.4853  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.4701  m2_loss_mask_5: 0.1613  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4545  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.4527  m2_loss_mask_7: 0.1622  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4209  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.254  com_loss_ce: 1.767  com_loss_mask: 0.6924  com_loss_dice: 0.9717    time: 1.5768  last_time: 1.5563  data_time: 0.0730  last_data_time: 0.0737   lr: 0.0001  max_mem: 35845M
[09/30 21:57:38] d2.utils.events INFO:  eta: 0:06:18  iter: 759  total_loss: 45.83  m1_loss_ce: 0.4904  m1_loss_mask: 0.1604  m1_loss_dice: 1.328  m1_loss_ce_0: 0.5597  m1_loss_mask_0: 0.1917  m1_loss_dice_0: 1.598  m1_loss_ce_1: 0.6281  m1_loss_mask_1: 0.1758  m1_loss_dice_1: 1.505  m1_loss_ce_2: 0.6365  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.412  m1_loss_ce_3: 0.5624  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.361  m1_loss_ce_4: 0.504  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.331  m1_loss_ce_5: 0.4949  m1_loss_mask_5: 0.1618  m1_loss_dice_5: 1.343  m1_loss_ce_6: 0.4718  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.319  m1_loss_ce_7: 0.48  m1_loss_mask_7: 0.1622  m1_loss_dice_7: 1.329  m1_loss_ce_8: 0.486  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.312  m2_loss_ce: 0.5075  m2_loss_mask: 0.1716  m2_loss_dice: 1.466  m2_loss_ce_0: 0.6284  m2_loss_mask_0: 0.204  m2_loss_dice_0: 1.651  m2_loss_ce_1: 0.6784  m2_loss_mask_1: 0.1874  m2_loss_dice_1: 1.529  m2_loss_ce_2: 0.6185  m2_loss_mask_2: 0.1769  m2_loss_dice_2: 1.465  m2_loss_ce_3: 0.5528  m2_loss_mask_3: 0.174  m2_loss_dice_3: 1.398  m2_loss_ce_4: 0.5525  m2_loss_mask_4: 0.1715  m2_loss_dice_4: 1.431  m2_loss_ce_5: 0.5572  m2_loss_mask_5: 0.1706  m2_loss_dice_5: 1.434  m2_loss_ce_6: 0.5301  m2_loss_mask_6: 0.1727  m2_loss_dice_6: 1.376  m2_loss_ce_7: 0.5212  m2_loss_mask_7: 0.173  m2_loss_dice_7: 1.396  m2_loss_ce_8: 0.5045  m2_loss_mask_8: 0.1705  m2_loss_dice_8: 1.414  com_loss_ce: 1.798  com_loss_mask: 0.6924  com_loss_dice: 0.9737    time: 1.5767  last_time: 1.5586  data_time: 0.0740  last_data_time: 0.0579   lr: 0.0001  max_mem: 35845M
[09/30 21:58:10] d2.utils.events INFO:  eta: 0:05:46  iter: 779  total_loss: 42.2  m1_loss_ce: 0.4568  m1_loss_mask: 0.1569  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5271  m1_loss_mask_0: 0.1789  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.5992  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.29  m1_loss_ce_2: 0.5681  m1_loss_mask_2: 0.1586  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.4978  m1_loss_mask_3: 0.1567  m1_loss_dice_3: 1.177  m1_loss_ce_4: 0.4778  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.4691  m1_loss_mask_5: 0.1554  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.4663  m1_loss_mask_6: 0.1585  m1_loss_dice_6: 1.175  m1_loss_ce_7: 0.4346  m1_loss_mask_7: 0.1524  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4383  m1_loss_mask_8: 0.1527  m1_loss_dice_8: 1.146  m2_loss_ce: 0.4322  m2_loss_mask: 0.1655  m2_loss_dice: 1.247  m2_loss_ce_0: 0.5866  m2_loss_mask_0: 0.1912  m2_loss_dice_0: 1.43  m2_loss_ce_1: 0.6723  m2_loss_mask_1: 0.1907  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.6224  m2_loss_mask_2: 0.168  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5446  m2_loss_mask_3: 0.1656  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5162  m2_loss_mask_4: 0.1639  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5052  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.5016  m2_loss_mask_6: 0.1616  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.5034  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.4869  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.211  com_loss_ce: 1.787  com_loss_mask: 0.6925  com_loss_dice: 0.9706    time: 1.5769  last_time: 1.6199  data_time: 0.0687  last_data_time: 0.0596   lr: 0.0001  max_mem: 35845M
[09/30 21:58:41] d2.utils.events INFO:  eta: 0:05:15  iter: 799  total_loss: 43.28  m1_loss_ce: 0.4791  m1_loss_mask: 0.1636  m1_loss_dice: 1.225  m1_loss_ce_0: 0.6214  m1_loss_mask_0: 0.1811  m1_loss_dice_0: 1.394  m1_loss_ce_1: 0.6059  m1_loss_mask_1: 0.173  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5607  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.4932  m1_loss_mask_3: 0.1629  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.4725  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.4647  m1_loss_mask_5: 0.164  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.4474  m1_loss_mask_6: 0.1642  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4655  m1_loss_mask_7: 0.1654  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.4685  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4921  m2_loss_mask: 0.1753  m2_loss_dice: 1.27  m2_loss_ce_0: 0.6299  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6942  m2_loss_mask_1: 0.1903  m2_loss_dice_1: 1.422  m2_loss_ce_2: 0.6217  m2_loss_mask_2: 0.1849  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5505  m2_loss_mask_3: 0.1805  m2_loss_dice_3: 1.302  m2_loss_ce_4: 0.547  m2_loss_mask_4: 0.1746  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.5492  m2_loss_mask_5: 0.1718  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.5213  m2_loss_mask_6: 0.1725  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.5207  m2_loss_mask_7: 0.1732  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.5114  m2_loss_mask_8: 0.175  m2_loss_dice_8: 1.278  com_loss_ce: 1.787  com_loss_mask: 0.6924  com_loss_dice: 0.9722    time: 1.5763  last_time: 1.5972  data_time: 0.0685  last_data_time: 0.0420   lr: 0.0001  max_mem: 35845M
[09/30 21:59:13] d2.utils.events INFO:  eta: 0:04:43  iter: 819  total_loss: 42.68  m1_loss_ce: 0.4491  m1_loss_mask: 0.1742  m1_loss_dice: 1.205  m1_loss_ce_0: 0.586  m1_loss_mask_0: 0.2036  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.5965  m1_loss_mask_1: 0.1861  m1_loss_dice_1: 1.274  m1_loss_ce_2: 0.5589  m1_loss_mask_2: 0.183  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.4885  m1_loss_mask_3: 0.1828  m1_loss_dice_3: 1.2  m1_loss_ce_4: 0.4716  m1_loss_mask_4: 0.1781  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.453  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.464  m1_loss_mask_6: 0.1764  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4385  m1_loss_mask_7: 0.1755  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4568  m1_loss_mask_8: 0.1756  m1_loss_dice_8: 1.176  m2_loss_ce: 0.4686  m2_loss_mask: 0.1836  m2_loss_dice: 1.217  m2_loss_ce_0: 0.5816  m2_loss_mask_0: 0.2141  m2_loss_dice_0: 1.419  m2_loss_ce_1: 0.6429  m2_loss_mask_1: 0.1965  m2_loss_dice_1: 1.33  m2_loss_ce_2: 0.5593  m2_loss_mask_2: 0.1887  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.5402  m2_loss_mask_3: 0.1834  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5161  m2_loss_mask_4: 0.1829  m2_loss_dice_4: 1.199  m2_loss_ce_5: 0.4865  m2_loss_mask_5: 0.1815  m2_loss_dice_5: 1.198  m2_loss_ce_6: 0.4714  m2_loss_mask_6: 0.1802  m2_loss_dice_6: 1.192  m2_loss_ce_7: 0.4933  m2_loss_mask_7: 0.1813  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4983  m2_loss_mask_8: 0.1808  m2_loss_dice_8: 1.192  com_loss_ce: 1.771  com_loss_mask: 0.6924  com_loss_dice: 0.9689    time: 1.5764  last_time: 1.5894  data_time: 0.0727  last_data_time: 0.0492   lr: 0.0001  max_mem: 35845M
[09/30 21:59:45] d2.utils.events INFO:  eta: 0:04:12  iter: 839  total_loss: 42.01  m1_loss_ce: 0.4581  m1_loss_mask: 0.1652  m1_loss_dice: 1.162  m1_loss_ce_0: 0.5522  m1_loss_mask_0: 0.1942  m1_loss_dice_0: 1.383  m1_loss_ce_1: 0.5898  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.5322  m1_loss_mask_2: 0.1721  m1_loss_dice_2: 1.25  m1_loss_ce_3: 0.4803  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.16  m1_loss_ce_4: 0.4554  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.166  m1_loss_ce_5: 0.4641  m1_loss_mask_5: 0.1659  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.4657  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.152  m1_loss_ce_7: 0.4431  m1_loss_mask_7: 0.1671  m1_loss_dice_7: 1.138  m1_loss_ce_8: 0.4334  m1_loss_mask_8: 0.1671  m1_loss_dice_8: 1.19  m2_loss_ce: 0.4702  m2_loss_mask: 0.1597  m2_loss_dice: 1.198  m2_loss_ce_0: 0.5865  m2_loss_mask_0: 0.1941  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6605  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.576  m2_loss_mask_2: 0.1666  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5176  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5118  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.4905  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4623  m2_loss_mask_6: 0.1614  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.493  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.4571  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.236  com_loss_ce: 1.777  com_loss_mask: 0.6925  com_loss_dice: 0.9711    time: 1.5768  last_time: 1.5776  data_time: 0.0750  last_data_time: 0.0646   lr: 0.0001  max_mem: 35845M
[09/30 22:00:17] d2.utils.events INFO:  eta: 0:03:40  iter: 859  total_loss: 45.41  m1_loss_ce: 0.4561  m1_loss_mask: 0.1601  m1_loss_dice: 1.315  m1_loss_ce_0: 0.5235  m1_loss_mask_0: 0.1853  m1_loss_dice_0: 1.528  m1_loss_ce_1: 0.5953  m1_loss_mask_1: 0.1724  m1_loss_dice_1: 1.461  m1_loss_ce_2: 0.5352  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.399  m1_loss_ce_3: 0.4825  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.311  m1_loss_ce_4: 0.4451  m1_loss_mask_4: 0.1625  m1_loss_dice_4: 1.338  m1_loss_ce_5: 0.4648  m1_loss_mask_5: 0.1625  m1_loss_dice_5: 1.304  m1_loss_ce_6: 0.4265  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.303  m1_loss_ce_7: 0.4401  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.319  m1_loss_ce_8: 0.4494  m1_loss_mask_8: 0.1606  m1_loss_dice_8: 1.298  m2_loss_ce: 0.4956  m2_loss_mask: 0.1681  m2_loss_dice: 1.389  m2_loss_ce_0: 0.6074  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.597  m2_loss_ce_1: 0.6839  m2_loss_mask_1: 0.1856  m2_loss_dice_1: 1.487  m2_loss_ce_2: 0.597  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.456  m2_loss_ce_3: 0.5314  m2_loss_mask_3: 0.1754  m2_loss_dice_3: 1.389  m2_loss_ce_4: 0.5424  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.386  m2_loss_ce_5: 0.5327  m2_loss_mask_5: 0.163  m2_loss_dice_5: 1.348  m2_loss_ce_6: 0.5219  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.358  m2_loss_ce_7: 0.5327  m2_loss_mask_7: 0.17  m2_loss_dice_7: 1.354  m2_loss_ce_8: 0.5148  m2_loss_mask_8: 0.1676  m2_loss_dice_8: 1.371  com_loss_ce: 1.773  com_loss_mask: 0.6924  com_loss_dice: 0.9745    time: 1.5777  last_time: 1.5902  data_time: 0.0914  last_data_time: 0.0539   lr: 0.0001  max_mem: 35845M
[09/30 22:00:49] d2.utils.events INFO:  eta: 0:03:09  iter: 879  total_loss: 42.66  m1_loss_ce: 0.4723  m1_loss_mask: 0.1732  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5675  m1_loss_mask_0: 0.1857  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.5805  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5622  m1_loss_mask_2: 0.1733  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.4914  m1_loss_mask_3: 0.1707  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.4877  m1_loss_mask_4: 0.1718  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.4936  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.4623  m1_loss_mask_6: 0.1734  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4678  m1_loss_mask_7: 0.1702  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4499  m1_loss_mask_8: 0.1714  m1_loss_dice_8: 1.196  m2_loss_ce: 0.4943  m2_loss_mask: 0.1692  m2_loss_dice: 1.269  m2_loss_ce_0: 0.6237  m2_loss_mask_0: 0.1941  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.672  m2_loss_mask_1: 0.1837  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.5539  m2_loss_mask_2: 0.1782  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.5334  m2_loss_mask_3: 0.1709  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5292  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5024  m2_loss_mask_5: 0.1681  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4993  m2_loss_mask_6: 0.1695  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4858  m2_loss_mask_7: 0.1701  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.4896  m2_loss_mask_8: 0.1705  m2_loss_dice_8: 1.274  com_loss_ce: 1.782  com_loss_mask: 0.6924  com_loss_dice: 0.9704    time: 1.5779  last_time: 1.6508  data_time: 0.0852  last_data_time: 0.0906   lr: 0.0001  max_mem: 35845M
[09/30 22:01:21] d2.utils.events INFO:  eta: 0:02:37  iter: 899  total_loss: 42.78  m1_loss_ce: 0.4616  m1_loss_mask: 0.1761  m1_loss_dice: 1.162  m1_loss_ce_0: 0.5461  m1_loss_mask_0: 0.1996  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.5976  m1_loss_mask_1: 0.1919  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.5709  m1_loss_mask_2: 0.1823  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.4599  m1_loss_mask_3: 0.1858  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.4434  m1_loss_mask_4: 0.1747  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.4591  m1_loss_mask_5: 0.1792  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4645  m1_loss_mask_6: 0.1795  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.4365  m1_loss_mask_7: 0.1779  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4034  m1_loss_mask_8: 0.1769  m1_loss_dice_8: 1.202  m2_loss_ce: 0.5092  m2_loss_mask: 0.176  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6011  m2_loss_mask_0: 0.2157  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6586  m2_loss_mask_1: 0.1978  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.5849  m2_loss_mask_2: 0.1872  m2_loss_dice_2: 1.292  m2_loss_ce_3: 0.5562  m2_loss_mask_3: 0.1802  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5364  m2_loss_mask_4: 0.1834  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5104  m2_loss_mask_5: 0.1835  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4727  m2_loss_mask_6: 0.1766  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.4996  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.4939  m2_loss_mask_8: 0.1764  m2_loss_dice_8: 1.25  com_loss_ce: 1.777  com_loss_mask: 0.6924  com_loss_dice: 0.9696    time: 1.5782  last_time: 1.6608  data_time: 0.0933  last_data_time: 0.2419   lr: 0.0001  max_mem: 35845M
[09/30 22:01:53] d2.utils.events INFO:  eta: 0:02:06  iter: 919  total_loss: 42.81  m1_loss_ce: 0.4515  m1_loss_mask: 0.1628  m1_loss_dice: 1.159  m1_loss_ce_0: 0.5761  m1_loss_mask_0: 0.1836  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.5924  m1_loss_mask_1: 0.1743  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.5694  m1_loss_mask_2: 0.1684  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.5284  m1_loss_mask_3: 0.1681  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4889  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.484  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.148  m1_loss_ce_6: 0.4415  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.157  m1_loss_ce_7: 0.4375  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.146  m1_loss_ce_8: 0.4437  m1_loss_mask_8: 0.1636  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4817  m2_loss_mask: 0.167  m2_loss_dice: 1.208  m2_loss_ce_0: 0.5907  m2_loss_mask_0: 0.2051  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6546  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.5541  m2_loss_mask_2: 0.1668  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.5172  m2_loss_mask_3: 0.1624  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.5211  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.227  m2_loss_ce_5: 0.5212  m2_loss_mask_5: 0.1644  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.4795  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4666  m2_loss_mask_7: 0.1684  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.4568  m2_loss_mask_8: 0.1664  m2_loss_dice_8: 1.219  com_loss_ce: 1.785  com_loss_mask: 0.6924  com_loss_dice: 0.9705    time: 1.5782  last_time: 1.5344  data_time: 0.0820  last_data_time: 0.0642   lr: 0.0001  max_mem: 35845M
[09/30 22:02:25] d2.utils.events INFO:  eta: 0:01:34  iter: 939  total_loss: 43.7  m1_loss_ce: 0.4672  m1_loss_mask: 0.1682  m1_loss_dice: 1.24  m1_loss_ce_0: 0.5555  m1_loss_mask_0: 0.1914  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.5981  m1_loss_mask_1: 0.1777  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.5313  m1_loss_mask_2: 0.1693  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.536  m1_loss_mask_3: 0.1651  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.5043  m1_loss_mask_4: 0.1685  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.485  m1_loss_mask_5: 0.1653  m1_loss_dice_5: 1.269  m1_loss_ce_6: 0.4648  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.4378  m1_loss_mask_7: 0.1664  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.4342  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.236  m2_loss_ce: 0.4411  m2_loss_mask: 0.1668  m2_loss_dice: 1.272  m2_loss_ce_0: 0.5786  m2_loss_mask_0: 0.1996  m2_loss_dice_0: 1.509  m2_loss_ce_1: 0.6915  m2_loss_mask_1: 0.1824  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.5788  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.359  m2_loss_ce_3: 0.5159  m2_loss_mask_3: 0.1689  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5321  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.493  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.4796  m2_loss_mask_6: 0.1699  m2_loss_dice_6: 1.268  m2_loss_ce_7: 0.4917  m2_loss_mask_7: 0.1709  m2_loss_dice_7: 1.293  m2_loss_ce_8: 0.4752  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.268  com_loss_ce: 1.804  com_loss_mask: 0.6924  com_loss_dice: 0.9728    time: 1.5786  last_time: 1.5894  data_time: 0.0718  last_data_time: 0.0696   lr: 0.0001  max_mem: 35845M
[09/30 22:02:57] d2.utils.events INFO:  eta: 0:01:03  iter: 959  total_loss: 44.3  m1_loss_ce: 0.5013  m1_loss_mask: 0.1625  m1_loss_dice: 1.258  m1_loss_ce_0: 0.519  m1_loss_mask_0: 0.1858  m1_loss_dice_0: 1.475  m1_loss_ce_1: 0.6268  m1_loss_mask_1: 0.1763  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.5902  m1_loss_mask_2: 0.1652  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.5489  m1_loss_mask_3: 0.162  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.5661  m1_loss_mask_4: 0.1662  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5301  m1_loss_mask_5: 0.162  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4849  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.5006  m1_loss_mask_7: 0.1657  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.5016  m1_loss_mask_8: 0.166  m1_loss_dice_8: 1.221  m2_loss_ce: 0.4987  m2_loss_mask: 0.1636  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6288  m2_loss_mask_0: 0.188  m2_loss_dice_0: 1.492  m2_loss_ce_1: 0.6894  m2_loss_mask_1: 0.1818  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.6294  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5757  m2_loss_mask_3: 0.1636  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5657  m2_loss_mask_4: 0.1652  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.5555  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5088  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5323  m2_loss_mask_7: 0.1646  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.508  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.243  com_loss_ce: 1.807  com_loss_mask: 0.6923  com_loss_dice: 0.9708    time: 1.5791  last_time: 1.5242  data_time: 0.0700  last_data_time: 0.0605   lr: 0.0001  max_mem: 35845M
[09/30 22:03:28] d2.utils.events INFO:  eta: 0:00:31  iter: 979  total_loss: 43.59  m1_loss_ce: 0.495  m1_loss_mask: 0.1764  m1_loss_dice: 1.214  m1_loss_ce_0: 0.5641  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.5933  m1_loss_mask_1: 0.1878  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.5661  m1_loss_mask_2: 0.1798  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5144  m1_loss_mask_3: 0.1789  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5555  m1_loss_mask_4: 0.1803  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.5247  m1_loss_mask_5: 0.1797  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.4795  m1_loss_mask_6: 0.1813  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4741  m1_loss_mask_7: 0.1831  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4671  m1_loss_mask_8: 0.1807  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4736  m2_loss_mask: 0.1742  m2_loss_dice: 1.28  m2_loss_ce_0: 0.6268  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.6584  m2_loss_mask_1: 0.1871  m2_loss_dice_1: 1.381  m2_loss_ce_2: 0.6188  m2_loss_mask_2: 0.1821  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.5299  m2_loss_mask_3: 0.1828  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.553  m2_loss_mask_4: 0.1764  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5146  m2_loss_mask_5: 0.1744  m2_loss_dice_5: 1.288  m2_loss_ce_6: 0.4912  m2_loss_mask_6: 0.1749  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.4842  m2_loss_mask_7: 0.1759  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4614  m2_loss_mask_8: 0.174  m2_loss_dice_8: 1.274  com_loss_ce: 1.804  com_loss_mask: 0.6924  com_loss_dice: 0.9717    time: 1.5784  last_time: 1.4938  data_time: 0.0610  last_data_time: 0.0533   lr: 0.0001  max_mem: 35845M
[09/30 22:04:00] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_v2/model_final.pth
[09/30 22:04:03] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 42.97  m1_loss_ce: 0.4331  m1_loss_mask: 0.1542  m1_loss_dice: 1.23  m1_loss_ce_0: 0.53  m1_loss_mask_0: 0.1875  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6042  m1_loss_mask_1: 0.1683  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.567  m1_loss_mask_2: 0.1597  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.4858  m1_loss_mask_3: 0.157  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.5058  m1_loss_mask_4: 0.1569  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.4477  m1_loss_mask_5: 0.1549  m1_loss_dice_5: 1.276  m1_loss_ce_6: 0.4211  m1_loss_mask_6: 0.1553  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4154  m1_loss_mask_7: 0.1543  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.4559  m1_loss_mask_8: 0.1532  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4706  m2_loss_mask: 0.1567  m2_loss_dice: 1.287  m2_loss_ce_0: 0.5954  m2_loss_mask_0: 0.1846  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.6492  m2_loss_mask_1: 0.1751  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.5662  m2_loss_mask_2: 0.1584  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5169  m2_loss_mask_3: 0.158  m2_loss_dice_3: 1.302  m2_loss_ce_4: 0.495  m2_loss_mask_4: 0.158  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5136  m2_loss_mask_5: 0.1576  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.4709  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.279  m2_loss_ce_7: 0.4694  m2_loss_mask_7: 0.1579  m2_loss_dice_7: 1.287  m2_loss_ce_8: 0.4756  m2_loss_mask_8: 0.1568  m2_loss_dice_8: 1.249  com_loss_ce: 1.778  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5785  last_time: 1.5539  data_time: 0.0754  last_data_time: 0.0919   lr: 0.0001  max_mem: 35845M
[09/30 22:04:03] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:26:15 (1.5785 s / it)
[09/30 22:04:03] d2.engine.hooks INFO: Total training time: 0:26:23 (0:00:08 on hooks)
[09/30 22:04:03] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/30 22:04:03] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/30 22:04:03] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/30 22:04:03] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/30 22:04:03] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/30 22:05:49] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalsreuaskb ...
[09/30 22:06:38] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 58.226 | 80.438 | 71.250 |      19       |
| Things | 50.388 | 79.585 | 63.054 |       8       |
| Stuff  | 63.927 | 81.058 | 77.211 |      11       |
[09/30 22:06:38] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.494 | 97.798 | 99.690 |     Stuff     |
| class_8  | 70.436 | 82.474 | 85.403 |     Stuff     |
| class_11 | 86.474 | 88.276 | 97.959 |     Stuff     |
| class_12 | 40.650 | 79.645 | 51.039 |     Stuff     |
| class_13 | 37.527 | 75.640 | 49.612 |     Stuff     |
| class_17 | 42.279 | 63.289 | 66.803 |     Stuff     |
| class_19 | 46.994 | 68.429 | 68.677 |     Stuff     |
| class_20 | 66.357 | 77.444 | 85.684 |     Stuff     |
| class_21 | 89.094 | 90.020 | 98.971 |     Stuff     |
| class_22 | 38.133 | 77.448 | 49.237 |     Stuff     |
| class_23 | 87.757 | 91.180 | 96.246 |     Stuff     |
| class_24 | 51.801 | 76.907 | 67.355 |    Things     |
| class_25 | 46.287 | 73.433 | 63.033 |    Things     |
| class_26 | 65.711 | 83.340 | 78.847 |    Things     |
| class_27 | 50.560 | 89.362 | 56.579 |    Things     |
| class_28 | 62.781 | 88.712 | 70.769 |    Things     |
| class_31 | 47.301 | 80.806 | 58.537 |    Things     |
| class_32 | 36.776 | 73.310 | 50.165 |    Things     |
| class_33 | 41.885 | 70.811 | 59.150 |    Things     |
[09/30 22:06:38] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/30 22:06:38] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/30 22:06:38] d2.evaluation.testing INFO: copypaste: 58.2262,80.4381,71.2503,50.3877,79.5851,63.0543,63.9269,81.0584,77.2110,97.4942,97.7976,99.6898,70.4357,82.4745,85.4031,86.4742,88.2757,97.9592,40.6496,79.6448,51.0386,37.5269,75.6401,49.6124,42.2790,63.2888,66.8033,46.9945,68.4285,68.6767,66.3572,77.4443,85.6838,89.0941,90.0202,98.9712,38.1334,77.4480,49.2375,87.7569,91.1801,96.2457,51.8012,76.9073,67.3553,46.2867,73.4329,63.0327,65.7112,83.3404,78.8468,50.5598,89.3616,56.5789,62.7810,88.7123,70.7692,47.3009,80.8056,58.5366,36.7758,73.3097,50.1650,41.8847,70.8113,59.1497
