[08/17 12:00:46] detectron2 INFO: Rank of current process: 0. World size: 2
[08/17 12:00:48] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   535.113.01
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/17 12:00:48] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/17 12:00:48] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/17 12:00:48] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/17 12:00:48] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax/config.yaml
[08/17 12:00:48] d2.utils.env INFO: Using a generated random seed 49628203
[08/17 12:00:53] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/17 12:00:53] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/17 12:00:54] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/17 12:00:54] d2.data.build INFO: Using training sampler TrainingSampler
[08/17 12:00:54] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/17 12:00:54] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/17 12:00:54] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/17 12:00:54] d2.data.build INFO: Making batched data loader with batch_size=4
[08/17 12:00:54] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/17 12:00:58] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/17 12:00:58] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/17 12:00:58] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/17 12:00:59] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/17 12:00:59] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/17 12:01:42] d2.utils.events INFO:  eta: 0:28:24  iter: 19  total_loss: 43.35  m1_loss_ce: 0.5408  m1_loss_mask: 0.1728  m1_loss_dice: 1.201  m1_loss_ce_0: 0.6284  m1_loss_mask_0: 0.1964  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.681  m1_loss_mask_1: 0.1805  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.6413  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.6031  m1_loss_mask_3: 0.1725  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.5693  m1_loss_mask_4: 0.175  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5473  m1_loss_mask_5: 0.1718  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5331  m1_loss_mask_6: 0.1737  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.5091  m1_loss_mask_7: 0.1718  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.5171  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4984  m2_loss_mask: 0.168  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5922  m2_loss_mask_0: 0.1974  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6635  m2_loss_mask_1: 0.1815  m2_loss_dice_1: 1.338  m2_loss_ce_2: 0.6022  m2_loss_mask_2: 0.177  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.5668  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.21  m2_loss_ce_4: 0.5263  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.5133  m2_loss_mask_5: 0.1685  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.507  m2_loss_mask_6: 0.1691  m2_loss_dice_6: 1.173  m2_loss_ce_7: 0.4896  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.4904  m2_loss_mask_8: 0.1676  m2_loss_dice_8: 1.194  com_loss_ce: 1.548  com_loss_mask: 0.6937  com_loss_dice: 0.9791    time: 1.7459  last_time: 1.7436  data_time: 0.2418  last_data_time: 0.0471   lr: 0.0001  max_mem: 34241M
[08/17 12:02:18] d2.utils.events INFO:  eta: 0:28:01  iter: 39  total_loss: 45.12  m1_loss_ce: 0.614  m1_loss_mask: 0.1596  m1_loss_dice: 1.323  m1_loss_ce_0: 0.6558  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.566  m1_loss_ce_1: 0.723  m1_loss_mask_1: 0.1712  m1_loss_dice_1: 1.406  m1_loss_ce_2: 0.7119  m1_loss_mask_2: 0.165  m1_loss_dice_2: 1.382  m1_loss_ce_3: 0.6282  m1_loss_mask_3: 0.1621  m1_loss_dice_3: 1.354  m1_loss_ce_4: 0.5997  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.317  m1_loss_ce_5: 0.5879  m1_loss_mask_5: 0.1575  m1_loss_dice_5: 1.305  m1_loss_ce_6: 0.592  m1_loss_mask_6: 0.1616  m1_loss_dice_6: 1.335  m1_loss_ce_7: 0.581  m1_loss_mask_7: 0.1579  m1_loss_dice_7: 1.307  m1_loss_ce_8: 0.5767  m1_loss_mask_8: 0.159  m1_loss_dice_8: 1.297  m2_loss_ce: 0.5701  m2_loss_mask: 0.153  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6406  m2_loss_mask_0: 0.1797  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.7069  m2_loss_mask_1: 0.1621  m2_loss_dice_1: 1.446  m2_loss_ce_2: 0.6352  m2_loss_mask_2: 0.156  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5981  m2_loss_mask_3: 0.1578  m2_loss_dice_3: 1.326  m2_loss_ce_4: 0.5651  m2_loss_mask_4: 0.157  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.6054  m2_loss_mask_5: 0.1545  m2_loss_dice_5: 1.322  m2_loss_ce_6: 0.5788  m2_loss_mask_6: 0.1553  m2_loss_dice_6: 1.292  m2_loss_ce_7: 0.5707  m2_loss_mask_7: 0.1538  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.5861  m2_loss_mask_8: 0.1538  m2_loss_dice_8: 1.299  com_loss_ce: 1.568  com_loss_mask: 0.6938  com_loss_dice: 0.9807    time: 1.7659  last_time: 1.7243  data_time: 0.0538  last_data_time: 0.0335   lr: 0.0001  max_mem: 34310M
[08/17 12:02:54] d2.utils.events INFO:  eta: 0:27:39  iter: 59  total_loss: 43.19  m1_loss_ce: 0.5461  m1_loss_mask: 0.1616  m1_loss_dice: 1.22  m1_loss_ce_0: 0.6238  m1_loss_mask_0: 0.19  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.6974  m1_loss_mask_1: 0.1715  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.6557  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5726  m1_loss_mask_3: 0.1596  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.5586  m1_loss_mask_4: 0.1586  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.5145  m1_loss_mask_5: 0.1568  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5101  m1_loss_mask_6: 0.1602  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.529  m1_loss_mask_7: 0.1578  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.5086  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.208  m2_loss_ce: 0.508  m2_loss_mask: 0.1552  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6123  m2_loss_mask_0: 0.184  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6505  m2_loss_mask_1: 0.17  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.6266  m2_loss_mask_2: 0.1572  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5704  m2_loss_mask_3: 0.1538  m2_loss_dice_3: 1.258  m2_loss_ce_4: 0.5491  m2_loss_mask_4: 0.1564  m2_loss_dice_4: 1.197  m2_loss_ce_5: 0.5269  m2_loss_mask_5: 0.1566  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.5138  m2_loss_mask_6: 0.1556  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5177  m2_loss_mask_7: 0.1533  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.4912  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.239  com_loss_ce: 1.562  com_loss_mask: 0.6937  com_loss_dice: 0.9803    time: 1.7718  last_time: 1.8181  data_time: 0.0461  last_data_time: 0.0561   lr: 0.0001  max_mem: 34380M
[08/17 12:03:29] d2.utils.events INFO:  eta: 0:27:02  iter: 79  total_loss: 43.31  m1_loss_ce: 0.5249  m1_loss_mask: 0.1837  m1_loss_dice: 1.195  m1_loss_ce_0: 0.5797  m1_loss_mask_0: 0.214  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.6684  m1_loss_mask_1: 0.1928  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6303  m1_loss_mask_2: 0.1855  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.5272  m1_loss_mask_3: 0.1793  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5266  m1_loss_mask_4: 0.1859  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.4989  m1_loss_mask_5: 0.184  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4805  m1_loss_mask_6: 0.1838  m1_loss_dice_6: 1.243  m1_loss_ce_7: 0.4851  m1_loss_mask_7: 0.1836  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.4989  m1_loss_mask_8: 0.1808  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4959  m2_loss_mask: 0.1725  m2_loss_dice: 1.226  m2_loss_ce_0: 0.6015  m2_loss_mask_0: 0.2055  m2_loss_dice_0: 1.427  m2_loss_ce_1: 0.631  m2_loss_mask_1: 0.1923  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.5898  m2_loss_mask_2: 0.1778  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.5248  m2_loss_mask_3: 0.1771  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.508  m2_loss_mask_4: 0.1793  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5134  m2_loss_mask_5: 0.1755  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.5084  m2_loss_mask_6: 0.1745  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5068  m2_loss_mask_7: 0.1741  m2_loss_dice_7: 1.256  m2_loss_ce_8: 0.4748  m2_loss_mask_8: 0.1758  m2_loss_dice_8: 1.233  com_loss_ce: 1.57  com_loss_mask: 0.6937  com_loss_dice: 0.9791    time: 1.7684  last_time: 1.7396  data_time: 0.0399  last_data_time: 0.0501   lr: 0.0001  max_mem: 34380M
[08/17 12:04:05] d2.utils.events INFO:  eta: 0:26:30  iter: 99  total_loss: 45.79  m1_loss_ce: 0.5389  m1_loss_mask: 0.1647  m1_loss_dice: 1.289  m1_loss_ce_0: 0.6542  m1_loss_mask_0: 0.1951  m1_loss_dice_0: 1.528  m1_loss_ce_1: 0.6733  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.6132  m1_loss_mask_2: 0.1689  m1_loss_dice_2: 1.334  m1_loss_ce_3: 0.5435  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.281  m1_loss_ce_4: 0.5916  m1_loss_mask_4: 0.1702  m1_loss_dice_4: 1.301  m1_loss_ce_5: 0.5374  m1_loss_mask_5: 0.1666  m1_loss_dice_5: 1.3  m1_loss_ce_6: 0.5295  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.328  m1_loss_ce_7: 0.5149  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.273  m1_loss_ce_8: 0.5309  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.262  m2_loss_ce: 0.5758  m2_loss_mask: 0.1607  m2_loss_dice: 1.278  m2_loss_ce_0: 0.6127  m2_loss_mask_0: 0.1996  m2_loss_dice_0: 1.507  m2_loss_ce_1: 0.6874  m2_loss_mask_1: 0.1741  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.6722  m2_loss_mask_2: 0.1693  m2_loss_dice_2: 1.354  m2_loss_ce_3: 0.6168  m2_loss_mask_3: 0.1651  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.605  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.286  m2_loss_ce_5: 0.5787  m2_loss_mask_5: 0.1625  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5786  m2_loss_mask_6: 0.1614  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.5752  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.5547  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.254  com_loss_ce: 1.579  com_loss_mask: 0.6937  com_loss_dice: 0.9795    time: 1.7737  last_time: 1.7919  data_time: 0.0424  last_data_time: 0.0378   lr: 0.0001  max_mem: 34380M
[08/17 12:04:41] d2.utils.events INFO:  eta: 0:25:53  iter: 119  total_loss: 46.02  m1_loss_ce: 0.5941  m1_loss_mask: 0.1668  m1_loss_dice: 1.272  m1_loss_ce_0: 0.7018  m1_loss_mask_0: 0.1948  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.7774  m1_loss_mask_1: 0.1819  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.7165  m1_loss_mask_2: 0.1724  m1_loss_dice_2: 1.356  m1_loss_ce_3: 0.6543  m1_loss_mask_3: 0.1723  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.6042  m1_loss_mask_4: 0.1715  m1_loss_dice_4: 1.295  m1_loss_ce_5: 0.605  m1_loss_mask_5: 0.1698  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5447  m1_loss_mask_6: 0.1683  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.5875  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.5591  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.273  m2_loss_ce: 0.5949  m2_loss_mask: 0.1708  m2_loss_dice: 1.264  m2_loss_ce_0: 0.6901  m2_loss_mask_0: 0.1946  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.75  m2_loss_mask_1: 0.1808  m2_loss_dice_1: 1.436  m2_loss_ce_2: 0.6847  m2_loss_mask_2: 0.1728  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.64  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.6244  m2_loss_mask_4: 0.1715  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.6172  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.59  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5937  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.5756  m2_loss_mask_8: 0.1701  m2_loss_dice_8: 1.252  com_loss_ce: 1.578  com_loss_mask: 0.6937  com_loss_dice: 0.9803    time: 1.7730  last_time: 1.7433  data_time: 0.0419  last_data_time: 0.0575   lr: 0.0001  max_mem: 35371M
[08/17 12:05:17] d2.utils.events INFO:  eta: 0:25:18  iter: 139  total_loss: 44.41  m1_loss_ce: 0.5438  m1_loss_mask: 0.1673  m1_loss_dice: 1.239  m1_loss_ce_0: 0.6416  m1_loss_mask_0: 0.1862  m1_loss_dice_0: 1.452  m1_loss_ce_1: 0.7092  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.6318  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5901  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.289  m1_loss_ce_4: 0.5517  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.5601  m1_loss_mask_5: 0.1661  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.5451  m1_loss_mask_6: 0.171  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5268  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.5165  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.231  m2_loss_ce: 0.5747  m2_loss_mask: 0.1606  m2_loss_dice: 1.252  m2_loss_ce_0: 0.6234  m2_loss_mask_0: 0.1979  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.7073  m2_loss_mask_1: 0.1712  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.6407  m2_loss_mask_2: 0.1628  m2_loss_dice_2: 1.285  m2_loss_ce_3: 0.5976  m2_loss_mask_3: 0.1623  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5654  m2_loss_mask_4: 0.1679  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5655  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.577  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.5534  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.5196  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.22  com_loss_ce: 1.549  com_loss_mask: 0.6937  com_loss_dice: 0.9791    time: 1.7728  last_time: 1.8221  data_time: 0.0444  last_data_time: 0.0436   lr: 0.0001  max_mem: 35371M
[08/17 12:05:52] d2.utils.events INFO:  eta: 0:24:42  iter: 159  total_loss: 44.3  m1_loss_ce: 0.5649  m1_loss_mask: 0.1602  m1_loss_dice: 1.197  m1_loss_ce_0: 0.6722  m1_loss_mask_0: 0.194  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.7041  m1_loss_mask_1: 0.1714  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.6225  m1_loss_mask_2: 0.1686  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.599  m1_loss_mask_3: 0.1637  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.5645  m1_loss_mask_4: 0.1663  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.5518  m1_loss_mask_5: 0.1601  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.5501  m1_loss_mask_6: 0.1582  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5524  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5481  m1_loss_mask_8: 0.1623  m1_loss_dice_8: 1.225  m2_loss_ce: 0.5191  m2_loss_mask: 0.16  m2_loss_dice: 1.259  m2_loss_ce_0: 0.6335  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6916  m2_loss_mask_1: 0.1701  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.6573  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.6046  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5656  m2_loss_mask_4: 0.1641  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5598  m2_loss_mask_5: 0.1638  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5639  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5516  m2_loss_mask_7: 0.1599  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.5196  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.26  com_loss_ce: 1.548  com_loss_mask: 0.6937  com_loss_dice: 0.9795    time: 1.7722  last_time: 1.7706  data_time: 0.0386  last_data_time: 0.0321   lr: 0.0001  max_mem: 35371M
[08/17 12:06:28] d2.utils.events INFO:  eta: 0:24:06  iter: 179  total_loss: 43.17  m1_loss_ce: 0.5196  m1_loss_mask: 0.1627  m1_loss_dice: 1.217  m1_loss_ce_0: 0.6042  m1_loss_mask_0: 0.1939  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.655  m1_loss_mask_1: 0.1817  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.6016  m1_loss_mask_2: 0.1714  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5306  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.5252  m1_loss_mask_4: 0.1666  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.5288  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.5129  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.5053  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.5231  m1_loss_mask_8: 0.1625  m1_loss_dice_8: 1.208  m2_loss_ce: 0.5061  m2_loss_mask: 0.166  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6114  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6677  m2_loss_mask_1: 0.1771  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.6337  m2_loss_mask_2: 0.1712  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.5415  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.5102  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5417  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5353  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.5096  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4928  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.21  com_loss_ce: 1.554  com_loss_mask: 0.6937  com_loss_dice: 0.9805    time: 1.7710  last_time: 1.7078  data_time: 0.0406  last_data_time: 0.0588   lr: 0.0001  max_mem: 35371M
[08/17 12:07:03] d2.utils.events INFO:  eta: 0:23:30  iter: 199  total_loss: 41.85  m1_loss_ce: 0.5036  m1_loss_mask: 0.1627  m1_loss_dice: 1.156  m1_loss_ce_0: 0.6142  m1_loss_mask_0: 0.1919  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.7095  m1_loss_mask_1: 0.1774  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.6341  m1_loss_mask_2: 0.1734  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.5508  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.173  m1_loss_ce_4: 0.5437  m1_loss_mask_4: 0.1686  m1_loss_dice_4: 1.166  m1_loss_ce_5: 0.5351  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.5429  m1_loss_mask_6: 0.1684  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.5239  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.5024  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.193  m2_loss_ce: 0.5134  m2_loss_mask: 0.1617  m2_loss_dice: 1.144  m2_loss_ce_0: 0.5863  m2_loss_mask_0: 0.1856  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.665  m2_loss_mask_1: 0.1715  m2_loss_dice_1: 1.291  m2_loss_ce_2: 0.6105  m2_loss_mask_2: 0.1655  m2_loss_dice_2: 1.246  m2_loss_ce_3: 0.5825  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.193  m2_loss_ce_4: 0.5176  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.196  m2_loss_ce_5: 0.5301  m2_loss_mask_5: 0.1637  m2_loss_dice_5: 1.184  m2_loss_ce_6: 0.5108  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.147  m2_loss_ce_7: 0.5112  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.131  m2_loss_ce_8: 0.4852  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.148  com_loss_ce: 1.539  com_loss_mask: 0.6937  com_loss_dice: 0.9782    time: 1.7688  last_time: 1.7941  data_time: 0.0367  last_data_time: 0.0352   lr: 0.0001  max_mem: 35371M
[08/17 12:07:38] d2.utils.events INFO:  eta: 0:22:52  iter: 219  total_loss: 44.05  m1_loss_ce: 0.5595  m1_loss_mask: 0.1729  m1_loss_dice: 1.259  m1_loss_ce_0: 0.5855  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.508  m1_loss_ce_1: 0.6639  m1_loss_mask_1: 0.1849  m1_loss_dice_1: 1.407  m1_loss_ce_2: 0.6458  m1_loss_mask_2: 0.1788  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5518  m1_loss_mask_3: 0.179  m1_loss_dice_3: 1.3  m1_loss_ce_4: 0.5472  m1_loss_mask_4: 0.1744  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5142  m1_loss_mask_5: 0.1738  m1_loss_dice_5: 1.316  m1_loss_ce_6: 0.4829  m1_loss_mask_6: 0.1724  m1_loss_dice_6: 1.31  m1_loss_ce_7: 0.4902  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.335  m1_loss_ce_8: 0.4587  m1_loss_mask_8: 0.1697  m1_loss_dice_8: 1.324  m2_loss_ce: 0.4989  m2_loss_mask: 0.1668  m2_loss_dice: 1.276  m2_loss_ce_0: 0.5947  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.507  m2_loss_ce_1: 0.6552  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.461  m2_loss_ce_2: 0.6313  m2_loss_mask_2: 0.1673  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5546  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5477  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5149  m2_loss_mask_5: 0.1602  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.4922  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5032  m2_loss_mask_7: 0.161  m2_loss_dice_7: 1.273  m2_loss_ce_8: 0.474  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.301  com_loss_ce: 1.563  com_loss_mask: 0.6938  com_loss_dice: 0.98    time: 1.7673  last_time: 1.7028  data_time: 0.0398  last_data_time: 0.0378   lr: 0.0001  max_mem: 35371M
[08/17 12:08:14] d2.utils.events INFO:  eta: 0:22:17  iter: 239  total_loss: 46.97  m1_loss_ce: 0.5472  m1_loss_mask: 0.1634  m1_loss_dice: 1.372  m1_loss_ce_0: 0.6572  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.622  m1_loss_ce_1: 0.6878  m1_loss_mask_1: 0.1783  m1_loss_dice_1: 1.529  m1_loss_ce_2: 0.6128  m1_loss_mask_2: 0.1679  m1_loss_dice_2: 1.448  m1_loss_ce_3: 0.5941  m1_loss_mask_3: 0.168  m1_loss_dice_3: 1.353  m1_loss_ce_4: 0.5582  m1_loss_mask_4: 0.165  m1_loss_dice_4: 1.38  m1_loss_ce_5: 0.5658  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.402  m1_loss_ce_6: 0.5543  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.38  m1_loss_ce_7: 0.5237  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.377  m1_loss_ce_8: 0.5346  m1_loss_mask_8: 0.164  m1_loss_dice_8: 1.396  m2_loss_ce: 0.5239  m2_loss_mask: 0.1576  m2_loss_dice: 1.345  m2_loss_ce_0: 0.6657  m2_loss_mask_0: 0.1846  m2_loss_dice_0: 1.605  m2_loss_ce_1: 0.6906  m2_loss_mask_1: 0.1663  m2_loss_dice_1: 1.481  m2_loss_ce_2: 0.643  m2_loss_mask_2: 0.1577  m2_loss_dice_2: 1.428  m2_loss_ce_3: 0.5571  m2_loss_mask_3: 0.158  m2_loss_dice_3: 1.381  m2_loss_ce_4: 0.571  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.377  m2_loss_ce_5: 0.5535  m2_loss_mask_5: 0.1577  m2_loss_dice_5: 1.383  m2_loss_ce_6: 0.5367  m2_loss_mask_6: 0.1563  m2_loss_dice_6: 1.37  m2_loss_ce_7: 0.5532  m2_loss_mask_7: 0.1567  m2_loss_dice_7: 1.335  m2_loss_ce_8: 0.5477  m2_loss_mask_8: 0.1555  m2_loss_dice_8: 1.32  com_loss_ce: 1.572  com_loss_mask: 0.6938  com_loss_dice: 0.9804    time: 1.7674  last_time: 1.7564  data_time: 0.0403  last_data_time: 0.0404   lr: 0.0001  max_mem: 35371M
[08/17 12:08:49] d2.utils.events INFO:  eta: 0:21:41  iter: 259  total_loss: 43.15  m1_loss_ce: 0.5351  m1_loss_mask: 0.1772  m1_loss_dice: 1.232  m1_loss_ce_0: 0.6475  m1_loss_mask_0: 0.2094  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.7059  m1_loss_mask_1: 0.1914  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.6409  m1_loss_mask_2: 0.1811  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.5823  m1_loss_mask_3: 0.1839  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.5485  m1_loss_mask_4: 0.1802  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.551  m1_loss_mask_5: 0.1763  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.574  m1_loss_mask_6: 0.1771  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.557  m1_loss_mask_7: 0.1785  m1_loss_dice_7: 1.199  m1_loss_ce_8: 0.5247  m1_loss_mask_8: 0.1786  m1_loss_dice_8: 1.242  m2_loss_ce: 0.5064  m2_loss_mask: 0.1703  m2_loss_dice: 1.225  m2_loss_ce_0: 0.6403  m2_loss_mask_0: 0.2069  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6952  m2_loss_mask_1: 0.1879  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.6277  m2_loss_mask_2: 0.179  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.6035  m2_loss_mask_3: 0.1746  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5226  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.489  m2_loss_mask_5: 0.173  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.5276  m2_loss_mask_6: 0.1734  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5063  m2_loss_mask_7: 0.1734  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.5128  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.197  com_loss_ce: 1.552  com_loss_mask: 0.6937  com_loss_dice: 0.9794    time: 1.7663  last_time: 1.7860  data_time: 0.0422  last_data_time: 0.0347   lr: 0.0001  max_mem: 35371M
[08/17 12:09:24] d2.utils.events INFO:  eta: 0:21:06  iter: 279  total_loss: 45.77  m1_loss_ce: 0.5631  m1_loss_mask: 0.1681  m1_loss_dice: 1.245  m1_loss_ce_0: 0.6642  m1_loss_mask_0: 0.1962  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.7041  m1_loss_mask_1: 0.1864  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.6636  m1_loss_mask_2: 0.176  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5949  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.29  m1_loss_ce_4: 0.5702  m1_loss_mask_4: 0.1707  m1_loss_dice_4: 1.306  m1_loss_ce_5: 0.5816  m1_loss_mask_5: 0.169  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.5861  m1_loss_mask_6: 0.1679  m1_loss_dice_6: 1.28  m1_loss_ce_7: 0.5357  m1_loss_mask_7: 0.1684  m1_loss_dice_7: 1.293  m1_loss_ce_8: 0.5254  m1_loss_mask_8: 0.1705  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5306  m2_loss_mask: 0.1758  m2_loss_dice: 1.279  m2_loss_ce_0: 0.6547  m2_loss_mask_0: 0.2043  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.6618  m2_loss_mask_1: 0.187  m2_loss_dice_1: 1.463  m2_loss_ce_2: 0.6313  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.391  m2_loss_ce_3: 0.5966  m2_loss_mask_3: 0.1748  m2_loss_dice_3: 1.287  m2_loss_ce_4: 0.5659  m2_loss_mask_4: 0.1786  m2_loss_dice_4: 1.32  m2_loss_ce_5: 0.5446  m2_loss_mask_5: 0.1777  m2_loss_dice_5: 1.32  m2_loss_ce_6: 0.5309  m2_loss_mask_6: 0.1757  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.5442  m2_loss_mask_7: 0.1759  m2_loss_dice_7: 1.306  m2_loss_ce_8: 0.535  m2_loss_mask_8: 0.1751  m2_loss_dice_8: 1.267  com_loss_ce: 1.557  com_loss_mask: 0.6937  com_loss_dice: 0.9808    time: 1.7660  last_time: 1.7743  data_time: 0.0381  last_data_time: 0.0456   lr: 0.0001  max_mem: 35371M
[08/17 12:09:59] d2.utils.events INFO:  eta: 0:20:30  iter: 299  total_loss: 42.2  m1_loss_ce: 0.5133  m1_loss_mask: 0.1634  m1_loss_dice: 1.184  m1_loss_ce_0: 0.6478  m1_loss_mask_0: 0.1889  m1_loss_dice_0: 1.35  m1_loss_ce_1: 0.6866  m1_loss_mask_1: 0.1746  m1_loss_dice_1: 1.264  m1_loss_ce_2: 0.6351  m1_loss_mask_2: 0.1702  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.5462  m1_loss_mask_3: 0.1698  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.5554  m1_loss_mask_4: 0.1672  m1_loss_dice_4: 1.18  m1_loss_ce_5: 0.538  m1_loss_mask_5: 0.1661  m1_loss_dice_5: 1.156  m1_loss_ce_6: 0.526  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.5364  m1_loss_mask_7: 0.1598  m1_loss_dice_7: 1.158  m1_loss_ce_8: 0.5297  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.148  m2_loss_ce: 0.522  m2_loss_mask: 0.1612  m2_loss_dice: 1.159  m2_loss_ce_0: 0.6108  m2_loss_mask_0: 0.1896  m2_loss_dice_0: 1.395  m2_loss_ce_1: 0.6659  m2_loss_mask_1: 0.1724  m2_loss_dice_1: 1.289  m2_loss_ce_2: 0.5948  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.213  m2_loss_ce_3: 0.5517  m2_loss_mask_3: 0.1655  m2_loss_dice_3: 1.201  m2_loss_ce_4: 0.5769  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.177  m2_loss_ce_5: 0.521  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.5111  m2_loss_mask_6: 0.1632  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.5154  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.171  m2_loss_ce_8: 0.4913  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.17  com_loss_ce: 1.548  com_loss_mask: 0.6937  com_loss_dice: 0.9784    time: 1.7647  last_time: 1.7424  data_time: 0.0386  last_data_time: 0.0325   lr: 0.0001  max_mem: 35371M
[08/17 12:10:34] d2.utils.events INFO:  eta: 0:19:54  iter: 319  total_loss: 44.42  m1_loss_ce: 0.5589  m1_loss_mask: 0.1829  m1_loss_dice: 1.216  m1_loss_ce_0: 0.636  m1_loss_mask_0: 0.2071  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.7111  m1_loss_mask_1: 0.1939  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.6385  m1_loss_mask_2: 0.1829  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5867  m1_loss_mask_3: 0.1867  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.5365  m1_loss_mask_4: 0.1817  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5406  m1_loss_mask_5: 0.1834  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5214  m1_loss_mask_6: 0.1838  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.5407  m1_loss_mask_7: 0.1814  m1_loss_dice_7: 1.252  m1_loss_ce_8: 0.5485  m1_loss_mask_8: 0.1791  m1_loss_dice_8: 1.199  m2_loss_ce: 0.5307  m2_loss_mask: 0.1754  m2_loss_dice: 1.193  m2_loss_ce_0: 0.652  m2_loss_mask_0: 0.2114  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6899  m2_loss_mask_1: 0.1943  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6676  m2_loss_mask_2: 0.1816  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5875  m2_loss_mask_3: 0.1825  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.5486  m2_loss_mask_4: 0.1813  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5548  m2_loss_mask_5: 0.1815  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.5562  m2_loss_mask_6: 0.1769  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.5578  m2_loss_mask_7: 0.1772  m2_loss_dice_7: 1.198  m2_loss_ce_8: 0.5547  m2_loss_mask_8: 0.1771  m2_loss_dice_8: 1.192  com_loss_ce: 1.549  com_loss_mask: 0.6937  com_loss_dice: 0.9795    time: 1.7634  last_time: 1.7153  data_time: 0.0371  last_data_time: 0.0443   lr: 0.0001  max_mem: 35371M
[08/17 12:11:10] d2.utils.events INFO:  eta: 0:19:19  iter: 339  total_loss: 44.15  m1_loss_ce: 0.5517  m1_loss_mask: 0.1711  m1_loss_dice: 1.242  m1_loss_ce_0: 0.6579  m1_loss_mask_0: 0.1998  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.6861  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.6471  m1_loss_mask_2: 0.1743  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.5746  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5682  m1_loss_mask_4: 0.1732  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.5605  m1_loss_mask_5: 0.1725  m1_loss_dice_5: 1.266  m1_loss_ce_6: 0.5195  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5141  m1_loss_mask_7: 0.1715  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.526  m1_loss_mask_8: 0.1721  m1_loss_dice_8: 1.218  m2_loss_ce: 0.548  m2_loss_mask: 0.1752  m2_loss_dice: 1.194  m2_loss_ce_0: 0.6875  m2_loss_mask_0: 0.1976  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6799  m2_loss_mask_1: 0.1846  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.6517  m2_loss_mask_2: 0.1756  m2_loss_dice_2: 1.262  m2_loss_ce_3: 0.5922  m2_loss_mask_3: 0.1759  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.5823  m2_loss_mask_4: 0.1772  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.5685  m2_loss_mask_5: 0.1764  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5576  m2_loss_mask_6: 0.1764  m2_loss_dice_6: 1.177  m2_loss_ce_7: 0.538  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.5426  m2_loss_mask_8: 0.1751  m2_loss_dice_8: 1.213  com_loss_ce: 1.555  com_loss_mask: 0.6937  com_loss_dice: 0.9788    time: 1.7636  last_time: 1.7462  data_time: 0.0426  last_data_time: 0.0320   lr: 0.0001  max_mem: 35371M
[08/17 12:11:45] d2.utils.events INFO:  eta: 0:18:44  iter: 359  total_loss: 43.86  m1_loss_ce: 0.5466  m1_loss_mask: 0.1615  m1_loss_dice: 1.187  m1_loss_ce_0: 0.6507  m1_loss_mask_0: 0.1954  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6943  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.6213  m1_loss_mask_2: 0.1695  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.5615  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.5623  m1_loss_mask_4: 0.1694  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.5843  m1_loss_mask_5: 0.1621  m1_loss_dice_5: 1.3  m1_loss_ce_6: 0.5729  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.5687  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.258  m1_loss_ce_8: 0.5459  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.217  m2_loss_ce: 0.557  m2_loss_mask: 0.1641  m2_loss_dice: 1.186  m2_loss_ce_0: 0.6494  m2_loss_mask_0: 0.1891  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6854  m2_loss_mask_1: 0.1715  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.6608  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.285  m2_loss_ce_3: 0.6012  m2_loss_mask_3: 0.1646  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5847  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5504  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.531  m2_loss_mask_6: 0.1644  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5543  m2_loss_mask_7: 0.1653  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.5547  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.191  com_loss_ce: 1.549  com_loss_mask: 0.6937  com_loss_dice: 0.9791    time: 1.7635  last_time: 1.7518  data_time: 0.0397  last_data_time: 0.0297   lr: 0.0001  max_mem: 35371M
[08/17 12:12:21] d2.utils.events INFO:  eta: 0:18:09  iter: 379  total_loss: 43.61  m1_loss_ce: 0.5133  m1_loss_mask: 0.1722  m1_loss_dice: 1.242  m1_loss_ce_0: 0.6874  m1_loss_mask_0: 0.2059  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.7273  m1_loss_mask_1: 0.1801  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.6797  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.5885  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.5585  m1_loss_mask_4: 0.1722  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.5473  m1_loss_mask_5: 0.1729  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.5504  m1_loss_mask_6: 0.171  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.5404  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.5727  m1_loss_mask_8: 0.1733  m1_loss_dice_8: 1.204  m2_loss_ce: 0.5677  m2_loss_mask: 0.1695  m2_loss_dice: 1.234  m2_loss_ce_0: 0.6363  m2_loss_mask_0: 0.2045  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.6757  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6404  m2_loss_mask_2: 0.1783  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.6229  m2_loss_mask_3: 0.1767  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.6027  m2_loss_mask_4: 0.1785  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.569  m2_loss_mask_5: 0.1791  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.551  m2_loss_mask_6: 0.1737  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.5685  m2_loss_mask_7: 0.1728  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.5441  m2_loss_mask_8: 0.173  m2_loss_dice_8: 1.232  com_loss_ce: 1.551  com_loss_mask: 0.6937  com_loss_dice: 0.9796    time: 1.7652  last_time: 1.7412  data_time: 0.0437  last_data_time: 0.0379   lr: 0.0001  max_mem: 35371M
[08/17 12:12:57] d2.utils.events INFO:  eta: 0:17:35  iter: 399  total_loss: 43.2  m1_loss_ce: 0.5019  m1_loss_mask: 0.1694  m1_loss_dice: 1.191  m1_loss_ce_0: 0.611  m1_loss_mask_0: 0.198  m1_loss_dice_0: 1.342  m1_loss_ce_1: 0.6707  m1_loss_mask_1: 0.1763  m1_loss_dice_1: 1.29  m1_loss_ce_2: 0.5657  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5267  m1_loss_mask_3: 0.1658  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.5286  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.5112  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.514  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.483  m1_loss_mask_7: 0.1649  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.5026  m1_loss_mask_8: 0.1639  m1_loss_dice_8: 1.12  m2_loss_ce: 0.5082  m2_loss_mask: 0.1735  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6075  m2_loss_mask_0: 0.2132  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6301  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.597  m2_loss_mask_2: 0.1837  m2_loss_dice_2: 1.277  m2_loss_ce_3: 0.5782  m2_loss_mask_3: 0.1795  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.5509  m2_loss_mask_4: 0.1802  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5375  m2_loss_mask_5: 0.1785  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.5231  m2_loss_mask_6: 0.1807  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5178  m2_loss_mask_7: 0.1741  m2_loss_dice_7: 1.194  m2_loss_ce_8: 0.5271  m2_loss_mask_8: 0.1734  m2_loss_dice_8: 1.194  com_loss_ce: 1.542  com_loss_mask: 0.6937  com_loss_dice: 0.9779    time: 1.7659  last_time: 1.7710  data_time: 0.0386  last_data_time: 0.0302   lr: 0.0001  max_mem: 35371M
[08/17 12:13:33] d2.utils.events INFO:  eta: 0:17:00  iter: 419  total_loss: 44.03  m1_loss_ce: 0.5548  m1_loss_mask: 0.1614  m1_loss_dice: 1.23  m1_loss_ce_0: 0.6402  m1_loss_mask_0: 0.1845  m1_loss_dice_0: 1.452  m1_loss_ce_1: 0.7002  m1_loss_mask_1: 0.1677  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.6666  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.6023  m1_loss_mask_3: 0.1602  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.5987  m1_loss_mask_4: 0.1584  m1_loss_dice_4: 1.207  m1_loss_ce_5: 0.5949  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.5742  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.5598  m1_loss_mask_7: 0.1613  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.5654  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.185  m2_loss_ce: 0.5608  m2_loss_mask: 0.1642  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6239  m2_loss_mask_0: 0.1918  m2_loss_dice_0: 1.423  m2_loss_ce_1: 0.676  m2_loss_mask_1: 0.1742  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6354  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5772  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5708  m2_loss_mask_4: 0.1661  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5551  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.5462  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.5469  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5659  m2_loss_mask_8: 0.1648  m2_loss_dice_8: 1.248  com_loss_ce: 1.563  com_loss_mask: 0.6937  com_loss_dice: 0.9796    time: 1.7666  last_time: 1.8336  data_time: 0.0358  last_data_time: 0.0458   lr: 0.0001  max_mem: 35371M
[08/17 12:14:08] d2.utils.events INFO:  eta: 0:16:25  iter: 439  total_loss: 44.08  m1_loss_ce: 0.5286  m1_loss_mask: 0.1548  m1_loss_dice: 1.231  m1_loss_ce_0: 0.6361  m1_loss_mask_0: 0.1916  m1_loss_dice_0: 1.476  m1_loss_ce_1: 0.6908  m1_loss_mask_1: 0.1693  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.6294  m1_loss_mask_2: 0.1629  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.5837  m1_loss_mask_3: 0.1621  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5556  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.5396  m1_loss_mask_5: 0.1571  m1_loss_dice_5: 1.269  m1_loss_ce_6: 0.5214  m1_loss_mask_6: 0.1559  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.5079  m1_loss_mask_7: 0.157  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.535  m1_loss_mask_8: 0.1527  m1_loss_dice_8: 1.26  m2_loss_ce: 0.558  m2_loss_mask: 0.1562  m2_loss_dice: 1.303  m2_loss_ce_0: 0.6639  m2_loss_mask_0: 0.193  m2_loss_dice_0: 1.538  m2_loss_ce_1: 0.7053  m2_loss_mask_1: 0.1661  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.6392  m2_loss_mask_2: 0.1597  m2_loss_dice_2: 1.337  m2_loss_ce_3: 0.6015  m2_loss_mask_3: 0.1563  m2_loss_dice_3: 1.305  m2_loss_ce_4: 0.5748  m2_loss_mask_4: 0.1572  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.5582  m2_loss_mask_5: 0.1565  m2_loss_dice_5: 1.305  m2_loss_ce_6: 0.5635  m2_loss_mask_6: 0.1557  m2_loss_dice_6: 1.311  m2_loss_ce_7: 0.5597  m2_loss_mask_7: 0.1562  m2_loss_dice_7: 1.295  m2_loss_ce_8: 0.5258  m2_loss_mask_8: 0.1561  m2_loss_dice_8: 1.275  com_loss_ce: 1.576  com_loss_mask: 0.6938  com_loss_dice: 0.9809    time: 1.7666  last_time: 1.8453  data_time: 0.0354  last_data_time: 0.0335   lr: 0.0001  max_mem: 35371M
[08/17 12:14:44] d2.utils.events INFO:  eta: 0:15:51  iter: 459  total_loss: 43.62  m1_loss_ce: 0.5199  m1_loss_mask: 0.1526  m1_loss_dice: 1.244  m1_loss_ce_0: 0.6104  m1_loss_mask_0: 0.1838  m1_loss_dice_0: 1.499  m1_loss_ce_1: 0.6434  m1_loss_mask_1: 0.1665  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.5707  m1_loss_mask_2: 0.1594  m1_loss_dice_2: 1.313  m1_loss_ce_3: 0.5365  m1_loss_mask_3: 0.1572  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.5207  m1_loss_mask_4: 0.1579  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.5093  m1_loss_mask_5: 0.1546  m1_loss_dice_5: 1.291  m1_loss_ce_6: 0.5107  m1_loss_mask_6: 0.1554  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.5409  m1_loss_mask_7: 0.157  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.5331  m1_loss_mask_8: 0.1542  m1_loss_dice_8: 1.258  m2_loss_ce: 0.5429  m2_loss_mask: 0.1542  m2_loss_dice: 1.261  m2_loss_ce_0: 0.6465  m2_loss_mask_0: 0.1891  m2_loss_dice_0: 1.515  m2_loss_ce_1: 0.682  m2_loss_mask_1: 0.1654  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.6612  m2_loss_mask_2: 0.1566  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.6182  m2_loss_mask_3: 0.1542  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.5441  m2_loss_mask_4: 0.1585  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.551  m2_loss_mask_5: 0.1552  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.5314  m2_loss_mask_6: 0.155  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5184  m2_loss_mask_7: 0.1541  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.516  m2_loss_mask_8: 0.1554  m2_loss_dice_8: 1.263  com_loss_ce: 1.581  com_loss_mask: 0.6938  com_loss_dice: 0.9797    time: 1.7672  last_time: 1.7359  data_time: 0.0385  last_data_time: 0.0436   lr: 0.0001  max_mem: 35371M
[08/17 12:15:19] d2.utils.events INFO:  eta: 0:15:16  iter: 479  total_loss: 43.52  m1_loss_ce: 0.5457  m1_loss_mask: 0.1628  m1_loss_dice: 1.166  m1_loss_ce_0: 0.6423  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.7168  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.6287  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.5775  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.168  m1_loss_ce_4: 0.5472  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.22  m1_loss_ce_5: 0.536  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.5521  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.5348  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.5771  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.173  m2_loss_ce: 0.5269  m2_loss_mask: 0.1656  m2_loss_dice: 1.192  m2_loss_ce_0: 0.6188  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6613  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.6292  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5999  m2_loss_mask_3: 0.1667  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.5528  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.5636  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.233  m2_loss_ce_6: 0.5687  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.182  m2_loss_ce_7: 0.5044  m2_loss_mask_7: 0.1612  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.5148  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.213  com_loss_ce: 1.563  com_loss_mask: 0.6937  com_loss_dice: 0.9796    time: 1.7670  last_time: 1.7022  data_time: 0.0409  last_data_time: 0.0407   lr: 0.0001  max_mem: 35371M
[08/17 12:15:55] d2.utils.events INFO:  eta: 0:14:41  iter: 499  total_loss: 43.05  m1_loss_ce: 0.5196  m1_loss_mask: 0.1679  m1_loss_dice: 1.17  m1_loss_ce_0: 0.6115  m1_loss_mask_0: 0.1927  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.6921  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.6659  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.5526  m1_loss_mask_3: 0.1714  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5237  m1_loss_mask_4: 0.1694  m1_loss_dice_4: 1.207  m1_loss_ce_5: 0.5706  m1_loss_mask_5: 0.1698  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.5406  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.5202  m1_loss_mask_7: 0.1691  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.5279  m1_loss_mask_8: 0.1674  m1_loss_dice_8: 1.166  m2_loss_ce: 0.5523  m2_loss_mask: 0.1704  m2_loss_dice: 1.194  m2_loss_ce_0: 0.6399  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.431  m2_loss_ce_1: 0.6782  m2_loss_mask_1: 0.1829  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.6244  m2_loss_mask_2: 0.1761  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.6146  m2_loss_mask_3: 0.1727  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5759  m2_loss_mask_4: 0.1746  m2_loss_dice_4: 1.209  m2_loss_ce_5: 0.5824  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5328  m2_loss_mask_6: 0.1703  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.5292  m2_loss_mask_7: 0.1724  m2_loss_dice_7: 1.181  m2_loss_ce_8: 0.5181  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.211  com_loss_ce: 1.567  com_loss_mask: 0.6937  com_loss_dice: 0.98    time: 1.7675  last_time: 1.7573  data_time: 0.0405  last_data_time: 0.0369   lr: 0.0001  max_mem: 35371M
[08/17 12:16:30] d2.utils.events INFO:  eta: 0:14:05  iter: 519  total_loss: 44.49  m1_loss_ce: 0.5409  m1_loss_mask: 0.1636  m1_loss_dice: 1.195  m1_loss_ce_0: 0.6275  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.72  m1_loss_mask_1: 0.1739  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.6401  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.5641  m1_loss_mask_3: 0.1655  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5694  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.209  m1_loss_ce_5: 0.546  m1_loss_mask_5: 0.1638  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.573  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.5211  m1_loss_mask_7: 0.1655  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.516  m1_loss_mask_8: 0.1654  m1_loss_dice_8: 1.207  m2_loss_ce: 0.5518  m2_loss_mask: 0.1686  m2_loss_dice: 1.193  m2_loss_ce_0: 0.6146  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.384  m2_loss_ce_1: 0.6543  m2_loss_mask_1: 0.1821  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6681  m2_loss_mask_2: 0.1706  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.6042  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.219  m2_loss_ce_4: 0.5867  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.5606  m2_loss_mask_5: 0.1693  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.5557  m2_loss_mask_6: 0.1672  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5527  m2_loss_mask_7: 0.1688  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.5123  m2_loss_mask_8: 0.1674  m2_loss_dice_8: 1.209  com_loss_ce: 1.566  com_loss_mask: 0.6937  com_loss_dice: 0.9792    time: 1.7673  last_time: 1.7480  data_time: 0.0395  last_data_time: 0.0354   lr: 0.0001  max_mem: 35371M
[08/17 12:17:06] d2.utils.events INFO:  eta: 0:13:30  iter: 539  total_loss: 43.54  m1_loss_ce: 0.5395  m1_loss_mask: 0.159  m1_loss_dice: 1.192  m1_loss_ce_0: 0.633  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.394  m1_loss_ce_1: 0.7305  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.6285  m1_loss_mask_2: 0.1645  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.5704  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.5396  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5395  m1_loss_mask_5: 0.1613  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5469  m1_loss_mask_6: 0.162  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.5142  m1_loss_mask_7: 0.1607  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.5131  m1_loss_mask_8: 0.1573  m1_loss_dice_8: 1.211  m2_loss_ce: 0.5347  m2_loss_mask: 0.164  m2_loss_dice: 1.22  m2_loss_ce_0: 0.6328  m2_loss_mask_0: 0.1928  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6781  m2_loss_mask_1: 0.1815  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6138  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5737  m2_loss_mask_3: 0.1667  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.5543  m2_loss_mask_4: 0.1707  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5188  m2_loss_mask_5: 0.1678  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.5129  m2_loss_mask_6: 0.1624  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5046  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4953  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.208  com_loss_ce: 1.565  com_loss_mask: 0.6937  com_loss_dice: 0.9793    time: 1.7675  last_time: 1.7575  data_time: 0.0404  last_data_time: 0.0385   lr: 0.0001  max_mem: 35371M
[08/17 12:17:42] d2.utils.events INFO:  eta: 0:12:55  iter: 559  total_loss: 43.81  m1_loss_ce: 0.5343  m1_loss_mask: 0.1593  m1_loss_dice: 1.194  m1_loss_ce_0: 0.6128  m1_loss_mask_0: 0.1947  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6869  m1_loss_mask_1: 0.1726  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.6064  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5666  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.568  m1_loss_mask_4: 0.1616  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5483  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.5264  m1_loss_mask_6: 0.1656  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5251  m1_loss_mask_7: 0.1649  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.5233  m1_loss_mask_8: 0.1603  m1_loss_dice_8: 1.205  m2_loss_ce: 0.5377  m2_loss_mask: 0.163  m2_loss_dice: 1.216  m2_loss_ce_0: 0.6336  m2_loss_mask_0: 0.2014  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.7071  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6557  m2_loss_mask_2: 0.1691  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5801  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.5783  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.5461  m2_loss_mask_5: 0.1636  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5368  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.5287  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.5311  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.212  com_loss_ce: 1.574  com_loss_mask: 0.6937  com_loss_dice: 0.9798    time: 1.7680  last_time: 1.8772  data_time: 0.0372  last_data_time: 0.0385   lr: 0.0001  max_mem: 35371M
[08/17 12:18:17] d2.utils.events INFO:  eta: 0:12:20  iter: 579  total_loss: 42.43  m1_loss_ce: 0.4891  m1_loss_mask: 0.1672  m1_loss_dice: 1.172  m1_loss_ce_0: 0.6241  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.394  m1_loss_ce_1: 0.7179  m1_loss_mask_1: 0.1763  m1_loss_dice_1: 1.308  m1_loss_ce_2: 0.6477  m1_loss_mask_2: 0.1701  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.5616  m1_loss_mask_3: 0.1698  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.5401  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.5302  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.4941  m1_loss_mask_6: 0.1675  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.5144  m1_loss_mask_7: 0.1657  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.4843  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.198  m2_loss_ce: 0.528  m2_loss_mask: 0.1632  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5993  m2_loss_mask_0: 0.1846  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.7063  m2_loss_mask_1: 0.1738  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.639  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5899  m2_loss_mask_3: 0.1651  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.5679  m2_loss_mask_4: 0.1665  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5546  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5185  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.5135  m2_loss_mask_7: 0.164  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.527  m2_loss_mask_8: 0.1629  m2_loss_dice_8: 1.224  com_loss_ce: 1.553  com_loss_mask: 0.6937  com_loss_dice: 0.9804    time: 1.7683  last_time: 1.7221  data_time: 0.0376  last_data_time: 0.0379   lr: 0.0001  max_mem: 35371M
[08/17 12:18:52] d2.utils.events INFO:  eta: 0:11:44  iter: 599  total_loss: 45.02  m1_loss_ce: 0.5226  m1_loss_mask: 0.171  m1_loss_dice: 1.235  m1_loss_ce_0: 0.617  m1_loss_mask_0: 0.1932  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6936  m1_loss_mask_1: 0.1807  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.6432  m1_loss_mask_2: 0.1743  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.5691  m1_loss_mask_3: 0.1762  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.5547  m1_loss_mask_4: 0.1733  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5281  m1_loss_mask_5: 0.1716  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4996  m1_loss_mask_6: 0.1734  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.5343  m1_loss_mask_7: 0.1709  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5181  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4968  m2_loss_mask: 0.1737  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6165  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6475  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.6312  m2_loss_mask_2: 0.1769  m2_loss_dice_2: 1.302  m2_loss_ce_3: 0.5601  m2_loss_mask_3: 0.1764  m2_loss_dice_3: 1.317  m2_loss_ce_4: 0.5539  m2_loss_mask_4: 0.1768  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5431  m2_loss_mask_5: 0.1753  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.5263  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.5296  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.5086  m2_loss_mask_8: 0.1742  m2_loss_dice_8: 1.259  com_loss_ce: 1.559  com_loss_mask: 0.6937  com_loss_dice: 0.9801    time: 1.7678  last_time: 1.7701  data_time: 0.0352  last_data_time: 0.0335   lr: 0.0001  max_mem: 35371M
[08/17 12:19:27] d2.utils.events INFO:  eta: 0:11:08  iter: 619  total_loss: 42.62  m1_loss_ce: 0.4917  m1_loss_mask: 0.1608  m1_loss_dice: 1.131  m1_loss_ce_0: 0.6415  m1_loss_mask_0: 0.2006  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6828  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.272  m1_loss_ce_2: 0.6128  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.5451  m1_loss_mask_3: 0.1659  m1_loss_dice_3: 1.17  m1_loss_ce_4: 0.5124  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.16  m1_loss_ce_5: 0.4973  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.161  m1_loss_ce_6: 0.5309  m1_loss_mask_6: 0.162  m1_loss_dice_6: 1.148  m1_loss_ce_7: 0.5137  m1_loss_mask_7: 0.1605  m1_loss_dice_7: 1.158  m1_loss_ce_8: 0.4998  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.172  m2_loss_ce: 0.5194  m2_loss_mask: 0.1668  m2_loss_dice: 1.168  m2_loss_ce_0: 0.6404  m2_loss_mask_0: 0.1986  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6918  m2_loss_mask_1: 0.1856  m2_loss_dice_1: 1.3  m2_loss_ce_2: 0.6149  m2_loss_mask_2: 0.1706  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5868  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.18  m2_loss_ce_4: 0.5605  m2_loss_mask_4: 0.171  m2_loss_dice_4: 1.181  m2_loss_ce_5: 0.5428  m2_loss_mask_5: 0.1705  m2_loss_dice_5: 1.167  m2_loss_ce_6: 0.5512  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.18  m2_loss_ce_7: 0.5208  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.169  m2_loss_ce_8: 0.5364  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.2  com_loss_ce: 1.553  com_loss_mask: 0.6937  com_loss_dice: 0.9789    time: 1.7670  last_time: 1.7539  data_time: 0.0362  last_data_time: 0.0362   lr: 0.0001  max_mem: 35371M
[08/17 12:20:03] d2.utils.events INFO:  eta: 0:10:33  iter: 639  total_loss: 44.29  m1_loss_ce: 0.5338  m1_loss_mask: 0.1603  m1_loss_dice: 1.251  m1_loss_ce_0: 0.663  m1_loss_mask_0: 0.1845  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.6911  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.366  m1_loss_ce_2: 0.6817  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.6102  m1_loss_mask_3: 0.1649  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.58  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5574  m1_loss_mask_5: 0.16  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5451  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.287  m1_loss_ce_7: 0.5742  m1_loss_mask_7: 0.1583  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.5168  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.261  m2_loss_ce: 0.5453  m2_loss_mask: 0.1595  m2_loss_dice: 1.263  m2_loss_ce_0: 0.6666  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.7167  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.422  m2_loss_ce_2: 0.6532  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.366  m2_loss_ce_3: 0.6432  m2_loss_mask_3: 0.1646  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.5799  m2_loss_mask_4: 0.1643  m2_loss_dice_4: 1.328  m2_loss_ce_5: 0.5912  m2_loss_mask_5: 0.1625  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.5341  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.5696  m2_loss_mask_7: 0.1607  m2_loss_dice_7: 1.29  m2_loss_ce_8: 0.5399  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.296  com_loss_ce: 1.574  com_loss_mask: 0.6937  com_loss_dice: 0.9808    time: 1.7671  last_time: 1.7383  data_time: 0.0380  last_data_time: 0.0308   lr: 0.0001  max_mem: 35371M
[08/17 12:20:38] d2.utils.events INFO:  eta: 0:09:58  iter: 659  total_loss: 44.71  m1_loss_ce: 0.562  m1_loss_mask: 0.1642  m1_loss_dice: 1.217  m1_loss_ce_0: 0.6716  m1_loss_mask_0: 0.1969  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.7394  m1_loss_mask_1: 0.1805  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.6952  m1_loss_mask_2: 0.1673  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5909  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5813  m1_loss_mask_4: 0.1657  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.5711  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.5616  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.5493  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.554  m1_loss_mask_8: 0.1636  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5602  m2_loss_mask: 0.168  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6928  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.7144  m2_loss_mask_1: 0.181  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.6871  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5891  m2_loss_mask_3: 0.1667  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5966  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.6024  m2_loss_mask_5: 0.1718  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.598  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.553  m2_loss_mask_7: 0.1691  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.5548  m2_loss_mask_8: 0.1685  m2_loss_dice_8: 1.241  com_loss_ce: 1.579  com_loss_mask: 0.6938  com_loss_dice: 0.981    time: 1.7668  last_time: 1.7371  data_time: 0.0368  last_data_time: 0.0326   lr: 0.0001  max_mem: 35371M
[08/17 12:21:13] d2.utils.events INFO:  eta: 0:09:22  iter: 679  total_loss: 41.06  m1_loss_ce: 0.4831  m1_loss_mask: 0.1827  m1_loss_dice: 1.133  m1_loss_ce_0: 0.6266  m1_loss_mask_0: 0.2008  m1_loss_dice_0: 1.339  m1_loss_ce_1: 0.6647  m1_loss_mask_1: 0.1887  m1_loss_dice_1: 1.22  m1_loss_ce_2: 0.5926  m1_loss_mask_2: 0.1851  m1_loss_dice_2: 1.201  m1_loss_ce_3: 0.5354  m1_loss_mask_3: 0.1825  m1_loss_dice_3: 1.154  m1_loss_ce_4: 0.5206  m1_loss_mask_4: 0.1824  m1_loss_dice_4: 1.164  m1_loss_ce_5: 0.4759  m1_loss_mask_5: 0.1801  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.4961  m1_loss_mask_6: 0.1829  m1_loss_dice_6: 1.138  m1_loss_ce_7: 0.494  m1_loss_mask_7: 0.1831  m1_loss_dice_7: 1.143  m1_loss_ce_8: 0.474  m1_loss_mask_8: 0.1829  m1_loss_dice_8: 1.109  m2_loss_ce: 0.4804  m2_loss_mask: 0.1727  m2_loss_dice: 1.134  m2_loss_ce_0: 0.5943  m2_loss_mask_0: 0.1999  m2_loss_dice_0: 1.339  m2_loss_ce_1: 0.63  m2_loss_mask_1: 0.1882  m2_loss_dice_1: 1.27  m2_loss_ce_2: 0.577  m2_loss_mask_2: 0.1773  m2_loss_dice_2: 1.209  m2_loss_ce_3: 0.5275  m2_loss_mask_3: 0.1737  m2_loss_dice_3: 1.169  m2_loss_ce_4: 0.5401  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.156  m2_loss_ce_5: 0.5035  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.146  m2_loss_ce_6: 0.5163  m2_loss_mask_6: 0.1717  m2_loss_dice_6: 1.124  m2_loss_ce_7: 0.5255  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.132  m2_loss_ce_8: 0.4808  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.135  com_loss_ce: 1.551  com_loss_mask: 0.6937  com_loss_dice: 0.9784    time: 1.7654  last_time: 1.8603  data_time: 0.0315  last_data_time: 0.0294   lr: 0.0001  max_mem: 35371M
[08/17 12:21:48] d2.utils.events INFO:  eta: 0:08:47  iter: 699  total_loss: 41.98  m1_loss_ce: 0.5091  m1_loss_mask: 0.1681  m1_loss_dice: 1.185  m1_loss_ce_0: 0.6375  m1_loss_mask_0: 0.187  m1_loss_dice_0: 1.326  m1_loss_ce_1: 0.659  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.27  m1_loss_ce_2: 0.6101  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.5535  m1_loss_mask_3: 0.1754  m1_loss_dice_3: 1.187  m1_loss_ce_4: 0.5564  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.5158  m1_loss_mask_5: 0.1692  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.5248  m1_loss_mask_6: 0.1729  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.5079  m1_loss_mask_7: 0.1695  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.5307  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.166  m2_loss_ce: 0.5424  m2_loss_mask: 0.1726  m2_loss_dice: 1.161  m2_loss_ce_0: 0.6598  m2_loss_mask_0: 0.1922  m2_loss_dice_0: 1.375  m2_loss_ce_1: 0.663  m2_loss_mask_1: 0.1837  m2_loss_dice_1: 1.317  m2_loss_ce_2: 0.6321  m2_loss_mask_2: 0.1742  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.545  m2_loss_mask_3: 0.1754  m2_loss_dice_3: 1.188  m2_loss_ce_4: 0.5318  m2_loss_mask_4: 0.1749  m2_loss_dice_4: 1.201  m2_loss_ce_5: 0.5453  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.5137  m2_loss_mask_6: 0.1713  m2_loss_dice_6: 1.175  m2_loss_ce_7: 0.5142  m2_loss_mask_7: 0.1701  m2_loss_dice_7: 1.155  m2_loss_ce_8: 0.5138  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.186  com_loss_ce: 1.552  com_loss_mask: 0.6937  com_loss_dice: 0.9786    time: 1.7647  last_time: 1.7742  data_time: 0.0335  last_data_time: 0.0289   lr: 0.0001  max_mem: 35371M
[08/17 12:22:23] d2.utils.events INFO:  eta: 0:08:12  iter: 719  total_loss: 44.78  m1_loss_ce: 0.5494  m1_loss_mask: 0.1547  m1_loss_dice: 1.226  m1_loss_ce_0: 0.6541  m1_loss_mask_0: 0.1802  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6858  m1_loss_mask_1: 0.1643  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6666  m1_loss_mask_2: 0.159  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.5642  m1_loss_mask_3: 0.1608  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5257  m1_loss_mask_4: 0.155  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.5186  m1_loss_mask_5: 0.1522  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.5195  m1_loss_mask_6: 0.154  m1_loss_dice_6: 1.282  m1_loss_ce_7: 0.5463  m1_loss_mask_7: 0.154  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.5119  m1_loss_mask_8: 0.1534  m1_loss_dice_8: 1.248  m2_loss_ce: 0.5264  m2_loss_mask: 0.1645  m2_loss_dice: 1.275  m2_loss_ce_0: 0.6362  m2_loss_mask_0: 0.185  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6875  m2_loss_mask_1: 0.1712  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.6197  m2_loss_mask_2: 0.1621  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5773  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5549  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5663  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5385  m2_loss_mask_6: 0.1648  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5245  m2_loss_mask_7: 0.1639  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.5338  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.282  com_loss_ce: 1.549  com_loss_mask: 0.6937  com_loss_dice: 0.9797    time: 1.7643  last_time: 1.7545  data_time: 0.0353  last_data_time: 0.0355   lr: 0.0001  max_mem: 35371M
[08/17 12:22:58] d2.utils.events INFO:  eta: 0:07:36  iter: 739  total_loss: 44.53  m1_loss_ce: 0.5698  m1_loss_mask: 0.1603  m1_loss_dice: 1.204  m1_loss_ce_0: 0.6293  m1_loss_mask_0: 0.1945  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.6883  m1_loss_mask_1: 0.1709  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.6809  m1_loss_mask_2: 0.1658  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.6077  m1_loss_mask_3: 0.1654  m1_loss_dice_3: 1.199  m1_loss_ce_4: 0.5748  m1_loss_mask_4: 0.1663  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.5674  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5622  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.5816  m1_loss_mask_7: 0.1611  m1_loss_dice_7: 1.182  m1_loss_ce_8: 0.5442  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.191  m2_loss_ce: 0.588  m2_loss_mask: 0.1671  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.6822  m2_loss_mask_1: 0.1805  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6584  m2_loss_mask_2: 0.1702  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.6408  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5947  m2_loss_mask_4: 0.1705  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.6249  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.5414  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5666  m2_loss_mask_7: 0.168  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.5795  m2_loss_mask_8: 0.1699  m2_loss_dice_8: 1.227  com_loss_ce: 1.565  com_loss_mask: 0.6937  com_loss_dice: 0.9799    time: 1.7644  last_time: 1.7285  data_time: 0.0344  last_data_time: 0.0342   lr: 0.0001  max_mem: 35371M
[08/17 12:23:33] d2.utils.events INFO:  eta: 0:07:01  iter: 759  total_loss: 43.56  m1_loss_ce: 0.4726  m1_loss_mask: 0.1739  m1_loss_dice: 1.181  m1_loss_ce_0: 0.5899  m1_loss_mask_0: 0.1988  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.6555  m1_loss_mask_1: 0.1817  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5702  m1_loss_mask_2: 0.1743  m1_loss_dice_2: 1.268  m1_loss_ce_3: 0.5231  m1_loss_mask_3: 0.1756  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5169  m1_loss_mask_4: 0.1721  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.5187  m1_loss_mask_5: 0.1728  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.4932  m1_loss_mask_6: 0.1693  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.5067  m1_loss_mask_7: 0.1708  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4969  m1_loss_mask_8: 0.1706  m1_loss_dice_8: 1.195  m2_loss_ce: 0.5354  m2_loss_mask: 0.1766  m2_loss_dice: 1.225  m2_loss_ce_0: 0.6222  m2_loss_mask_0: 0.2082  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6738  m2_loss_mask_1: 0.1911  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.6331  m2_loss_mask_2: 0.1809  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5929  m2_loss_mask_3: 0.1784  m2_loss_dice_3: 1.258  m2_loss_ce_4: 0.5494  m2_loss_mask_4: 0.1798  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5742  m2_loss_mask_5: 0.1809  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5367  m2_loss_mask_6: 0.1771  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5433  m2_loss_mask_7: 0.1776  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5308  m2_loss_mask_8: 0.1747  m2_loss_dice_8: 1.231  com_loss_ce: 1.553  com_loss_mask: 0.6937  com_loss_dice: 0.9783    time: 1.7633  last_time: 1.6907  data_time: 0.0324  last_data_time: 0.0303   lr: 0.0001  max_mem: 35371M
[08/17 12:24:08] d2.utils.events INFO:  eta: 0:06:26  iter: 779  total_loss: 43.02  m1_loss_ce: 0.5115  m1_loss_mask: 0.16  m1_loss_dice: 1.181  m1_loss_ce_0: 0.5984  m1_loss_mask_0: 0.1811  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.6602  m1_loss_mask_1: 0.1729  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6107  m1_loss_mask_2: 0.1615  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5505  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.5101  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.4755  m1_loss_mask_5: 0.1629  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4861  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.213  m1_loss_ce_7: 0.4908  m1_loss_mask_7: 0.1608  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.4971  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.21  m2_loss_ce: 0.5221  m2_loss_mask: 0.166  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6316  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6911  m2_loss_mask_1: 0.1776  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.6202  m2_loss_mask_2: 0.1694  m2_loss_dice_2: 1.359  m2_loss_ce_3: 0.5821  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.536  m2_loss_mask_4: 0.1683  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5401  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5359  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.251  m2_loss_ce_7: 0.4916  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.5046  m2_loss_mask_8: 0.1637  m2_loss_dice_8: 1.232  com_loss_ce: 1.558  com_loss_mask: 0.6937  com_loss_dice: 0.9799    time: 1.7625  last_time: 1.6947  data_time: 0.0334  last_data_time: 0.0374   lr: 0.0001  max_mem: 35371M
[08/17 12:24:43] d2.utils.events INFO:  eta: 0:05:51  iter: 799  total_loss: 41.89  m1_loss_ce: 0.4869  m1_loss_mask: 0.1571  m1_loss_dice: 1.14  m1_loss_ce_0: 0.6077  m1_loss_mask_0: 0.1846  m1_loss_dice_0: 1.352  m1_loss_ce_1: 0.6596  m1_loss_mask_1: 0.1678  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.618  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.5569  m1_loss_mask_3: 0.1638  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.5054  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.163  m1_loss_ce_5: 0.5022  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.4744  m1_loss_mask_6: 0.1601  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.5109  m1_loss_mask_7: 0.1581  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4829  m1_loss_mask_8: 0.1563  m1_loss_dice_8: 1.185  m2_loss_ce: 0.5295  m2_loss_mask: 0.1621  m2_loss_dice: 1.207  m2_loss_ce_0: 0.6253  m2_loss_mask_0: 0.1963  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6589  m2_loss_mask_1: 0.175  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.6263  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.262  m2_loss_ce_3: 0.6324  m2_loss_mask_3: 0.1652  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5572  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.5681  m2_loss_mask_5: 0.1646  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.5207  m2_loss_mask_6: 0.1653  m2_loss_dice_6: 1.185  m2_loss_ce_7: 0.5786  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.5303  m2_loss_mask_8: 0.1639  m2_loss_dice_8: 1.204  com_loss_ce: 1.563  com_loss_mask: 0.6937  com_loss_dice: 0.9793    time: 1.7623  last_time: 1.7035  data_time: 0.0373  last_data_time: 0.0475   lr: 0.0001  max_mem: 35371M
[08/17 12:25:18] d2.utils.events INFO:  eta: 0:05:15  iter: 819  total_loss: 43.22  m1_loss_ce: 0.5079  m1_loss_mask: 0.1621  m1_loss_dice: 1.156  m1_loss_ce_0: 0.618  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.389  m1_loss_ce_1: 0.6426  m1_loss_mask_1: 0.1706  m1_loss_dice_1: 1.297  m1_loss_ce_2: 0.5962  m1_loss_mask_2: 0.1645  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.5214  m1_loss_mask_3: 0.1684  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.5224  m1_loss_mask_4: 0.1645  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.4887  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.5158  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.146  m1_loss_ce_7: 0.5196  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.5116  m1_loss_mask_8: 0.1629  m1_loss_dice_8: 1.176  m2_loss_ce: 0.5258  m2_loss_mask: 0.1612  m2_loss_dice: 1.169  m2_loss_ce_0: 0.6467  m2_loss_mask_0: 0.1963  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6781  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.315  m2_loss_ce_2: 0.6399  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5902  m2_loss_mask_3: 0.1651  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5573  m2_loss_mask_4: 0.1652  m2_loss_dice_4: 1.201  m2_loss_ce_5: 0.5296  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.202  m2_loss_ce_6: 0.5453  m2_loss_mask_6: 0.1622  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.5548  m2_loss_mask_7: 0.165  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.5666  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.2  com_loss_ce: 1.573  com_loss_mask: 0.6937  com_loss_dice: 0.9802    time: 1.7615  last_time: 1.7480  data_time: 0.0350  last_data_time: 0.0342   lr: 0.0001  max_mem: 35371M
[08/17 12:25:53] d2.utils.events INFO:  eta: 0:04:40  iter: 839  total_loss: 43.72  m1_loss_ce: 0.4966  m1_loss_mask: 0.1567  m1_loss_dice: 1.227  m1_loss_ce_0: 0.6454  m1_loss_mask_0: 0.1859  m1_loss_dice_0: 1.45  m1_loss_ce_1: 0.6378  m1_loss_mask_1: 0.1722  m1_loss_dice_1: 1.394  m1_loss_ce_2: 0.604  m1_loss_mask_2: 0.1608  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.527  m1_loss_mask_3: 0.1558  m1_loss_dice_3: 1.219  m1_loss_ce_4: 0.5129  m1_loss_mask_4: 0.1581  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5023  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.291  m1_loss_ce_6: 0.5132  m1_loss_mask_6: 0.1555  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4915  m1_loss_mask_7: 0.1597  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.5032  m1_loss_mask_8: 0.1581  m1_loss_dice_8: 1.221  m2_loss_ce: 0.5192  m2_loss_mask: 0.1575  m2_loss_dice: 1.292  m2_loss_ce_0: 0.6352  m2_loss_mask_0: 0.1851  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.663  m2_loss_mask_1: 0.1703  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.6187  m2_loss_mask_2: 0.1598  m2_loss_dice_2: 1.357  m2_loss_ce_3: 0.6039  m2_loss_mask_3: 0.1563  m2_loss_dice_3: 1.318  m2_loss_ce_4: 0.548  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.5514  m2_loss_mask_5: 0.16  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.536  m2_loss_mask_6: 0.157  m2_loss_dice_6: 1.283  m2_loss_ce_7: 0.5344  m2_loss_mask_7: 0.1563  m2_loss_dice_7: 1.256  m2_loss_ce_8: 0.5407  m2_loss_mask_8: 0.1563  m2_loss_dice_8: 1.272  com_loss_ce: 1.557  com_loss_mask: 0.6937  com_loss_dice: 0.9798    time: 1.7611  last_time: 1.7206  data_time: 0.0363  last_data_time: 0.0359   lr: 0.0001  max_mem: 35371M
[08/17 12:26:28] d2.utils.events INFO:  eta: 0:04:05  iter: 859  total_loss: 43.18  m1_loss_ce: 0.529  m1_loss_mask: 0.1591  m1_loss_dice: 1.178  m1_loss_ce_0: 0.634  m1_loss_mask_0: 0.188  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6844  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.338  m1_loss_ce_2: 0.6186  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.5837  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.5291  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.5422  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.196  m1_loss_ce_6: 0.5186  m1_loss_mask_6: 0.1618  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.5274  m1_loss_mask_7: 0.1601  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.5192  m1_loss_mask_8: 0.1607  m1_loss_dice_8: 1.173  m2_loss_ce: 0.5699  m2_loss_mask: 0.1643  m2_loss_dice: 1.277  m2_loss_ce_0: 0.6411  m2_loss_mask_0: 0.2015  m2_loss_dice_0: 1.419  m2_loss_ce_1: 0.6987  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.6515  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.6112  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.59  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5852  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.5615  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5435  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5615  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.26  com_loss_ce: 1.559  com_loss_mask: 0.6937  com_loss_dice: 0.9798    time: 1.7607  last_time: 1.6809  data_time: 0.0346  last_data_time: 0.0364   lr: 0.0001  max_mem: 35371M
[08/17 12:27:03] d2.utils.events INFO:  eta: 0:03:30  iter: 879  total_loss: 44.06  m1_loss_ce: 0.5132  m1_loss_mask: 0.1574  m1_loss_dice: 1.215  m1_loss_ce_0: 0.6521  m1_loss_mask_0: 0.1842  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.699  m1_loss_mask_1: 0.1699  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.6137  m1_loss_mask_2: 0.1609  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5641  m1_loss_mask_3: 0.1583  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.5532  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.5212  m1_loss_mask_5: 0.1585  m1_loss_dice_5: 1.19  m1_loss_ce_6: 0.5158  m1_loss_mask_6: 0.1569  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.5012  m1_loss_mask_7: 0.1547  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.5158  m1_loss_mask_8: 0.1566  m1_loss_dice_8: 1.161  m2_loss_ce: 0.5451  m2_loss_mask: 0.1572  m2_loss_dice: 1.182  m2_loss_ce_0: 0.6559  m2_loss_mask_0: 0.1946  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6908  m2_loss_mask_1: 0.1746  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.6335  m2_loss_mask_2: 0.165  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.6148  m2_loss_mask_3: 0.1654  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5861  m2_loss_mask_4: 0.1607  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5664  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.5489  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.5526  m2_loss_mask_7: 0.1617  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.535  m2_loss_mask_8: 0.1592  m2_loss_dice_8: 1.23  com_loss_ce: 1.563  com_loss_mask: 0.6937  com_loss_dice: 0.9792    time: 1.7603  last_time: 1.6815  data_time: 0.0342  last_data_time: 0.0322   lr: 0.0001  max_mem: 35371M
[08/17 12:27:37] d2.utils.events INFO:  eta: 0:02:55  iter: 899  total_loss: 44.16  m1_loss_ce: 0.5363  m1_loss_mask: 0.1665  m1_loss_dice: 1.175  m1_loss_ce_0: 0.6504  m1_loss_mask_0: 0.1917  m1_loss_dice_0: 1.387  m1_loss_ce_1: 0.7212  m1_loss_mask_1: 0.1845  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.6326  m1_loss_mask_2: 0.1703  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.5687  m1_loss_mask_3: 0.172  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.5607  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.5364  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.5438  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.5224  m1_loss_mask_7: 0.1646  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.539  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.189  m2_loss_ce: 0.5393  m2_loss_mask: 0.1761  m2_loss_dice: 1.249  m2_loss_ce_0: 0.6344  m2_loss_mask_0: 0.2085  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.7005  m2_loss_mask_1: 0.1828  m2_loss_dice_1: 1.405  m2_loss_ce_2: 0.6255  m2_loss_mask_2: 0.1787  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5886  m2_loss_mask_3: 0.1752  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.5719  m2_loss_mask_4: 0.1775  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.5551  m2_loss_mask_5: 0.1757  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.5458  m2_loss_mask_6: 0.1758  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5583  m2_loss_mask_7: 0.1761  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.5349  m2_loss_mask_8: 0.176  m2_loss_dice_8: 1.235  com_loss_ce: 1.559  com_loss_mask: 0.6937  com_loss_dice: 0.9798    time: 1.7596  last_time: 1.8774  data_time: 0.0315  last_data_time: 0.0478   lr: 0.0001  max_mem: 35371M
[08/17 12:28:13] d2.utils.events INFO:  eta: 0:02:20  iter: 919  total_loss: 42.62  m1_loss_ce: 0.4741  m1_loss_mask: 0.162  m1_loss_dice: 1.234  m1_loss_ce_0: 0.6317  m1_loss_mask_0: 0.1827  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.6747  m1_loss_mask_1: 0.1746  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.6003  m1_loss_mask_2: 0.1679  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.5629  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5178  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.5087  m1_loss_mask_5: 0.1646  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.5139  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.4882  m1_loss_mask_7: 0.1612  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.5019  m1_loss_mask_8: 0.1632  m1_loss_dice_8: 1.193  m2_loss_ce: 0.5273  m2_loss_mask: 0.1643  m2_loss_dice: 1.234  m2_loss_ce_0: 0.6255  m2_loss_mask_0: 0.1962  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.6594  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.6409  m2_loss_mask_2: 0.1657  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5453  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5458  m2_loss_mask_4: 0.1706  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.5292  m2_loss_mask_5: 0.1705  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.5198  m2_loss_mask_6: 0.1684  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.5497  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.5314  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.237  com_loss_ce: 1.566  com_loss_mask: 0.6937  com_loss_dice: 0.9796    time: 1.7596  last_time: 1.6995  data_time: 0.0322  last_data_time: 0.0299   lr: 0.0001  max_mem: 35371M
[08/17 12:28:48] d2.utils.events INFO:  eta: 0:01:45  iter: 939  total_loss: 44.33  m1_loss_ce: 0.527  m1_loss_mask: 0.1537  m1_loss_dice: 1.206  m1_loss_ce_0: 0.6168  m1_loss_mask_0: 0.1776  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.697  m1_loss_mask_1: 0.1727  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.6162  m1_loss_mask_2: 0.1623  m1_loss_dice_2: 1.349  m1_loss_ce_3: 0.5532  m1_loss_mask_3: 0.1574  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5573  m1_loss_mask_4: 0.1585  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.5202  m1_loss_mask_5: 0.1576  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.5185  m1_loss_mask_6: 0.1569  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.5162  m1_loss_mask_7: 0.154  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.5403  m1_loss_mask_8: 0.1535  m1_loss_dice_8: 1.236  m2_loss_ce: 0.5392  m2_loss_mask: 0.1626  m2_loss_dice: 1.27  m2_loss_ce_0: 0.629  m2_loss_mask_0: 0.1895  m2_loss_dice_0: 1.52  m2_loss_ce_1: 0.6987  m2_loss_mask_1: 0.1747  m2_loss_dice_1: 1.465  m2_loss_ce_2: 0.6352  m2_loss_mask_2: 0.1692  m2_loss_dice_2: 1.38  m2_loss_ce_3: 0.6138  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5808  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5675  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.5226  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.5416  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5258  m2_loss_mask_8: 0.1615  m2_loss_dice_8: 1.266  com_loss_ce: 1.563  com_loss_mask: 0.6938  com_loss_dice: 0.9805    time: 1.7596  last_time: 1.6811  data_time: 0.0334  last_data_time: 0.0365   lr: 0.0001  max_mem: 35371M
[08/17 12:29:23] d2.utils.events INFO:  eta: 0:01:10  iter: 959  total_loss: 42.35  m1_loss_ce: 0.5053  m1_loss_mask: 0.1654  m1_loss_dice: 1.148  m1_loss_ce_0: 0.6024  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.6473  m1_loss_mask_1: 0.1763  m1_loss_dice_1: 1.273  m1_loss_ce_2: 0.587  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.5061  m1_loss_mask_3: 0.1662  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.5133  m1_loss_mask_4: 0.1635  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.5108  m1_loss_mask_5: 0.1625  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.4991  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.135  m1_loss_ce_7: 0.5063  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.143  m1_loss_ce_8: 0.5081  m1_loss_mask_8: 0.1643  m1_loss_dice_8: 1.164  m2_loss_ce: 0.4975  m2_loss_mask: 0.1642  m2_loss_dice: 1.172  m2_loss_ce_0: 0.6351  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.386  m2_loss_ce_1: 0.6512  m2_loss_mask_1: 0.175  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.616  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5353  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.192  m2_loss_ce_4: 0.5553  m2_loss_mask_4: 0.1684  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.5186  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.187  m2_loss_ce_6: 0.4942  m2_loss_mask_6: 0.1648  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.4826  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.4894  m2_loss_mask_8: 0.1638  m2_loss_dice_8: 1.187  com_loss_ce: 1.555  com_loss_mask: 0.6937  com_loss_dice: 0.9793    time: 1.7595  last_time: 1.8178  data_time: 0.0318  last_data_time: 0.0317   lr: 0.0001  max_mem: 35371M
[08/17 12:29:58] d2.utils.events INFO:  eta: 0:00:35  iter: 979  total_loss: 43.56  m1_loss_ce: 0.5065  m1_loss_mask: 0.154  m1_loss_dice: 1.224  m1_loss_ce_0: 0.6452  m1_loss_mask_0: 0.1821  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.6694  m1_loss_mask_1: 0.167  m1_loss_dice_1: 1.326  m1_loss_ce_2: 0.6462  m1_loss_mask_2: 0.1592  m1_loss_dice_2: 1.226  m1_loss_ce_3: 0.5487  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.5353  m1_loss_mask_4: 0.155  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.5269  m1_loss_mask_5: 0.1521  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.5399  m1_loss_mask_6: 0.1538  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.5255  m1_loss_mask_7: 0.1547  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.5353  m1_loss_mask_8: 0.1558  m1_loss_dice_8: 1.201  m2_loss_ce: 0.5462  m2_loss_mask: 0.1514  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6266  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6591  m2_loss_mask_1: 0.1642  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.6361  m2_loss_mask_2: 0.1564  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.581  m2_loss_mask_3: 0.1538  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5857  m2_loss_mask_4: 0.1574  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5708  m2_loss_mask_5: 0.1534  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5238  m2_loss_mask_6: 0.1555  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.5227  m2_loss_mask_7: 0.1533  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.5413  m2_loss_mask_8: 0.1553  m2_loss_dice_8: 1.246  com_loss_ce: 1.559  com_loss_mask: 0.6937  com_loss_dice: 0.9793    time: 1.7588  last_time: 1.6890  data_time: 0.0307  last_data_time: 0.0318   lr: 0.0001  max_mem: 35371M
[08/17 12:30:32] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax/model_final.pth
[08/17 12:30:35] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 42.2  m1_loss_ce: 0.5156  m1_loss_mask: 0.1673  m1_loss_dice: 1.163  m1_loss_ce_0: 0.6153  m1_loss_mask_0: 0.1836  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.6428  m1_loss_mask_1: 0.1699  m1_loss_dice_1: 1.291  m1_loss_ce_2: 0.5673  m1_loss_mask_2: 0.1646  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.5124  m1_loss_mask_3: 0.1632  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.4913  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.4879  m1_loss_mask_5: 0.1621  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.4915  m1_loss_mask_6: 0.1628  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4869  m1_loss_mask_7: 0.166  m1_loss_dice_7: 1.177  m1_loss_ce_8: 0.4908  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.16  m2_loss_ce: 0.5511  m2_loss_mask: 0.1665  m2_loss_dice: 1.173  m2_loss_ce_0: 0.5978  m2_loss_mask_0: 0.1974  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6689  m2_loss_mask_1: 0.1763  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.6228  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5894  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5668  m2_loss_mask_4: 0.1681  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5515  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.5333  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5267  m2_loss_mask_7: 0.1651  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.5183  m2_loss_mask_8: 0.1659  m2_loss_dice_8: 1.214  com_loss_ce: 1.566  com_loss_mask: 0.6937  com_loss_dice: 0.9799    time: 1.7580  last_time: 1.7549  data_time: 0.0301  last_data_time: 0.0276   lr: 0.0001  max_mem: 35371M
[08/17 12:30:35] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:29:14 (1.7580 s / it)
[08/17 12:30:35] d2.engine.hooks INFO: Total training time: 0:29:24 (0:00:10 on hooks)
[08/17 12:30:35] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/17 12:30:35] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/17 12:30:35] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/17 12:30:35] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/17 12:30:35] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/17 12:32:11] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval87uxwa96 ...
[08/17 12:32:27] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.510 | 81.045 | 69.978 |      19       |
| Things | 49.330 | 80.757 | 61.169 |       8       |
| Stuff  | 63.460 | 81.255 | 76.385 |      11       |
[08/17 12:32:27] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.849 | 97.252 | 99.586 |     Stuff     |
| class_8  | 72.263 | 83.310 | 86.739 |     Stuff     |
| class_11 | 87.018 | 89.198 | 97.556 |     Stuff     |
| class_12 | 36.676 | 79.824 | 45.946 |     Stuff     |
| class_13 | 37.440 | 75.712 | 49.451 |     Stuff     |
| class_17 | 41.868 | 64.530 | 64.882 |     Stuff     |
| class_19 | 50.160 | 69.874 | 71.786 |     Stuff     |
| class_20 | 64.879 | 76.630 | 84.665 |     Stuff     |
| class_21 | 89.354 | 90.092 | 99.180 |     Stuff     |
| class_22 | 33.911 | 75.837 | 44.715 |     Stuff     |
| class_23 | 87.639 | 91.545 | 95.732 |     Stuff     |
| class_24 | 52.550 | 76.831 | 68.396 |    Things     |
| class_25 | 49.444 | 73.699 | 67.089 |    Things     |
| class_26 | 65.801 | 83.121 | 79.162 |    Things     |
| class_27 | 44.529 | 86.785 | 51.309 |    Things     |
| class_28 | 56.194 | 91.172 | 61.635 |    Things     |
| class_31 | 46.334 | 87.520 | 52.941 |    Things     |
| class_32 | 36.640 | 74.897 | 48.921 |    Things     |
| class_33 | 43.147 | 72.032 | 59.899 |    Things     |
[08/17 12:32:27] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/17 12:32:27] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/17 12:32:27] d2.evaluation.testing INFO: copypaste: 57.5102,81.0454,69.9785,49.3297,80.7572,61.1691,63.4596,81.2550,76.3853,96.8493,97.2520,99.5859,72.2627,83.3104,86.7391,87.0176,89.1976,97.5560,36.6757,79.8235,45.9459,37.4398,75.7116,49.4505,41.8682,64.5302,64.8816,50.1599,69.8745,71.7857,64.8789,76.6300,84.6652,89.3540,90.0924,99.1803,33.9110,75.8372,44.7154,87.6387,91.5455,95.7324,52.5496,76.8311,68.3962,49.4437,73.6991,67.0886,65.8008,83.1213,79.1624,44.5286,86.7854,51.3089,56.1941,91.1720,61.6352,46.3342,87.5202,52.9412,36.6402,74.8968,48.9209,43.1468,72.0321,59.8994
