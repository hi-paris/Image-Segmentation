[08/16 01:35:09] detectron2 INFO: Rank of current process: 0. World size: 2
[08/16 01:35:11] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2                        NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/16 01:35:11] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_0_4_0_6.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/16 01:35:11] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_0_4_0_6.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_4_0_6
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/16 01:35:11] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_4_0_6
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/16 01:35:11] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_4_0_6/config.yaml
[08/16 01:35:11] d2.utils.env INFO: Using a generated random seed 12684370
[08/16 01:35:15] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/16 01:35:15] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/16 01:35:15] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/16 01:35:15] d2.data.build INFO: Using training sampler TrainingSampler
[08/16 01:35:16] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 01:35:16] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/16 01:35:16] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/16 01:35:16] d2.data.build INFO: Making batched data loader with batch_size=4
[08/16 01:35:16] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/16 01:35:19] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/16 01:35:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:35:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:35:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:35:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:35:53] d2.utils.events INFO:  eta: 0:22:28  iter: 19  total_loss: 42.42  m1_loss_ce: 0.5877  m1_loss_mask: 0.1644  m1_loss_dice: 1.243  m1_loss_ce_0: 0.6445  m1_loss_mask_0: 0.2167  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.7223  m1_loss_mask_1: 0.1789  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.6525  m1_loss_mask_2: 0.1684  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.6095  m1_loss_mask_3: 0.1652  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.6148  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.596  m1_loss_mask_5: 0.1677  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.602  m1_loss_mask_6: 0.1642  m1_loss_dice_6: 1.232  m1_loss_ce_7: 0.5868  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.5961  m1_loss_mask_8: 0.1644  m1_loss_dice_8: 1.25  m2_loss_ce: 0.5682  m2_loss_mask: 0.1613  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6576  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.7163  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6486  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.6077  m2_loss_mask_3: 0.1629  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.6151  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5628  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5667  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.5724  m2_loss_mask_7: 0.1605  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5766  m2_loss_mask_8: 0.1619  m2_loss_dice_8: 1.231  com_loss_ce: 0.4405  com_loss_mask: 0.04758  com_loss_dice: 0.2974    time: 1.3824  last_time: 1.3424  data_time: 0.2146  last_data_time: 0.0483   lr: 0.0001  max_mem: 34442M
[08/16 01:36:20] d2.utils.events INFO:  eta: 0:21:33  iter: 39  total_loss: 41.82  m1_loss_ce: 0.5284  m1_loss_mask: 0.1689  m1_loss_dice: 1.243  m1_loss_ce_0: 0.6463  m1_loss_mask_0: 0.2009  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.7216  m1_loss_mask_1: 0.1843  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.6645  m1_loss_mask_2: 0.178  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.6013  m1_loss_mask_3: 0.1746  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.6001  m1_loss_mask_4: 0.1742  m1_loss_dice_4: 1.266  m1_loss_ce_5: 0.5775  m1_loss_mask_5: 0.175  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.5679  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.5436  m1_loss_mask_7: 0.1744  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.5593  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.269  m2_loss_ce: 0.5963  m2_loss_mask: 0.1681  m2_loss_dice: 1.205  m2_loss_ce_0: 0.6412  m2_loss_mask_0: 0.1963  m2_loss_dice_0: 1.427  m2_loss_ce_1: 0.6962  m2_loss_mask_1: 0.1777  m2_loss_dice_1: 1.33  m2_loss_ce_2: 0.6409  m2_loss_mask_2: 0.1726  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.6142  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.582  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.587  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.5328  m2_loss_mask_6: 0.17  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.5366  m2_loss_mask_7: 0.1686  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5509  m2_loss_mask_8: 0.17  m2_loss_dice_8: 1.212  com_loss_ce: 0.4027  com_loss_mask: 0.04679  com_loss_dice: 0.2897    time: 1.3551  last_time: 1.4121  data_time: 0.0398  last_data_time: 0.0413   lr: 0.0001  max_mem: 34442M
[08/16 01:36:48] d2.utils.events INFO:  eta: 0:21:07  iter: 59  total_loss: 41.14  m1_loss_ce: 0.5342  m1_loss_mask: 0.1549  m1_loss_dice: 1.297  m1_loss_ce_0: 0.6234  m1_loss_mask_0: 0.1845  m1_loss_dice_0: 1.491  m1_loss_ce_1: 0.6946  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.41  m1_loss_ce_2: 0.6785  m1_loss_mask_2: 0.1607  m1_loss_dice_2: 1.367  m1_loss_ce_3: 0.6257  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.3  m1_loss_ce_4: 0.5556  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.332  m1_loss_ce_5: 0.5588  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.331  m1_loss_ce_6: 0.5243  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.272  m1_loss_ce_7: 0.519  m1_loss_mask_7: 0.1596  m1_loss_dice_7: 1.252  m1_loss_ce_8: 0.5338  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.263  m2_loss_ce: 0.5003  m2_loss_mask: 0.1579  m2_loss_dice: 1.279  m2_loss_ce_0: 0.6041  m2_loss_mask_0: 0.1857  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.6777  m2_loss_mask_1: 0.1731  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6214  m2_loss_mask_2: 0.1634  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.576  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5351  m2_loss_mask_4: 0.1635  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5391  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5247  m2_loss_mask_6: 0.1591  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.498  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.5248  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.234  com_loss_ce: 0.4241  com_loss_mask: 0.0438  com_loss_dice: 0.3085    time: 1.3546  last_time: 1.4198  data_time: 0.0418  last_data_time: 0.0391   lr: 0.0001  max_mem: 34442M
[08/16 01:37:15] d2.utils.events INFO:  eta: 0:20:40  iter: 79  total_loss: 39.66  m1_loss_ce: 0.5303  m1_loss_mask: 0.1692  m1_loss_dice: 1.226  m1_loss_ce_0: 0.6401  m1_loss_mask_0: 0.2031  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.6782  m1_loss_mask_1: 0.1885  m1_loss_dice_1: 1.317  m1_loss_ce_2: 0.6378  m1_loss_mask_2: 0.1793  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5849  m1_loss_mask_3: 0.177  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5617  m1_loss_mask_4: 0.1764  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.5538  m1_loss_mask_5: 0.1799  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.5286  m1_loss_mask_6: 0.1774  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.5203  m1_loss_mask_7: 0.1756  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.5228  m1_loss_mask_8: 0.1763  m1_loss_dice_8: 1.239  m2_loss_ce: 0.5169  m2_loss_mask: 0.1761  m2_loss_dice: 1.223  m2_loss_ce_0: 0.6186  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.408  m2_loss_ce_1: 0.6544  m2_loss_mask_1: 0.1884  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.6105  m2_loss_mask_2: 0.1789  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5554  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5357  m2_loss_mask_4: 0.1774  m2_loss_dice_4: 1.199  m2_loss_ce_5: 0.5202  m2_loss_mask_5: 0.1763  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5074  m2_loss_mask_6: 0.1764  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4843  m2_loss_mask_7: 0.1764  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.5167  m2_loss_mask_8: 0.1747  m2_loss_dice_8: 1.201  com_loss_ce: 0.4385  com_loss_mask: 0.04206  com_loss_dice: 0.2898    time: 1.3531  last_time: 1.3384  data_time: 0.0408  last_data_time: 0.0449   lr: 0.0001  max_mem: 34635M
[08/16 01:37:41] d2.utils.events INFO:  eta: 0:20:04  iter: 99  total_loss: 42.81  m1_loss_ce: 0.5583  m1_loss_mask: 0.1651  m1_loss_dice: 1.272  m1_loss_ce_0: 0.6665  m1_loss_mask_0: 0.1998  m1_loss_dice_0: 1.436  m1_loss_ce_1: 0.7609  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.708  m1_loss_mask_2: 0.1782  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.6167  m1_loss_mask_3: 0.1774  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.6134  m1_loss_mask_4: 0.1748  m1_loss_dice_4: 1.286  m1_loss_ce_5: 0.6051  m1_loss_mask_5: 0.1769  m1_loss_dice_5: 1.267  m1_loss_ce_6: 0.5515  m1_loss_mask_6: 0.1758  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.5584  m1_loss_mask_7: 0.1729  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.5666  m1_loss_mask_8: 0.1728  m1_loss_dice_8: 1.225  m2_loss_ce: 0.5626  m2_loss_mask: 0.1719  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6281  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.7213  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.6273  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.6178  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5733  m2_loss_mask_4: 0.1724  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5786  m2_loss_mask_5: 0.1744  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5605  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5197  m2_loss_mask_7: 0.1722  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5832  m2_loss_mask_8: 0.1715  m2_loss_dice_8: 1.216  com_loss_ce: 0.5242  com_loss_mask: 0.04154  com_loss_dice: 0.3005    time: 1.3476  last_time: 1.3164  data_time: 0.0396  last_data_time: 0.0375   lr: 0.0001  max_mem: 34635M
[08/16 01:38:09] d2.utils.events INFO:  eta: 0:19:44  iter: 119  total_loss: 41.48  m1_loss_ce: 0.5206  m1_loss_mask: 0.1642  m1_loss_dice: 1.217  m1_loss_ce_0: 0.6496  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.6826  m1_loss_mask_1: 0.1759  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.6335  m1_loss_mask_2: 0.1805  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5773  m1_loss_mask_3: 0.1768  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5767  m1_loss_mask_4: 0.1772  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5604  m1_loss_mask_5: 0.1765  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5302  m1_loss_mask_6: 0.1764  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.5238  m1_loss_mask_7: 0.1746  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.5247  m1_loss_mask_8: 0.1745  m1_loss_dice_8: 1.225  m2_loss_ce: 0.5129  m2_loss_mask: 0.1625  m2_loss_dice: 1.217  m2_loss_ce_0: 0.605  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.6468  m2_loss_mask_1: 0.1709  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.5965  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5755  m2_loss_mask_3: 0.1656  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5346  m2_loss_mask_4: 0.1652  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5189  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5289  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5202  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.5196  m2_loss_mask_8: 0.1632  m2_loss_dice_8: 1.226  com_loss_ce: 0.4051  com_loss_mask: 0.03699  com_loss_dice: 0.2626    time: 1.3486  last_time: 1.4276  data_time: 0.0420  last_data_time: 0.0444   lr: 0.0001  max_mem: 34635M
[08/16 01:38:36] d2.utils.events INFO:  eta: 0:19:17  iter: 139  total_loss: 43.06  m1_loss_ce: 0.4914  m1_loss_mask: 0.1651  m1_loss_dice: 1.296  m1_loss_ce_0: 0.6623  m1_loss_mask_0: 0.1975  m1_loss_dice_0: 1.535  m1_loss_ce_1: 0.7297  m1_loss_mask_1: 0.1858  m1_loss_dice_1: 1.425  m1_loss_ce_2: 0.6494  m1_loss_mask_2: 0.1748  m1_loss_dice_2: 1.359  m1_loss_ce_3: 0.6006  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.279  m1_loss_ce_4: 0.5817  m1_loss_mask_4: 0.1701  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5635  m1_loss_mask_5: 0.1694  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.5392  m1_loss_mask_6: 0.1716  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.532  m1_loss_mask_7: 0.1711  m1_loss_dice_7: 1.275  m1_loss_ce_8: 0.5266  m1_loss_mask_8: 0.1701  m1_loss_dice_8: 1.281  m2_loss_ce: 0.5703  m2_loss_mask: 0.1665  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6624  m2_loss_mask_0: 0.1939  m2_loss_dice_0: 1.523  m2_loss_ce_1: 0.7154  m2_loss_mask_1: 0.1818  m2_loss_dice_1: 1.423  m2_loss_ce_2: 0.6511  m2_loss_mask_2: 0.1716  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.5861  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5643  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5473  m2_loss_mask_5: 0.1679  m2_loss_dice_5: 1.298  m2_loss_ce_6: 0.5506  m2_loss_mask_6: 0.168  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.5155  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.5368  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.28  com_loss_ce: 0.38  com_loss_mask: 0.03878  com_loss_dice: 0.2823    time: 1.3499  last_time: 1.3414  data_time: 0.0416  last_data_time: 0.0382   lr: 0.0001  max_mem: 34635M
[08/16 01:39:03] d2.utils.events INFO:  eta: 0:18:50  iter: 159  total_loss: 42.23  m1_loss_ce: 0.5347  m1_loss_mask: 0.1664  m1_loss_dice: 1.247  m1_loss_ce_0: 0.6459  m1_loss_mask_0: 0.1996  m1_loss_dice_0: 1.457  m1_loss_ce_1: 0.6625  m1_loss_mask_1: 0.1833  m1_loss_dice_1: 1.432  m1_loss_ce_2: 0.6105  m1_loss_mask_2: 0.1782  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.5661  m1_loss_mask_3: 0.1767  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.5638  m1_loss_mask_4: 0.1751  m1_loss_dice_4: 1.288  m1_loss_ce_5: 0.5371  m1_loss_mask_5: 0.1733  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.5446  m1_loss_mask_6: 0.1724  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.4986  m1_loss_mask_7: 0.1743  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.5222  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5416  m2_loss_mask: 0.1748  m2_loss_dice: 1.266  m2_loss_ce_0: 0.6203  m2_loss_mask_0: 0.1925  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.6598  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.631  m2_loss_mask_2: 0.1754  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.598  m2_loss_mask_3: 0.175  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5731  m2_loss_mask_4: 0.1745  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.552  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.5381  m2_loss_mask_6: 0.1707  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5115  m2_loss_mask_7: 0.1715  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5206  m2_loss_mask_8: 0.1705  m2_loss_dice_8: 1.223  com_loss_ce: 0.397  com_loss_mask: 0.04033  com_loss_dice: 0.2841    time: 1.3497  last_time: 1.3232  data_time: 0.0420  last_data_time: 0.0398   lr: 0.0001  max_mem: 34635M
[08/16 01:39:30] d2.utils.events INFO:  eta: 0:18:23  iter: 179  total_loss: 43.74  m1_loss_ce: 0.563  m1_loss_mask: 0.1611  m1_loss_dice: 1.346  m1_loss_ce_0: 0.6842  m1_loss_mask_0: 0.1896  m1_loss_dice_0: 1.552  m1_loss_ce_1: 0.7505  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.465  m1_loss_ce_2: 0.7069  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.36  m1_loss_ce_3: 0.6432  m1_loss_mask_3: 0.1718  m1_loss_dice_3: 1.338  m1_loss_ce_4: 0.6366  m1_loss_mask_4: 0.167  m1_loss_dice_4: 1.305  m1_loss_ce_5: 0.6119  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.5983  m1_loss_mask_6: 0.1669  m1_loss_dice_6: 1.316  m1_loss_ce_7: 0.5956  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.289  m1_loss_ce_8: 0.5574  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.315  m2_loss_ce: 0.5546  m2_loss_mask: 0.1576  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6508  m2_loss_mask_0: 0.1891  m2_loss_dice_0: 1.547  m2_loss_ce_1: 0.7183  m2_loss_mask_1: 0.1704  m2_loss_dice_1: 1.411  m2_loss_ce_2: 0.6292  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.6267  m2_loss_mask_3: 0.161  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.6092  m2_loss_mask_4: 0.1629  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.5881  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.302  m2_loss_ce_6: 0.5269  m2_loss_mask_6: 0.1598  m2_loss_dice_6: 1.295  m2_loss_ce_7: 0.5562  m2_loss_mask_7: 0.1598  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.549  m2_loss_mask_8: 0.1584  m2_loss_dice_8: 1.258  com_loss_ce: 0.4172  com_loss_mask: 0.03817  com_loss_dice: 0.2943    time: 1.3492  last_time: 1.3660  data_time: 0.0391  last_data_time: 0.0378   lr: 0.0001  max_mem: 34635M
[08/16 01:39:57] d2.utils.events INFO:  eta: 0:17:56  iter: 199  total_loss: 42.97  m1_loss_ce: 0.5272  m1_loss_mask: 0.1595  m1_loss_dice: 1.298  m1_loss_ce_0: 0.6732  m1_loss_mask_0: 0.1983  m1_loss_dice_0: 1.473  m1_loss_ce_1: 0.7138  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.433  m1_loss_ce_2: 0.6501  m1_loss_mask_2: 0.1782  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.6376  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.293  m1_loss_ce_4: 0.5999  m1_loss_mask_4: 0.1695  m1_loss_dice_4: 1.285  m1_loss_ce_5: 0.5683  m1_loss_mask_5: 0.1688  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.5807  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.5549  m1_loss_mask_7: 0.1696  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.5666  m1_loss_mask_8: 0.1659  m1_loss_dice_8: 1.244  m2_loss_ce: 0.5701  m2_loss_mask: 0.1581  m2_loss_dice: 1.232  m2_loss_ce_0: 0.6485  m2_loss_mask_0: 0.1883  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.7111  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.6563  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.5959  m2_loss_mask_3: 0.1593  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.6064  m2_loss_mask_4: 0.1622  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.5823  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.5641  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5712  m2_loss_mask_7: 0.1599  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5612  m2_loss_mask_8: 0.1602  m2_loss_dice_8: 1.246  com_loss_ce: 0.3988  com_loss_mask: 0.03568  com_loss_dice: 0.2673    time: 1.3509  last_time: 1.3325  data_time: 0.0395  last_data_time: 0.0376   lr: 0.0001  max_mem: 35066M
[08/16 01:40:24] d2.utils.events INFO:  eta: 0:17:27  iter: 219  total_loss: 41.79  m1_loss_ce: 0.4765  m1_loss_mask: 0.1706  m1_loss_dice: 1.257  m1_loss_ce_0: 0.5996  m1_loss_mask_0: 0.2006  m1_loss_dice_0: 1.482  m1_loss_ce_1: 0.6803  m1_loss_mask_1: 0.1829  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.6391  m1_loss_mask_2: 0.1803  m1_loss_dice_2: 1.31  m1_loss_ce_3: 0.5765  m1_loss_mask_3: 0.1773  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.5249  m1_loss_mask_4: 0.1741  m1_loss_dice_4: 1.266  m1_loss_ce_5: 0.5355  m1_loss_mask_5: 0.1732  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.515  m1_loss_mask_6: 0.1732  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.5033  m1_loss_mask_7: 0.1734  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.5297  m1_loss_mask_8: 0.1726  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5146  m2_loss_mask: 0.1717  m2_loss_dice: 1.235  m2_loss_ce_0: 0.5779  m2_loss_mask_0: 0.2017  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6408  m2_loss_mask_1: 0.1854  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.6063  m2_loss_mask_2: 0.18  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5652  m2_loss_mask_3: 0.178  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5544  m2_loss_mask_4: 0.1773  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5582  m2_loss_mask_5: 0.1766  m2_loss_dice_5: 1.302  m2_loss_ce_6: 0.5372  m2_loss_mask_6: 0.1727  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5492  m2_loss_mask_7: 0.1729  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.5245  m2_loss_mask_8: 0.1739  m2_loss_dice_8: 1.223  com_loss_ce: 0.378  com_loss_mask: 0.03994  com_loss_dice: 0.2738    time: 1.3502  last_time: 1.2720  data_time: 0.0395  last_data_time: 0.0350   lr: 0.0001  max_mem: 35066M
[08/16 01:40:52] d2.utils.events INFO:  eta: 0:17:01  iter: 239  total_loss: 42.26  m1_loss_ce: 0.5201  m1_loss_mask: 0.16  m1_loss_dice: 1.241  m1_loss_ce_0: 0.667  m1_loss_mask_0: 0.1933  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.7083  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.6662  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.6255  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.6132  m1_loss_mask_4: 0.1694  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.5857  m1_loss_mask_5: 0.1682  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5893  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.5557  m1_loss_mask_7: 0.1663  m1_loss_dice_7: 1.243  m1_loss_ce_8: 0.5552  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5812  m2_loss_mask: 0.1643  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6384  m2_loss_mask_0: 0.1967  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6828  m2_loss_mask_1: 0.1753  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.6637  m2_loss_mask_2: 0.1664  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.613  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5651  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.5803  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5861  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.582  m2_loss_mask_7: 0.1653  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5327  m2_loss_mask_8: 0.1647  m2_loss_dice_8: 1.235  com_loss_ce: 0.4283  com_loss_mask: 0.03691  com_loss_dice: 0.2615    time: 1.3509  last_time: 1.2947  data_time: 0.0394  last_data_time: 0.0436   lr: 0.0001  max_mem: 35533M
[08/16 01:41:18] d2.utils.events INFO:  eta: 0:16:32  iter: 259  total_loss: 42.11  m1_loss_ce: 0.4876  m1_loss_mask: 0.1633  m1_loss_dice: 1.259  m1_loss_ce_0: 0.6671  m1_loss_mask_0: 0.1802  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.7001  m1_loss_mask_1: 0.1721  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.6286  m1_loss_mask_2: 0.1674  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5543  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.5687  m1_loss_mask_4: 0.1652  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5367  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.5592  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.5289  m1_loss_mask_7: 0.1652  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.5241  m1_loss_mask_8: 0.1654  m1_loss_dice_8: 1.236  m2_loss_ce: 0.5223  m2_loss_mask: 0.1634  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6325  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.675  m2_loss_mask_1: 0.17  m2_loss_dice_1: 1.391  m2_loss_ce_2: 0.6382  m2_loss_mask_2: 0.1618  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.5453  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5623  m2_loss_mask_4: 0.1661  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.5485  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5335  m2_loss_mask_6: 0.1651  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5014  m2_loss_mask_7: 0.1639  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.494  m2_loss_mask_8: 0.1627  m2_loss_dice_8: 1.267  com_loss_ce: 0.3506  com_loss_mask: 0.03535  com_loss_dice: 0.2721    time: 1.3488  last_time: 1.3085  data_time: 0.0374  last_data_time: 0.0362   lr: 0.0001  max_mem: 35533M
[08/16 01:41:45] d2.utils.events INFO:  eta: 0:16:04  iter: 279  total_loss: 40.92  m1_loss_ce: 0.46  m1_loss_mask: 0.1607  m1_loss_dice: 1.25  m1_loss_ce_0: 0.624  m1_loss_mask_0: 0.1952  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.654  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.333  m1_loss_ce_2: 0.61  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.291  m1_loss_ce_3: 0.5635  m1_loss_mask_3: 0.1696  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.562  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.558  m1_loss_mask_5: 0.1674  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.5433  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.53  m1_loss_mask_7: 0.1655  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.517  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.222  m2_loss_ce: 0.5157  m2_loss_mask: 0.1678  m2_loss_dice: 1.227  m2_loss_ce_0: 0.6352  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6461  m2_loss_mask_1: 0.1787  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.6052  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.5501  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5395  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5642  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.5135  m2_loss_mask_6: 0.1711  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5312  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.501  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.224  com_loss_ce: 0.3639  com_loss_mask: 0.03809  com_loss_dice: 0.2693    time: 1.3471  last_time: 1.3331  data_time: 0.0380  last_data_time: 0.0306   lr: 0.0001  max_mem: 35533M
[08/16 01:42:12] d2.utils.events INFO:  eta: 0:15:36  iter: 299  total_loss: 42.03  m1_loss_ce: 0.5403  m1_loss_mask: 0.1528  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6846  m1_loss_mask_0: 0.1875  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.7084  m1_loss_mask_1: 0.1669  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.7011  m1_loss_mask_2: 0.161  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.6634  m1_loss_mask_3: 0.1572  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.6097  m1_loss_mask_4: 0.1561  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.6163  m1_loss_mask_5: 0.1543  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.5801  m1_loss_mask_6: 0.1565  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.5898  m1_loss_mask_7: 0.1569  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.5749  m1_loss_mask_8: 0.1558  m1_loss_dice_8: 1.218  m2_loss_ce: 0.5692  m2_loss_mask: 0.1537  m2_loss_dice: 1.192  m2_loss_ce_0: 0.6648  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.7219  m2_loss_mask_1: 0.171  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.684  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.6097  m2_loss_mask_3: 0.1589  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.5869  m2_loss_mask_4: 0.1564  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.6057  m2_loss_mask_5: 0.1572  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.563  m2_loss_mask_6: 0.1539  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5581  m2_loss_mask_7: 0.1555  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.575  m2_loss_mask_8: 0.1547  m2_loss_dice_8: 1.209  com_loss_ce: 0.4345  com_loss_mask: 0.03388  com_loss_dice: 0.2673    time: 1.3457  last_time: 1.2979  data_time: 0.0387  last_data_time: 0.0338   lr: 0.0001  max_mem: 35533M
[08/16 01:42:39] d2.utils.events INFO:  eta: 0:15:10  iter: 319  total_loss: 41.02  m1_loss_ce: 0.4902  m1_loss_mask: 0.1636  m1_loss_dice: 1.255  m1_loss_ce_0: 0.6714  m1_loss_mask_0: 0.1966  m1_loss_dice_0: 1.45  m1_loss_ce_1: 0.6762  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.6452  m1_loss_mask_2: 0.1767  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.6041  m1_loss_mask_3: 0.1716  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5816  m1_loss_mask_4: 0.1738  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.5493  m1_loss_mask_5: 0.1713  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.528  m1_loss_mask_6: 0.1687  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.5297  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.5445  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.233  m2_loss_ce: 0.5188  m2_loss_mask: 0.1786  m2_loss_dice: 1.198  m2_loss_ce_0: 0.5947  m2_loss_mask_0: 0.2025  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6825  m2_loss_mask_1: 0.1871  m2_loss_dice_1: 1.391  m2_loss_ce_2: 0.6113  m2_loss_mask_2: 0.1827  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5699  m2_loss_mask_3: 0.1806  m2_loss_dice_3: 1.215  m2_loss_ce_4: 0.5492  m2_loss_mask_4: 0.1837  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5513  m2_loss_mask_5: 0.1819  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.4993  m2_loss_mask_6: 0.1808  m2_loss_dice_6: 1.207  m2_loss_ce_7: 0.5293  m2_loss_mask_7: 0.1775  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.5083  m2_loss_mask_8: 0.1772  m2_loss_dice_8: 1.232  com_loss_ce: 0.3952  com_loss_mask: 0.03763  com_loss_dice: 0.2571    time: 1.3471  last_time: 1.3213  data_time: 0.0374  last_data_time: 0.0340   lr: 0.0001  max_mem: 35533M
[08/16 01:43:06] d2.utils.events INFO:  eta: 0:14:43  iter: 339  total_loss: 40.57  m1_loss_ce: 0.4798  m1_loss_mask: 0.1669  m1_loss_dice: 1.235  m1_loss_ce_0: 0.5913  m1_loss_mask_0: 0.1929  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.6626  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.6212  m1_loss_mask_2: 0.1727  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5506  m1_loss_mask_3: 0.1724  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.5386  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.5252  m1_loss_mask_5: 0.1707  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4882  m1_loss_mask_6: 0.1683  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4972  m1_loss_mask_7: 0.1689  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4902  m1_loss_mask_8: 0.1701  m1_loss_dice_8: 1.191  m2_loss_ce: 0.5291  m2_loss_mask: 0.167  m2_loss_dice: 1.217  m2_loss_ce_0: 0.65  m2_loss_mask_0: 0.2006  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6685  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.6434  m2_loss_mask_2: 0.1725  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.5728  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.518  m2_loss_mask_4: 0.1714  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.5337  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.5362  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.198  m2_loss_ce_7: 0.4949  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.5375  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.199  com_loss_ce: 0.3667  com_loss_mask: 0.03661  com_loss_dice: 0.2587    time: 1.3467  last_time: 1.3469  data_time: 0.0375  last_data_time: 0.0355   lr: 0.0001  max_mem: 35533M
[08/16 01:43:33] d2.utils.events INFO:  eta: 0:14:17  iter: 359  total_loss: 41.41  m1_loss_ce: 0.4703  m1_loss_mask: 0.1608  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6423  m1_loss_mask_0: 0.1916  m1_loss_dice_0: 1.442  m1_loss_ce_1: 0.6877  m1_loss_mask_1: 0.169  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.6013  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5891  m1_loss_mask_3: 0.1659  m1_loss_dice_3: 1.279  m1_loss_ce_4: 0.5719  m1_loss_mask_4: 0.1665  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.569  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.5041  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.5157  m1_loss_mask_7: 0.1675  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.4841  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.274  m2_loss_ce: 0.5761  m2_loss_mask: 0.1598  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6544  m2_loss_mask_0: 0.1895  m2_loss_dice_0: 1.484  m2_loss_ce_1: 0.7234  m2_loss_mask_1: 0.1709  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.6619  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.6091  m2_loss_mask_3: 0.1595  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.5757  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5722  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.5856  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.5498  m2_loss_mask_7: 0.1593  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.5371  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.292  com_loss_ce: 0.3988  com_loss_mask: 0.03499  com_loss_dice: 0.2817    time: 1.3473  last_time: 1.3937  data_time: 0.0388  last_data_time: 0.0463   lr: 0.0001  max_mem: 35533M
[08/16 01:44:00] d2.utils.events INFO:  eta: 0:13:50  iter: 379  total_loss: 41.85  m1_loss_ce: 0.5322  m1_loss_mask: 0.166  m1_loss_dice: 1.295  m1_loss_ce_0: 0.6404  m1_loss_mask_0: 0.1892  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.6635  m1_loss_mask_1: 0.1815  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6028  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.6225  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.5406  m1_loss_mask_4: 0.1701  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.5895  m1_loss_mask_5: 0.1666  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.5416  m1_loss_mask_6: 0.17  m1_loss_dice_6: 1.255  m1_loss_ce_7: 0.5371  m1_loss_mask_7: 0.1683  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.5765  m1_loss_mask_8: 0.1684  m1_loss_dice_8: 1.241  m2_loss_ce: 0.5454  m2_loss_mask: 0.1646  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6021  m2_loss_mask_0: 0.195  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.7039  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6356  m2_loss_mask_2: 0.1692  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5633  m2_loss_mask_3: 0.1659  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.561  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.5614  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5114  m2_loss_mask_6: 0.1641  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5258  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.5288  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.217  com_loss_ce: 0.3625  com_loss_mask: 0.03559  com_loss_dice: 0.264    time: 1.3471  last_time: 1.3010  data_time: 0.0390  last_data_time: 0.0447   lr: 0.0001  max_mem: 35533M
[08/16 01:44:27] d2.utils.events INFO:  eta: 0:13:23  iter: 399  total_loss: 40.91  m1_loss_ce: 0.4482  m1_loss_mask: 0.1574  m1_loss_dice: 1.245  m1_loss_ce_0: 0.6072  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6783  m1_loss_mask_1: 0.1765  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.5894  m1_loss_mask_2: 0.1708  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5639  m1_loss_mask_3: 0.171  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.541  m1_loss_mask_4: 0.1692  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.5224  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.5094  m1_loss_mask_6: 0.1604  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4916  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4719  m1_loss_mask_8: 0.1597  m1_loss_dice_8: 1.201  m2_loss_ce: 0.5282  m2_loss_mask: 0.161  m2_loss_dice: 1.206  m2_loss_ce_0: 0.6236  m2_loss_mask_0: 0.1941  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.6716  m2_loss_mask_1: 0.1777  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.632  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5658  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.55  m2_loss_mask_4: 0.1684  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5411  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5411  m2_loss_mask_6: 0.1611  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.5056  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.5186  m2_loss_mask_8: 0.1647  m2_loss_dice_8: 1.255  com_loss_ce: 0.38  com_loss_mask: 0.0367  com_loss_dice: 0.257    time: 1.3467  last_time: 1.3715  data_time: 0.0375  last_data_time: 0.0368   lr: 0.0001  max_mem: 35533M
[08/16 01:44:54] d2.utils.events INFO:  eta: 0:12:56  iter: 419  total_loss: 42.29  m1_loss_ce: 0.4955  m1_loss_mask: 0.1626  m1_loss_dice: 1.261  m1_loss_ce_0: 0.654  m1_loss_mask_0: 0.1925  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.7238  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.387  m1_loss_ce_2: 0.6528  m1_loss_mask_2: 0.1658  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.6237  m1_loss_mask_3: 0.169  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5815  m1_loss_mask_4: 0.1656  m1_loss_dice_4: 1.285  m1_loss_ce_5: 0.5512  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.244  m1_loss_ce_6: 0.5271  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.5072  m1_loss_mask_7: 0.1663  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.521  m1_loss_mask_8: 0.1659  m1_loss_dice_8: 1.217  m2_loss_ce: 0.51  m2_loss_mask: 0.1619  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6426  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.513  m2_loss_ce_1: 0.6884  m2_loss_mask_1: 0.1727  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.6831  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5977  m2_loss_mask_3: 0.1615  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5717  m2_loss_mask_4: 0.1627  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5709  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.233  m2_loss_ce_6: 0.5476  m2_loss_mask_6: 0.1636  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5625  m2_loss_mask_7: 0.1626  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.5452  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.2  com_loss_ce: 0.3998  com_loss_mask: 0.03491  com_loss_dice: 0.2739    time: 1.3467  last_time: 1.4596  data_time: 0.0377  last_data_time: 0.0394   lr: 0.0001  max_mem: 35533M
[08/16 01:45:21] d2.utils.events INFO:  eta: 0:12:29  iter: 439  total_loss: 40.91  m1_loss_ce: 0.4559  m1_loss_mask: 0.1694  m1_loss_dice: 1.205  m1_loss_ce_0: 0.6499  m1_loss_mask_0: 0.1938  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.6772  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.6305  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.5788  m1_loss_mask_3: 0.1803  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.5401  m1_loss_mask_4: 0.1775  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.5317  m1_loss_mask_5: 0.1742  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.5187  m1_loss_mask_6: 0.1728  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.5171  m1_loss_mask_7: 0.1721  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4912  m1_loss_mask_8: 0.1703  m1_loss_dice_8: 1.185  m2_loss_ce: 0.5167  m2_loss_mask: 0.1748  m2_loss_dice: 1.187  m2_loss_ce_0: 0.6175  m2_loss_mask_0: 0.2044  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6674  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.317  m2_loss_ce_2: 0.6153  m2_loss_mask_2: 0.1795  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.5781  m2_loss_mask_3: 0.1773  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5458  m2_loss_mask_4: 0.178  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5202  m2_loss_mask_5: 0.176  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.5315  m2_loss_mask_6: 0.1766  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.4965  m2_loss_mask_7: 0.1765  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.49  m2_loss_mask_8: 0.1749  m2_loss_dice_8: 1.227  com_loss_ce: 0.3901  com_loss_mask: 0.03777  com_loss_dice: 0.2541    time: 1.3460  last_time: 1.3455  data_time: 0.0372  last_data_time: 0.0300   lr: 0.0001  max_mem: 35533M
[08/16 01:45:47] d2.utils.events INFO:  eta: 0:12:02  iter: 459  total_loss: 39.2  m1_loss_ce: 0.4489  m1_loss_mask: 0.1656  m1_loss_dice: 1.132  m1_loss_ce_0: 0.6008  m1_loss_mask_0: 0.2018  m1_loss_dice_0: 1.322  m1_loss_ce_1: 0.646  m1_loss_mask_1: 0.1872  m1_loss_dice_1: 1.261  m1_loss_ce_2: 0.6003  m1_loss_mask_2: 0.1743  m1_loss_dice_2: 1.199  m1_loss_ce_3: 0.5436  m1_loss_mask_3: 0.1763  m1_loss_dice_3: 1.159  m1_loss_ce_4: 0.5429  m1_loss_mask_4: 0.1737  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.5163  m1_loss_mask_5: 0.1736  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.5035  m1_loss_mask_6: 0.174  m1_loss_dice_6: 1.155  m1_loss_ce_7: 0.4985  m1_loss_mask_7: 0.1717  m1_loss_dice_7: 1.115  m1_loss_ce_8: 0.496  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.117  m2_loss_ce: 0.4922  m2_loss_mask: 0.172  m2_loss_dice: 1.198  m2_loss_ce_0: 0.5885  m2_loss_mask_0: 0.2095  m2_loss_dice_0: 1.387  m2_loss_ce_1: 0.6438  m2_loss_mask_1: 0.1868  m2_loss_dice_1: 1.287  m2_loss_ce_2: 0.5792  m2_loss_mask_2: 0.1809  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5237  m2_loss_mask_3: 0.175  m2_loss_dice_3: 1.22  m2_loss_ce_4: 0.5032  m2_loss_mask_4: 0.1832  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.5177  m2_loss_mask_5: 0.1765  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.4819  m2_loss_mask_6: 0.175  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.4769  m2_loss_mask_7: 0.1748  m2_loss_dice_7: 1.199  m2_loss_ce_8: 0.4681  m2_loss_mask_8: 0.1727  m2_loss_dice_8: 1.179  com_loss_ce: 0.3758  com_loss_mask: 0.03655  com_loss_dice: 0.253    time: 1.3446  last_time: 1.3096  data_time: 0.0370  last_data_time: 0.0374   lr: 0.0001  max_mem: 35533M
[08/16 01:46:14] d2.utils.events INFO:  eta: 0:11:35  iter: 479  total_loss: 41.99  m1_loss_ce: 0.5043  m1_loss_mask: 0.1504  m1_loss_dice: 1.235  m1_loss_ce_0: 0.6553  m1_loss_mask_0: 0.1811  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.7006  m1_loss_mask_1: 0.1671  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.6578  m1_loss_mask_2: 0.1605  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.5939  m1_loss_mask_3: 0.1572  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.5688  m1_loss_mask_4: 0.157  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5755  m1_loss_mask_5: 0.1539  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.5449  m1_loss_mask_6: 0.154  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5524  m1_loss_mask_7: 0.154  m1_loss_dice_7: 1.211  m1_loss_ce_8: 0.5268  m1_loss_mask_8: 0.1522  m1_loss_dice_8: 1.215  m2_loss_ce: 0.5525  m2_loss_mask: 0.1533  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6328  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.7236  m2_loss_mask_1: 0.1647  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.6826  m2_loss_mask_2: 0.1569  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.574  m2_loss_mask_3: 0.1579  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5483  m2_loss_mask_4: 0.1573  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.5628  m2_loss_mask_5: 0.1569  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5412  m2_loss_mask_6: 0.1569  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.5354  m2_loss_mask_7: 0.1546  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.5303  m2_loss_mask_8: 0.1538  m2_loss_dice_8: 1.254  com_loss_ce: 0.433  com_loss_mask: 0.03701  com_loss_dice: 0.2656    time: 1.3445  last_time: 1.3332  data_time: 0.0377  last_data_time: 0.0373   lr: 0.0001  max_mem: 35533M
[08/16 01:46:42] d2.utils.events INFO:  eta: 0:11:08  iter: 499  total_loss: 42.09  m1_loss_ce: 0.454  m1_loss_mask: 0.1499  m1_loss_dice: 1.307  m1_loss_ce_0: 0.5969  m1_loss_mask_0: 0.1752  m1_loss_dice_0: 1.496  m1_loss_ce_1: 0.6572  m1_loss_mask_1: 0.1641  m1_loss_dice_1: 1.492  m1_loss_ce_2: 0.6144  m1_loss_mask_2: 0.155  m1_loss_dice_2: 1.389  m1_loss_ce_3: 0.5599  m1_loss_mask_3: 0.1552  m1_loss_dice_3: 1.313  m1_loss_ce_4: 0.5266  m1_loss_mask_4: 0.1551  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5041  m1_loss_mask_5: 0.1537  m1_loss_dice_5: 1.345  m1_loss_ce_6: 0.4832  m1_loss_mask_6: 0.1534  m1_loss_dice_6: 1.285  m1_loss_ce_7: 0.494  m1_loss_mask_7: 0.1545  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.4985  m1_loss_mask_8: 0.1534  m1_loss_dice_8: 1.262  m2_loss_ce: 0.5183  m2_loss_mask: 0.152  m2_loss_dice: 1.307  m2_loss_ce_0: 0.6314  m2_loss_mask_0: 0.1826  m2_loss_dice_0: 1.524  m2_loss_ce_1: 0.6889  m2_loss_mask_1: 0.1639  m2_loss_dice_1: 1.49  m2_loss_ce_2: 0.6383  m2_loss_mask_2: 0.1573  m2_loss_dice_2: 1.371  m2_loss_ce_3: 0.5702  m2_loss_mask_3: 0.1562  m2_loss_dice_3: 1.341  m2_loss_ce_4: 0.5456  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.324  m2_loss_ce_5: 0.5675  m2_loss_mask_5: 0.1574  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.5263  m2_loss_mask_6: 0.155  m2_loss_dice_6: 1.301  m2_loss_ce_7: 0.534  m2_loss_mask_7: 0.1533  m2_loss_dice_7: 1.299  m2_loss_ce_8: 0.5191  m2_loss_mask_8: 0.1531  m2_loss_dice_8: 1.311  com_loss_ce: 0.3866  com_loss_mask: 0.03162  com_loss_dice: 0.2789    time: 1.3457  last_time: 1.5865  data_time: 0.0395  last_data_time: 0.0493   lr: 0.0001  max_mem: 35533M
[08/16 01:47:09] d2.utils.events INFO:  eta: 0:10:41  iter: 519  total_loss: 42.98  m1_loss_ce: 0.4949  m1_loss_mask: 0.1535  m1_loss_dice: 1.256  m1_loss_ce_0: 0.6674  m1_loss_mask_0: 0.1893  m1_loss_dice_0: 1.522  m1_loss_ce_1: 0.7212  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.348  m1_loss_ce_2: 0.6537  m1_loss_mask_2: 0.1624  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.6421  m1_loss_mask_3: 0.1619  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.6009  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.5656  m1_loss_mask_5: 0.1605  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.5701  m1_loss_mask_6: 0.1597  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.5558  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.5616  m1_loss_mask_8: 0.1603  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5814  m2_loss_mask: 0.1618  m2_loss_dice: 1.219  m2_loss_ce_0: 0.6976  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.6933  m2_loss_mask_1: 0.1775  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.665  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5872  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5772  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5584  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.262  m2_loss_ce_6: 0.5391  m2_loss_mask_6: 0.1633  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.5697  m2_loss_mask_7: 0.1622  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.5633  m2_loss_mask_8: 0.1637  m2_loss_dice_8: 1.25  com_loss_ce: 0.4082  com_loss_mask: 0.03676  com_loss_dice: 0.2725    time: 1.3457  last_time: 1.3342  data_time: 0.0382  last_data_time: 0.0384   lr: 0.0001  max_mem: 35533M
[08/16 01:47:36] d2.utils.events INFO:  eta: 0:10:15  iter: 539  total_loss: 43  m1_loss_ce: 0.5279  m1_loss_mask: 0.1651  m1_loss_dice: 1.286  m1_loss_ce_0: 0.6771  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.7212  m1_loss_mask_1: 0.1777  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.6296  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.5965  m1_loss_mask_3: 0.1701  m1_loss_dice_3: 1.285  m1_loss_ce_4: 0.5883  m1_loss_mask_4: 0.1682  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.5405  m1_loss_mask_5: 0.1674  m1_loss_dice_5: 1.302  m1_loss_ce_6: 0.5197  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.5421  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.5308  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.271  m2_loss_ce: 0.5565  m2_loss_mask: 0.1656  m2_loss_dice: 1.275  m2_loss_ce_0: 0.6548  m2_loss_mask_0: 0.1987  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.737  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.6529  m2_loss_mask_2: 0.1731  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.6004  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.335  m2_loss_ce_4: 0.6029  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5773  m2_loss_mask_5: 0.17  m2_loss_dice_5: 1.287  m2_loss_ce_6: 0.5566  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.27  m2_loss_ce_7: 0.5645  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.568  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.31  com_loss_ce: 0.4257  com_loss_mask: 0.0374  com_loss_dice: 0.2784    time: 1.3462  last_time: 1.2888  data_time: 0.0396  last_data_time: 0.0314   lr: 0.0001  max_mem: 35533M
[08/16 01:48:04] d2.utils.events INFO:  eta: 0:09:49  iter: 559  total_loss: 43.26  m1_loss_ce: 0.4988  m1_loss_mask: 0.1564  m1_loss_dice: 1.3  m1_loss_ce_0: 0.6396  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.49  m1_loss_ce_1: 0.6935  m1_loss_mask_1: 0.1719  m1_loss_dice_1: 1.434  m1_loss_ce_2: 0.6769  m1_loss_mask_2: 0.1668  m1_loss_dice_2: 1.386  m1_loss_ce_3: 0.5929  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.342  m1_loss_ce_4: 0.5569  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.5536  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.326  m1_loss_ce_6: 0.533  m1_loss_mask_6: 0.1609  m1_loss_dice_6: 1.305  m1_loss_ce_7: 0.5457  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.292  m1_loss_ce_8: 0.5443  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.269  m2_loss_ce: 0.5499  m2_loss_mask: 0.1656  m2_loss_dice: 1.278  m2_loss_ce_0: 0.6566  m2_loss_mask_0: 0.1919  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.701  m2_loss_mask_1: 0.1741  m2_loss_dice_1: 1.464  m2_loss_ce_2: 0.6536  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.6169  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.6102  m2_loss_mask_4: 0.1679  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5834  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.319  m2_loss_ce_6: 0.5754  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.574  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.5524  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.276  com_loss_ce: 0.3845  com_loss_mask: 0.03633  com_loss_dice: 0.2754    time: 1.3467  last_time: 1.3459  data_time: 0.0387  last_data_time: 0.0431   lr: 0.0001  max_mem: 35533M
[08/16 01:48:31] d2.utils.events INFO:  eta: 0:09:22  iter: 579  total_loss: 42.63  m1_loss_ce: 0.5007  m1_loss_mask: 0.1525  m1_loss_dice: 1.268  m1_loss_ce_0: 0.6518  m1_loss_mask_0: 0.1865  m1_loss_dice_0: 1.505  m1_loss_ce_1: 0.725  m1_loss_mask_1: 0.1679  m1_loss_dice_1: 1.42  m1_loss_ce_2: 0.6512  m1_loss_mask_2: 0.1579  m1_loss_dice_2: 1.366  m1_loss_ce_3: 0.5634  m1_loss_mask_3: 0.1547  m1_loss_dice_3: 1.294  m1_loss_ce_4: 0.5555  m1_loss_mask_4: 0.1594  m1_loss_dice_4: 1.299  m1_loss_ce_5: 0.5617  m1_loss_mask_5: 0.1576  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.5238  m1_loss_mask_6: 0.1565  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.523  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.5265  m1_loss_mask_8: 0.1569  m1_loss_dice_8: 1.272  m2_loss_ce: 0.5666  m2_loss_mask: 0.1542  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6639  m2_loss_mask_0: 0.19  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.7181  m2_loss_mask_1: 0.1656  m2_loss_dice_1: 1.431  m2_loss_ce_2: 0.681  m2_loss_mask_2: 0.157  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.6027  m2_loss_mask_3: 0.1554  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5865  m2_loss_mask_4: 0.1592  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.611  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.5556  m2_loss_mask_6: 0.156  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.5446  m2_loss_mask_7: 0.1562  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.5597  m2_loss_mask_8: 0.1545  m2_loss_dice_8: 1.27  com_loss_ce: 0.4132  com_loss_mask: 0.03247  com_loss_dice: 0.2691    time: 1.3467  last_time: 1.3230  data_time: 0.0399  last_data_time: 0.0401   lr: 0.0001  max_mem: 35533M
[08/16 01:48:57] d2.utils.events INFO:  eta: 0:08:55  iter: 599  total_loss: 42.09  m1_loss_ce: 0.4941  m1_loss_mask: 0.1617  m1_loss_dice: 1.242  m1_loss_ce_0: 0.6654  m1_loss_mask_0: 0.1984  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.7038  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.6294  m1_loss_mask_2: 0.1728  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.5712  m1_loss_mask_3: 0.1662  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.5555  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.5443  m1_loss_mask_5: 0.1634  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.5292  m1_loss_mask_6: 0.166  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5074  m1_loss_mask_7: 0.1641  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.5154  m1_loss_mask_8: 0.1644  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5495  m2_loss_mask: 0.1664  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6205  m2_loss_mask_0: 0.2029  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.7003  m2_loss_mask_1: 0.178  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6441  m2_loss_mask_2: 0.1679  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.5819  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5612  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.5639  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.537  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5462  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.5377  m2_loss_mask_8: 0.1663  m2_loss_dice_8: 1.21  com_loss_ce: 0.3897  com_loss_mask: 0.03546  com_loss_dice: 0.2605    time: 1.3461  last_time: 1.2953  data_time: 0.0386  last_data_time: 0.0420   lr: 0.0001  max_mem: 35533M
[08/16 01:49:24] d2.utils.events INFO:  eta: 0:08:28  iter: 619  total_loss: 41.4  m1_loss_ce: 0.4573  m1_loss_mask: 0.169  m1_loss_dice: 1.248  m1_loss_ce_0: 0.6479  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.6998  m1_loss_mask_1: 0.1874  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.6188  m1_loss_mask_2: 0.1747  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5374  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.5068  m1_loss_mask_4: 0.175  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.5067  m1_loss_mask_5: 0.1711  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4912  m1_loss_mask_6: 0.1689  m1_loss_dice_6: 1.208  m1_loss_ce_7: 0.5695  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.5226  m1_loss_mask_8: 0.1692  m1_loss_dice_8: 1.195  m2_loss_ce: 0.5275  m2_loss_mask: 0.1731  m2_loss_dice: 1.202  m2_loss_ce_0: 0.6266  m2_loss_mask_0: 0.2011  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6659  m2_loss_mask_1: 0.1892  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.6035  m2_loss_mask_2: 0.1756  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5656  m2_loss_mask_3: 0.1764  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5735  m2_loss_mask_4: 0.1749  m2_loss_dice_4: 1.206  m2_loss_ce_5: 0.5564  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5461  m2_loss_mask_6: 0.175  m2_loss_dice_6: 1.192  m2_loss_ce_7: 0.549  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.5649  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.216  com_loss_ce: 0.3758  com_loss_mask: 0.03592  com_loss_dice: 0.2551    time: 1.3457  last_time: 1.3184  data_time: 0.0371  last_data_time: 0.0370   lr: 0.0001  max_mem: 35533M
[08/16 01:49:51] d2.utils.events INFO:  eta: 0:08:01  iter: 639  total_loss: 42.81  m1_loss_ce: 0.4507  m1_loss_mask: 0.1778  m1_loss_dice: 1.296  m1_loss_ce_0: 0.6057  m1_loss_mask_0: 0.2053  m1_loss_dice_0: 1.527  m1_loss_ce_1: 0.6566  m1_loss_mask_1: 0.1849  m1_loss_dice_1: 1.406  m1_loss_ce_2: 0.5614  m1_loss_mask_2: 0.1795  m1_loss_dice_2: 1.353  m1_loss_ce_3: 0.5116  m1_loss_mask_3: 0.1806  m1_loss_dice_3: 1.326  m1_loss_ce_4: 0.475  m1_loss_mask_4: 0.1809  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.4823  m1_loss_mask_5: 0.1778  m1_loss_dice_5: 1.301  m1_loss_ce_6: 0.4867  m1_loss_mask_6: 0.1807  m1_loss_dice_6: 1.294  m1_loss_ce_7: 0.484  m1_loss_mask_7: 0.1754  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.475  m1_loss_mask_8: 0.1768  m1_loss_dice_8: 1.245  m2_loss_ce: 0.4951  m2_loss_mask: 0.1722  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6124  m2_loss_mask_0: 0.204  m2_loss_dice_0: 1.507  m2_loss_ce_1: 0.6278  m2_loss_mask_1: 0.1873  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.635  m2_loss_mask_2: 0.1784  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5606  m2_loss_mask_3: 0.179  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5003  m2_loss_mask_4: 0.1794  m2_loss_dice_4: 1.291  m2_loss_ce_5: 0.5292  m2_loss_mask_5: 0.1781  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.507  m2_loss_mask_6: 0.1739  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.509  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.4935  m2_loss_mask_8: 0.1733  m2_loss_dice_8: 1.247  com_loss_ce: 0.3552  com_loss_mask: 0.03711  com_loss_dice: 0.2781    time: 1.3454  last_time: 1.4365  data_time: 0.0382  last_data_time: 0.0349   lr: 0.0001  max_mem: 35533M
[08/16 01:50:18] d2.utils.events INFO:  eta: 0:07:34  iter: 659  total_loss: 39.65  m1_loss_ce: 0.4494  m1_loss_mask: 0.1585  m1_loss_dice: 1.228  m1_loss_ce_0: 0.6729  m1_loss_mask_0: 0.1862  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.6979  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.6345  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.5723  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.219  m1_loss_ce_4: 0.5315  m1_loss_mask_4: 0.1666  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.519  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.5091  m1_loss_mask_6: 0.1596  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.5222  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4782  m1_loss_mask_8: 0.164  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4902  m2_loss_mask: 0.1628  m2_loss_dice: 1.171  m2_loss_ce_0: 0.6202  m2_loss_mask_0: 0.1895  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.6621  m2_loss_mask_1: 0.1757  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.6018  m2_loss_mask_2: 0.1645  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5682  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.223  m2_loss_ce_4: 0.527  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.5302  m2_loss_mask_5: 0.1659  m2_loss_dice_5: 1.214  m2_loss_ce_6: 0.5118  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.185  m2_loss_ce_7: 0.4865  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.5195  m2_loss_mask_8: 0.1637  m2_loss_dice_8: 1.198  com_loss_ce: 0.3649  com_loss_mask: 0.03413  com_loss_dice: 0.253    time: 1.3449  last_time: 1.3388  data_time: 0.0375  last_data_time: 0.0390   lr: 0.0001  max_mem: 35533M
[08/16 01:50:44] d2.utils.events INFO:  eta: 0:07:07  iter: 679  total_loss: 40.07  m1_loss_ce: 0.4746  m1_loss_mask: 0.1642  m1_loss_dice: 1.187  m1_loss_ce_0: 0.6536  m1_loss_mask_0: 0.1943  m1_loss_dice_0: 1.349  m1_loss_ce_1: 0.7038  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.278  m1_loss_ce_2: 0.6055  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5943  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.5616  m1_loss_mask_4: 0.1691  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.5598  m1_loss_mask_5: 0.1673  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.5361  m1_loss_mask_6: 0.166  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.54  m1_loss_mask_7: 0.1666  m1_loss_dice_7: 1.15  m1_loss_ce_8: 0.4892  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.161  m2_loss_ce: 0.5369  m2_loss_mask: 0.1672  m2_loss_dice: 1.173  m2_loss_ce_0: 0.6317  m2_loss_mask_0: 0.1904  m2_loss_dice_0: 1.409  m2_loss_ce_1: 0.6872  m2_loss_mask_1: 0.1748  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.6185  m2_loss_mask_2: 0.1657  m2_loss_dice_2: 1.254  m2_loss_ce_3: 0.5805  m2_loss_mask_3: 0.1641  m2_loss_dice_3: 1.223  m2_loss_ce_4: 0.5494  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5536  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.5551  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.207  m2_loss_ce_7: 0.5369  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.188  m2_loss_ce_8: 0.5026  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.224  com_loss_ce: 0.4167  com_loss_mask: 0.03586  com_loss_dice: 0.2563    time: 1.3446  last_time: 1.3490  data_time: 0.0375  last_data_time: 0.0367   lr: 0.0001  max_mem: 35533M
[08/16 01:51:11] d2.utils.events INFO:  eta: 0:06:41  iter: 699  total_loss: 38.72  m1_loss_ce: 0.463  m1_loss_mask: 0.158  m1_loss_dice: 1.165  m1_loss_ce_0: 0.6015  m1_loss_mask_0: 0.1848  m1_loss_dice_0: 1.344  m1_loss_ce_1: 0.6856  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.251  m1_loss_ce_2: 0.5927  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.217  m1_loss_ce_3: 0.5488  m1_loss_mask_3: 0.1645  m1_loss_dice_3: 1.164  m1_loss_ce_4: 0.5066  m1_loss_mask_4: 0.1637  m1_loss_dice_4: 1.174  m1_loss_ce_5: 0.5138  m1_loss_mask_5: 0.1609  m1_loss_dice_5: 1.157  m1_loss_ce_6: 0.4766  m1_loss_mask_6: 0.1618  m1_loss_dice_6: 1.139  m1_loss_ce_7: 0.4926  m1_loss_mask_7: 0.1613  m1_loss_dice_7: 1.101  m1_loss_ce_8: 0.4908  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.125  m2_loss_ce: 0.5136  m2_loss_mask: 0.1649  m2_loss_dice: 1.181  m2_loss_ce_0: 0.5947  m2_loss_mask_0: 0.1963  m2_loss_dice_0: 1.362  m2_loss_ce_1: 0.662  m2_loss_mask_1: 0.1763  m2_loss_dice_1: 1.301  m2_loss_ce_2: 0.6063  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.225  m2_loss_ce_3: 0.5486  m2_loss_mask_3: 0.1676  m2_loss_dice_3: 1.179  m2_loss_ce_4: 0.5234  m2_loss_mask_4: 0.1708  m2_loss_dice_4: 1.182  m2_loss_ce_5: 0.5284  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.5056  m2_loss_mask_6: 0.1663  m2_loss_dice_6: 1.154  m2_loss_ce_7: 0.5028  m2_loss_mask_7: 0.1692  m2_loss_dice_7: 1.166  m2_loss_ce_8: 0.4833  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.16  com_loss_ce: 0.3396  com_loss_mask: 0.03509  com_loss_dice: 0.2457    time: 1.3438  last_time: 1.3188  data_time: 0.0361  last_data_time: 0.0378   lr: 0.0001  max_mem: 35533M
[08/16 01:51:38] d2.utils.events INFO:  eta: 0:06:14  iter: 719  total_loss: 41.29  m1_loss_ce: 0.4695  m1_loss_mask: 0.1752  m1_loss_dice: 1.276  m1_loss_ce_0: 0.6135  m1_loss_mask_0: 0.2027  m1_loss_dice_0: 1.436  m1_loss_ce_1: 0.7028  m1_loss_mask_1: 0.1907  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.5868  m1_loss_mask_2: 0.1829  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5492  m1_loss_mask_3: 0.1807  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.5561  m1_loss_mask_4: 0.1825  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.5373  m1_loss_mask_5: 0.1813  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5126  m1_loss_mask_6: 0.1817  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.5259  m1_loss_mask_7: 0.18  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.5122  m1_loss_mask_8: 0.1753  m1_loss_dice_8: 1.228  m2_loss_ce: 0.5249  m2_loss_mask: 0.1799  m2_loss_dice: 1.265  m2_loss_ce_0: 0.6446  m2_loss_mask_0: 0.2185  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6903  m2_loss_mask_1: 0.1946  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.6301  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5945  m2_loss_mask_3: 0.1774  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.5521  m2_loss_mask_4: 0.1795  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.5465  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.541  m2_loss_mask_6: 0.1783  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5239  m2_loss_mask_7: 0.1764  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.5248  m2_loss_mask_8: 0.1771  m2_loss_dice_8: 1.248  com_loss_ce: 0.3752  com_loss_mask: 0.03762  com_loss_dice: 0.258    time: 1.3442  last_time: 1.4144  data_time: 0.0368  last_data_time: 0.0309   lr: 0.0001  max_mem: 35533M
[08/16 01:52:06] d2.utils.events INFO:  eta: 0:05:47  iter: 739  total_loss: 41.89  m1_loss_ce: 0.442  m1_loss_mask: 0.1635  m1_loss_dice: 1.268  m1_loss_ce_0: 0.636  m1_loss_mask_0: 0.1942  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6911  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.624  m1_loss_mask_2: 0.169  m1_loss_dice_2: 1.313  m1_loss_ce_3: 0.5554  m1_loss_mask_3: 0.1663  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.5192  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.286  m1_loss_ce_5: 0.528  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.5034  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5153  m1_loss_mask_7: 0.1652  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.5073  m1_loss_mask_8: 0.1638  m1_loss_dice_8: 1.232  m2_loss_ce: 0.5632  m2_loss_mask: 0.1631  m2_loss_dice: 1.277  m2_loss_ce_0: 0.6457  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.6896  m2_loss_mask_1: 0.18  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.6279  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5701  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5745  m2_loss_mask_4: 0.1679  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.6026  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.5588  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5451  m2_loss_mask_7: 0.166  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.5473  m2_loss_mask_8: 0.1664  m2_loss_dice_8: 1.244  com_loss_ce: 0.3717  com_loss_mask: 0.03538  com_loss_dice: 0.262    time: 1.3455  last_time: 1.3867  data_time: 0.0400  last_data_time: 0.0415   lr: 0.0001  max_mem: 35533M
[08/16 01:52:34] d2.utils.events INFO:  eta: 0:05:21  iter: 759  total_loss: 40.66  m1_loss_ce: 0.4327  m1_loss_mask: 0.1537  m1_loss_dice: 1.272  m1_loss_ce_0: 0.609  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.457  m1_loss_ce_1: 0.6219  m1_loss_mask_1: 0.1753  m1_loss_dice_1: 1.384  m1_loss_ce_2: 0.5418  m1_loss_mask_2: 0.1677  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5258  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.301  m1_loss_ce_4: 0.5149  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5123  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.281  m1_loss_ce_6: 0.4993  m1_loss_mask_6: 0.1649  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.452  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.4846  m1_loss_mask_8: 0.1588  m1_loss_dice_8: 1.234  m2_loss_ce: 0.5218  m2_loss_mask: 0.1673  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6034  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.54  m2_loss_ce_1: 0.6557  m2_loss_mask_1: 0.1802  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.6085  m2_loss_mask_2: 0.1732  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5601  m2_loss_mask_3: 0.1745  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5424  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5204  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.307  m2_loss_ce_6: 0.5269  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4974  m2_loss_mask_7: 0.1693  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.5005  m2_loss_mask_8: 0.1717  m2_loss_dice_8: 1.303  com_loss_ce: 0.3848  com_loss_mask: 0.03499  com_loss_dice: 0.2704    time: 1.3467  last_time: 1.4160  data_time: 0.0406  last_data_time: 0.0359   lr: 0.0001  max_mem: 35533M
[08/16 01:53:02] d2.utils.events INFO:  eta: 0:04:54  iter: 779  total_loss: 41.96  m1_loss_ce: 0.4743  m1_loss_mask: 0.1686  m1_loss_dice: 1.23  m1_loss_ce_0: 0.6325  m1_loss_mask_0: 0.1894  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.7092  m1_loss_mask_1: 0.1814  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.6246  m1_loss_mask_2: 0.1703  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5859  m1_loss_mask_3: 0.1683  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5751  m1_loss_mask_4: 0.1678  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5639  m1_loss_mask_5: 0.1698  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.5646  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.5421  m1_loss_mask_7: 0.1718  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.5437  m1_loss_mask_8: 0.1695  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5736  m2_loss_mask: 0.1656  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6699  m2_loss_mask_0: 0.2013  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.7151  m2_loss_mask_1: 0.1844  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6884  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.344  m2_loss_ce_3: 0.6118  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5986  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.6026  m2_loss_mask_5: 0.165  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.5715  m2_loss_mask_6: 0.1672  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.5898  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.283  m2_loss_ce_8: 0.5604  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.273  com_loss_ce: 0.4035  com_loss_mask: 0.03825  com_loss_dice: 0.2706    time: 1.3472  last_time: 1.3452  data_time: 0.0388  last_data_time: 0.0399   lr: 0.0001  max_mem: 35533M
[08/16 01:53:28] d2.utils.events INFO:  eta: 0:04:27  iter: 799  total_loss: 40.54  m1_loss_ce: 0.4357  m1_loss_mask: 0.152  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5537  m1_loss_mask_0: 0.1788  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.6434  m1_loss_mask_1: 0.1649  m1_loss_dice_1: 1.307  m1_loss_ce_2: 0.5657  m1_loss_mask_2: 0.1576  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5212  m1_loss_mask_3: 0.1584  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.4731  m1_loss_mask_4: 0.157  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.4931  m1_loss_mask_5: 0.1551  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4634  m1_loss_mask_6: 0.1534  m1_loss_dice_6: 1.199  m1_loss_ce_7: 0.4699  m1_loss_mask_7: 0.1503  m1_loss_dice_7: 1.177  m1_loss_ce_8: 0.4642  m1_loss_mask_8: 0.1516  m1_loss_dice_8: 1.157  m2_loss_ce: 0.4673  m2_loss_mask: 0.1555  m2_loss_dice: 1.223  m2_loss_ce_0: 0.5626  m2_loss_mask_0: 0.1912  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.623  m2_loss_mask_1: 0.1749  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.5845  m2_loss_mask_2: 0.1638  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.5381  m2_loss_mask_3: 0.1598  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5129  m2_loss_mask_4: 0.1548  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.4879  m2_loss_mask_5: 0.1549  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.4658  m2_loss_mask_6: 0.1524  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.4752  m2_loss_mask_7: 0.1523  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.4878  m2_loss_mask_8: 0.1561  m2_loss_dice_8: 1.223  com_loss_ce: 0.3366  com_loss_mask: 0.03205  com_loss_dice: 0.2582    time: 1.3470  last_time: 1.3228  data_time: 0.0408  last_data_time: 0.0484   lr: 0.0001  max_mem: 35533M
[08/16 01:53:55] d2.utils.events INFO:  eta: 0:04:00  iter: 819  total_loss: 38.31  m1_loss_ce: 0.4352  m1_loss_mask: 0.1578  m1_loss_dice: 1.126  m1_loss_ce_0: 0.5742  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.327  m1_loss_ce_1: 0.6441  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.271  m1_loss_ce_2: 0.566  m1_loss_mask_2: 0.1686  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.5256  m1_loss_mask_3: 0.1651  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.4958  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.4932  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.155  m1_loss_ce_6: 0.5011  m1_loss_mask_6: 0.1602  m1_loss_dice_6: 1.149  m1_loss_ce_7: 0.4826  m1_loss_mask_7: 0.1619  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4733  m1_loss_mask_8: 0.1605  m1_loss_dice_8: 1.167  m2_loss_ce: 0.5227  m2_loss_mask: 0.1655  m2_loss_dice: 1.169  m2_loss_ce_0: 0.6062  m2_loss_mask_0: 0.1926  m2_loss_dice_0: 1.375  m2_loss_ce_1: 0.6646  m2_loss_mask_1: 0.1775  m2_loss_dice_1: 1.312  m2_loss_ce_2: 0.5866  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.232  m2_loss_ce_3: 0.5462  m2_loss_mask_3: 0.1705  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.5209  m2_loss_mask_4: 0.1681  m2_loss_dice_4: 1.177  m2_loss_ce_5: 0.5082  m2_loss_mask_5: 0.1706  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.5142  m2_loss_mask_6: 0.1668  m2_loss_dice_6: 1.171  m2_loss_ce_7: 0.5033  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4848  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.165  com_loss_ce: 0.3559  com_loss_mask: 0.03585  com_loss_dice: 0.2467    time: 1.3466  last_time: 1.2983  data_time: 0.0387  last_data_time: 0.0332   lr: 0.0001  max_mem: 35533M
[08/16 01:54:22] d2.utils.events INFO:  eta: 0:03:34  iter: 839  total_loss: 40.45  m1_loss_ce: 0.4402  m1_loss_mask: 0.1619  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5968  m1_loss_mask_0: 0.1936  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.6394  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.6108  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5274  m1_loss_mask_3: 0.1696  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.4782  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.5016  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.5132  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4953  m1_loss_mask_7: 0.1645  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.469  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5133  m2_loss_mask: 0.1689  m2_loss_dice: 1.225  m2_loss_ce_0: 0.5848  m2_loss_mask_0: 0.199  m2_loss_dice_0: 1.486  m2_loss_ce_1: 0.6389  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.5899  m2_loss_mask_2: 0.1793  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5375  m2_loss_mask_3: 0.1783  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.552  m2_loss_mask_4: 0.1757  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.5224  m2_loss_mask_5: 0.1713  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5223  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.4989  m2_loss_mask_7: 0.1679  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.5178  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.206  com_loss_ce: 0.3595  com_loss_mask: 0.0361  com_loss_dice: 0.2711    time: 1.3465  last_time: 1.3103  data_time: 0.0387  last_data_time: 0.0416   lr: 0.0001  max_mem: 35533M
[08/16 01:54:50] d2.utils.events INFO:  eta: 0:03:07  iter: 859  total_loss: 42.89  m1_loss_ce: 0.4793  m1_loss_mask: 0.1615  m1_loss_dice: 1.27  m1_loss_ce_0: 0.6172  m1_loss_mask_0: 0.192  m1_loss_dice_0: 1.481  m1_loss_ce_1: 0.6855  m1_loss_mask_1: 0.1815  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.61  m1_loss_mask_2: 0.1715  m1_loss_dice_2: 1.358  m1_loss_ce_3: 0.5532  m1_loss_mask_3: 0.1725  m1_loss_dice_3: 1.293  m1_loss_ce_4: 0.5451  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.29  m1_loss_ce_5: 0.5507  m1_loss_mask_5: 0.1671  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.5296  m1_loss_mask_6: 0.1637  m1_loss_dice_6: 1.251  m1_loss_ce_7: 0.5512  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.5261  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5399  m2_loss_mask: 0.1662  m2_loss_dice: 1.256  m2_loss_ce_0: 0.6429  m2_loss_mask_0: 0.2039  m2_loss_dice_0: 1.517  m2_loss_ce_1: 0.6977  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.469  m2_loss_ce_2: 0.6441  m2_loss_mask_2: 0.1729  m2_loss_dice_2: 1.368  m2_loss_ce_3: 0.5975  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5695  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.541  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.312  m2_loss_ce_6: 0.5374  m2_loss_mask_6: 0.1642  m2_loss_dice_6: 1.293  m2_loss_ce_7: 0.5173  m2_loss_mask_7: 0.165  m2_loss_dice_7: 1.31  m2_loss_ce_8: 0.5249  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.292  com_loss_ce: 0.406  com_loss_mask: 0.03635  com_loss_dice: 0.2724    time: 1.3470  last_time: 1.4145  data_time: 0.0398  last_data_time: 0.0406   lr: 0.0001  max_mem: 35533M
[08/16 01:55:16] d2.utils.events INFO:  eta: 0:02:40  iter: 879  total_loss: 40.53  m1_loss_ce: 0.4468  m1_loss_mask: 0.1628  m1_loss_dice: 1.239  m1_loss_ce_0: 0.6028  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6535  m1_loss_mask_1: 0.1809  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.5997  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.5628  m1_loss_mask_3: 0.1686  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.5158  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5151  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5183  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5233  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.4824  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.2  m2_loss_ce: 0.5099  m2_loss_mask: 0.1701  m2_loss_dice: 1.192  m2_loss_ce_0: 0.6227  m2_loss_mask_0: 0.2006  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6574  m2_loss_mask_1: 0.1833  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.5924  m2_loss_mask_2: 0.1697  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.571  m2_loss_mask_3: 0.1721  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5551  m2_loss_mask_4: 0.171  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.534  m2_loss_mask_5: 0.1709  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.5192  m2_loss_mask_6: 0.1727  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5169  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.5081  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.23  com_loss_ce: 0.4434  com_loss_mask: 0.03813  com_loss_dice: 0.2685    time: 1.3468  last_time: 1.3379  data_time: 0.0372  last_data_time: 0.0393   lr: 0.0001  max_mem: 35533M
[08/16 01:55:43] d2.utils.events INFO:  eta: 0:02:13  iter: 899  total_loss: 41.67  m1_loss_ce: 0.4871  m1_loss_mask: 0.1677  m1_loss_dice: 1.247  m1_loss_ce_0: 0.678  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.717  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.6768  m1_loss_mask_2: 0.1748  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.6209  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.55  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.5674  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.5825  m1_loss_mask_6: 0.1711  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.5674  m1_loss_mask_7: 0.1696  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.5673  m1_loss_mask_8: 0.1692  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5417  m2_loss_mask: 0.1758  m2_loss_dice: 1.223  m2_loss_ce_0: 0.7131  m2_loss_mask_0: 0.2088  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.7395  m2_loss_mask_1: 0.1897  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.6878  m2_loss_mask_2: 0.1781  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.6143  m2_loss_mask_3: 0.1773  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5863  m2_loss_mask_4: 0.1774  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.568  m2_loss_mask_5: 0.1757  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.5967  m2_loss_mask_6: 0.175  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.5763  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.5746  m2_loss_mask_8: 0.1755  m2_loss_dice_8: 1.26  com_loss_ce: 0.4222  com_loss_mask: 0.03637  com_loss_dice: 0.2609    time: 1.3467  last_time: 1.3172  data_time: 0.0387  last_data_time: 0.0378   lr: 0.0001  max_mem: 35533M
[08/16 01:56:11] d2.utils.events INFO:  eta: 0:01:47  iter: 919  total_loss: 41.87  m1_loss_ce: 0.4868  m1_loss_mask: 0.1657  m1_loss_dice: 1.25  m1_loss_ce_0: 0.6441  m1_loss_mask_0: 0.1834  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.6892  m1_loss_mask_1: 0.1761  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.6453  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5852  m1_loss_mask_3: 0.1747  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.5181  m1_loss_mask_4: 0.1725  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.5226  m1_loss_mask_5: 0.1694  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.5011  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5328  m1_loss_mask_7: 0.1681  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.507  m1_loss_mask_8: 0.1684  m1_loss_dice_8: 1.194  m2_loss_ce: 0.5509  m2_loss_mask: 0.1625  m2_loss_dice: 1.196  m2_loss_ce_0: 0.6876  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.761  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.6721  m2_loss_mask_2: 0.1666  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.6313  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.6071  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.5894  m2_loss_mask_5: 0.168  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5567  m2_loss_mask_6: 0.165  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5738  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.5555  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.244  com_loss_ce: 0.4267  com_loss_mask: 0.03688  com_loss_dice: 0.274    time: 1.3470  last_time: 1.3552  data_time: 0.0406  last_data_time: 0.0462   lr: 0.0001  max_mem: 35533M
[08/16 01:56:38] d2.utils.events INFO:  eta: 0:01:20  iter: 939  total_loss: 40.58  m1_loss_ce: 0.4819  m1_loss_mask: 0.1657  m1_loss_dice: 1.221  m1_loss_ce_0: 0.642  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.6936  m1_loss_mask_1: 0.1822  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.6423  m1_loss_mask_2: 0.1698  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.5925  m1_loss_mask_3: 0.171  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.5902  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.5315  m1_loss_mask_5: 0.169  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5616  m1_loss_mask_6: 0.1685  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.539  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.5508  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5483  m2_loss_mask: 0.1762  m2_loss_dice: 1.235  m2_loss_ce_0: 0.6129  m2_loss_mask_0: 0.216  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.7007  m2_loss_mask_1: 0.1847  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6654  m2_loss_mask_2: 0.1778  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5914  m2_loss_mask_3: 0.1751  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5694  m2_loss_mask_4: 0.1811  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5583  m2_loss_mask_5: 0.1785  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.5196  m2_loss_mask_6: 0.1771  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.5681  m2_loss_mask_7: 0.1752  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.5466  m2_loss_mask_8: 0.1769  m2_loss_dice_8: 1.223  com_loss_ce: 0.4373  com_loss_mask: 0.03782  com_loss_dice: 0.2727    time: 1.3469  last_time: 1.3056  data_time: 0.0393  last_data_time: 0.0386   lr: 0.0001  max_mem: 35533M
[08/16 01:57:04] d2.utils.events INFO:  eta: 0:00:53  iter: 959  total_loss: 41.44  m1_loss_ce: 0.4829  m1_loss_mask: 0.1575  m1_loss_dice: 1.247  m1_loss_ce_0: 0.6583  m1_loss_mask_0: 0.1795  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.7058  m1_loss_mask_1: 0.1732  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6051  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.5745  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5712  m1_loss_mask_4: 0.1637  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5308  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.5141  m1_loss_mask_6: 0.1608  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.5368  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.5159  m1_loss_mask_8: 0.1606  m1_loss_dice_8: 1.23  m2_loss_ce: 0.5418  m2_loss_mask: 0.166  m2_loss_dice: 1.264  m2_loss_ce_0: 0.6633  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.431  m2_loss_ce_1: 0.6793  m2_loss_mask_1: 0.1785  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.6414  m2_loss_mask_2: 0.1686  m2_loss_dice_2: 1.344  m2_loss_ce_3: 0.5907  m2_loss_mask_3: 0.1703  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5779  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5661  m2_loss_mask_5: 0.171  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.5616  m2_loss_mask_6: 0.1706  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.5418  m2_loss_mask_7: 0.1691  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.5386  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.292  com_loss_ce: 0.4395  com_loss_mask: 0.03545  com_loss_dice: 0.2774    time: 1.3465  last_time: 1.3210  data_time: 0.0380  last_data_time: 0.0449   lr: 0.0001  max_mem: 35533M
[08/16 01:57:31] d2.utils.events INFO:  eta: 0:00:26  iter: 979  total_loss: 41.77  m1_loss_ce: 0.4799  m1_loss_mask: 0.1652  m1_loss_dice: 1.257  m1_loss_ce_0: 0.6182  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.41  m1_loss_ce_1: 0.6897  m1_loss_mask_1: 0.1873  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.6344  m1_loss_mask_2: 0.1754  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5487  m1_loss_mask_3: 0.177  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.5282  m1_loss_mask_4: 0.1752  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.5264  m1_loss_mask_5: 0.1724  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.5201  m1_loss_mask_6: 0.1704  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.5311  m1_loss_mask_7: 0.1686  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.5128  m1_loss_mask_8: 0.1697  m1_loss_dice_8: 1.242  m2_loss_ce: 0.5215  m2_loss_mask: 0.1633  m2_loss_dice: 1.265  m2_loss_ce_0: 0.6268  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6914  m2_loss_mask_1: 0.1805  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.654  m2_loss_mask_2: 0.1734  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.6258  m2_loss_mask_3: 0.1741  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5738  m2_loss_mask_4: 0.1722  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.6049  m2_loss_mask_5: 0.1744  m2_loss_dice_5: 1.289  m2_loss_ce_6: 0.5667  m2_loss_mask_6: 0.1701  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.5253  m2_loss_mask_7: 0.1711  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5553  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.233  com_loss_ce: 0.3907  com_loss_mask: 0.03491  com_loss_dice: 0.2622    time: 1.3463  last_time: 1.3627  data_time: 0.0373  last_data_time: 0.0407   lr: 0.0001  max_mem: 35533M
[08/16 01:57:58] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_4_0_6/model_final.pth
[08/16 01:58:02] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 40.24  m1_loss_ce: 0.4229  m1_loss_mask: 0.1552  m1_loss_dice: 1.227  m1_loss_ce_0: 0.5977  m1_loss_mask_0: 0.1824  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6755  m1_loss_mask_1: 0.1752  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.6053  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5335  m1_loss_mask_3: 0.1588  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5081  m1_loss_mask_4: 0.1593  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.4867  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4734  m1_loss_mask_6: 0.1551  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.4911  m1_loss_mask_7: 0.1549  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4878  m1_loss_mask_8: 0.155  m1_loss_dice_8: 1.211  m2_loss_ce: 0.52  m2_loss_mask: 0.169  m2_loss_dice: 1.261  m2_loss_ce_0: 0.6166  m2_loss_mask_0: 0.1906  m2_loss_dice_0: 1.476  m2_loss_ce_1: 0.6624  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.6258  m2_loss_mask_2: 0.1758  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.5723  m2_loss_mask_3: 0.1728  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5948  m2_loss_mask_4: 0.1729  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5674  m2_loss_mask_5: 0.1724  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.5144  m2_loss_mask_6: 0.1673  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.5125  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.5614  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.231  com_loss_ce: 0.3936  com_loss_mask: 0.03424  com_loss_dice: 0.2699    time: 1.3466  last_time: 1.3397  data_time: 0.0395  last_data_time: 0.0465   lr: 0.0001  max_mem: 35533M
[08/16 01:58:02] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:22:23 (1.3466 s / it)
[08/16 01:58:02] d2.engine.hooks INFO: Total training time: 0:22:33 (0:00:09 on hooks)
[08/16 01:58:02] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/16 01:58:02] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/16 01:58:02] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 01:58:02] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/16 01:58:02] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/16 01:59:21] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalm990zkkr ...
[08/16 01:59:35] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.761 | 80.691 | 70.374 |      19       |
| Things | 49.489 | 79.850 | 61.707 |       8       |
| Stuff  | 63.778 | 81.303 | 76.678 |      11       |
[08/16 01:59:35] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.268 | 97.672 | 99.586 |     Stuff     |
| class_8  | 73.595 | 84.175 | 87.432 |     Stuff     |
| class_11 | 86.277 | 88.628 | 97.347 |     Stuff     |
| class_12 | 38.699 | 79.463 | 48.701 |     Stuff     |
| class_13 | 37.220 | 75.589 | 49.240 |     Stuff     |
| class_17 | 40.149 | 63.547 | 63.179 |     Stuff     |
| class_19 | 48.448 | 69.142 | 70.070 |     Stuff     |
| class_20 | 65.527 | 77.134 | 84.952 |     Stuff     |
| class_21 | 89.021 | 90.224 | 98.667 |     Stuff     |
| class_22 | 37.225 | 76.757 | 48.498 |     Stuff     |
| class_23 | 88.124 | 92.005 | 95.781 |     Stuff     |
| class_24 | 50.310 | 76.315 | 65.924 |    Things     |
| class_25 | 47.870 | 73.921 | 64.758 |    Things     |
| class_26 | 65.228 | 82.662 | 78.910 |    Things     |
| class_27 | 49.302 | 87.701 | 56.216 |    Things     |
| class_28 | 66.447 | 89.058 | 74.611 |    Things     |
| class_31 | 41.944 | 83.888 | 50.000 |    Things     |
| class_32 | 33.897 | 74.038 | 45.783 |    Things     |
| class_33 | 40.915 | 71.214 | 57.454 |    Things     |
[08/16 01:59:35] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/16 01:59:35] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/16 01:59:35] d2.evaluation.testing INFO: copypaste: 57.7614,80.6912,70.3742,49.4892,79.8495,61.7071,63.7776,81.3033,76.6776,97.2677,97.6722,99.5859,73.5954,84.1747,87.4317,86.2770,88.6284,97.3469,38.6993,79.4626,48.7013,37.2200,75.5889,49.2401,40.1487,63.5471,63.1795,48.4480,69.1419,70.0704,65.5269,77.1340,84.9520,89.0212,90.2241,98.6667,37.2253,76.7565,48.4979,88.1238,92.0054,95.7811,50.3099,76.3146,65.9243,47.8699,73.9210,64.7581,65.2284,82.6621,78.9097,49.3022,87.7010,56.2162,66.4471,89.0576,74.6114,41.9439,83.8878,50.0000,33.8967,74.0376,45.7831,40.9152,71.2143,57.4536
