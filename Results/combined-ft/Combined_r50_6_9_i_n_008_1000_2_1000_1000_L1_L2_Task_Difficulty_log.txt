[10/05 17:40:04] detectron2 INFO: Rank of current process: 0. World size: 2
[10/05 17:40:05] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/05 17:40:05] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_Task_Difficulty_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/05 17:40:05] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_Task_Difficulty_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_Task_Difficulty
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/05 17:40:05] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_Task_Difficulty
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/05 17:40:05] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_Task_Difficulty/config.yaml
[10/05 17:40:05] d2.utils.env INFO: Using a generated random seed 8086904
[10/05 17:40:09] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/05 17:40:09] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/05 17:40:10] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/05 17:40:10] d2.data.build INFO: Using training sampler TrainingSampler
[10/05 17:40:10] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/05 17:40:10] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/05 17:40:10] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/05 17:40:10] d2.data.build INFO: Making batched data loader with batch_size=4
[10/05 17:40:10] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/05 17:40:14] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/05 17:40:14] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/05 17:40:14] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/05 17:40:14] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/05 17:40:14] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/05 17:40:51] d2.utils.events INFO:  eta: 0:23:17  iter: 19  total_loss: 39.39  m1_loss_ce: 0.4806  m1_loss_mask: 0.1795  m1_loss_dice: 1.209  m1_loss_ce_0: 0.5953  m1_loss_mask_0: 0.2131  m1_loss_dice_0: 1.456  m1_loss_ce_1: 0.6799  m1_loss_mask_1: 0.1964  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.6073  m1_loss_mask_2: 0.184  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.5587  m1_loss_mask_3: 0.18  m1_loss_dice_3: 1.227  m1_loss_ce_4: 0.4824  m1_loss_mask_4: 0.1771  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.4983  m1_loss_mask_5: 0.1836  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.4924  m1_loss_mask_6: 0.1806  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.4726  m1_loss_mask_7: 0.1814  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4986  m1_loss_mask_8: 0.1776  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4598  m2_loss_mask: 0.1738  m2_loss_dice: 1.23  m2_loss_ce_0: 0.6105  m2_loss_mask_0: 0.1983  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6843  m2_loss_mask_1: 0.1912  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.5929  m2_loss_mask_2: 0.1776  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5107  m2_loss_mask_3: 0.1743  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.514  m2_loss_mask_4: 0.1728  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.471  m2_loss_mask_5: 0.1716  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.458  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4631  m2_loss_mask_7: 0.1731  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.4698  m2_loss_mask_8: 0.1708  m2_loss_dice_8: 1.246    time: 1.4253  last_time: 1.4220  data_time: 0.2760  last_data_time: 0.0529   lr: 0.0001  max_mem: 33720M
[10/05 17:41:19] d2.utils.events INFO:  eta: 0:22:51  iter: 39  total_loss: 40.08  m1_loss_ce: 0.4545  m1_loss_mask: 0.1639  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5822  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.6352  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.387  m1_loss_ce_2: 0.5458  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5236  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.4843  m1_loss_mask_4: 0.1651  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.4757  m1_loss_mask_5: 0.1649  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.4668  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.475  m1_loss_mask_7: 0.1634  m1_loss_dice_7: 1.191  m1_loss_ce_8: 0.469  m1_loss_mask_8: 0.1638  m1_loss_dice_8: 1.206  m2_loss_ce: 0.436  m2_loss_mask: 0.162  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6202  m2_loss_mask_0: 0.186  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6417  m2_loss_mask_1: 0.1751  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.5585  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.5171  m2_loss_mask_3: 0.1616  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5114  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.4788  m2_loss_mask_5: 0.1625  m2_loss_dice_5: 1.225  m2_loss_ce_6: 0.4235  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.4458  m2_loss_mask_7: 0.1643  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4588  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.278    time: 1.4233  last_time: 1.4590  data_time: 0.0547  last_data_time: 0.0577   lr: 0.0001  max_mem: 33961M
[10/05 17:41:49] d2.utils.events INFO:  eta: 0:22:28  iter: 59  total_loss: 42.88  m1_loss_ce: 0.5086  m1_loss_mask: 0.1612  m1_loss_dice: 1.31  m1_loss_ce_0: 0.6298  m1_loss_mask_0: 0.1913  m1_loss_dice_0: 1.557  m1_loss_ce_1: 0.6516  m1_loss_mask_1: 0.1811  m1_loss_dice_1: 1.468  m1_loss_ce_2: 0.5927  m1_loss_mask_2: 0.1709  m1_loss_dice_2: 1.39  m1_loss_ce_3: 0.5388  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.333  m1_loss_ce_4: 0.4901  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.321  m1_loss_ce_5: 0.5237  m1_loss_mask_5: 0.1654  m1_loss_dice_5: 1.34  m1_loss_ce_6: 0.4902  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.271  m1_loss_ce_7: 0.5001  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.317  m1_loss_ce_8: 0.5034  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.268  m2_loss_ce: 0.5228  m2_loss_mask: 0.1631  m2_loss_dice: 1.334  m2_loss_ce_0: 0.6235  m2_loss_mask_0: 0.1919  m2_loss_dice_0: 1.577  m2_loss_ce_1: 0.6869  m2_loss_mask_1: 0.1827  m2_loss_dice_1: 1.459  m2_loss_ce_2: 0.6368  m2_loss_mask_2: 0.1653  m2_loss_dice_2: 1.394  m2_loss_ce_3: 0.5838  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.336  m2_loss_ce_4: 0.5584  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.332  m2_loss_ce_5: 0.5652  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.336  m2_loss_ce_6: 0.5191  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.373  m2_loss_ce_7: 0.5382  m2_loss_mask_7: 0.1637  m2_loss_dice_7: 1.314  m2_loss_ce_8: 0.492  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.335    time: 1.4324  last_time: 1.4094  data_time: 0.0579  last_data_time: 0.0769   lr: 0.0001  max_mem: 33961M
[10/05 17:42:17] d2.utils.events INFO:  eta: 0:21:55  iter: 79  total_loss: 40.48  m1_loss_ce: 0.4738  m1_loss_mask: 0.1614  m1_loss_dice: 1.245  m1_loss_ce_0: 0.5548  m1_loss_mask_0: 0.1848  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.6284  m1_loss_mask_1: 0.1733  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.5715  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5157  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.303  m1_loss_ce_4: 0.4905  m1_loss_mask_4: 0.162  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.5136  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.4889  m1_loss_mask_6: 0.1626  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.4904  m1_loss_mask_7: 0.1614  m1_loss_dice_7: 1.266  m1_loss_ce_8: 0.48  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.237  m2_loss_ce: 0.4811  m2_loss_mask: 0.166  m2_loss_dice: 1.309  m2_loss_ce_0: 0.6  m2_loss_mask_0: 0.1939  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.6407  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.402  m2_loss_ce_2: 0.5476  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.381  m2_loss_ce_3: 0.541  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.325  m2_loss_ce_4: 0.5172  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.297  m2_loss_ce_5: 0.5096  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.306  m2_loss_ce_6: 0.4877  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.4875  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.4842  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.332    time: 1.4306  last_time: 1.4635  data_time: 0.0557  last_data_time: 0.0513   lr: 0.0001  max_mem: 33961M
[10/05 17:42:46] d2.utils.events INFO:  eta: 0:21:25  iter: 99  total_loss: 39.09  m1_loss_ce: 0.4538  m1_loss_mask: 0.1684  m1_loss_dice: 1.227  m1_loss_ce_0: 0.5815  m1_loss_mask_0: 0.1908  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6225  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.579  m1_loss_mask_2: 0.1752  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.508  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5083  m1_loss_mask_4: 0.1712  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.4889  m1_loss_mask_5: 0.1703  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.4689  m1_loss_mask_6: 0.1692  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.4563  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.462  m1_loss_mask_8: 0.1667  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4619  m2_loss_mask: 0.1661  m2_loss_dice: 1.184  m2_loss_ce_0: 0.5979  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.415  m2_loss_ce_1: 0.6366  m2_loss_mask_1: 0.1878  m2_loss_dice_1: 1.357  m2_loss_ce_2: 0.5804  m2_loss_mask_2: 0.175  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.4973  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.5053  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.4889  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4716  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.47  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.4782  m2_loss_mask_8: 0.1663  m2_loss_dice_8: 1.228    time: 1.4282  last_time: 1.3364  data_time: 0.0551  last_data_time: 0.0457   lr: 0.0001  max_mem: 33961M
[10/05 17:43:14] d2.utils.events INFO:  eta: 0:20:52  iter: 119  total_loss: 39.09  m1_loss_ce: 0.443  m1_loss_mask: 0.1734  m1_loss_dice: 1.26  m1_loss_ce_0: 0.5798  m1_loss_mask_0: 0.1964  m1_loss_dice_0: 1.494  m1_loss_ce_1: 0.6424  m1_loss_mask_1: 0.1829  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.5805  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.35  m1_loss_ce_3: 0.5115  m1_loss_mask_3: 0.1749  m1_loss_dice_3: 1.297  m1_loss_ce_4: 0.5209  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.4967  m1_loss_mask_5: 0.1721  m1_loss_dice_5: 1.297  m1_loss_ce_6: 0.505  m1_loss_mask_6: 0.1741  m1_loss_dice_6: 1.292  m1_loss_ce_7: 0.4859  m1_loss_mask_7: 0.1738  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.465  m1_loss_mask_8: 0.1723  m1_loss_dice_8: 1.244  m2_loss_ce: 0.4451  m2_loss_mask: 0.1627  m2_loss_dice: 1.297  m2_loss_ce_0: 0.5757  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.66  m2_loss_mask_1: 0.1832  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.5545  m2_loss_mask_2: 0.1695  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.4965  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.4847  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.4897  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4636  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.4982  m2_loss_mask_7: 0.1631  m2_loss_dice_7: 1.306  m2_loss_ce_8: 0.4438  m2_loss_mask_8: 0.1628  m2_loss_dice_8: 1.302    time: 1.4234  last_time: 1.4065  data_time: 0.0562  last_data_time: 0.0455   lr: 0.0001  max_mem: 33961M
[10/05 17:43:42] d2.utils.events INFO:  eta: 0:20:24  iter: 139  total_loss: 40.32  m1_loss_ce: 0.4588  m1_loss_mask: 0.1856  m1_loss_dice: 1.211  m1_loss_ce_0: 0.5569  m1_loss_mask_0: 0.212  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6525  m1_loss_mask_1: 0.1956  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.5915  m1_loss_mask_2: 0.1848  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5434  m1_loss_mask_3: 0.1851  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.5081  m1_loss_mask_4: 0.1859  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.5138  m1_loss_mask_5: 0.1831  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.489  m1_loss_mask_6: 0.1828  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.4866  m1_loss_mask_7: 0.183  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.4789  m1_loss_mask_8: 0.1826  m1_loss_dice_8: 1.241  m2_loss_ce: 0.5029  m2_loss_mask: 0.1807  m2_loss_dice: 1.216  m2_loss_ce_0: 0.5968  m2_loss_mask_0: 0.2264  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6799  m2_loss_mask_1: 0.1992  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.5901  m2_loss_mask_2: 0.1905  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5401  m2_loss_mask_3: 0.1849  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5231  m2_loss_mask_4: 0.1833  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.524  m2_loss_mask_5: 0.1812  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.4973  m2_loss_mask_6: 0.181  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.5069  m2_loss_mask_7: 0.1832  m2_loss_dice_7: 1.191  m2_loss_ce_8: 0.494  m2_loss_mask_8: 0.1789  m2_loss_dice_8: 1.221    time: 1.4246  last_time: 1.3513  data_time: 0.0520  last_data_time: 0.0483   lr: 0.0001  max_mem: 33961M
[10/05 17:44:11] d2.utils.events INFO:  eta: 0:19:54  iter: 159  total_loss: 40.73  m1_loss_ce: 0.4677  m1_loss_mask: 0.1651  m1_loss_dice: 1.262  m1_loss_ce_0: 0.5773  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.495  m1_loss_ce_1: 0.6335  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.574  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.5448  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.296  m1_loss_ce_4: 0.4991  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.5151  m1_loss_mask_5: 0.1661  m1_loss_dice_5: 1.256  m1_loss_ce_6: 0.4856  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.275  m1_loss_ce_7: 0.4854  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.459  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.239  m2_loss_ce: 0.5069  m2_loss_mask: 0.1678  m2_loss_dice: 1.287  m2_loss_ce_0: 0.6045  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.708  m2_loss_mask_1: 0.1891  m2_loss_dice_1: 1.409  m2_loss_ce_2: 0.6108  m2_loss_mask_2: 0.1761  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5591  m2_loss_mask_3: 0.1705  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5677  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5367  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4989  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.54  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.512  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.313    time: 1.4228  last_time: 1.3585  data_time: 0.0556  last_data_time: 0.0511   lr: 0.0001  max_mem: 33961M
[10/05 17:44:39] d2.utils.events INFO:  eta: 0:19:23  iter: 179  total_loss: 40.65  m1_loss_ce: 0.471  m1_loss_mask: 0.1724  m1_loss_dice: 1.235  m1_loss_ce_0: 0.5866  m1_loss_mask_0: 0.1941  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.6414  m1_loss_mask_1: 0.184  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5678  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.5375  m1_loss_mask_3: 0.1746  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.5161  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5013  m1_loss_mask_5: 0.1736  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.5105  m1_loss_mask_6: 0.1726  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4831  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4807  m1_loss_mask_8: 0.1717  m1_loss_dice_8: 1.237  m2_loss_ce: 0.4901  m2_loss_mask: 0.1709  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5684  m2_loss_mask_0: 0.1996  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6466  m2_loss_mask_1: 0.1959  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5807  m2_loss_mask_2: 0.1745  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5154  m2_loss_mask_3: 0.175  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5115  m2_loss_mask_4: 0.1729  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.5126  m2_loss_mask_5: 0.1689  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4848  m2_loss_mask_6: 0.1687  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.5057  m2_loss_mask_7: 0.1697  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.477  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.219    time: 1.4203  last_time: 1.5417  data_time: 0.0499  last_data_time: 0.0437   lr: 0.0001  max_mem: 33961M
[10/05 17:45:07] d2.utils.events INFO:  eta: 0:18:53  iter: 199  total_loss: 40.72  m1_loss_ce: 0.5071  m1_loss_mask: 0.1566  m1_loss_dice: 1.234  m1_loss_ce_0: 0.6327  m1_loss_mask_0: 0.1946  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.69  m1_loss_mask_1: 0.1793  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.6174  m1_loss_mask_2: 0.1644  m1_loss_dice_2: 1.326  m1_loss_ce_3: 0.5566  m1_loss_mask_3: 0.1594  m1_loss_dice_3: 1.227  m1_loss_ce_4: 0.5448  m1_loss_mask_4: 0.1608  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.5487  m1_loss_mask_5: 0.1568  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.5166  m1_loss_mask_6: 0.1591  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5002  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.4928  m1_loss_mask_8: 0.1561  m1_loss_dice_8: 1.247  m2_loss_ce: 0.4575  m2_loss_mask: 0.1708  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6147  m2_loss_mask_0: 0.2167  m2_loss_dice_0: 1.495  m2_loss_ce_1: 0.6674  m2_loss_mask_1: 0.1977  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5928  m2_loss_mask_2: 0.1784  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.5326  m2_loss_mask_3: 0.1754  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5657  m2_loss_mask_4: 0.1728  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5078  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.5065  m2_loss_mask_6: 0.1705  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.517  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.5207  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.253    time: 1.4194  last_time: 1.4032  data_time: 0.0512  last_data_time: 0.0494   lr: 0.0001  max_mem: 34532M
[10/05 17:45:35] d2.utils.events INFO:  eta: 0:18:23  iter: 219  total_loss: 39.01  m1_loss_ce: 0.4676  m1_loss_mask: 0.1728  m1_loss_dice: 1.273  m1_loss_ce_0: 0.5767  m1_loss_mask_0: 0.1945  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.5977  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.574  m1_loss_mask_2: 0.1724  m1_loss_dice_2: 1.326  m1_loss_ce_3: 0.4945  m1_loss_mask_3: 0.1769  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.4868  m1_loss_mask_4: 0.1771  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.4891  m1_loss_mask_5: 0.1722  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4748  m1_loss_mask_6: 0.1722  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.4915  m1_loss_mask_7: 0.1708  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4888  m1_loss_mask_8: 0.1729  m1_loss_dice_8: 1.221  m2_loss_ce: 0.4553  m2_loss_mask: 0.1638  m2_loss_dice: 1.252  m2_loss_ce_0: 0.5913  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.6512  m2_loss_mask_1: 0.1832  m2_loss_dice_1: 1.382  m2_loss_ce_2: 0.5701  m2_loss_mask_2: 0.1656  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5385  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.487  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4723  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4649  m2_loss_mask_6: 0.1652  m2_loss_dice_6: 1.27  m2_loss_ce_7: 0.4698  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.4643  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.226    time: 1.4176  last_time: 1.5010  data_time: 0.0504  last_data_time: 0.0413   lr: 0.0001  max_mem: 34532M
[10/05 17:46:04] d2.utils.events INFO:  eta: 0:17:55  iter: 239  total_loss: 41.23  m1_loss_ce: 0.4641  m1_loss_mask: 0.1674  m1_loss_dice: 1.294  m1_loss_ce_0: 0.5597  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.536  m1_loss_ce_1: 0.6445  m1_loss_mask_1: 0.1793  m1_loss_dice_1: 1.406  m1_loss_ce_2: 0.5943  m1_loss_mask_2: 0.1725  m1_loss_dice_2: 1.404  m1_loss_ce_3: 0.5153  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5282  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.329  m1_loss_ce_5: 0.5066  m1_loss_mask_5: 0.1666  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.4852  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.3  m1_loss_ce_7: 0.5204  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.315  m1_loss_ce_8: 0.5053  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.302  m2_loss_ce: 0.4747  m2_loss_mask: 0.1589  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6103  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.547  m2_loss_ce_1: 0.7025  m2_loss_mask_1: 0.1772  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.5936  m2_loss_mask_2: 0.1655  m2_loss_dice_2: 1.387  m2_loss_ce_3: 0.5524  m2_loss_mask_3: 0.1617  m2_loss_dice_3: 1.351  m2_loss_ce_4: 0.5337  m2_loss_mask_4: 0.1649  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5279  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.5184  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.324  m2_loss_ce_7: 0.5077  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.4883  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.315    time: 1.4183  last_time: 1.3679  data_time: 0.0534  last_data_time: 0.0460   lr: 0.0001  max_mem: 34532M
[10/05 17:46:32] d2.utils.events INFO:  eta: 0:17:26  iter: 259  total_loss: 39.69  m1_loss_ce: 0.4741  m1_loss_mask: 0.1609  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5796  m1_loss_mask_0: 0.1854  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6182  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.326  m1_loss_ce_2: 0.6084  m1_loss_mask_2: 0.1665  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5373  m1_loss_mask_3: 0.1641  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.5067  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.22  m1_loss_ce_5: 0.5068  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.4885  m1_loss_mask_6: 0.163  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.4888  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.4696  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.177  m2_loss_ce: 0.4728  m2_loss_mask: 0.1692  m2_loss_dice: 1.222  m2_loss_ce_0: 0.578  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6743  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5994  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5297  m2_loss_mask_3: 0.169  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.4894  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.4924  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4613  m2_loss_mask_6: 0.168  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.4791  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.213  m2_loss_ce_8: 0.4657  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.237    time: 1.4180  last_time: 1.4159  data_time: 0.0559  last_data_time: 0.0455   lr: 0.0001  max_mem: 34532M
[10/05 17:47:01] d2.utils.events INFO:  eta: 0:16:59  iter: 279  total_loss: 40.08  m1_loss_ce: 0.4346  m1_loss_mask: 0.1644  m1_loss_dice: 1.253  m1_loss_ce_0: 0.5623  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.6357  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.5755  m1_loss_mask_2: 0.1705  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5257  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.4934  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.4857  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.4574  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4878  m1_loss_mask_7: 0.1627  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4444  m1_loss_mask_8: 0.1632  m1_loss_dice_8: 1.25  m2_loss_ce: 0.4708  m2_loss_mask: 0.167  m2_loss_dice: 1.265  m2_loss_ce_0: 0.6186  m2_loss_mask_0: 0.1963  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.6745  m2_loss_mask_1: 0.1792  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.5721  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5428  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5173  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5028  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.482  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4935  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.5057  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.255    time: 1.4191  last_time: 1.4085  data_time: 0.0546  last_data_time: 0.0545   lr: 0.0001  max_mem: 34532M
[10/05 17:47:30] d2.utils.events INFO:  eta: 0:16:33  iter: 299  total_loss: 38.75  m1_loss_ce: 0.4473  m1_loss_mask: 0.164  m1_loss_dice: 1.235  m1_loss_ce_0: 0.5558  m1_loss_mask_0: 0.1885  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.5906  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.5835  m1_loss_mask_2: 0.171  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.4843  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.4859  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.4812  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.463  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.239  m1_loss_ce_7: 0.4846  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4761  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.234  m2_loss_ce: 0.4349  m2_loss_mask: 0.1679  m2_loss_dice: 1.221  m2_loss_ce_0: 0.584  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.656  m2_loss_mask_1: 0.1789  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.568  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.5021  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.4884  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.4819  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4408  m2_loss_mask_6: 0.1668  m2_loss_dice_6: 1.281  m2_loss_ce_7: 0.4521  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4375  m2_loss_mask_8: 0.1661  m2_loss_dice_8: 1.226    time: 1.4202  last_time: 1.4395  data_time: 0.0545  last_data_time: 0.0503   lr: 0.0001  max_mem: 34532M
[10/05 17:47:58] d2.utils.events INFO:  eta: 0:16:05  iter: 319  total_loss: 39.62  m1_loss_ce: 0.4969  m1_loss_mask: 0.1555  m1_loss_dice: 1.205  m1_loss_ce_0: 0.6208  m1_loss_mask_0: 0.1805  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6497  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.6133  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5648  m1_loss_mask_3: 0.1591  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.5616  m1_loss_mask_4: 0.1599  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.5207  m1_loss_mask_5: 0.1569  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5377  m1_loss_mask_6: 0.1568  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.5108  m1_loss_mask_7: 0.155  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.5021  m1_loss_mask_8: 0.1552  m1_loss_dice_8: 1.199  m2_loss_ce: 0.4818  m2_loss_mask: 0.1626  m2_loss_dice: 1.22  m2_loss_ce_0: 0.6289  m2_loss_mask_0: 0.1852  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6893  m2_loss_mask_1: 0.1765  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.6008  m2_loss_mask_2: 0.1644  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5319  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5247  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5345  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.4891  m2_loss_mask_6: 0.1653  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.5433  m2_loss_mask_7: 0.1631  m2_loss_dice_7: 1.257  m2_loss_ce_8: 0.4893  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.278    time: 1.4203  last_time: 1.4055  data_time: 0.0542  last_data_time: 0.0499   lr: 0.0001  max_mem: 34532M
[10/05 17:48:27] d2.utils.events INFO:  eta: 0:15:37  iter: 339  total_loss: 41.58  m1_loss_ce: 0.4948  m1_loss_mask: 0.1556  m1_loss_dice: 1.245  m1_loss_ce_0: 0.5503  m1_loss_mask_0: 0.184  m1_loss_dice_0: 1.575  m1_loss_ce_1: 0.6016  m1_loss_mask_1: 0.1714  m1_loss_dice_1: 1.471  m1_loss_ce_2: 0.5756  m1_loss_mask_2: 0.1655  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.5126  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.335  m1_loss_ce_4: 0.5092  m1_loss_mask_4: 0.1599  m1_loss_dice_4: 1.315  m1_loss_ce_5: 0.5001  m1_loss_mask_5: 0.1577  m1_loss_dice_5: 1.282  m1_loss_ce_6: 0.4884  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.283  m1_loss_ce_7: 0.4928  m1_loss_mask_7: 0.1597  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.4758  m1_loss_mask_8: 0.1586  m1_loss_dice_8: 1.28  m2_loss_ce: 0.4809  m2_loss_mask: 0.1551  m2_loss_dice: 1.349  m2_loss_ce_0: 0.6374  m2_loss_mask_0: 0.1837  m2_loss_dice_0: 1.587  m2_loss_ce_1: 0.6786  m2_loss_mask_1: 0.167  m2_loss_dice_1: 1.48  m2_loss_ce_2: 0.6018  m2_loss_mask_2: 0.1582  m2_loss_dice_2: 1.385  m2_loss_ce_3: 0.5427  m2_loss_mask_3: 0.1622  m2_loss_dice_3: 1.332  m2_loss_ce_4: 0.5287  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.329  m2_loss_ce_5: 0.5341  m2_loss_mask_5: 0.1549  m2_loss_dice_5: 1.347  m2_loss_ce_6: 0.4896  m2_loss_mask_6: 0.1573  m2_loss_dice_6: 1.301  m2_loss_ce_7: 0.5093  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.317  m2_loss_ce_8: 0.4858  m2_loss_mask_8: 0.1544  m2_loss_dice_8: 1.324    time: 1.4204  last_time: 1.4498  data_time: 0.0516  last_data_time: 0.0595   lr: 0.0001  max_mem: 34532M
[10/05 17:48:55] d2.utils.events INFO:  eta: 0:15:06  iter: 359  total_loss: 40.09  m1_loss_ce: 0.4797  m1_loss_mask: 0.1667  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6234  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.6578  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.6164  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.5155  m1_loss_mask_3: 0.1698  m1_loss_dice_3: 1.226  m1_loss_ce_4: 0.5174  m1_loss_mask_4: 0.1701  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.4996  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.4868  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.4562  m1_loss_mask_7: 0.1683  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4727  m1_loss_mask_8: 0.1667  m1_loss_dice_8: 1.178  m2_loss_ce: 0.4688  m2_loss_mask: 0.1629  m2_loss_dice: 1.246  m2_loss_ce_0: 0.5966  m2_loss_mask_0: 0.1863  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.7013  m2_loss_mask_1: 0.1765  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.6158  m2_loss_mask_2: 0.1673  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5404  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5169  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5126  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5091  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4859  m2_loss_mask_7: 0.164  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.504  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.228    time: 1.4195  last_time: 1.4327  data_time: 0.0540  last_data_time: 0.0530   lr: 0.0001  max_mem: 34532M
[10/05 17:49:23] d2.utils.events INFO:  eta: 0:14:37  iter: 379  total_loss: 38.55  m1_loss_ce: 0.4087  m1_loss_mask: 0.1762  m1_loss_dice: 1.181  m1_loss_ce_0: 0.5378  m1_loss_mask_0: 0.211  m1_loss_dice_0: 1.376  m1_loss_ce_1: 0.5681  m1_loss_mask_1: 0.1934  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.5215  m1_loss_mask_2: 0.1849  m1_loss_dice_2: 1.241  m1_loss_ce_3: 0.4644  m1_loss_mask_3: 0.1782  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.4249  m1_loss_mask_4: 0.1811  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4463  m1_loss_mask_5: 0.1777  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4246  m1_loss_mask_6: 0.1743  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4489  m1_loss_mask_7: 0.1773  m1_loss_dice_7: 1.218  m1_loss_ce_8: 0.4217  m1_loss_mask_8: 0.1785  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4415  m2_loss_mask: 0.1736  m2_loss_dice: 1.256  m2_loss_ce_0: 0.5528  m2_loss_mask_0: 0.212  m2_loss_dice_0: 1.419  m2_loss_ce_1: 0.6483  m2_loss_mask_1: 0.1967  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5371  m2_loss_mask_2: 0.1803  m2_loss_dice_2: 1.37  m2_loss_ce_3: 0.4909  m2_loss_mask_3: 0.1793  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5024  m2_loss_mask_4: 0.174  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.4644  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.424  m2_loss_mask_6: 0.1718  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.427  m2_loss_mask_7: 0.1737  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.427  m2_loss_mask_8: 0.1731  m2_loss_dice_8: 1.264    time: 1.4184  last_time: 1.4065  data_time: 0.0484  last_data_time: 0.0450   lr: 0.0001  max_mem: 34532M
[10/05 17:49:52] d2.utils.events INFO:  eta: 0:14:08  iter: 399  total_loss: 38.82  m1_loss_ce: 0.428  m1_loss_mask: 0.1619  m1_loss_dice: 1.227  m1_loss_ce_0: 0.4977  m1_loss_mask_0: 0.1897  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.5737  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5418  m1_loss_mask_2: 0.1724  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.4868  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.478  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.248  m1_loss_ce_5: 0.4579  m1_loss_mask_5: 0.162  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4484  m1_loss_mask_6: 0.1646  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.4221  m1_loss_mask_7: 0.1622  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.4401  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.196  m2_loss_ce: 0.4711  m2_loss_mask: 0.1691  m2_loss_dice: 1.242  m2_loss_ce_0: 0.5797  m2_loss_mask_0: 0.1952  m2_loss_dice_0: 1.405  m2_loss_ce_1: 0.6355  m2_loss_mask_1: 0.1874  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5485  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5221  m2_loss_mask_3: 0.1705  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.4912  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.4769  m2_loss_mask_5: 0.1707  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.4493  m2_loss_mask_6: 0.1703  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.4708  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.4661  m2_loss_mask_8: 0.1707  m2_loss_dice_8: 1.273    time: 1.4181  last_time: 1.4073  data_time: 0.0493  last_data_time: 0.0571   lr: 0.0001  max_mem: 34532M
[10/05 17:50:20] d2.utils.events INFO:  eta: 0:13:40  iter: 419  total_loss: 37.56  m1_loss_ce: 0.4055  m1_loss_mask: 0.178  m1_loss_dice: 1.178  m1_loss_ce_0: 0.5051  m1_loss_mask_0: 0.2  m1_loss_dice_0: 1.348  m1_loss_ce_1: 0.574  m1_loss_mask_1: 0.196  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.5214  m1_loss_mask_2: 0.1809  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.449  m1_loss_mask_3: 0.1772  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.4601  m1_loss_mask_4: 0.1778  m1_loss_dice_4: 1.148  m1_loss_ce_5: 0.4307  m1_loss_mask_5: 0.1752  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4301  m1_loss_mask_6: 0.1755  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.4045  m1_loss_mask_7: 0.177  m1_loss_dice_7: 1.142  m1_loss_ce_8: 0.4155  m1_loss_mask_8: 0.1761  m1_loss_dice_8: 1.167  m2_loss_ce: 0.445  m2_loss_mask: 0.1807  m2_loss_dice: 1.181  m2_loss_ce_0: 0.5641  m2_loss_mask_0: 0.2166  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6349  m2_loss_mask_1: 0.2014  m2_loss_dice_1: 1.284  m2_loss_ce_2: 0.5408  m2_loss_mask_2: 0.1893  m2_loss_dice_2: 1.244  m2_loss_ce_3: 0.508  m2_loss_mask_3: 0.1847  m2_loss_dice_3: 1.202  m2_loss_ce_4: 0.5131  m2_loss_mask_4: 0.1821  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.4721  m2_loss_mask_5: 0.1794  m2_loss_dice_5: 1.143  m2_loss_ce_6: 0.4419  m2_loss_mask_6: 0.1807  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4563  m2_loss_mask_7: 0.1806  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4593  m2_loss_mask_8: 0.1798  m2_loss_dice_8: 1.133    time: 1.4176  last_time: 1.4447  data_time: 0.0491  last_data_time: 0.0451   lr: 0.0001  max_mem: 34532M
[10/05 17:50:49] d2.utils.events INFO:  eta: 0:13:12  iter: 439  total_loss: 39.06  m1_loss_ce: 0.4327  m1_loss_mask: 0.1642  m1_loss_dice: 1.219  m1_loss_ce_0: 0.552  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.6043  m1_loss_mask_1: 0.1776  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5615  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5002  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.4782  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4847  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4672  m1_loss_mask_6: 0.1637  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.4397  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4462  m1_loss_mask_8: 0.1648  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4703  m2_loss_mask: 0.1685  m2_loss_dice: 1.304  m2_loss_ce_0: 0.6104  m2_loss_mask_0: 0.1983  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6597  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.5583  m2_loss_mask_2: 0.1791  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5326  m2_loss_mask_3: 0.174  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5141  m2_loss_mask_4: 0.1723  m2_loss_dice_4: 1.317  m2_loss_ce_5: 0.4939  m2_loss_mask_5: 0.1706  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.4749  m2_loss_mask_6: 0.1703  m2_loss_dice_6: 1.26  m2_loss_ce_7: 0.5005  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4845  m2_loss_mask_8: 0.1719  m2_loss_dice_8: 1.273    time: 1.4183  last_time: 1.4943  data_time: 0.0547  last_data_time: 0.0530   lr: 0.0001  max_mem: 34532M
[10/05 17:51:17] d2.utils.events INFO:  eta: 0:12:44  iter: 459  total_loss: 38.67  m1_loss_ce: 0.4117  m1_loss_mask: 0.1588  m1_loss_dice: 1.176  m1_loss_ce_0: 0.5325  m1_loss_mask_0: 0.1771  m1_loss_dice_0: 1.398  m1_loss_ce_1: 0.5859  m1_loss_mask_1: 0.1683  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.5312  m1_loss_mask_2: 0.1653  m1_loss_dice_2: 1.241  m1_loss_ce_3: 0.4796  m1_loss_mask_3: 0.1632  m1_loss_dice_3: 1.187  m1_loss_ce_4: 0.4686  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.439  m1_loss_mask_5: 0.1605  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.4395  m1_loss_mask_6: 0.1603  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.411  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4035  m1_loss_mask_8: 0.1592  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4613  m2_loss_mask: 0.1661  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5953  m2_loss_mask_0: 0.1896  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6419  m2_loss_mask_1: 0.1772  m2_loss_dice_1: 1.332  m2_loss_ce_2: 0.5709  m2_loss_mask_2: 0.17  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.5058  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.4681  m2_loss_mask_4: 0.1669  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.4836  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.198  m2_loss_ce_6: 0.4644  m2_loss_mask_6: 0.1664  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4629  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.466  m2_loss_mask_8: 0.1661  m2_loss_dice_8: 1.197    time: 1.4185  last_time: 1.4448  data_time: 0.0541  last_data_time: 0.0396   lr: 0.0001  max_mem: 34532M
[10/05 17:51:45] d2.utils.events INFO:  eta: 0:12:15  iter: 479  total_loss: 39.46  m1_loss_ce: 0.462  m1_loss_mask: 0.1758  m1_loss_dice: 1.155  m1_loss_ce_0: 0.5903  m1_loss_mask_0: 0.2073  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.6455  m1_loss_mask_1: 0.1875  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5569  m1_loss_mask_2: 0.1795  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5424  m1_loss_mask_3: 0.1777  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.498  m1_loss_mask_4: 0.1786  m1_loss_dice_4: 1.207  m1_loss_ce_5: 0.5197  m1_loss_mask_5: 0.1753  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.516  m1_loss_mask_6: 0.1753  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4996  m1_loss_mask_7: 0.1751  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.4855  m1_loss_mask_8: 0.1748  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4886  m2_loss_mask: 0.1804  m2_loss_dice: 1.239  m2_loss_ce_0: 0.5933  m2_loss_mask_0: 0.2148  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.6958  m2_loss_mask_1: 0.2007  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6062  m2_loss_mask_2: 0.1841  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.577  m2_loss_mask_3: 0.1844  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5373  m2_loss_mask_4: 0.1794  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5174  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.5056  m2_loss_mask_6: 0.1808  m2_loss_dice_6: 1.219  m2_loss_ce_7: 0.4984  m2_loss_mask_7: 0.1806  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.4992  m2_loss_mask_8: 0.1786  m2_loss_dice_8: 1.239    time: 1.4178  last_time: 1.4067  data_time: 0.0479  last_data_time: 0.0450   lr: 0.0001  max_mem: 34532M
[10/05 17:52:14] d2.utils.events INFO:  eta: 0:11:47  iter: 499  total_loss: 39.26  m1_loss_ce: 0.4509  m1_loss_mask: 0.1534  m1_loss_dice: 1.234  m1_loss_ce_0: 0.5439  m1_loss_mask_0: 0.1802  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.604  m1_loss_mask_1: 0.1681  m1_loss_dice_1: 1.287  m1_loss_ce_2: 0.5404  m1_loss_mask_2: 0.1622  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.4868  m1_loss_mask_3: 0.1597  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.4731  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.4904  m1_loss_mask_5: 0.1543  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4571  m1_loss_mask_6: 0.1554  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4535  m1_loss_mask_7: 0.1551  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.4532  m1_loss_mask_8: 0.1549  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5109  m2_loss_mask: 0.1626  m2_loss_dice: 1.287  m2_loss_ce_0: 0.6161  m2_loss_mask_0: 0.1914  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6918  m2_loss_mask_1: 0.1762  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.6272  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.302  m2_loss_ce_3: 0.5549  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.524  m2_loss_mask_4: 0.1596  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.5408  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5226  m2_loss_mask_6: 0.1614  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.525  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.5265  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.247    time: 1.4180  last_time: 1.3832  data_time: 0.0513  last_data_time: 0.0474   lr: 0.0001  max_mem: 34532M
[10/05 17:52:42] d2.utils.events INFO:  eta: 0:11:18  iter: 519  total_loss: 40.47  m1_loss_ce: 0.4765  m1_loss_mask: 0.1674  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5774  m1_loss_mask_0: 0.1965  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6347  m1_loss_mask_1: 0.1793  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5783  m1_loss_mask_2: 0.1693  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5321  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5089  m1_loss_mask_4: 0.1716  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.497  m1_loss_mask_5: 0.1682  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4812  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.232  m1_loss_ce_7: 0.4871  m1_loss_mask_7: 0.1684  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.5029  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5059  m2_loss_mask: 0.1675  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6279  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.704  m2_loss_mask_1: 0.1857  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.6303  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5589  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.5219  m2_loss_mask_4: 0.1683  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5431  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5276  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5351  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.5105  m2_loss_mask_8: 0.1659  m2_loss_dice_8: 1.268    time: 1.4179  last_time: 1.4231  data_time: 0.0524  last_data_time: 0.0424   lr: 0.0001  max_mem: 34532M
[10/05 17:53:11] d2.utils.events INFO:  eta: 0:10:50  iter: 539  total_loss: 39.12  m1_loss_ce: 0.4917  m1_loss_mask: 0.1605  m1_loss_dice: 1.141  m1_loss_ce_0: 0.5996  m1_loss_mask_0: 0.1942  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.6378  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5863  m1_loss_mask_2: 0.1645  m1_loss_dice_2: 1.221  m1_loss_ce_3: 0.5353  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.5042  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.4888  m1_loss_mask_5: 0.1644  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.4734  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.454  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.4804  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.196  m2_loss_ce: 0.485  m2_loss_mask: 0.1643  m2_loss_dice: 1.225  m2_loss_ce_0: 0.6081  m2_loss_mask_0: 0.192  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6561  m2_loss_mask_1: 0.177  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.5667  m2_loss_mask_2: 0.168  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.5568  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.302  m2_loss_ce_4: 0.5145  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.5245  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4902  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.5233  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4966  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.241    time: 1.4175  last_time: 1.3915  data_time: 0.0505  last_data_time: 0.0404   lr: 0.0001  max_mem: 34532M
[10/05 17:53:39] d2.utils.events INFO:  eta: 0:10:22  iter: 559  total_loss: 39.48  m1_loss_ce: 0.4255  m1_loss_mask: 0.1663  m1_loss_dice: 1.228  m1_loss_ce_0: 0.5518  m1_loss_mask_0: 0.1994  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.6135  m1_loss_mask_1: 0.1832  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.5605  m1_loss_mask_2: 0.1749  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.4939  m1_loss_mask_3: 0.1732  m1_loss_dice_3: 1.265  m1_loss_ce_4: 0.4623  m1_loss_mask_4: 0.1709  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.4473  m1_loss_mask_5: 0.1686  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4503  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4457  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.4593  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.239  m2_loss_ce: 0.4656  m2_loss_mask: 0.1707  m2_loss_dice: 1.306  m2_loss_ce_0: 0.6053  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.527  m2_loss_ce_1: 0.6664  m2_loss_mask_1: 0.1883  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.5813  m2_loss_mask_2: 0.1742  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5576  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5132  m2_loss_mask_4: 0.1678  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.4896  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4585  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4775  m2_loss_mask_7: 0.1721  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4694  m2_loss_mask_8: 0.1706  m2_loss_dice_8: 1.291    time: 1.4169  last_time: 1.3430  data_time: 0.0532  last_data_time: 0.0556   lr: 0.0001  max_mem: 34532M
[10/05 17:54:07] d2.utils.events INFO:  eta: 0:09:53  iter: 579  total_loss: 39.55  m1_loss_ce: 0.4561  m1_loss_mask: 0.1625  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5433  m1_loss_mask_0: 0.1987  m1_loss_dice_0: 1.495  m1_loss_ce_1: 0.5951  m1_loss_mask_1: 0.1813  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5982  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.526  m1_loss_mask_3: 0.1638  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4493  m1_loss_mask_4: 0.1616  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.4698  m1_loss_mask_5: 0.1634  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.4625  m1_loss_mask_6: 0.1624  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.4157  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4351  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.242  m2_loss_ce: 0.4358  m2_loss_mask: 0.1667  m2_loss_dice: 1.267  m2_loss_ce_0: 0.576  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.532  m2_loss_ce_1: 0.6792  m2_loss_mask_1: 0.1928  m2_loss_dice_1: 1.442  m2_loss_ce_2: 0.5732  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.366  m2_loss_ce_3: 0.5147  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.515  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.4825  m2_loss_mask_5: 0.1678  m2_loss_dice_5: 1.303  m2_loss_ce_6: 0.4891  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.4726  m2_loss_mask_7: 0.1694  m2_loss_dice_7: 1.288  m2_loss_ce_8: 0.467  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.273    time: 1.4175  last_time: 1.4238  data_time: 0.0522  last_data_time: 0.0742   lr: 0.0001  max_mem: 34532M
[10/05 17:54:36] d2.utils.events INFO:  eta: 0:09:25  iter: 599  total_loss: 38.41  m1_loss_ce: 0.4311  m1_loss_mask: 0.1614  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5062  m1_loss_mask_0: 0.1885  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.5805  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5108  m1_loss_mask_2: 0.1683  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.4516  m1_loss_mask_3: 0.1655  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.4432  m1_loss_mask_4: 0.165  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.4574  m1_loss_mask_5: 0.1638  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4607  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.441  m1_loss_mask_7: 0.1604  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4311  m1_loss_mask_8: 0.1625  m1_loss_dice_8: 1.202  m2_loss_ce: 0.4583  m2_loss_mask: 0.1667  m2_loss_dice: 1.262  m2_loss_ce_0: 0.5673  m2_loss_mask_0: 0.1916  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6513  m2_loss_mask_1: 0.1847  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.5821  m2_loss_mask_2: 0.1715  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.519  m2_loss_mask_3: 0.1709  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.4932  m2_loss_mask_4: 0.1714  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.4878  m2_loss_mask_5: 0.1702  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.4578  m2_loss_mask_6: 0.1716  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4715  m2_loss_mask_7: 0.17  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4495  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.219    time: 1.4176  last_time: 1.3771  data_time: 0.0510  last_data_time: 0.0522   lr: 0.0001  max_mem: 34532M
[10/05 17:55:04] d2.utils.events INFO:  eta: 0:08:57  iter: 619  total_loss: 41.63  m1_loss_ce: 0.512  m1_loss_mask: 0.1759  m1_loss_dice: 1.23  m1_loss_ce_0: 0.5797  m1_loss_mask_0: 0.2058  m1_loss_dice_0: 1.442  m1_loss_ce_1: 0.6749  m1_loss_mask_1: 0.1855  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.6031  m1_loss_mask_2: 0.1789  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.547  m1_loss_mask_3: 0.1805  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5227  m1_loss_mask_4: 0.1818  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.5345  m1_loss_mask_5: 0.1804  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.5215  m1_loss_mask_6: 0.1798  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.506  m1_loss_mask_7: 0.1751  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.5113  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.2  m2_loss_ce: 0.5159  m2_loss_mask: 0.1803  m2_loss_dice: 1.256  m2_loss_ce_0: 0.6214  m2_loss_mask_0: 0.2129  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.7012  m2_loss_mask_1: 0.1965  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6118  m2_loss_mask_2: 0.1882  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5489  m2_loss_mask_3: 0.1834  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.5215  m2_loss_mask_4: 0.1834  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5559  m2_loss_mask_5: 0.179  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.4952  m2_loss_mask_6: 0.1822  m2_loss_dice_6: 1.294  m2_loss_ce_7: 0.5022  m2_loss_mask_7: 0.18  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.5234  m2_loss_mask_8: 0.1802  m2_loss_dice_8: 1.278    time: 1.4176  last_time: 1.3692  data_time: 0.0572  last_data_time: 0.0481   lr: 0.0001  max_mem: 34532M
[10/05 17:55:33] d2.utils.events INFO:  eta: 0:08:29  iter: 639  total_loss: 42.24  m1_loss_ce: 0.4501  m1_loss_mask: 0.1623  m1_loss_dice: 1.317  m1_loss_ce_0: 0.5941  m1_loss_mask_0: 0.1826  m1_loss_dice_0: 1.52  m1_loss_ce_1: 0.64  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.439  m1_loss_ce_2: 0.573  m1_loss_mask_2: 0.1679  m1_loss_dice_2: 1.37  m1_loss_ce_3: 0.5061  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.345  m1_loss_ce_4: 0.4971  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.348  m1_loss_ce_5: 0.5058  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.307  m1_loss_ce_6: 0.4787  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.4859  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.29  m1_loss_ce_8: 0.4812  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.294  m2_loss_ce: 0.4658  m2_loss_mask: 0.1623  m2_loss_dice: 1.346  m2_loss_ce_0: 0.6696  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.594  m2_loss_ce_1: 0.6491  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.6107  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.384  m2_loss_ce_3: 0.5545  m2_loss_mask_3: 0.1639  m2_loss_dice_3: 1.347  m2_loss_ce_4: 0.5174  m2_loss_mask_4: 0.1607  m2_loss_dice_4: 1.327  m2_loss_ce_5: 0.5343  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.354  m2_loss_ce_6: 0.5153  m2_loss_mask_6: 0.1609  m2_loss_dice_6: 1.309  m2_loss_ce_7: 0.5038  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.347  m2_loss_ce_8: 0.4995  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.357    time: 1.4179  last_time: 1.4439  data_time: 0.0545  last_data_time: 0.0512   lr: 0.0001  max_mem: 34532M
[10/05 17:56:02] d2.utils.events INFO:  eta: 0:08:01  iter: 659  total_loss: 38.65  m1_loss_ce: 0.4309  m1_loss_mask: 0.1582  m1_loss_dice: 1.199  m1_loss_ce_0: 0.529  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.6209  m1_loss_mask_1: 0.1714  m1_loss_dice_1: 1.298  m1_loss_ce_2: 0.5738  m1_loss_mask_2: 0.1623  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.4853  m1_loss_mask_3: 0.1615  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.4852  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4755  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4562  m1_loss_mask_6: 0.1601  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4435  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4538  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.18  m2_loss_ce: 0.467  m2_loss_mask: 0.1603  m2_loss_dice: 1.254  m2_loss_ce_0: 0.5896  m2_loss_mask_0: 0.1923  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6546  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.5819  m2_loss_mask_2: 0.1652  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5202  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5019  m2_loss_mask_4: 0.1582  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.497  m2_loss_mask_5: 0.1574  m2_loss_dice_5: 1.212  m2_loss_ce_6: 0.4743  m2_loss_mask_6: 0.1604  m2_loss_dice_6: 1.201  m2_loss_ce_7: 0.4853  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4548  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.234    time: 1.4189  last_time: 1.4223  data_time: 0.0578  last_data_time: 0.0486   lr: 0.0001  max_mem: 35366M
[10/05 17:56:30] d2.utils.events INFO:  eta: 0:07:32  iter: 679  total_loss: 38.69  m1_loss_ce: 0.4406  m1_loss_mask: 0.1632  m1_loss_dice: 1.202  m1_loss_ce_0: 0.552  m1_loss_mask_0: 0.1942  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.6167  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5544  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5036  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4594  m1_loss_mask_4: 0.1645  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.4374  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.4243  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4309  m1_loss_mask_7: 0.1639  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4422  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4337  m2_loss_mask: 0.1688  m2_loss_dice: 1.279  m2_loss_ce_0: 0.5985  m2_loss_mask_0: 0.2007  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6648  m2_loss_mask_1: 0.1872  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.5658  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5302  m2_loss_mask_3: 0.173  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.5436  m2_loss_mask_4: 0.1706  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.5146  m2_loss_mask_5: 0.1691  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.4885  m2_loss_mask_6: 0.1705  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4591  m2_loss_mask_7: 0.1682  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.4667  m2_loss_mask_8: 0.1673  m2_loss_dice_8: 1.256    time: 1.4186  last_time: 1.3877  data_time: 0.0493  last_data_time: 0.0419   lr: 0.0001  max_mem: 35366M
[10/05 17:56:59] d2.utils.events INFO:  eta: 0:07:04  iter: 699  total_loss: 39.91  m1_loss_ce: 0.4532  m1_loss_mask: 0.1586  m1_loss_dice: 1.224  m1_loss_ce_0: 0.5768  m1_loss_mask_0: 0.1858  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6428  m1_loss_mask_1: 0.172  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.5797  m1_loss_mask_2: 0.1685  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5196  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.4861  m1_loss_mask_4: 0.1591  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.4532  m1_loss_mask_5: 0.1592  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.4534  m1_loss_mask_6: 0.1593  m1_loss_dice_6: 1.208  m1_loss_ce_7: 0.4719  m1_loss_mask_7: 0.1589  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.4514  m1_loss_mask_8: 0.1605  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4577  m2_loss_mask: 0.1555  m2_loss_dice: 1.225  m2_loss_ce_0: 0.5997  m2_loss_mask_0: 0.1831  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6521  m2_loss_mask_1: 0.1772  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.5655  m2_loss_mask_2: 0.1661  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.5205  m2_loss_mask_3: 0.1576  m2_loss_dice_3: 1.302  m2_loss_ce_4: 0.525  m2_loss_mask_4: 0.1548  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.505  m2_loss_mask_5: 0.155  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.4777  m2_loss_mask_6: 0.1553  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.4675  m2_loss_mask_7: 0.1564  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.4714  m2_loss_mask_8: 0.1562  m2_loss_dice_8: 1.227    time: 1.4189  last_time: 1.4012  data_time: 0.0552  last_data_time: 0.0407   lr: 0.0001  max_mem: 35366M
[10/05 17:57:27] d2.utils.events INFO:  eta: 0:06:36  iter: 719  total_loss: 39.43  m1_loss_ce: 0.4085  m1_loss_mask: 0.1577  m1_loss_dice: 1.197  m1_loss_ce_0: 0.543  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.6071  m1_loss_mask_1: 0.1716  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.5371  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.4556  m1_loss_mask_3: 0.1584  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.4632  m1_loss_mask_4: 0.1613  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.4167  m1_loss_mask_5: 0.1595  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.4216  m1_loss_mask_6: 0.1585  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.4191  m1_loss_mask_7: 0.156  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.4171  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.195  m2_loss_ce: 0.482  m2_loss_mask: 0.163  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6067  m2_loss_mask_0: 0.1856  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6391  m2_loss_mask_1: 0.1756  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.5998  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5334  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5194  m2_loss_mask_4: 0.1598  m2_loss_dice_4: 1.219  m2_loss_ce_5: 0.5106  m2_loss_mask_5: 0.1604  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4657  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5021  m2_loss_mask_7: 0.1626  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.4868  m2_loss_mask_8: 0.1602  m2_loss_dice_8: 1.25    time: 1.4183  last_time: 1.3723  data_time: 0.0551  last_data_time: 0.0521   lr: 0.0001  max_mem: 35366M
[10/05 17:57:56] d2.utils.events INFO:  eta: 0:06:07  iter: 739  total_loss: 41.48  m1_loss_ce: 0.5227  m1_loss_mask: 0.1672  m1_loss_dice: 1.245  m1_loss_ce_0: 0.6011  m1_loss_mask_0: 0.1849  m1_loss_dice_0: 1.492  m1_loss_ce_1: 0.7039  m1_loss_mask_1: 0.1763  m1_loss_dice_1: 1.431  m1_loss_ce_2: 0.6247  m1_loss_mask_2: 0.1689  m1_loss_dice_2: 1.359  m1_loss_ce_3: 0.5304  m1_loss_mask_3: 0.1679  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5537  m1_loss_mask_4: 0.1687  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5225  m1_loss_mask_5: 0.1666  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.5102  m1_loss_mask_6: 0.1666  m1_loss_dice_6: 1.276  m1_loss_ce_7: 0.4944  m1_loss_mask_7: 0.1664  m1_loss_dice_7: 1.318  m1_loss_ce_8: 0.4991  m1_loss_mask_8: 0.1668  m1_loss_dice_8: 1.261  m2_loss_ce: 0.5143  m2_loss_mask: 0.1764  m2_loss_dice: 1.309  m2_loss_ce_0: 0.6243  m2_loss_mask_0: 0.2145  m2_loss_dice_0: 1.549  m2_loss_ce_1: 0.6947  m2_loss_mask_1: 0.1987  m2_loss_dice_1: 1.463  m2_loss_ce_2: 0.6087  m2_loss_mask_2: 0.1767  m2_loss_dice_2: 1.407  m2_loss_ce_3: 0.5665  m2_loss_mask_3: 0.1763  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.5413  m2_loss_mask_4: 0.176  m2_loss_dice_4: 1.331  m2_loss_ce_5: 0.5403  m2_loss_mask_5: 0.1733  m2_loss_dice_5: 1.35  m2_loss_ce_6: 0.5074  m2_loss_mask_6: 0.1762  m2_loss_dice_6: 1.326  m2_loss_ce_7: 0.5125  m2_loss_mask_7: 0.178  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.5214  m2_loss_mask_8: 0.1766  m2_loss_dice_8: 1.285    time: 1.4187  last_time: 1.4377  data_time: 0.0519  last_data_time: 0.0495   lr: 0.0001  max_mem: 35366M
[10/05 17:58:24] d2.utils.events INFO:  eta: 0:05:39  iter: 759  total_loss: 40.7  m1_loss_ce: 0.4307  m1_loss_mask: 0.1544  m1_loss_dice: 1.275  m1_loss_ce_0: 0.5642  m1_loss_mask_0: 0.1792  m1_loss_dice_0: 1.46  m1_loss_ce_1: 0.5966  m1_loss_mask_1: 0.1631  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.5584  m1_loss_mask_2: 0.1594  m1_loss_dice_2: 1.362  m1_loss_ce_3: 0.4685  m1_loss_mask_3: 0.1595  m1_loss_dice_3: 1.307  m1_loss_ce_4: 0.4864  m1_loss_mask_4: 0.1597  m1_loss_dice_4: 1.303  m1_loss_ce_5: 0.4692  m1_loss_mask_5: 0.157  m1_loss_dice_5: 1.31  m1_loss_ce_6: 0.4605  m1_loss_mask_6: 0.1553  m1_loss_dice_6: 1.311  m1_loss_ce_7: 0.4612  m1_loss_mask_7: 0.1532  m1_loss_dice_7: 1.263  m1_loss_ce_8: 0.46  m1_loss_mask_8: 0.1522  m1_loss_dice_8: 1.288  m2_loss_ce: 0.4451  m2_loss_mask: 0.1623  m2_loss_dice: 1.337  m2_loss_ce_0: 0.6254  m2_loss_mask_0: 0.2014  m2_loss_dice_0: 1.554  m2_loss_ce_1: 0.6571  m2_loss_mask_1: 0.1849  m2_loss_dice_1: 1.451  m2_loss_ce_2: 0.5962  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.385  m2_loss_ce_3: 0.5642  m2_loss_mask_3: 0.1678  m2_loss_dice_3: 1.321  m2_loss_ce_4: 0.5094  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.313  m2_loss_ce_5: 0.4959  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.319  m2_loss_ce_6: 0.4653  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.304  m2_loss_ce_7: 0.4806  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.331  m2_loss_ce_8: 0.443  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.324    time: 1.4184  last_time: 1.3995  data_time: 0.0585  last_data_time: 0.0487   lr: 0.0001  max_mem: 35366M
[10/05 17:58:53] d2.utils.events INFO:  eta: 0:05:11  iter: 779  total_loss: 39.87  m1_loss_ce: 0.4428  m1_loss_mask: 0.166  m1_loss_dice: 1.222  m1_loss_ce_0: 0.5373  m1_loss_mask_0: 0.1832  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6047  m1_loss_mask_1: 0.1753  m1_loss_dice_1: 1.382  m1_loss_ce_2: 0.514  m1_loss_mask_2: 0.1647  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.484  m1_loss_mask_3: 0.1675  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4681  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4501  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.4083  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.4623  m1_loss_mask_7: 0.165  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.4365  m1_loss_mask_8: 0.1659  m1_loss_dice_8: 1.228  m2_loss_ce: 0.4779  m2_loss_mask: 0.1714  m2_loss_dice: 1.243  m2_loss_ce_0: 0.6249  m2_loss_mask_0: 0.1899  m2_loss_dice_0: 1.531  m2_loss_ce_1: 0.7118  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.5832  m2_loss_mask_2: 0.1771  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.5437  m2_loss_mask_3: 0.1733  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5391  m2_loss_mask_4: 0.1719  m2_loss_dice_4: 1.31  m2_loss_ce_5: 0.5217  m2_loss_mask_5: 0.1713  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.4865  m2_loss_mask_6: 0.1719  m2_loss_dice_6: 1.305  m2_loss_ce_7: 0.4903  m2_loss_mask_7: 0.1704  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.4774  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.313    time: 1.4188  last_time: 1.3557  data_time: 0.0532  last_data_time: 0.0456   lr: 0.0001  max_mem: 35366M
[10/05 17:59:21] d2.utils.events INFO:  eta: 0:04:42  iter: 799  total_loss: 36.95  m1_loss_ce: 0.3841  m1_loss_mask: 0.1615  m1_loss_dice: 1.134  m1_loss_ce_0: 0.4997  m1_loss_mask_0: 0.1845  m1_loss_dice_0: 1.344  m1_loss_ce_1: 0.5579  m1_loss_mask_1: 0.1764  m1_loss_dice_1: 1.26  m1_loss_ce_2: 0.5252  m1_loss_mask_2: 0.1705  m1_loss_dice_2: 1.209  m1_loss_ce_3: 0.4735  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.117  m1_loss_ce_4: 0.44  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.121  m1_loss_ce_5: 0.4258  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.096  m1_loss_ce_6: 0.3818  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.147  m1_loss_ce_7: 0.4093  m1_loss_mask_7: 0.1619  m1_loss_dice_7: 1.113  m1_loss_ce_8: 0.4065  m1_loss_mask_8: 0.1615  m1_loss_dice_8: 1.159  m2_loss_ce: 0.4433  m2_loss_mask: 0.1677  m2_loss_dice: 1.172  m2_loss_ce_0: 0.545  m2_loss_mask_0: 0.1934  m2_loss_dice_0: 1.371  m2_loss_ce_1: 0.627  m2_loss_mask_1: 0.1827  m2_loss_dice_1: 1.321  m2_loss_ce_2: 0.5475  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.4921  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.4771  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.4904  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.178  m2_loss_ce_6: 0.4575  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.4581  m2_loss_mask_7: 0.1717  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.4428  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.204    time: 1.4182  last_time: 1.4358  data_time: 0.0549  last_data_time: 0.0443   lr: 0.0001  max_mem: 35366M
[10/05 17:59:49] d2.utils.events INFO:  eta: 0:04:14  iter: 819  total_loss: 40.71  m1_loss_ce: 0.4488  m1_loss_mask: 0.1626  m1_loss_dice: 1.267  m1_loss_ce_0: 0.5635  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6389  m1_loss_mask_1: 0.1725  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5814  m1_loss_mask_2: 0.1636  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5203  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.4867  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4884  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.288  m1_loss_ce_6: 0.4511  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.278  m1_loss_ce_7: 0.4673  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.4291  m1_loss_mask_8: 0.1635  m1_loss_dice_8: 1.272  m2_loss_ce: 0.5331  m2_loss_mask: 0.1681  m2_loss_dice: 1.303  m2_loss_ce_0: 0.6096  m2_loss_mask_0: 0.1941  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.7131  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.425  m2_loss_ce_2: 0.6331  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.372  m2_loss_ce_3: 0.5552  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.323  m2_loss_ce_4: 0.5623  m2_loss_mask_4: 0.1652  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.516  m2_loss_mask_5: 0.1631  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.5494  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.3  m2_loss_ce_7: 0.5514  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.301  m2_loss_ce_8: 0.4703  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.274    time: 1.4182  last_time: 1.3841  data_time: 0.0534  last_data_time: 0.0434   lr: 0.0001  max_mem: 35366M
[10/05 18:00:18] d2.utils.events INFO:  eta: 0:03:46  iter: 839  total_loss: 37.41  m1_loss_ce: 0.4001  m1_loss_mask: 0.1668  m1_loss_dice: 1.133  m1_loss_ce_0: 0.544  m1_loss_mask_0: 0.2005  m1_loss_dice_0: 1.355  m1_loss_ce_1: 0.5907  m1_loss_mask_1: 0.1818  m1_loss_dice_1: 1.256  m1_loss_ce_2: 0.5345  m1_loss_mask_2: 0.1781  m1_loss_dice_2: 1.204  m1_loss_ce_3: 0.457  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4546  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.15  m1_loss_ce_5: 0.4223  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.4121  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.407  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.153  m1_loss_ce_8: 0.3994  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.139  m2_loss_ce: 0.4652  m2_loss_mask: 0.1688  m2_loss_dice: 1.181  m2_loss_ce_0: 0.5627  m2_loss_mask_0: 0.2036  m2_loss_dice_0: 1.395  m2_loss_ce_1: 0.6352  m2_loss_mask_1: 0.185  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.5254  m2_loss_mask_2: 0.1729  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5142  m2_loss_mask_3: 0.1737  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.4785  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.4886  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.4622  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.16  m2_loss_ce_7: 0.4586  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.155  m2_loss_ce_8: 0.4664  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.19    time: 1.4179  last_time: 1.3814  data_time: 0.0481  last_data_time: 0.0413   lr: 0.0001  max_mem: 35366M
[10/05 18:00:46] d2.utils.events INFO:  eta: 0:03:18  iter: 859  total_loss: 37.09  m1_loss_ce: 0.4048  m1_loss_mask: 0.1617  m1_loss_dice: 1.138  m1_loss_ce_0: 0.581  m1_loss_mask_0: 0.1881  m1_loss_dice_0: 1.306  m1_loss_ce_1: 0.5748  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.545  m1_loss_mask_2: 0.162  m1_loss_dice_2: 1.203  m1_loss_ce_3: 0.4786  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.163  m1_loss_ce_4: 0.4593  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.155  m1_loss_ce_5: 0.4381  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.17  m1_loss_ce_6: 0.4613  m1_loss_mask_6: 0.1629  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.41  m1_loss_mask_7: 0.1619  m1_loss_dice_7: 1.146  m1_loss_ce_8: 0.4234  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.133  m2_loss_ce: 0.4405  m2_loss_mask: 0.166  m2_loss_dice: 1.202  m2_loss_ce_0: 0.5782  m2_loss_mask_0: 0.201  m2_loss_dice_0: 1.371  m2_loss_ce_1: 0.6404  m2_loss_mask_1: 0.1867  m2_loss_dice_1: 1.307  m2_loss_ce_2: 0.5287  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.5002  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.4621  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.179  m2_loss_ce_5: 0.4689  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.191  m2_loss_ce_6: 0.4582  m2_loss_mask_6: 0.1671  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.4355  m2_loss_mask_7: 0.1678  m2_loss_dice_7: 1.188  m2_loss_ce_8: 0.4588  m2_loss_mask_8: 0.1665  m2_loss_dice_8: 1.185    time: 1.4180  last_time: 1.4405  data_time: 0.0538  last_data_time: 0.0424   lr: 0.0001  max_mem: 35366M
[10/05 18:01:15] d2.utils.events INFO:  eta: 0:02:49  iter: 879  total_loss: 38.95  m1_loss_ce: 0.4159  m1_loss_mask: 0.1493  m1_loss_dice: 1.202  m1_loss_ce_0: 0.5267  m1_loss_mask_0: 0.1675  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.5921  m1_loss_mask_1: 0.1586  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5391  m1_loss_mask_2: 0.153  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.4678  m1_loss_mask_3: 0.1524  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4647  m1_loss_mask_4: 0.1496  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.4127  m1_loss_mask_5: 0.1476  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4032  m1_loss_mask_6: 0.1502  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4486  m1_loss_mask_7: 0.1476  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4146  m1_loss_mask_8: 0.1461  m1_loss_dice_8: 1.207  m2_loss_ce: 0.4791  m2_loss_mask: 0.1542  m2_loss_dice: 1.265  m2_loss_ce_0: 0.553  m2_loss_mask_0: 0.1737  m2_loss_dice_0: 1.541  m2_loss_ce_1: 0.6366  m2_loss_mask_1: 0.167  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.577  m2_loss_mask_2: 0.1544  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5245  m2_loss_mask_3: 0.1551  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.5044  m2_loss_mask_4: 0.1517  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.5209  m2_loss_mask_5: 0.153  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.4785  m2_loss_mask_6: 0.1532  m2_loss_dice_6: 1.26  m2_loss_ce_7: 0.4566  m2_loss_mask_7: 0.1543  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.4755  m2_loss_mask_8: 0.1527  m2_loss_dice_8: 1.276    time: 1.4179  last_time: 1.5371  data_time: 0.0570  last_data_time: 0.0491   lr: 0.0001  max_mem: 35366M
[10/05 18:01:43] d2.utils.events INFO:  eta: 0:02:21  iter: 899  total_loss: 38.85  m1_loss_ce: 0.4309  m1_loss_mask: 0.1502  m1_loss_dice: 1.23  m1_loss_ce_0: 0.5082  m1_loss_mask_0: 0.1827  m1_loss_dice_0: 1.37  m1_loss_ce_1: 0.57  m1_loss_mask_1: 0.1642  m1_loss_dice_1: 1.333  m1_loss_ce_2: 0.5407  m1_loss_mask_2: 0.1574  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.4894  m1_loss_mask_3: 0.1564  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.458  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.4526  m1_loss_mask_5: 0.1556  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4229  m1_loss_mask_6: 0.1547  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.428  m1_loss_mask_7: 0.1547  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.411  m1_loss_mask_8: 0.1525  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4924  m2_loss_mask: 0.1572  m2_loss_dice: 1.25  m2_loss_ce_0: 0.5788  m2_loss_mask_0: 0.1959  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6337  m2_loss_mask_1: 0.1802  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.5575  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5596  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.511  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.305  m2_loss_ce_5: 0.4664  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.4565  m2_loss_mask_6: 0.1595  m2_loss_dice_6: 1.287  m2_loss_ce_7: 0.4946  m2_loss_mask_7: 0.1585  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.4787  m2_loss_mask_8: 0.1606  m2_loss_dice_8: 1.286    time: 1.4178  last_time: 1.3821  data_time: 0.0533  last_data_time: 0.0672   lr: 0.0001  max_mem: 35366M
[10/05 18:02:11] d2.utils.events INFO:  eta: 0:01:53  iter: 919  total_loss: 41.06  m1_loss_ce: 0.4695  m1_loss_mask: 0.1748  m1_loss_dice: 1.196  m1_loss_ce_0: 0.5411  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.5613  m1_loss_mask_1: 0.1776  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.5745  m1_loss_mask_2: 0.1732  m1_loss_dice_2: 1.308  m1_loss_ce_3: 0.5318  m1_loss_mask_3: 0.1741  m1_loss_dice_3: 1.176  m1_loss_ce_4: 0.5214  m1_loss_mask_4: 0.1719  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.5017  m1_loss_mask_5: 0.1734  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4729  m1_loss_mask_6: 0.1739  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4788  m1_loss_mask_7: 0.174  m1_loss_dice_7: 1.182  m1_loss_ce_8: 0.483  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.196  m2_loss_ce: 0.4753  m2_loss_mask: 0.1701  m2_loss_dice: 1.219  m2_loss_ce_0: 0.6216  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.6603  m2_loss_mask_1: 0.1895  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5837  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5515  m2_loss_mask_3: 0.1771  m2_loss_dice_3: 1.317  m2_loss_ce_4: 0.5174  m2_loss_mask_4: 0.1738  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.5185  m2_loss_mask_5: 0.1716  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4694  m2_loss_mask_6: 0.1735  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.507  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4816  m2_loss_mask_8: 0.1726  m2_loss_dice_8: 1.219    time: 1.4176  last_time: 1.3305  data_time: 0.0529  last_data_time: 0.0550   lr: 0.0001  max_mem: 35366M
[10/05 18:02:40] d2.utils.events INFO:  eta: 0:01:24  iter: 939  total_loss: 40.17  m1_loss_ce: 0.4496  m1_loss_mask: 0.1563  m1_loss_dice: 1.219  m1_loss_ce_0: 0.5866  m1_loss_mask_0: 0.1774  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.5945  m1_loss_mask_1: 0.1601  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5669  m1_loss_mask_2: 0.1571  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.5057  m1_loss_mask_3: 0.1589  m1_loss_dice_3: 1.202  m1_loss_ce_4: 0.4796  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.4774  m1_loss_mask_5: 0.1569  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.4475  m1_loss_mask_6: 0.1572  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.471  m1_loss_mask_7: 0.1558  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.4698  m1_loss_mask_8: 0.1562  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4847  m2_loss_mask: 0.1585  m2_loss_dice: 1.266  m2_loss_ce_0: 0.6161  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.688  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.5933  m2_loss_mask_2: 0.1636  m2_loss_dice_2: 1.375  m2_loss_ce_3: 0.5273  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.523  m2_loss_mask_4: 0.1586  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5216  m2_loss_mask_5: 0.1591  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.4951  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.5147  m2_loss_mask_7: 0.1575  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4598  m2_loss_mask_8: 0.1576  m2_loss_dice_8: 1.258    time: 1.4184  last_time: 1.4438  data_time: 0.0545  last_data_time: 0.0569   lr: 0.0001  max_mem: 35366M
[10/05 18:03:09] d2.utils.events INFO:  eta: 0:00:56  iter: 959  total_loss: 40.09  m1_loss_ce: 0.4323  m1_loss_mask: 0.1637  m1_loss_dice: 1.17  m1_loss_ce_0: 0.566  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.5682  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.5135  m1_loss_mask_2: 0.171  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.4633  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.4733  m1_loss_mask_4: 0.1667  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.4677  m1_loss_mask_5: 0.1659  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.4408  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.4433  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.449  m1_loss_mask_8: 0.1641  m1_loss_dice_8: 1.187  m2_loss_ce: 0.4883  m2_loss_mask: 0.1716  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6198  m2_loss_mask_0: 0.2018  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6305  m2_loss_mask_1: 0.1879  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5767  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5252  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.4968  m2_loss_mask_4: 0.1724  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.52  m2_loss_mask_5: 0.1714  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.5286  m2_loss_mask_6: 0.1677  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.5096  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4792  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.246    time: 1.4186  last_time: 1.5514  data_time: 0.0511  last_data_time: 0.0489   lr: 0.0001  max_mem: 35366M
[10/05 18:03:38] d2.utils.events INFO:  eta: 0:00:28  iter: 979  total_loss: 39.34  m1_loss_ce: 0.4516  m1_loss_mask: 0.1698  m1_loss_dice: 1.201  m1_loss_ce_0: 0.5691  m1_loss_mask_0: 0.1972  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6257  m1_loss_mask_1: 0.1904  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.6007  m1_loss_mask_2: 0.1828  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.492  m1_loss_mask_3: 0.1778  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4495  m1_loss_mask_4: 0.1809  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.4176  m1_loss_mask_5: 0.1765  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4705  m1_loss_mask_6: 0.1729  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4674  m1_loss_mask_7: 0.172  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.4502  m1_loss_mask_8: 0.172  m1_loss_dice_8: 1.213  m2_loss_ce: 0.4731  m2_loss_mask: 0.1715  m2_loss_dice: 1.256  m2_loss_ce_0: 0.6388  m2_loss_mask_0: 0.2125  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6619  m2_loss_mask_1: 0.1991  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.5932  m2_loss_mask_2: 0.1837  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5424  m2_loss_mask_3: 0.176  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5189  m2_loss_mask_4: 0.1729  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.5112  m2_loss_mask_5: 0.1718  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.4834  m2_loss_mask_6: 0.173  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.4865  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.4968  m2_loss_mask_8: 0.1721  m2_loss_dice_8: 1.281    time: 1.4188  last_time: 1.4951  data_time: 0.0553  last_data_time: 0.0522   lr: 0.0001  max_mem: 35366M
[10/05 18:04:06] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_Task_Difficulty/model_final.pth
[10/05 18:04:08] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 39.24  m1_loss_ce: 0.4515  m1_loss_mask: 0.1595  m1_loss_dice: 1.171  m1_loss_ce_0: 0.583  m1_loss_mask_0: 0.1811  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.6072  m1_loss_mask_1: 0.1713  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.61  m1_loss_mask_2: 0.1664  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5054  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.4846  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4813  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.4685  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.4397  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.151  m1_loss_ce_8: 0.467  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.176  m2_loss_ce: 0.4809  m2_loss_mask: 0.1629  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6084  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6633  m2_loss_mask_1: 0.1785  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.611  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.5474  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5031  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4898  m2_loss_mask_6: 0.1653  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.4938  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.4921  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.244    time: 1.4185  last_time: 1.4166  data_time: 0.0531  last_data_time: 0.0544   lr: 0.0001  max_mem: 35366M
[10/05 18:04:08] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:23:35 (1.4185 s / it)
[10/05 18:04:08] d2.engine.hooks INFO: Total training time: 0:23:43 (0:00:07 on hooks)
[10/05 18:04:08] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/05 18:04:09] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/05 18:04:09] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/05 18:04:09] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/05 18:04:09] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/05 18:05:36] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalgwzadhk2 ...
[10/05 18:06:25] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 58.176 | 80.837 | 70.897 |      19       |
| Things | 50.346 | 80.366 | 62.551 |       8       |
| Stuff  | 63.871 | 81.179 | 76.966 |      11       |
[10/05 18:06:25] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.588 | 97.892 | 99.690 |     Stuff     |
| class_8  | 72.971 | 84.119 | 86.747 |     Stuff     |
| class_11 | 86.683 | 89.318 | 97.050 |     Stuff     |
| class_12 | 39.244 | 78.728 | 49.848 |     Stuff     |
| class_13 | 37.349 | 75.270 | 49.620 |     Stuff     |
| class_17 | 42.626 | 63.744 | 66.872 |     Stuff     |
| class_19 | 48.858 | 69.294 | 70.508 |     Stuff     |
| class_20 | 64.428 | 76.386 | 84.345 |     Stuff     |
| class_21 | 88.654 | 89.855 | 98.664 |     Stuff     |
| class_22 | 36.829 | 76.647 | 48.049 |     Stuff     |
| class_23 | 87.347 | 91.714 | 95.238 |     Stuff     |
| class_24 | 51.627 | 76.232 | 67.723 |    Things     |
| class_25 | 46.233 | 73.890 | 62.570 |    Things     |
| class_26 | 65.679 | 83.236 | 78.906 |    Things     |
| class_27 | 48.157 | 87.285 | 55.172 |    Things     |
| class_28 | 65.863 | 89.813 | 73.333 |    Things     |
| class_31 | 42.024 | 86.675 | 48.485 |    Things     |
| class_32 | 40.635 | 74.498 | 54.545 |    Things     |
| class_33 | 42.549 | 71.299 | 59.677 |    Things     |
[10/05 18:06:25] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/05 18:06:25] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/05 18:06:25] d2.evaluation.testing INFO: copypaste: 58.1760,80.8367,70.8970,50.3458,80.3661,62.5514,63.8707,81.1789,76.9665,97.5884,97.8921,99.6898,72.9710,84.1194,86.7470,86.6831,89.3181,97.0498,39.2445,78.7283,49.8480,37.3492,75.2701,49.6203,42.6265,63.7436,66.8718,48.8584,69.2943,70.5085,64.4278,76.3859,84.3450,88.6542,89.8548,98.6639,36.8285,76.6474,48.0493,87.3465,91.7139,95.2381,51.6267,76.2325,67.7227,46.2326,73.8896,62.5698,65.6785,83.2362,78.9062,48.1573,87.2852,55.1724,65.8630,89.8132,73.3333,42.0241,86.6747,48.4848,40.6353,74.4980,54.5455,42.5491,71.2993,59.6767
