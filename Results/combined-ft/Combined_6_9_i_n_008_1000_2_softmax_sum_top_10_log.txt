[08/19 17:39:34] detectron2 INFO: Rank of current process: 0. World size: 2
[08/19 17:39:35] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/19 17:39:35] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_top_10.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/19 17:39:35] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_top_10.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/19 17:39:35] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/19 17:39:35] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10/config.yaml
[08/19 17:39:35] d2.utils.env INFO: Using a generated random seed 36258695
[08/19 17:39:39] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 17:39:39] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/19 17:39:40] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/19 17:39:40] d2.data.build INFO: Using training sampler TrainingSampler
[08/19 17:39:40] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 17:39:40] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/19 17:39:40] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/19 17:39:40] d2.data.build INFO: Making batched data loader with batch_size=4
[08/19 17:39:40] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/19 17:39:44] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 17:39:44] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 17:39:44] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 17:39:44] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 17:39:44] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 17:40:22] d2.utils.events INFO:  eta: 0:24:14  iter: 19  total_loss: 44.48  m1_loss_ce: 0.5408  m1_loss_mask: 0.171  m1_loss_dice: 1.24  m1_loss_ce_0: 0.6024  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.6519  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.6323  m1_loss_mask_2: 0.1729  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.5957  m1_loss_mask_3: 0.1748  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.5726  m1_loss_mask_4: 0.1738  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.569  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.5682  m1_loss_mask_6: 0.1725  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.5191  m1_loss_mask_7: 0.1731  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.5209  m1_loss_mask_8: 0.1728  m1_loss_dice_8: 1.25  m2_loss_ce: 0.5519  m2_loss_mask: 0.1652  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.6858  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.6454  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5577  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.5541  m2_loss_mask_4: 0.1683  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.5561  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.21  m2_loss_ce_6: 0.5631  m2_loss_mask_6: 0.1653  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.5198  m2_loss_mask_7: 0.1656  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.5254  m2_loss_mask_8: 0.1663  m2_loss_dice_8: 1.224  com_loss_ce: 1.533  com_loss_mask: 0.6936  com_loss_dice: 0.9579    time: 1.4995  last_time: 1.4061  data_time: 0.2323  last_data_time: 0.0427   lr: 0.0001  max_mem: 34632M
[08/19 17:40:51] d2.utils.events INFO:  eta: 0:23:22  iter: 39  total_loss: 45.08  m1_loss_ce: 0.5614  m1_loss_mask: 0.1622  m1_loss_dice: 1.266  m1_loss_ce_0: 0.6797  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.7383  m1_loss_mask_1: 0.1679  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.6708  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.6188  m1_loss_mask_3: 0.1645  m1_loss_dice_3: 1.298  m1_loss_ce_4: 0.6319  m1_loss_mask_4: 0.1665  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.6131  m1_loss_mask_5: 0.1637  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.5483  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.27  m1_loss_ce_7: 0.5596  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.5245  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.236  m2_loss_ce: 0.5368  m2_loss_mask: 0.161  m2_loss_dice: 1.221  m2_loss_ce_0: 0.6511  m2_loss_mask_0: 0.1888  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6975  m2_loss_mask_1: 0.1744  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6335  m2_loss_mask_2: 0.1587  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.6083  m2_loss_mask_3: 0.1674  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5665  m2_loss_mask_4: 0.1632  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.5898  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5495  m2_loss_mask_6: 0.1645  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.5282  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.5401  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.218  com_loss_ce: 1.526  com_loss_mask: 0.6936  com_loss_dice: 0.9563    time: 1.4735  last_time: 1.4440  data_time: 0.0430  last_data_time: 0.0395   lr: 0.0001  max_mem: 34663M
[08/19 17:41:21] d2.utils.events INFO:  eta: 0:22:51  iter: 59  total_loss: 45.34  m1_loss_ce: 0.5705  m1_loss_mask: 0.169  m1_loss_dice: 1.265  m1_loss_ce_0: 0.7092  m1_loss_mask_0: 0.193  m1_loss_dice_0: 1.534  m1_loss_ce_1: 0.6893  m1_loss_mask_1: 0.1788  m1_loss_dice_1: 1.452  m1_loss_ce_2: 0.6664  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.6203  m1_loss_mask_3: 0.1715  m1_loss_dice_3: 1.301  m1_loss_ce_4: 0.601  m1_loss_mask_4: 0.171  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.5921  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5696  m1_loss_mask_6: 0.1731  m1_loss_dice_6: 1.286  m1_loss_ce_7: 0.5903  m1_loss_mask_7: 0.17  m1_loss_dice_7: 1.31  m1_loss_ce_8: 0.5477  m1_loss_mask_8: 0.1712  m1_loss_dice_8: 1.297  m2_loss_ce: 0.5438  m2_loss_mask: 0.1695  m2_loss_dice: 1.24  m2_loss_ce_0: 0.7059  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.7033  m2_loss_mask_1: 0.1757  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.6801  m2_loss_mask_2: 0.1697  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5912  m2_loss_mask_3: 0.1699  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5964  m2_loss_mask_4: 0.1706  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.5422  m2_loss_mask_5: 0.1684  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5399  m2_loss_mask_6: 0.1711  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5543  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5398  m2_loss_mask_8: 0.1691  m2_loss_dice_8: 1.215  com_loss_ce: 1.552  com_loss_mask: 0.6936  com_loss_dice: 0.9605    time: 1.4694  last_time: 1.4476  data_time: 0.0503  last_data_time: 0.0447   lr: 0.0001  max_mem: 35093M
[08/19 17:41:50] d2.utils.events INFO:  eta: 0:22:30  iter: 79  total_loss: 43.48  m1_loss_ce: 0.5592  m1_loss_mask: 0.1602  m1_loss_dice: 1.207  m1_loss_ce_0: 0.6322  m1_loss_mask_0: 0.1848  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.6857  m1_loss_mask_1: 0.1715  m1_loss_dice_1: 1.305  m1_loss_ce_2: 0.6713  m1_loss_mask_2: 0.1708  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.6101  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.5868  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.5475  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.5633  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.5462  m1_loss_mask_7: 0.161  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.5609  m1_loss_mask_8: 0.1615  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5308  m2_loss_mask: 0.1623  m2_loss_dice: 1.192  m2_loss_ce_0: 0.6602  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.7173  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.6591  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.6002  m2_loss_mask_3: 0.1741  m2_loss_dice_3: 1.204  m2_loss_ce_4: 0.5471  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.206  m2_loss_ce_5: 0.5665  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5503  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.5351  m2_loss_mask_7: 0.1637  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.5279  m2_loss_mask_8: 0.1592  m2_loss_dice_8: 1.187  com_loss_ce: 1.556  com_loss_mask: 0.6936  com_loss_dice: 0.9601    time: 1.4701  last_time: 1.4449  data_time: 0.0416  last_data_time: 0.0322   lr: 0.0001  max_mem: 35093M
[08/19 17:42:19] d2.utils.events INFO:  eta: 0:21:49  iter: 99  total_loss: 44.59  m1_loss_ce: 0.5442  m1_loss_mask: 0.1743  m1_loss_dice: 1.25  m1_loss_ce_0: 0.6087  m1_loss_mask_0: 0.1973  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.7089  m1_loss_mask_1: 0.1926  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.6918  m1_loss_mask_2: 0.1747  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5796  m1_loss_mask_3: 0.1766  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.5575  m1_loss_mask_4: 0.1764  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.5708  m1_loss_mask_5: 0.1739  m1_loss_dice_5: 1.264  m1_loss_ce_6: 0.5204  m1_loss_mask_6: 0.1777  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.5572  m1_loss_mask_7: 0.176  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.5311  m1_loss_mask_8: 0.1739  m1_loss_dice_8: 1.256  m2_loss_ce: 0.541  m2_loss_mask: 0.1607  m2_loss_dice: 1.228  m2_loss_ce_0: 0.5878  m2_loss_mask_0: 0.1959  m2_loss_dice_0: 1.486  m2_loss_ce_1: 0.652  m2_loss_mask_1: 0.178  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.6357  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5675  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5595  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5299  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.5184  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.536  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.5153  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.22  com_loss_ce: 1.567  com_loss_mask: 0.6936  com_loss_dice: 0.9586    time: 1.4604  last_time: 1.4206  data_time: 0.0433  last_data_time: 0.0438   lr: 0.0001  max_mem: 35093M
[08/19 17:42:48] d2.utils.events INFO:  eta: 0:21:22  iter: 119  total_loss: 47.3  m1_loss_ce: 0.5988  m1_loss_mask: 0.1598  m1_loss_dice: 1.358  m1_loss_ce_0: 0.6669  m1_loss_mask_0: 0.1841  m1_loss_dice_0: 1.571  m1_loss_ce_1: 0.7365  m1_loss_mask_1: 0.1736  m1_loss_dice_1: 1.454  m1_loss_ce_2: 0.7319  m1_loss_mask_2: 0.1604  m1_loss_dice_2: 1.409  m1_loss_ce_3: 0.6245  m1_loss_mask_3: 0.1604  m1_loss_dice_3: 1.344  m1_loss_ce_4: 0.6077  m1_loss_mask_4: 0.1627  m1_loss_dice_4: 1.358  m1_loss_ce_5: 0.6183  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.341  m1_loss_ce_6: 0.5896  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.33  m1_loss_ce_7: 0.5955  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.341  m1_loss_ce_8: 0.5604  m1_loss_mask_8: 0.1575  m1_loss_dice_8: 1.344  m2_loss_ce: 0.5774  m2_loss_mask: 0.1567  m2_loss_dice: 1.333  m2_loss_ce_0: 0.6174  m2_loss_mask_0: 0.1929  m2_loss_dice_0: 1.605  m2_loss_ce_1: 0.7361  m2_loss_mask_1: 0.1693  m2_loss_dice_1: 1.521  m2_loss_ce_2: 0.7035  m2_loss_mask_2: 0.1626  m2_loss_dice_2: 1.414  m2_loss_ce_3: 0.6394  m2_loss_mask_3: 0.1624  m2_loss_dice_3: 1.355  m2_loss_ce_4: 0.5963  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.374  m2_loss_ce_5: 0.5903  m2_loss_mask_5: 0.1608  m2_loss_dice_5: 1.348  m2_loss_ce_6: 0.6093  m2_loss_mask_6: 0.1564  m2_loss_dice_6: 1.297  m2_loss_ce_7: 0.5623  m2_loss_mask_7: 0.1572  m2_loss_dice_7: 1.319  m2_loss_ce_8: 0.5885  m2_loss_mask_8: 0.1567  m2_loss_dice_8: 1.324  com_loss_ce: 1.579  com_loss_mask: 0.6936  com_loss_dice: 0.96    time: 1.4592  last_time: 1.4691  data_time: 0.0424  last_data_time: 0.0365   lr: 0.0001  max_mem: 35093M
[08/19 17:43:18] d2.utils.events INFO:  eta: 0:20:53  iter: 139  total_loss: 44.12  m1_loss_ce: 0.544  m1_loss_mask: 0.1667  m1_loss_dice: 1.295  m1_loss_ce_0: 0.6315  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.519  m1_loss_ce_1: 0.6591  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.444  m1_loss_ce_2: 0.639  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.381  m1_loss_ce_3: 0.5724  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.301  m1_loss_ce_4: 0.5841  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.5735  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.322  m1_loss_ce_6: 0.5186  m1_loss_mask_6: 0.1701  m1_loss_dice_6: 1.35  m1_loss_ce_7: 0.5445  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.313  m1_loss_ce_8: 0.5188  m1_loss_mask_8: 0.1674  m1_loss_dice_8: 1.323  m2_loss_ce: 0.5481  m2_loss_mask: 0.1574  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6552  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.504  m2_loss_ce_1: 0.6466  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.432  m2_loss_ce_2: 0.6669  m2_loss_mask_2: 0.1639  m2_loss_dice_2: 1.361  m2_loss_ce_3: 0.5851  m2_loss_mask_3: 0.1601  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.591  m2_loss_mask_4: 0.1613  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5905  m2_loss_mask_5: 0.1597  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.5439  m2_loss_mask_6: 0.158  m2_loss_dice_6: 1.26  m2_loss_ce_7: 0.5537  m2_loss_mask_7: 0.1575  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.5459  m2_loss_mask_8: 0.1571  m2_loss_dice_8: 1.243  com_loss_ce: 1.582  com_loss_mask: 0.6936  com_loss_dice: 0.9581    time: 1.4593  last_time: 1.4461  data_time: 0.0453  last_data_time: 0.0397   lr: 0.0001  max_mem: 35093M
[08/19 17:43:47] d2.utils.events INFO:  eta: 0:20:22  iter: 159  total_loss: 45.51  m1_loss_ce: 0.551  m1_loss_mask: 0.166  m1_loss_dice: 1.303  m1_loss_ce_0: 0.6171  m1_loss_mask_0: 0.2012  m1_loss_dice_0: 1.532  m1_loss_ce_1: 0.7089  m1_loss_mask_1: 0.1866  m1_loss_dice_1: 1.419  m1_loss_ce_2: 0.6783  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.336  m1_loss_ce_3: 0.5918  m1_loss_mask_3: 0.1684  m1_loss_dice_3: 1.3  m1_loss_ce_4: 0.5846  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.297  m1_loss_ce_5: 0.5906  m1_loss_mask_5: 0.1682  m1_loss_dice_5: 1.295  m1_loss_ce_6: 0.5374  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.281  m1_loss_ce_7: 0.5082  m1_loss_mask_7: 0.1663  m1_loss_dice_7: 1.297  m1_loss_ce_8: 0.5231  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.27  m2_loss_ce: 0.5412  m2_loss_mask: 0.1633  m2_loss_dice: 1.278  m2_loss_ce_0: 0.6124  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.6746  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.6292  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.6145  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.305  m2_loss_ce_4: 0.5717  m2_loss_mask_4: 0.1678  m2_loss_dice_4: 1.297  m2_loss_ce_5: 0.5781  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.511  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5287  m2_loss_mask_7: 0.1655  m2_loss_dice_7: 1.273  m2_loss_ce_8: 0.5164  m2_loss_mask_8: 0.1653  m2_loss_dice_8: 1.26  com_loss_ce: 1.59  com_loss_mask: 0.6936  com_loss_dice: 0.9579    time: 1.4580  last_time: 1.4314  data_time: 0.0429  last_data_time: 0.0472   lr: 0.0001  max_mem: 35093M
[08/19 17:44:16] d2.utils.events INFO:  eta: 0:19:53  iter: 179  total_loss: 45.73  m1_loss_ce: 0.5706  m1_loss_mask: 0.1585  m1_loss_dice: 1.258  m1_loss_ce_0: 0.6332  m1_loss_mask_0: 0.1879  m1_loss_dice_0: 1.541  m1_loss_ce_1: 0.6854  m1_loss_mask_1: 0.1736  m1_loss_dice_1: 1.418  m1_loss_ce_2: 0.6438  m1_loss_mask_2: 0.1658  m1_loss_dice_2: 1.384  m1_loss_ce_3: 0.5775  m1_loss_mask_3: 0.1667  m1_loss_dice_3: 1.317  m1_loss_ce_4: 0.5482  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.322  m1_loss_ce_5: 0.5705  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.342  m1_loss_ce_6: 0.5442  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.308  m1_loss_ce_7: 0.5644  m1_loss_mask_7: 0.1669  m1_loss_dice_7: 1.289  m1_loss_ce_8: 0.5672  m1_loss_mask_8: 0.1696  m1_loss_dice_8: 1.324  m2_loss_ce: 0.5374  m2_loss_mask: 0.163  m2_loss_dice: 1.261  m2_loss_ce_0: 0.627  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.484  m2_loss_ce_1: 0.6666  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.444  m2_loss_ce_2: 0.623  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5626  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.558  m2_loss_mask_4: 0.1706  m2_loss_dice_4: 1.326  m2_loss_ce_5: 0.5573  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.324  m2_loss_ce_6: 0.5794  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.5451  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.296  m2_loss_ce_8: 0.562  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.262  com_loss_ce: 1.556  com_loss_mask: 0.6936  com_loss_dice: 0.9601    time: 1.4581  last_time: 1.4444  data_time: 0.0439  last_data_time: 0.0420   lr: 0.0001  max_mem: 35093M
[08/19 17:44:45] d2.utils.events INFO:  eta: 0:19:24  iter: 199  total_loss: 45.62  m1_loss_ce: 0.5631  m1_loss_mask: 0.1703  m1_loss_dice: 1.228  m1_loss_ce_0: 0.6495  m1_loss_mask_0: 0.1965  m1_loss_dice_0: 1.523  m1_loss_ce_1: 0.7437  m1_loss_mask_1: 0.183  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.6289  m1_loss_mask_2: 0.1722  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.6185  m1_loss_mask_3: 0.1728  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.5845  m1_loss_mask_4: 0.1727  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5734  m1_loss_mask_5: 0.1695  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.5902  m1_loss_mask_6: 0.1705  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.5601  m1_loss_mask_7: 0.1705  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.587  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.221  m2_loss_ce: 0.5506  m2_loss_mask: 0.164  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6257  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.495  m2_loss_ce_1: 0.7332  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6802  m2_loss_mask_2: 0.1653  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5857  m2_loss_mask_3: 0.1642  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.6009  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5892  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.5625  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.545  m2_loss_mask_7: 0.1641  m2_loss_dice_7: 1.27  m2_loss_ce_8: 0.519  m2_loss_mask_8: 0.1635  m2_loss_dice_8: 1.242  com_loss_ce: 1.559  com_loss_mask: 0.6936  com_loss_dice: 0.9595    time: 1.4575  last_time: 1.3876  data_time: 0.0436  last_data_time: 0.0428   lr: 0.0001  max_mem: 35093M
[08/19 17:45:14] d2.utils.events INFO:  eta: 0:18:54  iter: 219  total_loss: 44.82  m1_loss_ce: 0.5296  m1_loss_mask: 0.1736  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6035  m1_loss_mask_0: 0.2051  m1_loss_dice_0: 1.482  m1_loss_ce_1: 0.681  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.401  m1_loss_ce_2: 0.6236  m1_loss_mask_2: 0.1807  m1_loss_dice_2: 1.334  m1_loss_ce_3: 0.5584  m1_loss_mask_3: 0.1818  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.5307  m1_loss_mask_4: 0.1784  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.5563  m1_loss_mask_5: 0.1772  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.5366  m1_loss_mask_6: 0.1765  m1_loss_dice_6: 1.264  m1_loss_ce_7: 0.5331  m1_loss_mask_7: 0.1747  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.5194  m1_loss_mask_8: 0.1733  m1_loss_dice_8: 1.246  m2_loss_ce: 0.515  m2_loss_mask: 0.1733  m2_loss_dice: 1.245  m2_loss_ce_0: 0.6206  m2_loss_mask_0: 0.2054  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.6167  m2_loss_mask_1: 0.1877  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.6253  m2_loss_mask_2: 0.1774  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5511  m2_loss_mask_3: 0.1755  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.5008  m2_loss_mask_4: 0.1759  m2_loss_dice_4: 1.291  m2_loss_ce_5: 0.5157  m2_loss_mask_5: 0.1756  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.5072  m2_loss_mask_6: 0.1746  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.4869  m2_loss_mask_7: 0.1744  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.543  m2_loss_mask_8: 0.1737  m2_loss_dice_8: 1.261  com_loss_ce: 1.534  com_loss_mask: 0.6936  com_loss_dice: 0.9557    time: 1.4560  last_time: 1.3976  data_time: 0.0390  last_data_time: 0.0423   lr: 0.0001  max_mem: 35093M
[08/19 17:45:44] d2.utils.events INFO:  eta: 0:18:25  iter: 239  total_loss: 45.02  m1_loss_ce: 0.5879  m1_loss_mask: 0.1663  m1_loss_dice: 1.219  m1_loss_ce_0: 0.6602  m1_loss_mask_0: 0.1986  m1_loss_dice_0: 1.456  m1_loss_ce_1: 0.7038  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.6807  m1_loss_mask_2: 0.1721  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.6171  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.6181  m1_loss_mask_4: 0.1721  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.6104  m1_loss_mask_5: 0.1675  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.6152  m1_loss_mask_6: 0.1664  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.6038  m1_loss_mask_7: 0.166  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.5954  m1_loss_mask_8: 0.1703  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5434  m2_loss_mask: 0.1654  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6445  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.7176  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.391  m2_loss_ce_2: 0.6857  m2_loss_mask_2: 0.1703  m2_loss_dice_2: 1.288  m2_loss_ce_3: 0.6134  m2_loss_mask_3: 0.1699  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.6082  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5786  m2_loss_mask_5: 0.169  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5729  m2_loss_mask_6: 0.169  m2_loss_dice_6: 1.207  m2_loss_ce_7: 0.5951  m2_loss_mask_7: 0.169  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.5861  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.254  com_loss_ce: 1.566  com_loss_mask: 0.6936  com_loss_dice: 0.9568    time: 1.4558  last_time: 1.4026  data_time: 0.0410  last_data_time: 0.0457   lr: 0.0001  max_mem: 35408M
[08/19 17:46:13] d2.utils.events INFO:  eta: 0:17:55  iter: 259  total_loss: 44.16  m1_loss_ce: 0.5656  m1_loss_mask: 0.1651  m1_loss_dice: 1.22  m1_loss_ce_0: 0.6987  m1_loss_mask_0: 0.1866  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.7586  m1_loss_mask_1: 0.1762  m1_loss_dice_1: 1.374  m1_loss_ce_2: 0.7007  m1_loss_mask_2: 0.1717  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.6388  m1_loss_mask_3: 0.1693  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.6222  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.5896  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.574  m1_loss_mask_6: 0.1676  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.577  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.6009  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.213  m2_loss_ce: 0.549  m2_loss_mask: 0.162  m2_loss_dice: 1.201  m2_loss_ce_0: 0.6761  m2_loss_mask_0: 0.1856  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.7083  m2_loss_mask_1: 0.1747  m2_loss_dice_1: 1.38  m2_loss_ce_2: 0.6582  m2_loss_mask_2: 0.1644  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.6022  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.578  m2_loss_mask_4: 0.164  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5879  m2_loss_mask_5: 0.1641  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.552  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.5742  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.5439  m2_loss_mask_8: 0.1617  m2_loss_dice_8: 1.247  com_loss_ce: 1.578  com_loss_mask: 0.6936  com_loss_dice: 0.9598    time: 1.4550  last_time: 1.3644  data_time: 0.0412  last_data_time: 0.0377   lr: 0.0001  max_mem: 35408M
[08/19 17:46:42] d2.utils.events INFO:  eta: 0:17:25  iter: 279  total_loss: 44.17  m1_loss_ce: 0.5177  m1_loss_mask: 0.1652  m1_loss_dice: 1.237  m1_loss_ce_0: 0.6049  m1_loss_mask_0: 0.1907  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6512  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.6236  m1_loss_mask_2: 0.1725  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5955  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5692  m1_loss_mask_4: 0.1699  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5486  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.5265  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.511  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.5133  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5506  m2_loss_mask: 0.1654  m2_loss_dice: 1.272  m2_loss_ce_0: 0.5996  m2_loss_mask_0: 0.1916  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6746  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.6089  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5594  m2_loss_mask_3: 0.1678  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.5432  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.288  m2_loss_ce_5: 0.5434  m2_loss_mask_5: 0.1679  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.5213  m2_loss_mask_6: 0.1729  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5547  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.5405  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.256  com_loss_ce: 1.548  com_loss_mask: 0.6936  com_loss_dice: 0.956    time: 1.4546  last_time: 1.4392  data_time: 0.0407  last_data_time: 0.0358   lr: 0.0001  max_mem: 35408M
[08/19 17:47:11] d2.utils.events INFO:  eta: 0:16:55  iter: 299  total_loss: 45.67  m1_loss_ce: 0.557  m1_loss_mask: 0.163  m1_loss_dice: 1.24  m1_loss_ce_0: 0.702  m1_loss_mask_0: 0.196  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.7167  m1_loss_mask_1: 0.1774  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.6243  m1_loss_mask_2: 0.1679  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.597  m1_loss_mask_3: 0.1663  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.6028  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.246  m1_loss_ce_5: 0.5716  m1_loss_mask_5: 0.1646  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.574  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.249  m1_loss_ce_7: 0.5719  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.5855  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.273  m2_loss_ce: 0.5846  m2_loss_mask: 0.1652  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6545  m2_loss_mask_0: 0.206  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.7206  m2_loss_mask_1: 0.1819  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.6462  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.6062  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5915  m2_loss_mask_4: 0.1684  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.6125  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.6044  m2_loss_mask_6: 0.1653  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.5606  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.5563  m2_loss_mask_8: 0.166  m2_loss_dice_8: 1.223  com_loss_ce: 1.568  com_loss_mask: 0.6936  com_loss_dice: 0.9581    time: 1.4545  last_time: 1.4948  data_time: 0.0412  last_data_time: 0.0361   lr: 0.0001  max_mem: 36365M
[08/19 17:47:40] d2.utils.events INFO:  eta: 0:16:26  iter: 319  total_loss: 42.88  m1_loss_ce: 0.5286  m1_loss_mask: 0.1797  m1_loss_dice: 1.196  m1_loss_ce_0: 0.6298  m1_loss_mask_0: 0.2081  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6468  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.62  m1_loss_mask_2: 0.1801  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5523  m1_loss_mask_3: 0.1807  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5632  m1_loss_mask_4: 0.1802  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5411  m1_loss_mask_5: 0.1797  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.5187  m1_loss_mask_6: 0.1807  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.5381  m1_loss_mask_7: 0.1841  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.507  m1_loss_mask_8: 0.1785  m1_loss_dice_8: 1.185  m2_loss_ce: 0.5342  m2_loss_mask: 0.1747  m2_loss_dice: 1.209  m2_loss_ce_0: 0.612  m2_loss_mask_0: 0.2012  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.6855  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.6141  m2_loss_mask_2: 0.1742  m2_loss_dice_2: 1.26  m2_loss_ce_3: 0.553  m2_loss_mask_3: 0.1732  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.5514  m2_loss_mask_4: 0.1738  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.542  m2_loss_mask_5: 0.1746  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5152  m2_loss_mask_6: 0.1758  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5284  m2_loss_mask_7: 0.1734  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.5356  m2_loss_mask_8: 0.1717  m2_loss_dice_8: 1.202  com_loss_ce: 1.543  com_loss_mask: 0.6936  com_loss_dice: 0.9561    time: 1.4542  last_time: 1.4627  data_time: 0.0413  last_data_time: 0.0458   lr: 0.0001  max_mem: 36365M
[08/19 17:48:09] d2.utils.events INFO:  eta: 0:15:57  iter: 339  total_loss: 43.27  m1_loss_ce: 0.476  m1_loss_mask: 0.1648  m1_loss_dice: 1.232  m1_loss_ce_0: 0.6315  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.6344  m1_loss_mask_1: 0.1806  m1_loss_dice_1: 1.307  m1_loss_ce_2: 0.5835  m1_loss_mask_2: 0.1694  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.5588  m1_loss_mask_3: 0.1679  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.5111  m1_loss_mask_4: 0.1651  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.5082  m1_loss_mask_5: 0.1657  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.4682  m1_loss_mask_6: 0.1656  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4925  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.5155  m1_loss_mask_8: 0.1622  m1_loss_dice_8: 1.228  m2_loss_ce: 0.4774  m2_loss_mask: 0.1649  m2_loss_dice: 1.226  m2_loss_ce_0: 0.5455  m2_loss_mask_0: 0.188  m2_loss_dice_0: 1.41  m2_loss_ce_1: 0.6272  m2_loss_mask_1: 0.1745  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.5964  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.509  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.195  m2_loss_ce_4: 0.4873  m2_loss_mask_4: 0.1652  m2_loss_dice_4: 1.209  m2_loss_ce_5: 0.496  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.4565  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.4373  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.4699  m2_loss_mask_8: 0.1637  m2_loss_dice_8: 1.229  com_loss_ce: 1.551  com_loss_mask: 0.6936  com_loss_dice: 0.9585    time: 1.4534  last_time: 1.4264  data_time: 0.0402  last_data_time: 0.0340   lr: 0.0001  max_mem: 36365M
[08/19 17:48:38] d2.utils.events INFO:  eta: 0:15:27  iter: 359  total_loss: 43.21  m1_loss_ce: 0.5226  m1_loss_mask: 0.1662  m1_loss_dice: 1.184  m1_loss_ce_0: 0.6348  m1_loss_mask_0: 0.1973  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.6509  m1_loss_mask_1: 0.1779  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.6136  m1_loss_mask_2: 0.1727  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5495  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.5342  m1_loss_mask_4: 0.1676  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.5287  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.499  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4973  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.511  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.169  m2_loss_ce: 0.5053  m2_loss_mask: 0.1682  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5951  m2_loss_mask_0: 0.2009  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6059  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.6001  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.5541  m2_loss_mask_3: 0.1737  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.4977  m2_loss_mask_4: 0.1738  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5602  m2_loss_mask_5: 0.1714  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.4953  m2_loss_mask_6: 0.1668  m2_loss_dice_6: 1.217  m2_loss_ce_7: 0.4995  m2_loss_mask_7: 0.1679  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.5135  m2_loss_mask_8: 0.1689  m2_loss_dice_8: 1.234  com_loss_ce: 1.557  com_loss_mask: 0.6936  com_loss_dice: 0.957    time: 1.4516  last_time: 1.3812  data_time: 0.0402  last_data_time: 0.0385   lr: 0.0001  max_mem: 36365M
[08/19 17:49:07] d2.utils.events INFO:  eta: 0:14:57  iter: 379  total_loss: 45.41  m1_loss_ce: 0.5812  m1_loss_mask: 0.1672  m1_loss_dice: 1.229  m1_loss_ce_0: 0.6787  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.7239  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.6934  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.6223  m1_loss_mask_3: 0.1658  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5957  m1_loss_mask_4: 0.1665  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.5823  m1_loss_mask_5: 0.1642  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.5519  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.5744  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.544  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.267  m2_loss_ce: 0.5437  m2_loss_mask: 0.1563  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6393  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.7099  m2_loss_mask_1: 0.1696  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.6385  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.6067  m2_loss_mask_3: 0.1598  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5542  m2_loss_mask_4: 0.1621  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5466  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5263  m2_loss_mask_6: 0.1571  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.5249  m2_loss_mask_7: 0.1578  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5316  m2_loss_mask_8: 0.1576  m2_loss_dice_8: 1.274  com_loss_ce: 1.583  com_loss_mask: 0.6936  com_loss_dice: 0.9608    time: 1.4513  last_time: 1.6765  data_time: 0.0412  last_data_time: 0.0379   lr: 0.0001  max_mem: 36365M
[08/19 17:49:35] d2.utils.events INFO:  eta: 0:14:27  iter: 399  total_loss: 42.2  m1_loss_ce: 0.5121  m1_loss_mask: 0.1697  m1_loss_dice: 1.169  m1_loss_ce_0: 0.6606  m1_loss_mask_0: 0.2047  m1_loss_dice_0: 1.348  m1_loss_ce_1: 0.7024  m1_loss_mask_1: 0.1832  m1_loss_dice_1: 1.288  m1_loss_ce_2: 0.6859  m1_loss_mask_2: 0.1718  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.6151  m1_loss_mask_3: 0.1765  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.5426  m1_loss_mask_4: 0.1715  m1_loss_dice_4: 1.183  m1_loss_ce_5: 0.548  m1_loss_mask_5: 0.175  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.5501  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.569  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.5294  m1_loss_mask_8: 0.1698  m1_loss_dice_8: 1.157  m2_loss_ce: 0.5221  m2_loss_mask: 0.1746  m2_loss_dice: 1.161  m2_loss_ce_0: 0.642  m2_loss_mask_0: 0.2049  m2_loss_dice_0: 1.372  m2_loss_ce_1: 0.677  m2_loss_mask_1: 0.1883  m2_loss_dice_1: 1.296  m2_loss_ce_2: 0.6636  m2_loss_mask_2: 0.1765  m2_loss_dice_2: 1.239  m2_loss_ce_3: 0.6243  m2_loss_mask_3: 0.1738  m2_loss_dice_3: 1.188  m2_loss_ce_4: 0.5829  m2_loss_mask_4: 0.1768  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.5462  m2_loss_mask_5: 0.1753  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.5624  m2_loss_mask_6: 0.1742  m2_loss_dice_6: 1.184  m2_loss_ce_7: 0.5467  m2_loss_mask_7: 0.1731  m2_loss_dice_7: 1.176  m2_loss_ce_8: 0.5233  m2_loss_mask_8: 0.1762  m2_loss_dice_8: 1.158  com_loss_ce: 1.571  com_loss_mask: 0.6936  com_loss_dice: 0.9567    time: 1.4498  last_time: 1.3396  data_time: 0.0408  last_data_time: 0.0405   lr: 0.0001  max_mem: 36365M
[08/19 17:50:04] d2.utils.events INFO:  eta: 0:13:58  iter: 419  total_loss: 43.43  m1_loss_ce: 0.5266  m1_loss_mask: 0.1742  m1_loss_dice: 1.176  m1_loss_ce_0: 0.617  m1_loss_mask_0: 0.2006  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.6869  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.314  m1_loss_ce_2: 0.6381  m1_loss_mask_2: 0.1802  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.5541  m1_loss_mask_3: 0.1801  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.5225  m1_loss_mask_4: 0.1768  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.5373  m1_loss_mask_5: 0.1772  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5344  m1_loss_mask_6: 0.1767  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.5148  m1_loss_mask_7: 0.1734  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.5133  m1_loss_mask_8: 0.1738  m1_loss_dice_8: 1.195  m2_loss_ce: 0.5267  m2_loss_mask: 0.1815  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6205  m2_loss_mask_0: 0.2084  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6944  m2_loss_mask_1: 0.1908  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.6245  m2_loss_mask_2: 0.1867  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.568  m2_loss_mask_3: 0.1842  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.5539  m2_loss_mask_4: 0.1816  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.5516  m2_loss_mask_5: 0.1826  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.5412  m2_loss_mask_6: 0.1819  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5315  m2_loss_mask_7: 0.1822  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.5238  m2_loss_mask_8: 0.1838  m2_loss_dice_8: 1.224  com_loss_ce: 1.563  com_loss_mask: 0.6936  com_loss_dice: 0.9592    time: 1.4495  last_time: 1.4625  data_time: 0.0412  last_data_time: 0.0359   lr: 0.0001  max_mem: 36365M
[08/19 17:50:33] d2.utils.events INFO:  eta: 0:13:29  iter: 439  total_loss: 42.54  m1_loss_ce: 0.4814  m1_loss_mask: 0.16  m1_loss_dice: 1.174  m1_loss_ce_0: 0.579  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.6479  m1_loss_mask_1: 0.1715  m1_loss_dice_1: 1.333  m1_loss_ce_2: 0.5889  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.284  m1_loss_ce_3: 0.5064  m1_loss_mask_3: 0.1621  m1_loss_dice_3: 1.227  m1_loss_ce_4: 0.5157  m1_loss_mask_4: 0.1625  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.4859  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.4886  m1_loss_mask_6: 0.1596  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.4702  m1_loss_mask_7: 0.16  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.4906  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.196  m2_loss_ce: 0.4896  m2_loss_mask: 0.1573  m2_loss_dice: 1.212  m2_loss_ce_0: 0.5981  m2_loss_mask_0: 0.1867  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6029  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5819  m2_loss_mask_2: 0.1613  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5463  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5221  m2_loss_mask_4: 0.1609  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5083  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.5062  m2_loss_mask_6: 0.1593  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5  m2_loss_mask_7: 0.1584  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.5019  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.238  com_loss_ce: 1.561  com_loss_mask: 0.6936  com_loss_dice: 0.9579    time: 1.4488  last_time: 1.4331  data_time: 0.0394  last_data_time: 0.0284   lr: 0.0001  max_mem: 36365M
[08/19 17:51:01] d2.utils.events INFO:  eta: 0:12:59  iter: 459  total_loss: 44.26  m1_loss_ce: 0.5783  m1_loss_mask: 0.1607  m1_loss_dice: 1.201  m1_loss_ce_0: 0.6416  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.7075  m1_loss_mask_1: 0.1767  m1_loss_dice_1: 1.326  m1_loss_ce_2: 0.6735  m1_loss_mask_2: 0.1671  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.6003  m1_loss_mask_3: 0.1666  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5896  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.246  m1_loss_ce_5: 0.5711  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.5781  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.5719  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.5733  m1_loss_mask_8: 0.1607  m1_loss_dice_8: 1.181  m2_loss_ce: 0.5618  m2_loss_mask: 0.1736  m2_loss_dice: 1.25  m2_loss_ce_0: 0.6539  m2_loss_mask_0: 0.2085  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.7184  m2_loss_mask_1: 0.1819  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.6375  m2_loss_mask_2: 0.1738  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.6146  m2_loss_mask_3: 0.1734  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5782  m2_loss_mask_4: 0.1757  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.6042  m2_loss_mask_5: 0.1762  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5971  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.5508  m2_loss_mask_7: 0.1735  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5339  m2_loss_mask_8: 0.1744  m2_loss_dice_8: 1.218  com_loss_ce: 1.554  com_loss_mask: 0.6936  com_loss_dice: 0.9583    time: 1.4466  last_time: 1.4396  data_time: 0.0372  last_data_time: 0.0358   lr: 0.0001  max_mem: 36365M
[08/19 17:51:30] d2.utils.events INFO:  eta: 0:12:30  iter: 479  total_loss: 42.84  m1_loss_ce: 0.5127  m1_loss_mask: 0.1783  m1_loss_dice: 1.157  m1_loss_ce_0: 0.6247  m1_loss_mask_0: 0.2044  m1_loss_dice_0: 1.361  m1_loss_ce_1: 0.6751  m1_loss_mask_1: 0.1915  m1_loss_dice_1: 1.29  m1_loss_ce_2: 0.6272  m1_loss_mask_2: 0.1815  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.5549  m1_loss_mask_3: 0.1831  m1_loss_dice_3: 1.193  m1_loss_ce_4: 0.5091  m1_loss_mask_4: 0.179  m1_loss_dice_4: 1.165  m1_loss_ce_5: 0.5431  m1_loss_mask_5: 0.1776  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.5165  m1_loss_mask_6: 0.1783  m1_loss_dice_6: 1.153  m1_loss_ce_7: 0.5179  m1_loss_mask_7: 0.1788  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.4943  m1_loss_mask_8: 0.179  m1_loss_dice_8: 1.146  m2_loss_ce: 0.5103  m2_loss_mask: 0.1827  m2_loss_dice: 1.179  m2_loss_ce_0: 0.5912  m2_loss_mask_0: 0.2028  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6809  m2_loss_mask_1: 0.1882  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5928  m2_loss_mask_2: 0.186  m2_loss_dice_2: 1.261  m2_loss_ce_3: 0.5575  m2_loss_mask_3: 0.1859  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.5414  m2_loss_mask_4: 0.1836  m2_loss_dice_4: 1.197  m2_loss_ce_5: 0.5438  m2_loss_mask_5: 0.1837  m2_loss_dice_5: 1.199  m2_loss_ce_6: 0.5051  m2_loss_mask_6: 0.1825  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.5018  m2_loss_mask_7: 0.1812  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.5  m2_loss_mask_8: 0.1815  m2_loss_dice_8: 1.181  com_loss_ce: 1.556  com_loss_mask: 0.6936  com_loss_dice: 0.9584    time: 1.4459  last_time: 1.4384  data_time: 0.0383  last_data_time: 0.0449   lr: 0.0001  max_mem: 36365M
[08/19 17:51:59] d2.utils.events INFO:  eta: 0:12:01  iter: 499  total_loss: 44.53  m1_loss_ce: 0.5554  m1_loss_mask: 0.1595  m1_loss_dice: 1.192  m1_loss_ce_0: 0.6532  m1_loss_mask_0: 0.187  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.6995  m1_loss_mask_1: 0.1721  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.6602  m1_loss_mask_2: 0.162  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.5796  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.5809  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.5547  m1_loss_mask_5: 0.1581  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.5525  m1_loss_mask_6: 0.1582  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5478  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.5482  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.194  m2_loss_ce: 0.5389  m2_loss_mask: 0.1633  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6176  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6698  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.6521  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5917  m2_loss_mask_3: 0.1676  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5564  m2_loss_mask_4: 0.1691  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5544  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.549  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5535  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.5341  m2_loss_mask_8: 0.1656  m2_loss_dice_8: 1.221  com_loss_ce: 1.556  com_loss_mask: 0.6936  com_loss_dice: 0.9577    time: 1.4451  last_time: 1.4521  data_time: 0.0399  last_data_time: 0.0407   lr: 0.0001  max_mem: 36365M
[08/19 17:52:27] d2.utils.events INFO:  eta: 0:11:32  iter: 519  total_loss: 44.94  m1_loss_ce: 0.4949  m1_loss_mask: 0.1703  m1_loss_dice: 1.219  m1_loss_ce_0: 0.6314  m1_loss_mask_0: 0.2088  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6691  m1_loss_mask_1: 0.1885  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.5881  m1_loss_mask_2: 0.179  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.5539  m1_loss_mask_3: 0.1762  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.5579  m1_loss_mask_4: 0.1733  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.5219  m1_loss_mask_5: 0.1734  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.5429  m1_loss_mask_6: 0.1734  m1_loss_dice_6: 1.279  m1_loss_ce_7: 0.5143  m1_loss_mask_7: 0.1712  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.5001  m1_loss_mask_8: 0.1711  m1_loss_dice_8: 1.268  m2_loss_ce: 0.5264  m2_loss_mask: 0.1694  m2_loss_dice: 1.304  m2_loss_ce_0: 0.6029  m2_loss_mask_0: 0.214  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6374  m2_loss_mask_1: 0.1867  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.6286  m2_loss_mask_2: 0.1747  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.5591  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5244  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.308  m2_loss_ce_5: 0.5179  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.4895  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.286  m2_loss_ce_7: 0.5249  m2_loss_mask_7: 0.1725  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5007  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.256  com_loss_ce: 1.553  com_loss_mask: 0.6936  com_loss_dice: 0.9575    time: 1.4444  last_time: 1.4709  data_time: 0.0391  last_data_time: 0.0422   lr: 0.0001  max_mem: 36365M
[08/19 17:52:56] d2.utils.events INFO:  eta: 0:11:03  iter: 539  total_loss: 44.93  m1_loss_ce: 0.5161  m1_loss_mask: 0.1521  m1_loss_dice: 1.259  m1_loss_ce_0: 0.6492  m1_loss_mask_0: 0.1789  m1_loss_dice_0: 1.456  m1_loss_ce_1: 0.682  m1_loss_mask_1: 0.1656  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.6362  m1_loss_mask_2: 0.1554  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5937  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.294  m1_loss_ce_4: 0.5788  m1_loss_mask_4: 0.1566  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5711  m1_loss_mask_5: 0.1545  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.5359  m1_loss_mask_6: 0.1591  m1_loss_dice_6: 1.305  m1_loss_ce_7: 0.514  m1_loss_mask_7: 0.1521  m1_loss_dice_7: 1.278  m1_loss_ce_8: 0.5021  m1_loss_mask_8: 0.1515  m1_loss_dice_8: 1.276  m2_loss_ce: 0.573  m2_loss_mask: 0.1504  m2_loss_dice: 1.294  m2_loss_ce_0: 0.6739  m2_loss_mask_0: 0.188  m2_loss_dice_0: 1.54  m2_loss_ce_1: 0.7342  m2_loss_mask_1: 0.1713  m2_loss_dice_1: 1.428  m2_loss_ce_2: 0.6946  m2_loss_mask_2: 0.1592  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.6609  m2_loss_mask_3: 0.1557  m2_loss_dice_3: 1.307  m2_loss_ce_4: 0.6181  m2_loss_mask_4: 0.1539  m2_loss_dice_4: 1.302  m2_loss_ce_5: 0.5775  m2_loss_mask_5: 0.1542  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.5859  m2_loss_mask_6: 0.1537  m2_loss_dice_6: 1.27  m2_loss_ce_7: 0.5912  m2_loss_mask_7: 0.1525  m2_loss_dice_7: 1.268  m2_loss_ce_8: 0.5677  m2_loss_mask_8: 0.1519  m2_loss_dice_8: 1.265  com_loss_ce: 1.569  com_loss_mask: 0.6936  com_loss_dice: 0.9616    time: 1.4438  last_time: 1.4029  data_time: 0.0402  last_data_time: 0.0350   lr: 0.0001  max_mem: 36365M
[08/19 17:53:25] d2.utils.events INFO:  eta: 0:10:33  iter: 559  total_loss: 42  m1_loss_ce: 0.5353  m1_loss_mask: 0.1591  m1_loss_dice: 1.211  m1_loss_ce_0: 0.6206  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.346  m1_loss_ce_1: 0.6474  m1_loss_mask_1: 0.1702  m1_loss_dice_1: 1.299  m1_loss_ce_2: 0.6086  m1_loss_mask_2: 0.1647  m1_loss_dice_2: 1.217  m1_loss_ce_3: 0.5265  m1_loss_mask_3: 0.1662  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.5128  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.5334  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.5031  m1_loss_mask_6: 0.163  m1_loss_dice_6: 1.19  m1_loss_ce_7: 0.4941  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5172  m1_loss_mask_8: 0.1592  m1_loss_dice_8: 1.203  m2_loss_ce: 0.501  m2_loss_mask: 0.1618  m2_loss_dice: 1.205  m2_loss_ce_0: 0.5809  m2_loss_mask_0: 0.191  m2_loss_dice_0: 1.423  m2_loss_ce_1: 0.6636  m2_loss_mask_1: 0.1761  m2_loss_dice_1: 1.334  m2_loss_ce_2: 0.5944  m2_loss_mask_2: 0.163  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.536  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5364  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.513  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.4869  m2_loss_mask_6: 0.1595  m2_loss_dice_6: 1.197  m2_loss_ce_7: 0.4936  m2_loss_mask_7: 0.1613  m2_loss_dice_7: 1.213  m2_loss_ce_8: 0.4834  m2_loss_mask_8: 0.1593  m2_loss_dice_8: 1.21  com_loss_ce: 1.557  com_loss_mask: 0.6936  com_loss_dice: 0.9579    time: 1.4431  last_time: 1.4118  data_time: 0.0405  last_data_time: 0.0409   lr: 0.0001  max_mem: 36365M
[08/19 17:53:54] d2.utils.events INFO:  eta: 0:10:04  iter: 579  total_loss: 42.65  m1_loss_ce: 0.5085  m1_loss_mask: 0.163  m1_loss_dice: 1.19  m1_loss_ce_0: 0.6415  m1_loss_mask_0: 0.1929  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.6609  m1_loss_mask_1: 0.1735  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.6139  m1_loss_mask_2: 0.1649  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5553  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.5273  m1_loss_mask_4: 0.159  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.5364  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.5112  m1_loss_mask_6: 0.1642  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.4899  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.4985  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.19  m2_loss_ce: 0.5031  m2_loss_mask: 0.1607  m2_loss_dice: 1.206  m2_loss_ce_0: 0.6118  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6708  m2_loss_mask_1: 0.1754  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6085  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5564  m2_loss_mask_3: 0.1629  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5339  m2_loss_mask_4: 0.1639  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5542  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.5039  m2_loss_mask_6: 0.1598  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4961  m2_loss_mask_7: 0.1605  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.4944  m2_loss_mask_8: 0.1592  m2_loss_dice_8: 1.226  com_loss_ce: 1.551  com_loss_mask: 0.6936  com_loss_dice: 0.9594    time: 1.4432  last_time: 1.4696  data_time: 0.0410  last_data_time: 0.0390   lr: 0.0001  max_mem: 36365M
[08/19 17:54:22] d2.utils.events INFO:  eta: 0:09:35  iter: 599  total_loss: 43.11  m1_loss_ce: 0.5399  m1_loss_mask: 0.1709  m1_loss_dice: 1.168  m1_loss_ce_0: 0.6945  m1_loss_mask_0: 0.1922  m1_loss_dice_0: 1.342  m1_loss_ce_1: 0.7107  m1_loss_mask_1: 0.1758  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.6783  m1_loss_mask_2: 0.1743  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.5928  m1_loss_mask_3: 0.1733  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.5554  m1_loss_mask_4: 0.1714  m1_loss_dice_4: 1.157  m1_loss_ce_5: 0.5833  m1_loss_mask_5: 0.1721  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.5741  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.538  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.5399  m1_loss_mask_8: 0.1698  m1_loss_dice_8: 1.161  m2_loss_ce: 0.5834  m2_loss_mask: 0.1598  m2_loss_dice: 1.207  m2_loss_ce_0: 0.7047  m2_loss_mask_0: 0.191  m2_loss_dice_0: 1.402  m2_loss_ce_1: 0.7164  m2_loss_mask_1: 0.1739  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.6745  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.6259  m2_loss_mask_3: 0.1653  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.6025  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.6112  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.5535  m2_loss_mask_6: 0.1627  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.5376  m2_loss_mask_7: 0.161  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.5474  m2_loss_mask_8: 0.161  m2_loss_dice_8: 1.189  com_loss_ce: 1.561  com_loss_mask: 0.6936  com_loss_dice: 0.9587    time: 1.4427  last_time: 1.4884  data_time: 0.0383  last_data_time: 0.0397   lr: 0.0001  max_mem: 36365M
[08/19 17:54:51] d2.utils.events INFO:  eta: 0:09:06  iter: 619  total_loss: 42.41  m1_loss_ce: 0.5088  m1_loss_mask: 0.169  m1_loss_dice: 1.245  m1_loss_ce_0: 0.6025  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6639  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.6153  m1_loss_mask_2: 0.1769  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.5516  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.5056  m1_loss_mask_4: 0.1714  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.5205  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.4972  m1_loss_mask_6: 0.17  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.475  m1_loss_mask_7: 0.1696  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.4775  m1_loss_mask_8: 0.172  m1_loss_dice_8: 1.222  m2_loss_ce: 0.508  m2_loss_mask: 0.173  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6226  m2_loss_mask_0: 0.2011  m2_loss_dice_0: 1.484  m2_loss_ce_1: 0.6154  m2_loss_mask_1: 0.1791  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.594  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5587  m2_loss_mask_3: 0.1755  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.529  m2_loss_mask_4: 0.1783  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5135  m2_loss_mask_5: 0.1761  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4709  m2_loss_mask_6: 0.1752  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.4888  m2_loss_mask_7: 0.1744  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.4966  m2_loss_mask_8: 0.1745  m2_loss_dice_8: 1.228  com_loss_ce: 1.547  com_loss_mask: 0.6936  com_loss_dice: 0.9596    time: 1.4427  last_time: 1.4095  data_time: 0.0405  last_data_time: 0.0402   lr: 0.0001  max_mem: 36365M
[08/19 17:55:20] d2.utils.events INFO:  eta: 0:08:38  iter: 639  total_loss: 44.16  m1_loss_ce: 0.5145  m1_loss_mask: 0.1469  m1_loss_dice: 1.261  m1_loss_ce_0: 0.6201  m1_loss_mask_0: 0.1733  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.6877  m1_loss_mask_1: 0.1597  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.6381  m1_loss_mask_2: 0.1557  m1_loss_dice_2: 1.339  m1_loss_ce_3: 0.5924  m1_loss_mask_3: 0.1498  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5746  m1_loss_mask_4: 0.1497  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.549  m1_loss_mask_5: 0.1482  m1_loss_dice_5: 1.301  m1_loss_ce_6: 0.5266  m1_loss_mask_6: 0.1472  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4871  m1_loss_mask_7: 0.1471  m1_loss_dice_7: 1.301  m1_loss_ce_8: 0.5088  m1_loss_mask_8: 0.1465  m1_loss_dice_8: 1.255  m2_loss_ce: 0.5244  m2_loss_mask: 0.1544  m2_loss_dice: 1.271  m2_loss_ce_0: 0.6183  m2_loss_mask_0: 0.1809  m2_loss_dice_0: 1.536  m2_loss_ce_1: 0.6978  m2_loss_mask_1: 0.1627  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.6554  m2_loss_mask_2: 0.1583  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.6049  m2_loss_mask_3: 0.1555  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5627  m2_loss_mask_4: 0.1562  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5598  m2_loss_mask_5: 0.1569  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.544  m2_loss_mask_6: 0.1549  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.5306  m2_loss_mask_7: 0.1532  m2_loss_dice_7: 1.291  m2_loss_ce_8: 0.5224  m2_loss_mask_8: 0.1535  m2_loss_dice_8: 1.279  com_loss_ce: 1.566  com_loss_mask: 0.6936  com_loss_dice: 0.9608    time: 1.4424  last_time: 1.4527  data_time: 0.0418  last_data_time: 0.0416   lr: 0.0001  max_mem: 36365M
[08/19 17:55:49] d2.utils.events INFO:  eta: 0:08:09  iter: 659  total_loss: 43.95  m1_loss_ce: 0.4757  m1_loss_mask: 0.1697  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5885  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.375  m1_loss_ce_1: 0.6496  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5829  m1_loss_mask_2: 0.179  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5644  m1_loss_mask_3: 0.1769  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.5421  m1_loss_mask_4: 0.1766  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.52  m1_loss_mask_5: 0.175  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.5027  m1_loss_mask_6: 0.1749  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.509  m1_loss_mask_7: 0.1741  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.4764  m1_loss_mask_8: 0.1724  m1_loss_dice_8: 1.254  m2_loss_ce: 0.555  m2_loss_mask: 0.1716  m2_loss_dice: 1.234  m2_loss_ce_0: 0.6431  m2_loss_mask_0: 0.2012  m2_loss_dice_0: 1.476  m2_loss_ce_1: 0.6703  m2_loss_mask_1: 0.1798  m2_loss_dice_1: 1.357  m2_loss_ce_2: 0.6302  m2_loss_mask_2: 0.1777  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.589  m2_loss_mask_3: 0.1765  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.5624  m2_loss_mask_4: 0.1762  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5663  m2_loss_mask_5: 0.1756  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.5568  m2_loss_mask_6: 0.1741  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5405  m2_loss_mask_7: 0.1727  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.5267  m2_loss_mask_8: 0.1722  m2_loss_dice_8: 1.238  com_loss_ce: 1.558  com_loss_mask: 0.6936  com_loss_dice: 0.9568    time: 1.4419  last_time: 1.4960  data_time: 0.0386  last_data_time: 0.0319   lr: 0.0001  max_mem: 36365M
[08/19 17:56:18] d2.utils.events INFO:  eta: 0:07:40  iter: 679  total_loss: 43.15  m1_loss_ce: 0.4979  m1_loss_mask: 0.1694  m1_loss_dice: 1.213  m1_loss_ce_0: 0.6088  m1_loss_mask_0: 0.1978  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.6424  m1_loss_mask_1: 0.1809  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.6008  m1_loss_mask_2: 0.178  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.5227  m1_loss_mask_3: 0.1714  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.4904  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5166  m1_loss_mask_5: 0.1741  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4756  m1_loss_mask_6: 0.1691  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.4684  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.4451  m1_loss_mask_8: 0.1716  m1_loss_dice_8: 1.222  m2_loss_ce: 0.5149  m2_loss_mask: 0.1768  m2_loss_dice: 1.218  m2_loss_ce_0: 0.595  m2_loss_mask_0: 0.1986  m2_loss_dice_0: 1.484  m2_loss_ce_1: 0.6567  m2_loss_mask_1: 0.187  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.6154  m2_loss_mask_2: 0.1809  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5921  m2_loss_mask_3: 0.1801  m2_loss_dice_3: 1.223  m2_loss_ce_4: 0.5354  m2_loss_mask_4: 0.1787  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5319  m2_loss_mask_5: 0.1762  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.5394  m2_loss_mask_6: 0.1762  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.5154  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.5225  m2_loss_mask_8: 0.1753  m2_loss_dice_8: 1.21  com_loss_ce: 1.552  com_loss_mask: 0.6936  com_loss_dice: 0.9609    time: 1.4424  last_time: 1.4685  data_time: 0.0427  last_data_time: 0.0465   lr: 0.0001  max_mem: 36365M
[08/19 17:56:47] d2.utils.events INFO:  eta: 0:07:11  iter: 699  total_loss: 45.39  m1_loss_ce: 0.5232  m1_loss_mask: 0.1568  m1_loss_dice: 1.25  m1_loss_ce_0: 0.6331  m1_loss_mask_0: 0.1804  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.7348  m1_loss_mask_1: 0.1661  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.6404  m1_loss_mask_2: 0.1611  m1_loss_dice_2: 1.318  m1_loss_ce_3: 0.5485  m1_loss_mask_3: 0.1626  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5678  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5309  m1_loss_mask_5: 0.1568  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.5169  m1_loss_mask_6: 0.1591  m1_loss_dice_6: 1.268  m1_loss_ce_7: 0.5095  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.5288  m1_loss_mask_8: 0.1555  m1_loss_dice_8: 1.254  m2_loss_ce: 0.5675  m2_loss_mask: 0.1527  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6315  m2_loss_mask_0: 0.1881  m2_loss_dice_0: 1.503  m2_loss_ce_1: 0.6806  m2_loss_mask_1: 0.1678  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.6564  m2_loss_mask_2: 0.1596  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5998  m2_loss_mask_3: 0.1568  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.5766  m2_loss_mask_4: 0.1603  m2_loss_dice_4: 1.278  m2_loss_ce_5: 0.5728  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.5655  m2_loss_mask_6: 0.1566  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5465  m2_loss_mask_7: 0.1555  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.5535  m2_loss_mask_8: 0.154  m2_loss_dice_8: 1.229  com_loss_ce: 1.578  com_loss_mask: 0.6936  com_loss_dice: 0.9594    time: 1.4421  last_time: 1.4824  data_time: 0.0391  last_data_time: 0.0364   lr: 0.0001  max_mem: 36365M
[08/19 17:57:15] d2.utils.events INFO:  eta: 0:06:42  iter: 719  total_loss: 42.63  m1_loss_ce: 0.525  m1_loss_mask: 0.1594  m1_loss_dice: 1.21  m1_loss_ce_0: 0.6727  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.6659  m1_loss_mask_1: 0.1698  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.6753  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.5372  m1_loss_mask_3: 0.1637  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.5358  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.5529  m1_loss_mask_5: 0.1637  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.4861  m1_loss_mask_6: 0.1618  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.5049  m1_loss_mask_7: 0.1615  m1_loss_dice_7: 1.258  m1_loss_ce_8: 0.5021  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.225  m2_loss_ce: 0.55  m2_loss_mask: 0.1629  m2_loss_dice: 1.244  m2_loss_ce_0: 0.6273  m2_loss_mask_0: 0.19  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6973  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6491  m2_loss_mask_2: 0.1627  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.5869  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5804  m2_loss_mask_4: 0.1649  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.5574  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.56  m2_loss_mask_6: 0.1633  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5576  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.5226  m2_loss_mask_8: 0.1604  m2_loss_dice_8: 1.232  com_loss_ce: 1.554  com_loss_mask: 0.6936  com_loss_dice: 0.9593    time: 1.4413  last_time: 1.3973  data_time: 0.0395  last_data_time: 0.0375   lr: 0.0001  max_mem: 36365M
[08/19 17:57:44] d2.utils.events INFO:  eta: 0:06:14  iter: 739  total_loss: 44.81  m1_loss_ce: 0.4989  m1_loss_mask: 0.1627  m1_loss_dice: 1.305  m1_loss_ce_0: 0.5947  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.461  m1_loss_ce_1: 0.6476  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.6104  m1_loss_mask_2: 0.168  m1_loss_dice_2: 1.308  m1_loss_ce_3: 0.5501  m1_loss_mask_3: 0.1668  m1_loss_dice_3: 1.322  m1_loss_ce_4: 0.5022  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.5075  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.286  m1_loss_ce_6: 0.468  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.28  m1_loss_ce_7: 0.4995  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.301  m1_loss_ce_8: 0.4747  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.275  m2_loss_ce: 0.5149  m2_loss_mask: 0.1701  m2_loss_dice: 1.282  m2_loss_ce_0: 0.6277  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.536  m2_loss_ce_1: 0.6648  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.434  m2_loss_ce_2: 0.626  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5779  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.556  m2_loss_mask_4: 0.1726  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5432  m2_loss_mask_5: 0.1724  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.5409  m2_loss_mask_6: 0.1703  m2_loss_dice_6: 1.298  m2_loss_ce_7: 0.5298  m2_loss_mask_7: 0.1693  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.5334  m2_loss_mask_8: 0.1699  m2_loss_dice_8: 1.286  com_loss_ce: 1.566  com_loss_mask: 0.6936  com_loss_dice: 0.9606    time: 1.4411  last_time: 1.3858  data_time: 0.0386  last_data_time: 0.0335   lr: 0.0001  max_mem: 36365M
[08/19 17:58:13] d2.utils.events INFO:  eta: 0:05:45  iter: 759  total_loss: 43.42  m1_loss_ce: 0.5253  m1_loss_mask: 0.1593  m1_loss_dice: 1.231  m1_loss_ce_0: 0.6101  m1_loss_mask_0: 0.1842  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.667  m1_loss_mask_1: 0.1779  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.6134  m1_loss_mask_2: 0.1715  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5702  m1_loss_mask_3: 0.165  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.5228  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.5616  m1_loss_mask_5: 0.158  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.52  m1_loss_mask_6: 0.1591  m1_loss_dice_6: 1.243  m1_loss_ce_7: 0.4959  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.5137  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.222  m2_loss_ce: 0.5574  m2_loss_mask: 0.1703  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6143  m2_loss_mask_0: 0.2011  m2_loss_dice_0: 1.526  m2_loss_ce_1: 0.6831  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.6573  m2_loss_mask_2: 0.1717  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.6068  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5884  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.5878  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.5516  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.5434  m2_loss_mask_7: 0.1708  m2_loss_dice_7: 1.297  m2_loss_ce_8: 0.5685  m2_loss_mask_8: 0.169  m2_loss_dice_8: 1.226  com_loss_ce: 1.564  com_loss_mask: 0.6936  com_loss_dice: 0.9591    time: 1.4412  last_time: 1.4249  data_time: 0.0389  last_data_time: 0.0350   lr: 0.0001  max_mem: 36365M
[08/19 17:58:42] d2.utils.events INFO:  eta: 0:05:16  iter: 779  total_loss: 42.51  m1_loss_ce: 0.4693  m1_loss_mask: 0.1806  m1_loss_dice: 1.18  m1_loss_ce_0: 0.5816  m1_loss_mask_0: 0.2074  m1_loss_dice_0: 1.345  m1_loss_ce_1: 0.6041  m1_loss_mask_1: 0.1886  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5681  m1_loss_mask_2: 0.1818  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.512  m1_loss_mask_3: 0.1785  m1_loss_dice_3: 1.163  m1_loss_ce_4: 0.4994  m1_loss_mask_4: 0.1866  m1_loss_dice_4: 1.165  m1_loss_ce_5: 0.4814  m1_loss_mask_5: 0.1823  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.4714  m1_loss_mask_6: 0.1809  m1_loss_dice_6: 1.135  m1_loss_ce_7: 0.4862  m1_loss_mask_7: 0.1808  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4927  m1_loss_mask_8: 0.1803  m1_loss_dice_8: 1.14  m2_loss_ce: 0.5116  m2_loss_mask: 0.1826  m2_loss_dice: 1.179  m2_loss_ce_0: 0.5919  m2_loss_mask_0: 0.2147  m2_loss_dice_0: 1.387  m2_loss_ce_1: 0.6512  m2_loss_mask_1: 0.1908  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6069  m2_loss_mask_2: 0.1861  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5631  m2_loss_mask_3: 0.1856  m2_loss_dice_3: 1.196  m2_loss_ce_4: 0.5294  m2_loss_mask_4: 0.1845  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.5438  m2_loss_mask_5: 0.1851  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.5271  m2_loss_mask_6: 0.1819  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.4956  m2_loss_mask_7: 0.1822  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.5029  m2_loss_mask_8: 0.185  m2_loss_dice_8: 1.18  com_loss_ce: 1.537  com_loss_mask: 0.6936  com_loss_dice: 0.9527    time: 1.4408  last_time: 1.4305  data_time: 0.0377  last_data_time: 0.0311   lr: 0.0001  max_mem: 36365M
[08/19 17:59:11] d2.utils.events INFO:  eta: 0:04:47  iter: 799  total_loss: 43.78  m1_loss_ce: 0.4523  m1_loss_mask: 0.1617  m1_loss_dice: 1.161  m1_loss_ce_0: 0.6016  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.633  m1_loss_mask_1: 0.1717  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.6082  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5615  m1_loss_mask_3: 0.1667  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.5292  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.5001  m1_loss_mask_5: 0.1623  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.5021  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.489  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.4773  m1_loss_mask_8: 0.1606  m1_loss_dice_8: 1.199  m2_loss_ce: 0.5129  m2_loss_mask: 0.166  m2_loss_dice: 1.195  m2_loss_ce_0: 0.6178  m2_loss_mask_0: 0.1946  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.6611  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.34  m2_loss_ce_2: 0.6178  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.5649  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.244  m2_loss_ce_4: 0.544  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.5084  m2_loss_mask_5: 0.1673  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5277  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.5091  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.4864  m2_loss_mask_8: 0.1656  m2_loss_dice_8: 1.215  com_loss_ce: 1.559  com_loss_mask: 0.6936  com_loss_dice: 0.9588    time: 1.4406  last_time: 1.5091  data_time: 0.0385  last_data_time: 0.0445   lr: 0.0001  max_mem: 36365M
[08/19 17:59:40] d2.utils.events INFO:  eta: 0:04:18  iter: 819  total_loss: 41.35  m1_loss_ce: 0.4706  m1_loss_mask: 0.1565  m1_loss_dice: 1.113  m1_loss_ce_0: 0.6249  m1_loss_mask_0: 0.1672  m1_loss_dice_0: 1.341  m1_loss_ce_1: 0.6515  m1_loss_mask_1: 0.1641  m1_loss_dice_1: 1.251  m1_loss_ce_2: 0.594  m1_loss_mask_2: 0.1611  m1_loss_dice_2: 1.226  m1_loss_ce_3: 0.5419  m1_loss_mask_3: 0.1623  m1_loss_dice_3: 1.138  m1_loss_ce_4: 0.4844  m1_loss_mask_4: 0.1592  m1_loss_dice_4: 1.168  m1_loss_ce_5: 0.4803  m1_loss_mask_5: 0.1529  m1_loss_dice_5: 1.151  m1_loss_ce_6: 0.4903  m1_loss_mask_6: 0.1579  m1_loss_dice_6: 1.112  m1_loss_ce_7: 0.4531  m1_loss_mask_7: 0.1547  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.4744  m1_loss_mask_8: 0.1551  m1_loss_dice_8: 1.117  m2_loss_ce: 0.5249  m2_loss_mask: 0.1562  m2_loss_dice: 1.131  m2_loss_ce_0: 0.6455  m2_loss_mask_0: 0.1801  m2_loss_dice_0: 1.399  m2_loss_ce_1: 0.6662  m2_loss_mask_1: 0.1648  m2_loss_dice_1: 1.326  m2_loss_ce_2: 0.6002  m2_loss_mask_2: 0.1602  m2_loss_dice_2: 1.219  m2_loss_ce_3: 0.5892  m2_loss_mask_3: 0.1605  m2_loss_dice_3: 1.199  m2_loss_ce_4: 0.5373  m2_loss_mask_4: 0.1578  m2_loss_dice_4: 1.152  m2_loss_ce_5: 0.5267  m2_loss_mask_5: 0.1578  m2_loss_dice_5: 1.175  m2_loss_ce_6: 0.4953  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.167  m2_loss_ce_7: 0.509  m2_loss_mask_7: 0.1576  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.5124  m2_loss_mask_8: 0.1568  m2_loss_dice_8: 1.167  com_loss_ce: 1.563  com_loss_mask: 0.6936  com_loss_dice: 0.9589    time: 1.4405  last_time: 1.4718  data_time: 0.0378  last_data_time: 0.0353   lr: 0.0001  max_mem: 36365M
[08/19 18:00:09] d2.utils.events INFO:  eta: 0:03:50  iter: 839  total_loss: 45.99  m1_loss_ce: 0.5064  m1_loss_mask: 0.1478  m1_loss_dice: 1.281  m1_loss_ce_0: 0.6245  m1_loss_mask_0: 0.1709  m1_loss_dice_0: 1.487  m1_loss_ce_1: 0.696  m1_loss_mask_1: 0.1661  m1_loss_dice_1: 1.478  m1_loss_ce_2: 0.6543  m1_loss_mask_2: 0.1502  m1_loss_dice_2: 1.364  m1_loss_ce_3: 0.5626  m1_loss_mask_3: 0.1534  m1_loss_dice_3: 1.335  m1_loss_ce_4: 0.5247  m1_loss_mask_4: 0.1526  m1_loss_dice_4: 1.314  m1_loss_ce_5: 0.5173  m1_loss_mask_5: 0.1503  m1_loss_dice_5: 1.288  m1_loss_ce_6: 0.5009  m1_loss_mask_6: 0.1512  m1_loss_dice_6: 1.304  m1_loss_ce_7: 0.4618  m1_loss_mask_7: 0.1525  m1_loss_dice_7: 1.311  m1_loss_ce_8: 0.5055  m1_loss_mask_8: 0.1506  m1_loss_dice_8: 1.302  m2_loss_ce: 0.5195  m2_loss_mask: 0.1518  m2_loss_dice: 1.346  m2_loss_ce_0: 0.6254  m2_loss_mask_0: 0.1738  m2_loss_dice_0: 1.622  m2_loss_ce_1: 0.6704  m2_loss_mask_1: 0.1647  m2_loss_dice_1: 1.496  m2_loss_ce_2: 0.6098  m2_loss_mask_2: 0.1582  m2_loss_dice_2: 1.412  m2_loss_ce_3: 0.5968  m2_loss_mask_3: 0.1553  m2_loss_dice_3: 1.366  m2_loss_ce_4: 0.5628  m2_loss_mask_4: 0.1536  m2_loss_dice_4: 1.357  m2_loss_ce_5: 0.5285  m2_loss_mask_5: 0.1525  m2_loss_dice_5: 1.347  m2_loss_ce_6: 0.5135  m2_loss_mask_6: 0.151  m2_loss_dice_6: 1.333  m2_loss_ce_7: 0.5418  m2_loss_mask_7: 0.1489  m2_loss_dice_7: 1.336  m2_loss_ce_8: 0.5031  m2_loss_mask_8: 0.1517  m2_loss_dice_8: 1.316  com_loss_ce: 1.569  com_loss_mask: 0.6937  com_loss_dice: 0.9622    time: 1.4407  last_time: 1.4541  data_time: 0.0422  last_data_time: 0.0358   lr: 0.0001  max_mem: 36365M
[08/19 18:00:38] d2.utils.events INFO:  eta: 0:03:21  iter: 859  total_loss: 45.18  m1_loss_ce: 0.5443  m1_loss_mask: 0.1586  m1_loss_dice: 1.193  m1_loss_ce_0: 0.6455  m1_loss_mask_0: 0.1794  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.693  m1_loss_mask_1: 0.1658  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.6371  m1_loss_mask_2: 0.1589  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.5735  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.5519  m1_loss_mask_4: 0.1602  m1_loss_dice_4: 1.202  m1_loss_ce_5: 0.5427  m1_loss_mask_5: 0.159  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5208  m1_loss_mask_6: 0.1605  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.5302  m1_loss_mask_7: 0.1587  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.5401  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5556  m2_loss_mask: 0.1588  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6472  m2_loss_mask_0: 0.1808  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.7086  m2_loss_mask_1: 0.1667  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.6311  m2_loss_mask_2: 0.1599  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.6185  m2_loss_mask_3: 0.1593  m2_loss_dice_3: 1.335  m2_loss_ce_4: 0.5894  m2_loss_mask_4: 0.1622  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.6052  m2_loss_mask_5: 0.1591  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5598  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5681  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.297  m2_loss_ce_8: 0.5425  m2_loss_mask_8: 0.1589  m2_loss_dice_8: 1.268  com_loss_ce: 1.571  com_loss_mask: 0.6936  com_loss_dice: 0.96    time: 1.4406  last_time: 1.4481  data_time: 0.0407  last_data_time: 0.0350   lr: 0.0001  max_mem: 36365M
[08/19 18:01:06] d2.utils.events INFO:  eta: 0:02:52  iter: 879  total_loss: 42.99  m1_loss_ce: 0.5132  m1_loss_mask: 0.1553  m1_loss_dice: 1.156  m1_loss_ce_0: 0.617  m1_loss_mask_0: 0.1769  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.6866  m1_loss_mask_1: 0.1663  m1_loss_dice_1: 1.302  m1_loss_ce_2: 0.6416  m1_loss_mask_2: 0.1593  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.5845  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.185  m1_loss_ce_4: 0.5418  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.5207  m1_loss_mask_5: 0.1569  m1_loss_dice_5: 1.178  m1_loss_ce_6: 0.5129  m1_loss_mask_6: 0.1569  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.5035  m1_loss_mask_7: 0.157  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.5019  m1_loss_mask_8: 0.1576  m1_loss_dice_8: 1.185  m2_loss_ce: 0.5525  m2_loss_mask: 0.1605  m2_loss_dice: 1.232  m2_loss_ce_0: 0.6494  m2_loss_mask_0: 0.1853  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.7033  m2_loss_mask_1: 0.1701  m2_loss_dice_1: 1.405  m2_loss_ce_2: 0.6004  m2_loss_mask_2: 0.1618  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5991  m2_loss_mask_3: 0.1588  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5752  m2_loss_mask_4: 0.1581  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5799  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.5639  m2_loss_mask_6: 0.1586  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.5531  m2_loss_mask_7: 0.159  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.5541  m2_loss_mask_8: 0.1592  m2_loss_dice_8: 1.247  com_loss_ce: 1.573  com_loss_mask: 0.6936  com_loss_dice: 0.9579    time: 1.4404  last_time: 1.4900  data_time: 0.0392  last_data_time: 0.0548   lr: 0.0001  max_mem: 36365M
[08/19 18:01:36] d2.utils.events INFO:  eta: 0:02:23  iter: 899  total_loss: 45.06  m1_loss_ce: 0.5197  m1_loss_mask: 0.1653  m1_loss_dice: 1.189  m1_loss_ce_0: 0.6188  m1_loss_mask_0: 0.1777  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.7063  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.338  m1_loss_ce_2: 0.6615  m1_loss_mask_2: 0.1653  m1_loss_dice_2: 1.243  m1_loss_ce_3: 0.5869  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5839  m1_loss_mask_4: 0.167  m1_loss_dice_4: 1.198  m1_loss_ce_5: 0.5392  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.5589  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.5349  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.5444  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.179  m2_loss_ce: 0.54  m2_loss_mask: 0.1678  m2_loss_dice: 1.221  m2_loss_ce_0: 0.6608  m2_loss_mask_0: 0.1964  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.7218  m2_loss_mask_1: 0.178  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.7387  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.272  m2_loss_ce_3: 0.6358  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5823  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.5513  m2_loss_mask_5: 0.17  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.5553  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.228  m2_loss_ce_7: 0.5471  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.5592  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.242  com_loss_ce: 1.564  com_loss_mask: 0.6936  com_loss_dice: 0.9602    time: 1.4404  last_time: 1.3068  data_time: 0.0403  last_data_time: 0.0389   lr: 0.0001  max_mem: 36365M
[08/19 18:02:04] d2.utils.events INFO:  eta: 0:01:55  iter: 919  total_loss: 43.6  m1_loss_ce: 0.5084  m1_loss_mask: 0.1647  m1_loss_dice: 1.2  m1_loss_ce_0: 0.6374  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.7079  m1_loss_mask_1: 0.1804  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.6616  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.5775  m1_loss_mask_3: 0.1712  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.5635  m1_loss_mask_4: 0.1645  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.5449  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.5114  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.536  m1_loss_mask_7: 0.1658  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.5305  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.159  m2_loss_ce: 0.5299  m2_loss_mask: 0.1672  m2_loss_dice: 1.228  m2_loss_ce_0: 0.6584  m2_loss_mask_0: 0.1994  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.7193  m2_loss_mask_1: 0.1815  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.669  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.599  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5857  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.584  m2_loss_mask_5: 0.168  m2_loss_dice_5: 1.262  m2_loss_ce_6: 0.5617  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5546  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.5759  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.229  com_loss_ce: 1.585  com_loss_mask: 0.6936  com_loss_dice: 0.9601    time: 1.4403  last_time: 1.4728  data_time: 0.0386  last_data_time: 0.0353   lr: 0.0001  max_mem: 36365M
[08/19 18:02:33] d2.utils.events INFO:  eta: 0:01:26  iter: 939  total_loss: 43.88  m1_loss_ce: 0.4899  m1_loss_mask: 0.1663  m1_loss_dice: 1.225  m1_loss_ce_0: 0.5992  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.6338  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5867  m1_loss_mask_2: 0.1661  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5562  m1_loss_mask_3: 0.1714  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.56  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.246  m1_loss_ce_5: 0.5418  m1_loss_mask_5: 0.1638  m1_loss_dice_5: 1.257  m1_loss_ce_6: 0.5152  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.5084  m1_loss_mask_7: 0.1655  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.5364  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.233  m2_loss_ce: 0.5512  m2_loss_mask: 0.171  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6227  m2_loss_mask_0: 0.2047  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.7054  m2_loss_mask_1: 0.1913  m2_loss_dice_1: 1.359  m2_loss_ce_2: 0.6369  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.6044  m2_loss_mask_3: 0.1689  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5841  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.5528  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.5651  m2_loss_mask_6: 0.1703  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.5525  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.5451  m2_loss_mask_8: 0.1717  m2_loss_dice_8: 1.236  com_loss_ce: 1.569  com_loss_mask: 0.6936  com_loss_dice: 0.9586    time: 1.4396  last_time: 1.4481  data_time: 0.0375  last_data_time: 0.0290   lr: 0.0001  max_mem: 36365M
[08/19 18:03:01] d2.utils.events INFO:  eta: 0:00:57  iter: 959  total_loss: 42.79  m1_loss_ce: 0.4782  m1_loss_mask: 0.1581  m1_loss_dice: 1.171  m1_loss_ce_0: 0.6036  m1_loss_mask_0: 0.1806  m1_loss_dice_0: 1.362  m1_loss_ce_1: 0.6643  m1_loss_mask_1: 0.1664  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.6094  m1_loss_mask_2: 0.1587  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.5158  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.5229  m1_loss_mask_4: 0.1645  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.4853  m1_loss_mask_5: 0.1609  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.49  m1_loss_mask_6: 0.1603  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.5075  m1_loss_mask_7: 0.1605  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.492  m1_loss_mask_8: 0.1586  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4851  m2_loss_mask: 0.1672  m2_loss_dice: 1.21  m2_loss_ce_0: 0.5995  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6488  m2_loss_mask_1: 0.1715  m2_loss_dice_1: 1.326  m2_loss_ce_2: 0.6038  m2_loss_mask_2: 0.1736  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5711  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.5294  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.4923  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.5132  m2_loss_mask_6: 0.1696  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.515  m2_loss_mask_7: 0.1699  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.4966  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.198  com_loss_ce: 1.544  com_loss_mask: 0.6936  com_loss_dice: 0.9563    time: 1.4394  last_time: 1.3571  data_time: 0.0384  last_data_time: 0.0341   lr: 0.0001  max_mem: 36365M
[08/19 18:03:30] d2.utils.events INFO:  eta: 0:00:28  iter: 979  total_loss: 43.26  m1_loss_ce: 0.4771  m1_loss_mask: 0.1479  m1_loss_dice: 1.198  m1_loss_ce_0: 0.6086  m1_loss_mask_0: 0.1755  m1_loss_dice_0: 1.376  m1_loss_ce_1: 0.6755  m1_loss_mask_1: 0.1605  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.6075  m1_loss_mask_2: 0.1522  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5488  m1_loss_mask_3: 0.1506  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.5129  m1_loss_mask_4: 0.1479  m1_loss_dice_4: 1.268  m1_loss_ce_5: 0.5103  m1_loss_mask_5: 0.15  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.5162  m1_loss_mask_6: 0.1467  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.4787  m1_loss_mask_7: 0.1493  m1_loss_dice_7: 1.182  m1_loss_ce_8: 0.5095  m1_loss_mask_8: 0.1468  m1_loss_dice_8: 1.171  m2_loss_ce: 0.5192  m2_loss_mask: 0.1572  m2_loss_dice: 1.257  m2_loss_ce_0: 0.615  m2_loss_mask_0: 0.1866  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6774  m2_loss_mask_1: 0.1672  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.5974  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.57  m2_loss_mask_3: 0.1607  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5316  m2_loss_mask_4: 0.1598  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.5354  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5519  m2_loss_mask_6: 0.1585  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5383  m2_loss_mask_7: 0.1573  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.497  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.26  com_loss_ce: 1.56  com_loss_mask: 0.6936  com_loss_dice: 0.9598    time: 1.4390  last_time: 1.3572  data_time: 0.0386  last_data_time: 0.0361   lr: 0.0001  max_mem: 36365M
[08/19 18:03:58] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10/model_final.pth
[08/19 18:04:02] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 43.58  m1_loss_ce: 0.4761  m1_loss_mask: 0.1598  m1_loss_dice: 1.133  m1_loss_ce_0: 0.5993  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.6694  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.5964  m1_loss_mask_2: 0.1698  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5545  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.531  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.5288  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.4941  m1_loss_mask_6: 0.161  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.5037  m1_loss_mask_7: 0.1627  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.4802  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.231  m2_loss_ce: 0.5448  m2_loss_mask: 0.1687  m2_loss_dice: 1.232  m2_loss_ce_0: 0.6115  m2_loss_mask_0: 0.2118  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6999  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.6449  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5736  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5601  m2_loss_mask_4: 0.174  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5448  m2_loss_mask_5: 0.1725  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.5448  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.5157  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.5178  m2_loss_mask_8: 0.1674  m2_loss_dice_8: 1.23  com_loss_ce: 1.548  com_loss_mask: 0.6936  com_loss_dice: 0.9567    time: 1.4380  last_time: 1.3468  data_time: 0.0372  last_data_time: 0.0367   lr: 0.0001  max_mem: 36365M
[08/19 18:04:02] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:23:55 (1.4380 s / it)
[08/19 18:04:02] d2.engine.hooks INFO: Total training time: 0:24:07 (0:00:12 on hooks)
[08/19 18:04:02] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/19 18:04:02] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/19 18:04:02] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 18:04:02] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/19 18:04:02] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/19 18:05:30] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalv_z1rf4g ...
[08/19 18:05:49] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.932 | 80.710 | 70.773 |      19       |
| Things | 49.688 | 79.843 | 62.179 |       8       |
| Stuff  | 63.929 | 81.341 | 77.024 |      11       |
[08/19 18:05:49] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.193 | 97.496 | 99.690 |     Stuff     |
| class_8  | 71.576 | 83.115 | 86.117 |     Stuff     |
| class_11 | 86.358 | 88.616 | 97.452 |     Stuff     |
| class_12 | 40.072 | 80.386 | 49.850 |     Stuff     |
| class_13 | 35.439 | 76.385 | 46.395 |     Stuff     |
| class_17 | 47.567 | 64.677 | 73.544 |     Stuff     |
| class_19 | 47.387 | 68.488 | 69.189 |     Stuff     |
| class_20 | 67.125 | 78.006 | 86.052 |     Stuff     |
| class_21 | 89.234 | 90.158 | 98.975 |     Stuff     |
| class_22 | 33.666 | 75.748 | 44.444 |     Stuff     |
| class_23 | 87.600 | 91.676 | 95.553 |     Stuff     |
| class_24 | 51.511 | 76.432 | 67.394 |    Things     |
| class_25 | 47.490 | 73.386 | 64.713 |    Things     |
| class_26 | 65.413 | 83.167 | 78.653 |    Things     |
| class_27 | 52.372 | 87.801 | 59.649 |    Things     |
| class_28 | 53.990 | 88.757 | 60.829 |    Things     |
| class_31 | 45.566 | 84.297 | 54.054 |    Things     |
| class_32 | 38.548 | 73.664 | 52.330 |    Things     |
| class_33 | 42.611 | 71.243 | 59.811 |    Things     |
[08/19 18:05:49] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/19 18:05:49] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/19 18:05:49] d2.evaluation.testing INFO: copypaste: 57.9325,80.7104,70.7734,49.6877,79.8432,62.1791,63.9287,81.3410,77.0238,97.1935,97.4959,99.6898,71.5764,83.1151,86.1171,86.3576,88.6159,97.4516,40.0723,80.3860,49.8498,35.4386,76.3846,46.3950,47.5667,64.6774,73.5444,47.3866,68.4885,69.1892,67.1253,78.0060,86.0515,89.2339,90.1576,98.9754,33.6656,75.7476,44.4444,87.5995,91.6764,95.5530,51.5109,76.4319,67.3945,47.4900,73.3861,64.7125,65.4132,83.1669,78.6530,52.3724,87.8008,59.6491,53.9902,88.7566,60.8295,45.5658,84.2968,54.0541,38.5483,73.6642,52.3297,42.6107,71.2427,59.8106
