[10/01 16:09:19] detectron2 INFO: Rank of current process: 0. World size: 2
[10/01 16:09:20] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/01 16:09:20] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/01 16:09:20] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/01 16:09:20] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/01 16:09:20] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2/config.yaml
[10/01 16:09:20] d2.utils.env INFO: Using a generated random seed 22151280
[10/01 16:09:24] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/01 16:09:24] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/01 16:09:25] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/01 16:09:25] d2.data.build INFO: Using training sampler TrainingSampler
[10/01 16:09:25] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/01 16:09:25] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/01 16:09:25] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/01 16:09:25] d2.data.build INFO: Making batched data loader with batch_size=4
[10/01 16:09:25] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/01 16:09:28] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/01 16:09:28] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/01 16:09:28] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/01 16:09:37] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/01 16:09:37] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/01 16:10:12] d2.utils.events INFO:  eta: 0:21:46  iter: 19  total_loss: 39.39  m1_loss_ce: 0.4762  m1_loss_mask: 0.1627  m1_loss_dice: 1.228  m1_loss_ce_0: 0.6006  m1_loss_mask_0: 0.1896  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.6807  m1_loss_mask_1: 0.1809  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.605  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5308  m1_loss_mask_3: 0.163  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.4938  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5143  m1_loss_mask_5: 0.1613  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.4946  m1_loss_mask_6: 0.1622  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5221  m1_loss_mask_7: 0.1629  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5074  m1_loss_mask_8: 0.1641  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4598  m2_loss_mask: 0.1566  m2_loss_dice: 1.219  m2_loss_ce_0: 0.5818  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6552  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5989  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5658  m2_loss_mask_3: 0.1609  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5079  m2_loss_mask_4: 0.1593  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.5058  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.4964  m2_loss_mask_6: 0.157  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4932  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4744  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.19    time: 1.3557  last_time: 1.2890  data_time: 0.2477  last_data_time: 0.0396   lr: 0.0001  max_mem: 33891M
[10/01 16:10:39] d2.utils.events INFO:  eta: 0:21:24  iter: 39  total_loss: 40.36  m1_loss_ce: 0.5016  m1_loss_mask: 0.1765  m1_loss_dice: 1.278  m1_loss_ce_0: 0.5771  m1_loss_mask_0: 0.2095  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.6407  m1_loss_mask_1: 0.192  m1_loss_dice_1: 1.396  m1_loss_ce_2: 0.5729  m1_loss_mask_2: 0.1803  m1_loss_dice_2: 1.372  m1_loss_ce_3: 0.5747  m1_loss_mask_3: 0.1786  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5327  m1_loss_mask_4: 0.1753  m1_loss_dice_4: 1.277  m1_loss_ce_5: 0.502  m1_loss_mask_5: 0.1759  m1_loss_dice_5: 1.244  m1_loss_ce_6: 0.523  m1_loss_mask_6: 0.1754  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4968  m1_loss_mask_7: 0.1728  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.4987  m1_loss_mask_8: 0.1739  m1_loss_dice_8: 1.239  m2_loss_ce: 0.4782  m2_loss_mask: 0.1774  m2_loss_dice: 1.27  m2_loss_ce_0: 0.6032  m2_loss_mask_0: 0.2074  m2_loss_dice_0: 1.491  m2_loss_ce_1: 0.6611  m2_loss_mask_1: 0.1917  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.5841  m2_loss_mask_2: 0.1807  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.5547  m2_loss_mask_3: 0.1769  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5126  m2_loss_mask_4: 0.1747  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5174  m2_loss_mask_5: 0.1744  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.4905  m2_loss_mask_6: 0.1763  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.4789  m2_loss_mask_7: 0.1773  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.472  m2_loss_mask_8: 0.1755  m2_loss_dice_8: 1.287    time: 1.3584  last_time: 1.3022  data_time: 0.0459  last_data_time: 0.0380   lr: 0.0001  max_mem: 33891M
[10/01 16:11:07] d2.utils.events INFO:  eta: 0:21:07  iter: 59  total_loss: 40.71  m1_loss_ce: 0.4549  m1_loss_mask: 0.1716  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6178  m1_loss_mask_0: 0.1951  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.6355  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.5711  m1_loss_mask_2: 0.1711  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5106  m1_loss_mask_3: 0.1751  m1_loss_dice_3: 1.3  m1_loss_ce_4: 0.4935  m1_loss_mask_4: 0.1711  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.4643  m1_loss_mask_5: 0.1734  m1_loss_dice_5: 1.282  m1_loss_ce_6: 0.486  m1_loss_mask_6: 0.1741  m1_loss_dice_6: 1.276  m1_loss_ce_7: 0.4672  m1_loss_mask_7: 0.1707  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.4691  m1_loss_mask_8: 0.1696  m1_loss_dice_8: 1.264  m2_loss_ce: 0.4776  m2_loss_mask: 0.1606  m2_loss_dice: 1.28  m2_loss_ce_0: 0.612  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.52  m2_loss_ce_1: 0.6434  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.5512  m2_loss_mask_2: 0.1645  m2_loss_dice_2: 1.366  m2_loss_ce_3: 0.5076  m2_loss_mask_3: 0.1617  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5099  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5  m2_loss_mask_5: 0.1605  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.483  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.521  m2_loss_mask_7: 0.1615  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.4685  m2_loss_mask_8: 0.1596  m2_loss_dice_8: 1.275    time: 1.3669  last_time: 1.3434  data_time: 0.0505  last_data_time: 0.0495   lr: 0.0001  max_mem: 33891M
[10/01 16:11:34] d2.utils.events INFO:  eta: 0:20:42  iter: 79  total_loss: 38.75  m1_loss_ce: 0.4631  m1_loss_mask: 0.176  m1_loss_dice: 1.222  m1_loss_ce_0: 0.568  m1_loss_mask_0: 0.2016  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.6061  m1_loss_mask_1: 0.1962  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.5717  m1_loss_mask_2: 0.1842  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5149  m1_loss_mask_3: 0.1819  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5057  m1_loss_mask_4: 0.1821  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.4966  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4484  m1_loss_mask_6: 0.181  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.462  m1_loss_mask_7: 0.1788  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4415  m1_loss_mask_8: 0.1777  m1_loss_dice_8: 1.211  m2_loss_ce: 0.4102  m2_loss_mask: 0.174  m2_loss_dice: 1.212  m2_loss_ce_0: 0.5665  m2_loss_mask_0: 0.2009  m2_loss_dice_0: 1.504  m2_loss_ce_1: 0.6334  m2_loss_mask_1: 0.1857  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.5527  m2_loss_mask_2: 0.1795  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5004  m2_loss_mask_3: 0.1743  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.4964  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.1739  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.4578  m2_loss_mask_6: 0.1747  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.4505  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4604  m2_loss_mask_8: 0.1753  m2_loss_dice_8: 1.24    time: 1.3650  last_time: 1.3502  data_time: 0.0444  last_data_time: 0.0445   lr: 0.0001  max_mem: 34251M
[10/01 16:12:02] d2.utils.events INFO:  eta: 0:20:18  iter: 99  total_loss: 39.92  m1_loss_ce: 0.4768  m1_loss_mask: 0.1718  m1_loss_dice: 1.236  m1_loss_ce_0: 0.5616  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6419  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.582  m1_loss_mask_2: 0.1748  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5366  m1_loss_mask_3: 0.1751  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5024  m1_loss_mask_4: 0.1719  m1_loss_dice_4: 1.289  m1_loss_ce_5: 0.4947  m1_loss_mask_5: 0.1732  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.4861  m1_loss_mask_6: 0.1724  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.4736  m1_loss_mask_7: 0.1719  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.4687  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.251  m2_loss_ce: 0.4736  m2_loss_mask: 0.1686  m2_loss_dice: 1.256  m2_loss_ce_0: 0.605  m2_loss_mask_0: 0.1995  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.6474  m2_loss_mask_1: 0.1846  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5614  m2_loss_mask_2: 0.172  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.549  m2_loss_mask_3: 0.1681  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.512  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.309  m2_loss_ce_5: 0.5003  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.4822  m2_loss_mask_6: 0.1695  m2_loss_dice_6: 1.275  m2_loss_ce_7: 0.4861  m2_loss_mask_7: 0.1684  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.4621  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.288    time: 1.3664  last_time: 1.3791  data_time: 0.0461  last_data_time: 0.0368   lr: 0.0001  max_mem: 34307M
[10/01 16:12:30] d2.utils.events INFO:  eta: 0:19:58  iter: 119  total_loss: 40.31  m1_loss_ce: 0.501  m1_loss_mask: 0.1588  m1_loss_dice: 1.23  m1_loss_ce_0: 0.5841  m1_loss_mask_0: 0.1873  m1_loss_dice_0: 1.497  m1_loss_ce_1: 0.6604  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.411  m1_loss_ce_2: 0.5935  m1_loss_mask_2: 0.1647  m1_loss_dice_2: 1.326  m1_loss_ce_3: 0.5513  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.52  m1_loss_mask_4: 0.1636  m1_loss_dice_4: 1.266  m1_loss_ce_5: 0.5166  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5094  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.4939  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.5125  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.248  m2_loss_ce: 0.4645  m2_loss_mask: 0.1649  m2_loss_dice: 1.288  m2_loss_ce_0: 0.6068  m2_loss_mask_0: 0.1866  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.6638  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.5819  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5297  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5229  m2_loss_mask_4: 0.1641  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.5319  m2_loss_mask_5: 0.163  m2_loss_dice_5: 1.289  m2_loss_ce_6: 0.5028  m2_loss_mask_6: 0.1633  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.4743  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.257  m2_loss_ce_8: 0.4829  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.246    time: 1.3716  last_time: 1.3956  data_time: 0.0481  last_data_time: 0.0386   lr: 0.0001  max_mem: 34307M
[10/01 16:12:57] d2.utils.events INFO:  eta: 0:19:25  iter: 139  total_loss: 40.9  m1_loss_ce: 0.5242  m1_loss_mask: 0.1741  m1_loss_dice: 1.157  m1_loss_ce_0: 0.5863  m1_loss_mask_0: 0.196  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.6796  m1_loss_mask_1: 0.1829  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.6249  m1_loss_mask_2: 0.1769  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5516  m1_loss_mask_3: 0.1756  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.541  m1_loss_mask_4: 0.1724  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.5127  m1_loss_mask_5: 0.1744  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.482  m1_loss_mask_6: 0.1734  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.5049  m1_loss_mask_7: 0.1716  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.485  m1_loss_mask_8: 0.1729  m1_loss_dice_8: 1.211  m2_loss_ce: 0.5071  m2_loss_mask: 0.1677  m2_loss_dice: 1.22  m2_loss_ce_0: 0.6537  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.7142  m2_loss_mask_1: 0.1835  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.6485  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5796  m2_loss_mask_3: 0.1678  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5654  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.5663  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5261  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.25  m2_loss_ce_7: 0.5357  m2_loss_mask_7: 0.1695  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.5432  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.258    time: 1.3647  last_time: 1.3330  data_time: 0.0419  last_data_time: 0.0342   lr: 0.0001  max_mem: 34307M
[10/01 16:13:24] d2.utils.events INFO:  eta: 0:18:58  iter: 159  total_loss: 39.44  m1_loss_ce: 0.5017  m1_loss_mask: 0.1577  m1_loss_dice: 1.252  m1_loss_ce_0: 0.62  m1_loss_mask_0: 0.1765  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.659  m1_loss_mask_1: 0.1699  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.5911  m1_loss_mask_2: 0.1604  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.5391  m1_loss_mask_3: 0.1623  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.5291  m1_loss_mask_4: 0.1573  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.4956  m1_loss_mask_5: 0.1586  m1_loss_dice_5: 1.276  m1_loss_ce_6: 0.4783  m1_loss_mask_6: 0.1582  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4816  m1_loss_mask_7: 0.1572  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4958  m1_loss_mask_8: 0.1572  m1_loss_dice_8: 1.245  m2_loss_ce: 0.51  m2_loss_mask: 0.1553  m2_loss_dice: 1.261  m2_loss_ce_0: 0.6226  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6873  m2_loss_mask_1: 0.1776  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.6109  m2_loss_mask_2: 0.1621  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.5191  m2_loss_mask_3: 0.1565  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5181  m2_loss_mask_4: 0.1542  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5384  m2_loss_mask_5: 0.1557  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.4519  m2_loss_mask_6: 0.1571  m2_loss_dice_6: 1.294  m2_loss_ce_7: 0.4966  m2_loss_mask_7: 0.1571  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4557  m2_loss_mask_8: 0.1542  m2_loss_dice_8: 1.275    time: 1.3646  last_time: 1.3721  data_time: 0.0447  last_data_time: 0.0320   lr: 0.0001  max_mem: 34307M
[10/01 16:13:51] d2.utils.events INFO:  eta: 0:18:32  iter: 179  total_loss: 40.6  m1_loss_ce: 0.5011  m1_loss_mask: 0.1641  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5833  m1_loss_mask_0: 0.198  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6757  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.6225  m1_loss_mask_2: 0.1664  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5596  m1_loss_mask_3: 0.1667  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.531  m1_loss_mask_4: 0.1636  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.518  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.5333  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.5064  m1_loss_mask_7: 0.1646  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4679  m1_loss_mask_8: 0.1617  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4925  m2_loss_mask: 0.1625  m2_loss_dice: 1.242  m2_loss_ce_0: 0.5978  m2_loss_mask_0: 0.195  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6554  m2_loss_mask_1: 0.1805  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5882  m2_loss_mask_2: 0.1666  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5351  m2_loss_mask_3: 0.1653  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5555  m2_loss_mask_4: 0.1622  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.4995  m2_loss_mask_5: 0.1634  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.4855  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.272  m2_loss_ce_7: 0.4998  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.4997  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.228    time: 1.3650  last_time: 1.4024  data_time: 0.0423  last_data_time: 0.0320   lr: 0.0001  max_mem: 34307M
[10/01 16:14:18] d2.utils.events INFO:  eta: 0:18:04  iter: 199  total_loss: 37.5  m1_loss_ce: 0.4392  m1_loss_mask: 0.1654  m1_loss_dice: 1.128  m1_loss_ce_0: 0.5323  m1_loss_mask_0: 0.1854  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.5728  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.307  m1_loss_ce_2: 0.5656  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.243  m1_loss_ce_3: 0.4947  m1_loss_mask_3: 0.1691  m1_loss_dice_3: 1.187  m1_loss_ce_4: 0.4745  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.19  m1_loss_ce_5: 0.4249  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.188  m1_loss_ce_6: 0.453  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.4425  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.4447  m1_loss_mask_8: 0.1655  m1_loss_dice_8: 1.129  m2_loss_ce: 0.4183  m2_loss_mask: 0.1611  m2_loss_dice: 1.183  m2_loss_ce_0: 0.5722  m2_loss_mask_0: 0.1872  m2_loss_dice_0: 1.38  m2_loss_ce_1: 0.6402  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.3  m2_loss_ce_2: 0.5234  m2_loss_mask_2: 0.1638  m2_loss_dice_2: 1.23  m2_loss_ce_3: 0.4916  m2_loss_mask_3: 0.1613  m2_loss_dice_3: 1.191  m2_loss_ce_4: 0.4831  m2_loss_mask_4: 0.164  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.4601  m2_loss_mask_5: 0.1589  m2_loss_dice_5: 1.15  m2_loss_ce_6: 0.4542  m2_loss_mask_6: 0.1596  m2_loss_dice_6: 1.152  m2_loss_ce_7: 0.4369  m2_loss_mask_7: 0.1595  m2_loss_dice_7: 1.157  m2_loss_ce_8: 0.4127  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.172    time: 1.3629  last_time: 1.3064  data_time: 0.0431  last_data_time: 0.0317   lr: 0.0001  max_mem: 34307M
[10/01 16:14:46] d2.utils.events INFO:  eta: 0:17:38  iter: 219  total_loss: 39.53  m1_loss_ce: 0.4671  m1_loss_mask: 0.1702  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5915  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.6302  m1_loss_mask_1: 0.1856  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5754  m1_loss_mask_2: 0.1755  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.5209  m1_loss_mask_3: 0.1738  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.4815  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.4899  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4972  m1_loss_mask_6: 0.1666  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4574  m1_loss_mask_7: 0.1661  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.4722  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.24  m2_loss_ce: 0.4678  m2_loss_mask: 0.1657  m2_loss_dice: 1.221  m2_loss_ce_0: 0.6203  m2_loss_mask_0: 0.1917  m2_loss_dice_0: 1.403  m2_loss_ce_1: 0.681  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.5889  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5463  m2_loss_mask_3: 0.1719  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5067  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.5053  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.4823  m2_loss_mask_6: 0.1697  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4609  m2_loss_mask_7: 0.1717  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4677  m2_loss_mask_8: 0.169  m2_loss_dice_8: 1.226    time: 1.3638  last_time: 1.3350  data_time: 0.0436  last_data_time: 0.0350   lr: 0.0001  max_mem: 34307M
[10/01 16:15:13] d2.utils.events INFO:  eta: 0:17:10  iter: 239  total_loss: 39.54  m1_loss_ce: 0.4981  m1_loss_mask: 0.191  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5682  m1_loss_mask_0: 0.2155  m1_loss_dice_0: 1.398  m1_loss_ce_1: 0.654  m1_loss_mask_1: 0.1992  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.6191  m1_loss_mask_2: 0.1917  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.554  m1_loss_mask_3: 0.1882  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5091  m1_loss_mask_4: 0.1886  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.4939  m1_loss_mask_5: 0.1892  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.5115  m1_loss_mask_6: 0.1859  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.4847  m1_loss_mask_7: 0.1885  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.483  m1_loss_mask_8: 0.1873  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4786  m2_loss_mask: 0.1794  m2_loss_dice: 1.21  m2_loss_ce_0: 0.6139  m2_loss_mask_0: 0.2166  m2_loss_dice_0: 1.398  m2_loss_ce_1: 0.6679  m2_loss_mask_1: 0.1963  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.5899  m2_loss_mask_2: 0.1825  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5448  m2_loss_mask_3: 0.1813  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.5284  m2_loss_mask_4: 0.1823  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.4959  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4866  m2_loss_mask_6: 0.1794  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.483  m2_loss_mask_7: 0.1794  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.499  m2_loss_mask_8: 0.1791  m2_loss_dice_8: 1.243    time: 1.3624  last_time: 1.4010  data_time: 0.0405  last_data_time: 0.0598   lr: 0.0001  max_mem: 34307M
[10/01 16:15:41] d2.utils.events INFO:  eta: 0:16:44  iter: 259  total_loss: 40.26  m1_loss_ce: 0.4647  m1_loss_mask: 0.1574  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5646  m1_loss_mask_0: 0.1853  m1_loss_dice_0: 1.461  m1_loss_ce_1: 0.6242  m1_loss_mask_1: 0.1759  m1_loss_dice_1: 1.403  m1_loss_ce_2: 0.5809  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.5292  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.5165  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.5046  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.4658  m1_loss_mask_6: 0.1577  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.5006  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4727  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.215  m2_loss_ce: 0.4954  m2_loss_mask: 0.1625  m2_loss_dice: 1.311  m2_loss_ce_0: 0.6108  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6645  m2_loss_mask_1: 0.1827  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.6002  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.405  m2_loss_ce_3: 0.5676  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.5111  m2_loss_mask_4: 0.1618  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5123  m2_loss_mask_5: 0.1622  m2_loss_dice_5: 1.316  m2_loss_ce_6: 0.5032  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.289  m2_loss_ce_7: 0.4782  m2_loss_mask_7: 0.1634  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.5057  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.296    time: 1.3632  last_time: 1.3430  data_time: 0.0423  last_data_time: 0.0429   lr: 0.0001  max_mem: 34307M
[10/01 16:16:08] d2.utils.events INFO:  eta: 0:16:18  iter: 279  total_loss: 41.1  m1_loss_ce: 0.5174  m1_loss_mask: 0.1579  m1_loss_dice: 1.238  m1_loss_ce_0: 0.536  m1_loss_mask_0: 0.1749  m1_loss_dice_0: 1.473  m1_loss_ce_1: 0.66  m1_loss_mask_1: 0.1644  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.6417  m1_loss_mask_2: 0.163  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5426  m1_loss_mask_3: 0.1574  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.5431  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.286  m1_loss_ce_5: 0.4956  m1_loss_mask_5: 0.1582  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.5235  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.4875  m1_loss_mask_7: 0.1582  m1_loss_dice_7: 1.284  m1_loss_ce_8: 0.5339  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.244  m2_loss_ce: 0.4748  m2_loss_mask: 0.1543  m2_loss_dice: 1.296  m2_loss_ce_0: 0.6149  m2_loss_mask_0: 0.1829  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6996  m2_loss_mask_1: 0.1689  m2_loss_dice_1: 1.453  m2_loss_ce_2: 0.63  m2_loss_mask_2: 0.1556  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5966  m2_loss_mask_3: 0.1527  m2_loss_dice_3: 1.307  m2_loss_ce_4: 0.55  m2_loss_mask_4: 0.1516  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5414  m2_loss_mask_5: 0.1517  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.496  m2_loss_mask_6: 0.153  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5371  m2_loss_mask_7: 0.1538  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.5079  m2_loss_mask_8: 0.1536  m2_loss_dice_8: 1.251    time: 1.3649  last_time: 1.3601  data_time: 0.0487  last_data_time: 0.0407   lr: 0.0001  max_mem: 34307M
[10/01 16:16:36] d2.utils.events INFO:  eta: 0:15:51  iter: 299  total_loss: 40.42  m1_loss_ce: 0.4993  m1_loss_mask: 0.1784  m1_loss_dice: 1.281  m1_loss_ce_0: 0.5797  m1_loss_mask_0: 0.1991  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.6528  m1_loss_mask_1: 0.1843  m1_loss_dice_1: 1.46  m1_loss_ce_2: 0.6391  m1_loss_mask_2: 0.1785  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5934  m1_loss_mask_3: 0.1819  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.5421  m1_loss_mask_4: 0.1773  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.5142  m1_loss_mask_5: 0.1767  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.4918  m1_loss_mask_6: 0.1786  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.5082  m1_loss_mask_7: 0.1787  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.5202  m1_loss_mask_8: 0.1775  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4573  m2_loss_mask: 0.1692  m2_loss_dice: 1.248  m2_loss_ce_0: 0.6429  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.7088  m2_loss_mask_1: 0.1805  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5993  m2_loss_mask_2: 0.1761  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5606  m2_loss_mask_3: 0.1695  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5684  m2_loss_mask_4: 0.164  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.5381  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.5032  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.219  m2_loss_ce_7: 0.5238  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.4915  m2_loss_mask_8: 0.1685  m2_loss_dice_8: 1.306    time: 1.3653  last_time: 1.3450  data_time: 0.0412  last_data_time: 0.0403   lr: 0.0001  max_mem: 34588M
[10/01 16:17:03] d2.utils.events INFO:  eta: 0:15:24  iter: 319  total_loss: 39.79  m1_loss_ce: 0.473  m1_loss_mask: 0.1677  m1_loss_dice: 1.224  m1_loss_ce_0: 0.5673  m1_loss_mask_0: 0.1767  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6307  m1_loss_mask_1: 0.1698  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.6093  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.5067  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.5092  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.439  m1_loss_mask_5: 0.1711  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4477  m1_loss_mask_6: 0.1673  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4824  m1_loss_mask_7: 0.1678  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4782  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.216  m2_loss_ce: 0.482  m2_loss_mask: 0.1577  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6022  m2_loss_mask_0: 0.1854  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6463  m2_loss_mask_1: 0.1724  m2_loss_dice_1: 1.434  m2_loss_ce_2: 0.5997  m2_loss_mask_2: 0.1576  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5377  m2_loss_mask_3: 0.1601  m2_loss_dice_3: 1.311  m2_loss_ce_4: 0.5156  m2_loss_mask_4: 0.154  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.52  m2_loss_mask_5: 0.1555  m2_loss_dice_5: 1.313  m2_loss_ce_6: 0.4627  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4661  m2_loss_mask_7: 0.156  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.4634  m2_loss_mask_8: 0.1534  m2_loss_dice_8: 1.289    time: 1.3653  last_time: 1.3517  data_time: 0.0443  last_data_time: 0.0341   lr: 0.0001  max_mem: 34588M
[10/01 16:17:30] d2.utils.events INFO:  eta: 0:14:55  iter: 339  total_loss: 39.84  m1_loss_ce: 0.4927  m1_loss_mask: 0.1884  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5394  m1_loss_mask_0: 0.2245  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.5998  m1_loss_mask_1: 0.2028  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5675  m1_loss_mask_2: 0.196  m1_loss_dice_2: 1.284  m1_loss_ce_3: 0.5057  m1_loss_mask_3: 0.192  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4795  m1_loss_mask_4: 0.1909  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.4596  m1_loss_mask_5: 0.1865  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4575  m1_loss_mask_6: 0.186  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4884  m1_loss_mask_7: 0.1841  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.4876  m1_loss_mask_8: 0.1859  m1_loss_dice_8: 1.204  m2_loss_ce: 0.4452  m2_loss_mask: 0.1883  m2_loss_dice: 1.235  m2_loss_ce_0: 0.5951  m2_loss_mask_0: 0.2177  m2_loss_dice_0: 1.405  m2_loss_ce_1: 0.6264  m2_loss_mask_1: 0.2029  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5685  m2_loss_mask_2: 0.1914  m2_loss_dice_2: 1.254  m2_loss_ce_3: 0.5148  m2_loss_mask_3: 0.1921  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.5102  m2_loss_mask_4: 0.1868  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.495  m2_loss_mask_5: 0.1865  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.4728  m2_loss_mask_6: 0.1862  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4782  m2_loss_mask_7: 0.1874  m2_loss_dice_7: 1.194  m2_loss_ce_8: 0.4328  m2_loss_mask_8: 0.1837  m2_loss_dice_8: 1.228    time: 1.3636  last_time: 1.3713  data_time: 0.0393  last_data_time: 0.0370   lr: 0.0001  max_mem: 34588M
[10/01 16:17:58] d2.utils.events INFO:  eta: 0:14:29  iter: 359  total_loss: 39.14  m1_loss_ce: 0.4269  m1_loss_mask: 0.1805  m1_loss_dice: 1.237  m1_loss_ce_0: 0.5167  m1_loss_mask_0: 0.2046  m1_loss_dice_0: 1.471  m1_loss_ce_1: 0.6001  m1_loss_mask_1: 0.1923  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.5618  m1_loss_mask_2: 0.1827  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5192  m1_loss_mask_3: 0.1845  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.4908  m1_loss_mask_4: 0.1815  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.4519  m1_loss_mask_5: 0.1761  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4657  m1_loss_mask_6: 0.1797  m1_loss_dice_6: 1.242  m1_loss_ce_7: 0.4553  m1_loss_mask_7: 0.1786  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4622  m1_loss_mask_8: 0.1801  m1_loss_dice_8: 1.25  m2_loss_ce: 0.4462  m2_loss_mask: 0.1715  m2_loss_dice: 1.247  m2_loss_ce_0: 0.5677  m2_loss_mask_0: 0.2119  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6622  m2_loss_mask_1: 0.1956  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.574  m2_loss_mask_2: 0.1789  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.4907  m2_loss_mask_3: 0.1795  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.4956  m2_loss_mask_4: 0.1744  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.4931  m2_loss_mask_5: 0.1724  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4466  m2_loss_mask_6: 0.1728  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4738  m2_loss_mask_7: 0.1727  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.4278  m2_loss_mask_8: 0.1727  m2_loss_dice_8: 1.216    time: 1.3639  last_time: 1.3467  data_time: 0.0410  last_data_time: 0.0686   lr: 0.0001  max_mem: 34588M
[10/01 16:18:25] d2.utils.events INFO:  eta: 0:14:01  iter: 379  total_loss: 37.99  m1_loss_ce: 0.435  m1_loss_mask: 0.1828  m1_loss_dice: 1.17  m1_loss_ce_0: 0.5366  m1_loss_mask_0: 0.2012  m1_loss_dice_0: 1.361  m1_loss_ce_1: 0.5751  m1_loss_mask_1: 0.1891  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.5385  m1_loss_mask_2: 0.1785  m1_loss_dice_2: 1.205  m1_loss_ce_3: 0.4698  m1_loss_mask_3: 0.1772  m1_loss_dice_3: 1.191  m1_loss_ce_4: 0.4641  m1_loss_mask_4: 0.1785  m1_loss_dice_4: 1.163  m1_loss_ce_5: 0.45  m1_loss_mask_5: 0.1758  m1_loss_dice_5: 1.167  m1_loss_ce_6: 0.4109  m1_loss_mask_6: 0.1773  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.408  m1_loss_mask_7: 0.1851  m1_loss_dice_7: 1.129  m1_loss_ce_8: 0.4196  m1_loss_mask_8: 0.184  m1_loss_dice_8: 1.139  m2_loss_ce: 0.4421  m2_loss_mask: 0.1771  m2_loss_dice: 1.171  m2_loss_ce_0: 0.5745  m2_loss_mask_0: 0.2146  m2_loss_dice_0: 1.363  m2_loss_ce_1: 0.6275  m2_loss_mask_1: 0.2001  m2_loss_dice_1: 1.282  m2_loss_ce_2: 0.5662  m2_loss_mask_2: 0.1809  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.533  m2_loss_mask_3: 0.1771  m2_loss_dice_3: 1.161  m2_loss_ce_4: 0.519  m2_loss_mask_4: 0.1815  m2_loss_dice_4: 1.167  m2_loss_ce_5: 0.4902  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.153  m2_loss_ce_6: 0.4346  m2_loss_mask_6: 0.1795  m2_loss_dice_6: 1.161  m2_loss_ce_7: 0.4467  m2_loss_mask_7: 0.179  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.4553  m2_loss_mask_8: 0.1793  m2_loss_dice_8: 1.18    time: 1.3631  last_time: 1.3077  data_time: 0.0402  last_data_time: 0.0451   lr: 0.0001  max_mem: 34588M
[10/01 16:18:53] d2.utils.events INFO:  eta: 0:13:34  iter: 399  total_loss: 37.98  m1_loss_ce: 0.4472  m1_loss_mask: 0.1616  m1_loss_dice: 1.201  m1_loss_ce_0: 0.5384  m1_loss_mask_0: 0.1829  m1_loss_dice_0: 1.357  m1_loss_ce_1: 0.5976  m1_loss_mask_1: 0.1783  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.5157  m1_loss_mask_2: 0.1639  m1_loss_dice_2: 1.237  m1_loss_ce_3: 0.4823  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4529  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.4704  m1_loss_mask_5: 0.164  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.4464  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.157  m1_loss_ce_7: 0.449  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.4593  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4748  m2_loss_mask: 0.1621  m2_loss_dice: 1.216  m2_loss_ce_0: 0.6276  m2_loss_mask_0: 0.1885  m2_loss_dice_0: 1.386  m2_loss_ce_1: 0.672  m2_loss_mask_1: 0.1783  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.6106  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5445  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.5348  m2_loss_mask_4: 0.16  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.5103  m2_loss_mask_5: 0.1598  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.4764  m2_loss_mask_6: 0.1612  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.484  m2_loss_mask_7: 0.1604  m2_loss_dice_7: 1.191  m2_loss_ce_8: 0.4597  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.227    time: 1.3629  last_time: 1.3634  data_time: 0.0435  last_data_time: 0.0423   lr: 0.0001  max_mem: 34588M
[10/01 16:19:20] d2.utils.events INFO:  eta: 0:13:07  iter: 419  total_loss: 37.49  m1_loss_ce: 0.4238  m1_loss_mask: 0.1734  m1_loss_dice: 1.174  m1_loss_ce_0: 0.5081  m1_loss_mask_0: 0.2047  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.6078  m1_loss_mask_1: 0.1857  m1_loss_dice_1: 1.333  m1_loss_ce_2: 0.5354  m1_loss_mask_2: 0.1767  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.4951  m1_loss_mask_3: 0.1771  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.486  m1_loss_mask_4: 0.1791  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.4626  m1_loss_mask_5: 0.177  m1_loss_dice_5: 1.165  m1_loss_ce_6: 0.4517  m1_loss_mask_6: 0.1767  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.419  m1_loss_mask_7: 0.1757  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4423  m1_loss_mask_8: 0.1742  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4401  m2_loss_mask: 0.1748  m2_loss_dice: 1.222  m2_loss_ce_0: 0.5674  m2_loss_mask_0: 0.2113  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6369  m2_loss_mask_1: 0.196  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.5429  m2_loss_mask_2: 0.1801  m2_loss_dice_2: 1.256  m2_loss_ce_3: 0.5118  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.4754  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.206  m2_loss_ce_5: 0.499  m2_loss_mask_5: 0.1749  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.4786  m2_loss_mask_6: 0.1755  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.4676  m2_loss_mask_7: 0.1751  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4615  m2_loss_mask_8: 0.1744  m2_loss_dice_8: 1.181    time: 1.3633  last_time: 1.3202  data_time: 0.0463  last_data_time: 0.0367   lr: 0.0001  max_mem: 34588M
[10/01 16:19:48] d2.utils.events INFO:  eta: 0:12:41  iter: 439  total_loss: 39.82  m1_loss_ce: 0.4591  m1_loss_mask: 0.1589  m1_loss_dice: 1.216  m1_loss_ce_0: 0.556  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.6233  m1_loss_mask_1: 0.1741  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5556  m1_loss_mask_2: 0.1618  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.4826  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.4698  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.4515  m1_loss_mask_5: 0.1647  m1_loss_dice_5: 1.257  m1_loss_ce_6: 0.4534  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4578  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.453  m1_loss_mask_8: 0.1567  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4554  m2_loss_mask: 0.1662  m2_loss_dice: 1.252  m2_loss_ce_0: 0.5872  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6816  m2_loss_mask_1: 0.1863  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.5473  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5329  m2_loss_mask_3: 0.1654  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5105  m2_loss_mask_4: 0.1611  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.4961  m2_loss_mask_5: 0.1628  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.4741  m2_loss_mask_6: 0.1673  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.5034  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.4542  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.239    time: 1.3640  last_time: 1.4669  data_time: 0.0472  last_data_time: 0.0492   lr: 0.0001  max_mem: 34588M
[10/01 16:20:16] d2.utils.events INFO:  eta: 0:12:14  iter: 459  total_loss: 39.5  m1_loss_ce: 0.4273  m1_loss_mask: 0.162  m1_loss_dice: 1.227  m1_loss_ce_0: 0.558  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6045  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5612  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.522  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.4669  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.4638  m1_loss_mask_5: 0.1617  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4402  m1_loss_mask_6: 0.1613  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4431  m1_loss_mask_7: 0.1622  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.4603  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.196  m2_loss_ce: 0.5011  m2_loss_mask: 0.1649  m2_loss_dice: 1.247  m2_loss_ce_0: 0.6142  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.6503  m2_loss_mask_1: 0.1892  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.5807  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5608  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5419  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.5487  m2_loss_mask_5: 0.1673  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.5269  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.5246  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.4888  m2_loss_mask_8: 0.1633  m2_loss_dice_8: 1.255    time: 1.3651  last_time: 1.4115  data_time: 0.0544  last_data_time: 0.0373   lr: 0.0001  max_mem: 34588M
[10/01 16:20:43] d2.utils.events INFO:  eta: 0:11:47  iter: 479  total_loss: 38.02  m1_loss_ce: 0.4422  m1_loss_mask: 0.1653  m1_loss_dice: 1.157  m1_loss_ce_0: 0.5429  m1_loss_mask_0: 0.194  m1_loss_dice_0: 1.344  m1_loss_ce_1: 0.5936  m1_loss_mask_1: 0.1807  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5478  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.4698  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.4734  m1_loss_mask_4: 0.1663  m1_loss_dice_4: 1.165  m1_loss_ce_5: 0.4526  m1_loss_mask_5: 0.1668  m1_loss_dice_5: 1.157  m1_loss_ce_6: 0.4558  m1_loss_mask_6: 0.1655  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4431  m1_loss_mask_7: 0.1639  m1_loss_dice_7: 1.14  m1_loss_ce_8: 0.4704  m1_loss_mask_8: 0.1632  m1_loss_dice_8: 1.137  m2_loss_ce: 0.4372  m2_loss_mask: 0.1735  m2_loss_dice: 1.214  m2_loss_ce_0: 0.5924  m2_loss_mask_0: 0.205  m2_loss_dice_0: 1.374  m2_loss_ce_1: 0.6243  m2_loss_mask_1: 0.1903  m2_loss_dice_1: 1.308  m2_loss_ce_2: 0.5491  m2_loss_mask_2: 0.1783  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.4921  m2_loss_mask_3: 0.1733  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.4763  m2_loss_mask_4: 0.1725  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4696  m2_loss_mask_5: 0.173  m2_loss_dice_5: 1.214  m2_loss_ce_6: 0.4291  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.174  m2_loss_ce_7: 0.4663  m2_loss_mask_7: 0.1732  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.458  m2_loss_mask_8: 0.1723  m2_loss_dice_8: 1.183    time: 1.3649  last_time: 1.3881  data_time: 0.0490  last_data_time: 0.0433   lr: 0.0001  max_mem: 34588M
[10/01 16:21:11] d2.utils.events INFO:  eta: 0:11:20  iter: 499  total_loss: 41.19  m1_loss_ce: 0.5215  m1_loss_mask: 0.1647  m1_loss_dice: 1.243  m1_loss_ce_0: 0.6218  m1_loss_mask_0: 0.1982  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.6507  m1_loss_mask_1: 0.1771  m1_loss_dice_1: 1.382  m1_loss_ce_2: 0.6487  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5673  m1_loss_mask_3: 0.1705  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.5541  m1_loss_mask_4: 0.1703  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.5346  m1_loss_mask_5: 0.1671  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.5712  m1_loss_mask_6: 0.1661  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.552  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.266  m1_loss_ce_8: 0.5254  m1_loss_mask_8: 0.1663  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5203  m2_loss_mask: 0.1619  m2_loss_dice: 1.336  m2_loss_ce_0: 0.6504  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.522  m2_loss_ce_1: 0.7078  m2_loss_mask_1: 0.1863  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6741  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.6092  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5984  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.322  m2_loss_ce_5: 0.5518  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.539  m2_loss_mask_6: 0.1663  m2_loss_dice_6: 1.298  m2_loss_ce_7: 0.538  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.288  m2_loss_ce_8: 0.5727  m2_loss_mask_8: 0.1639  m2_loss_dice_8: 1.287    time: 1.3662  last_time: 1.3912  data_time: 0.0521  last_data_time: 0.0436   lr: 0.0001  max_mem: 34588M
[10/01 16:21:39] d2.utils.events INFO:  eta: 0:10:53  iter: 519  total_loss: 39.31  m1_loss_ce: 0.4568  m1_loss_mask: 0.1689  m1_loss_dice: 1.219  m1_loss_ce_0: 0.5244  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.615  m1_loss_mask_1: 0.1852  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5437  m1_loss_mask_2: 0.1759  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.4948  m1_loss_mask_3: 0.1724  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.4747  m1_loss_mask_4: 0.1719  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.4871  m1_loss_mask_5: 0.1684  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4698  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.243  m1_loss_ce_7: 0.4545  m1_loss_mask_7: 0.1695  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4919  m1_loss_mask_8: 0.169  m1_loss_dice_8: 1.241  m2_loss_ce: 0.4461  m2_loss_mask: 0.174  m2_loss_dice: 1.29  m2_loss_ce_0: 0.5857  m2_loss_mask_0: 0.2085  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.6414  m2_loss_mask_1: 0.186  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5601  m2_loss_mask_2: 0.1795  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.5523  m2_loss_mask_3: 0.1746  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5005  m2_loss_mask_4: 0.1753  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5157  m2_loss_mask_5: 0.1733  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.4791  m2_loss_mask_6: 0.1762  m2_loss_dice_6: 1.306  m2_loss_ce_7: 0.4725  m2_loss_mask_7: 0.1759  m2_loss_dice_7: 1.272  m2_loss_ce_8: 0.4723  m2_loss_mask_8: 0.1762  m2_loss_dice_8: 1.321    time: 1.3668  last_time: 1.3615  data_time: 0.0509  last_data_time: 0.0591   lr: 0.0001  max_mem: 34588M
[10/01 16:22:07] d2.utils.events INFO:  eta: 0:10:26  iter: 539  total_loss: 39.83  m1_loss_ce: 0.4689  m1_loss_mask: 0.1567  m1_loss_dice: 1.27  m1_loss_ce_0: 0.5299  m1_loss_mask_0: 0.1833  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6328  m1_loss_mask_1: 0.1643  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.5974  m1_loss_mask_2: 0.1566  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.4858  m1_loss_mask_3: 0.1545  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.5057  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5025  m1_loss_mask_5: 0.1539  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.469  m1_loss_mask_6: 0.155  m1_loss_dice_6: 1.27  m1_loss_ce_7: 0.49  m1_loss_mask_7: 0.1557  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.463  m1_loss_mask_8: 0.1588  m1_loss_dice_8: 1.241  m2_loss_ce: 0.4832  m2_loss_mask: 0.1507  m2_loss_dice: 1.295  m2_loss_ce_0: 0.697  m2_loss_mask_0: 0.1761  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6964  m2_loss_mask_1: 0.1663  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.6297  m2_loss_mask_2: 0.1538  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5348  m2_loss_mask_3: 0.1528  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5558  m2_loss_mask_4: 0.1548  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.5276  m2_loss_mask_5: 0.1499  m2_loss_dice_5: 1.343  m2_loss_ce_6: 0.4821  m2_loss_mask_6: 0.1511  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.4942  m2_loss_mask_7: 0.1512  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.4833  m2_loss_mask_8: 0.1524  m2_loss_dice_8: 1.314    time: 1.3670  last_time: 1.3262  data_time: 0.0495  last_data_time: 0.0490   lr: 0.0001  max_mem: 34588M
[10/01 16:22:35] d2.utils.events INFO:  eta: 0:10:00  iter: 559  total_loss: 38.57  m1_loss_ce: 0.4225  m1_loss_mask: 0.1652  m1_loss_dice: 1.214  m1_loss_ce_0: 0.5169  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.373  m1_loss_ce_1: 0.5744  m1_loss_mask_1: 0.179  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.5151  m1_loss_mask_2: 0.171  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.4929  m1_loss_mask_3: 0.1674  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.4454  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.4818  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.4562  m1_loss_mask_6: 0.1661  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4327  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.4281  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.237  m2_loss_ce: 0.4606  m2_loss_mask: 0.1699  m2_loss_dice: 1.223  m2_loss_ce_0: 0.6012  m2_loss_mask_0: 0.1922  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.6387  m2_loss_mask_1: 0.1822  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.5654  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.5446  m2_loss_mask_3: 0.1696  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5052  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.484  m2_loss_mask_5: 0.1666  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.4604  m2_loss_mask_6: 0.169  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.456  m2_loss_mask_7: 0.1704  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.4573  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.239    time: 1.3684  last_time: 1.3969  data_time: 0.0561  last_data_time: 0.0411   lr: 0.0001  max_mem: 34588M
[10/01 16:23:02] d2.utils.events INFO:  eta: 0:09:33  iter: 579  total_loss: 39.14  m1_loss_ce: 0.4501  m1_loss_mask: 0.1601  m1_loss_dice: 1.208  m1_loss_ce_0: 0.5335  m1_loss_mask_0: 0.1886  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.5727  m1_loss_mask_1: 0.1683  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5192  m1_loss_mask_2: 0.161  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.4996  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.4409  m1_loss_mask_4: 0.1554  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.4755  m1_loss_mask_5: 0.1556  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.4648  m1_loss_mask_6: 0.1598  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.4239  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.4272  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.2  m2_loss_ce: 0.4677  m2_loss_mask: 0.1597  m2_loss_dice: 1.237  m2_loss_ce_0: 0.5883  m2_loss_mask_0: 0.1888  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6358  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.567  m2_loss_mask_2: 0.1703  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.4997  m2_loss_mask_3: 0.1701  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.4968  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.4739  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4669  m2_loss_mask_6: 0.159  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.477  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.4516  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.246    time: 1.3688  last_time: 1.4052  data_time: 0.0526  last_data_time: 0.1098   lr: 0.0001  max_mem: 35172M
[10/01 16:23:30] d2.utils.events INFO:  eta: 0:09:06  iter: 599  total_loss: 39.29  m1_loss_ce: 0.4384  m1_loss_mask: 0.1842  m1_loss_dice: 1.187  m1_loss_ce_0: 0.5436  m1_loss_mask_0: 0.227  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.5919  m1_loss_mask_1: 0.2057  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.562  m1_loss_mask_2: 0.1862  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.489  m1_loss_mask_3: 0.1839  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.5016  m1_loss_mask_4: 0.1793  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.4802  m1_loss_mask_5: 0.1803  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4786  m1_loss_mask_6: 0.188  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.4593  m1_loss_mask_7: 0.1842  m1_loss_dice_7: 1.141  m1_loss_ce_8: 0.4667  m1_loss_mask_8: 0.1855  m1_loss_dice_8: 1.193  m2_loss_ce: 0.4881  m2_loss_mask: 0.1892  m2_loss_dice: 1.255  m2_loss_ce_0: 0.5929  m2_loss_mask_0: 0.2322  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6496  m2_loss_mask_1: 0.2154  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.586  m2_loss_mask_2: 0.1986  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5284  m2_loss_mask_3: 0.193  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.5235  m2_loss_mask_4: 0.1904  m2_loss_dice_4: 1.227  m2_loss_ce_5: 0.4886  m2_loss_mask_5: 0.1883  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4876  m2_loss_mask_6: 0.189  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5052  m2_loss_mask_7: 0.1895  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4812  m2_loss_mask_8: 0.1917  m2_loss_dice_8: 1.221    time: 1.3689  last_time: 1.3785  data_time: 0.0502  last_data_time: 0.0656   lr: 0.0001  max_mem: 35172M
[10/01 16:23:58] d2.utils.events INFO:  eta: 0:08:39  iter: 619  total_loss: 40.73  m1_loss_ce: 0.4609  m1_loss_mask: 0.1558  m1_loss_dice: 1.275  m1_loss_ce_0: 0.5632  m1_loss_mask_0: 0.1826  m1_loss_dice_0: 1.508  m1_loss_ce_1: 0.6384  m1_loss_mask_1: 0.1727  m1_loss_dice_1: 1.407  m1_loss_ce_2: 0.596  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5083  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.294  m1_loss_ce_4: 0.5398  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.514  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.305  m1_loss_ce_6: 0.4769  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.278  m1_loss_ce_7: 0.4956  m1_loss_mask_7: 0.1561  m1_loss_dice_7: 1.286  m1_loss_ce_8: 0.4776  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.276  m2_loss_ce: 0.4987  m2_loss_mask: 0.1618  m2_loss_dice: 1.341  m2_loss_ce_0: 0.6098  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.534  m2_loss_ce_1: 0.6764  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.467  m2_loss_ce_2: 0.6273  m2_loss_mask_2: 0.1675  m2_loss_dice_2: 1.407  m2_loss_ce_3: 0.5551  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.352  m2_loss_ce_4: 0.5534  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.337  m2_loss_ce_5: 0.5421  m2_loss_mask_5: 0.1612  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.4796  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.335  m2_loss_ce_7: 0.5402  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.302  m2_loss_ce_8: 0.48  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.306    time: 1.3695  last_time: 1.3636  data_time: 0.0514  last_data_time: 0.0489   lr: 0.0001  max_mem: 35172M
[10/01 16:24:25] d2.utils.events INFO:  eta: 0:08:11  iter: 639  total_loss: 39.93  m1_loss_ce: 0.4552  m1_loss_mask: 0.1716  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5371  m1_loss_mask_0: 0.205  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.6341  m1_loss_mask_1: 0.1846  m1_loss_dice_1: 1.338  m1_loss_ce_2: 0.5586  m1_loss_mask_2: 0.1733  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.5163  m1_loss_mask_3: 0.1736  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.4977  m1_loss_mask_4: 0.1743  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5009  m1_loss_mask_5: 0.1706  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4985  m1_loss_mask_6: 0.1689  m1_loss_dice_6: 1.236  m1_loss_ce_7: 0.4633  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.476  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.246  m2_loss_ce: 0.4725  m2_loss_mask: 0.1781  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6067  m2_loss_mask_0: 0.2148  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.6758  m2_loss_mask_1: 0.2007  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.5986  m2_loss_mask_2: 0.1821  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5449  m2_loss_mask_3: 0.1843  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5262  m2_loss_mask_4: 0.1832  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5181  m2_loss_mask_5: 0.1789  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.4892  m2_loss_mask_6: 0.1785  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.477  m2_loss_mask_7: 0.178  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.4774  m2_loss_mask_8: 0.1786  m2_loss_dice_8: 1.251    time: 1.3685  last_time: 1.3721  data_time: 0.0472  last_data_time: 0.0630   lr: 0.0001  max_mem: 35172M
[10/01 16:24:53] d2.utils.events INFO:  eta: 0:07:44  iter: 659  total_loss: 40.65  m1_loss_ce: 0.4566  m1_loss_mask: 0.1653  m1_loss_dice: 1.263  m1_loss_ce_0: 0.5442  m1_loss_mask_0: 0.1927  m1_loss_dice_0: 1.5  m1_loss_ce_1: 0.5802  m1_loss_mask_1: 0.1837  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5434  m1_loss_mask_2: 0.1723  m1_loss_dice_2: 1.347  m1_loss_ce_3: 0.5059  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.279  m1_loss_ce_4: 0.494  m1_loss_mask_4: 0.1708  m1_loss_dice_4: 1.292  m1_loss_ce_5: 0.4555  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.274  m1_loss_ce_6: 0.4495  m1_loss_mask_6: 0.1686  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.4669  m1_loss_mask_7: 0.1681  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.4766  m1_loss_mask_8: 0.1672  m1_loss_dice_8: 1.292  m2_loss_ce: 0.4538  m2_loss_mask: 0.1671  m2_loss_dice: 1.307  m2_loss_ce_0: 0.5919  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.638  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.5734  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.357  m2_loss_ce_3: 0.541  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.311  m2_loss_ce_4: 0.5146  m2_loss_mask_4: 0.1672  m2_loss_dice_4: 1.312  m2_loss_ce_5: 0.4954  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.302  m2_loss_ce_6: 0.4818  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.298  m2_loss_ce_7: 0.4827  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.306  m2_loss_ce_8: 0.4779  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.285    time: 1.3691  last_time: 1.4012  data_time: 0.0552  last_data_time: 0.0635   lr: 0.0001  max_mem: 35172M
[10/01 16:25:20] d2.utils.events INFO:  eta: 0:07:17  iter: 679  total_loss: 40.54  m1_loss_ce: 0.5099  m1_loss_mask: 0.1488  m1_loss_dice: 1.211  m1_loss_ce_0: 0.5836  m1_loss_mask_0: 0.1785  m1_loss_dice_0: 1.436  m1_loss_ce_1: 0.6271  m1_loss_mask_1: 0.1688  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5942  m1_loss_mask_2: 0.1555  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5278  m1_loss_mask_3: 0.1553  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.4877  m1_loss_mask_4: 0.1522  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.5016  m1_loss_mask_5: 0.1472  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4928  m1_loss_mask_6: 0.1469  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4804  m1_loss_mask_7: 0.1489  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.5113  m1_loss_mask_8: 0.1497  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4783  m2_loss_mask: 0.1589  m2_loss_dice: 1.264  m2_loss_ce_0: 0.6078  m2_loss_mask_0: 0.1898  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6488  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.6196  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5615  m2_loss_mask_3: 0.1602  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5512  m2_loss_mask_4: 0.1584  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5017  m2_loss_mask_5: 0.1597  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4836  m2_loss_mask_6: 0.161  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.511  m2_loss_mask_7: 0.1575  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.4866  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.261    time: 1.3696  last_time: 1.3304  data_time: 0.0545  last_data_time: 0.0467   lr: 0.0001  max_mem: 35172M
[10/01 16:25:48] d2.utils.events INFO:  eta: 0:06:49  iter: 699  total_loss: 38.86  m1_loss_ce: 0.4468  m1_loss_mask: 0.1658  m1_loss_dice: 1.196  m1_loss_ce_0: 0.5737  m1_loss_mask_0: 0.1855  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.5809  m1_loss_mask_1: 0.18  m1_loss_dice_1: 1.287  m1_loss_ce_2: 0.5546  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.5074  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.4902  m1_loss_mask_4: 0.1652  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.4471  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.4429  m1_loss_mask_6: 0.165  m1_loss_dice_6: 1.178  m1_loss_ce_7: 0.4499  m1_loss_mask_7: 0.1671  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4657  m1_loss_mask_8: 0.1639  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4497  m2_loss_mask: 0.1741  m2_loss_dice: 1.193  m2_loss_ce_0: 0.6255  m2_loss_mask_0: 0.2033  m2_loss_dice_0: 1.432  m2_loss_ce_1: 0.6556  m2_loss_mask_1: 0.191  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.563  m2_loss_mask_2: 0.174  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.5196  m2_loss_mask_3: 0.1771  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5213  m2_loss_mask_4: 0.172  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.482  m2_loss_mask_5: 0.1709  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4574  m2_loss_mask_6: 0.1771  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4491  m2_loss_mask_7: 0.1738  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.4464  m2_loss_mask_8: 0.1762  m2_loss_dice_8: 1.224    time: 1.3693  last_time: 1.3352  data_time: 0.0474  last_data_time: 0.0406   lr: 0.0001  max_mem: 35172M
[10/01 16:26:15] d2.utils.events INFO:  eta: 0:06:22  iter: 719  total_loss: 39.7  m1_loss_ce: 0.4768  m1_loss_mask: 0.1638  m1_loss_dice: 1.186  m1_loss_ce_0: 0.6204  m1_loss_mask_0: 0.187  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.6463  m1_loss_mask_1: 0.1788  m1_loss_dice_1: 1.348  m1_loss_ce_2: 0.6178  m1_loss_mask_2: 0.1655  m1_loss_dice_2: 1.268  m1_loss_ce_3: 0.545  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.527  m1_loss_mask_4: 0.1682  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.5157  m1_loss_mask_5: 0.1625  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.5125  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.4873  m1_loss_mask_7: 0.1634  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.4892  m1_loss_mask_8: 0.1635  m1_loss_dice_8: 1.205  m2_loss_ce: 0.4843  m2_loss_mask: 0.1657  m2_loss_dice: 1.271  m2_loss_ce_0: 0.6201  m2_loss_mask_0: 0.1964  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.7098  m2_loss_mask_1: 0.1843  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.5787  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.5451  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5417  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.5207  m2_loss_mask_5: 0.1628  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.4858  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.5029  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.256  m2_loss_ce_8: 0.4928  m2_loss_mask_8: 0.1635  m2_loss_dice_8: 1.251    time: 1.3694  last_time: 1.4016  data_time: 0.0509  last_data_time: 0.0447   lr: 0.0001  max_mem: 35172M
[10/01 16:26:43] d2.utils.events INFO:  eta: 0:05:55  iter: 739  total_loss: 39.1  m1_loss_ce: 0.4461  m1_loss_mask: 0.1694  m1_loss_dice: 1.229  m1_loss_ce_0: 0.554  m1_loss_mask_0: 0.2019  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.6213  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5689  m1_loss_mask_2: 0.1723  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5294  m1_loss_mask_3: 0.174  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.4967  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.47  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4545  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4577  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4572  m1_loss_mask_8: 0.169  m1_loss_dice_8: 1.217  m2_loss_ce: 0.4639  m2_loss_mask: 0.1751  m2_loss_dice: 1.244  m2_loss_ce_0: 0.611  m2_loss_mask_0: 0.1993  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6713  m2_loss_mask_1: 0.1822  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.6001  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5155  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.5433  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5114  m2_loss_mask_5: 0.1726  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.4931  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.4733  m2_loss_mask_7: 0.1736  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4878  m2_loss_mask_8: 0.171  m2_loss_dice_8: 1.264    time: 1.3701  last_time: 1.3256  data_time: 0.0537  last_data_time: 0.0409   lr: 0.0001  max_mem: 35172M
[10/01 16:27:11] d2.utils.events INFO:  eta: 0:05:28  iter: 759  total_loss: 38.86  m1_loss_ce: 0.4104  m1_loss_mask: 0.1553  m1_loss_dice: 1.174  m1_loss_ce_0: 0.5418  m1_loss_mask_0: 0.1757  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.5615  m1_loss_mask_1: 0.1655  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.4942  m1_loss_mask_2: 0.1592  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.4491  m1_loss_mask_3: 0.1627  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.4458  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4374  m1_loss_mask_5: 0.1549  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.3987  m1_loss_mask_6: 0.1567  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4178  m1_loss_mask_7: 0.1555  m1_loss_dice_7: 1.188  m1_loss_ce_8: 0.4478  m1_loss_mask_8: 0.1545  m1_loss_dice_8: 1.201  m2_loss_ce: 0.4546  m2_loss_mask: 0.1594  m2_loss_dice: 1.228  m2_loss_ce_0: 0.608  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.6801  m2_loss_mask_1: 0.1708  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.5785  m2_loss_mask_2: 0.1626  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5332  m2_loss_mask_3: 0.1643  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5258  m2_loss_mask_4: 0.1611  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.4975  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4923  m2_loss_mask_6: 0.1601  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.4685  m2_loss_mask_7: 0.1599  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.465  m2_loss_mask_8: 0.1594  m2_loss_dice_8: 1.268    time: 1.3706  last_time: 1.3300  data_time: 0.0493  last_data_time: 0.0364   lr: 0.0001  max_mem: 35172M
[10/01 16:27:39] d2.utils.events INFO:  eta: 0:05:01  iter: 779  total_loss: 39.61  m1_loss_ce: 0.4234  m1_loss_mask: 0.1577  m1_loss_dice: 1.229  m1_loss_ce_0: 0.5508  m1_loss_mask_0: 0.1831  m1_loss_dice_0: 1.45  m1_loss_ce_1: 0.5888  m1_loss_mask_1: 0.1709  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5224  m1_loss_mask_2: 0.1624  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.4945  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.4499  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.4499  m1_loss_mask_5: 0.1614  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4243  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.4233  m1_loss_mask_7: 0.1596  m1_loss_dice_7: 1.241  m1_loss_ce_8: 0.4276  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.218  m2_loss_ce: 0.4729  m2_loss_mask: 0.1671  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6277  m2_loss_mask_0: 0.2013  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.188  m2_loss_dice_1: 1.423  m2_loss_ce_2: 0.581  m2_loss_mask_2: 0.1712  m2_loss_dice_2: 1.406  m2_loss_ce_3: 0.5217  m2_loss_mask_3: 0.1733  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.4927  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.479  m2_loss_mask_5: 0.1666  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.4701  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.4736  m2_loss_mask_7: 0.1693  m2_loss_dice_7: 1.292  m2_loss_ce_8: 0.4531  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.292    time: 1.3712  last_time: 1.3508  data_time: 0.0502  last_data_time: 0.0666   lr: 0.0001  max_mem: 35172M
[10/01 16:28:06] d2.utils.events INFO:  eta: 0:04:33  iter: 799  total_loss: 37.6  m1_loss_ce: 0.3832  m1_loss_mask: 0.1633  m1_loss_dice: 1.146  m1_loss_ce_0: 0.4971  m1_loss_mask_0: 0.1881  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.5757  m1_loss_mask_1: 0.1847  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.5276  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.214  m1_loss_ce_3: 0.4415  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.182  m1_loss_ce_4: 0.4227  m1_loss_mask_4: 0.1685  m1_loss_dice_4: 1.174  m1_loss_ce_5: 0.4223  m1_loss_mask_5: 0.1679  m1_loss_dice_5: 1.173  m1_loss_ce_6: 0.4005  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.3872  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.3937  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.158  m2_loss_ce: 0.4641  m2_loss_mask: 0.175  m2_loss_dice: 1.222  m2_loss_ce_0: 0.5667  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6221  m2_loss_mask_1: 0.1928  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5641  m2_loss_mask_2: 0.1796  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.515  m2_loss_mask_3: 0.1781  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.5101  m2_loss_mask_4: 0.1727  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.47  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.4506  m2_loss_mask_6: 0.1743  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4474  m2_loss_mask_7: 0.1775  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4629  m2_loss_mask_8: 0.176  m2_loss_dice_8: 1.185    time: 1.3706  last_time: 1.3855  data_time: 0.0449  last_data_time: 0.0428   lr: 0.0001  max_mem: 35172M
[10/01 16:28:34] d2.utils.events INFO:  eta: 0:04:06  iter: 819  total_loss: 38.93  m1_loss_ce: 0.4336  m1_loss_mask: 0.1697  m1_loss_dice: 1.173  m1_loss_ce_0: 0.5466  m1_loss_mask_0: 0.2051  m1_loss_dice_0: 1.355  m1_loss_ce_1: 0.5977  m1_loss_mask_1: 0.1814  m1_loss_dice_1: 1.286  m1_loss_ce_2: 0.5305  m1_loss_mask_2: 0.1799  m1_loss_dice_2: 1.235  m1_loss_ce_3: 0.4903  m1_loss_mask_3: 0.1753  m1_loss_dice_3: 1.187  m1_loss_ce_4: 0.4669  m1_loss_mask_4: 0.1736  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.4807  m1_loss_mask_5: 0.1664  m1_loss_dice_5: 1.171  m1_loss_ce_6: 0.4497  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.4587  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4502  m1_loss_mask_8: 0.166  m1_loss_dice_8: 1.136  m2_loss_ce: 0.4469  m2_loss_mask: 0.1715  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6041  m2_loss_mask_0: 0.2153  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6604  m2_loss_mask_1: 0.1962  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.6053  m2_loss_mask_2: 0.1792  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5287  m2_loss_mask_3: 0.1733  m2_loss_dice_3: 1.244  m2_loss_ce_4: 0.5143  m2_loss_mask_4: 0.1738  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5023  m2_loss_mask_5: 0.1716  m2_loss_dice_5: 1.208  m2_loss_ce_6: 0.4803  m2_loss_mask_6: 0.1749  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.4555  m2_loss_mask_7: 0.174  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4494  m2_loss_mask_8: 0.1729  m2_loss_dice_8: 1.209    time: 1.3704  last_time: 1.3248  data_time: 0.0436  last_data_time: 0.0353   lr: 0.0001  max_mem: 35172M
[10/01 16:29:01] d2.utils.events INFO:  eta: 0:03:38  iter: 839  total_loss: 38.75  m1_loss_ce: 0.3957  m1_loss_mask: 0.1654  m1_loss_dice: 1.169  m1_loss_ce_0: 0.5213  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.359  m1_loss_ce_1: 0.5727  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.275  m1_loss_ce_2: 0.5199  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.4732  m1_loss_mask_3: 0.168  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.4429  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.4377  m1_loss_mask_5: 0.1653  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4224  m1_loss_mask_6: 0.1669  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.3965  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.3998  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.184  m2_loss_ce: 0.4624  m2_loss_mask: 0.1727  m2_loss_dice: 1.237  m2_loss_ce_0: 0.5864  m2_loss_mask_0: 0.1945  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6685  m2_loss_mask_1: 0.1887  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.5774  m2_loss_mask_2: 0.1717  m2_loss_dice_2: 1.272  m2_loss_ce_3: 0.5323  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5084  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5016  m2_loss_mask_5: 0.1707  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4909  m2_loss_mask_6: 0.1737  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4602  m2_loss_mask_7: 0.1744  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4677  m2_loss_mask_8: 0.1737  m2_loss_dice_8: 1.242    time: 1.3702  last_time: 1.3547  data_time: 0.0439  last_data_time: 0.0369   lr: 0.0001  max_mem: 35172M
[10/01 16:29:28] d2.utils.events INFO:  eta: 0:03:11  iter: 859  total_loss: 37.79  m1_loss_ce: 0.4525  m1_loss_mask: 0.1656  m1_loss_dice: 1.15  m1_loss_ce_0: 0.5525  m1_loss_mask_0: 0.1898  m1_loss_dice_0: 1.359  m1_loss_ce_1: 0.5909  m1_loss_mask_1: 0.176  m1_loss_dice_1: 1.287  m1_loss_ce_2: 0.5498  m1_loss_mask_2: 0.1718  m1_loss_dice_2: 1.217  m1_loss_ce_3: 0.4756  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4786  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.153  m1_loss_ce_5: 0.4567  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.171  m1_loss_ce_6: 0.4408  m1_loss_mask_6: 0.1673  m1_loss_dice_6: 1.155  m1_loss_ce_7: 0.4451  m1_loss_mask_7: 0.1686  m1_loss_dice_7: 1.156  m1_loss_ce_8: 0.4334  m1_loss_mask_8: 0.1635  m1_loss_dice_8: 1.154  m2_loss_ce: 0.4832  m2_loss_mask: 0.162  m2_loss_dice: 1.188  m2_loss_ce_0: 0.5724  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6517  m2_loss_mask_1: 0.181  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.5697  m2_loss_mask_2: 0.1671  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5368  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.212  m2_loss_ce_4: 0.5321  m2_loss_mask_4: 0.1617  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.5067  m2_loss_mask_5: 0.1605  m2_loss_dice_5: 1.206  m2_loss_ce_6: 0.4917  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.188  m2_loss_ce_7: 0.4873  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.472  m2_loss_mask_8: 0.1596  m2_loss_dice_8: 1.185    time: 1.3699  last_time: 1.2916  data_time: 0.0475  last_data_time: 0.0388   lr: 0.0001  max_mem: 35172M
[10/01 16:29:56] d2.utils.events INFO:  eta: 0:02:44  iter: 879  total_loss: 38.52  m1_loss_ce: 0.4324  m1_loss_mask: 0.1571  m1_loss_dice: 1.189  m1_loss_ce_0: 0.5502  m1_loss_mask_0: 0.1823  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.5703  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.267  m1_loss_ce_2: 0.5533  m1_loss_mask_2: 0.157  m1_loss_dice_2: 1.232  m1_loss_ce_3: 0.4589  m1_loss_mask_3: 0.1546  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.4478  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.207  m1_loss_ce_5: 0.4585  m1_loss_mask_5: 0.1539  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4175  m1_loss_mask_6: 0.1531  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.4274  m1_loss_mask_7: 0.1583  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.4616  m1_loss_mask_8: 0.1549  m1_loss_dice_8: 1.201  m2_loss_ce: 0.4579  m2_loss_mask: 0.1661  m2_loss_dice: 1.278  m2_loss_ce_0: 0.5899  m2_loss_mask_0: 0.1941  m2_loss_dice_0: 1.542  m2_loss_ce_1: 0.6434  m2_loss_mask_1: 0.1905  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.5611  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5198  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5014  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.4893  m2_loss_mask_5: 0.1681  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4798  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.4714  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.4771  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.26    time: 1.3699  last_time: 1.3491  data_time: 0.0461  last_data_time: 0.0427   lr: 0.0001  max_mem: 35172M
[10/01 16:30:23] d2.utils.events INFO:  eta: 0:02:16  iter: 899  total_loss: 38.7  m1_loss_ce: 0.4076  m1_loss_mask: 0.1661  m1_loss_dice: 1.149  m1_loss_ce_0: 0.566  m1_loss_mask_0: 0.1965  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.5504  m1_loss_mask_1: 0.1755  m1_loss_dice_1: 1.288  m1_loss_ce_2: 0.541  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.4606  m1_loss_mask_3: 0.1702  m1_loss_dice_3: 1.187  m1_loss_ce_4: 0.4463  m1_loss_mask_4: 0.1701  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.4107  m1_loss_mask_5: 0.1689  m1_loss_dice_5: 1.19  m1_loss_ce_6: 0.4078  m1_loss_mask_6: 0.1674  m1_loss_dice_6: 1.12  m1_loss_ce_7: 0.3862  m1_loss_mask_7: 0.168  m1_loss_dice_7: 1.155  m1_loss_ce_8: 0.4307  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.171  m2_loss_ce: 0.4487  m2_loss_mask: 0.1755  m2_loss_dice: 1.191  m2_loss_ce_0: 0.5862  m2_loss_mask_0: 0.2057  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6724  m2_loss_mask_1: 0.1925  m2_loss_dice_1: 1.31  m2_loss_ce_2: 0.5535  m2_loss_mask_2: 0.1744  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5231  m2_loss_mask_3: 0.1756  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.488  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.22  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.1742  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.4499  m2_loss_mask_6: 0.1738  m2_loss_dice_6: 1.173  m2_loss_ce_7: 0.458  m2_loss_mask_7: 0.1766  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.4354  m2_loss_mask_8: 0.1751  m2_loss_dice_8: 1.189    time: 1.3698  last_time: 1.4301  data_time: 0.0533  last_data_time: 0.0657   lr: 0.0001  max_mem: 35172M
[10/01 16:30:51] d2.utils.events INFO:  eta: 0:01:49  iter: 919  total_loss: 39.2  m1_loss_ce: 0.4238  m1_loss_mask: 0.1663  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5722  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.6051  m1_loss_mask_1: 0.1767  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.5487  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.4679  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.445  m1_loss_mask_4: 0.166  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.4766  m1_loss_mask_5: 0.1657  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.4368  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.208  m1_loss_ce_7: 0.4165  m1_loss_mask_7: 0.1684  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.4192  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.223  m2_loss_ce: 0.4615  m2_loss_mask: 0.1657  m2_loss_dice: 1.248  m2_loss_ce_0: 0.6029  m2_loss_mask_0: 0.2029  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.671  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.5993  m2_loss_mask_2: 0.1735  m2_loss_dice_2: 1.292  m2_loss_ce_3: 0.5401  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.297  m2_loss_ce_4: 0.5201  m2_loss_mask_4: 0.1665  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.4955  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4687  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5011  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.4618  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.244    time: 1.3702  last_time: 1.3662  data_time: 0.0572  last_data_time: 0.0336   lr: 0.0001  max_mem: 35172M
[10/01 16:31:19] d2.utils.events INFO:  eta: 0:01:22  iter: 939  total_loss: 40.44  m1_loss_ce: 0.4479  m1_loss_mask: 0.1579  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5598  m1_loss_mask_0: 0.1863  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.5891  m1_loss_mask_1: 0.1671  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.5419  m1_loss_mask_2: 0.1607  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.4788  m1_loss_mask_3: 0.1608  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.4687  m1_loss_mask_4: 0.156  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.4472  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4392  m1_loss_mask_6: 0.1589  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4677  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.4384  m1_loss_mask_8: 0.1594  m1_loss_dice_8: 1.211  m2_loss_ce: 0.4917  m2_loss_mask: 0.1634  m2_loss_dice: 1.307  m2_loss_ce_0: 0.6529  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.516  m2_loss_ce_1: 0.6926  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.468  m2_loss_ce_2: 0.588  m2_loss_mask_2: 0.1687  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.5363  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.333  m2_loss_ce_4: 0.5452  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.309  m2_loss_ce_5: 0.5226  m2_loss_mask_5: 0.1622  m2_loss_dice_5: 1.306  m2_loss_ce_6: 0.5018  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.296  m2_loss_ce_7: 0.5048  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.29  m2_loss_ce_8: 0.4897  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.305    time: 1.3706  last_time: 1.4156  data_time: 0.0497  last_data_time: 0.0562   lr: 0.0001  max_mem: 35172M
[10/01 16:31:47] d2.utils.events INFO:  eta: 0:00:54  iter: 959  total_loss: 38.99  m1_loss_ce: 0.4255  m1_loss_mask: 0.1641  m1_loss_dice: 1.214  m1_loss_ce_0: 0.5276  m1_loss_mask_0: 0.1873  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.5849  m1_loss_mask_1: 0.1732  m1_loss_dice_1: 1.308  m1_loss_ce_2: 0.5657  m1_loss_mask_2: 0.1604  m1_loss_dice_2: 1.236  m1_loss_ce_3: 0.4753  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.4788  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.4372  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.4547  m1_loss_mask_6: 0.1616  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.4283  m1_loss_mask_7: 0.1628  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4324  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.186  m2_loss_ce: 0.455  m2_loss_mask: 0.1656  m2_loss_dice: 1.217  m2_loss_ce_0: 0.5752  m2_loss_mask_0: 0.2035  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6336  m2_loss_mask_1: 0.1842  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.5595  m2_loss_mask_2: 0.1741  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5308  m2_loss_mask_3: 0.1734  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5073  m2_loss_mask_4: 0.1724  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.4886  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.4739  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.4819  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.268  m2_loss_ce_8: 0.4547  m2_loss_mask_8: 0.1653  m2_loss_dice_8: 1.233    time: 1.3708  last_time: 1.3437  data_time: 0.0487  last_data_time: 0.0438   lr: 0.0001  max_mem: 35172M
[10/01 16:32:14] d2.utils.events INFO:  eta: 0:00:27  iter: 979  total_loss: 38.7  m1_loss_ce: 0.4332  m1_loss_mask: 0.1661  m1_loss_dice: 1.166  m1_loss_ce_0: 0.517  m1_loss_mask_0: 0.1961  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.5798  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.314  m1_loss_ce_2: 0.5519  m1_loss_mask_2: 0.1736  m1_loss_dice_2: 1.232  m1_loss_ce_3: 0.4816  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4647  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.4841  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.4418  m1_loss_mask_6: 0.1676  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.4353  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.191  m1_loss_ce_8: 0.4476  m1_loss_mask_8: 0.1679  m1_loss_dice_8: 1.183  m2_loss_ce: 0.4911  m2_loss_mask: 0.162  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5943  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6764  m2_loss_mask_1: 0.1894  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.5947  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.262  m2_loss_ce_3: 0.5602  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.517  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.4963  m2_loss_mask_5: 0.1643  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.4912  m2_loss_mask_6: 0.1656  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.504  m2_loss_mask_7: 0.166  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4849  m2_loss_mask_8: 0.1615  m2_loss_dice_8: 1.217    time: 1.3707  last_time: 1.3897  data_time: 0.0484  last_data_time: 0.0392   lr: 0.0001  max_mem: 35172M
[10/01 16:32:41] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2/model_final.pth
[10/01 16:32:44] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 41.32  m1_loss_ce: 0.4819  m1_loss_mask: 0.1536  m1_loss_dice: 1.224  m1_loss_ce_0: 0.6012  m1_loss_mask_0: 0.1766  m1_loss_dice_0: 1.442  m1_loss_ce_1: 0.6405  m1_loss_mask_1: 0.1678  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5982  m1_loss_mask_2: 0.1598  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.532  m1_loss_mask_3: 0.1615  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.5315  m1_loss_mask_4: 0.1573  m1_loss_dice_4: 1.285  m1_loss_ce_5: 0.5217  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4735  m1_loss_mask_6: 0.1539  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4465  m1_loss_mask_7: 0.1544  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.4675  m1_loss_mask_8: 0.153  m1_loss_dice_8: 1.229  m2_loss_ce: 0.518  m2_loss_mask: 0.1564  m2_loss_dice: 1.31  m2_loss_ce_0: 0.668  m2_loss_mask_0: 0.1826  m2_loss_dice_0: 1.495  m2_loss_ce_1: 0.7231  m2_loss_mask_1: 0.1741  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.6322  m2_loss_mask_2: 0.1583  m2_loss_dice_2: 1.378  m2_loss_ce_3: 0.5851  m2_loss_mask_3: 0.1587  m2_loss_dice_3: 1.336  m2_loss_ce_4: 0.5615  m2_loss_mask_4: 0.1559  m2_loss_dice_4: 1.335  m2_loss_ce_5: 0.5579  m2_loss_mask_5: 0.1561  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5153  m2_loss_mask_6: 0.158  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.5071  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.286  m2_loss_ce_8: 0.493  m2_loss_mask_8: 0.1547  m2_loss_dice_8: 1.299    time: 1.3706  last_time: 1.3216  data_time: 0.0469  last_data_time: 0.0396   lr: 0.0001  max_mem: 35172M
[10/01 16:32:44] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:22:47 (1.3706 s / it)
[10/01 16:32:44] d2.engine.hooks INFO: Total training time: 0:22:56 (0:00:08 on hooks)
[10/01 16:32:44] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/01 16:32:44] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/01 16:32:44] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/01 16:32:44] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/01 16:32:44] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/01 16:34:08] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evaldt8hdmhf ...
[10/01 16:35:11] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.321 | 80.798 | 69.928 |      19       |
| Things | 47.590 | 80.142 | 59.456 |       8       |
| Stuff  | 64.397 | 81.275 | 77.545 |      11       |
[10/01 16:35:11] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.176 | 97.580 | 99.586 |     Stuff     |
| class_8  | 71.644 | 84.551 | 84.735 |     Stuff     |
| class_11 | 86.855 | 89.217 | 97.352 |     Stuff     |
| class_12 | 42.147 | 79.663 | 52.907 |     Stuff     |
| class_13 | 38.246 | 75.474 | 50.674 |     Stuff     |
| class_17 | 42.184 | 63.736 | 66.186 |     Stuff     |
| class_19 | 50.981 | 68.610 | 74.306 |     Stuff     |
| class_20 | 67.473 | 77.906 | 86.609 |     Stuff     |
| class_21 | 89.187 | 90.110 | 98.975 |     Stuff     |
| class_22 | 34.642 | 75.435 | 45.923 |     Stuff     |
| class_23 | 87.837 | 91.743 | 95.742 |     Stuff     |
| class_24 | 53.656 | 77.184 | 69.516 |    Things     |
| class_25 | 47.657 | 73.976 | 64.422 |    Things     |
| class_26 | 65.940 | 83.094 | 79.356 |    Things     |
| class_27 | 45.321 | 87.064 | 52.055 |    Things     |
| class_28 | 60.590 | 89.908 | 67.391 |    Things     |
| class_31 | 28.303 | 84.908 | 33.333 |    Things     |
| class_32 | 37.219 | 74.439 | 50.000 |    Things     |
| class_33 | 42.035 | 70.561 | 59.572 |    Things     |
[10/01 16:35:11] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/01 16:35:11] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/01 16:35:11] d2.evaluation.testing INFO: copypaste: 57.3207,80.7978,69.9285,47.5901,80.1417,59.4558,64.3974,81.2750,77.5449,97.1761,97.5801,99.5859,71.6443,84.5515,84.7345,86.8552,89.2174,97.3523,42.1473,79.6630,52.9070,38.2456,75.4740,50.6739,42.1838,63.7356,66.1856,50.9811,68.6100,74.3056,67.4733,77.9055,86.6091,89.1870,90.1102,98.9754,34.6417,75.4347,45.9227,87.8365,91.7427,95.7422,53.6556,77.1840,69.5164,47.6569,73.9761,64.4220,65.9403,83.0938,79.3564,45.3210,87.0640,52.0548,60.5905,89.9084,67.3913,28.3027,84.9081,33.3333,37.2195,74.4389,50.0000,42.0346,70.5605,59.5724
