[08/18 21:09:39] detectron2 INFO: Rank of current process: 0. World size: 2
[08/18 21:09:40] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/18 21:09:40] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_0_7_sum.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/18 21:09:40] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_0_7_sum.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_sum
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/18 21:09:40] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_sum
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/18 21:09:40] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_sum/config.yaml
[08/18 21:09:40] d2.utils.env INFO: Using a generated random seed 42621089
[08/18 21:09:44] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/18 21:09:44] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/18 21:09:45] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/18 21:09:45] d2.data.build INFO: Using training sampler TrainingSampler
[08/18 21:09:46] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/18 21:09:46] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/18 21:09:46] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/18 21:09:46] d2.data.build INFO: Making batched data loader with batch_size=4
[08/18 21:09:46] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/18 21:09:50] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/18 21:09:50] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/18 21:09:50] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/18 21:09:50] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/18 21:09:50] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/18 21:10:26] d2.utils.events INFO:  eta: 0:23:56  iter: 19  total_loss: 44.82  m1_loss_ce: 0.5425  m1_loss_mask: 0.158  m1_loss_dice: 1.225  m1_loss_ce_0: 0.6628  m1_loss_mask_0: 0.1914  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.7249  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.6813  m1_loss_mask_2: 0.1688  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.6267  m1_loss_mask_3: 0.162  m1_loss_dice_3: 1.213  m1_loss_ce_4: 0.5545  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.5473  m1_loss_mask_5: 0.1674  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.5461  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.5497  m1_loss_mask_7: 0.16  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.5532  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.218  m2_loss_ce: 0.5431  m2_loss_mask: 0.1606  m2_loss_dice: 1.206  m2_loss_ce_0: 0.6384  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.7101  m2_loss_mask_1: 0.1721  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6549  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.6094  m2_loss_mask_3: 0.1654  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5666  m2_loss_mask_4: 0.1648  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.569  m2_loss_mask_5: 0.1646  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.5285  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.5384  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.5303  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.214  com_loss_ce: 2.148  com_loss_mask: 0.6936  com_loss_dice: 0.9796    time: 1.4709  last_time: 1.4698  data_time: 0.2254  last_data_time: 0.0440   lr: 0.0001  max_mem: 34636M
[08/18 21:10:56] d2.utils.events INFO:  eta: 0:23:22  iter: 39  total_loss: 45.41  m1_loss_ce: 0.5456  m1_loss_mask: 0.1752  m1_loss_dice: 1.266  m1_loss_ce_0: 0.6193  m1_loss_mask_0: 0.2033  m1_loss_dice_0: 1.524  m1_loss_ce_1: 0.7136  m1_loss_mask_1: 0.1852  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.6223  m1_loss_mask_2: 0.178  m1_loss_dice_2: 1.373  m1_loss_ce_3: 0.5745  m1_loss_mask_3: 0.1764  m1_loss_dice_3: 1.326  m1_loss_ce_4: 0.5228  m1_loss_mask_4: 0.1745  m1_loss_dice_4: 1.315  m1_loss_ce_5: 0.5495  m1_loss_mask_5: 0.1757  m1_loss_dice_5: 1.297  m1_loss_ce_6: 0.505  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.307  m1_loss_ce_7: 0.5294  m1_loss_mask_7: 0.1712  m1_loss_dice_7: 1.271  m1_loss_ce_8: 0.5304  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.289  m2_loss_ce: 0.5079  m2_loss_mask: 0.1654  m2_loss_dice: 1.265  m2_loss_ce_0: 0.6273  m2_loss_mask_0: 0.2019  m2_loss_dice_0: 1.491  m2_loss_ce_1: 0.6819  m2_loss_mask_1: 0.1823  m2_loss_dice_1: 1.445  m2_loss_ce_2: 0.6334  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.355  m2_loss_ce_3: 0.5743  m2_loss_mask_3: 0.1701  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5436  m2_loss_mask_4: 0.1705  m2_loss_dice_4: 1.308  m2_loss_ce_5: 0.5622  m2_loss_mask_5: 0.169  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.5324  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.296  m2_loss_ce_7: 0.5192  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5294  m2_loss_mask_8: 0.1653  m2_loss_dice_8: 1.266  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.98    time: 1.4813  last_time: 1.5724  data_time: 0.0464  last_data_time: 0.0414   lr: 0.0001  max_mem: 34764M
[08/18 21:11:26] d2.utils.events INFO:  eta: 0:22:59  iter: 59  total_loss: 45.66  m1_loss_ce: 0.5624  m1_loss_mask: 0.1627  m1_loss_dice: 1.335  m1_loss_ce_0: 0.692  m1_loss_mask_0: 0.193  m1_loss_dice_0: 1.453  m1_loss_ce_1: 0.7247  m1_loss_mask_1: 0.1767  m1_loss_dice_1: 1.419  m1_loss_ce_2: 0.675  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.366  m1_loss_ce_3: 0.622  m1_loss_mask_3: 0.1665  m1_loss_dice_3: 1.317  m1_loss_ce_4: 0.5869  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.295  m1_loss_ce_5: 0.6048  m1_loss_mask_5: 0.1646  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.5915  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.286  m1_loss_ce_7: 0.5665  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.5504  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.257  m2_loss_ce: 0.5499  m2_loss_mask: 0.1661  m2_loss_dice: 1.264  m2_loss_ce_0: 0.669  m2_loss_mask_0: 0.1898  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.7137  m2_loss_mask_1: 0.1761  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.674  m2_loss_mask_2: 0.1675  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.6373  m2_loss_mask_3: 0.165  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5757  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.334  m2_loss_ce_5: 0.6135  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5461  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.5375  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.5631  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.276  com_loss_ce: 2.144  com_loss_mask: 0.6936  com_loss_dice: 0.9801    time: 1.4798  last_time: 1.4341  data_time: 0.0499  last_data_time: 0.1059   lr: 0.0001  max_mem: 34845M
[08/18 21:11:56] d2.utils.events INFO:  eta: 0:22:31  iter: 79  total_loss: 44.1  m1_loss_ce: 0.5997  m1_loss_mask: 0.1673  m1_loss_dice: 1.176  m1_loss_ce_0: 0.6359  m1_loss_mask_0: 0.1966  m1_loss_dice_0: 1.389  m1_loss_ce_1: 0.7064  m1_loss_mask_1: 0.1806  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.6699  m1_loss_mask_2: 0.1744  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5751  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.6007  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.2  m1_loss_ce_5: 0.5901  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.5758  m1_loss_mask_6: 0.1689  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.5936  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.5868  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.135  m2_loss_ce: 0.5573  m2_loss_mask: 0.1717  m2_loss_dice: 1.196  m2_loss_ce_0: 0.6373  m2_loss_mask_0: 0.2049  m2_loss_dice_0: 1.394  m2_loss_ce_1: 0.7044  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.6451  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.247  m2_loss_ce_3: 0.6427  m2_loss_mask_3: 0.1724  m2_loss_dice_3: 1.194  m2_loss_ce_4: 0.5763  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.5619  m2_loss_mask_5: 0.1717  m2_loss_dice_5: 1.188  m2_loss_ce_6: 0.5804  m2_loss_mask_6: 0.1719  m2_loss_dice_6: 1.198  m2_loss_ce_7: 0.549  m2_loss_mask_7: 0.173  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.5412  m2_loss_mask_8: 0.1729  m2_loss_dice_8: 1.181  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9788    time: 1.4804  last_time: 1.5243  data_time: 0.0438  last_data_time: 0.0525   lr: 0.0001  max_mem: 34845M
[08/18 21:12:26] d2.utils.events INFO:  eta: 0:22:10  iter: 99  total_loss: 44.33  m1_loss_ce: 0.5334  m1_loss_mask: 0.1702  m1_loss_dice: 1.232  m1_loss_ce_0: 0.6865  m1_loss_mask_0: 0.1947  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.7152  m1_loss_mask_1: 0.1863  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.6502  m1_loss_mask_2: 0.1759  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.5637  m1_loss_mask_3: 0.1751  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.581  m1_loss_mask_4: 0.171  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.5547  m1_loss_mask_5: 0.1713  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.5614  m1_loss_mask_6: 0.1716  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.537  m1_loss_mask_7: 0.1711  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.5504  m1_loss_mask_8: 0.1717  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5621  m2_loss_mask: 0.1681  m2_loss_dice: 1.192  m2_loss_ce_0: 0.6244  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.6928  m2_loss_mask_1: 0.1807  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6232  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5615  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5464  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.5442  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.225  m2_loss_ce_6: 0.5223  m2_loss_mask_6: 0.1702  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.4988  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.5303  m2_loss_mask_8: 0.1698  m2_loss_dice_8: 1.216  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9798    time: 1.4835  last_time: 1.5043  data_time: 0.0420  last_data_time: 0.0384   lr: 0.0001  max_mem: 34845M
[08/18 21:12:56] d2.utils.events INFO:  eta: 0:21:41  iter: 119  total_loss: 45.58  m1_loss_ce: 0.538  m1_loss_mask: 0.1817  m1_loss_dice: 1.169  m1_loss_ce_0: 0.6519  m1_loss_mask_0: 0.2136  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.6943  m1_loss_mask_1: 0.1953  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.6522  m1_loss_mask_2: 0.1881  m1_loss_dice_2: 1.291  m1_loss_ce_3: 0.6097  m1_loss_mask_3: 0.1839  m1_loss_dice_3: 1.224  m1_loss_ce_4: 0.5534  m1_loss_mask_4: 0.1835  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.5683  m1_loss_mask_5: 0.1819  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5673  m1_loss_mask_6: 0.1824  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.566  m1_loss_mask_7: 0.1825  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.5446  m1_loss_mask_8: 0.1824  m1_loss_dice_8: 1.22  m2_loss_ce: 0.5393  m2_loss_mask: 0.1762  m2_loss_dice: 1.179  m2_loss_ce_0: 0.6383  m2_loss_mask_0: 0.2038  m2_loss_dice_0: 1.4  m2_loss_ce_1: 0.6611  m2_loss_mask_1: 0.1881  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6516  m2_loss_mask_2: 0.183  m2_loss_dice_2: 1.277  m2_loss_ce_3: 0.5896  m2_loss_mask_3: 0.1802  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.5406  m2_loss_mask_4: 0.1834  m2_loss_dice_4: 1.217  m2_loss_ce_5: 0.5687  m2_loss_mask_5: 0.1783  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5697  m2_loss_mask_6: 0.1794  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5245  m2_loss_mask_7: 0.1789  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.5613  m2_loss_mask_8: 0.1795  m2_loss_dice_8: 1.214  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9789    time: 1.4820  last_time: 1.5558  data_time: 0.0403  last_data_time: 0.0514   lr: 0.0001  max_mem: 34845M
[08/18 21:13:26] d2.utils.events INFO:  eta: 0:21:15  iter: 139  total_loss: 44.21  m1_loss_ce: 0.5419  m1_loss_mask: 0.1709  m1_loss_dice: 1.189  m1_loss_ce_0: 0.6129  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.6674  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6276  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.5972  m1_loss_mask_3: 0.1739  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.5466  m1_loss_mask_4: 0.1739  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.543  m1_loss_mask_5: 0.1752  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.5487  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.5233  m1_loss_mask_7: 0.1705  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.5453  m1_loss_mask_8: 0.1695  m1_loss_dice_8: 1.202  m2_loss_ce: 0.5485  m2_loss_mask: 0.1685  m2_loss_dice: 1.18  m2_loss_ce_0: 0.6157  m2_loss_mask_0: 0.2039  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6791  m2_loss_mask_1: 0.1797  m2_loss_dice_1: 1.33  m2_loss_ce_2: 0.6663  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.246  m2_loss_ce_3: 0.5773  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.21  m2_loss_ce_4: 0.5621  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.191  m2_loss_ce_5: 0.5558  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.5152  m2_loss_mask_6: 0.1684  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.5099  m2_loss_mask_7: 0.1676  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.5078  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.199  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9787    time: 1.4858  last_time: 1.4378  data_time: 0.0433  last_data_time: 0.0469   lr: 0.0001  max_mem: 34845M
[08/18 21:13:56] d2.utils.events INFO:  eta: 0:20:46  iter: 159  total_loss: 44.63  m1_loss_ce: 0.5134  m1_loss_mask: 0.1516  m1_loss_dice: 1.242  m1_loss_ce_0: 0.645  m1_loss_mask_0: 0.1832  m1_loss_dice_0: 1.504  m1_loss_ce_1: 0.6553  m1_loss_mask_1: 0.1691  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.5887  m1_loss_mask_2: 0.1683  m1_loss_dice_2: 1.34  m1_loss_ce_3: 0.5489  m1_loss_mask_3: 0.1607  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.524  m1_loss_mask_4: 0.1592  m1_loss_dice_4: 1.277  m1_loss_ce_5: 0.5254  m1_loss_mask_5: 0.1552  m1_loss_dice_5: 1.268  m1_loss_ce_6: 0.5055  m1_loss_mask_6: 0.1576  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.5136  m1_loss_mask_7: 0.1549  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.4922  m1_loss_mask_8: 0.1537  m1_loss_dice_8: 1.252  m2_loss_ce: 0.5383  m2_loss_mask: 0.1552  m2_loss_dice: 1.226  m2_loss_ce_0: 0.6607  m2_loss_mask_0: 0.1837  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.6585  m2_loss_mask_1: 0.1671  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.5934  m2_loss_mask_2: 0.1582  m2_loss_dice_2: 1.337  m2_loss_ce_3: 0.5475  m2_loss_mask_3: 0.1556  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5933  m2_loss_mask_4: 0.1562  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5369  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.276  m2_loss_ce_6: 0.5041  m2_loss_mask_6: 0.1564  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.5356  m2_loss_mask_7: 0.155  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5558  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.251  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.9817    time: 1.4862  last_time: 1.5544  data_time: 0.0472  last_data_time: 0.0411   lr: 0.0001  max_mem: 34845M
[08/18 21:14:26] d2.utils.events INFO:  eta: 0:20:16  iter: 179  total_loss: 45.37  m1_loss_ce: 0.5408  m1_loss_mask: 0.1679  m1_loss_dice: 1.206  m1_loss_ce_0: 0.6509  m1_loss_mask_0: 0.1968  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.7248  m1_loss_mask_1: 0.1888  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.6473  m1_loss_mask_2: 0.1826  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5889  m1_loss_mask_3: 0.1724  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5697  m1_loss_mask_4: 0.1725  m1_loss_dice_4: 1.28  m1_loss_ce_5: 0.5732  m1_loss_mask_5: 0.1688  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.5376  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.5571  m1_loss_mask_7: 0.1683  m1_loss_dice_7: 1.241  m1_loss_ce_8: 0.5296  m1_loss_mask_8: 0.169  m1_loss_dice_8: 1.222  m2_loss_ce: 0.5143  m2_loss_mask: 0.1666  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6042  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.7115  m2_loss_mask_1: 0.1872  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6605  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.6262  m2_loss_mask_3: 0.1717  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.5614  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.591  m2_loss_mask_5: 0.1685  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.5562  m2_loss_mask_6: 0.1681  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5221  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.5445  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.215  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9794    time: 1.4856  last_time: 1.4856  data_time: 0.0411  last_data_time: 0.0419   lr: 0.0001  max_mem: 34845M
[08/18 21:14:56] d2.utils.events INFO:  eta: 0:19:47  iter: 199  total_loss: 45.94  m1_loss_ce: 0.5461  m1_loss_mask: 0.1604  m1_loss_dice: 1.326  m1_loss_ce_0: 0.6742  m1_loss_mask_0: 0.1949  m1_loss_dice_0: 1.56  m1_loss_ce_1: 0.7211  m1_loss_mask_1: 0.1733  m1_loss_dice_1: 1.47  m1_loss_ce_2: 0.6581  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.401  m1_loss_ce_3: 0.5905  m1_loss_mask_3: 0.1646  m1_loss_dice_3: 1.344  m1_loss_ce_4: 0.5826  m1_loss_mask_4: 0.1629  m1_loss_dice_4: 1.351  m1_loss_ce_5: 0.5615  m1_loss_mask_5: 0.1601  m1_loss_dice_5: 1.333  m1_loss_ce_6: 0.5421  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.33  m1_loss_ce_7: 0.5326  m1_loss_mask_7: 0.1608  m1_loss_dice_7: 1.31  m1_loss_ce_8: 0.5539  m1_loss_mask_8: 0.1597  m1_loss_dice_8: 1.331  m2_loss_ce: 0.5747  m2_loss_mask: 0.158  m2_loss_dice: 1.304  m2_loss_ce_0: 0.6568  m2_loss_mask_0: 0.1911  m2_loss_dice_0: 1.577  m2_loss_ce_1: 0.7029  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.464  m2_loss_ce_2: 0.6444  m2_loss_mask_2: 0.1607  m2_loss_dice_2: 1.37  m2_loss_ce_3: 0.6135  m2_loss_mask_3: 0.159  m2_loss_dice_3: 1.334  m2_loss_ce_4: 0.5962  m2_loss_mask_4: 0.1597  m2_loss_dice_4: 1.359  m2_loss_ce_5: 0.5791  m2_loss_mask_5: 0.1572  m2_loss_dice_5: 1.341  m2_loss_ce_6: 0.5731  m2_loss_mask_6: 0.1574  m2_loss_dice_6: 1.316  m2_loss_ce_7: 0.5442  m2_loss_mask_7: 0.1568  m2_loss_dice_7: 1.354  m2_loss_ce_8: 0.5571  m2_loss_mask_8: 0.1562  m2_loss_dice_8: 1.336  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9826    time: 1.4865  last_time: 1.5296  data_time: 0.0444  last_data_time: 0.0337   lr: 0.0001  max_mem: 34845M
[08/18 21:15:26] d2.utils.events INFO:  eta: 0:19:18  iter: 219  total_loss: 44.74  m1_loss_ce: 0.5316  m1_loss_mask: 0.1634  m1_loss_dice: 1.241  m1_loss_ce_0: 0.6443  m1_loss_mask_0: 0.1844  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.7087  m1_loss_mask_1: 0.1681  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.6301  m1_loss_mask_2: 0.1611  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.5812  m1_loss_mask_3: 0.1611  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5356  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.266  m1_loss_ce_5: 0.5183  m1_loss_mask_5: 0.1595  m1_loss_dice_5: 1.304  m1_loss_ce_6: 0.5356  m1_loss_mask_6: 0.1603  m1_loss_dice_6: 1.242  m1_loss_ce_7: 0.5228  m1_loss_mask_7: 0.1578  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.5263  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.259  m2_loss_ce: 0.55  m2_loss_mask: 0.1497  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6453  m2_loss_mask_0: 0.1835  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6672  m2_loss_mask_1: 0.1675  m2_loss_dice_1: 1.381  m2_loss_ce_2: 0.6329  m2_loss_mask_2: 0.1576  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5798  m2_loss_mask_3: 0.1509  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5723  m2_loss_mask_4: 0.1512  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5725  m2_loss_mask_5: 0.1533  m2_loss_dice_5: 1.262  m2_loss_ce_6: 0.5504  m2_loss_mask_6: 0.1496  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.5326  m2_loss_mask_7: 0.1505  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.5054  m2_loss_mask_8: 0.1487  m2_loss_dice_8: 1.244  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9794    time: 1.4877  last_time: 1.4979  data_time: 0.0430  last_data_time: 0.0389   lr: 0.0001  max_mem: 34845M
[08/18 21:15:56] d2.utils.events INFO:  eta: 0:18:51  iter: 239  total_loss: 44.8  m1_loss_ce: 0.5026  m1_loss_mask: 0.1748  m1_loss_dice: 1.24  m1_loss_ce_0: 0.6234  m1_loss_mask_0: 0.2032  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6644  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.6048  m1_loss_mask_2: 0.1753  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.5553  m1_loss_mask_3: 0.1773  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5346  m1_loss_mask_4: 0.1754  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.5241  m1_loss_mask_5: 0.1732  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5051  m1_loss_mask_6: 0.1748  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.5377  m1_loss_mask_7: 0.1741  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.5122  m1_loss_mask_8: 0.1737  m1_loss_dice_8: 1.22  m2_loss_ce: 0.5177  m2_loss_mask: 0.1748  m2_loss_dice: 1.27  m2_loss_ce_0: 0.6149  m2_loss_mask_0: 0.2084  m2_loss_dice_0: 1.45  m2_loss_ce_1: 0.6707  m2_loss_mask_1: 0.1888  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.615  m2_loss_mask_2: 0.1811  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5912  m2_loss_mask_3: 0.1778  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.5567  m2_loss_mask_4: 0.1801  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.546  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.5266  m2_loss_mask_6: 0.1771  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.5377  m2_loss_mask_7: 0.1788  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.5282  m2_loss_mask_8: 0.1773  m2_loss_dice_8: 1.238  com_loss_ce: 2.144  com_loss_mask: 0.6936  com_loss_dice: 0.9808    time: 1.4892  last_time: 1.5917  data_time: 0.0427  last_data_time: 0.0497   lr: 0.0001  max_mem: 34845M
[08/18 21:16:26] d2.utils.events INFO:  eta: 0:18:22  iter: 259  total_loss: 44.7  m1_loss_ce: 0.5628  m1_loss_mask: 0.16  m1_loss_dice: 1.227  m1_loss_ce_0: 0.7036  m1_loss_mask_0: 0.1939  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.7199  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.6437  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.6176  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5835  m1_loss_mask_4: 0.1632  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.5975  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.189  m1_loss_ce_6: 0.569  m1_loss_mask_6: 0.162  m1_loss_dice_6: 1.172  m1_loss_ce_7: 0.543  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.5559  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.205  m2_loss_ce: 0.5529  m2_loss_mask: 0.1641  m2_loss_dice: 1.211  m2_loss_ce_0: 0.6385  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6753  m2_loss_mask_1: 0.1708  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.6539  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.5946  m2_loss_mask_3: 0.1651  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5664  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5586  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.584  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5567  m2_loss_mask_7: 0.1619  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5464  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.249  com_loss_ce: 2.148  com_loss_mask: 0.6936  com_loss_dice: 0.9799    time: 1.4900  last_time: 1.4503  data_time: 0.0439  last_data_time: 0.0481   lr: 0.0001  max_mem: 34845M
[08/18 21:16:56] d2.utils.events INFO:  eta: 0:17:51  iter: 279  total_loss: 45.1  m1_loss_ce: 0.5663  m1_loss_mask: 0.1742  m1_loss_dice: 1.214  m1_loss_ce_0: 0.6745  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.7428  m1_loss_mask_1: 0.1847  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.7066  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.6388  m1_loss_mask_3: 0.1782  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.6055  m1_loss_mask_4: 0.1735  m1_loss_dice_4: 1.275  m1_loss_ce_5: 0.568  m1_loss_mask_5: 0.1735  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.5752  m1_loss_mask_6: 0.1736  m1_loss_dice_6: 1.259  m1_loss_ce_7: 0.5642  m1_loss_mask_7: 0.1756  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.5604  m1_loss_mask_8: 0.1722  m1_loss_dice_8: 1.204  m2_loss_ce: 0.5565  m2_loss_mask: 0.1704  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6692  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.6956  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6595  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5892  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5794  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5719  m2_loss_mask_5: 0.1695  m2_loss_dice_5: 1.221  m2_loss_ce_6: 0.5639  m2_loss_mask_6: 0.1664  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5398  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.5554  m2_loss_mask_8: 0.1646  m2_loss_dice_8: 1.207  com_loss_ce: 2.144  com_loss_mask: 0.6936  com_loss_dice: 0.9804    time: 1.4890  last_time: 1.4639  data_time: 0.0434  last_data_time: 0.0436   lr: 0.0001  max_mem: 34845M
[08/18 21:17:25] d2.utils.events INFO:  eta: 0:17:19  iter: 299  total_loss: 44.02  m1_loss_ce: 0.5191  m1_loss_mask: 0.1601  m1_loss_dice: 1.22  m1_loss_ce_0: 0.6115  m1_loss_mask_0: 0.1881  m1_loss_dice_0: 1.475  m1_loss_ce_1: 0.6748  m1_loss_mask_1: 0.1721  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.6092  m1_loss_mask_2: 0.1669  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5722  m1_loss_mask_3: 0.1638  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.5325  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.5358  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5256  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.5319  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.5188  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4798  m2_loss_mask: 0.1679  m2_loss_dice: 1.194  m2_loss_ce_0: 0.5911  m2_loss_mask_0: 0.1947  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6531  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.6174  m2_loss_mask_2: 0.1728  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5584  m2_loss_mask_3: 0.1715  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5594  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.5238  m2_loss_mask_5: 0.17  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.5095  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.5191  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.5149  m2_loss_mask_8: 0.1696  m2_loss_dice_8: 1.193  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9793    time: 1.4875  last_time: 1.4884  data_time: 0.0423  last_data_time: 0.0516   lr: 0.0001  max_mem: 34845M
[08/18 21:17:55] d2.utils.events INFO:  eta: 0:16:48  iter: 319  total_loss: 42.43  m1_loss_ce: 0.475  m1_loss_mask: 0.1665  m1_loss_dice: 1.164  m1_loss_ce_0: 0.5671  m1_loss_mask_0: 0.1933  m1_loss_dice_0: 1.346  m1_loss_ce_1: 0.6142  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.291  m1_loss_ce_2: 0.6023  m1_loss_mask_2: 0.1763  m1_loss_dice_2: 1.241  m1_loss_ce_3: 0.5317  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.16  m1_loss_ce_4: 0.5224  m1_loss_mask_4: 0.1688  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.511  m1_loss_mask_5: 0.1692  m1_loss_dice_5: 1.175  m1_loss_ce_6: 0.4603  m1_loss_mask_6: 0.1668  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.4841  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4841  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.161  m2_loss_ce: 0.4793  m2_loss_mask: 0.1599  m2_loss_dice: 1.17  m2_loss_ce_0: 0.5828  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.349  m2_loss_ce_1: 0.6216  m2_loss_mask_1: 0.1716  m2_loss_dice_1: 1.254  m2_loss_ce_2: 0.5758  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.21  m2_loss_ce_3: 0.5488  m2_loss_mask_3: 0.1606  m2_loss_dice_3: 1.151  m2_loss_ce_4: 0.482  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.5003  m2_loss_mask_5: 0.162  m2_loss_dice_5: 1.179  m2_loss_ce_6: 0.4728  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.157  m2_loss_ce_7: 0.4667  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.15  m2_loss_ce_8: 0.5008  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.179  com_loss_ce: 2.141  com_loss_mask: 0.6936  com_loss_dice: 0.9787    time: 1.4861  last_time: 1.4213  data_time: 0.0423  last_data_time: 0.0432   lr: 0.0001  max_mem: 34845M
[08/18 21:18:25] d2.utils.events INFO:  eta: 0:16:18  iter: 339  total_loss: 44.84  m1_loss_ce: 0.5579  m1_loss_mask: 0.1647  m1_loss_dice: 1.236  m1_loss_ce_0: 0.6414  m1_loss_mask_0: 0.1897  m1_loss_dice_0: 1.497  m1_loss_ce_1: 0.7045  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.401  m1_loss_ce_2: 0.6633  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.6153  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.296  m1_loss_ce_4: 0.5522  m1_loss_mask_4: 0.1678  m1_loss_dice_4: 1.32  m1_loss_ce_5: 0.5868  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.279  m1_loss_ce_6: 0.5853  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.285  m1_loss_ce_7: 0.5796  m1_loss_mask_7: 0.1633  m1_loss_dice_7: 1.265  m1_loss_ce_8: 0.5566  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5477  m2_loss_mask: 0.1624  m2_loss_dice: 1.21  m2_loss_ce_0: 0.6443  m2_loss_mask_0: 0.1999  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.6801  m2_loss_mask_1: 0.1752  m2_loss_dice_1: 1.437  m2_loss_ce_2: 0.6485  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5888  m2_loss_mask_3: 0.1605  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.5767  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5426  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.56  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.283  m2_loss_ce_7: 0.53  m2_loss_mask_7: 0.1631  m2_loss_dice_7: 1.26  m2_loss_ce_8: 0.5355  m2_loss_mask_8: 0.1596  m2_loss_dice_8: 1.292  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9799    time: 1.4865  last_time: 1.5059  data_time: 0.0437  last_data_time: 0.0460   lr: 0.0001  max_mem: 34845M
[08/18 21:18:54] d2.utils.events INFO:  eta: 0:15:48  iter: 359  total_loss: 45.34  m1_loss_ce: 0.6144  m1_loss_mask: 0.1651  m1_loss_dice: 1.242  m1_loss_ce_0: 0.6797  m1_loss_mask_0: 0.2014  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.7432  m1_loss_mask_1: 0.1751  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.7028  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.6467  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.5944  m1_loss_mask_4: 0.1695  m1_loss_dice_4: 1.226  m1_loss_ce_5: 0.5932  m1_loss_mask_5: 0.1671  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.5782  m1_loss_mask_6: 0.1648  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.5675  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.5945  m1_loss_mask_8: 0.1656  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5645  m2_loss_mask: 0.1588  m2_loss_dice: 1.195  m2_loss_ce_0: 0.6587  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.43  m2_loss_ce_1: 0.7321  m2_loss_mask_1: 0.1757  m2_loss_dice_1: 1.332  m2_loss_ce_2: 0.6496  m2_loss_mask_2: 0.1627  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.6325  m2_loss_mask_3: 0.1639  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.6094  m2_loss_mask_4: 0.1646  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5954  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.233  m2_loss_ce_6: 0.5876  m2_loss_mask_6: 0.1593  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.5569  m2_loss_mask_7: 0.1609  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.5964  m2_loss_mask_8: 0.159  m2_loss_dice_8: 1.208  com_loss_ce: 2.15  com_loss_mask: 0.6936  com_loss_dice: 0.9797    time: 1.4859  last_time: 1.4410  data_time: 0.0427  last_data_time: 0.0750   lr: 0.0001  max_mem: 34845M
[08/18 21:19:24] d2.utils.events INFO:  eta: 0:15:18  iter: 379  total_loss: 45.71  m1_loss_ce: 0.5745  m1_loss_mask: 0.1705  m1_loss_dice: 1.235  m1_loss_ce_0: 0.6534  m1_loss_mask_0: 0.1842  m1_loss_dice_0: 1.483  m1_loss_ce_1: 0.7066  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.424  m1_loss_ce_2: 0.6822  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.308  m1_loss_ce_3: 0.5988  m1_loss_mask_3: 0.1653  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.5544  m1_loss_mask_4: 0.1652  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5908  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.5489  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.308  m1_loss_ce_7: 0.5581  m1_loss_mask_7: 0.1664  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.5658  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.275  m2_loss_ce: 0.5515  m2_loss_mask: 0.1573  m2_loss_dice: 1.269  m2_loss_ce_0: 0.6665  m2_loss_mask_0: 0.182  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.7104  m2_loss_mask_1: 0.1661  m2_loss_dice_1: 1.439  m2_loss_ce_2: 0.6423  m2_loss_mask_2: 0.1617  m2_loss_dice_2: 1.375  m2_loss_ce_3: 0.6215  m2_loss_mask_3: 0.1636  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5622  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5935  m2_loss_mask_5: 0.1575  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.5622  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.294  m2_loss_ce_7: 0.5575  m2_loss_mask_7: 0.1583  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.5745  m2_loss_mask_8: 0.1591  m2_loss_dice_8: 1.241  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9809    time: 1.4849  last_time: 1.4643  data_time: 0.0425  last_data_time: 0.0470   lr: 0.0001  max_mem: 34845M
[08/18 21:19:54] d2.utils.events INFO:  eta: 0:14:49  iter: 399  total_loss: 45.01  m1_loss_ce: 0.5141  m1_loss_mask: 0.1574  m1_loss_dice: 1.22  m1_loss_ce_0: 0.6554  m1_loss_mask_0: 0.1831  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6893  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.6318  m1_loss_mask_2: 0.1636  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5681  m1_loss_mask_3: 0.1617  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.561  m1_loss_mask_4: 0.16  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.5603  m1_loss_mask_5: 0.1585  m1_loss_dice_5: 1.266  m1_loss_ce_6: 0.528  m1_loss_mask_6: 0.1612  m1_loss_dice_6: 1.245  m1_loss_ce_7: 0.5648  m1_loss_mask_7: 0.1607  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.5759  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.212  m2_loss_ce: 0.5488  m2_loss_mask: 0.1558  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6863  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.7305  m2_loss_mask_1: 0.1678  m2_loss_dice_1: 1.357  m2_loss_ce_2: 0.6601  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.616  m2_loss_mask_3: 0.1617  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.6039  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5894  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5764  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.5332  m2_loss_mask_7: 0.1575  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.564  m2_loss_mask_8: 0.1561  m2_loss_dice_8: 1.216  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.98    time: 1.4854  last_time: 1.5266  data_time: 0.0422  last_data_time: 0.0407   lr: 0.0001  max_mem: 34845M
[08/18 21:20:24] d2.utils.events INFO:  eta: 0:14:19  iter: 419  total_loss: 43.5  m1_loss_ce: 0.5341  m1_loss_mask: 0.1712  m1_loss_dice: 1.18  m1_loss_ce_0: 0.6282  m1_loss_mask_0: 0.2048  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.6605  m1_loss_mask_1: 0.1887  m1_loss_dice_1: 1.302  m1_loss_ce_2: 0.607  m1_loss_mask_2: 0.1754  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.5871  m1_loss_mask_3: 0.1779  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.529  m1_loss_mask_4: 0.1752  m1_loss_dice_4: 1.198  m1_loss_ce_5: 0.5503  m1_loss_mask_5: 0.1748  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.5114  m1_loss_mask_6: 0.174  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.5145  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.511  m1_loss_mask_8: 0.1715  m1_loss_dice_8: 1.191  m2_loss_ce: 0.531  m2_loss_mask: 0.1726  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6086  m2_loss_mask_0: 0.2032  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6726  m2_loss_mask_1: 0.1838  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.6189  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5425  m2_loss_mask_3: 0.1761  m2_loss_dice_3: 1.223  m2_loss_ce_4: 0.546  m2_loss_mask_4: 0.1774  m2_loss_dice_4: 1.219  m2_loss_ce_5: 0.5302  m2_loss_mask_5: 0.1793  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.5393  m2_loss_mask_6: 0.1781  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5294  m2_loss_mask_7: 0.1766  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.5198  m2_loss_mask_8: 0.1741  m2_loss_dice_8: 1.202  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9791    time: 1.4853  last_time: 1.4436  data_time: 0.0439  last_data_time: 0.0342   lr: 0.0001  max_mem: 34845M
[08/18 21:20:53] d2.utils.events INFO:  eta: 0:13:49  iter: 439  total_loss: 45.3  m1_loss_ce: 0.5479  m1_loss_mask: 0.1722  m1_loss_dice: 1.215  m1_loss_ce_0: 0.6833  m1_loss_mask_0: 0.208  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.7311  m1_loss_mask_1: 0.1904  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.6607  m1_loss_mask_2: 0.1812  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.6036  m1_loss_mask_3: 0.1778  m1_loss_dice_3: 1.265  m1_loss_ce_4: 0.5272  m1_loss_mask_4: 0.1748  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.5508  m1_loss_mask_5: 0.1727  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5391  m1_loss_mask_6: 0.172  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.5399  m1_loss_mask_7: 0.1717  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.5277  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.217  m2_loss_ce: 0.5449  m2_loss_mask: 0.1699  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6719  m2_loss_mask_0: 0.2067  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.6847  m2_loss_mask_1: 0.1867  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.6536  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.6138  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5642  m2_loss_mask_4: 0.1756  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5975  m2_loss_mask_5: 0.1726  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.5685  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5533  m2_loss_mask_7: 0.1737  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.5593  m2_loss_mask_8: 0.1715  m2_loss_dice_8: 1.234  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.979    time: 1.4838  last_time: 1.4733  data_time: 0.0419  last_data_time: 0.0460   lr: 0.0001  max_mem: 34845M
[08/18 21:21:22] d2.utils.events INFO:  eta: 0:13:19  iter: 459  total_loss: 45.11  m1_loss_ce: 0.5578  m1_loss_mask: 0.1538  m1_loss_dice: 1.213  m1_loss_ce_0: 0.6223  m1_loss_mask_0: 0.1717  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6876  m1_loss_mask_1: 0.1651  m1_loss_dice_1: 1.382  m1_loss_ce_2: 0.6445  m1_loss_mask_2: 0.1597  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5467  m1_loss_mask_3: 0.1587  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.5527  m1_loss_mask_4: 0.1588  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.573  m1_loss_mask_5: 0.1562  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.556  m1_loss_mask_6: 0.1583  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.5556  m1_loss_mask_7: 0.1567  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.5579  m1_loss_mask_8: 0.1539  m1_loss_dice_8: 1.227  m2_loss_ce: 0.5544  m2_loss_mask: 0.1569  m2_loss_dice: 1.264  m2_loss_ce_0: 0.6844  m2_loss_mask_0: 0.1829  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.7209  m2_loss_mask_1: 0.1687  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.6603  m2_loss_mask_2: 0.1596  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.6126  m2_loss_mask_3: 0.1564  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.5841  m2_loss_mask_4: 0.1599  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5799  m2_loss_mask_5: 0.1576  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.5582  m2_loss_mask_6: 0.1533  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.5631  m2_loss_mask_7: 0.1568  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.5232  m2_loss_mask_8: 0.1573  m2_loss_dice_8: 1.268  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9809    time: 1.4829  last_time: 1.4135  data_time: 0.0410  last_data_time: 0.0373   lr: 0.0001  max_mem: 34845M
[08/18 21:21:52] d2.utils.events INFO:  eta: 0:12:48  iter: 479  total_loss: 44.48  m1_loss_ce: 0.5643  m1_loss_mask: 0.1592  m1_loss_dice: 1.217  m1_loss_ce_0: 0.6645  m1_loss_mask_0: 0.1759  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.7217  m1_loss_mask_1: 0.1695  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.6696  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.609  m1_loss_mask_3: 0.1606  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.5972  m1_loss_mask_4: 0.1576  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.5717  m1_loss_mask_5: 0.157  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.5721  m1_loss_mask_6: 0.1597  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.5739  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5606  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.225  m2_loss_ce: 0.5736  m2_loss_mask: 0.1582  m2_loss_dice: 1.248  m2_loss_ce_0: 0.6529  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.7226  m2_loss_mask_1: 0.1729  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.6819  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.6285  m2_loss_mask_3: 0.1605  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.589  m2_loss_mask_4: 0.1611  m2_loss_dice_4: 1.278  m2_loss_ce_5: 0.5759  m2_loss_mask_5: 0.1601  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.5594  m2_loss_mask_6: 0.1603  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5682  m2_loss_mask_7: 0.1577  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.5555  m2_loss_mask_8: 0.1583  m2_loss_dice_8: 1.248  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9796    time: 1.4817  last_time: 1.3518  data_time: 0.0420  last_data_time: 0.0342   lr: 0.0001  max_mem: 34845M
[08/18 21:22:21] d2.utils.events INFO:  eta: 0:12:18  iter: 499  total_loss: 42.37  m1_loss_ce: 0.5043  m1_loss_mask: 0.1479  m1_loss_dice: 1.168  m1_loss_ce_0: 0.585  m1_loss_mask_0: 0.1733  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6563  m1_loss_mask_1: 0.1617  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.6436  m1_loss_mask_2: 0.152  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.5713  m1_loss_mask_3: 0.15  m1_loss_dice_3: 1.191  m1_loss_ce_4: 0.5552  m1_loss_mask_4: 0.1502  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.5016  m1_loss_mask_5: 0.1478  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.5469  m1_loss_mask_6: 0.1483  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.5205  m1_loss_mask_7: 0.1456  m1_loss_dice_7: 1.166  m1_loss_ce_8: 0.4976  m1_loss_mask_8: 0.1453  m1_loss_dice_8: 1.148  m2_loss_ce: 0.5514  m2_loss_mask: 0.1536  m2_loss_dice: 1.179  m2_loss_ce_0: 0.6179  m2_loss_mask_0: 0.1839  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6706  m2_loss_mask_1: 0.1665  m2_loss_dice_1: 1.33  m2_loss_ce_2: 0.6357  m2_loss_mask_2: 0.157  m2_loss_dice_2: 1.248  m2_loss_ce_3: 0.6034  m2_loss_mask_3: 0.1534  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5588  m2_loss_mask_4: 0.157  m2_loss_dice_4: 1.201  m2_loss_ce_5: 0.5356  m2_loss_mask_5: 0.1568  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.5224  m2_loss_mask_6: 0.1565  m2_loss_dice_6: 1.219  m2_loss_ce_7: 0.5183  m2_loss_mask_7: 0.1548  m2_loss_dice_7: 1.189  m2_loss_ce_8: 0.5146  m2_loss_mask_8: 0.1531  m2_loss_dice_8: 1.186  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9803    time: 1.4805  last_time: 1.3956  data_time: 0.0390  last_data_time: 0.0363   lr: 0.0001  max_mem: 34845M
[08/18 21:22:50] d2.utils.events INFO:  eta: 0:11:48  iter: 519  total_loss: 44.04  m1_loss_ce: 0.514  m1_loss_mask: 0.1726  m1_loss_dice: 1.237  m1_loss_ce_0: 0.617  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.6828  m1_loss_mask_1: 0.1848  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.6233  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.5506  m1_loss_mask_3: 0.1797  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.539  m1_loss_mask_4: 0.1739  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.5257  m1_loss_mask_5: 0.1741  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5398  m1_loss_mask_6: 0.1718  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.5146  m1_loss_mask_7: 0.171  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.531  m1_loss_mask_8: 0.1723  m1_loss_dice_8: 1.203  m2_loss_ce: 0.5161  m2_loss_mask: 0.1759  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6055  m2_loss_mask_0: 0.2007  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6614  m2_loss_mask_1: 0.1842  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.6086  m2_loss_mask_2: 0.1737  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.5608  m2_loss_mask_3: 0.1733  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.525  m2_loss_mask_4: 0.1757  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.5363  m2_loss_mask_5: 0.1745  m2_loss_dice_5: 1.212  m2_loss_ce_6: 0.499  m2_loss_mask_6: 0.174  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.5346  m2_loss_mask_7: 0.1731  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.5306  m2_loss_mask_8: 0.1722  m2_loss_dice_8: 1.215  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.979    time: 1.4796  last_time: 1.4991  data_time: 0.0406  last_data_time: 0.0354   lr: 0.0001  max_mem: 34845M
[08/18 21:23:20] d2.utils.events INFO:  eta: 0:11:19  iter: 539  total_loss: 45.01  m1_loss_ce: 0.5052  m1_loss_mask: 0.1555  m1_loss_dice: 1.245  m1_loss_ce_0: 0.614  m1_loss_mask_0: 0.1865  m1_loss_dice_0: 1.513  m1_loss_ce_1: 0.646  m1_loss_mask_1: 0.1755  m1_loss_dice_1: 1.438  m1_loss_ce_2: 0.6072  m1_loss_mask_2: 0.1635  m1_loss_dice_2: 1.348  m1_loss_ce_3: 0.5526  m1_loss_mask_3: 0.1593  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5268  m1_loss_mask_4: 0.16  m1_loss_dice_4: 1.342  m1_loss_ce_5: 0.5552  m1_loss_mask_5: 0.1571  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.5383  m1_loss_mask_6: 0.1569  m1_loss_dice_6: 1.316  m1_loss_ce_7: 0.5393  m1_loss_mask_7: 0.1536  m1_loss_dice_7: 1.296  m1_loss_ce_8: 0.5299  m1_loss_mask_8: 0.1575  m1_loss_dice_8: 1.27  m2_loss_ce: 0.5263  m2_loss_mask: 0.1599  m2_loss_dice: 1.27  m2_loss_ce_0: 0.6634  m2_loss_mask_0: 0.1937  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.6921  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.433  m2_loss_ce_2: 0.6378  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.379  m2_loss_ce_3: 0.5784  m2_loss_mask_3: 0.1662  m2_loss_dice_3: 1.33  m2_loss_ce_4: 0.5435  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.545  m2_loss_mask_5: 0.1643  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.5456  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.533  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.272  m2_loss_ce_8: 0.5222  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.31  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9794    time: 1.4798  last_time: 1.4845  data_time: 0.0436  last_data_time: 0.0391   lr: 0.0001  max_mem: 34845M
[08/18 21:23:50] d2.utils.events INFO:  eta: 0:10:49  iter: 559  total_loss: 44.27  m1_loss_ce: 0.554  m1_loss_mask: 0.155  m1_loss_dice: 1.193  m1_loss_ce_0: 0.6517  m1_loss_mask_0: 0.1831  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.7417  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.6744  m1_loss_mask_2: 0.1593  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.624  m1_loss_mask_3: 0.1596  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.5908  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5556  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.5589  m1_loss_mask_6: 0.1605  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.536  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.5507  m1_loss_mask_8: 0.1547  m1_loss_dice_8: 1.2  m2_loss_ce: 0.5761  m2_loss_mask: 0.1561  m2_loss_dice: 1.208  m2_loss_ce_0: 0.654  m2_loss_mask_0: 0.1877  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.7238  m2_loss_mask_1: 0.1736  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.644  m2_loss_mask_2: 0.1605  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.6085  m2_loss_mask_3: 0.1655  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.6385  m2_loss_mask_4: 0.1649  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.5939  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.211  m2_loss_ce_6: 0.5566  m2_loss_mask_6: 0.161  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.5591  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.5779  m2_loss_mask_8: 0.1576  m2_loss_dice_8: 1.212  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9801    time: 1.4797  last_time: 1.4805  data_time: 0.0414  last_data_time: 0.0384   lr: 0.0001  max_mem: 34845M
[08/18 21:24:19] d2.utils.events INFO:  eta: 0:10:20  iter: 579  total_loss: 46.01  m1_loss_ce: 0.5622  m1_loss_mask: 0.1682  m1_loss_dice: 1.25  m1_loss_ce_0: 0.6594  m1_loss_mask_0: 0.1961  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.6992  m1_loss_mask_1: 0.184  m1_loss_dice_1: 1.384  m1_loss_ce_2: 0.6423  m1_loss_mask_2: 0.1742  m1_loss_dice_2: 1.364  m1_loss_ce_3: 0.6202  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.327  m1_loss_ce_4: 0.5703  m1_loss_mask_4: 0.177  m1_loss_dice_4: 1.321  m1_loss_ce_5: 0.5794  m1_loss_mask_5: 0.1686  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.568  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.278  m1_loss_ce_7: 0.5666  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.5834  m1_loss_mask_8: 0.1689  m1_loss_dice_8: 1.269  m2_loss_ce: 0.5522  m2_loss_mask: 0.1691  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6086  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.7308  m2_loss_mask_1: 0.1833  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6437  m2_loss_mask_2: 0.1745  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.6417  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.6187  m2_loss_mask_4: 0.1745  m2_loss_dice_4: 1.318  m2_loss_ce_5: 0.5894  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5595  m2_loss_mask_6: 0.1715  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5676  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.5701  m2_loss_mask_8: 0.1687  m2_loss_dice_8: 1.272  com_loss_ce: 2.148  com_loss_mask: 0.6936  com_loss_dice: 0.9803    time: 1.4795  last_time: 1.3988  data_time: 0.0420  last_data_time: 0.0422   lr: 0.0001  max_mem: 34845M
[08/18 21:24:49] d2.utils.events INFO:  eta: 0:09:50  iter: 599  total_loss: 44.64  m1_loss_ce: 0.5049  m1_loss_mask: 0.1654  m1_loss_dice: 1.194  m1_loss_ce_0: 0.6014  m1_loss_mask_0: 0.2034  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6994  m1_loss_mask_1: 0.1788  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.5972  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5569  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.498  m1_loss_mask_4: 0.1709  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.5344  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5096  m1_loss_mask_6: 0.1699  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.5018  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.5103  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4939  m2_loss_mask: 0.1708  m2_loss_dice: 1.201  m2_loss_ce_0: 0.6029  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.507  m2_loss_ce_1: 0.6692  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.381  m2_loss_ce_2: 0.6221  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5911  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.5642  m2_loss_mask_4: 0.1721  m2_loss_dice_4: 1.296  m2_loss_ce_5: 0.5202  m2_loss_mask_5: 0.1739  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5419  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5013  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.4921  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.239  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.981    time: 1.4791  last_time: 1.4170  data_time: 0.0410  last_data_time: 0.0626   lr: 0.0001  max_mem: 34845M
[08/18 21:25:18] d2.utils.events INFO:  eta: 0:09:20  iter: 619  total_loss: 43.55  m1_loss_ce: 0.5298  m1_loss_mask: 0.1658  m1_loss_dice: 1.24  m1_loss_ce_0: 0.6003  m1_loss_mask_0: 0.1992  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.6693  m1_loss_mask_1: 0.1823  m1_loss_dice_1: 1.288  m1_loss_ce_2: 0.6406  m1_loss_mask_2: 0.1717  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.5717  m1_loss_mask_3: 0.168  m1_loss_dice_3: 1.191  m1_loss_ce_4: 0.5409  m1_loss_mask_4: 0.1725  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.5369  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.5269  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.5256  m1_loss_mask_7: 0.164  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.51  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.167  m2_loss_ce: 0.5566  m2_loss_mask: 0.1627  m2_loss_dice: 1.187  m2_loss_ce_0: 0.6122  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.672  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.329  m2_loss_ce_2: 0.6483  m2_loss_mask_2: 0.1635  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5773  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.219  m2_loss_ce_4: 0.5588  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.5599  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.204  m2_loss_ce_6: 0.537  m2_loss_mask_6: 0.1651  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.5496  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.5578  m2_loss_mask_8: 0.1629  m2_loss_dice_8: 1.201  com_loss_ce: 2.144  com_loss_mask: 0.6936  com_loss_dice: 0.9795    time: 1.4781  last_time: 1.6112  data_time: 0.0434  last_data_time: 0.0437   lr: 0.0001  max_mem: 34860M
[08/18 21:25:47] d2.utils.events INFO:  eta: 0:08:50  iter: 639  total_loss: 46.4  m1_loss_ce: 0.5316  m1_loss_mask: 0.1608  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6376  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.476  m1_loss_ce_1: 0.7043  m1_loss_mask_1: 0.1805  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.632  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.361  m1_loss_ce_3: 0.5593  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.287  m1_loss_ce_4: 0.5894  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.295  m1_loss_ce_5: 0.5583  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.293  m1_loss_ce_6: 0.5452  m1_loss_mask_6: 0.1612  m1_loss_dice_6: 1.242  m1_loss_ce_7: 0.5372  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.302  m1_loss_ce_8: 0.5414  m1_loss_mask_8: 0.1608  m1_loss_dice_8: 1.243  m2_loss_ce: 0.5506  m2_loss_mask: 0.1645  m2_loss_dice: 1.296  m2_loss_ce_0: 0.6573  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6912  m2_loss_mask_1: 0.1777  m2_loss_dice_1: 1.429  m2_loss_ce_2: 0.6455  m2_loss_mask_2: 0.1679  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.6082  m2_loss_mask_3: 0.1601  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.5894  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.317  m2_loss_ce_5: 0.5611  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.329  m2_loss_ce_6: 0.5579  m2_loss_mask_6: 0.1612  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5477  m2_loss_mask_7: 0.1594  m2_loss_dice_7: 1.288  m2_loss_ce_8: 0.5522  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.292  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9804    time: 1.4779  last_time: 1.4016  data_time: 0.0453  last_data_time: 0.0387   lr: 0.0001  max_mem: 34860M
[08/18 21:26:17] d2.utils.events INFO:  eta: 0:08:21  iter: 659  total_loss: 42.64  m1_loss_ce: 0.4706  m1_loss_mask: 0.1695  m1_loss_dice: 1.215  m1_loss_ce_0: 0.6242  m1_loss_mask_0: 0.1948  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.6316  m1_loss_mask_1: 0.1804  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.6067  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5471  m1_loss_mask_3: 0.173  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.5255  m1_loss_mask_4: 0.1694  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.5254  m1_loss_mask_5: 0.1715  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.5015  m1_loss_mask_6: 0.1695  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5137  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.5007  m1_loss_mask_8: 0.1686  m1_loss_dice_8: 1.232  m2_loss_ce: 0.5229  m2_loss_mask: 0.1682  m2_loss_dice: 1.21  m2_loss_ce_0: 0.6194  m2_loss_mask_0: 0.1994  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6315  m2_loss_mask_1: 0.1791  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.5988  m2_loss_mask_2: 0.1723  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5404  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5498  m2_loss_mask_4: 0.1749  m2_loss_dice_4: 1.302  m2_loss_ce_5: 0.5224  m2_loss_mask_5: 0.1721  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.4967  m2_loss_mask_6: 0.17  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.495  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4973  m2_loss_mask_8: 0.1698  m2_loss_dice_8: 1.249  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9794    time: 1.4775  last_time: 1.4380  data_time: 0.0402  last_data_time: 0.0450   lr: 0.0001  max_mem: 34860M
[08/18 21:26:46] d2.utils.events INFO:  eta: 0:07:51  iter: 679  total_loss: 44.51  m1_loss_ce: 0.5136  m1_loss_mask: 0.1676  m1_loss_dice: 1.222  m1_loss_ce_0: 0.6398  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.6785  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.6088  m1_loss_mask_2: 0.1742  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5754  m1_loss_mask_3: 0.1724  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.5188  m1_loss_mask_4: 0.1704  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.5312  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.5233  m1_loss_mask_6: 0.1692  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.5153  m1_loss_mask_7: 0.1689  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.5337  m1_loss_mask_8: 0.1679  m1_loss_dice_8: 1.202  m2_loss_ce: 0.5114  m2_loss_mask: 0.1731  m2_loss_dice: 1.214  m2_loss_ce_0: 0.5893  m2_loss_mask_0: 0.1994  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6365  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.6175  m2_loss_mask_2: 0.1763  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.5416  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.5453  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.5108  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.5018  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5021  m2_loss_mask_7: 0.1725  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4928  m2_loss_mask_8: 0.1738  m2_loss_dice_8: 1.241  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9793    time: 1.4763  last_time: 1.5223  data_time: 0.0417  last_data_time: 0.0316   lr: 0.0001  max_mem: 34860M
[08/18 21:27:15] d2.utils.events INFO:  eta: 0:07:21  iter: 699  total_loss: 45.58  m1_loss_ce: 0.519  m1_loss_mask: 0.1763  m1_loss_dice: 1.238  m1_loss_ce_0: 0.6624  m1_loss_mask_0: 0.201  m1_loss_dice_0: 1.483  m1_loss_ce_1: 0.6515  m1_loss_mask_1: 0.1869  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5895  m1_loss_mask_2: 0.1772  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5679  m1_loss_mask_3: 0.1771  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5435  m1_loss_mask_4: 0.1781  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.5447  m1_loss_mask_5: 0.1769  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.5333  m1_loss_mask_6: 0.1776  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.5208  m1_loss_mask_7: 0.1765  m1_loss_dice_7: 1.259  m1_loss_ce_8: 0.5291  m1_loss_mask_8: 0.1745  m1_loss_dice_8: 1.222  m2_loss_ce: 0.5263  m2_loss_mask: 0.1794  m2_loss_dice: 1.255  m2_loss_ce_0: 0.6516  m2_loss_mask_0: 0.2059  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.6745  m2_loss_mask_1: 0.1967  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6185  m2_loss_mask_2: 0.1827  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.5939  m2_loss_mask_3: 0.1775  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.5564  m2_loss_mask_4: 0.1788  m2_loss_dice_4: 1.312  m2_loss_ce_5: 0.5318  m2_loss_mask_5: 0.1819  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.5446  m2_loss_mask_6: 0.1787  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.524  m2_loss_mask_7: 0.1777  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.5668  m2_loss_mask_8: 0.1773  m2_loss_dice_8: 1.256  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9788    time: 1.4756  last_time: 1.4189  data_time: 0.0427  last_data_time: 0.0490   lr: 0.0001  max_mem: 34860M
[08/18 21:27:44] d2.utils.events INFO:  eta: 0:06:52  iter: 719  total_loss: 44.4  m1_loss_ce: 0.4996  m1_loss_mask: 0.1815  m1_loss_dice: 1.22  m1_loss_ce_0: 0.6506  m1_loss_mask_0: 0.2027  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.6647  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.5915  m1_loss_mask_2: 0.1807  m1_loss_dice_2: 1.313  m1_loss_ce_3: 0.5566  m1_loss_mask_3: 0.1802  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.542  m1_loss_mask_4: 0.1799  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.5088  m1_loss_mask_5: 0.1809  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4869  m1_loss_mask_6: 0.1819  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.5199  m1_loss_mask_7: 0.18  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.4696  m1_loss_mask_8: 0.1822  m1_loss_dice_8: 1.219  m2_loss_ce: 0.502  m2_loss_mask: 0.1831  m2_loss_dice: 1.236  m2_loss_ce_0: 0.5939  m2_loss_mask_0: 0.209  m2_loss_dice_0: 1.524  m2_loss_ce_1: 0.6654  m2_loss_mask_1: 0.1934  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.6054  m2_loss_mask_2: 0.1842  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5531  m2_loss_mask_3: 0.1837  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5006  m2_loss_mask_4: 0.1871  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5617  m2_loss_mask_5: 0.1837  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.5343  m2_loss_mask_6: 0.1831  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.5297  m2_loss_mask_7: 0.182  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5183  m2_loss_mask_8: 0.1816  m2_loss_dice_8: 1.247  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9784    time: 1.4743  last_time: 1.3777  data_time: 0.0418  last_data_time: 0.0342   lr: 0.0001  max_mem: 34860M
[08/18 21:28:13] d2.utils.events INFO:  eta: 0:06:22  iter: 739  total_loss: 45.38  m1_loss_ce: 0.5047  m1_loss_mask: 0.169  m1_loss_dice: 1.186  m1_loss_ce_0: 0.6751  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.7127  m1_loss_mask_1: 0.1776  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.6197  m1_loss_mask_2: 0.1733  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5641  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.5384  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.248  m1_loss_ce_5: 0.5213  m1_loss_mask_5: 0.1647  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.5507  m1_loss_mask_6: 0.1648  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.5117  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.5299  m1_loss_mask_8: 0.1675  m1_loss_dice_8: 1.193  m2_loss_ce: 0.5412  m2_loss_mask: 0.1648  m2_loss_dice: 1.209  m2_loss_ce_0: 0.6409  m2_loss_mask_0: 0.1957  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.6646  m2_loss_mask_1: 0.1797  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.615  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5702  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5414  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5468  m2_loss_mask_5: 0.163  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.5155  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5308  m2_loss_mask_7: 0.1641  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.525  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.229  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9799    time: 1.4738  last_time: 1.4206  data_time: 0.0442  last_data_time: 0.0455   lr: 0.0001  max_mem: 34860M
[08/18 21:28:42] d2.utils.events INFO:  eta: 0:05:53  iter: 759  total_loss: 44.66  m1_loss_ce: 0.5274  m1_loss_mask: 0.1568  m1_loss_dice: 1.194  m1_loss_ce_0: 0.6441  m1_loss_mask_0: 0.1837  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.688  m1_loss_mask_1: 0.1682  m1_loss_dice_1: 1.307  m1_loss_ce_2: 0.6518  m1_loss_mask_2: 0.1668  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.5909  m1_loss_mask_3: 0.1655  m1_loss_dice_3: 1.185  m1_loss_ce_4: 0.5947  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.5571  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.523  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.5221  m1_loss_mask_7: 0.1582  m1_loss_dice_7: 1.184  m1_loss_ce_8: 0.5091  m1_loss_mask_8: 0.1579  m1_loss_dice_8: 1.189  m2_loss_ce: 0.5314  m2_loss_mask: 0.1621  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6383  m2_loss_mask_0: 0.1925  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.7021  m2_loss_mask_1: 0.1764  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.6691  m2_loss_mask_2: 0.1658  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5885  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5531  m2_loss_mask_4: 0.1707  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5783  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.5407  m2_loss_mask_6: 0.1651  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.5521  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.5477  m2_loss_mask_8: 0.1633  m2_loss_dice_8: 1.246  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9804    time: 1.4726  last_time: 1.4065  data_time: 0.0414  last_data_time: 0.0436   lr: 0.0001  max_mem: 34860M
[08/18 21:29:11] d2.utils.events INFO:  eta: 0:05:23  iter: 779  total_loss: 41.33  m1_loss_ce: 0.4946  m1_loss_mask: 0.1652  m1_loss_dice: 1.103  m1_loss_ce_0: 0.6164  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.289  m1_loss_ce_1: 0.6228  m1_loss_mask_1: 0.1725  m1_loss_dice_1: 1.207  m1_loss_ce_2: 0.5686  m1_loss_mask_2: 0.1709  m1_loss_dice_2: 1.2  m1_loss_ce_3: 0.5163  m1_loss_mask_3: 0.1668  m1_loss_dice_3: 1.135  m1_loss_ce_4: 0.5088  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.125  m1_loss_ce_5: 0.4844  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.101  m1_loss_ce_6: 0.5003  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.111  m1_loss_ce_7: 0.4771  m1_loss_mask_7: 0.1627  m1_loss_dice_7: 1.062  m1_loss_ce_8: 0.5039  m1_loss_mask_8: 0.1622  m1_loss_dice_8: 1.115  m2_loss_ce: 0.5018  m2_loss_mask: 0.1664  m2_loss_dice: 1.129  m2_loss_ce_0: 0.5951  m2_loss_mask_0: 0.1967  m2_loss_dice_0: 1.366  m2_loss_ce_1: 0.651  m2_loss_mask_1: 0.1748  m2_loss_dice_1: 1.242  m2_loss_ce_2: 0.5722  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.2  m2_loss_ce_3: 0.555  m2_loss_mask_3: 0.173  m2_loss_dice_3: 1.149  m2_loss_ce_4: 0.5119  m2_loss_mask_4: 0.1681  m2_loss_dice_4: 1.15  m2_loss_ce_5: 0.4871  m2_loss_mask_5: 0.1676  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.4837  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.121  m2_loss_ce_7: 0.4947  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.116  m2_loss_ce_8: 0.4788  m2_loss_mask_8: 0.1659  m2_loss_dice_8: 1.133  com_loss_ce: 2.139  com_loss_mask: 0.6936  com_loss_dice: 0.9779    time: 1.4722  last_time: 1.4540  data_time: 0.0403  last_data_time: 0.0301   lr: 0.0001  max_mem: 34860M
[08/18 21:29:40] d2.utils.events INFO:  eta: 0:04:53  iter: 799  total_loss: 44.33  m1_loss_ce: 0.515  m1_loss_mask: 0.159  m1_loss_dice: 1.201  m1_loss_ce_0: 0.6242  m1_loss_mask_0: 0.1881  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.6963  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.6287  m1_loss_mask_2: 0.1647  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.571  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.5354  m1_loss_mask_4: 0.16  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5125  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.5107  m1_loss_mask_6: 0.162  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.4962  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4973  m1_loss_mask_8: 0.159  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5274  m2_loss_mask: 0.1546  m2_loss_dice: 1.235  m2_loss_ce_0: 0.6077  m2_loss_mask_0: 0.1893  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.7072  m2_loss_mask_1: 0.1692  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6345  m2_loss_mask_2: 0.1598  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.6024  m2_loss_mask_3: 0.1551  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.58  m2_loss_mask_4: 0.1552  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.5453  m2_loss_mask_5: 0.1567  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.5484  m2_loss_mask_6: 0.155  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5697  m2_loss_mask_7: 0.1541  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.5348  m2_loss_mask_8: 0.1556  m2_loss_dice_8: 1.209  com_loss_ce: 2.144  com_loss_mask: 0.6936  com_loss_dice: 0.9798    time: 1.4717  last_time: 1.4885  data_time: 0.0410  last_data_time: 0.0442   lr: 0.0001  max_mem: 34860M
[08/18 21:30:10] d2.utils.events INFO:  eta: 0:04:24  iter: 819  total_loss: 45.37  m1_loss_ce: 0.5429  m1_loss_mask: 0.155  m1_loss_dice: 1.279  m1_loss_ce_0: 0.6749  m1_loss_mask_0: 0.1754  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.7287  m1_loss_mask_1: 0.1665  m1_loss_dice_1: 1.394  m1_loss_ce_2: 0.644  m1_loss_mask_2: 0.1621  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5894  m1_loss_mask_3: 0.1559  m1_loss_dice_3: 1.333  m1_loss_ce_4: 0.5551  m1_loss_mask_4: 0.1559  m1_loss_dice_4: 1.308  m1_loss_ce_5: 0.5759  m1_loss_mask_5: 0.1534  m1_loss_dice_5: 1.321  m1_loss_ce_6: 0.5402  m1_loss_mask_6: 0.1548  m1_loss_dice_6: 1.27  m1_loss_ce_7: 0.5395  m1_loss_mask_7: 0.1541  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.5376  m1_loss_mask_8: 0.1548  m1_loss_dice_8: 1.282  m2_loss_ce: 0.5554  m2_loss_mask: 0.1611  m2_loss_dice: 1.286  m2_loss_ce_0: 0.6603  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.519  m2_loss_ce_1: 0.7394  m2_loss_mask_1: 0.1716  m2_loss_dice_1: 1.427  m2_loss_ce_2: 0.6664  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5855  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.314  m2_loss_ce_4: 0.5727  m2_loss_mask_4: 0.1657  m2_loss_dice_4: 1.323  m2_loss_ce_5: 0.5944  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.5358  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.5433  m2_loss_mask_7: 0.1616  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.5417  m2_loss_mask_8: 0.1616  m2_loss_dice_8: 1.268  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9816    time: 1.4718  last_time: 1.4654  data_time: 0.0446  last_data_time: 0.0349   lr: 0.0001  max_mem: 34860M
[08/18 21:30:39] d2.utils.events INFO:  eta: 0:03:55  iter: 839  total_loss: 43.31  m1_loss_ce: 0.4761  m1_loss_mask: 0.1587  m1_loss_dice: 1.189  m1_loss_ce_0: 0.5974  m1_loss_mask_0: 0.1826  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.6368  m1_loss_mask_1: 0.1668  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5693  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.5103  m1_loss_mask_3: 0.1618  m1_loss_dice_3: 1.188  m1_loss_ce_4: 0.4938  m1_loss_mask_4: 0.1563  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.4921  m1_loss_mask_5: 0.1574  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.509  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.175  m1_loss_ce_7: 0.4884  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.4628  m1_loss_mask_8: 0.1586  m1_loss_dice_8: 1.175  m2_loss_ce: 0.504  m2_loss_mask: 0.1586  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6138  m2_loss_mask_0: 0.1824  m2_loss_dice_0: 1.372  m2_loss_ce_1: 0.6574  m2_loss_mask_1: 0.1698  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.623  m2_loss_mask_2: 0.1645  m2_loss_dice_2: 1.292  m2_loss_ce_3: 0.5594  m2_loss_mask_3: 0.1617  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5238  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5308  m2_loss_mask_5: 0.161  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.4885  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4725  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.195  m2_loss_ce_8: 0.4918  m2_loss_mask_8: 0.1593  m2_loss_dice_8: 1.23  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9794    time: 1.4716  last_time: 1.4521  data_time: 0.0411  last_data_time: 0.0378   lr: 0.0001  max_mem: 34860M
[08/18 21:31:08] d2.utils.events INFO:  eta: 0:03:25  iter: 859  total_loss: 44.21  m1_loss_ce: 0.5527  m1_loss_mask: 0.157  m1_loss_dice: 1.196  m1_loss_ce_0: 0.6108  m1_loss_mask_0: 0.1941  m1_loss_dice_0: 1.378  m1_loss_ce_1: 0.6873  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.317  m1_loss_ce_2: 0.6761  m1_loss_mask_2: 0.1649  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.6087  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.5551  m1_loss_mask_4: 0.16  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.5176  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.5332  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.5213  m1_loss_mask_7: 0.1609  m1_loss_dice_7: 1.182  m1_loss_ce_8: 0.535  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.221  m2_loss_ce: 0.5643  m2_loss_mask: 0.1712  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6524  m2_loss_mask_0: 0.2002  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.6925  m2_loss_mask_1: 0.1807  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.6692  m2_loss_mask_2: 0.1703  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.6063  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5794  m2_loss_mask_4: 0.1691  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5863  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5333  m2_loss_mask_6: 0.17  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5641  m2_loss_mask_7: 0.1694  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.564  m2_loss_mask_8: 0.1704  m2_loss_dice_8: 1.218  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9795    time: 1.4712  last_time: 1.4176  data_time: 0.0441  last_data_time: 0.0454   lr: 0.0001  max_mem: 34860M
[08/18 21:31:38] d2.utils.events INFO:  eta: 0:02:56  iter: 879  total_loss: 45.71  m1_loss_ce: 0.529  m1_loss_mask: 0.1579  m1_loss_dice: 1.211  m1_loss_ce_0: 0.6751  m1_loss_mask_0: 0.1933  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.7128  m1_loss_mask_1: 0.1807  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.6654  m1_loss_mask_2: 0.1652  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5597  m1_loss_mask_3: 0.1599  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.5655  m1_loss_mask_4: 0.1603  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.5587  m1_loss_mask_5: 0.158  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5625  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.5371  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.5248  m1_loss_mask_8: 0.1556  m1_loss_dice_8: 1.199  m2_loss_ce: 0.5594  m2_loss_mask: 0.1668  m2_loss_dice: 1.246  m2_loss_ce_0: 0.64  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.6913  m2_loss_mask_1: 0.1783  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6652  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.6181  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5484  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5714  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.5742  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.5456  m2_loss_mask_7: 0.1672  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.5393  m2_loss_mask_8: 0.1632  m2_loss_dice_8: 1.232  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9797    time: 1.4711  last_time: 1.3828  data_time: 0.0414  last_data_time: 0.0329   lr: 0.0001  max_mem: 34860M
[08/18 21:32:07] d2.utils.events INFO:  eta: 0:02:26  iter: 899  total_loss: 43.47  m1_loss_ce: 0.5008  m1_loss_mask: 0.1591  m1_loss_dice: 1.157  m1_loss_ce_0: 0.571  m1_loss_mask_0: 0.1817  m1_loss_dice_0: 1.339  m1_loss_ce_1: 0.6236  m1_loss_mask_1: 0.169  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.576  m1_loss_mask_2: 0.1615  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.5448  m1_loss_mask_3: 0.1573  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.513  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.5101  m1_loss_mask_5: 0.1573  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4862  m1_loss_mask_6: 0.1577  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.4862  m1_loss_mask_7: 0.1571  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.5067  m1_loss_mask_8: 0.1572  m1_loss_dice_8: 1.17  m2_loss_ce: 0.4886  m2_loss_mask: 0.1605  m2_loss_dice: 1.182  m2_loss_ce_0: 0.5825  m2_loss_mask_0: 0.192  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6293  m2_loss_mask_1: 0.1756  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.6205  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.5672  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.229  m2_loss_ce_4: 0.5315  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.4875  m2_loss_mask_5: 0.1646  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5207  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5068  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4756  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.183  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9798    time: 1.4707  last_time: 1.4050  data_time: 0.0404  last_data_time: 0.0376   lr: 0.0001  max_mem: 34860M
[08/18 21:32:37] d2.utils.events INFO:  eta: 0:01:57  iter: 919  total_loss: 44.02  m1_loss_ce: 0.4941  m1_loss_mask: 0.1791  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5879  m1_loss_mask_0: 0.2093  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6585  m1_loss_mask_1: 0.1945  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.604  m1_loss_mask_2: 0.1886  m1_loss_dice_2: 1.36  m1_loss_ce_3: 0.5272  m1_loss_mask_3: 0.1824  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5168  m1_loss_mask_4: 0.1806  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.5208  m1_loss_mask_5: 0.1788  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.5151  m1_loss_mask_6: 0.1781  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.4784  m1_loss_mask_7: 0.1785  m1_loss_dice_7: 1.264  m1_loss_ce_8: 0.4926  m1_loss_mask_8: 0.177  m1_loss_dice_8: 1.273  m2_loss_ce: 0.5311  m2_loss_mask: 0.181  m2_loss_dice: 1.235  m2_loss_ce_0: 0.6709  m2_loss_mask_0: 0.2099  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.7264  m2_loss_mask_1: 0.1969  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.62  m2_loss_mask_2: 0.1891  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.59  m2_loss_mask_3: 0.1875  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5653  m2_loss_mask_4: 0.1867  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5557  m2_loss_mask_5: 0.1861  m2_loss_dice_5: 1.219  m2_loss_ce_6: 0.5415  m2_loss_mask_6: 0.1835  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.5528  m2_loss_mask_7: 0.1796  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.5288  m2_loss_mask_8: 0.1825  m2_loss_dice_8: 1.244  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9801    time: 1.4711  last_time: 1.4196  data_time: 0.0419  last_data_time: 0.0367   lr: 0.0001  max_mem: 34860M
[08/18 21:33:06] d2.utils.events INFO:  eta: 0:01:28  iter: 939  total_loss: 44.21  m1_loss_ce: 0.52  m1_loss_mask: 0.1527  m1_loss_dice: 1.196  m1_loss_ce_0: 0.6717  m1_loss_mask_0: 0.1823  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6626  m1_loss_mask_1: 0.166  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5987  m1_loss_mask_2: 0.1591  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5789  m1_loss_mask_3: 0.156  m1_loss_dice_3: 1.204  m1_loss_ce_4: 0.5734  m1_loss_mask_4: 0.1538  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.5579  m1_loss_mask_5: 0.1536  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.5469  m1_loss_mask_6: 0.1519  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.5257  m1_loss_mask_7: 0.1512  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.5345  m1_loss_mask_8: 0.1499  m1_loss_dice_8: 1.161  m2_loss_ce: 0.5586  m2_loss_mask: 0.1571  m2_loss_dice: 1.202  m2_loss_ce_0: 0.7177  m2_loss_mask_0: 0.1838  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.7277  m2_loss_mask_1: 0.1681  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.6405  m2_loss_mask_2: 0.1591  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.6015  m2_loss_mask_3: 0.158  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5575  m2_loss_mask_4: 0.1586  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.571  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5588  m2_loss_mask_6: 0.1575  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.559  m2_loss_mask_7: 0.1572  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.5777  m2_loss_mask_8: 0.1567  m2_loss_dice_8: 1.198  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9806    time: 1.4708  last_time: 1.5045  data_time: 0.0425  last_data_time: 0.0387   lr: 0.0001  max_mem: 34860M
[08/18 21:33:36] d2.utils.events INFO:  eta: 0:00:58  iter: 959  total_loss: 46.09  m1_loss_ce: 0.5412  m1_loss_mask: 0.1666  m1_loss_dice: 1.229  m1_loss_ce_0: 0.6585  m1_loss_mask_0: 0.1908  m1_loss_dice_0: 1.513  m1_loss_ce_1: 0.7106  m1_loss_mask_1: 0.1767  m1_loss_dice_1: 1.428  m1_loss_ce_2: 0.6319  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.345  m1_loss_ce_3: 0.6121  m1_loss_mask_3: 0.1675  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5687  m1_loss_mask_4: 0.1672  m1_loss_dice_4: 1.313  m1_loss_ce_5: 0.5584  m1_loss_mask_5: 0.1647  m1_loss_dice_5: 1.269  m1_loss_ce_6: 0.5734  m1_loss_mask_6: 0.1672  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.5462  m1_loss_mask_7: 0.1673  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.522  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.226  m2_loss_ce: 0.5653  m2_loss_mask: 0.1689  m2_loss_dice: 1.327  m2_loss_ce_0: 0.6727  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.555  m2_loss_ce_1: 0.7137  m2_loss_mask_1: 0.1798  m2_loss_dice_1: 1.473  m2_loss_ce_2: 0.653  m2_loss_mask_2: 0.1763  m2_loss_dice_2: 1.369  m2_loss_ce_3: 0.5964  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.334  m2_loss_ce_4: 0.595  m2_loss_mask_4: 0.1721  m2_loss_dice_4: 1.345  m2_loss_ce_5: 0.5721  m2_loss_mask_5: 0.1691  m2_loss_dice_5: 1.307  m2_loss_ce_6: 0.5675  m2_loss_mask_6: 0.1708  m2_loss_dice_6: 1.297  m2_loss_ce_7: 0.5618  m2_loss_mask_7: 0.1709  m2_loss_dice_7: 1.308  m2_loss_ce_8: 0.5432  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.286  com_loss_ce: 2.148  com_loss_mask: 0.6936  com_loss_dice: 0.9801    time: 1.4706  last_time: 1.4445  data_time: 0.0406  last_data_time: 0.0322   lr: 0.0001  max_mem: 34860M
[08/18 21:34:05] d2.utils.events INFO:  eta: 0:00:29  iter: 979  total_loss: 43.53  m1_loss_ce: 0.5153  m1_loss_mask: 0.1689  m1_loss_dice: 1.128  m1_loss_ce_0: 0.6502  m1_loss_mask_0: 0.1938  m1_loss_dice_0: 1.348  m1_loss_ce_1: 0.7113  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.643  m1_loss_mask_2: 0.1739  m1_loss_dice_2: 1.224  m1_loss_ce_3: 0.5658  m1_loss_mask_3: 0.1712  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.5498  m1_loss_mask_4: 0.1703  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.5318  m1_loss_mask_5: 0.1697  m1_loss_dice_5: 1.175  m1_loss_ce_6: 0.5222  m1_loss_mask_6: 0.1699  m1_loss_dice_6: 1.128  m1_loss_ce_7: 0.5248  m1_loss_mask_7: 0.1691  m1_loss_dice_7: 1.125  m1_loss_ce_8: 0.515  m1_loss_mask_8: 0.1719  m1_loss_dice_8: 1.173  m2_loss_ce: 0.533  m2_loss_mask: 0.1714  m2_loss_dice: 1.171  m2_loss_ce_0: 0.6218  m2_loss_mask_0: 0.1974  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6954  m2_loss_mask_1: 0.1826  m2_loss_dice_1: 1.328  m2_loss_ce_2: 0.6627  m2_loss_mask_2: 0.1775  m2_loss_dice_2: 1.259  m2_loss_ce_3: 0.594  m2_loss_mask_3: 0.1767  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.5772  m2_loss_mask_4: 0.1763  m2_loss_dice_4: 1.189  m2_loss_ce_5: 0.5538  m2_loss_mask_5: 0.1775  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.558  m2_loss_mask_6: 0.1767  m2_loss_dice_6: 1.201  m2_loss_ce_7: 0.5487  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.166  m2_loss_ce_8: 0.5438  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.164  com_loss_ce: 2.141  com_loss_mask: 0.6936  com_loss_dice: 0.9796    time: 1.4705  last_time: 1.4831  data_time: 0.0408  last_data_time: 0.0509   lr: 0.0001  max_mem: 34860M
[08/18 21:34:34] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_sum/model_final.pth
[08/18 21:34:37] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 45.12  m1_loss_ce: 0.5047  m1_loss_mask: 0.1635  m1_loss_dice: 1.262  m1_loss_ce_0: 0.6474  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.6706  m1_loss_mask_1: 0.1767  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.6244  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.5816  m1_loss_mask_3: 0.1665  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5578  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5443  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.5254  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5274  m1_loss_mask_7: 0.1641  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.523  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.228  m2_loss_ce: 0.5262  m2_loss_mask: 0.1637  m2_loss_dice: 1.226  m2_loss_ce_0: 0.6439  m2_loss_mask_0: 0.1862  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6507  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.5957  m2_loss_mask_2: 0.1663  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5799  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.5584  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.542  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5336  m2_loss_mask_6: 0.1645  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5133  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5179  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.233  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9806    time: 1.4700  last_time: 1.5745  data_time: 0.0419  last_data_time: 0.0646   lr: 0.0001  max_mem: 34901M
[08/18 21:34:37] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:24:27 (1.4700 s / it)
[08/18 21:34:37] d2.engine.hooks INFO: Total training time: 0:24:37 (0:00:10 on hooks)
[08/18 21:34:37] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/18 21:34:37] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/18 21:34:37] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/18 21:34:37] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/18 21:34:37] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/18 21:36:09] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalio9amv6m ...
[08/18 21:36:27] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.745 | 81.303 | 69.981 |      19       |
| Things | 49.531 | 80.823 | 61.273 |       8       |
| Stuff  | 63.719 | 81.651 | 76.315 |      11       |
[08/18 21:36:27] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.393 | 97.696 | 99.690 |     Stuff     |
| class_8  | 71.770 | 84.408 | 85.027 |     Stuff     |
| class_11 | 87.981 | 89.347 | 98.471 |     Stuff     |
| class_12 | 41.028 | 79.859 | 51.376 |     Stuff     |
| class_13 | 35.161 | 76.553 | 45.930 |     Stuff     |
| class_17 | 40.980 | 64.181 | 63.852 |     Stuff     |
| class_19 | 48.652 | 69.645 | 69.858 |     Stuff     |
| class_20 | 64.069 | 77.032 | 83.173 |     Stuff     |
| class_21 | 89.530 | 90.178 | 99.282 |     Stuff     |
| class_22 | 36.644 | 77.378 | 47.357 |     Stuff     |
| class_23 | 87.701 | 91.887 | 95.444 |     Stuff     |
| class_24 | 52.064 | 77.108 | 67.520 |    Things     |
| class_25 | 48.377 | 74.853 | 64.629 |    Things     |
| class_26 | 64.256 | 82.851 | 77.556 |    Things     |
| class_27 | 47.098 | 89.487 | 52.632 |    Things     |
| class_28 | 54.660 | 90.308 | 60.526 |    Things     |
| class_31 | 51.442 | 85.077 | 60.465 |    Things     |
| class_32 | 37.543 | 75.380 | 49.805 |    Things     |
| class_33 | 40.805 | 71.522 | 57.052 |    Things     |
[08/18 21:36:27] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/18 21:36:27] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/18 21:36:27] d2.evaluation.testing INFO: copypaste: 57.7451,81.3026,69.9814,49.5307,80.8233,61.2733,63.7192,81.6512,76.3146,97.3934,97.6965,99.6898,71.7701,84.4083,85.0273,87.9807,89.3468,98.4709,41.0284,79.8589,51.3761,35.1610,76.5530,45.9302,40.9804,64.1807,63.8517,48.6524,69.6445,69.8582,64.0692,77.0317,83.1726,89.5303,90.1778,99.2821,36.6440,77.3777,47.3573,87.7011,91.8873,95.4442,52.0639,77.1084,67.5203,48.3768,74.8532,64.6288,64.2563,82.8511,77.5564,47.0983,89.4868,52.6316,54.6600,90.3079,60.5263,51.4420,85.0771,60.4651,37.5432,75.3797,49.8054,40.8051,71.5221,57.0524
