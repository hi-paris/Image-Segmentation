[08/16 02:00:56] detectron2 INFO: Rank of current process: 0. World size: 2
[08/16 02:00:57] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2                        NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/16 02:00:57] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_0_6_0_4_softmax.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/16 02:00:57] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_0_6_0_4_softmax.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4_softmax
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/16 02:00:57] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4_softmax
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/16 02:00:57] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4_softmax/config.yaml
[08/16 02:00:57] d2.utils.env INFO: Using a generated random seed 58682966
[08/16 02:01:01] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/16 02:01:01] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/16 02:01:02] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/16 02:01:02] d2.data.build INFO: Using training sampler TrainingSampler
[08/16 02:01:02] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 02:01:02] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/16 02:01:02] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/16 02:01:02] d2.data.build INFO: Making batched data loader with batch_size=4
[08/16 02:01:02] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/16 02:01:06] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/16 02:01:06] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 02:01:06] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 02:01:06] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 02:01:06] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 02:01:40] d2.utils.events INFO:  eta: 0:22:06  iter: 19  total_loss: 45.66  m1_loss_ce: 0.57  m1_loss_mask: 0.1474  m1_loss_dice: 1.284  m1_loss_ce_0: 0.6678  m1_loss_mask_0: 0.1952  m1_loss_dice_0: 1.565  m1_loss_ce_1: 0.7457  m1_loss_mask_1: 0.161  m1_loss_dice_1: 1.46  m1_loss_ce_2: 0.6842  m1_loss_mask_2: 0.155  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.625  m1_loss_mask_3: 0.1503  m1_loss_dice_3: 1.315  m1_loss_ce_4: 0.5876  m1_loss_mask_4: 0.1518  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.586  m1_loss_mask_5: 0.1515  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.571  m1_loss_mask_6: 0.15  m1_loss_dice_6: 1.292  m1_loss_ce_7: 0.5762  m1_loss_mask_7: 0.1469  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.5833  m1_loss_mask_8: 0.149  m1_loss_dice_8: 1.286  m2_loss_ce: 0.5142  m2_loss_mask: 0.1474  m2_loss_dice: 1.247  m2_loss_ce_0: 0.6476  m2_loss_mask_0: 0.176  m2_loss_dice_0: 1.492  m2_loss_ce_1: 0.6649  m2_loss_mask_1: 0.158  m2_loss_dice_1: 1.444  m2_loss_ce_2: 0.6492  m2_loss_mask_2: 0.1492  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.6189  m2_loss_mask_3: 0.1488  m2_loss_dice_3: 1.313  m2_loss_ce_4: 0.5699  m2_loss_mask_4: 0.15  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.5456  m2_loss_mask_5: 0.1491  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5393  m2_loss_mask_6: 0.1504  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.5558  m2_loss_mask_7: 0.1464  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.5211  m2_loss_mask_8: 0.1487  m2_loss_dice_8: 1.286  com_loss_ce: 2.19  com_loss_mask: 0.6934  com_loss_dice: 0.9807    time: 1.3639  last_time: 1.3450  data_time: 0.2106  last_data_time: 0.0482   lr: 0.0001  max_mem: 34397M
[08/16 02:02:07] d2.utils.events INFO:  eta: 0:21:35  iter: 39  total_loss: 43.51  m1_loss_ce: 0.518  m1_loss_mask: 0.1632  m1_loss_dice: 1.191  m1_loss_ce_0: 0.6956  m1_loss_mask_0: 0.1907  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.7103  m1_loss_mask_1: 0.1759  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.6417  m1_loss_mask_2: 0.1689  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.6019  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5651  m1_loss_mask_4: 0.1667  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.5692  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.54  m1_loss_mask_6: 0.1628  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.5504  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.5372  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.185  m2_loss_ce: 0.5362  m2_loss_mask: 0.1606  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6037  m2_loss_mask_0: 0.1804  m2_loss_dice_0: 1.4  m2_loss_ce_1: 0.6805  m2_loss_mask_1: 0.168  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.6392  m2_loss_mask_2: 0.1602  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.5489  m2_loss_mask_3: 0.1628  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5351  m2_loss_mask_4: 0.1633  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.5451  m2_loss_mask_5: 0.1616  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5393  m2_loss_mask_6: 0.1599  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.5147  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.194  m2_loss_ce_8: 0.5132  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.191  com_loss_ce: 2.195  com_loss_mask: 0.6934  com_loss_dice: 0.981    time: 1.3618  last_time: 1.4169  data_time: 0.0424  last_data_time: 0.0435   lr: 0.0001  max_mem: 34560M
[08/16 02:02:34] d2.utils.events INFO:  eta: 0:21:02  iter: 59  total_loss: 42.09  m1_loss_ce: 0.5177  m1_loss_mask: 0.1784  m1_loss_dice: 1.139  m1_loss_ce_0: 0.6597  m1_loss_mask_0: 0.2132  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.6785  m1_loss_mask_1: 0.1982  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.6304  m1_loss_mask_2: 0.1857  m1_loss_dice_2: 1.222  m1_loss_ce_3: 0.5782  m1_loss_mask_3: 0.1847  m1_loss_dice_3: 1.2  m1_loss_ce_4: 0.542  m1_loss_mask_4: 0.1829  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.5333  m1_loss_mask_5: 0.181  m1_loss_dice_5: 1.152  m1_loss_ce_6: 0.5096  m1_loss_mask_6: 0.1821  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.5094  m1_loss_mask_7: 0.1805  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.5  m1_loss_mask_8: 0.1829  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4835  m2_loss_mask: 0.1758  m2_loss_dice: 1.118  m2_loss_ce_0: 0.5748  m2_loss_mask_0: 0.2093  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.6111  m2_loss_mask_1: 0.1886  m2_loss_dice_1: 1.284  m2_loss_ce_2: 0.5815  m2_loss_mask_2: 0.1834  m2_loss_dice_2: 1.223  m2_loss_ce_3: 0.529  m2_loss_mask_3: 0.1808  m2_loss_dice_3: 1.18  m2_loss_ce_4: 0.492  m2_loss_mask_4: 0.1841  m2_loss_dice_4: 1.2  m2_loss_ce_5: 0.482  m2_loss_mask_5: 0.1814  m2_loss_dice_5: 1.17  m2_loss_ce_6: 0.481  m2_loss_mask_6: 0.1766  m2_loss_dice_6: 1.144  m2_loss_ce_7: 0.4935  m2_loss_mask_7: 0.1792  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.4651  m2_loss_mask_8: 0.1768  m2_loss_dice_8: 1.154  com_loss_ce: 2.18  com_loss_mask: 0.6934  com_loss_dice: 0.9768    time: 1.3527  last_time: 1.3081  data_time: 0.0400  last_data_time: 0.0369   lr: 0.0001  max_mem: 34560M
[08/16 02:03:01] d2.utils.events INFO:  eta: 0:20:37  iter: 79  total_loss: 45.53  m1_loss_ce: 0.5608  m1_loss_mask: 0.1725  m1_loss_dice: 1.273  m1_loss_ce_0: 0.6036  m1_loss_mask_0: 0.2031  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6593  m1_loss_mask_1: 0.1856  m1_loss_dice_1: 1.415  m1_loss_ce_2: 0.618  m1_loss_mask_2: 0.1802  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5899  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.33  m1_loss_ce_4: 0.5678  m1_loss_mask_4: 0.1699  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5541  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5544  m1_loss_mask_6: 0.1763  m1_loss_dice_6: 1.274  m1_loss_ce_7: 0.5121  m1_loss_mask_7: 0.173  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.5292  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.247  m2_loss_ce: 0.5382  m2_loss_mask: 0.1719  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6189  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.6506  m2_loss_mask_1: 0.1826  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.627  m2_loss_mask_2: 0.176  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5832  m2_loss_mask_3: 0.1733  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5409  m2_loss_mask_4: 0.1739  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5226  m2_loss_mask_5: 0.1714  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.504  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5144  m2_loss_mask_7: 0.1711  m2_loss_dice_7: 1.273  m2_loss_ce_8: 0.5104  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.245  com_loss_ce: 2.186  com_loss_mask: 0.6934  com_loss_dice: 0.9792    time: 1.3499  last_time: 1.3045  data_time: 0.0422  last_data_time: 0.0471   lr: 0.0001  max_mem: 34560M
[08/16 02:03:28] d2.utils.events INFO:  eta: 0:20:09  iter: 99  total_loss: 44.59  m1_loss_ce: 0.4792  m1_loss_mask: 0.185  m1_loss_dice: 1.232  m1_loss_ce_0: 0.5766  m1_loss_mask_0: 0.2177  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.6675  m1_loss_mask_1: 0.2021  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.6076  m1_loss_mask_2: 0.1952  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.573  m1_loss_mask_3: 0.1892  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5233  m1_loss_mask_4: 0.1906  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.5362  m1_loss_mask_5: 0.1868  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5279  m1_loss_mask_6: 0.187  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.5019  m1_loss_mask_7: 0.1858  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.5231  m1_loss_mask_8: 0.1835  m1_loss_dice_8: 1.231  m2_loss_ce: 0.4901  m2_loss_mask: 0.1839  m2_loss_dice: 1.217  m2_loss_ce_0: 0.5993  m2_loss_mask_0: 0.2166  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.6346  m2_loss_mask_1: 0.1953  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.5883  m2_loss_mask_2: 0.1875  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5421  m2_loss_mask_3: 0.1838  m2_loss_dice_3: 1.22  m2_loss_ce_4: 0.5409  m2_loss_mask_4: 0.1848  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.4926  m2_loss_mask_5: 0.1856  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5187  m2_loss_mask_6: 0.1852  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.4899  m2_loss_mask_7: 0.1874  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.5091  m2_loss_mask_8: 0.1864  m2_loss_dice_8: 1.182  com_loss_ce: 2.179  com_loss_mask: 0.6934  com_loss_dice: 0.9779    time: 1.3498  last_time: 1.3362  data_time: 0.0396  last_data_time: 0.0398   lr: 0.0001  max_mem: 34560M
[08/16 02:03:56] d2.utils.events INFO:  eta: 0:19:45  iter: 119  total_loss: 44.22  m1_loss_ce: 0.5545  m1_loss_mask: 0.1665  m1_loss_dice: 1.245  m1_loss_ce_0: 0.6548  m1_loss_mask_0: 0.2005  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.7393  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.6295  m1_loss_mask_2: 0.1765  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.5567  m1_loss_mask_3: 0.1751  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.5572  m1_loss_mask_4: 0.1732  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.5594  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.5542  m1_loss_mask_6: 0.1692  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.5135  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.5568  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.232  m2_loss_ce: 0.5014  m2_loss_mask: 0.1686  m2_loss_dice: 1.193  m2_loss_ce_0: 0.5962  m2_loss_mask_0: 0.1954  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.6806  m2_loss_mask_1: 0.1814  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.5908  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5556  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.5523  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.5412  m2_loss_mask_5: 0.1731  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.4955  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5055  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.5225  m2_loss_mask_8: 0.1689  m2_loss_dice_8: 1.219  com_loss_ce: 2.177  com_loss_mask: 0.6934  com_loss_dice: 0.98    time: 1.3513  last_time: 1.3003  data_time: 0.0405  last_data_time: 0.0419   lr: 0.0001  max_mem: 34560M
[08/16 02:04:23] d2.utils.events INFO:  eta: 0:19:19  iter: 139  total_loss: 43.55  m1_loss_ce: 0.5501  m1_loss_mask: 0.1611  m1_loss_dice: 1.151  m1_loss_ce_0: 0.6144  m1_loss_mask_0: 0.1867  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.7175  m1_loss_mask_1: 0.1767  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.654  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.6037  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.575  m1_loss_mask_4: 0.1686  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.5934  m1_loss_mask_5: 0.1671  m1_loss_dice_5: 1.154  m1_loss_ce_6: 0.577  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.5566  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.5636  m1_loss_mask_8: 0.1623  m1_loss_dice_8: 1.162  m2_loss_ce: 0.5609  m2_loss_mask: 0.1576  m2_loss_dice: 1.148  m2_loss_ce_0: 0.6509  m2_loss_mask_0: 0.1945  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.7235  m2_loss_mask_1: 0.1703  m2_loss_dice_1: 1.299  m2_loss_ce_2: 0.7057  m2_loss_mask_2: 0.1617  m2_loss_dice_2: 1.21  m2_loss_ce_3: 0.6122  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.5945  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5695  m2_loss_mask_5: 0.1614  m2_loss_dice_5: 1.179  m2_loss_ce_6: 0.5446  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.15  m2_loss_ce_7: 0.5533  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.151  m2_loss_ce_8: 0.5415  m2_loss_mask_8: 0.1571  m2_loss_dice_8: 1.15  com_loss_ce: 2.186  com_loss_mask: 0.6934  com_loss_dice: 0.9787    time: 1.3531  last_time: 1.4067  data_time: 0.0392  last_data_time: 0.0364   lr: 0.0001  max_mem: 34560M
[08/16 02:04:50] d2.utils.events INFO:  eta: 0:18:53  iter: 159  total_loss: 45.12  m1_loss_ce: 0.554  m1_loss_mask: 0.1786  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6644  m1_loss_mask_0: 0.2097  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.7151  m1_loss_mask_1: 0.1925  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.6693  m1_loss_mask_2: 0.186  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.6081  m1_loss_mask_3: 0.1843  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.5755  m1_loss_mask_4: 0.1827  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.5691  m1_loss_mask_5: 0.1787  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.5445  m1_loss_mask_6: 0.1799  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.5428  m1_loss_mask_7: 0.1785  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.56  m1_loss_mask_8: 0.1783  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5393  m2_loss_mask: 0.1733  m2_loss_dice: 1.207  m2_loss_ce_0: 0.6473  m2_loss_mask_0: 0.2031  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6998  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6415  m2_loss_mask_2: 0.1806  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.6219  m2_loss_mask_3: 0.1798  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5754  m2_loss_mask_4: 0.1769  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5685  m2_loss_mask_5: 0.1764  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5447  m2_loss_mask_6: 0.1752  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5507  m2_loss_mask_7: 0.1724  m2_loss_dice_7: 1.195  m2_loss_ce_8: 0.531  m2_loss_mask_8: 0.1739  m2_loss_dice_8: 1.191  com_loss_ce: 2.189  com_loss_mask: 0.6934  com_loss_dice: 0.9786    time: 1.3545  last_time: 1.3764  data_time: 0.0404  last_data_time: 0.0437   lr: 0.0001  max_mem: 34635M
[08/16 02:05:17] d2.utils.events INFO:  eta: 0:18:25  iter: 179  total_loss: 44.89  m1_loss_ce: 0.5443  m1_loss_mask: 0.172  m1_loss_dice: 1.22  m1_loss_ce_0: 0.6708  m1_loss_mask_0: 0.2064  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.6903  m1_loss_mask_1: 0.1941  m1_loss_dice_1: 1.366  m1_loss_ce_2: 0.6593  m1_loss_mask_2: 0.1811  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.5936  m1_loss_mask_3: 0.1786  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.5253  m1_loss_mask_4: 0.1771  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.568  m1_loss_mask_5: 0.1765  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.5577  m1_loss_mask_6: 0.1756  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.5547  m1_loss_mask_7: 0.1748  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.5453  m1_loss_mask_8: 0.1734  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5907  m2_loss_mask: 0.1772  m2_loss_dice: 1.21  m2_loss_ce_0: 0.6405  m2_loss_mask_0: 0.2006  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.7069  m2_loss_mask_1: 0.1798  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.684  m2_loss_mask_2: 0.1763  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.6617  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.6051  m2_loss_mask_4: 0.1763  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5641  m2_loss_mask_5: 0.1765  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5574  m2_loss_mask_6: 0.1762  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5498  m2_loss_mask_7: 0.1789  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.5528  m2_loss_mask_8: 0.1744  m2_loss_dice_8: 1.223  com_loss_ce: 2.188  com_loss_mask: 0.6934  com_loss_dice: 0.979    time: 1.3520  last_time: 1.3930  data_time: 0.0390  last_data_time: 0.0447   lr: 0.0001  max_mem: 34635M
[08/16 02:05:44] d2.utils.events INFO:  eta: 0:17:58  iter: 199  total_loss: 45.7  m1_loss_ce: 0.577  m1_loss_mask: 0.1775  m1_loss_dice: 1.241  m1_loss_ce_0: 0.6154  m1_loss_mask_0: 0.1991  m1_loss_dice_0: 1.46  m1_loss_ce_1: 0.6839  m1_loss_mask_1: 0.1885  m1_loss_dice_1: 1.384  m1_loss_ce_2: 0.6528  m1_loss_mask_2: 0.1823  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5952  m1_loss_mask_3: 0.1832  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5688  m1_loss_mask_4: 0.1752  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.5395  m1_loss_mask_5: 0.1758  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5698  m1_loss_mask_6: 0.1775  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.5513  m1_loss_mask_7: 0.1776  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5361  m1_loss_mask_8: 0.1796  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5427  m2_loss_mask: 0.1624  m2_loss_dice: 1.244  m2_loss_ce_0: 0.686  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.7054  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.6406  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.6176  m2_loss_mask_3: 0.1653  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.6014  m2_loss_mask_4: 0.1657  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.5857  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.5763  m2_loss_mask_6: 0.1629  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5484  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.5574  m2_loss_mask_8: 0.1617  m2_loss_dice_8: 1.227  com_loss_ce: 2.184  com_loss_mask: 0.6934  com_loss_dice: 0.9785    time: 1.3522  last_time: 1.4130  data_time: 0.0406  last_data_time: 0.0454   lr: 0.0001  max_mem: 34635M
[08/16 02:06:12] d2.utils.events INFO:  eta: 0:17:31  iter: 219  total_loss: 45.69  m1_loss_ce: 0.569  m1_loss_mask: 0.1663  m1_loss_dice: 1.224  m1_loss_ce_0: 0.6577  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.452  m1_loss_ce_1: 0.7402  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.6819  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.336  m1_loss_ce_3: 0.6223  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.5658  m1_loss_mask_4: 0.1687  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.5917  m1_loss_mask_5: 0.1675  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.5709  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.5429  m1_loss_mask_7: 0.1658  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.5693  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5453  m2_loss_mask: 0.1661  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6596  m2_loss_mask_0: 0.1955  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.7214  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.6717  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.6136  m2_loss_mask_3: 0.1675  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5779  m2_loss_mask_4: 0.169  m2_loss_dice_4: 1.302  m2_loss_ce_5: 0.614  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5482  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.201  m2_loss_ce_7: 0.5674  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.572  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.207  com_loss_ce: 2.192  com_loss_mask: 0.6934  com_loss_dice: 0.9794    time: 1.3532  last_time: 1.3350  data_time: 0.0420  last_data_time: 0.0383   lr: 0.0001  max_mem: 34635M
[08/16 02:06:39] d2.utils.events INFO:  eta: 0:17:04  iter: 239  total_loss: 42.85  m1_loss_ce: 0.506  m1_loss_mask: 0.1609  m1_loss_dice: 1.196  m1_loss_ce_0: 0.6058  m1_loss_mask_0: 0.1868  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.6724  m1_loss_mask_1: 0.175  m1_loss_dice_1: 1.338  m1_loss_ce_2: 0.6439  m1_loss_mask_2: 0.1653  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5418  m1_loss_mask_3: 0.1616  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5273  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5228  m1_loss_mask_5: 0.1601  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.524  m1_loss_mask_6: 0.1629  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4939  m1_loss_mask_7: 0.1618  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.5077  m1_loss_mask_8: 0.1629  m1_loss_dice_8: 1.233  m2_loss_ce: 0.4939  m2_loss_mask: 0.161  m2_loss_dice: 1.213  m2_loss_ce_0: 0.606  m2_loss_mask_0: 0.1913  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6766  m2_loss_mask_1: 0.1771  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.5783  m2_loss_mask_2: 0.1599  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.5226  m2_loss_mask_3: 0.1596  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.4926  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.4841  m2_loss_mask_5: 0.1605  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4739  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.4756  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4661  m2_loss_mask_8: 0.1629  m2_loss_dice_8: 1.202  com_loss_ce: 2.177  com_loss_mask: 0.6934  com_loss_dice: 0.9786    time: 1.3536  last_time: 1.3748  data_time: 0.0398  last_data_time: 0.0332   lr: 0.0001  max_mem: 34635M
[08/16 02:07:07] d2.utils.events INFO:  eta: 0:16:39  iter: 259  total_loss: 46.79  m1_loss_ce: 0.5525  m1_loss_mask: 0.1615  m1_loss_dice: 1.315  m1_loss_ce_0: 0.6379  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.516  m1_loss_ce_1: 0.6837  m1_loss_mask_1: 0.1731  m1_loss_dice_1: 1.413  m1_loss_ce_2: 0.6538  m1_loss_mask_2: 0.169  m1_loss_dice_2: 1.383  m1_loss_ce_3: 0.598  m1_loss_mask_3: 0.1608  m1_loss_dice_3: 1.335  m1_loss_ce_4: 0.5784  m1_loss_mask_4: 0.1626  m1_loss_dice_4: 1.348  m1_loss_ce_5: 0.6004  m1_loss_mask_5: 0.1608  m1_loss_dice_5: 1.311  m1_loss_ce_6: 0.5537  m1_loss_mask_6: 0.1583  m1_loss_dice_6: 1.296  m1_loss_ce_7: 0.5416  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.325  m1_loss_ce_8: 0.5622  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.325  m2_loss_ce: 0.531  m2_loss_mask: 0.1609  m2_loss_dice: 1.292  m2_loss_ce_0: 0.6673  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.575  m2_loss_ce_1: 0.6915  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.456  m2_loss_ce_2: 0.6671  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.6258  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.327  m2_loss_ce_4: 0.5741  m2_loss_mask_4: 0.1639  m2_loss_dice_4: 1.319  m2_loss_ce_5: 0.571  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.36  m2_loss_ce_6: 0.5584  m2_loss_mask_6: 0.1609  m2_loss_dice_6: 1.354  m2_loss_ce_7: 0.5626  m2_loss_mask_7: 0.1596  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.5401  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.289  com_loss_ce: 2.184  com_loss_mask: 0.6934  com_loss_dice: 0.9814    time: 1.3571  last_time: 1.4682  data_time: 0.0411  last_data_time: 0.0421   lr: 0.0001  max_mem: 34728M
[08/16 02:07:35] d2.utils.events INFO:  eta: 0:16:12  iter: 279  total_loss: 45.89  m1_loss_ce: 0.5274  m1_loss_mask: 0.1708  m1_loss_dice: 1.29  m1_loss_ce_0: 0.6396  m1_loss_mask_0: 0.1988  m1_loss_dice_0: 1.512  m1_loss_ce_1: 0.6854  m1_loss_mask_1: 0.1846  m1_loss_dice_1: 1.426  m1_loss_ce_2: 0.6683  m1_loss_mask_2: 0.1761  m1_loss_dice_2: 1.358  m1_loss_ce_3: 0.5772  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.324  m1_loss_ce_4: 0.5723  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.5781  m1_loss_mask_5: 0.1706  m1_loss_dice_5: 1.315  m1_loss_ce_6: 0.5613  m1_loss_mask_6: 0.1726  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.5753  m1_loss_mask_7: 0.1719  m1_loss_dice_7: 1.29  m1_loss_ce_8: 0.5579  m1_loss_mask_8: 0.1713  m1_loss_dice_8: 1.29  m2_loss_ce: 0.5464  m2_loss_mask: 0.1641  m2_loss_dice: 1.292  m2_loss_ce_0: 0.6195  m2_loss_mask_0: 0.197  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6584  m2_loss_mask_1: 0.1757  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6473  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5485  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.552  m2_loss_mask_4: 0.167  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.5575  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.317  m2_loss_ce_6: 0.5302  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5162  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.5375  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.289  com_loss_ce: 2.183  com_loss_mask: 0.6934  com_loss_dice: 0.9787    time: 1.3578  last_time: 1.3463  data_time: 0.0397  last_data_time: 0.0369   lr: 0.0001  max_mem: 34728M
[08/16 02:08:02] d2.utils.events INFO:  eta: 0:15:46  iter: 299  total_loss: 44.35  m1_loss_ce: 0.5096  m1_loss_mask: 0.1676  m1_loss_dice: 1.244  m1_loss_ce_0: 0.6235  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.461  m1_loss_ce_1: 0.6953  m1_loss_mask_1: 0.1797  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.6291  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.346  m1_loss_ce_3: 0.6  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5495  m1_loss_mask_4: 0.1703  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.557  m1_loss_mask_5: 0.1687  m1_loss_dice_5: 1.29  m1_loss_ce_6: 0.5562  m1_loss_mask_6: 0.1673  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.5198  m1_loss_mask_7: 0.1666  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.528  m1_loss_mask_8: 0.1709  m1_loss_dice_8: 1.25  m2_loss_ce: 0.5457  m2_loss_mask: 0.1684  m2_loss_dice: 1.256  m2_loss_ce_0: 0.6558  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6668  m2_loss_mask_1: 0.1809  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.6245  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5806  m2_loss_mask_3: 0.1681  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5421  m2_loss_mask_4: 0.1717  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5354  m2_loss_mask_5: 0.1693  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.5311  m2_loss_mask_6: 0.1668  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.5511  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.5316  m2_loss_mask_8: 0.1673  m2_loss_dice_8: 1.259  com_loss_ce: 2.179  com_loss_mask: 0.6934  com_loss_dice: 0.9799    time: 1.3596  last_time: 1.4401  data_time: 0.0387  last_data_time: 0.0468   lr: 0.0001  max_mem: 34728M
[08/16 02:08:30] d2.utils.events INFO:  eta: 0:15:20  iter: 319  total_loss: 45.56  m1_loss_ce: 0.5581  m1_loss_mask: 0.1596  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6278  m1_loss_mask_0: 0.1896  m1_loss_dice_0: 1.473  m1_loss_ce_1: 0.6694  m1_loss_mask_1: 0.1719  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.62  m1_loss_mask_2: 0.1665  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.5965  m1_loss_mask_3: 0.1617  m1_loss_dice_3: 1.298  m1_loss_ce_4: 0.6031  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.315  m1_loss_ce_5: 0.5503  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.304  m1_loss_ce_6: 0.5335  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.289  m1_loss_ce_7: 0.5322  m1_loss_mask_7: 0.1613  m1_loss_dice_7: 1.282  m1_loss_ce_8: 0.5409  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.259  m2_loss_ce: 0.5358  m2_loss_mask: 0.1604  m2_loss_dice: 1.247  m2_loss_ce_0: 0.6526  m2_loss_mask_0: 0.1906  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6567  m2_loss_mask_1: 0.1736  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.62  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5896  m2_loss_mask_3: 0.162  m2_loss_dice_3: 1.334  m2_loss_ce_4: 0.546  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.332  m2_loss_ce_5: 0.572  m2_loss_mask_5: 0.1622  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5538  m2_loss_mask_6: 0.1619  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.5399  m2_loss_mask_7: 0.1612  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5343  m2_loss_mask_8: 0.1603  m2_loss_dice_8: 1.257  com_loss_ce: 2.183  com_loss_mask: 0.6934  com_loss_dice: 0.9801    time: 1.3601  last_time: 1.3107  data_time: 0.0388  last_data_time: 0.0436   lr: 0.0001  max_mem: 34728M
[08/16 02:08:57] d2.utils.events INFO:  eta: 0:14:53  iter: 339  total_loss: 44.65  m1_loss_ce: 0.5687  m1_loss_mask: 0.1699  m1_loss_dice: 1.178  m1_loss_ce_0: 0.6622  m1_loss_mask_0: 0.1944  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.6968  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.6183  m1_loss_mask_2: 0.175  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5896  m1_loss_mask_3: 0.1721  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.5555  m1_loss_mask_4: 0.1707  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.5667  m1_loss_mask_5: 0.1707  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.5483  m1_loss_mask_6: 0.1693  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.5458  m1_loss_mask_7: 0.1687  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.5538  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.216  m2_loss_ce: 0.5785  m2_loss_mask: 0.1667  m2_loss_dice: 1.178  m2_loss_ce_0: 0.6503  m2_loss_mask_0: 0.202  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6982  m2_loss_mask_1: 0.1808  m2_loss_dice_1: 1.31  m2_loss_ce_2: 0.6628  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.255  m2_loss_ce_3: 0.608  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5621  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.194  m2_loss_ce_5: 0.5975  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.202  m2_loss_ce_6: 0.5875  m2_loss_mask_6: 0.1681  m2_loss_dice_6: 1.172  m2_loss_ce_7: 0.5773  m2_loss_mask_7: 0.1663  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.5653  m2_loss_mask_8: 0.1659  m2_loss_dice_8: 1.149  com_loss_ce: 2.186  com_loss_mask: 0.6934  com_loss_dice: 0.9796    time: 1.3599  last_time: 1.2591  data_time: 0.0383  last_data_time: 0.0344   lr: 0.0001  max_mem: 34728M
[08/16 02:09:24] d2.utils.events INFO:  eta: 0:14:24  iter: 359  total_loss: 43.9  m1_loss_ce: 0.5358  m1_loss_mask: 0.1712  m1_loss_dice: 1.157  m1_loss_ce_0: 0.6436  m1_loss_mask_0: 0.1925  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.7139  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.295  m1_loss_ce_2: 0.6393  m1_loss_mask_2: 0.1762  m1_loss_dice_2: 1.235  m1_loss_ce_3: 0.5872  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.5877  m1_loss_mask_4: 0.1698  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.5645  m1_loss_mask_5: 0.1748  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.573  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.172  m1_loss_ce_7: 0.5412  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.5665  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.196  m2_loss_ce: 0.5215  m2_loss_mask: 0.1626  m2_loss_dice: 1.205  m2_loss_ce_0: 0.6216  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.393  m2_loss_ce_1: 0.6691  m2_loss_mask_1: 0.1729  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6218  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5935  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5449  m2_loss_mask_4: 0.166  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.5294  m2_loss_mask_5: 0.168  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.5554  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.184  m2_loss_ce_7: 0.5334  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.5276  m2_loss_mask_8: 0.1661  m2_loss_dice_8: 1.199  com_loss_ce: 2.183  com_loss_mask: 0.6934  com_loss_dice: 0.9781    time: 1.3590  last_time: 1.3291  data_time: 0.0370  last_data_time: 0.0337   lr: 0.0001  max_mem: 34728M
[08/16 02:09:51] d2.utils.events INFO:  eta: 0:13:57  iter: 379  total_loss: 46.24  m1_loss_ce: 0.5692  m1_loss_mask: 0.1703  m1_loss_dice: 1.257  m1_loss_ce_0: 0.6646  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.521  m1_loss_ce_1: 0.7243  m1_loss_mask_1: 0.1845  m1_loss_dice_1: 1.415  m1_loss_ce_2: 0.7115  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.337  m1_loss_ce_3: 0.625  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.308  m1_loss_ce_4: 0.6199  m1_loss_mask_4: 0.1719  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5981  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.559  m1_loss_mask_6: 0.1708  m1_loss_dice_6: 1.275  m1_loss_ce_7: 0.5595  m1_loss_mask_7: 0.174  m1_loss_dice_7: 1.304  m1_loss_ce_8: 0.5815  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.308  m2_loss_ce: 0.5781  m2_loss_mask: 0.1751  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6585  m2_loss_mask_0: 0.2019  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.7187  m2_loss_mask_1: 0.196  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.6879  m2_loss_mask_2: 0.179  m2_loss_dice_2: 1.36  m2_loss_ce_3: 0.6287  m2_loss_mask_3: 0.1778  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5905  m2_loss_mask_4: 0.1792  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.594  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.297  m2_loss_ce_6: 0.5817  m2_loss_mask_6: 0.1742  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5904  m2_loss_mask_7: 0.1737  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.5746  m2_loss_mask_8: 0.1755  m2_loss_dice_8: 1.262  com_loss_ce: 2.186  com_loss_mask: 0.6934  com_loss_dice: 0.9781    time: 1.3589  last_time: 1.3227  data_time: 0.0383  last_data_time: 0.0355   lr: 0.0001  max_mem: 34728M
[08/16 02:10:20] d2.utils.events INFO:  eta: 0:13:30  iter: 399  total_loss: 46.33  m1_loss_ce: 0.558  m1_loss_mask: 0.1639  m1_loss_dice: 1.235  m1_loss_ce_0: 0.7146  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.7042  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.6552  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.573  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.5772  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.277  m1_loss_ce_5: 0.5544  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.5507  m1_loss_mask_6: 0.1662  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.5317  m1_loss_mask_7: 0.1645  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.5515  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.229  m2_loss_ce: 0.5682  m2_loss_mask: 0.1612  m2_loss_dice: 1.248  m2_loss_ce_0: 0.68  m2_loss_mask_0: 0.1856  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.7  m2_loss_mask_1: 0.1724  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.6453  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.6127  m2_loss_mask_3: 0.169  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5996  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.584  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5774  m2_loss_mask_6: 0.1614  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.5669  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.5763  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.222  com_loss_ce: 2.191  com_loss_mask: 0.6934  com_loss_dice: 0.9785    time: 1.3610  last_time: 1.3203  data_time: 0.0384  last_data_time: 0.0357   lr: 0.0001  max_mem: 34728M
[08/16 02:10:47] d2.utils.events INFO:  eta: 0:13:03  iter: 419  total_loss: 44.97  m1_loss_ce: 0.5608  m1_loss_mask: 0.1502  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6805  m1_loss_mask_0: 0.1669  m1_loss_dice_0: 1.46  m1_loss_ce_1: 0.6867  m1_loss_mask_1: 0.1587  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.658  m1_loss_mask_2: 0.1535  m1_loss_dice_2: 1.284  m1_loss_ce_3: 0.5634  m1_loss_mask_3: 0.1518  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5502  m1_loss_mask_4: 0.1507  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.5525  m1_loss_mask_5: 0.1519  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.5508  m1_loss_mask_6: 0.1482  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.5333  m1_loss_mask_7: 0.1487  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.5423  m1_loss_mask_8: 0.1484  m1_loss_dice_8: 1.195  m2_loss_ce: 0.5517  m2_loss_mask: 0.1462  m2_loss_dice: 1.259  m2_loss_ce_0: 0.6422  m2_loss_mask_0: 0.1792  m2_loss_dice_0: 1.524  m2_loss_ce_1: 0.6868  m2_loss_mask_1: 0.1616  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.6404  m2_loss_mask_2: 0.1509  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.596  m2_loss_mask_3: 0.1521  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.5667  m2_loss_mask_4: 0.1542  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5761  m2_loss_mask_5: 0.1494  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5694  m2_loss_mask_6: 0.1494  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5392  m2_loss_mask_7: 0.1491  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.5663  m2_loss_mask_8: 0.1474  m2_loss_dice_8: 1.249  com_loss_ce: 2.185  com_loss_mask: 0.6934  com_loss_dice: 0.9807    time: 1.3613  last_time: 1.3478  data_time: 0.0401  last_data_time: 0.0434   lr: 0.0001  max_mem: 34728M
[08/16 02:11:14] d2.utils.events INFO:  eta: 0:12:36  iter: 439  total_loss: 44.03  m1_loss_ce: 0.5256  m1_loss_mask: 0.1687  m1_loss_dice: 1.187  m1_loss_ce_0: 0.6314  m1_loss_mask_0: 0.1961  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.6664  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.6115  m1_loss_mask_2: 0.177  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5469  m1_loss_mask_3: 0.1743  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.5467  m1_loss_mask_4: 0.1722  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.5341  m1_loss_mask_5: 0.1704  m1_loss_dice_5: 1.19  m1_loss_ce_6: 0.5286  m1_loss_mask_6: 0.1709  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.5013  m1_loss_mask_7: 0.169  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.5229  m1_loss_mask_8: 0.169  m1_loss_dice_8: 1.201  m2_loss_ce: 0.5157  m2_loss_mask: 0.165  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6189  m2_loss_mask_0: 0.2029  m2_loss_dice_0: 1.4  m2_loss_ce_1: 0.653  m2_loss_mask_1: 0.1797  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.6322  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.5605  m2_loss_mask_3: 0.1708  m2_loss_dice_3: 1.258  m2_loss_ce_4: 0.5476  m2_loss_mask_4: 0.1693  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5724  m2_loss_mask_5: 0.1693  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.5345  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.5227  m2_loss_mask_7: 0.1655  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.5464  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.212  com_loss_ce: 2.177  com_loss_mask: 0.6934  com_loss_dice: 0.9794    time: 1.3602  last_time: 1.3248  data_time: 0.0374  last_data_time: 0.0365   lr: 0.0001  max_mem: 34728M
[08/16 02:11:41] d2.utils.events INFO:  eta: 0:12:09  iter: 459  total_loss: 43.8  m1_loss_ce: 0.5027  m1_loss_mask: 0.1699  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5726  m1_loss_mask_0: 0.1914  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6381  m1_loss_mask_1: 0.1849  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.6191  m1_loss_mask_2: 0.1724  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5648  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.5075  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.4931  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4844  m1_loss_mask_6: 0.1691  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.5057  m1_loss_mask_7: 0.1709  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.5144  m1_loss_mask_8: 0.1695  m1_loss_dice_8: 1.248  m2_loss_ce: 0.526  m2_loss_mask: 0.1681  m2_loss_dice: 1.252  m2_loss_ce_0: 0.5998  m2_loss_mask_0: 0.1949  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6667  m2_loss_mask_1: 0.1813  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.596  m2_loss_mask_2: 0.1717  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.5535  m2_loss_mask_3: 0.1698  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5218  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5284  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.5359  m2_loss_mask_6: 0.1689  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5232  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.268  m2_loss_ce_8: 0.5238  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.239  com_loss_ce: 2.175  com_loss_mask: 0.6934  com_loss_dice: 0.9794    time: 1.3598  last_time: 1.3968  data_time: 0.0382  last_data_time: 0.0387   lr: 0.0001  max_mem: 34728M
[08/16 02:12:08] d2.utils.events INFO:  eta: 0:11:42  iter: 479  total_loss: 45  m1_loss_ce: 0.5309  m1_loss_mask: 0.1671  m1_loss_dice: 1.202  m1_loss_ce_0: 0.6435  m1_loss_mask_0: 0.1941  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.7262  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.6607  m1_loss_mask_2: 0.1668  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.6329  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.583  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.5846  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.583  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.5506  m1_loss_mask_7: 0.1622  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.5156  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.198  m2_loss_ce: 0.517  m2_loss_mask: 0.1661  m2_loss_dice: 1.228  m2_loss_ce_0: 0.6778  m2_loss_mask_0: 0.2  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.702  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.38  m2_loss_ce_2: 0.6678  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5961  m2_loss_mask_3: 0.1719  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5897  m2_loss_mask_4: 0.1726  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.5467  m2_loss_mask_5: 0.1692  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.5749  m2_loss_mask_6: 0.1698  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.5442  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.5517  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.222  com_loss_ce: 2.182  com_loss_mask: 0.6934  com_loss_dice: 0.9804    time: 1.3597  last_time: 1.4085  data_time: 0.0410  last_data_time: 0.0397   lr: 0.0001  max_mem: 34728M
[08/16 02:12:35] d2.utils.events INFO:  eta: 0:11:14  iter: 499  total_loss: 40.58  m1_loss_ce: 0.4807  m1_loss_mask: 0.1651  m1_loss_dice: 1.12  m1_loss_ce_0: 0.5973  m1_loss_mask_0: 0.1963  m1_loss_dice_0: 1.297  m1_loss_ce_1: 0.6646  m1_loss_mask_1: 0.1775  m1_loss_dice_1: 1.245  m1_loss_ce_2: 0.6056  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.162  m1_loss_ce_3: 0.5443  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.099  m1_loss_ce_4: 0.5138  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.167  m1_loss_ce_5: 0.4919  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4809  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.074  m1_loss_ce_7: 0.4694  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.115  m1_loss_ce_8: 0.4691  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.093  m2_loss_ce: 0.4914  m2_loss_mask: 0.1689  m2_loss_dice: 1.125  m2_loss_ce_0: 0.5834  m2_loss_mask_0: 0.2055  m2_loss_dice_0: 1.328  m2_loss_ce_1: 0.6524  m2_loss_mask_1: 0.1824  m2_loss_dice_1: 1.25  m2_loss_ce_2: 0.6113  m2_loss_mask_2: 0.1732  m2_loss_dice_2: 1.179  m2_loss_ce_3: 0.5634  m2_loss_mask_3: 0.1767  m2_loss_dice_3: 1.176  m2_loss_ce_4: 0.5224  m2_loss_mask_4: 0.1754  m2_loss_dice_4: 1.17  m2_loss_ce_5: 0.5059  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.172  m2_loss_ce_6: 0.5268  m2_loss_mask_6: 0.1728  m2_loss_dice_6: 1.157  m2_loss_ce_7: 0.4935  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.142  m2_loss_ce_8: 0.5001  m2_loss_mask_8: 0.1695  m2_loss_dice_8: 1.138  com_loss_ce: 2.17  com_loss_mask: 0.6934  com_loss_dice: 0.9792    time: 1.3589  last_time: 1.3149  data_time: 0.0380  last_data_time: 0.0389   lr: 0.0001  max_mem: 34728M
[08/16 02:13:02] d2.utils.events INFO:  eta: 0:10:47  iter: 519  total_loss: 45.36  m1_loss_ce: 0.5618  m1_loss_mask: 0.1635  m1_loss_dice: 1.216  m1_loss_ce_0: 0.6351  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.6778  m1_loss_mask_1: 0.1715  m1_loss_dice_1: 1.305  m1_loss_ce_2: 0.6455  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.339  m1_loss_ce_3: 0.6239  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.566  m1_loss_mask_4: 0.1632  m1_loss_dice_4: 1.282  m1_loss_ce_5: 0.5859  m1_loss_mask_5: 0.1657  m1_loss_dice_5: 1.257  m1_loss_ce_6: 0.5541  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.5629  m1_loss_mask_7: 0.1632  m1_loss_dice_7: 1.234  m1_loss_ce_8: 0.5417  m1_loss_mask_8: 0.1639  m1_loss_dice_8: 1.253  m2_loss_ce: 0.5419  m2_loss_mask: 0.1605  m2_loss_dice: 1.255  m2_loss_ce_0: 0.6398  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.43  m2_loss_ce_1: 0.6999  m2_loss_mask_1: 0.1688  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.6327  m2_loss_mask_2: 0.1619  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5932  m2_loss_mask_3: 0.1613  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5867  m2_loss_mask_4: 0.1621  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5734  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5694  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.5365  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.5163  m2_loss_mask_8: 0.161  m2_loss_dice_8: 1.25  com_loss_ce: 2.179  com_loss_mask: 0.6934  com_loss_dice: 0.9786    time: 1.3588  last_time: 1.3007  data_time: 0.0389  last_data_time: 0.0422   lr: 0.0001  max_mem: 34728M
[08/16 02:13:30] d2.utils.events INFO:  eta: 0:10:20  iter: 539  total_loss: 43.3  m1_loss_ce: 0.5299  m1_loss_mask: 0.1556  m1_loss_dice: 1.141  m1_loss_ce_0: 0.633  m1_loss_mask_0: 0.1868  m1_loss_dice_0: 1.362  m1_loss_ce_1: 0.6537  m1_loss_mask_1: 0.1689  m1_loss_dice_1: 1.281  m1_loss_ce_2: 0.6142  m1_loss_mask_2: 0.1607  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5663  m1_loss_mask_3: 0.1601  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.5298  m1_loss_mask_4: 0.1602  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.5399  m1_loss_mask_5: 0.1584  m1_loss_dice_5: 1.171  m1_loss_ce_6: 0.5173  m1_loss_mask_6: 0.1587  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.5313  m1_loss_mask_7: 0.1583  m1_loss_dice_7: 1.188  m1_loss_ce_8: 0.5129  m1_loss_mask_8: 0.156  m1_loss_dice_8: 1.182  m2_loss_ce: 0.5034  m2_loss_mask: 0.1585  m2_loss_dice: 1.21  m2_loss_ce_0: 0.6686  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6784  m2_loss_mask_1: 0.1702  m2_loss_dice_1: 1.295  m2_loss_ce_2: 0.6335  m2_loss_mask_2: 0.1616  m2_loss_dice_2: 1.247  m2_loss_ce_3: 0.5754  m2_loss_mask_3: 0.161  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5435  m2_loss_mask_4: 0.1601  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.5381  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5176  m2_loss_mask_6: 0.1597  m2_loss_dice_6: 1.189  m2_loss_ce_7: 0.5308  m2_loss_mask_7: 0.1559  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.5269  m2_loss_mask_8: 0.1566  m2_loss_dice_8: 1.177  com_loss_ce: 2.174  com_loss_mask: 0.6934  com_loss_dice: 0.9778    time: 1.3589  last_time: 1.3550  data_time: 0.0386  last_data_time: 0.0378   lr: 0.0001  max_mem: 34728M
[08/16 02:13:57] d2.utils.events INFO:  eta: 0:09:54  iter: 559  total_loss: 43.63  m1_loss_ce: 0.569  m1_loss_mask: 0.1517  m1_loss_dice: 1.196  m1_loss_ce_0: 0.608  m1_loss_mask_0: 0.1751  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6551  m1_loss_mask_1: 0.1612  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6261  m1_loss_mask_2: 0.1564  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5643  m1_loss_mask_3: 0.1545  m1_loss_dice_3: 1.199  m1_loss_ce_4: 0.534  m1_loss_mask_4: 0.1554  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.5547  m1_loss_mask_5: 0.1513  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.5208  m1_loss_mask_6: 0.1516  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.5079  m1_loss_mask_7: 0.1502  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.5304  m1_loss_mask_8: 0.1503  m1_loss_dice_8: 1.194  m2_loss_ce: 0.5366  m2_loss_mask: 0.1458  m2_loss_dice: 1.214  m2_loss_ce_0: 0.6  m2_loss_mask_0: 0.1816  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.7063  m2_loss_mask_1: 0.1636  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.6442  m2_loss_mask_2: 0.1536  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5996  m2_loss_mask_3: 0.1501  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.5671  m2_loss_mask_4: 0.1506  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.5434  m2_loss_mask_5: 0.1505  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5507  m2_loss_mask_6: 0.1481  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.5431  m2_loss_mask_7: 0.1474  m2_loss_dice_7: 1.198  m2_loss_ce_8: 0.5303  m2_loss_mask_8: 0.1458  m2_loss_dice_8: 1.228  com_loss_ce: 2.181  com_loss_mask: 0.6934  com_loss_dice: 0.9795    time: 1.3591  last_time: 1.3628  data_time: 0.0401  last_data_time: 0.0473   lr: 0.0001  max_mem: 34728M
[08/16 02:14:25] d2.utils.events INFO:  eta: 0:09:27  iter: 579  total_loss: 44.71  m1_loss_ce: 0.5478  m1_loss_mask: 0.1704  m1_loss_dice: 1.216  m1_loss_ce_0: 0.6741  m1_loss_mask_0: 0.1863  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.7235  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.6467  m1_loss_mask_2: 0.172  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.6028  m1_loss_mask_3: 0.1715  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.6003  m1_loss_mask_4: 0.1713  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.5835  m1_loss_mask_5: 0.1675  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.5276  m1_loss_mask_6: 0.1709  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.5258  m1_loss_mask_7: 0.1704  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.5413  m1_loss_mask_8: 0.1687  m1_loss_dice_8: 1.228  m2_loss_ce: 0.5441  m2_loss_mask: 0.1718  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6404  m2_loss_mask_0: 0.2027  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.702  m2_loss_mask_1: 0.1809  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.6499  m2_loss_mask_2: 0.1739  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.5916  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.5621  m2_loss_mask_4: 0.1729  m2_loss_dice_4: 1.271  m2_loss_ce_5: 0.567  m2_loss_mask_5: 0.1731  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.5521  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5553  m2_loss_mask_7: 0.1739  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.534  m2_loss_mask_8: 0.1733  m2_loss_dice_8: 1.224  com_loss_ce: 2.183  com_loss_mask: 0.6934  com_loss_dice: 0.9792    time: 1.3591  last_time: 1.3524  data_time: 0.0381  last_data_time: 0.0345   lr: 0.0001  max_mem: 34728M
[08/16 02:14:52] d2.utils.events INFO:  eta: 0:09:00  iter: 599  total_loss: 44.84  m1_loss_ce: 0.5106  m1_loss_mask: 0.175  m1_loss_dice: 1.247  m1_loss_ce_0: 0.6344  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.6511  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5915  m1_loss_mask_2: 0.1761  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5493  m1_loss_mask_3: 0.174  m1_loss_dice_3: 1.281  m1_loss_ce_4: 0.5115  m1_loss_mask_4: 0.1746  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.5155  m1_loss_mask_5: 0.1728  m1_loss_dice_5: 1.266  m1_loss_ce_6: 0.5029  m1_loss_mask_6: 0.1743  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.4838  m1_loss_mask_7: 0.1734  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.4834  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5188  m2_loss_mask: 0.1774  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6222  m2_loss_mask_0: 0.2099  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.6659  m2_loss_mask_1: 0.1906  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6318  m2_loss_mask_2: 0.1788  m2_loss_dice_2: 1.365  m2_loss_ce_3: 0.5435  m2_loss_mask_3: 0.1801  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5306  m2_loss_mask_4: 0.1799  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5205  m2_loss_mask_5: 0.1797  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.5229  m2_loss_mask_6: 0.1815  m2_loss_dice_6: 1.27  m2_loss_ce_7: 0.5183  m2_loss_mask_7: 0.1762  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.5328  m2_loss_mask_8: 0.1765  m2_loss_dice_8: 1.215  com_loss_ce: 2.182  com_loss_mask: 0.6934  com_loss_dice: 0.9788    time: 1.3596  last_time: 1.3670  data_time: 0.0395  last_data_time: 0.0376   lr: 0.0001  max_mem: 34860M
[08/16 02:15:19] d2.utils.events INFO:  eta: 0:08:32  iter: 619  total_loss: 43.55  m1_loss_ce: 0.5287  m1_loss_mask: 0.1685  m1_loss_dice: 1.133  m1_loss_ce_0: 0.6402  m1_loss_mask_0: 0.1889  m1_loss_dice_0: 1.374  m1_loss_ce_1: 0.6989  m1_loss_mask_1: 0.1761  m1_loss_dice_1: 1.281  m1_loss_ce_2: 0.6428  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.567  m1_loss_mask_3: 0.1718  m1_loss_dice_3: 1.173  m1_loss_ce_4: 0.5395  m1_loss_mask_4: 0.1709  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.5136  m1_loss_mask_5: 0.1699  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.5105  m1_loss_mask_6: 0.1704  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.5075  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.5033  m1_loss_mask_8: 0.1698  m1_loss_dice_8: 1.16  m2_loss_ce: 0.5415  m2_loss_mask: 0.1696  m2_loss_dice: 1.172  m2_loss_ce_0: 0.6378  m2_loss_mask_0: 0.1948  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6899  m2_loss_mask_1: 0.1824  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.6449  m2_loss_mask_2: 0.1777  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.5717  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.199  m2_loss_ce_4: 0.5544  m2_loss_mask_4: 0.1751  m2_loss_dice_4: 1.22  m2_loss_ce_5: 0.5538  m2_loss_mask_5: 0.1747  m2_loss_dice_5: 1.222  m2_loss_ce_6: 0.5102  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.165  m2_loss_ce_7: 0.5255  m2_loss_mask_7: 0.1744  m2_loss_dice_7: 1.161  m2_loss_ce_8: 0.5242  m2_loss_mask_8: 0.1732  m2_loss_dice_8: 1.175  com_loss_ce: 2.181  com_loss_mask: 0.6934  com_loss_dice: 0.9798    time: 1.3587  last_time: 1.3294  data_time: 0.0377  last_data_time: 0.0426   lr: 0.0001  max_mem: 34860M
[08/16 02:15:46] d2.utils.events INFO:  eta: 0:08:05  iter: 639  total_loss: 44.45  m1_loss_ce: 0.4897  m1_loss_mask: 0.1678  m1_loss_dice: 1.232  m1_loss_ce_0: 0.6345  m1_loss_mask_0: 0.1892  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.6839  m1_loss_mask_1: 0.175  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.6236  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5759  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5241  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.5394  m1_loss_mask_5: 0.1672  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.5198  m1_loss_mask_6: 0.1672  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.534  m1_loss_mask_7: 0.1693  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4762  m1_loss_mask_8: 0.1693  m1_loss_dice_8: 1.232  m2_loss_ce: 0.5207  m2_loss_mask: 0.165  m2_loss_dice: 1.247  m2_loss_ce_0: 0.6404  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.7035  m2_loss_mask_1: 0.1754  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.6637  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5979  m2_loss_mask_3: 0.1677  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.5437  m2_loss_mask_4: 0.1677  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.5184  m2_loss_mask_5: 0.1683  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.4891  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.25  m2_loss_ce_7: 0.5366  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.5296  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.219  com_loss_ce: 2.179  com_loss_mask: 0.6934  com_loss_dice: 0.9808    time: 1.3589  last_time: 1.3394  data_time: 0.0407  last_data_time: 0.0357   lr: 0.0001  max_mem: 34860M
[08/16 02:16:13] d2.utils.events INFO:  eta: 0:07:38  iter: 659  total_loss: 46.71  m1_loss_ce: 0.5673  m1_loss_mask: 0.1632  m1_loss_dice: 1.239  m1_loss_ce_0: 0.6035  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.498  m1_loss_ce_1: 0.6702  m1_loss_mask_1: 0.1755  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.6106  m1_loss_mask_2: 0.169  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.6011  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.5664  m1_loss_mask_4: 0.167  m1_loss_dice_4: 1.31  m1_loss_ce_5: 0.5541  m1_loss_mask_5: 0.1661  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.5312  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.265  m1_loss_ce_7: 0.5342  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.265  m1_loss_ce_8: 0.5811  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.267  m2_loss_ce: 0.5693  m2_loss_mask: 0.1674  m2_loss_dice: 1.262  m2_loss_ce_0: 0.6217  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.534  m2_loss_ce_1: 0.7002  m2_loss_mask_1: 0.1791  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.6618  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5988  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5932  m2_loss_mask_4: 0.1717  m2_loss_dice_4: 1.328  m2_loss_ce_5: 0.5872  m2_loss_mask_5: 0.1699  m2_loss_dice_5: 1.303  m2_loss_ce_6: 0.572  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5716  m2_loss_mask_7: 0.168  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.568  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.294  com_loss_ce: 2.188  com_loss_mask: 0.6934  com_loss_dice: 0.9786    time: 1.3583  last_time: 1.3571  data_time: 0.0389  last_data_time: 0.0325   lr: 0.0001  max_mem: 34860M
[08/16 02:16:41] d2.utils.events INFO:  eta: 0:07:11  iter: 679  total_loss: 45.45  m1_loss_ce: 0.5259  m1_loss_mask: 0.1508  m1_loss_dice: 1.246  m1_loss_ce_0: 0.627  m1_loss_mask_0: 0.179  m1_loss_dice_0: 1.456  m1_loss_ce_1: 0.6804  m1_loss_mask_1: 0.1622  m1_loss_dice_1: 1.413  m1_loss_ce_2: 0.601  m1_loss_mask_2: 0.1566  m1_loss_dice_2: 1.328  m1_loss_ce_3: 0.5637  m1_loss_mask_3: 0.1564  m1_loss_dice_3: 1.294  m1_loss_ce_4: 0.5403  m1_loss_mask_4: 0.1557  m1_loss_dice_4: 1.299  m1_loss_ce_5: 0.5255  m1_loss_mask_5: 0.1538  m1_loss_dice_5: 1.318  m1_loss_ce_6: 0.514  m1_loss_mask_6: 0.1541  m1_loss_dice_6: 1.302  m1_loss_ce_7: 0.5159  m1_loss_mask_7: 0.1522  m1_loss_dice_7: 1.264  m1_loss_ce_8: 0.4861  m1_loss_mask_8: 0.1516  m1_loss_dice_8: 1.273  m2_loss_ce: 0.5287  m2_loss_mask: 0.1623  m2_loss_dice: 1.288  m2_loss_ce_0: 0.6632  m2_loss_mask_0: 0.185  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6856  m2_loss_mask_1: 0.1692  m2_loss_dice_1: 1.464  m2_loss_ce_2: 0.6415  m2_loss_mask_2: 0.1619  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5986  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5397  m2_loss_mask_4: 0.1622  m2_loss_dice_4: 1.305  m2_loss_ce_5: 0.5615  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.276  m2_loss_ce_6: 0.544  m2_loss_mask_6: 0.161  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5654  m2_loss_mask_7: 0.161  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.5422  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.267  com_loss_ce: 2.173  com_loss_mask: 0.6934  com_loss_dice: 0.9792    time: 1.3586  last_time: 1.4166  data_time: 0.0416  last_data_time: 0.0543   lr: 0.0001  max_mem: 34860M
[08/16 02:17:08] d2.utils.events INFO:  eta: 0:06:44  iter: 699  total_loss: 42.74  m1_loss_ce: 0.4993  m1_loss_mask: 0.1689  m1_loss_dice: 1.195  m1_loss_ce_0: 0.5655  m1_loss_mask_0: 0.1905  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.6698  m1_loss_mask_1: 0.1805  m1_loss_dice_1: 1.257  m1_loss_ce_2: 0.567  m1_loss_mask_2: 0.1742  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5408  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.5584  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.207  m1_loss_ce_5: 0.5282  m1_loss_mask_5: 0.1703  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.5165  m1_loss_mask_6: 0.1722  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4777  m1_loss_mask_7: 0.1686  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.4819  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4776  m2_loss_mask: 0.1716  m2_loss_dice: 1.188  m2_loss_ce_0: 0.5884  m2_loss_mask_0: 0.2007  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.6592  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.296  m2_loss_ce_2: 0.5938  m2_loss_mask_2: 0.1755  m2_loss_dice_2: 1.26  m2_loss_ce_3: 0.5489  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5119  m2_loss_mask_4: 0.173  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.5357  m2_loss_mask_5: 0.1711  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4912  m2_loss_mask_6: 0.1731  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.521  m2_loss_mask_7: 0.172  m2_loss_dice_7: 1.163  m2_loss_ce_8: 0.522  m2_loss_mask_8: 0.171  m2_loss_dice_8: 1.212  com_loss_ce: 2.174  com_loss_mask: 0.6934  com_loss_dice: 0.979    time: 1.3582  last_time: 1.3294  data_time: 0.0396  last_data_time: 0.0339   lr: 0.0001  max_mem: 34860M
[08/16 02:17:35] d2.utils.events INFO:  eta: 0:06:17  iter: 719  total_loss: 43.56  m1_loss_ce: 0.5608  m1_loss_mask: 0.1653  m1_loss_dice: 1.218  m1_loss_ce_0: 0.5969  m1_loss_mask_0: 0.1822  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.6301  m1_loss_mask_1: 0.175  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.5525  m1_loss_mask_2: 0.1684  m1_loss_dice_2: 1.334  m1_loss_ce_3: 0.5771  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5211  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.5504  m1_loss_mask_5: 0.164  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.5139  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4887  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.5149  m1_loss_mask_8: 0.1639  m1_loss_dice_8: 1.245  m2_loss_ce: 0.5071  m2_loss_mask: 0.1662  m2_loss_dice: 1.197  m2_loss_ce_0: 0.6187  m2_loss_mask_0: 0.1909  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6527  m2_loss_mask_1: 0.1787  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.626  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5502  m2_loss_mask_3: 0.1698  m2_loss_dice_3: 1.258  m2_loss_ce_4: 0.4973  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.252  m2_loss_ce_5: 0.5458  m2_loss_mask_5: 0.1676  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.5151  m2_loss_mask_6: 0.1651  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4954  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.4973  m2_loss_mask_8: 0.1659  m2_loss_dice_8: 1.232  com_loss_ce: 2.177  com_loss_mask: 0.6934  com_loss_dice: 0.9789    time: 1.3580  last_time: 1.3493  data_time: 0.0390  last_data_time: 0.0355   lr: 0.0001  max_mem: 34860M
[08/16 02:18:02] d2.utils.events INFO:  eta: 0:05:50  iter: 739  total_loss: 45.39  m1_loss_ce: 0.5665  m1_loss_mask: 0.1758  m1_loss_dice: 1.258  m1_loss_ce_0: 0.6618  m1_loss_mask_0: 0.1995  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.691  m1_loss_mask_1: 0.1873  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.6283  m1_loss_mask_2: 0.1805  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5892  m1_loss_mask_3: 0.1786  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.5503  m1_loss_mask_4: 0.176  m1_loss_dice_4: 1.295  m1_loss_ce_5: 0.5925  m1_loss_mask_5: 0.174  m1_loss_dice_5: 1.264  m1_loss_ce_6: 0.5378  m1_loss_mask_6: 0.1761  m1_loss_dice_6: 1.249  m1_loss_ce_7: 0.5318  m1_loss_mask_7: 0.1755  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.5167  m1_loss_mask_8: 0.1753  m1_loss_dice_8: 1.278  m2_loss_ce: 0.5592  m2_loss_mask: 0.1703  m2_loss_dice: 1.263  m2_loss_ce_0: 0.6674  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.702  m2_loss_mask_1: 0.1857  m2_loss_dice_1: 1.451  m2_loss_ce_2: 0.6689  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5888  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.5872  m2_loss_mask_4: 0.1749  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.579  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.5874  m2_loss_mask_6: 0.1717  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.5625  m2_loss_mask_7: 0.1705  m2_loss_dice_7: 1.286  m2_loss_ce_8: 0.5522  m2_loss_mask_8: 0.1686  m2_loss_dice_8: 1.283  com_loss_ce: 2.184  com_loss_mask: 0.6934  com_loss_dice: 0.9804    time: 1.3573  last_time: 1.3150  data_time: 0.0389  last_data_time: 0.0477   lr: 0.0001  max_mem: 34860M
[08/16 02:18:29] d2.utils.events INFO:  eta: 0:05:23  iter: 759  total_loss: 44.27  m1_loss_ce: 0.5001  m1_loss_mask: 0.1679  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5624  m1_loss_mask_0: 0.1937  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.5982  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.5575  m1_loss_mask_2: 0.1724  m1_loss_dice_2: 1.347  m1_loss_ce_3: 0.5574  m1_loss_mask_3: 0.1758  m1_loss_dice_3: 1.308  m1_loss_ce_4: 0.5089  m1_loss_mask_4: 0.1733  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.4935  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.297  m1_loss_ce_6: 0.4648  m1_loss_mask_6: 0.1728  m1_loss_dice_6: 1.286  m1_loss_ce_7: 0.4547  m1_loss_mask_7: 0.1729  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.4906  m1_loss_mask_8: 0.1715  m1_loss_dice_8: 1.257  m2_loss_ce: 0.5226  m2_loss_mask: 0.1735  m2_loss_dice: 1.267  m2_loss_ce_0: 0.5925  m2_loss_mask_0: 0.2002  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.6749  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.433  m2_loss_ce_2: 0.6034  m2_loss_mask_2: 0.1754  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5536  m2_loss_mask_3: 0.1764  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.5143  m2_loss_mask_4: 0.179  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.518  m2_loss_mask_5: 0.1776  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5113  m2_loss_mask_6: 0.177  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5481  m2_loss_mask_7: 0.1748  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.5068  m2_loss_mask_8: 0.1763  m2_loss_dice_8: 1.293  com_loss_ce: 2.183  com_loss_mask: 0.6934  com_loss_dice: 0.9793    time: 1.3570  last_time: 1.2667  data_time: 0.0398  last_data_time: 0.0426   lr: 0.0001  max_mem: 34860M
[08/16 02:18:56] d2.utils.events INFO:  eta: 0:04:56  iter: 779  total_loss: 44.6  m1_loss_ce: 0.5034  m1_loss_mask: 0.169  m1_loss_dice: 1.223  m1_loss_ce_0: 0.6077  m1_loss_mask_0: 0.2038  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.6723  m1_loss_mask_1: 0.1827  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.5994  m1_loss_mask_2: 0.1779  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5681  m1_loss_mask_3: 0.1762  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5291  m1_loss_mask_4: 0.1748  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.5211  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.226  m1_loss_ce_6: 0.5135  m1_loss_mask_6: 0.1696  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.49  m1_loss_mask_7: 0.1699  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4814  m1_loss_mask_8: 0.1722  m1_loss_dice_8: 1.229  m2_loss_ce: 0.5352  m2_loss_mask: 0.1813  m2_loss_dice: 1.223  m2_loss_ce_0: 0.641  m2_loss_mask_0: 0.2116  m2_loss_dice_0: 1.527  m2_loss_ce_1: 0.7023  m2_loss_mask_1: 0.1878  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6241  m2_loss_mask_2: 0.1835  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5659  m2_loss_mask_3: 0.1821  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5481  m2_loss_mask_4: 0.1806  m2_loss_dice_4: 1.291  m2_loss_ce_5: 0.5564  m2_loss_mask_5: 0.1824  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.557  m2_loss_mask_6: 0.1819  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.53  m2_loss_mask_7: 0.1803  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.5077  m2_loss_mask_8: 0.1813  m2_loss_dice_8: 1.239  com_loss_ce: 2.181  com_loss_mask: 0.6934  com_loss_dice: 0.9794    time: 1.3572  last_time: 1.3904  data_time: 0.0398  last_data_time: 0.0306   lr: 0.0001  max_mem: 34860M
[08/16 02:19:24] d2.utils.events INFO:  eta: 0:04:29  iter: 799  total_loss: 44.62  m1_loss_ce: 0.5269  m1_loss_mask: 0.1559  m1_loss_dice: 1.239  m1_loss_ce_0: 0.6373  m1_loss_mask_0: 0.1791  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6983  m1_loss_mask_1: 0.1652  m1_loss_dice_1: 1.356  m1_loss_ce_2: 0.6264  m1_loss_mask_2: 0.1569  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5549  m1_loss_mask_3: 0.1612  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.5459  m1_loss_mask_4: 0.1582  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.5252  m1_loss_mask_5: 0.1571  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5132  m1_loss_mask_6: 0.1589  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.5099  m1_loss_mask_7: 0.1598  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.4761  m1_loss_mask_8: 0.1554  m1_loss_dice_8: 1.254  m2_loss_ce: 0.5322  m2_loss_mask: 0.168  m2_loss_dice: 1.241  m2_loss_ce_0: 0.617  m2_loss_mask_0: 0.193  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6556  m2_loss_mask_1: 0.1755  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6504  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.573  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5762  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5492  m2_loss_mask_5: 0.1676  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.523  m2_loss_mask_6: 0.1701  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5601  m2_loss_mask_7: 0.1688  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.541  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.263  com_loss_ce: 2.173  com_loss_mask: 0.6934  com_loss_dice: 0.9784    time: 1.3572  last_time: 1.3415  data_time: 0.0388  last_data_time: 0.0358   lr: 0.0001  max_mem: 34860M
[08/16 02:19:51] d2.utils.events INFO:  eta: 0:04:02  iter: 819  total_loss: 43.34  m1_loss_ce: 0.5263  m1_loss_mask: 0.1516  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6199  m1_loss_mask_0: 0.1808  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.6708  m1_loss_mask_1: 0.1645  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.5933  m1_loss_mask_2: 0.1547  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.5771  m1_loss_mask_3: 0.1559  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5597  m1_loss_mask_4: 0.1514  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5234  m1_loss_mask_5: 0.1527  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4929  m1_loss_mask_6: 0.1536  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.5217  m1_loss_mask_7: 0.1533  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4811  m1_loss_mask_8: 0.1537  m1_loss_dice_8: 1.211  m2_loss_ce: 0.5487  m2_loss_mask: 0.1605  m2_loss_dice: 1.194  m2_loss_ce_0: 0.6504  m2_loss_mask_0: 0.1934  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6822  m2_loss_mask_1: 0.1775  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.6447  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.6071  m2_loss_mask_3: 0.1618  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5853  m2_loss_mask_4: 0.1618  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.568  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5519  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.5529  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.5511  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.193  com_loss_ce: 2.181  com_loss_mask: 0.6934  com_loss_dice: 0.9796    time: 1.3570  last_time: 1.3686  data_time: 0.0401  last_data_time: 0.0370   lr: 0.0001  max_mem: 34860M
[08/16 02:20:18] d2.utils.events INFO:  eta: 0:03:35  iter: 839  total_loss: 44.82  m1_loss_ce: 0.5079  m1_loss_mask: 0.169  m1_loss_dice: 1.254  m1_loss_ce_0: 0.6318  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6546  m1_loss_mask_1: 0.1888  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.5937  m1_loss_mask_2: 0.1728  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5386  m1_loss_mask_3: 0.1696  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.523  m1_loss_mask_4: 0.1687  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.5166  m1_loss_mask_5: 0.1655  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.4777  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.303  m1_loss_ce_7: 0.4632  m1_loss_mask_7: 0.1712  m1_loss_dice_7: 1.288  m1_loss_ce_8: 0.4665  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.279  m2_loss_ce: 0.498  m2_loss_mask: 0.1731  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6168  m2_loss_mask_0: 0.2  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6733  m2_loss_mask_1: 0.1865  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.6295  m2_loss_mask_2: 0.177  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5623  m2_loss_mask_3: 0.1746  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5096  m2_loss_mask_4: 0.1764  m2_loss_dice_4: 1.321  m2_loss_ce_5: 0.5431  m2_loss_mask_5: 0.1731  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5214  m2_loss_mask_6: 0.1753  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.5186  m2_loss_mask_7: 0.1731  m2_loss_dice_7: 1.26  m2_loss_ce_8: 0.5063  m2_loss_mask_8: 0.1735  m2_loss_dice_8: 1.267  com_loss_ce: 2.181  com_loss_mask: 0.6934  com_loss_dice: 0.9798    time: 1.3570  last_time: 1.3564  data_time: 0.0407  last_data_time: 0.0515   lr: 0.0001  max_mem: 34860M
[08/16 02:20:45] d2.utils.events INFO:  eta: 0:03:08  iter: 859  total_loss: 43.19  m1_loss_ce: 0.4625  m1_loss_mask: 0.178  m1_loss_dice: 1.163  m1_loss_ce_0: 0.5758  m1_loss_mask_0: 0.2039  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.5695  m1_loss_mask_1: 0.184  m1_loss_dice_1: 1.299  m1_loss_ce_2: 0.5416  m1_loss_mask_2: 0.1792  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.5026  m1_loss_mask_3: 0.1811  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.4921  m1_loss_mask_4: 0.1789  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.4631  m1_loss_mask_5: 0.1791  m1_loss_dice_5: 1.167  m1_loss_ce_6: 0.4361  m1_loss_mask_6: 0.1777  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.4475  m1_loss_mask_7: 0.1769  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4526  m1_loss_mask_8: 0.1763  m1_loss_dice_8: 1.168  m2_loss_ce: 0.5089  m2_loss_mask: 0.1827  m2_loss_dice: 1.188  m2_loss_ce_0: 0.5725  m2_loss_mask_0: 0.2062  m2_loss_dice_0: 1.415  m2_loss_ce_1: 0.6295  m2_loss_mask_1: 0.1877  m2_loss_dice_1: 1.34  m2_loss_ce_2: 0.6102  m2_loss_mask_2: 0.1796  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.5499  m2_loss_mask_3: 0.1779  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.5216  m2_loss_mask_4: 0.1835  m2_loss_dice_4: 1.184  m2_loss_ce_5: 0.5303  m2_loss_mask_5: 0.183  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.505  m2_loss_mask_6: 0.179  m2_loss_dice_6: 1.187  m2_loss_ce_7: 0.499  m2_loss_mask_7: 0.1798  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.4932  m2_loss_mask_8: 0.1819  m2_loss_dice_8: 1.206  com_loss_ce: 2.168  com_loss_mask: 0.6934  com_loss_dice: 0.9769    time: 1.3565  last_time: 1.3963  data_time: 0.0373  last_data_time: 0.0372   lr: 0.0001  max_mem: 34860M
[08/16 02:21:12] d2.utils.events INFO:  eta: 0:02:41  iter: 879  total_loss: 43.61  m1_loss_ce: 0.5561  m1_loss_mask: 0.1495  m1_loss_dice: 1.185  m1_loss_ce_0: 0.6375  m1_loss_mask_0: 0.1754  m1_loss_dice_0: 1.383  m1_loss_ce_1: 0.6887  m1_loss_mask_1: 0.1581  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.6249  m1_loss_mask_2: 0.1503  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.5316  m1_loss_mask_3: 0.1542  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.5429  m1_loss_mask_4: 0.1534  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.5259  m1_loss_mask_5: 0.1488  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.5112  m1_loss_mask_6: 0.1498  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.5396  m1_loss_mask_7: 0.1508  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.5106  m1_loss_mask_8: 0.1492  m1_loss_dice_8: 1.199  m2_loss_ce: 0.5727  m2_loss_mask: 0.155  m2_loss_dice: 1.207  m2_loss_ce_0: 0.687  m2_loss_mask_0: 0.1955  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.7212  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6635  m2_loss_mask_2: 0.1635  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.6203  m2_loss_mask_3: 0.1623  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.5745  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.6002  m2_loss_mask_5: 0.1577  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.582  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.5876  m2_loss_mask_7: 0.1611  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.57  m2_loss_mask_8: 0.1591  m2_loss_dice_8: 1.216  com_loss_ce: 2.182  com_loss_mask: 0.6934  com_loss_dice: 0.9806    time: 1.3563  last_time: 1.3762  data_time: 0.0413  last_data_time: 0.0420   lr: 0.0001  max_mem: 34860M
[08/16 02:21:39] d2.utils.events INFO:  eta: 0:02:14  iter: 899  total_loss: 45.4  m1_loss_ce: 0.5262  m1_loss_mask: 0.1583  m1_loss_dice: 1.222  m1_loss_ce_0: 0.6115  m1_loss_mask_0: 0.1824  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6472  m1_loss_mask_1: 0.1692  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.6222  m1_loss_mask_2: 0.159  m1_loss_dice_2: 1.328  m1_loss_ce_3: 0.5467  m1_loss_mask_3: 0.1654  m1_loss_dice_3: 1.279  m1_loss_ce_4: 0.528  m1_loss_mask_4: 0.1631  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.5282  m1_loss_mask_5: 0.1575  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.5179  m1_loss_mask_6: 0.16  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.5165  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4869  m1_loss_mask_8: 0.157  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5649  m2_loss_mask: 0.1603  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6393  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.495  m2_loss_ce_1: 0.7047  m2_loss_mask_1: 0.1711  m2_loss_dice_1: 1.432  m2_loss_ce_2: 0.6449  m2_loss_mask_2: 0.1634  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.635  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.6028  m2_loss_mask_4: 0.1606  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.6009  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.5635  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.5682  m2_loss_mask_7: 0.1596  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5597  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.26  com_loss_ce: 2.177  com_loss_mask: 0.6934  com_loss_dice: 0.9785    time: 1.3561  last_time: 1.4201  data_time: 0.0402  last_data_time: 0.0387   lr: 0.0001  max_mem: 34860M
[08/16 02:22:06] d2.utils.events INFO:  eta: 0:01:47  iter: 919  total_loss: 43.98  m1_loss_ce: 0.5053  m1_loss_mask: 0.1543  m1_loss_dice: 1.256  m1_loss_ce_0: 0.6117  m1_loss_mask_0: 0.1821  m1_loss_dice_0: 1.45  m1_loss_ce_1: 0.662  m1_loss_mask_1: 0.1688  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.6178  m1_loss_mask_2: 0.1572  m1_loss_dice_2: 1.33  m1_loss_ce_3: 0.5494  m1_loss_mask_3: 0.154  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.5304  m1_loss_mask_4: 0.1553  m1_loss_dice_4: 1.282  m1_loss_ce_5: 0.5212  m1_loss_mask_5: 0.1547  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4801  m1_loss_mask_6: 0.1528  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.5095  m1_loss_mask_7: 0.1529  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.5078  m1_loss_mask_8: 0.1546  m1_loss_dice_8: 1.239  m2_loss_ce: 0.553  m2_loss_mask: 0.1597  m2_loss_dice: 1.264  m2_loss_ce_0: 0.6363  m2_loss_mask_0: 0.1899  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6796  m2_loss_mask_1: 0.1708  m2_loss_dice_1: 1.435  m2_loss_ce_2: 0.6404  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5806  m2_loss_mask_3: 0.1595  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5716  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5438  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.329  m2_loss_ce_6: 0.5505  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.5341  m2_loss_mask_7: 0.1596  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.5243  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.274  com_loss_ce: 2.179  com_loss_mask: 0.6934  com_loss_dice: 0.9807    time: 1.3562  last_time: 1.3593  data_time: 0.0415  last_data_time: 0.0450   lr: 0.0001  max_mem: 35068M
[08/16 02:22:33] d2.utils.events INFO:  eta: 0:01:20  iter: 939  total_loss: 44.36  m1_loss_ce: 0.5061  m1_loss_mask: 0.1608  m1_loss_dice: 1.231  m1_loss_ce_0: 0.6391  m1_loss_mask_0: 0.1909  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.6486  m1_loss_mask_1: 0.1665  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.6074  m1_loss_mask_2: 0.1652  m1_loss_dice_2: 1.346  m1_loss_ce_3: 0.5282  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.5549  m1_loss_mask_4: 0.158  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5738  m1_loss_mask_5: 0.1574  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.5103  m1_loss_mask_6: 0.1602  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.4993  m1_loss_mask_7: 0.1609  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.5249  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5282  m2_loss_mask: 0.1646  m2_loss_dice: 1.228  m2_loss_ce_0: 0.6465  m2_loss_mask_0: 0.189  m2_loss_dice_0: 1.492  m2_loss_ce_1: 0.6673  m2_loss_mask_1: 0.1755  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.646  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5715  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5534  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5347  m2_loss_mask_5: 0.164  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5511  m2_loss_mask_6: 0.1634  m2_loss_dice_6: 1.251  m2_loss_ce_7: 0.5378  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.5429  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.232  com_loss_ce: 2.181  com_loss_mask: 0.6934  com_loss_dice: 0.9794    time: 1.3561  last_time: 1.2988  data_time: 0.0422  last_data_time: 0.0461   lr: 0.0001  max_mem: 35068M
[08/16 02:23:01] d2.utils.events INFO:  eta: 0:00:53  iter: 959  total_loss: 44.59  m1_loss_ce: 0.4915  m1_loss_mask: 0.1739  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5983  m1_loss_mask_0: 0.2058  m1_loss_dice_0: 1.398  m1_loss_ce_1: 0.6564  m1_loss_mask_1: 0.1816  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.5732  m1_loss_mask_2: 0.1759  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.4933  m1_loss_mask_3: 0.1737  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.5072  m1_loss_mask_4: 0.1732  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.4807  m1_loss_mask_5: 0.1729  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.4926  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.255  m1_loss_ce_7: 0.502  m1_loss_mask_7: 0.1732  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4991  m1_loss_mask_8: 0.1738  m1_loss_dice_8: 1.22  m2_loss_ce: 0.4924  m2_loss_mask: 0.1758  m2_loss_dice: 1.295  m2_loss_ce_0: 0.6099  m2_loss_mask_0: 0.2141  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.6561  m2_loss_mask_1: 0.1893  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.5907  m2_loss_mask_2: 0.1755  m2_loss_dice_2: 1.387  m2_loss_ce_3: 0.558  m2_loss_mask_3: 0.1732  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.5398  m2_loss_mask_4: 0.175  m2_loss_dice_4: 1.31  m2_loss_ce_5: 0.5385  m2_loss_mask_5: 0.1791  m2_loss_dice_5: 1.305  m2_loss_ce_6: 0.5322  m2_loss_mask_6: 0.1752  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.509  m2_loss_mask_7: 0.1751  m2_loss_dice_7: 1.286  m2_loss_ce_8: 0.5017  m2_loss_mask_8: 0.1785  m2_loss_dice_8: 1.31  com_loss_ce: 2.176  com_loss_mask: 0.6934  com_loss_dice: 0.9787    time: 1.3562  last_time: 1.3223  data_time: 0.0413  last_data_time: 0.0492   lr: 0.0001  max_mem: 35068M
[08/16 02:23:28] d2.utils.events INFO:  eta: 0:00:26  iter: 979  total_loss: 42.17  m1_loss_ce: 0.456  m1_loss_mask: 0.1542  m1_loss_dice: 1.135  m1_loss_ce_0: 0.6048  m1_loss_mask_0: 0.1821  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6481  m1_loss_mask_1: 0.1658  m1_loss_dice_1: 1.268  m1_loss_ce_2: 0.5353  m1_loss_mask_2: 0.1537  m1_loss_dice_2: 1.211  m1_loss_ce_3: 0.5247  m1_loss_mask_3: 0.1568  m1_loss_dice_3: 1.136  m1_loss_ce_4: 0.4895  m1_loss_mask_4: 0.1574  m1_loss_dice_4: 1.165  m1_loss_ce_5: 0.4741  m1_loss_mask_5: 0.1551  m1_loss_dice_5: 1.159  m1_loss_ce_6: 0.4668  m1_loss_mask_6: 0.1555  m1_loss_dice_6: 1.14  m1_loss_ce_7: 0.4622  m1_loss_mask_7: 0.1547  m1_loss_dice_7: 1.123  m1_loss_ce_8: 0.4876  m1_loss_mask_8: 0.1544  m1_loss_dice_8: 1.17  m2_loss_ce: 0.4907  m2_loss_mask: 0.1534  m2_loss_dice: 1.16  m2_loss_ce_0: 0.6213  m2_loss_mask_0: 0.1814  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6875  m2_loss_mask_1: 0.1683  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.6177  m2_loss_mask_2: 0.158  m2_loss_dice_2: 1.223  m2_loss_ce_3: 0.5417  m2_loss_mask_3: 0.1583  m2_loss_dice_3: 1.163  m2_loss_ce_4: 0.5327  m2_loss_mask_4: 0.1575  m2_loss_dice_4: 1.184  m2_loss_ce_5: 0.5395  m2_loss_mask_5: 0.1546  m2_loss_dice_5: 1.168  m2_loss_ce_6: 0.5027  m2_loss_mask_6: 0.1533  m2_loss_dice_6: 1.17  m2_loss_ce_7: 0.4996  m2_loss_mask_7: 0.1557  m2_loss_dice_7: 1.174  m2_loss_ce_8: 0.4723  m2_loss_mask_8: 0.154  m2_loss_dice_8: 1.193  com_loss_ce: 2.177  com_loss_mask: 0.6934  com_loss_dice: 0.9787    time: 1.3563  last_time: 1.3376  data_time: 0.0412  last_data_time: 0.0381   lr: 0.0001  max_mem: 35068M
[08/16 02:23:55] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4_softmax/model_final.pth
[08/16 02:23:59] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 45.31  m1_loss_ce: 0.5545  m1_loss_mask: 0.1573  m1_loss_dice: 1.218  m1_loss_ce_0: 0.6726  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.41  m1_loss_ce_1: 0.7168  m1_loss_mask_1: 0.1764  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.6291  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.35  m1_loss_ce_3: 0.5811  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.5549  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.5338  m1_loss_mask_5: 0.1609  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.5437  m1_loss_mask_6: 0.1601  m1_loss_dice_6: 1.199  m1_loss_ce_7: 0.5565  m1_loss_mask_7: 0.1604  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5323  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.187  m2_loss_ce: 0.5841  m2_loss_mask: 0.1667  m2_loss_dice: 1.249  m2_loss_ce_0: 0.6899  m2_loss_mask_0: 0.2047  m2_loss_dice_0: 1.515  m2_loss_ce_1: 0.7151  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.6637  m2_loss_mask_2: 0.1746  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.6105  m2_loss_mask_3: 0.1721  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.5949  m2_loss_mask_4: 0.1724  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5911  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.6006  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.5822  m2_loss_mask_7: 0.1676  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.5805  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.263  com_loss_ce: 2.178  com_loss_mask: 0.6934  com_loss_dice: 0.9799    time: 1.3562  last_time: 1.3408  data_time: 0.0407  last_data_time: 0.0373   lr: 0.0001  max_mem: 35068M
[08/16 02:23:59] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:22:33 (1.3562 s / it)
[08/16 02:23:59] d2.engine.hooks INFO: Total training time: 0:22:43 (0:00:10 on hooks)
[08/16 02:23:59] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/16 02:23:59] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/16 02:23:59] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 02:23:59] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/16 02:23:59] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/16 02:25:19] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evaleola5ftd ...
[08/16 02:25:32] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.072 | 80.752 | 69.533 |      19       |
| Things | 48.090 | 80.274 | 59.764 |       8       |
| Stuff  | 63.604 | 81.099 | 76.638 |      11       |
[08/16 02:25:32] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.874 | 97.175 | 99.690 |     Stuff     |
| class_8  | 73.428 | 83.814 | 87.609 |     Stuff     |
| class_11 | 86.901 | 89.264 | 97.352 |     Stuff     |
| class_12 | 39.241 | 80.072 | 49.007 |     Stuff     |
| class_13 | 35.448 | 76.156 | 46.547 |     Stuff     |
| class_17 | 42.529 | 63.663 | 66.803 |     Stuff     |
| class_19 | 47.631 | 68.995 | 69.036 |     Stuff     |
| class_20 | 66.894 | 77.434 | 86.388 |     Stuff     |
| class_21 | 89.176 | 90.101 | 98.973 |     Stuff     |
| class_22 | 33.754 | 73.974 | 45.629 |     Stuff     |
| class_23 | 87.771 | 91.446 | 95.982 |     Stuff     |
| class_24 | 51.050 | 76.202 | 66.993 |    Things     |
| class_25 | 44.108 | 73.955 | 59.641 |    Things     |
| class_26 | 65.004 | 82.758 | 78.546 |    Things     |
| class_27 | 49.506 | 88.478 | 55.952 |    Things     |
| class_28 | 61.475 | 90.164 | 68.182 |    Things     |
| class_31 | 38.432 | 86.471 | 44.444 |    Things     |
| class_32 | 34.829 | 72.952 | 47.742 |    Things     |
| class_33 | 40.317 | 71.214 | 56.613 |    Things     |
[08/16 02:25:32] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/16 02:25:32] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/16 02:25:32] d2.evaluation.testing INFO: copypaste: 57.0719,80.7521,69.5331,48.0899,80.2744,59.7642,63.6042,81.0995,76.6378,96.8736,97.1751,99.6898,73.4283,83.8140,87.6087,86.9009,89.2643,97.3523,39.2405,80.0719,49.0066,35.4483,76.1555,46.5473,42.5290,63.6631,66.8033,47.6312,68.9952,69.0355,66.8937,77.4341,86.3880,89.1757,90.1007,98.9733,33.7536,73.9741,45.6290,87.7715,91.4461,95.9816,51.0497,76.2019,66.9927,44.1076,73.9555,59.6407,65.0037,82.7585,78.5462,49.5056,88.4782,55.9524,61.4753,90.1638,68.1818,38.4318,86.4715,44.4444,34.8286,72.9518,47.7419,40.3166,71.2138,56.6135
