[10/04 20:18:39] detectron2 INFO: Rank of current process: 0. World size: 2
[10/04 20:18:40] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   535.183.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/04 20:18:40] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_7_0_3_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/04 20:18:40] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_7_0_3_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/04 20:18:40] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/04 20:18:40] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3/config.yaml
[10/04 20:18:40] d2.utils.env INFO: Using a generated random seed 41381706
[10/04 20:18:48] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/04 20:18:48] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/04 20:18:48] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/04 20:18:48] d2.data.build INFO: Using training sampler TrainingSampler
[10/04 20:18:48] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/04 20:18:48] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/04 20:18:49] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/04 20:18:49] d2.data.build INFO: Making batched data loader with batch_size=4
[10/04 20:18:49] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/04 20:18:54] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/04 20:18:54] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:18:54] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:19:02] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:19:02] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:19:53] d2.utils.events INFO:  eta: 0:32:21  iter: 19  total_loss: 41.64  m1_loss_ce: 0.4843  m1_loss_mask: 0.1788  m1_loss_dice: 1.267  m1_loss_ce_0: 0.5639  m1_loss_mask_0: 0.2105  m1_loss_dice_0: 1.476  m1_loss_ce_1: 0.6481  m1_loss_mask_1: 0.1888  m1_loss_dice_1: 1.41  m1_loss_ce_2: 0.6114  m1_loss_mask_2: 0.1805  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5583  m1_loss_mask_3: 0.1779  m1_loss_dice_3: 1.324  m1_loss_ce_4: 0.5569  m1_loss_mask_4: 0.1752  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.4978  m1_loss_mask_5: 0.1737  m1_loss_dice_5: 1.311  m1_loss_ce_6: 0.5151  m1_loss_mask_6: 0.1779  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.522  m1_loss_mask_7: 0.178  m1_loss_dice_7: 1.281  m1_loss_ce_8: 0.5086  m1_loss_mask_8: 0.1762  m1_loss_dice_8: 1.278  m2_loss_ce: 0.4698  m2_loss_mask: 0.1742  m2_loss_dice: 1.297  m2_loss_ce_0: 0.5836  m2_loss_mask_0: 0.2023  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6295  m2_loss_mask_1: 0.1873  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.5763  m2_loss_mask_2: 0.1715  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5219  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.4909  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.4872  m2_loss_mask_5: 0.1709  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5007  m2_loss_mask_6: 0.1705  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.4945  m2_loss_mask_7: 0.1719  m2_loss_dice_7: 1.313  m2_loss_ce_8: 0.4676  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.287    time: 2.0022  last_time: 1.9784  data_time: 0.4202  last_data_time: 0.0746   lr: 0.0001  max_mem: 33714M
[10/04 20:20:33] d2.utils.events INFO:  eta: 0:31:40  iter: 39  total_loss: 40.2  m1_loss_ce: 0.4732  m1_loss_mask: 0.1789  m1_loss_dice: 1.234  m1_loss_ce_0: 0.5539  m1_loss_mask_0: 0.2073  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.6487  m1_loss_mask_1: 0.1965  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5682  m1_loss_mask_2: 0.1893  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.5033  m1_loss_mask_3: 0.1847  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.4927  m1_loss_mask_4: 0.1839  m1_loss_dice_4: 1.266  m1_loss_ce_5: 0.4825  m1_loss_mask_5: 0.1797  m1_loss_dice_5: 1.264  m1_loss_ce_6: 0.458  m1_loss_mask_6: 0.1799  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.4729  m1_loss_mask_7: 0.1796  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4607  m1_loss_mask_8: 0.1772  m1_loss_dice_8: 1.25  m2_loss_ce: 0.4401  m2_loss_mask: 0.1769  m2_loss_dice: 1.279  m2_loss_ce_0: 0.585  m2_loss_mask_0: 0.2075  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6033  m2_loss_mask_1: 0.1975  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.574  m2_loss_mask_2: 0.1804  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5396  m2_loss_mask_3: 0.1825  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5261  m2_loss_mask_4: 0.1766  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.4814  m2_loss_mask_5: 0.1763  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4686  m2_loss_mask_6: 0.1744  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.4747  m2_loss_mask_7: 0.1732  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.4451  m2_loss_mask_8: 0.1743  m2_loss_dice_8: 1.237    time: 1.9837  last_time: 2.0723  data_time: 0.0823  last_data_time: 0.0662   lr: 0.0001  max_mem: 33743M
[10/04 20:21:13] d2.utils.events INFO:  eta: 0:30:59  iter: 59  total_loss: 39.32  m1_loss_ce: 0.4424  m1_loss_mask: 0.1704  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5509  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6265  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.5809  m1_loss_mask_2: 0.1755  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5302  m1_loss_mask_3: 0.1733  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.5105  m1_loss_mask_4: 0.1736  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.5163  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.4772  m1_loss_mask_6: 0.1692  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.5047  m1_loss_mask_7: 0.1689  m1_loss_dice_7: 1.199  m1_loss_ce_8: 0.5048  m1_loss_mask_8: 0.1685  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4496  m2_loss_mask: 0.1695  m2_loss_dice: 1.202  m2_loss_ce_0: 0.595  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.416  m2_loss_ce_1: 0.6428  m2_loss_mask_1: 0.1843  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.5539  m2_loss_mask_2: 0.1661  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.4868  m2_loss_mask_3: 0.1646  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.4802  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.204  m2_loss_ce_5: 0.4807  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4863  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.454  m2_loss_mask_7: 0.1694  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.4743  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.21    time: 1.9787  last_time: 1.9590  data_time: 0.0760  last_data_time: 0.0730   lr: 0.0001  max_mem: 33743M
[10/04 20:21:53] d2.utils.events INFO:  eta: 0:30:21  iter: 79  total_loss: 40.42  m1_loss_ce: 0.4674  m1_loss_mask: 0.1664  m1_loss_dice: 1.304  m1_loss_ce_0: 0.6026  m1_loss_mask_0: 0.1826  m1_loss_dice_0: 1.515  m1_loss_ce_1: 0.6368  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.6367  m1_loss_mask_2: 0.1644  m1_loss_dice_2: 1.373  m1_loss_ce_3: 0.54  m1_loss_mask_3: 0.1626  m1_loss_dice_3: 1.335  m1_loss_ce_4: 0.5096  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.307  m1_loss_ce_5: 0.549  m1_loss_mask_5: 0.164  m1_loss_dice_5: 1.302  m1_loss_ce_6: 0.493  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.296  m1_loss_ce_7: 0.5188  m1_loss_mask_7: 0.164  m1_loss_dice_7: 1.272  m1_loss_ce_8: 0.5208  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.287  m2_loss_ce: 0.4706  m2_loss_mask: 0.1669  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6045  m2_loss_mask_0: 0.1909  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.6252  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.436  m2_loss_ce_2: 0.5681  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.5162  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.5317  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.5005  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.4609  m2_loss_mask_6: 0.1663  m2_loss_dice_6: 1.327  m2_loss_ce_7: 0.4802  m2_loss_mask_7: 0.1658  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.4798  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.26    time: 1.9792  last_time: 2.0078  data_time: 0.0879  last_data_time: 0.0901   lr: 0.0001  max_mem: 33842M
[10/04 20:22:33] d2.utils.events INFO:  eta: 0:29:45  iter: 99  total_loss: 41.14  m1_loss_ce: 0.5016  m1_loss_mask: 0.1616  m1_loss_dice: 1.25  m1_loss_ce_0: 0.5744  m1_loss_mask_0: 0.1868  m1_loss_dice_0: 1.495  m1_loss_ce_1: 0.6477  m1_loss_mask_1: 0.1719  m1_loss_dice_1: 1.405  m1_loss_ce_2: 0.6288  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5594  m1_loss_mask_3: 0.1667  m1_loss_dice_3: 1.328  m1_loss_ce_4: 0.5147  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.302  m1_loss_ce_5: 0.5075  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.295  m1_loss_ce_6: 0.5072  m1_loss_mask_6: 0.1608  m1_loss_dice_6: 1.273  m1_loss_ce_7: 0.5158  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.271  m1_loss_ce_8: 0.5033  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.237  m2_loss_ce: 0.501  m2_loss_mask: 0.1624  m2_loss_dice: 1.318  m2_loss_ce_0: 0.6071  m2_loss_mask_0: 0.1934  m2_loss_dice_0: 1.52  m2_loss_ce_1: 0.6692  m2_loss_mask_1: 0.1755  m2_loss_dice_1: 1.436  m2_loss_ce_2: 0.5497  m2_loss_mask_2: 0.1661  m2_loss_dice_2: 1.381  m2_loss_ce_3: 0.5564  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.329  m2_loss_ce_4: 0.513  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.324  m2_loss_ce_5: 0.4865  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.328  m2_loss_ce_6: 0.4963  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.292  m2_loss_ce_7: 0.5048  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.301  m2_loss_ce_8: 0.4855  m2_loss_mask_8: 0.1589  m2_loss_dice_8: 1.314    time: 1.9836  last_time: 2.0541  data_time: 0.1097  last_data_time: 0.1857   lr: 0.0001  max_mem: 33842M
[10/04 20:23:13] d2.utils.events INFO:  eta: 0:29:08  iter: 119  total_loss: 40.21  m1_loss_ce: 0.4744  m1_loss_mask: 0.1701  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5858  m1_loss_mask_0: 0.1965  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6214  m1_loss_mask_1: 0.1801  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.5714  m1_loss_mask_2: 0.1764  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5406  m1_loss_mask_3: 0.1774  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5184  m1_loss_mask_4: 0.1729  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.5016  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4979  m1_loss_mask_6: 0.1704  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4945  m1_loss_mask_7: 0.1679  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4972  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4645  m2_loss_mask: 0.1665  m2_loss_dice: 1.211  m2_loss_ce_0: 0.5769  m2_loss_mask_0: 0.2026  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6473  m2_loss_mask_1: 0.1814  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.5474  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.537  m2_loss_mask_3: 0.1703  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.5148  m2_loss_mask_4: 0.1676  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.4836  m2_loss_mask_5: 0.1691  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.457  m2_loss_mask_6: 0.1697  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.4817  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.4703  m2_loss_mask_8: 0.1672  m2_loss_dice_8: 1.222    time: 1.9869  last_time: 2.0533  data_time: 0.1045  last_data_time: 0.1209   lr: 0.0001  max_mem: 33864M
[10/04 20:23:53] d2.utils.events INFO:  eta: 0:28:29  iter: 139  total_loss: 39.12  m1_loss_ce: 0.5081  m1_loss_mask: 0.165  m1_loss_dice: 1.169  m1_loss_ce_0: 0.6028  m1_loss_mask_0: 0.1855  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.6849  m1_loss_mask_1: 0.171  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.6031  m1_loss_mask_2: 0.1691  m1_loss_dice_2: 1.268  m1_loss_ce_3: 0.5463  m1_loss_mask_3: 0.1681  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.5145  m1_loss_mask_4: 0.1657  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.5267  m1_loss_mask_5: 0.1685  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4963  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.5166  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.4867  m1_loss_mask_8: 0.1639  m1_loss_dice_8: 1.204  m2_loss_ce: 0.4686  m2_loss_mask: 0.1682  m2_loss_dice: 1.182  m2_loss_ce_0: 0.6222  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6708  m2_loss_mask_1: 0.1819  m2_loss_dice_1: 1.328  m2_loss_ce_2: 0.5658  m2_loss_mask_2: 0.1691  m2_loss_dice_2: 1.246  m2_loss_ce_3: 0.5558  m2_loss_mask_3: 0.1695  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.5253  m2_loss_mask_4: 0.166  m2_loss_dice_4: 1.2  m2_loss_ce_5: 0.5238  m2_loss_mask_5: 0.168  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.4816  m2_loss_mask_6: 0.165  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4819  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.4768  m2_loss_mask_8: 0.1676  m2_loss_dice_8: 1.185    time: 1.9891  last_time: 2.0191  data_time: 0.0958  last_data_time: 0.0574   lr: 0.0001  max_mem: 33864M
[10/04 20:24:33] d2.utils.events INFO:  eta: 0:27:56  iter: 159  total_loss: 42  m1_loss_ce: 0.4986  m1_loss_mask: 0.1488  m1_loss_dice: 1.296  m1_loss_ce_0: 0.6081  m1_loss_mask_0: 0.1857  m1_loss_dice_0: 1.496  m1_loss_ce_1: 0.6493  m1_loss_mask_1: 0.1702  m1_loss_dice_1: 1.443  m1_loss_ce_2: 0.5832  m1_loss_mask_2: 0.1589  m1_loss_dice_2: 1.351  m1_loss_ce_3: 0.5418  m1_loss_mask_3: 0.154  m1_loss_dice_3: 1.341  m1_loss_ce_4: 0.5283  m1_loss_mask_4: 0.1509  m1_loss_dice_4: 1.312  m1_loss_ce_5: 0.5316  m1_loss_mask_5: 0.1512  m1_loss_dice_5: 1.319  m1_loss_ce_6: 0.5121  m1_loss_mask_6: 0.1514  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.4891  m1_loss_mask_7: 0.1527  m1_loss_dice_7: 1.292  m1_loss_ce_8: 0.515  m1_loss_mask_8: 0.1488  m1_loss_dice_8: 1.276  m2_loss_ce: 0.4729  m2_loss_mask: 0.1562  m2_loss_dice: 1.37  m2_loss_ce_0: 0.637  m2_loss_mask_0: 0.1886  m2_loss_dice_0: 1.573  m2_loss_ce_1: 0.6924  m2_loss_mask_1: 0.1774  m2_loss_dice_1: 1.441  m2_loss_ce_2: 0.5781  m2_loss_mask_2: 0.1655  m2_loss_dice_2: 1.382  m2_loss_ce_3: 0.5459  m2_loss_mask_3: 0.1612  m2_loss_dice_3: 1.322  m2_loss_ce_4: 0.5528  m2_loss_mask_4: 0.1575  m2_loss_dice_4: 1.329  m2_loss_ce_5: 0.5095  m2_loss_mask_5: 0.1548  m2_loss_dice_5: 1.332  m2_loss_ce_6: 0.4635  m2_loss_mask_6: 0.1584  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.4868  m2_loss_mask_7: 0.1584  m2_loss_dice_7: 1.273  m2_loss_ce_8: 0.4772  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.305    time: 1.9925  last_time: 2.1083  data_time: 0.0959  last_data_time: 0.1658   lr: 0.0001  max_mem: 34525M
[10/04 20:25:14] d2.utils.events INFO:  eta: 0:27:16  iter: 179  total_loss: 40.01  m1_loss_ce: 0.4686  m1_loss_mask: 0.1602  m1_loss_dice: 1.226  m1_loss_ce_0: 0.5753  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.6298  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.5493  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5047  m1_loss_mask_3: 0.1638  m1_loss_dice_3: 1.307  m1_loss_ce_4: 0.4992  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.444  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.286  m1_loss_ce_6: 0.4797  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.476  m1_loss_mask_7: 0.1601  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4669  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4553  m2_loss_mask: 0.1531  m2_loss_dice: 1.288  m2_loss_ce_0: 0.5943  m2_loss_mask_0: 0.1752  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6681  m2_loss_mask_1: 0.1675  m2_loss_dice_1: 1.411  m2_loss_ce_2: 0.5853  m2_loss_mask_2: 0.1555  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5223  m2_loss_mask_3: 0.1555  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.5235  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.5133  m2_loss_mask_5: 0.1545  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.4699  m2_loss_mask_6: 0.1542  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.4789  m2_loss_mask_7: 0.1531  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.466  m2_loss_mask_8: 0.1536  m2_loss_dice_8: 1.271    time: 1.9937  last_time: 1.9458  data_time: 0.1056  last_data_time: 0.0718   lr: 0.0001  max_mem: 34525M
[10/04 20:25:54] d2.utils.events INFO:  eta: 0:26:36  iter: 199  total_loss: 39.16  m1_loss_ce: 0.444  m1_loss_mask: 0.1663  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5808  m1_loss_mask_0: 0.1942  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.6646  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5911  m1_loss_mask_2: 0.168  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.5344  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.227  m1_loss_ce_4: 0.4734  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.4577  m1_loss_mask_5: 0.1669  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4419  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.4764  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4702  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.231  m2_loss_ce: 0.4693  m2_loss_mask: 0.1724  m2_loss_dice: 1.272  m2_loss_ce_0: 0.6172  m2_loss_mask_0: 0.2017  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.6759  m2_loss_mask_1: 0.1861  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.5513  m2_loss_mask_2: 0.1789  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5298  m2_loss_mask_3: 0.1798  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.4923  m2_loss_mask_4: 0.1733  m2_loss_dice_4: 1.198  m2_loss_ce_5: 0.4801  m2_loss_mask_5: 0.1731  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.4728  m2_loss_mask_6: 0.1727  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.4663  m2_loss_mask_7: 0.1751  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4658  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.221    time: 1.9943  last_time: 1.9990  data_time: 0.0786  last_data_time: 0.0757   lr: 0.0001  max_mem: 34525M
[10/04 20:26:34] d2.utils.events INFO:  eta: 0:25:56  iter: 219  total_loss: 41.51  m1_loss_ce: 0.4696  m1_loss_mask: 0.1734  m1_loss_dice: 1.268  m1_loss_ce_0: 0.5815  m1_loss_mask_0: 0.2052  m1_loss_dice_0: 1.545  m1_loss_ce_1: 0.656  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.458  m1_loss_ce_2: 0.5607  m1_loss_mask_2: 0.1761  m1_loss_dice_2: 1.376  m1_loss_ce_3: 0.5277  m1_loss_mask_3: 0.1719  m1_loss_dice_3: 1.333  m1_loss_ce_4: 0.5053  m1_loss_mask_4: 0.1712  m1_loss_dice_4: 1.308  m1_loss_ce_5: 0.5155  m1_loss_mask_5: 0.1728  m1_loss_dice_5: 1.294  m1_loss_ce_6: 0.4796  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.273  m1_loss_ce_7: 0.4717  m1_loss_mask_7: 0.1744  m1_loss_dice_7: 1.287  m1_loss_ce_8: 0.4719  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.262  m2_loss_ce: 0.4784  m2_loss_mask: 0.1757  m2_loss_dice: 1.303  m2_loss_ce_0: 0.6215  m2_loss_mask_0: 0.2072  m2_loss_dice_0: 1.543  m2_loss_ce_1: 0.6902  m2_loss_mask_1: 0.1963  m2_loss_dice_1: 1.446  m2_loss_ce_2: 0.6411  m2_loss_mask_2: 0.1764  m2_loss_dice_2: 1.374  m2_loss_ce_3: 0.5878  m2_loss_mask_3: 0.1732  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.5644  m2_loss_mask_4: 0.1723  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.5535  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5089  m2_loss_mask_6: 0.1753  m2_loss_dice_6: 1.308  m2_loss_ce_7: 0.4976  m2_loss_mask_7: 0.1775  m2_loss_dice_7: 1.293  m2_loss_ce_8: 0.5159  m2_loss_mask_8: 0.1749  m2_loss_dice_8: 1.29    time: 1.9950  last_time: 2.0625  data_time: 0.0900  last_data_time: 0.1075   lr: 0.0001  max_mem: 34525M
[10/04 20:27:14] d2.utils.events INFO:  eta: 0:25:13  iter: 239  total_loss: 37.44  m1_loss_ce: 0.4705  m1_loss_mask: 0.1771  m1_loss_dice: 1.149  m1_loss_ce_0: 0.5774  m1_loss_mask_0: 0.2075  m1_loss_dice_0: 1.366  m1_loss_ce_1: 0.6151  m1_loss_mask_1: 0.1909  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5482  m1_loss_mask_2: 0.1821  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.5223  m1_loss_mask_3: 0.1766  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.5158  m1_loss_mask_4: 0.1731  m1_loss_dice_4: 1.181  m1_loss_ce_5: 0.4732  m1_loss_mask_5: 0.1728  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4935  m1_loss_mask_6: 0.1733  m1_loss_dice_6: 1.153  m1_loss_ce_7: 0.4545  m1_loss_mask_7: 0.1732  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.4947  m1_loss_mask_8: 0.176  m1_loss_dice_8: 1.127  m2_loss_ce: 0.4207  m2_loss_mask: 0.1753  m2_loss_dice: 1.191  m2_loss_ce_0: 0.548  m2_loss_mask_0: 0.2068  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6111  m2_loss_mask_1: 0.1923  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5463  m2_loss_mask_2: 0.1804  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5137  m2_loss_mask_3: 0.1779  m2_loss_dice_3: 1.217  m2_loss_ce_4: 0.4519  m2_loss_mask_4: 0.1744  m2_loss_dice_4: 1.223  m2_loss_ce_5: 0.4202  m2_loss_mask_5: 0.1752  m2_loss_dice_5: 1.222  m2_loss_ce_6: 0.4564  m2_loss_mask_6: 0.1767  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4271  m2_loss_mask_7: 0.1748  m2_loss_dice_7: 1.175  m2_loss_ce_8: 0.4359  m2_loss_mask_8: 0.1748  m2_loss_dice_8: 1.199    time: 1.9937  last_time: 2.0382  data_time: 0.0912  last_data_time: 0.1821   lr: 0.0001  max_mem: 34525M
[10/04 20:27:54] d2.utils.events INFO:  eta: 0:24:32  iter: 259  total_loss: 43.07  m1_loss_ce: 0.5311  m1_loss_mask: 0.1662  m1_loss_dice: 1.296  m1_loss_ce_0: 0.621  m1_loss_mask_0: 0.2029  m1_loss_dice_0: 1.524  m1_loss_ce_1: 0.6836  m1_loss_mask_1: 0.1799  m1_loss_dice_1: 1.446  m1_loss_ce_2: 0.6175  m1_loss_mask_2: 0.1711  m1_loss_dice_2: 1.375  m1_loss_ce_3: 0.5501  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.338  m1_loss_ce_4: 0.543  m1_loss_mask_4: 0.1667  m1_loss_dice_4: 1.36  m1_loss_ce_5: 0.5141  m1_loss_mask_5: 0.1646  m1_loss_dice_5: 1.313  m1_loss_ce_6: 0.5579  m1_loss_mask_6: 0.1628  m1_loss_dice_6: 1.301  m1_loss_ce_7: 0.5478  m1_loss_mask_7: 0.164  m1_loss_dice_7: 1.31  m1_loss_ce_8: 0.5215  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.304  m2_loss_ce: 0.5055  m2_loss_mask: 0.1654  m2_loss_dice: 1.332  m2_loss_ce_0: 0.6321  m2_loss_mask_0: 0.1973  m2_loss_dice_0: 1.587  m2_loss_ce_1: 0.7296  m2_loss_mask_1: 0.1889  m2_loss_dice_1: 1.482  m2_loss_ce_2: 0.6244  m2_loss_mask_2: 0.1686  m2_loss_dice_2: 1.442  m2_loss_ce_3: 0.56  m2_loss_mask_3: 0.1678  m2_loss_dice_3: 1.362  m2_loss_ce_4: 0.5479  m2_loss_mask_4: 0.1643  m2_loss_dice_4: 1.353  m2_loss_ce_5: 0.571  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.336  m2_loss_ce_6: 0.5353  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.318  m2_loss_ce_7: 0.5466  m2_loss_mask_7: 0.1651  m2_loss_dice_7: 1.315  m2_loss_ce_8: 0.5348  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.343    time: 1.9936  last_time: 1.9661  data_time: 0.0904  last_data_time: 0.0697   lr: 0.0001  max_mem: 34525M
[10/04 20:28:33] d2.utils.events INFO:  eta: 0:23:52  iter: 279  total_loss: 40.23  m1_loss_ce: 0.4556  m1_loss_mask: 0.169  m1_loss_dice: 1.281  m1_loss_ce_0: 0.5791  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.494  m1_loss_ce_1: 0.6075  m1_loss_mask_1: 0.18  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.5652  m1_loss_mask_2: 0.175  m1_loss_dice_2: 1.344  m1_loss_ce_3: 0.4922  m1_loss_mask_3: 0.1718  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.5162  m1_loss_mask_4: 0.1714  m1_loss_dice_4: 1.263  m1_loss_ce_5: 0.4623  m1_loss_mask_5: 0.1698  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4502  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.445  m1_loss_mask_7: 0.1695  m1_loss_dice_7: 1.262  m1_loss_ce_8: 0.4573  m1_loss_mask_8: 0.1684  m1_loss_dice_8: 1.256  m2_loss_ce: 0.4741  m2_loss_mask: 0.1703  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6181  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.6611  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.5784  m2_loss_mask_2: 0.1712  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.512  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.314  m2_loss_ce_4: 0.5308  m2_loss_mask_4: 0.1689  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5296  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.4976  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.268  m2_loss_ce_7: 0.4958  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.257  m2_loss_ce_8: 0.4906  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.252    time: 1.9934  last_time: 1.9970  data_time: 0.0797  last_data_time: 0.0732   lr: 0.0001  max_mem: 34868M
[10/04 20:29:13] d2.utils.events INFO:  eta: 0:23:12  iter: 299  total_loss: 40.91  m1_loss_ce: 0.4736  m1_loss_mask: 0.1723  m1_loss_dice: 1.193  m1_loss_ce_0: 0.6059  m1_loss_mask_0: 0.2063  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.6751  m1_loss_mask_1: 0.1846  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.6242  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.5412  m1_loss_mask_3: 0.1784  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5196  m1_loss_mask_4: 0.1791  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.494  m1_loss_mask_5: 0.1748  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4618  m1_loss_mask_6: 0.1733  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4775  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.498  m1_loss_mask_8: 0.173  m1_loss_dice_8: 1.197  m2_loss_ce: 0.5043  m2_loss_mask: 0.1772  m2_loss_dice: 1.214  m2_loss_ce_0: 0.6292  m2_loss_mask_0: 0.2071  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6679  m2_loss_mask_1: 0.1945  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.6445  m2_loss_mask_2: 0.1863  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5997  m2_loss_mask_3: 0.1837  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.571  m2_loss_mask_4: 0.1819  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.5159  m2_loss_mask_5: 0.1791  m2_loss_dice_5: 1.262  m2_loss_ce_6: 0.5241  m2_loss_mask_6: 0.1766  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.524  m2_loss_mask_7: 0.1777  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.4934  m2_loss_mask_8: 0.1761  m2_loss_dice_8: 1.251    time: 1.9933  last_time: 2.0158  data_time: 0.1030  last_data_time: 0.0669   lr: 0.0001  max_mem: 34868M
[10/04 20:29:53] d2.utils.events INFO:  eta: 0:22:32  iter: 319  total_loss: 38.06  m1_loss_ce: 0.4624  m1_loss_mask: 0.1704  m1_loss_dice: 1.16  m1_loss_ce_0: 0.558  m1_loss_mask_0: 0.1967  m1_loss_dice_0: 1.394  m1_loss_ce_1: 0.6522  m1_loss_mask_1: 0.185  m1_loss_dice_1: 1.298  m1_loss_ce_2: 0.5654  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.5202  m1_loss_mask_3: 0.1762  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.4873  m1_loss_mask_4: 0.1736  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.4857  m1_loss_mask_5: 0.1736  m1_loss_dice_5: 1.167  m1_loss_ce_6: 0.484  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.4455  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.4559  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.169  m2_loss_ce: 0.4753  m2_loss_mask: 0.1673  m2_loss_dice: 1.172  m2_loss_ce_0: 0.5814  m2_loss_mask_0: 0.2026  m2_loss_dice_0: 1.41  m2_loss_ce_1: 0.6417  m2_loss_mask_1: 0.1918  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.5625  m2_loss_mask_2: 0.1737  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.521  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.208  m2_loss_ce_4: 0.5012  m2_loss_mask_4: 0.172  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.5057  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.219  m2_loss_ce_6: 0.4752  m2_loss_mask_6: 0.1684  m2_loss_dice_6: 1.198  m2_loss_ce_7: 0.4765  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.4674  m2_loss_mask_8: 0.1673  m2_loss_dice_8: 1.208    time: 1.9925  last_time: 1.9378  data_time: 0.0877  last_data_time: 0.1120   lr: 0.0001  max_mem: 34868M
[10/04 20:30:33] d2.utils.events INFO:  eta: 0:21:51  iter: 339  total_loss: 37.42  m1_loss_ce: 0.4452  m1_loss_mask: 0.1856  m1_loss_dice: 1.16  m1_loss_ce_0: 0.5314  m1_loss_mask_0: 0.2184  m1_loss_dice_0: 1.379  m1_loss_ce_1: 0.5912  m1_loss_mask_1: 0.2053  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.5293  m1_loss_mask_2: 0.1923  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.4729  m1_loss_mask_3: 0.1925  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.4535  m1_loss_mask_4: 0.1865  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.4567  m1_loss_mask_5: 0.1864  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.443  m1_loss_mask_6: 0.1846  m1_loss_dice_6: 1.144  m1_loss_ce_7: 0.4235  m1_loss_mask_7: 0.1841  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.4321  m1_loss_mask_8: 0.1848  m1_loss_dice_8: 1.178  m2_loss_ce: 0.428  m2_loss_mask: 0.191  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5449  m2_loss_mask_0: 0.2283  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6219  m2_loss_mask_1: 0.2099  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5574  m2_loss_mask_2: 0.1937  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.4923  m2_loss_mask_3: 0.1927  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.4567  m2_loss_mask_4: 0.1912  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.4487  m2_loss_mask_5: 0.1864  m2_loss_dice_5: 1.181  m2_loss_ce_6: 0.4105  m2_loss_mask_6: 0.1911  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.4337  m2_loss_mask_7: 0.1914  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4394  m2_loss_mask_8: 0.1903  m2_loss_dice_8: 1.181    time: 1.9909  last_time: 2.0678  data_time: 0.0877  last_data_time: 0.2420   lr: 0.0001  max_mem: 34868M
[10/04 20:31:13] d2.utils.events INFO:  eta: 0:21:12  iter: 359  total_loss: 40.4  m1_loss_ce: 0.4788  m1_loss_mask: 0.1673  m1_loss_dice: 1.237  m1_loss_ce_0: 0.5992  m1_loss_mask_0: 0.1805  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6503  m1_loss_mask_1: 0.1717  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.6349  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5562  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5604  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.5369  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.4957  m1_loss_mask_6: 0.1661  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.4948  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.243  m1_loss_ce_8: 0.5016  m1_loss_mask_8: 0.1663  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4537  m2_loss_mask: 0.1687  m2_loss_dice: 1.246  m2_loss_ce_0: 0.6101  m2_loss_mask_0: 0.1805  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6677  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.5847  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5495  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5209  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.5023  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4807  m2_loss_mask_6: 0.1644  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.51  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4787  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.23    time: 1.9918  last_time: 2.0065  data_time: 0.1004  last_data_time: 0.0736   lr: 0.0001  max_mem: 34868M
[10/04 20:31:34] d2.engine.hooks INFO: Overall training speed: 368 iterations in 0:12:13 (1.9938 s / it)
[10/04 20:31:34] d2.engine.hooks INFO: Total training time: 0:12:16 (0:00:02 on hooks)
[10/04 20:31:34] d2.utils.events INFO:  eta: 0:20:51  iter: 370  total_loss: 41.78  m1_loss_ce: 0.5215  m1_loss_mask: 0.1667  m1_loss_dice: 1.279  m1_loss_ce_0: 0.5831  m1_loss_mask_0: 0.1822  m1_loss_dice_0: 1.482  m1_loss_ce_1: 0.6503  m1_loss_mask_1: 0.1737  m1_loss_dice_1: 1.418  m1_loss_ce_2: 0.6226  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.374  m1_loss_ce_3: 0.5663  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.317  m1_loss_ce_4: 0.5823  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.5478  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.343  m1_loss_ce_6: 0.5352  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.309  m1_loss_ce_7: 0.5393  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.318  m1_loss_ce_8: 0.5609  m1_loss_mask_8: 0.166  m1_loss_dice_8: 1.287  m2_loss_ce: 0.4848  m2_loss_mask: 0.167  m2_loss_dice: 1.24  m2_loss_ce_0: 0.5852  m2_loss_mask_0: 0.189  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6555  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.5926  m2_loss_mask_2: 0.1716  m2_loss_dice_2: 1.386  m2_loss_ce_3: 0.5399  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5045  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.5179  m2_loss_mask_5: 0.1673  m2_loss_dice_5: 1.313  m2_loss_ce_6: 0.5013  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.322  m2_loss_ce_7: 0.4604  m2_loss_mask_7: 0.1666  m2_loss_dice_7: 1.296  m2_loss_ce_8: 0.4827  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.281    time: 1.9928  last_time: 1.9432  data_time: 0.1130  last_data_time: 0.0707   lr: 0.0001  max_mem: 34868M
[10/04 20:32:31] detectron2 INFO: Rank of current process: 0. World size: 2
[10/04 20:32:32] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/04 20:32:32] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_7_0_3_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/04 20:32:32] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_7_0_3_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/04 20:32:32] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/04 20:32:32] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3/config.yaml
[10/04 20:32:32] d2.utils.env INFO: Using a generated random seed 34519504
[10/04 20:32:36] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/04 20:32:36] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/04 20:32:36] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/04 20:32:36] d2.data.build INFO: Using training sampler TrainingSampler
[10/04 20:32:36] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/04 20:32:36] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/04 20:32:36] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/04 20:32:36] d2.data.build INFO: Making batched data loader with batch_size=4
[10/04 20:32:36] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/04 20:32:39] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/04 20:32:39] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:32:39] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:32:42] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:32:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 20:33:16] d2.utils.events INFO:  eta: 0:22:17  iter: 19  total_loss: 42.37  m1_loss_ce: 0.4565  m1_loss_mask: 0.1792  m1_loss_dice: 1.327  m1_loss_ce_0: 0.6028  m1_loss_mask_0: 0.2037  m1_loss_dice_0: 1.533  m1_loss_ce_1: 0.6797  m1_loss_mask_1: 0.1945  m1_loss_dice_1: 1.475  m1_loss_ce_2: 0.6006  m1_loss_mask_2: 0.183  m1_loss_dice_2: 1.419  m1_loss_ce_3: 0.5439  m1_loss_mask_3: 0.1825  m1_loss_dice_3: 1.334  m1_loss_ce_4: 0.5019  m1_loss_mask_4: 0.1801  m1_loss_dice_4: 1.347  m1_loss_ce_5: 0.4992  m1_loss_mask_5: 0.1798  m1_loss_dice_5: 1.321  m1_loss_ce_6: 0.4727  m1_loss_mask_6: 0.1789  m1_loss_dice_6: 1.35  m1_loss_ce_7: 0.4615  m1_loss_mask_7: 0.181  m1_loss_dice_7: 1.339  m1_loss_ce_8: 0.4417  m1_loss_mask_8: 0.1812  m1_loss_dice_8: 1.323  m2_loss_ce: 0.486  m2_loss_mask: 0.1767  m2_loss_dice: 1.31  m2_loss_ce_0: 0.6426  m2_loss_mask_0: 0.2124  m2_loss_dice_0: 1.519  m2_loss_ce_1: 0.6534  m2_loss_mask_1: 0.1927  m2_loss_dice_1: 1.478  m2_loss_ce_2: 0.5817  m2_loss_mask_2: 0.1849  m2_loss_dice_2: 1.422  m2_loss_ce_3: 0.5544  m2_loss_mask_3: 0.1823  m2_loss_dice_3: 1.357  m2_loss_ce_4: 0.5102  m2_loss_mask_4: 0.1803  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.5133  m2_loss_mask_5: 0.1756  m2_loss_dice_5: 1.31  m2_loss_ce_6: 0.5118  m2_loss_mask_6: 0.1785  m2_loss_dice_6: 1.31  m2_loss_ce_7: 0.4769  m2_loss_mask_7: 0.1775  m2_loss_dice_7: 1.317  m2_loss_ce_8: 0.4902  m2_loss_mask_8: 0.1774  m2_loss_dice_8: 1.331    time: 1.3750  last_time: 1.4097  data_time: 0.2364  last_data_time: 0.0378   lr: 0.0001  max_mem: 33953M
[10/04 20:33:44] d2.utils.events INFO:  eta: 0:21:48  iter: 39  total_loss: 39.8  m1_loss_ce: 0.4505  m1_loss_mask: 0.1903  m1_loss_dice: 1.166  m1_loss_ce_0: 0.5631  m1_loss_mask_0: 0.2084  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.6552  m1_loss_mask_1: 0.2024  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.6057  m1_loss_mask_2: 0.1987  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5475  m1_loss_mask_3: 0.1927  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.5188  m1_loss_mask_4: 0.1957  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.5131  m1_loss_mask_5: 0.1935  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.453  m1_loss_mask_6: 0.1977  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.487  m1_loss_mask_7: 0.1926  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4728  m1_loss_mask_8: 0.1883  m1_loss_dice_8: 1.177  m2_loss_ce: 0.4618  m2_loss_mask: 0.1809  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5808  m2_loss_mask_0: 0.2074  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.1929  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.5755  m2_loss_mask_2: 0.1861  m2_loss_dice_2: 1.259  m2_loss_ce_3: 0.5349  m2_loss_mask_3: 0.186  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.5149  m2_loss_mask_4: 0.1848  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5167  m2_loss_mask_5: 0.1819  m2_loss_dice_5: 1.195  m2_loss_ce_6: 0.4495  m2_loss_mask_6: 0.1834  m2_loss_dice_6: 1.192  m2_loss_ce_7: 0.4873  m2_loss_mask_7: 0.1815  m2_loss_dice_7: 1.166  m2_loss_ce_8: 0.4564  m2_loss_mask_8: 0.1796  m2_loss_dice_8: 1.185    time: 1.3686  last_time: 1.3452  data_time: 0.0501  last_data_time: 0.0384   lr: 0.0001  max_mem: 33953M
[10/04 20:34:11] d2.utils.events INFO:  eta: 0:21:21  iter: 59  total_loss: 39.47  m1_loss_ce: 0.4671  m1_loss_mask: 0.1683  m1_loss_dice: 1.196  m1_loss_ce_0: 0.5774  m1_loss_mask_0: 0.1975  m1_loss_dice_0: 1.478  m1_loss_ce_1: 0.6561  m1_loss_mask_1: 0.1806  m1_loss_dice_1: 1.392  m1_loss_ce_2: 0.5748  m1_loss_mask_2: 0.1725  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5326  m1_loss_mask_3: 0.1708  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.5375  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.5288  m1_loss_mask_5: 0.1686  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.4926  m1_loss_mask_6: 0.1685  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.4807  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4807  m1_loss_mask_8: 0.1685  m1_loss_dice_8: 1.177  m2_loss_ce: 0.4718  m2_loss_mask: 0.1655  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6131  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6633  m2_loss_mask_1: 0.189  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.5955  m2_loss_mask_2: 0.1733  m2_loss_dice_2: 1.302  m2_loss_ce_3: 0.5398  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5334  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.5087  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.2  m2_loss_ce_6: 0.4965  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4588  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4682  m2_loss_mask_8: 0.1655  m2_loss_dice_8: 1.229    time: 1.3679  last_time: 1.3913  data_time: 0.0562  last_data_time: 0.0604   lr: 0.0001  max_mem: 33953M
[10/04 20:34:39] d2.utils.events INFO:  eta: 0:20:53  iter: 79  total_loss: 41.53  m1_loss_ce: 0.4616  m1_loss_mask: 0.1636  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5533  m1_loss_mask_0: 0.1948  m1_loss_dice_0: 1.464  m1_loss_ce_1: 0.6608  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.433  m1_loss_ce_2: 0.6033  m1_loss_mask_2: 0.1694  m1_loss_dice_2: 1.333  m1_loss_ce_3: 0.5316  m1_loss_mask_3: 0.1652  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5349  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.5141  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.4696  m1_loss_mask_6: 0.1624  m1_loss_dice_6: 1.265  m1_loss_ce_7: 0.4869  m1_loss_mask_7: 0.161  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.4982  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.208  m2_loss_ce: 0.4894  m2_loss_mask: 0.162  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6253  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.7037  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.438  m2_loss_ce_2: 0.601  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.5324  m2_loss_mask_3: 0.167  m2_loss_dice_3: 1.328  m2_loss_ce_4: 0.5059  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.5319  m2_loss_mask_5: 0.1653  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.5128  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.281  m2_loss_ce_7: 0.5093  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.4945  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.3    time: 1.3689  last_time: 1.2994  data_time: 0.0479  last_data_time: 0.0551   lr: 0.0001  max_mem: 33953M
[10/04 20:35:06] d2.utils.events INFO:  eta: 0:20:22  iter: 99  total_loss: 38.88  m1_loss_ce: 0.4668  m1_loss_mask: 0.1471  m1_loss_dice: 1.2  m1_loss_ce_0: 0.6099  m1_loss_mask_0: 0.1773  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6247  m1_loss_mask_1: 0.1615  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.5326  m1_loss_mask_2: 0.1524  m1_loss_dice_2: 1.25  m1_loss_ce_3: 0.5122  m1_loss_mask_3: 0.1486  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.4835  m1_loss_mask_4: 0.149  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4893  m1_loss_mask_5: 0.1489  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.4789  m1_loss_mask_6: 0.1485  m1_loss_dice_6: 1.178  m1_loss_ce_7: 0.4604  m1_loss_mask_7: 0.1489  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4579  m1_loss_mask_8: 0.1454  m1_loss_dice_8: 1.22  m2_loss_ce: 0.4609  m2_loss_mask: 0.1495  m2_loss_dice: 1.191  m2_loss_ce_0: 0.5973  m2_loss_mask_0: 0.1818  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.6312  m2_loss_mask_1: 0.166  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.5595  m2_loss_mask_2: 0.1508  m2_loss_dice_2: 1.238  m2_loss_ce_3: 0.5159  m2_loss_mask_3: 0.1498  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5025  m2_loss_mask_4: 0.148  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.4843  m2_loss_mask_5: 0.1481  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.4622  m2_loss_mask_6: 0.1493  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5111  m2_loss_mask_7: 0.1486  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.4711  m2_loss_mask_8: 0.1486  m2_loss_dice_8: 1.26    time: 1.3664  last_time: 1.3167  data_time: 0.0469  last_data_time: 0.0511   lr: 0.0001  max_mem: 33953M
[10/04 20:35:33] d2.utils.events INFO:  eta: 0:19:57  iter: 119  total_loss: 39.72  m1_loss_ce: 0.4721  m1_loss_mask: 0.1773  m1_loss_dice: 1.204  m1_loss_ce_0: 0.5829  m1_loss_mask_0: 0.2089  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.5983  m1_loss_mask_1: 0.2026  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5482  m1_loss_mask_2: 0.1839  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5155  m1_loss_mask_3: 0.1836  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.4905  m1_loss_mask_4: 0.1845  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.474  m1_loss_mask_5: 0.181  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.4676  m1_loss_mask_6: 0.1832  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.451  m1_loss_mask_7: 0.1822  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.48  m1_loss_mask_8: 0.183  m1_loss_dice_8: 1.218  m2_loss_ce: 0.4668  m2_loss_mask: 0.1871  m2_loss_dice: 1.19  m2_loss_ce_0: 0.5868  m2_loss_mask_0: 0.2134  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6593  m2_loss_mask_1: 0.2002  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.5697  m2_loss_mask_2: 0.1887  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.538  m2_loss_mask_3: 0.1911  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5043  m2_loss_mask_4: 0.1851  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.4896  m2_loss_mask_5: 0.1852  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.4505  m2_loss_mask_6: 0.1842  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4568  m2_loss_mask_7: 0.1868  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.4604  m2_loss_mask_8: 0.1863  m2_loss_dice_8: 1.214    time: 1.3676  last_time: 1.3294  data_time: 0.0466  last_data_time: 0.0338   lr: 0.0001  max_mem: 33953M
[10/04 20:36:01] d2.utils.events INFO:  eta: 0:19:29  iter: 139  total_loss: 40.84  m1_loss_ce: 0.5095  m1_loss_mask: 0.1619  m1_loss_dice: 1.23  m1_loss_ce_0: 0.6162  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.679  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.6014  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5647  m1_loss_mask_3: 0.1628  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.511  m1_loss_mask_4: 0.1627  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.528  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5172  m1_loss_mask_6: 0.161  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.5508  m1_loss_mask_7: 0.1627  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4979  m1_loss_mask_8: 0.1606  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4732  m2_loss_mask: 0.1627  m2_loss_dice: 1.305  m2_loss_ce_0: 0.6088  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.6923  m2_loss_mask_1: 0.1809  m2_loss_dice_1: 1.402  m2_loss_ce_2: 0.6349  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5707  m2_loss_mask_3: 0.1633  m2_loss_dice_3: 1.308  m2_loss_ce_4: 0.5341  m2_loss_mask_4: 0.1593  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5164  m2_loss_mask_5: 0.158  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.4964  m2_loss_mask_6: 0.1625  m2_loss_dice_6: 1.287  m2_loss_ce_7: 0.4996  m2_loss_mask_7: 0.1617  m2_loss_dice_7: 1.295  m2_loss_ce_8: 0.4906  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.279    time: 1.3669  last_time: 1.3277  data_time: 0.0460  last_data_time: 0.0456   lr: 0.0001  max_mem: 33953M
[10/04 20:36:28] d2.utils.events INFO:  eta: 0:19:03  iter: 159  total_loss: 38  m1_loss_ce: 0.4552  m1_loss_mask: 0.1654  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5269  m1_loss_mask_0: 0.1949  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.6169  m1_loss_mask_1: 0.1801  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5674  m1_loss_mask_2: 0.176  m1_loss_dice_2: 1.291  m1_loss_ce_3: 0.4903  m1_loss_mask_3: 0.1727  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.4731  m1_loss_mask_4: 0.1693  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.4744  m1_loss_mask_5: 0.1669  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4693  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.4857  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.16  m1_loss_ce_8: 0.4488  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.215  m2_loss_ce: 0.4547  m2_loss_mask: 0.1601  m2_loss_dice: 1.199  m2_loss_ce_0: 0.568  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.6656  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5711  m2_loss_mask_2: 0.1664  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5305  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.5144  m2_loss_mask_4: 0.1607  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.4856  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.4809  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4747  m2_loss_mask_7: 0.1595  m2_loss_dice_7: 1.198  m2_loss_ce_8: 0.4503  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.187    time: 1.3672  last_time: 1.3110  data_time: 0.0466  last_data_time: 0.0470   lr: 0.0001  max_mem: 33953M
[10/04 20:36:56] d2.utils.events INFO:  eta: 0:18:36  iter: 179  total_loss: 40.81  m1_loss_ce: 0.5211  m1_loss_mask: 0.1617  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6096  m1_loss_mask_0: 0.1836  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.6557  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.6113  m1_loss_mask_2: 0.1646  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5452  m1_loss_mask_3: 0.1623  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.5089  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.4988  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.277  m1_loss_ce_6: 0.506  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.5284  m1_loss_mask_7: 0.1629  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.4879  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.258  m2_loss_ce: 0.491  m2_loss_mask: 0.1553  m2_loss_dice: 1.283  m2_loss_ce_0: 0.6115  m2_loss_mask_0: 0.1912  m2_loss_dice_0: 1.526  m2_loss_ce_1: 0.6764  m2_loss_mask_1: 0.1811  m2_loss_dice_1: 1.451  m2_loss_ce_2: 0.6076  m2_loss_mask_2: 0.168  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5763  m2_loss_mask_3: 0.159  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5048  m2_loss_mask_4: 0.1591  m2_loss_dice_4: 1.339  m2_loss_ce_5: 0.5435  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.5106  m2_loss_mask_6: 0.1554  m2_loss_dice_6: 1.293  m2_loss_ce_7: 0.5144  m2_loss_mask_7: 0.1598  m2_loss_dice_7: 1.304  m2_loss_ce_8: 0.502  m2_loss_mask_8: 0.1571  m2_loss_dice_8: 1.304    time: 1.3679  last_time: 1.3064  data_time: 0.0495  last_data_time: 0.0422   lr: 0.0001  max_mem: 33953M
[10/04 20:37:24] d2.utils.events INFO:  eta: 0:18:08  iter: 199  total_loss: 39.41  m1_loss_ce: 0.4361  m1_loss_mask: 0.1656  m1_loss_dice: 1.254  m1_loss_ce_0: 0.5576  m1_loss_mask_0: 0.2063  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.6337  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.5597  m1_loss_mask_2: 0.172  m1_loss_dice_2: 1.36  m1_loss_ce_3: 0.5151  m1_loss_mask_3: 0.1718  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.4709  m1_loss_mask_4: 0.1702  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.4846  m1_loss_mask_5: 0.1683  m1_loss_dice_5: 1.266  m1_loss_ce_6: 0.484  m1_loss_mask_6: 0.1701  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.454  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.4615  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.248  m2_loss_ce: 0.4328  m2_loss_mask: 0.1653  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6234  m2_loss_mask_0: 0.1945  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6511  m2_loss_mask_1: 0.1856  m2_loss_dice_1: 1.402  m2_loss_ce_2: 0.5768  m2_loss_mask_2: 0.164  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5192  m2_loss_mask_3: 0.162  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5139  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.5022  m2_loss_mask_5: 0.1591  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4409  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.459  m2_loss_mask_7: 0.165  m2_loss_dice_7: 1.287  m2_loss_ce_8: 0.4671  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.272    time: 1.3692  last_time: 1.4703  data_time: 0.0455  last_data_time: 0.0360   lr: 0.0001  max_mem: 35331M
[10/04 20:37:51] d2.utils.events INFO:  eta: 0:17:42  iter: 219  total_loss: 38.54  m1_loss_ce: 0.473  m1_loss_mask: 0.1782  m1_loss_dice: 1.182  m1_loss_ce_0: 0.5949  m1_loss_mask_0: 0.2052  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6481  m1_loss_mask_1: 0.1987  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.5845  m1_loss_mask_2: 0.1762  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5296  m1_loss_mask_3: 0.1737  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5193  m1_loss_mask_4: 0.1755  m1_loss_dice_4: 1.198  m1_loss_ce_5: 0.4866  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.4792  m1_loss_mask_6: 0.1748  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4893  m1_loss_mask_7: 0.1764  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.484  m1_loss_mask_8: 0.1773  m1_loss_dice_8: 1.214  m2_loss_ce: 0.453  m2_loss_mask: 0.1712  m2_loss_dice: 1.178  m2_loss_ce_0: 0.5816  m2_loss_mask_0: 0.2018  m2_loss_dice_0: 1.405  m2_loss_ce_1: 0.6443  m2_loss_mask_1: 0.1909  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.5695  m2_loss_mask_2: 0.176  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5352  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5025  m2_loss_mask_4: 0.1734  m2_loss_dice_4: 1.217  m2_loss_ce_5: 0.499  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.199  m2_loss_ce_6: 0.4859  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.4845  m2_loss_mask_7: 0.1723  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4536  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.202    time: 1.3694  last_time: 1.3916  data_time: 0.0483  last_data_time: 0.0368   lr: 0.0001  max_mem: 35331M
[10/04 20:38:19] d2.utils.events INFO:  eta: 0:17:17  iter: 239  total_loss: 40.93  m1_loss_ce: 0.4721  m1_loss_mask: 0.1735  m1_loss_dice: 1.259  m1_loss_ce_0: 0.5675  m1_loss_mask_0: 0.2014  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.656  m1_loss_mask_1: 0.1897  m1_loss_dice_1: 1.377  m1_loss_ce_2: 0.5797  m1_loss_mask_2: 0.1769  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.4958  m1_loss_mask_3: 0.174  m1_loss_dice_3: 1.285  m1_loss_ce_4: 0.5093  m1_loss_mask_4: 0.1735  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.5121  m1_loss_mask_5: 0.1728  m1_loss_dice_5: 1.257  m1_loss_ce_6: 0.481  m1_loss_mask_6: 0.1738  m1_loss_dice_6: 1.276  m1_loss_ce_7: 0.4764  m1_loss_mask_7: 0.173  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.5024  m1_loss_mask_8: 0.1719  m1_loss_dice_8: 1.232  m2_loss_ce: 0.4809  m2_loss_mask: 0.1756  m2_loss_dice: 1.245  m2_loss_ce_0: 0.6299  m2_loss_mask_0: 0.2065  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.6668  m2_loss_mask_1: 0.2  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.6066  m2_loss_mask_2: 0.1787  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5275  m2_loss_mask_3: 0.1824  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5223  m2_loss_mask_4: 0.18  m2_loss_dice_4: 1.278  m2_loss_ce_5: 0.507  m2_loss_mask_5: 0.1759  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.4616  m2_loss_mask_6: 0.1771  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.4789  m2_loss_mask_7: 0.1764  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4685  m2_loss_mask_8: 0.1757  m2_loss_dice_8: 1.274    time: 1.3698  last_time: 1.4366  data_time: 0.0493  last_data_time: 0.0346   lr: 0.0001  max_mem: 35331M
[10/04 20:38:47] d2.utils.events INFO:  eta: 0:16:50  iter: 259  total_loss: 42.32  m1_loss_ce: 0.4896  m1_loss_mask: 0.1704  m1_loss_dice: 1.29  m1_loss_ce_0: 0.6046  m1_loss_mask_0: 0.204  m1_loss_dice_0: 1.498  m1_loss_ce_1: 0.6467  m1_loss_mask_1: 0.1835  m1_loss_dice_1: 1.47  m1_loss_ce_2: 0.5968  m1_loss_mask_2: 0.1775  m1_loss_dice_2: 1.372  m1_loss_ce_3: 0.5386  m1_loss_mask_3: 0.1773  m1_loss_dice_3: 1.324  m1_loss_ce_4: 0.5151  m1_loss_mask_4: 0.1712  m1_loss_dice_4: 1.315  m1_loss_ce_5: 0.5101  m1_loss_mask_5: 0.1695  m1_loss_dice_5: 1.268  m1_loss_ce_6: 0.4998  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.275  m1_loss_ce_7: 0.4991  m1_loss_mask_7: 0.1692  m1_loss_dice_7: 1.266  m1_loss_ce_8: 0.4879  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5148  m2_loss_mask: 0.1715  m2_loss_dice: 1.281  m2_loss_ce_0: 0.612  m2_loss_mask_0: 0.2023  m2_loss_dice_0: 1.556  m2_loss_ce_1: 0.6653  m2_loss_mask_1: 0.1892  m2_loss_dice_1: 1.449  m2_loss_ce_2: 0.6001  m2_loss_mask_2: 0.1778  m2_loss_dice_2: 1.379  m2_loss_ce_3: 0.5523  m2_loss_mask_3: 0.1749  m2_loss_dice_3: 1.351  m2_loss_ce_4: 0.5228  m2_loss_mask_4: 0.1721  m2_loss_dice_4: 1.374  m2_loss_ce_5: 0.5569  m2_loss_mask_5: 0.1718  m2_loss_dice_5: 1.34  m2_loss_ce_6: 0.5077  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.297  m2_loss_ce_7: 0.5042  m2_loss_mask_7: 0.172  m2_loss_dice_7: 1.297  m2_loss_ce_8: 0.4848  m2_loss_mask_8: 0.1729  m2_loss_dice_8: 1.322    time: 1.3711  last_time: 1.3815  data_time: 0.0544  last_data_time: 0.0445   lr: 0.0001  max_mem: 35331M
[10/04 20:39:14] d2.utils.events INFO:  eta: 0:16:22  iter: 279  total_loss: 38.44  m1_loss_ce: 0.4506  m1_loss_mask: 0.1792  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5612  m1_loss_mask_0: 0.2055  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.603  m1_loss_mask_1: 0.1908  m1_loss_dice_1: 1.298  m1_loss_ce_2: 0.5479  m1_loss_mask_2: 0.1879  m1_loss_dice_2: 1.278  m1_loss_ce_3: 0.4908  m1_loss_mask_3: 0.19  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.4682  m1_loss_mask_4: 0.1883  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.4794  m1_loss_mask_5: 0.1849  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.4659  m1_loss_mask_6: 0.1805  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4632  m1_loss_mask_7: 0.1795  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.462  m1_loss_mask_8: 0.1783  m1_loss_dice_8: 1.203  m2_loss_ce: 0.4394  m2_loss_mask: 0.1759  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5702  m2_loss_mask_0: 0.1986  m2_loss_dice_0: 1.393  m2_loss_ce_1: 0.6393  m2_loss_mask_1: 0.1869  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.5828  m2_loss_mask_2: 0.1801  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5259  m2_loss_mask_3: 0.1815  m2_loss_dice_3: 1.219  m2_loss_ce_4: 0.5042  m2_loss_mask_4: 0.1779  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.4674  m2_loss_mask_5: 0.1794  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4717  m2_loss_mask_6: 0.1777  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.4382  m2_loss_mask_7: 0.1785  m2_loss_dice_7: 1.198  m2_loss_ce_8: 0.4556  m2_loss_mask_8: 0.1768  m2_loss_dice_8: 1.22    time: 1.3700  last_time: 1.4191  data_time: 0.0467  last_data_time: 0.0406   lr: 0.0001  max_mem: 35331M
[10/04 20:39:41] d2.utils.events INFO:  eta: 0:15:56  iter: 299  total_loss: 40.53  m1_loss_ce: 0.485  m1_loss_mask: 0.175  m1_loss_dice: 1.223  m1_loss_ce_0: 0.5983  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.6623  m1_loss_mask_1: 0.1788  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.5657  m1_loss_mask_2: 0.1755  m1_loss_dice_2: 1.31  m1_loss_ce_3: 0.552  m1_loss_mask_3: 0.1771  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5359  m1_loss_mask_4: 0.1735  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4959  m1_loss_mask_5: 0.1674  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.4952  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.248  m1_loss_ce_7: 0.5084  m1_loss_mask_7: 0.168  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4711  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.268  m2_loss_ce: 0.4796  m2_loss_mask: 0.1735  m2_loss_dice: 1.262  m2_loss_ce_0: 0.6201  m2_loss_mask_0: 0.1993  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6784  m2_loss_mask_1: 0.1819  m2_loss_dice_1: 1.402  m2_loss_ce_2: 0.5886  m2_loss_mask_2: 0.1786  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5406  m2_loss_mask_3: 0.1749  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5286  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5258  m2_loss_mask_5: 0.1713  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.5159  m2_loss_mask_6: 0.1713  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.489  m2_loss_mask_7: 0.1738  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.5204  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.26    time: 1.3704  last_time: 1.3862  data_time: 0.0466  last_data_time: 0.0342   lr: 0.0001  max_mem: 35331M
[10/04 20:40:09] d2.utils.events INFO:  eta: 0:15:30  iter: 319  total_loss: 38.71  m1_loss_ce: 0.4406  m1_loss_mask: 0.1709  m1_loss_dice: 1.167  m1_loss_ce_0: 0.5915  m1_loss_mask_0: 0.1926  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.637  m1_loss_mask_1: 0.18  m1_loss_dice_1: 1.286  m1_loss_ce_2: 0.5307  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.232  m1_loss_ce_3: 0.4987  m1_loss_mask_3: 0.1735  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.4711  m1_loss_mask_4: 0.1739  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.4739  m1_loss_mask_5: 0.1722  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.4753  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.152  m1_loss_ce_7: 0.4801  m1_loss_mask_7: 0.1725  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.4711  m1_loss_mask_8: 0.1713  m1_loss_dice_8: 1.156  m2_loss_ce: 0.5075  m2_loss_mask: 0.1725  m2_loss_dice: 1.195  m2_loss_ce_0: 0.5873  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.351  m2_loss_ce_1: 0.6345  m2_loss_mask_1: 0.1832  m2_loss_dice_1: 1.288  m2_loss_ce_2: 0.5663  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5512  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.201  m2_loss_ce_4: 0.5317  m2_loss_mask_4: 0.17  m2_loss_dice_4: 1.183  m2_loss_ce_5: 0.4888  m2_loss_mask_5: 0.1641  m2_loss_dice_5: 1.192  m2_loss_ce_6: 0.4947  m2_loss_mask_6: 0.1734  m2_loss_dice_6: 1.167  m2_loss_ce_7: 0.4881  m2_loss_mask_7: 0.1658  m2_loss_dice_7: 1.194  m2_loss_ce_8: 0.4536  m2_loss_mask_8: 0.1732  m2_loss_dice_8: 1.203    time: 1.3711  last_time: 1.3891  data_time: 0.0507  last_data_time: 0.0708   lr: 0.0001  max_mem: 35331M
[10/04 20:40:36] d2.utils.events INFO:  eta: 0:15:02  iter: 339  total_loss: 40.45  m1_loss_ce: 0.4837  m1_loss_mask: 0.1643  m1_loss_dice: 1.204  m1_loss_ce_0: 0.6071  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.6737  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.5936  m1_loss_mask_2: 0.1694  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5371  m1_loss_mask_3: 0.1691  m1_loss_dice_3: 1.288  m1_loss_ce_4: 0.5195  m1_loss_mask_4: 0.1676  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.514  m1_loss_mask_5: 0.1664  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.5262  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4797  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.4701  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.211  m2_loss_ce: 0.5051  m2_loss_mask: 0.1687  m2_loss_dice: 1.255  m2_loss_ce_0: 0.6215  m2_loss_mask_0: 0.1958  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6727  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.5976  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.362  m2_loss_ce_3: 0.5377  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5151  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5388  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5075  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5365  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.496  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.21    time: 1.3705  last_time: 1.2664  data_time: 0.0478  last_data_time: 0.0450   lr: 0.0001  max_mem: 35331M
[10/04 20:41:04] d2.utils.events INFO:  eta: 0:14:35  iter: 359  total_loss: 42.71  m1_loss_ce: 0.522  m1_loss_mask: 0.1697  m1_loss_dice: 1.299  m1_loss_ce_0: 0.6334  m1_loss_mask_0: 0.1968  m1_loss_dice_0: 1.514  m1_loss_ce_1: 0.6865  m1_loss_mask_1: 0.1851  m1_loss_dice_1: 1.493  m1_loss_ce_2: 0.6155  m1_loss_mask_2: 0.1754  m1_loss_dice_2: 1.403  m1_loss_ce_3: 0.563  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.352  m1_loss_ce_4: 0.5579  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.345  m1_loss_ce_5: 0.5355  m1_loss_mask_5: 0.1704  m1_loss_dice_5: 1.324  m1_loss_ce_6: 0.5227  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.303  m1_loss_ce_7: 0.5338  m1_loss_mask_7: 0.171  m1_loss_dice_7: 1.3  m1_loss_ce_8: 0.5362  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.298  m2_loss_ce: 0.5001  m2_loss_mask: 0.1699  m2_loss_dice: 1.327  m2_loss_ce_0: 0.6467  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.543  m2_loss_ce_1: 0.7165  m2_loss_mask_1: 0.1928  m2_loss_dice_1: 1.467  m2_loss_ce_2: 0.6305  m2_loss_mask_2: 0.1753  m2_loss_dice_2: 1.412  m2_loss_ce_3: 0.5667  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.351  m2_loss_ce_4: 0.5581  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.343  m2_loss_ce_5: 0.5579  m2_loss_mask_5: 0.1692  m2_loss_dice_5: 1.335  m2_loss_ce_6: 0.5407  m2_loss_mask_6: 0.1699  m2_loss_dice_6: 1.327  m2_loss_ce_7: 0.523  m2_loss_mask_7: 0.1682  m2_loss_dice_7: 1.315  m2_loss_ce_8: 0.5062  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.308    time: 1.3714  last_time: 1.3600  data_time: 0.0525  last_data_time: 0.0590   lr: 0.0001  max_mem: 35331M
[10/04 20:41:32] d2.utils.events INFO:  eta: 0:14:08  iter: 379  total_loss: 39.88  m1_loss_ce: 0.4248  m1_loss_mask: 0.1632  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5712  m1_loss_mask_0: 0.1862  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.6444  m1_loss_mask_1: 0.1732  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.534  m1_loss_mask_2: 0.1664  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.4924  m1_loss_mask_3: 0.1653  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.4774  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4534  m1_loss_mask_5: 0.1629  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4554  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.4341  m1_loss_mask_7: 0.1637  m1_loss_dice_7: 1.211  m1_loss_ce_8: 0.4513  m1_loss_mask_8: 0.1629  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4681  m2_loss_mask: 0.1647  m2_loss_dice: 1.271  m2_loss_ce_0: 0.6115  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6651  m2_loss_mask_1: 0.1811  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.6006  m2_loss_mask_2: 0.1703  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5237  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5244  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.4961  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.4411  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.458  m2_loss_mask_7: 0.1682  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4598  m2_loss_mask_8: 0.1665  m2_loss_dice_8: 1.216    time: 1.3722  last_time: 1.4120  data_time: 0.0480  last_data_time: 0.0542   lr: 0.0001  max_mem: 35331M
[10/04 20:41:59] d2.utils.events INFO:  eta: 0:13:40  iter: 399  total_loss: 39.24  m1_loss_ce: 0.4553  m1_loss_mask: 0.1664  m1_loss_dice: 1.156  m1_loss_ce_0: 0.5568  m1_loss_mask_0: 0.1971  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6001  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.287  m1_loss_ce_2: 0.5507  m1_loss_mask_2: 0.1729  m1_loss_dice_2: 1.236  m1_loss_ce_3: 0.4978  m1_loss_mask_3: 0.1684  m1_loss_dice_3: 1.199  m1_loss_ce_4: 0.4692  m1_loss_mask_4: 0.1682  m1_loss_dice_4: 1.162  m1_loss_ce_5: 0.4852  m1_loss_mask_5: 0.1684  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.437  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.15  m1_loss_ce_7: 0.4669  m1_loss_mask_7: 0.1686  m1_loss_dice_7: 1.161  m1_loss_ce_8: 0.4664  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.161  m2_loss_ce: 0.478  m2_loss_mask: 0.1678  m2_loss_dice: 1.233  m2_loss_ce_0: 0.5979  m2_loss_mask_0: 0.2008  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6651  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.5811  m2_loss_mask_2: 0.1762  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5256  m2_loss_mask_3: 0.1795  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5123  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.5075  m2_loss_mask_5: 0.174  m2_loss_dice_5: 1.21  m2_loss_ce_6: 0.4943  m2_loss_mask_6: 0.1738  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.4834  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.4652  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.224    time: 1.3717  last_time: 1.3601  data_time: 0.0467  last_data_time: 0.0438   lr: 0.0001  max_mem: 35331M
[10/04 20:42:27] d2.utils.events INFO:  eta: 0:13:13  iter: 419  total_loss: 40.64  m1_loss_ce: 0.4424  m1_loss_mask: 0.1632  m1_loss_dice: 1.222  m1_loss_ce_0: 0.6044  m1_loss_mask_0: 0.1897  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6583  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.6172  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.291  m1_loss_ce_3: 0.5178  m1_loss_mask_3: 0.1675  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5007  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.499  m1_loss_mask_5: 0.1654  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.4918  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.4753  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.4955  m1_loss_mask_8: 0.1602  m1_loss_dice_8: 1.258  m2_loss_ce: 0.4953  m2_loss_mask: 0.1694  m2_loss_dice: 1.282  m2_loss_ce_0: 0.6349  m2_loss_mask_0: 0.1922  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6718  m2_loss_mask_1: 0.1861  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.5952  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.5602  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.329  m2_loss_ce_4: 0.5482  m2_loss_mask_4: 0.1678  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5388  m2_loss_mask_5: 0.1679  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.5087  m2_loss_mask_6: 0.171  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5075  m2_loss_mask_7: 0.168  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.5041  m2_loss_mask_8: 0.1678  m2_loss_dice_8: 1.261    time: 1.3725  last_time: 1.4271  data_time: 0.0491  last_data_time: 0.0614   lr: 0.0001  max_mem: 35331M
[10/04 20:42:55] d2.utils.events INFO:  eta: 0:12:46  iter: 439  total_loss: 40.31  m1_loss_ce: 0.4287  m1_loss_mask: 0.155  m1_loss_dice: 1.24  m1_loss_ce_0: 0.5397  m1_loss_mask_0: 0.1749  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.5974  m1_loss_mask_1: 0.1668  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5539  m1_loss_mask_2: 0.1563  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.4943  m1_loss_mask_3: 0.1594  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5051  m1_loss_mask_4: 0.1567  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.4677  m1_loss_mask_5: 0.1525  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.4332  m1_loss_mask_6: 0.1543  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4268  m1_loss_mask_7: 0.1544  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4314  m1_loss_mask_8: 0.1535  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4398  m2_loss_mask: 0.1595  m2_loss_dice: 1.263  m2_loss_ce_0: 0.578  m2_loss_mask_0: 0.191  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.638  m2_loss_mask_1: 0.1814  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.5555  m2_loss_mask_2: 0.1687  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.504  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5049  m2_loss_mask_4: 0.1616  m2_loss_dice_4: 1.318  m2_loss_ce_5: 0.4744  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.4549  m2_loss_mask_6: 0.1597  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.4633  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.292  m2_loss_ce_8: 0.4515  m2_loss_mask_8: 0.1576  m2_loss_dice_8: 1.236    time: 1.3735  last_time: 1.3919  data_time: 0.0531  last_data_time: 0.0435   lr: 0.0001  max_mem: 35331M
[10/04 20:43:23] d2.utils.events INFO:  eta: 0:12:19  iter: 459  total_loss: 39.02  m1_loss_ce: 0.4551  m1_loss_mask: 0.1641  m1_loss_dice: 1.17  m1_loss_ce_0: 0.5571  m1_loss_mask_0: 0.1853  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.5836  m1_loss_mask_1: 0.1803  m1_loss_dice_1: 1.276  m1_loss_ce_2: 0.5468  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.528  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5105  m1_loss_mask_4: 0.1685  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.4797  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4534  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.4351  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.184  m1_loss_ce_8: 0.4216  m1_loss_mask_8: 0.1635  m1_loss_dice_8: 1.164  m2_loss_ce: 0.4846  m2_loss_mask: 0.1653  m2_loss_dice: 1.25  m2_loss_ce_0: 0.5779  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6819  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.5923  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.5667  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.5321  m2_loss_mask_4: 0.1613  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.5181  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.4964  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.5336  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.4878  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.253    time: 1.3742  last_time: 1.4202  data_time: 0.0507  last_data_time: 0.0443   lr: 0.0001  max_mem: 35331M
[10/04 20:43:51] d2.utils.events INFO:  eta: 0:11:52  iter: 479  total_loss: 37.71  m1_loss_ce: 0.4359  m1_loss_mask: 0.1648  m1_loss_dice: 1.168  m1_loss_ce_0: 0.5479  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.617  m1_loss_mask_1: 0.1867  m1_loss_dice_1: 1.302  m1_loss_ce_2: 0.5322  m1_loss_mask_2: 0.1744  m1_loss_dice_2: 1.224  m1_loss_ce_3: 0.4932  m1_loss_mask_3: 0.1727  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.4832  m1_loss_mask_4: 0.1711  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.4577  m1_loss_mask_5: 0.1659  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.4555  m1_loss_mask_6: 0.1649  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.4274  m1_loss_mask_7: 0.165  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.449  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.178  m2_loss_ce: 0.4429  m2_loss_mask: 0.1664  m2_loss_dice: 1.201  m2_loss_ce_0: 0.6346  m2_loss_mask_0: 0.2096  m2_loss_dice_0: 1.401  m2_loss_ce_1: 0.6525  m2_loss_mask_1: 0.1857  m2_loss_dice_1: 1.299  m2_loss_ce_2: 0.5542  m2_loss_mask_2: 0.1759  m2_loss_dice_2: 1.22  m2_loss_ce_3: 0.513  m2_loss_mask_3: 0.1719  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.5002  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.4767  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.4587  m2_loss_mask_6: 0.1691  m2_loss_dice_6: 1.169  m2_loss_ce_7: 0.4843  m2_loss_mask_7: 0.1699  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.4272  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.211    time: 1.3739  last_time: 1.2925  data_time: 0.0477  last_data_time: 0.0561   lr: 0.0001  max_mem: 35331M
[10/04 20:44:18] d2.utils.events INFO:  eta: 0:11:24  iter: 499  total_loss: 36.67  m1_loss_ce: 0.4216  m1_loss_mask: 0.1656  m1_loss_dice: 1.115  m1_loss_ce_0: 0.5178  m1_loss_mask_0: 0.1939  m1_loss_dice_0: 1.304  m1_loss_ce_1: 0.5935  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.212  m1_loss_ce_2: 0.4948  m1_loss_mask_2: 0.1695  m1_loss_dice_2: 1.191  m1_loss_ce_3: 0.4558  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.128  m1_loss_ce_4: 0.4459  m1_loss_mask_4: 0.1695  m1_loss_dice_4: 1.156  m1_loss_ce_5: 0.4314  m1_loss_mask_5: 0.1668  m1_loss_dice_5: 1.142  m1_loss_ce_6: 0.4042  m1_loss_mask_6: 0.1665  m1_loss_dice_6: 1.121  m1_loss_ce_7: 0.4026  m1_loss_mask_7: 0.1661  m1_loss_dice_7: 1.107  m1_loss_ce_8: 0.4161  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.127  m2_loss_ce: 0.4405  m2_loss_mask: 0.1695  m2_loss_dice: 1.153  m2_loss_ce_0: 0.5699  m2_loss_mask_0: 0.2034  m2_loss_dice_0: 1.375  m2_loss_ce_1: 0.6662  m2_loss_mask_1: 0.1978  m2_loss_dice_1: 1.291  m2_loss_ce_2: 0.5638  m2_loss_mask_2: 0.179  m2_loss_dice_2: 1.236  m2_loss_ce_3: 0.5137  m2_loss_mask_3: 0.1752  m2_loss_dice_3: 1.17  m2_loss_ce_4: 0.4984  m2_loss_mask_4: 0.1736  m2_loss_dice_4: 1.171  m2_loss_ce_5: 0.463  m2_loss_mask_5: 0.1724  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.4737  m2_loss_mask_6: 0.1786  m2_loss_dice_6: 1.146  m2_loss_ce_7: 0.4624  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.148  m2_loss_ce_8: 0.4615  m2_loss_mask_8: 0.1694  m2_loss_dice_8: 1.158    time: 1.3737  last_time: 1.3495  data_time: 0.0481  last_data_time: 0.0506   lr: 0.0001  max_mem: 35331M
[10/04 20:44:46] d2.utils.events INFO:  eta: 0:10:57  iter: 519  total_loss: 40.79  m1_loss_ce: 0.4657  m1_loss_mask: 0.1582  m1_loss_dice: 1.26  m1_loss_ce_0: 0.5501  m1_loss_mask_0: 0.1909  m1_loss_dice_0: 1.545  m1_loss_ce_1: 0.6181  m1_loss_mask_1: 0.1688  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.5741  m1_loss_mask_2: 0.158  m1_loss_dice_2: 1.332  m1_loss_ce_3: 0.4868  m1_loss_mask_3: 0.1597  m1_loss_dice_3: 1.307  m1_loss_ce_4: 0.4805  m1_loss_mask_4: 0.1602  m1_loss_dice_4: 1.295  m1_loss_ce_5: 0.4723  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.301  m1_loss_ce_6: 0.4648  m1_loss_mask_6: 0.1592  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.471  m1_loss_mask_7: 0.1576  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4556  m1_loss_mask_8: 0.156  m1_loss_dice_8: 1.273  m2_loss_ce: 0.4903  m2_loss_mask: 0.1593  m2_loss_dice: 1.307  m2_loss_ce_0: 0.5929  m2_loss_mask_0: 0.1896  m2_loss_dice_0: 1.562  m2_loss_ce_1: 0.6628  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.488  m2_loss_ce_2: 0.5755  m2_loss_mask_2: 0.1657  m2_loss_dice_2: 1.38  m2_loss_ce_3: 0.5355  m2_loss_mask_3: 0.1605  m2_loss_dice_3: 1.364  m2_loss_ce_4: 0.5113  m2_loss_mask_4: 0.1587  m2_loss_dice_4: 1.316  m2_loss_ce_5: 0.5264  m2_loss_mask_5: 0.1568  m2_loss_dice_5: 1.316  m2_loss_ce_6: 0.4784  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.326  m2_loss_ce_7: 0.5101  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.312  m2_loss_ce_8: 0.4776  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.332    time: 1.3749  last_time: 1.4812  data_time: 0.0516  last_data_time: 0.0601   lr: 0.0001  max_mem: 35331M
[10/04 20:45:14] d2.utils.events INFO:  eta: 0:10:30  iter: 539  total_loss: 39.22  m1_loss_ce: 0.4209  m1_loss_mask: 0.1632  m1_loss_dice: 1.187  m1_loss_ce_0: 0.526  m1_loss_mask_0: 0.1884  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.5786  m1_loss_mask_1: 0.1804  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.5214  m1_loss_mask_2: 0.1717  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.4731  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.4364  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.4373  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4466  m1_loss_mask_6: 0.1629  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4388  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4354  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.201  m2_loss_ce: 0.4532  m2_loss_mask: 0.1757  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5832  m2_loss_mask_0: 0.2156  m2_loss_dice_0: 1.39  m2_loss_ce_1: 0.6905  m2_loss_mask_1: 0.1974  m2_loss_dice_1: 1.302  m2_loss_ce_2: 0.5663  m2_loss_mask_2: 0.1879  m2_loss_dice_2: 1.251  m2_loss_ce_3: 0.5285  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.5183  m2_loss_mask_4: 0.1764  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.4888  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.4722  m2_loss_mask_6: 0.1752  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.4827  m2_loss_mask_7: 0.1763  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.4709  m2_loss_mask_8: 0.174  m2_loss_dice_8: 1.239    time: 1.3749  last_time: 1.4002  data_time: 0.0543  last_data_time: 0.0399   lr: 0.0001  max_mem: 35331M
[10/04 20:45:42] d2.utils.events INFO:  eta: 0:10:03  iter: 559  total_loss: 38.65  m1_loss_ce: 0.4204  m1_loss_mask: 0.1838  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5103  m1_loss_mask_0: 0.2039  m1_loss_dice_0: 1.366  m1_loss_ce_1: 0.5833  m1_loss_mask_1: 0.1857  m1_loss_dice_1: 1.293  m1_loss_ce_2: 0.5122  m1_loss_mask_2: 0.1842  m1_loss_dice_2: 1.229  m1_loss_ce_3: 0.4905  m1_loss_mask_3: 0.1873  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.4838  m1_loss_mask_4: 0.1857  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.4402  m1_loss_mask_5: 0.1824  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4231  m1_loss_mask_6: 0.1856  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4584  m1_loss_mask_7: 0.1824  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.4183  m1_loss_mask_8: 0.1856  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4046  m2_loss_mask: 0.172  m2_loss_dice: 1.226  m2_loss_ce_0: 0.571  m2_loss_mask_0: 0.2075  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.63  m2_loss_mask_1: 0.197  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.5526  m2_loss_mask_2: 0.181  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.4995  m2_loss_mask_3: 0.1783  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.4665  m2_loss_mask_4: 0.1753  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.456  m2_loss_mask_5: 0.1735  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.4508  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4428  m2_loss_mask_7: 0.1737  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4385  m2_loss_mask_8: 0.1742  m2_loss_dice_8: 1.246    time: 1.3749  last_time: 1.3078  data_time: 0.0536  last_data_time: 0.0653   lr: 0.0001  max_mem: 35331M
[10/04 20:46:09] d2.utils.events INFO:  eta: 0:09:36  iter: 579  total_loss: 40.68  m1_loss_ce: 0.4723  m1_loss_mask: 0.1609  m1_loss_dice: 1.258  m1_loss_ce_0: 0.5436  m1_loss_mask_0: 0.1809  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6205  m1_loss_mask_1: 0.1723  m1_loss_dice_1: 1.387  m1_loss_ce_2: 0.5832  m1_loss_mask_2: 0.1682  m1_loss_dice_2: 1.348  m1_loss_ce_3: 0.4921  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.4649  m1_loss_mask_4: 0.1601  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.4709  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.277  m1_loss_ce_6: 0.4565  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.245  m1_loss_ce_7: 0.4567  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4717  m1_loss_mask_8: 0.1584  m1_loss_dice_8: 1.249  m2_loss_ce: 0.4835  m2_loss_mask: 0.164  m2_loss_dice: 1.324  m2_loss_ce_0: 0.6648  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.534  m2_loss_ce_1: 0.6577  m2_loss_mask_1: 0.1862  m2_loss_dice_1: 1.446  m2_loss_ce_2: 0.5947  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5369  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.344  m2_loss_ce_4: 0.5176  m2_loss_mask_4: 0.1629  m2_loss_dice_4: 1.313  m2_loss_ce_5: 0.5269  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.317  m2_loss_ce_6: 0.5006  m2_loss_mask_6: 0.1632  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.5109  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.302  m2_loss_ce_8: 0.4889  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.293    time: 1.3751  last_time: 1.4552  data_time: 0.0543  last_data_time: 0.0621   lr: 0.0001  max_mem: 35331M
[10/04 20:46:37] d2.utils.events INFO:  eta: 0:09:08  iter: 599  total_loss: 39.27  m1_loss_ce: 0.439  m1_loss_mask: 0.1685  m1_loss_dice: 1.178  m1_loss_ce_0: 0.5317  m1_loss_mask_0: 0.1953  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.5957  m1_loss_mask_1: 0.179  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5431  m1_loss_mask_2: 0.1761  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.4977  m1_loss_mask_3: 0.1762  m1_loss_dice_3: 1.186  m1_loss_ce_4: 0.4681  m1_loss_mask_4: 0.172  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.462  m1_loss_mask_5: 0.171  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.45  m1_loss_mask_6: 0.1684  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.4391  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.4472  m1_loss_mask_8: 0.1692  m1_loss_dice_8: 1.187  m2_loss_ce: 0.4877  m2_loss_mask: 0.1635  m2_loss_dice: 1.221  m2_loss_ce_0: 0.6207  m2_loss_mask_0: 0.2015  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6702  m2_loss_mask_1: 0.1865  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.5867  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5385  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.2  m2_loss_ce_4: 0.5289  m2_loss_mask_4: 0.1682  m2_loss_dice_4: 1.212  m2_loss_ce_5: 0.5083  m2_loss_mask_5: 0.1646  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.4936  m2_loss_mask_6: 0.1652  m2_loss_dice_6: 1.201  m2_loss_ce_7: 0.4892  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4704  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.186    time: 1.3753  last_time: 1.3805  data_time: 0.0516  last_data_time: 0.0484   lr: 0.0001  max_mem: 35331M
[10/04 20:47:05] d2.utils.events INFO:  eta: 0:08:41  iter: 619  total_loss: 38.37  m1_loss_ce: 0.4145  m1_loss_mask: 0.1691  m1_loss_dice: 1.195  m1_loss_ce_0: 0.5296  m1_loss_mask_0: 0.2007  m1_loss_dice_0: 1.394  m1_loss_ce_1: 0.5944  m1_loss_mask_1: 0.1856  m1_loss_dice_1: 1.301  m1_loss_ce_2: 0.5402  m1_loss_mask_2: 0.1725  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.5298  m1_loss_mask_3: 0.1757  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.464  m1_loss_mask_4: 0.1718  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.4706  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.244  m1_loss_ce_6: 0.4564  m1_loss_mask_6: 0.1694  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4422  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.4395  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4891  m2_loss_mask: 0.1731  m2_loss_dice: 1.193  m2_loss_ce_0: 0.6042  m2_loss_mask_0: 0.2012  m2_loss_dice_0: 1.353  m2_loss_ce_1: 0.6512  m2_loss_mask_1: 0.1921  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.588  m2_loss_mask_2: 0.1781  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5385  m2_loss_mask_3: 0.1756  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.5035  m2_loss_mask_4: 0.1729  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.5197  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.192  m2_loss_ce_6: 0.4995  m2_loss_mask_6: 0.1732  m2_loss_dice_6: 1.177  m2_loss_ce_7: 0.4761  m2_loss_mask_7: 0.1736  m2_loss_dice_7: 1.185  m2_loss_ce_8: 0.4663  m2_loss_mask_8: 0.1717  m2_loss_dice_8: 1.181    time: 1.3759  last_time: 1.4214  data_time: 0.0505  last_data_time: 0.0508   lr: 0.0001  max_mem: 35331M
[10/04 20:47:33] d2.utils.events INFO:  eta: 0:08:13  iter: 639  total_loss: 40.66  m1_loss_ce: 0.4711  m1_loss_mask: 0.1594  m1_loss_dice: 1.27  m1_loss_ce_0: 0.5687  m1_loss_mask_0: 0.1844  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.617  m1_loss_mask_1: 0.1673  m1_loss_dice_1: 1.418  m1_loss_ce_2: 0.5761  m1_loss_mask_2: 0.1606  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5253  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.29  m1_loss_ce_4: 0.4775  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.277  m1_loss_ce_5: 0.4695  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.4784  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.281  m1_loss_ce_7: 0.4583  m1_loss_mask_7: 0.1614  m1_loss_dice_7: 1.264  m1_loss_ce_8: 0.4474  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.244  m2_loss_ce: 0.4707  m2_loss_mask: 0.165  m2_loss_dice: 1.26  m2_loss_ce_0: 0.5926  m2_loss_mask_0: 0.1919  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.629  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.5704  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.5303  m2_loss_mask_3: 0.1661  m2_loss_dice_3: 1.317  m2_loss_ce_4: 0.5079  m2_loss_mask_4: 0.1644  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.4898  m2_loss_mask_5: 0.1615  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.4871  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.4909  m2_loss_mask_7: 0.1655  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.4753  m2_loss_mask_8: 0.1661  m2_loss_dice_8: 1.269    time: 1.3760  last_time: 1.4359  data_time: 0.0487  last_data_time: 0.0426   lr: 0.0001  max_mem: 35331M
[10/04 20:48:01] d2.utils.events INFO:  eta: 0:07:46  iter: 659  total_loss: 39.96  m1_loss_ce: 0.4531  m1_loss_mask: 0.1617  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5416  m1_loss_mask_0: 0.1835  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.6227  m1_loss_mask_1: 0.1725  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.5697  m1_loss_mask_2: 0.1695  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.4946  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.4948  m1_loss_mask_4: 0.1642  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.4672  m1_loss_mask_5: 0.1644  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.4404  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4465  m1_loss_mask_7: 0.1618  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.45  m1_loss_mask_8: 0.1608  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4925  m2_loss_mask: 0.1658  m2_loss_dice: 1.25  m2_loss_ce_0: 0.5635  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.432  m2_loss_ce_1: 0.6691  m2_loss_mask_1: 0.1828  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.6027  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5172  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.501  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.4772  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4569  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.284  m2_loss_ce_7: 0.474  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4655  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.241    time: 1.3766  last_time: 1.4559  data_time: 0.0506  last_data_time: 0.0766   lr: 0.0001  max_mem: 35331M
[10/04 20:48:28] d2.utils.events INFO:  eta: 0:07:18  iter: 679  total_loss: 38.43  m1_loss_ce: 0.4497  m1_loss_mask: 0.1699  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5654  m1_loss_mask_0: 0.2002  m1_loss_dice_0: 1.379  m1_loss_ce_1: 0.6043  m1_loss_mask_1: 0.1877  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5259  m1_loss_mask_2: 0.1791  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.4931  m1_loss_mask_3: 0.1757  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.4948  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.4932  m1_loss_mask_5: 0.1695  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4224  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.4417  m1_loss_mask_7: 0.1737  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4491  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4364  m2_loss_mask: 0.1682  m2_loss_dice: 1.216  m2_loss_ce_0: 0.6025  m2_loss_mask_0: 0.201  m2_loss_dice_0: 1.38  m2_loss_ce_1: 0.6491  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.32  m2_loss_ce_2: 0.5614  m2_loss_mask_2: 0.1765  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.4994  m2_loss_mask_3: 0.1699  m2_loss_dice_3: 1.212  m2_loss_ce_4: 0.4889  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.199  m2_loss_ce_5: 0.4769  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.4458  m2_loss_mask_6: 0.1684  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4617  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.4539  m2_loss_mask_8: 0.1676  m2_loss_dice_8: 1.224    time: 1.3764  last_time: 1.3681  data_time: 0.0480  last_data_time: 0.0363   lr: 0.0001  max_mem: 35331M
[10/04 20:48:56] d2.utils.events INFO:  eta: 0:06:51  iter: 699  total_loss: 42.17  m1_loss_ce: 0.5038  m1_loss_mask: 0.1547  m1_loss_dice: 1.335  m1_loss_ce_0: 0.5825  m1_loss_mask_0: 0.1745  m1_loss_dice_0: 1.489  m1_loss_ce_1: 0.6511  m1_loss_mask_1: 0.1662  m1_loss_dice_1: 1.441  m1_loss_ce_2: 0.6289  m1_loss_mask_2: 0.1577  m1_loss_dice_2: 1.41  m1_loss_ce_3: 0.5794  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.381  m1_loss_ce_4: 0.5326  m1_loss_mask_4: 0.155  m1_loss_dice_4: 1.333  m1_loss_ce_5: 0.5288  m1_loss_mask_5: 0.1549  m1_loss_dice_5: 1.311  m1_loss_ce_6: 0.4697  m1_loss_mask_6: 0.156  m1_loss_dice_6: 1.322  m1_loss_ce_7: 0.5092  m1_loss_mask_7: 0.1549  m1_loss_dice_7: 1.311  m1_loss_ce_8: 0.4953  m1_loss_mask_8: 0.1532  m1_loss_dice_8: 1.321  m2_loss_ce: 0.501  m2_loss_mask: 0.1603  m2_loss_dice: 1.386  m2_loss_ce_0: 0.678  m2_loss_mask_0: 0.1927  m2_loss_dice_0: 1.539  m2_loss_ce_1: 0.7384  m2_loss_mask_1: 0.1774  m2_loss_dice_1: 1.461  m2_loss_ce_2: 0.6255  m2_loss_mask_2: 0.1631  m2_loss_dice_2: 1.415  m2_loss_ce_3: 0.5619  m2_loss_mask_3: 0.1616  m2_loss_dice_3: 1.389  m2_loss_ce_4: 0.5461  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.356  m2_loss_ce_5: 0.5539  m2_loss_mask_5: 0.1616  m2_loss_dice_5: 1.351  m2_loss_ce_6: 0.5201  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.337  m2_loss_ce_7: 0.514  m2_loss_mask_7: 0.1591  m2_loss_dice_7: 1.311  m2_loss_ce_8: 0.5159  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.333    time: 1.3768  last_time: 1.4350  data_time: 0.0577  last_data_time: 0.0712   lr: 0.0001  max_mem: 35331M
[10/04 20:49:24] d2.utils.events INFO:  eta: 0:06:24  iter: 719  total_loss: 40.61  m1_loss_ce: 0.481  m1_loss_mask: 0.17  m1_loss_dice: 1.218  m1_loss_ce_0: 0.5817  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.491  m1_loss_ce_1: 0.5907  m1_loss_mask_1: 0.1814  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.5418  m1_loss_mask_2: 0.1729  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.5457  m1_loss_mask_3: 0.1763  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.5117  m1_loss_mask_4: 0.1698  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.4945  m1_loss_mask_5: 0.1709  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4737  m1_loss_mask_6: 0.1685  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.4698  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4741  m1_loss_mask_8: 0.1695  m1_loss_dice_8: 1.213  m2_loss_ce: 0.4848  m2_loss_mask: 0.169  m2_loss_dice: 1.277  m2_loss_ce_0: 0.6032  m2_loss_mask_0: 0.2049  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.6431  m2_loss_mask_1: 0.1898  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.6142  m2_loss_mask_2: 0.1769  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5291  m2_loss_mask_3: 0.1742  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5214  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.5197  m2_loss_mask_5: 0.1681  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.506  m2_loss_mask_6: 0.172  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.4949  m2_loss_mask_7: 0.1701  m2_loss_dice_7: 1.287  m2_loss_ce_8: 0.4935  m2_loss_mask_8: 0.1701  m2_loss_dice_8: 1.262    time: 1.3767  last_time: 1.3502  data_time: 0.0474  last_data_time: 0.0432   lr: 0.0001  max_mem: 35331M
[10/04 20:49:51] d2.utils.events INFO:  eta: 0:05:56  iter: 739  total_loss: 40.79  m1_loss_ce: 0.5075  m1_loss_mask: 0.1623  m1_loss_dice: 1.243  m1_loss_ce_0: 0.541  m1_loss_mask_0: 0.19  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.6284  m1_loss_mask_1: 0.175  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.5871  m1_loss_mask_2: 0.1671  m1_loss_dice_2: 1.354  m1_loss_ce_3: 0.5346  m1_loss_mask_3: 0.1612  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5094  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.306  m1_loss_ce_5: 0.5074  m1_loss_mask_5: 0.1605  m1_loss_dice_5: 1.277  m1_loss_ce_6: 0.5128  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.285  m1_loss_ce_7: 0.4865  m1_loss_mask_7: 0.1614  m1_loss_dice_7: 1.243  m1_loss_ce_8: 0.4973  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.251  m2_loss_ce: 0.4793  m2_loss_mask: 0.1629  m2_loss_dice: 1.33  m2_loss_ce_0: 0.5898  m2_loss_mask_0: 0.197  m2_loss_dice_0: 1.527  m2_loss_ce_1: 0.6697  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.432  m2_loss_ce_2: 0.5834  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.397  m2_loss_ce_3: 0.5501  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.307  m2_loss_ce_4: 0.5485  m2_loss_mask_4: 0.1644  m2_loss_dice_4: 1.338  m2_loss_ce_5: 0.5178  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.329  m2_loss_ce_6: 0.5017  m2_loss_mask_6: 0.1636  m2_loss_dice_6: 1.292  m2_loss_ce_7: 0.4959  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.312  m2_loss_ce_8: 0.4999  m2_loss_mask_8: 0.1637  m2_loss_dice_8: 1.306    time: 1.3763  last_time: 1.3363  data_time: 0.0481  last_data_time: 0.0485   lr: 0.0001  max_mem: 35331M
[10/04 20:50:19] d2.utils.events INFO:  eta: 0:05:29  iter: 759  total_loss: 40.16  m1_loss_ce: 0.4815  m1_loss_mask: 0.1541  m1_loss_dice: 1.202  m1_loss_ce_0: 0.5457  m1_loss_mask_0: 0.1758  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.6293  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.5586  m1_loss_mask_2: 0.1552  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.5305  m1_loss_mask_3: 0.1558  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.5053  m1_loss_mask_4: 0.1554  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4726  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4565  m1_loss_mask_6: 0.155  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4662  m1_loss_mask_7: 0.1518  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4776  m1_loss_mask_8: 0.1554  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4906  m2_loss_mask: 0.1639  m2_loss_dice: 1.307  m2_loss_ce_0: 0.598  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.561  m2_loss_ce_1: 0.666  m2_loss_mask_1: 0.1802  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.6026  m2_loss_mask_2: 0.1685  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5578  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5103  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.533  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4967  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.5312  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.4887  m2_loss_mask_8: 0.1629  m2_loss_dice_8: 1.258    time: 1.3767  last_time: 1.3618  data_time: 0.0564  last_data_time: 0.0319   lr: 0.0001  max_mem: 35331M
[10/04 20:50:47] d2.utils.events INFO:  eta: 0:05:01  iter: 779  total_loss: 38.85  m1_loss_ce: 0.4514  m1_loss_mask: 0.167  m1_loss_dice: 1.151  m1_loss_ce_0: 0.5585  m1_loss_mask_0: 0.1841  m1_loss_dice_0: 1.339  m1_loss_ce_1: 0.6074  m1_loss_mask_1: 0.1732  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.5595  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.5364  m1_loss_mask_3: 0.1716  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.4916  m1_loss_mask_4: 0.1683  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4893  m1_loss_mask_5: 0.1699  m1_loss_dice_5: 1.159  m1_loss_ce_6: 0.4643  m1_loss_mask_6: 0.1716  m1_loss_dice_6: 1.178  m1_loss_ce_7: 0.452  m1_loss_mask_7: 0.1693  m1_loss_dice_7: 1.161  m1_loss_ce_8: 0.4607  m1_loss_mask_8: 0.1689  m1_loss_dice_8: 1.187  m2_loss_ce: 0.4787  m2_loss_mask: 0.1664  m2_loss_dice: 1.172  m2_loss_ce_0: 0.6318  m2_loss_mask_0: 0.2022  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.7036  m2_loss_mask_1: 0.182  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.5851  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.5423  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.198  m2_loss_ce_4: 0.5076  m2_loss_mask_4: 0.1677  m2_loss_dice_4: 1.212  m2_loss_ce_5: 0.5087  m2_loss_mask_5: 0.1687  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4943  m2_loss_mask_6: 0.1664  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.5102  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.4769  m2_loss_mask_8: 0.1655  m2_loss_dice_8: 1.224    time: 1.3770  last_time: 1.4706  data_time: 0.0566  last_data_time: 0.0761   lr: 0.0001  max_mem: 35331M
[10/04 20:51:15] d2.utils.events INFO:  eta: 0:04:34  iter: 799  total_loss: 39.97  m1_loss_ce: 0.4329  m1_loss_mask: 0.1613  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5744  m1_loss_mask_0: 0.1898  m1_loss_dice_0: 1.453  m1_loss_ce_1: 0.5961  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.5299  m1_loss_mask_2: 0.1646  m1_loss_dice_2: 1.332  m1_loss_ce_3: 0.4869  m1_loss_mask_3: 0.164  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.4642  m1_loss_mask_4: 0.1637  m1_loss_dice_4: 1.275  m1_loss_ce_5: 0.4481  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.4016  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.275  m1_loss_ce_7: 0.4146  m1_loss_mask_7: 0.1596  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4434  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.24  m2_loss_ce: 0.4482  m2_loss_mask: 0.1711  m2_loss_dice: 1.33  m2_loss_ce_0: 0.6097  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.5  m2_loss_ce_1: 0.6322  m2_loss_mask_1: 0.184  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.6069  m2_loss_mask_2: 0.1722  m2_loss_dice_2: 1.368  m2_loss_ce_3: 0.5022  m2_loss_mask_3: 0.1721  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.5223  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.316  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.1709  m2_loss_dice_5: 1.309  m2_loss_ce_6: 0.4599  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.4754  m2_loss_mask_7: 0.1717  m2_loss_dice_7: 1.296  m2_loss_ce_8: 0.4614  m2_loss_mask_8: 0.1707  m2_loss_dice_8: 1.298    time: 1.3776  last_time: 1.4495  data_time: 0.0535  last_data_time: 0.0634   lr: 0.0001  max_mem: 35331M
[10/04 20:51:43] d2.utils.events INFO:  eta: 0:04:07  iter: 819  total_loss: 41.16  m1_loss_ce: 0.4545  m1_loss_mask: 0.1578  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5321  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.461  m1_loss_ce_1: 0.6005  m1_loss_mask_1: 0.173  m1_loss_dice_1: 1.418  m1_loss_ce_2: 0.5377  m1_loss_mask_2: 0.1638  m1_loss_dice_2: 1.336  m1_loss_ce_3: 0.521  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.31  m1_loss_ce_4: 0.4984  m1_loss_mask_4: 0.1605  m1_loss_dice_4: 1.299  m1_loss_ce_5: 0.4822  m1_loss_mask_5: 0.1574  m1_loss_dice_5: 1.305  m1_loss_ce_6: 0.4655  m1_loss_mask_6: 0.1566  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.4852  m1_loss_mask_7: 0.1564  m1_loss_dice_7: 1.218  m1_loss_ce_8: 0.4442  m1_loss_mask_8: 0.1572  m1_loss_dice_8: 1.244  m2_loss_ce: 0.468  m2_loss_mask: 0.1645  m2_loss_dice: 1.342  m2_loss_ce_0: 0.599  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.572  m2_loss_ce_1: 0.6522  m2_loss_mask_1: 0.1811  m2_loss_dice_1: 1.491  m2_loss_ce_2: 0.5874  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.417  m2_loss_ce_3: 0.5169  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.374  m2_loss_ce_4: 0.4963  m2_loss_mask_4: 0.1648  m2_loss_dice_4: 1.385  m2_loss_ce_5: 0.4979  m2_loss_mask_5: 0.1641  m2_loss_dice_5: 1.323  m2_loss_ce_6: 0.4662  m2_loss_mask_6: 0.1642  m2_loss_dice_6: 1.355  m2_loss_ce_7: 0.4808  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.358  m2_loss_ce_8: 0.4449  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.349    time: 1.3781  last_time: 1.3621  data_time: 0.0548  last_data_time: 0.0513   lr: 0.0001  max_mem: 35331M
[10/04 20:52:10] d2.utils.events INFO:  eta: 0:03:39  iter: 839  total_loss: 39.5  m1_loss_ce: 0.4514  m1_loss_mask: 0.1589  m1_loss_dice: 1.226  m1_loss_ce_0: 0.5266  m1_loss_mask_0: 0.1894  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.5838  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5669  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.5011  m1_loss_mask_3: 0.1593  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.5142  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4885  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.4853  m1_loss_mask_6: 0.1607  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.4484  m1_loss_mask_7: 0.1613  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4872  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4893  m2_loss_mask: 0.1652  m2_loss_dice: 1.291  m2_loss_ce_0: 0.6176  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6644  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.44  m2_loss_ce_2: 0.6105  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5715  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.5346  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5365  m2_loss_mask_5: 0.1636  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.527  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.5123  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.5003  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.244    time: 1.3774  last_time: 1.3473  data_time: 0.0480  last_data_time: 0.0442   lr: 0.0001  max_mem: 35331M
[10/04 20:52:38] d2.utils.events INFO:  eta: 0:03:12  iter: 859  total_loss: 39.16  m1_loss_ce: 0.4483  m1_loss_mask: 0.1546  m1_loss_dice: 1.15  m1_loss_ce_0: 0.5412  m1_loss_mask_0: 0.177  m1_loss_dice_0: 1.353  m1_loss_ce_1: 0.6269  m1_loss_mask_1: 0.172  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5436  m1_loss_mask_2: 0.1559  m1_loss_dice_2: 1.241  m1_loss_ce_3: 0.487  m1_loss_mask_3: 0.1543  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4637  m1_loss_mask_4: 0.1566  m1_loss_dice_4: 1.2  m1_loss_ce_5: 0.4893  m1_loss_mask_5: 0.1542  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.4577  m1_loss_mask_6: 0.1542  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.4809  m1_loss_mask_7: 0.1558  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.4555  m1_loss_mask_8: 0.1543  m1_loss_dice_8: 1.174  m2_loss_ce: 0.5029  m2_loss_mask: 0.1618  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6168  m2_loss_mask_0: 0.1917  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6919  m2_loss_mask_1: 0.1834  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.5754  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.292  m2_loss_ce_3: 0.5407  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.5204  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5052  m2_loss_mask_5: 0.1608  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.5211  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.25  m2_loss_ce_7: 0.4911  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5211  m2_loss_mask_8: 0.1611  m2_loss_dice_8: 1.24    time: 1.3772  last_time: 1.3990  data_time: 0.0464  last_data_time: 0.0367   lr: 0.0001  max_mem: 35331M
[10/04 20:53:05] d2.utils.events INFO:  eta: 0:02:44  iter: 879  total_loss: 40.08  m1_loss_ce: 0.4074  m1_loss_mask: 0.1614  m1_loss_dice: 1.251  m1_loss_ce_0: 0.528  m1_loss_mask_0: 0.1831  m1_loss_dice_0: 1.45  m1_loss_ce_1: 0.5734  m1_loss_mask_1: 0.174  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5351  m1_loss_mask_2: 0.1631  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.426  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.3  m1_loss_ce_4: 0.4541  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.4473  m1_loss_mask_5: 0.1605  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.4057  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.4094  m1_loss_mask_7: 0.1627  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4131  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.272  m2_loss_ce: 0.4631  m2_loss_mask: 0.168  m2_loss_dice: 1.292  m2_loss_ce_0: 0.5791  m2_loss_mask_0: 0.1928  m2_loss_dice_0: 1.5  m2_loss_ce_1: 0.6494  m2_loss_mask_1: 0.1846  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.577  m2_loss_mask_2: 0.1747  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.5063  m2_loss_mask_3: 0.1727  m2_loss_dice_3: 1.324  m2_loss_ce_4: 0.4994  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.349  m2_loss_ce_5: 0.5045  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.341  m2_loss_ce_6: 0.4858  m2_loss_mask_6: 0.1695  m2_loss_dice_6: 1.315  m2_loss_ce_7: 0.4842  m2_loss_mask_7: 0.1701  m2_loss_dice_7: 1.316  m2_loss_ce_8: 0.4685  m2_loss_mask_8: 0.1686  m2_loss_dice_8: 1.318    time: 1.3774  last_time: 1.3132  data_time: 0.0572  last_data_time: 0.0385   lr: 0.0001  max_mem: 35331M
[10/04 20:53:33] d2.utils.events INFO:  eta: 0:02:17  iter: 899  total_loss: 38.47  m1_loss_ce: 0.4414  m1_loss_mask: 0.1544  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5667  m1_loss_mask_0: 0.1837  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.6012  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.5351  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.4794  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.301  m1_loss_ce_4: 0.4721  m1_loss_mask_4: 0.1582  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.4571  m1_loss_mask_5: 0.156  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.4396  m1_loss_mask_6: 0.1548  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4598  m1_loss_mask_7: 0.1564  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.4536  m1_loss_mask_8: 0.1534  m1_loss_dice_8: 1.203  m2_loss_ce: 0.4449  m2_loss_mask: 0.1617  m2_loss_dice: 1.318  m2_loss_ce_0: 0.6124  m2_loss_mask_0: 0.1949  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.6364  m2_loss_mask_1: 0.179  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.5557  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.355  m2_loss_ce_3: 0.495  m2_loss_mask_3: 0.1629  m2_loss_dice_3: 1.313  m2_loss_ce_4: 0.495  m2_loss_mask_4: 0.1604  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.4699  m2_loss_mask_5: 0.1609  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.479  m2_loss_mask_6: 0.159  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.4573  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.272  m2_loss_ce_8: 0.4482  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.295    time: 1.3774  last_time: 1.3331  data_time: 0.0558  last_data_time: 0.0399   lr: 0.0001  max_mem: 35331M
[10/04 20:54:01] d2.utils.events INFO:  eta: 0:01:49  iter: 919  total_loss: 38.58  m1_loss_ce: 0.4474  m1_loss_mask: 0.1626  m1_loss_dice: 1.232  m1_loss_ce_0: 0.5186  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.5862  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.281  m1_loss_ce_2: 0.5401  m1_loss_mask_2: 0.1742  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.497  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.4669  m1_loss_mask_4: 0.1725  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.4772  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.4433  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.232  m1_loss_ce_7: 0.4598  m1_loss_mask_7: 0.1665  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4548  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.196  m2_loss_ce: 0.444  m2_loss_mask: 0.1689  m2_loss_dice: 1.247  m2_loss_ce_0: 0.5842  m2_loss_mask_0: 0.2038  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6233  m2_loss_mask_1: 0.1918  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.5414  m2_loss_mask_2: 0.1773  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.5399  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5163  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.316  m2_loss_ce_5: 0.4793  m2_loss_mask_5: 0.1681  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4521  m2_loss_mask_6: 0.1701  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4575  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.4647  m2_loss_mask_8: 0.1678  m2_loss_dice_8: 1.245    time: 1.3776  last_time: 1.4334  data_time: 0.0522  last_data_time: 0.0542   lr: 0.0001  max_mem: 35331M
[10/04 20:54:28] d2.utils.events INFO:  eta: 0:01:22  iter: 939  total_loss: 37.05  m1_loss_ce: 0.4348  m1_loss_mask: 0.1513  m1_loss_dice: 1.119  m1_loss_ce_0: 0.5315  m1_loss_mask_0: 0.1754  m1_loss_dice_0: 1.259  m1_loss_ce_1: 0.5723  m1_loss_mask_1: 0.161  m1_loss_dice_1: 1.238  m1_loss_ce_2: 0.5388  m1_loss_mask_2: 0.1615  m1_loss_dice_2: 1.168  m1_loss_ce_3: 0.4534  m1_loss_mask_3: 0.1549  m1_loss_dice_3: 1.13  m1_loss_ce_4: 0.4287  m1_loss_mask_4: 0.1525  m1_loss_dice_4: 1.144  m1_loss_ce_5: 0.4326  m1_loss_mask_5: 0.152  m1_loss_dice_5: 1.108  m1_loss_ce_6: 0.4118  m1_loss_mask_6: 0.1526  m1_loss_dice_6: 1.128  m1_loss_ce_7: 0.4151  m1_loss_mask_7: 0.1512  m1_loss_dice_7: 1.142  m1_loss_ce_8: 0.4021  m1_loss_mask_8: 0.1523  m1_loss_dice_8: 1.102  m2_loss_ce: 0.4353  m2_loss_mask: 0.1564  m2_loss_dice: 1.16  m2_loss_ce_0: 0.5674  m2_loss_mask_0: 0.182  m2_loss_dice_0: 1.325  m2_loss_ce_1: 0.649  m2_loss_mask_1: 0.1721  m2_loss_dice_1: 1.269  m2_loss_ce_2: 0.5641  m2_loss_mask_2: 0.1579  m2_loss_dice_2: 1.219  m2_loss_ce_3: 0.5143  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.181  m2_loss_ce_4: 0.4794  m2_loss_mask_4: 0.1551  m2_loss_dice_4: 1.18  m2_loss_ce_5: 0.4783  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.159  m2_loss_ce_6: 0.4541  m2_loss_mask_6: 0.1556  m2_loss_dice_6: 1.181  m2_loss_ce_7: 0.449  m2_loss_mask_7: 0.1549  m2_loss_dice_7: 1.153  m2_loss_ce_8: 0.4571  m2_loss_mask_8: 0.1546  m2_loss_dice_8: 1.156    time: 1.3775  last_time: 1.3830  data_time: 0.0486  last_data_time: 0.0487   lr: 0.0001  max_mem: 35331M
[10/04 20:54:56] d2.utils.events INFO:  eta: 0:00:54  iter: 959  total_loss: 39.01  m1_loss_ce: 0.4339  m1_loss_mask: 0.1628  m1_loss_dice: 1.175  m1_loss_ce_0: 0.5238  m1_loss_mask_0: 0.1854  m1_loss_dice_0: 1.338  m1_loss_ce_1: 0.5875  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.545  m1_loss_mask_2: 0.1693  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.4617  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4662  m1_loss_mask_4: 0.167  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.4368  m1_loss_mask_5: 0.1624  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.4105  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.4227  m1_loss_mask_7: 0.164  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4431  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.153  m2_loss_ce: 0.4156  m2_loss_mask: 0.1655  m2_loss_dice: 1.22  m2_loss_ce_0: 0.6271  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.42  m2_loss_ce_1: 0.6381  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.315  m2_loss_ce_2: 0.5761  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5511  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.216  m2_loss_ce_4: 0.5018  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5155  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.4953  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.4337  m2_loss_mask_7: 0.1676  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.4328  m2_loss_mask_8: 0.166  m2_loss_dice_8: 1.227    time: 1.3776  last_time: 1.2853  data_time: 0.0533  last_data_time: 0.0371   lr: 0.0001  max_mem: 35331M
[10/04 20:55:24] d2.utils.events INFO:  eta: 0:00:27  iter: 979  total_loss: 41.13  m1_loss_ce: 0.4399  m1_loss_mask: 0.1676  m1_loss_dice: 1.26  m1_loss_ce_0: 0.5754  m1_loss_mask_0: 0.1963  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.5973  m1_loss_mask_1: 0.1811  m1_loss_dice_1: 1.391  m1_loss_ce_2: 0.5632  m1_loss_mask_2: 0.1742  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.4777  m1_loss_mask_3: 0.1742  m1_loss_dice_3: 1.295  m1_loss_ce_4: 0.4761  m1_loss_mask_4: 0.1762  m1_loss_dice_4: 1.315  m1_loss_ce_5: 0.4396  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.4478  m1_loss_mask_6: 0.1691  m1_loss_dice_6: 1.286  m1_loss_ce_7: 0.4462  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.4595  m1_loss_mask_8: 0.166  m1_loss_dice_8: 1.268  m2_loss_ce: 0.4754  m2_loss_mask: 0.1715  m2_loss_dice: 1.303  m2_loss_ce_0: 0.6261  m2_loss_mask_0: 0.2069  m2_loss_dice_0: 1.513  m2_loss_ce_1: 0.6527  m2_loss_mask_1: 0.1941  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.6261  m2_loss_mask_2: 0.1784  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.5513  m2_loss_mask_3: 0.1745  m2_loss_dice_3: 1.317  m2_loss_ce_4: 0.566  m2_loss_mask_4: 0.1722  m2_loss_dice_4: 1.33  m2_loss_ce_5: 0.5187  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.325  m2_loss_ce_6: 0.5099  m2_loss_mask_6: 0.1719  m2_loss_dice_6: 1.303  m2_loss_ce_7: 0.5283  m2_loss_mask_7: 0.1727  m2_loss_dice_7: 1.302  m2_loss_ce_8: 0.49  m2_loss_mask_8: 0.1706  m2_loss_dice_8: 1.297    time: 1.3776  last_time: 1.3859  data_time: 0.0506  last_data_time: 0.0476   lr: 0.0001  max_mem: 35331M
[10/04 20:55:51] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3/model_final.pth
[10/04 20:55:53] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 38.6  m1_loss_ce: 0.4318  m1_loss_mask: 0.1717  m1_loss_dice: 1.139  m1_loss_ce_0: 0.5686  m1_loss_mask_0: 0.1987  m1_loss_dice_0: 1.33  m1_loss_ce_1: 0.5945  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.264  m1_loss_ce_2: 0.5424  m1_loss_mask_2: 0.1725  m1_loss_dice_2: 1.231  m1_loss_ce_3: 0.4954  m1_loss_mask_3: 0.1749  m1_loss_dice_3: 1.176  m1_loss_ce_4: 0.4808  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.184  m1_loss_ce_5: 0.4762  m1_loss_mask_5: 0.1704  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.4577  m1_loss_mask_6: 0.1714  m1_loss_dice_6: 1.149  m1_loss_ce_7: 0.4558  m1_loss_mask_7: 0.1703  m1_loss_dice_7: 1.133  m1_loss_ce_8: 0.4512  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.19  m2_loss_ce: 0.4806  m2_loss_mask: 0.1727  m2_loss_dice: 1.241  m2_loss_ce_0: 0.5935  m2_loss_mask_0: 0.201  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6568  m2_loss_mask_1: 0.1883  m2_loss_dice_1: 1.337  m2_loss_ce_2: 0.5578  m2_loss_mask_2: 0.1771  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.547  m2_loss_mask_3: 0.1759  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5059  m2_loss_mask_4: 0.1727  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.5208  m2_loss_mask_5: 0.1725  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5037  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.502  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.4911  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.199    time: 1.3773  last_time: 1.3296  data_time: 0.0503  last_data_time: 0.0365   lr: 0.0001  max_mem: 35331M
[10/04 20:55:53] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:22:54 (1.3773 s / it)
[10/04 20:55:53] d2.engine.hooks INFO: Total training time: 0:23:02 (0:00:07 on hooks)
[10/04 20:55:53] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/04 20:55:53] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/04 20:55:53] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/04 20:55:53] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/04 20:55:53] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/04 20:57:17] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalk2sfpqbz ...
[10/04 20:58:22] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.675 | 81.083 | 70.201 |      19       |
| Things | 47.829 | 80.900 | 59.115 |       8       |
| Stuff  | 64.835 | 81.217 | 78.265 |      11       |
[10/04 20:58:22] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.413 | 97.818 | 99.586 |     Stuff     |
| class_8  | 73.833 | 84.052 | 87.842 |     Stuff     |
| class_11 | 87.084 | 88.804 | 98.063 |     Stuff     |
| class_12 | 41.390 | 79.925 | 51.786 |     Stuff     |
| class_13 | 37.900 | 74.747 | 50.704 |     Stuff     |
| class_17 | 48.409 | 64.435 | 75.128 |     Stuff     |
| class_19 | 49.153 | 69.076 | 71.157 |     Stuff     |
| class_20 | 65.904 | 77.583 | 84.946 |     Stuff     |
| class_21 | 88.944 | 90.051 | 98.770 |     Stuff     |
| class_22 | 35.933 | 75.245 | 47.755 |     Stuff     |
| class_23 | 87.224 | 91.649 | 95.172 |     Stuff     |
| class_24 | 52.226 | 77.599 | 67.302 |    Things     |
| class_25 | 46.219 | 73.267 | 63.083 |    Things     |
| class_26 | 64.939 | 83.085 | 78.160 |    Things     |
| class_27 | 46.014 | 89.091 | 51.648 |    Things     |
| class_28 | 60.057 | 89.558 | 67.059 |    Things     |
| class_31 | 40.143 | 88.888 | 45.161 |    Things     |
| class_32 | 31.872 | 74.147 | 42.985 |    Things     |
| class_33 | 41.162 | 71.565 | 57.518 |    Things     |
[10/04 20:58:22] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/04 20:58:22] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/04 20:58:22] d2.evaluation.testing INFO: copypaste: 57.6747,81.0834,70.2015,47.8291,80.9000,59.1146,64.8351,81.2167,78.2646,97.4133,97.8183,99.5859,73.8332,84.0520,87.8423,87.0840,88.8040,98.0632,41.3895,79.9246,51.7857,37.8997,74.7466,50.7042,48.4087,64.4351,75.1279,49.1526,69.0761,71.1572,65.9039,77.5831,84.9462,88.9436,90.0508,98.7705,35.9331,75.2445,47.7551,87.2241,91.6485,95.1724,52.2262,77.5993,67.3024,46.2190,73.2668,63.0832,64.9393,83.0847,78.1604,46.0142,89.0913,51.6484,60.0566,89.5581,67.0588,40.1432,88.8884,45.1613,31.8722,74.1470,42.9851,41.1623,71.5648,57.5176
[10/13 20:20:14] detectron2 INFO: Rank of current process: 0. World size: 2
[10/13 20:20:15] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/13 20:20:15] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_7_0_3_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/13 20:20:15] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_7_0_3_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/13 20:20:15] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/13 20:20:15] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3/config.yaml
[10/13 20:20:15] d2.utils.env INFO: Using a generated random seed 19549391
[10/13 20:20:19] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/13 20:20:19] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/13 20:20:19] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/13 20:20:20] d2.data.build INFO: Using training sampler TrainingSampler
[10/13 20:20:21] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/13 20:20:21] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/13 20:20:21] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/13 20:20:21] d2.data.build INFO: Making batched data loader with batch_size=4
[10/13 20:20:21] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/13 20:20:24] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/13 20:20:24] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 20:20:24] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 20:20:40] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 20:20:40] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 20:21:16] d2.utils.events INFO:  eta: 0:23:06  iter: 19  total_loss: 40.56  m1_loss_ce: 0.495  m1_loss_mask: 0.1665  m1_loss_dice: 1.262  m1_loss_ce_0: 0.5794  m1_loss_mask_0: 0.1913  m1_loss_dice_0: 1.478  m1_loss_ce_1: 0.6611  m1_loss_mask_1: 0.1807  m1_loss_dice_1: 1.412  m1_loss_ce_2: 0.5865  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5499  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5423  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.513  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.5093  m1_loss_mask_6: 0.1679  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.5124  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.513  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.27  m2_loss_ce: 0.4622  m2_loss_mask: 0.1647  m2_loss_dice: 1.26  m2_loss_ce_0: 0.5875  m2_loss_mask_0: 0.192  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.672  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.5771  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.4967  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.4875  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.4926  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.4785  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5028  m2_loss_mask_7: 0.164  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.4542  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.269    time: 1.4363  last_time: 1.4976  data_time: 0.2630  last_data_time: 0.0814   lr: 0.0001  max_mem: 33780M
[10/13 20:21:45] d2.utils.events INFO:  eta: 0:22:29  iter: 39  total_loss: 39.04  m1_loss_ce: 0.4288  m1_loss_mask: 0.1661  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5886  m1_loss_mask_0: 0.1959  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6701  m1_loss_mask_1: 0.1863  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.6237  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.5174  m1_loss_mask_3: 0.1727  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.5043  m1_loss_mask_4: 0.1718  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.5113  m1_loss_mask_5: 0.1705  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.4827  m1_loss_mask_6: 0.1688  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4558  m1_loss_mask_7: 0.1657  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.4388  m1_loss_mask_8: 0.1723  m1_loss_dice_8: 1.18  m2_loss_ce: 0.4785  m2_loss_mask: 0.1595  m2_loss_dice: 1.196  m2_loss_ce_0: 0.5824  m2_loss_mask_0: 0.1874  m2_loss_dice_0: 1.403  m2_loss_ce_1: 0.6701  m2_loss_mask_1: 0.1765  m2_loss_dice_1: 1.317  m2_loss_ce_2: 0.6116  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5448  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.5137  m2_loss_mask_4: 0.1619  m2_loss_dice_4: 1.212  m2_loss_ce_5: 0.5081  m2_loss_mask_5: 0.1622  m2_loss_dice_5: 1.195  m2_loss_ce_6: 0.5133  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.194  m2_loss_ce_7: 0.5102  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.4722  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.188    time: 1.4214  last_time: 1.3442  data_time: 0.0452  last_data_time: 0.0514   lr: 0.0001  max_mem: 33877M
[10/13 20:22:13] d2.utils.events INFO:  eta: 0:22:01  iter: 59  total_loss: 40.78  m1_loss_ce: 0.4821  m1_loss_mask: 0.1629  m1_loss_dice: 1.316  m1_loss_ce_0: 0.6326  m1_loss_mask_0: 0.1888  m1_loss_dice_0: 1.504  m1_loss_ce_1: 0.6746  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5833  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.35  m1_loss_ce_3: 0.5572  m1_loss_mask_3: 0.1658  m1_loss_dice_3: 1.351  m1_loss_ce_4: 0.5492  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5155  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.288  m1_loss_ce_6: 0.5113  m1_loss_mask_6: 0.1613  m1_loss_dice_6: 1.268  m1_loss_ce_7: 0.5142  m1_loss_mask_7: 0.1618  m1_loss_dice_7: 1.289  m1_loss_ce_8: 0.5081  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.324  m2_loss_ce: 0.478  m2_loss_mask: 0.1651  m2_loss_dice: 1.293  m2_loss_ce_0: 0.6255  m2_loss_mask_0: 0.1893  m2_loss_dice_0: 1.526  m2_loss_ce_1: 0.6935  m2_loss_mask_1: 0.1881  m2_loss_dice_1: 1.443  m2_loss_ce_2: 0.5937  m2_loss_mask_2: 0.1664  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.547  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5569  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.4968  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.329  m2_loss_ce_6: 0.4759  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.298  m2_loss_ce_7: 0.511  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.4856  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.287    time: 1.4200  last_time: 1.3852  data_time: 0.0486  last_data_time: 0.0322   lr: 0.0001  max_mem: 33877M
[10/13 20:22:42] d2.utils.events INFO:  eta: 0:21:33  iter: 79  total_loss: 39.91  m1_loss_ce: 0.4568  m1_loss_mask: 0.1712  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5969  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6251  m1_loss_mask_1: 0.1739  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.5666  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.493  m1_loss_mask_3: 0.1718  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5149  m1_loss_mask_4: 0.1719  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.4833  m1_loss_mask_5: 0.1704  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.4953  m1_loss_mask_6: 0.17  m1_loss_dice_6: 1.255  m1_loss_ce_7: 0.4793  m1_loss_mask_7: 0.1693  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4906  m1_loss_mask_8: 0.1685  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4635  m2_loss_mask: 0.1662  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6  m2_loss_mask_0: 0.1927  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6458  m2_loss_mask_1: 0.1767  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5691  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.51  m2_loss_mask_3: 0.1633  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5165  m2_loss_mask_4: 0.1643  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.4803  m2_loss_mask_5: 0.1631  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.475  m2_loss_mask_6: 0.165  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.485  m2_loss_mask_7: 0.1663  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4806  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.219    time: 1.4228  last_time: 1.3866  data_time: 0.0512  last_data_time: 0.0655   lr: 0.0001  max_mem: 33915M
[10/13 20:23:11] d2.utils.events INFO:  eta: 0:21:09  iter: 99  total_loss: 40.06  m1_loss_ce: 0.4184  m1_loss_mask: 0.1746  m1_loss_dice: 1.208  m1_loss_ce_0: 0.5889  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.508  m1_loss_ce_1: 0.6263  m1_loss_mask_1: 0.1873  m1_loss_dice_1: 1.387  m1_loss_ce_2: 0.602  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.516  m1_loss_mask_3: 0.1836  m1_loss_dice_3: 1.268  m1_loss_ce_4: 0.5075  m1_loss_mask_4: 0.1808  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.4852  m1_loss_mask_5: 0.1811  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4553  m1_loss_mask_6: 0.1786  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.4644  m1_loss_mask_7: 0.1792  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4567  m1_loss_mask_8: 0.1775  m1_loss_dice_8: 1.221  m2_loss_ce: 0.4684  m2_loss_mask: 0.1699  m2_loss_dice: 1.191  m2_loss_ce_0: 0.6146  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.503  m2_loss_ce_1: 0.6829  m2_loss_mask_1: 0.1923  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.5968  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5605  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.5267  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5242  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.4975  m2_loss_mask_6: 0.1717  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4835  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.4696  m2_loss_mask_8: 0.1719  m2_loss_dice_8: 1.263    time: 1.4256  last_time: 1.3709  data_time: 0.0489  last_data_time: 0.0378   lr: 0.0001  max_mem: 33915M
[10/13 20:23:40] d2.utils.events INFO:  eta: 0:20:47  iter: 119  total_loss: 40.86  m1_loss_ce: 0.4736  m1_loss_mask: 0.1732  m1_loss_dice: 1.285  m1_loss_ce_0: 0.5918  m1_loss_mask_0: 0.1973  m1_loss_dice_0: 1.515  m1_loss_ce_1: 0.6652  m1_loss_mask_1: 0.182  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.6148  m1_loss_mask_2: 0.1767  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.521  m1_loss_mask_3: 0.1764  m1_loss_dice_3: 1.308  m1_loss_ce_4: 0.4911  m1_loss_mask_4: 0.1738  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.4969  m1_loss_mask_5: 0.1746  m1_loss_dice_5: 1.306  m1_loss_ce_6: 0.4949  m1_loss_mask_6: 0.1728  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4985  m1_loss_mask_7: 0.1713  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.4754  m1_loss_mask_8: 0.1718  m1_loss_dice_8: 1.258  m2_loss_ce: 0.47  m2_loss_mask: 0.1668  m2_loss_dice: 1.264  m2_loss_ce_0: 0.6101  m2_loss_mask_0: 0.196  m2_loss_dice_0: 1.508  m2_loss_ce_1: 0.6567  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.423  m2_loss_ce_2: 0.5904  m2_loss_mask_2: 0.1739  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.5528  m2_loss_mask_3: 0.1717  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5288  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.508  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4968  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.4737  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.4855  m2_loss_mask_8: 0.1663  m2_loss_dice_8: 1.275    time: 1.4280  last_time: 1.5255  data_time: 0.0509  last_data_time: 0.0375   lr: 0.0001  max_mem: 33915M
[10/13 20:24:08] d2.utils.events INFO:  eta: 0:20:11  iter: 139  total_loss: 38.85  m1_loss_ce: 0.415  m1_loss_mask: 0.1749  m1_loss_dice: 1.182  m1_loss_ce_0: 0.5177  m1_loss_mask_0: 0.2042  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.5856  m1_loss_mask_1: 0.1818  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.5474  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.4701  m1_loss_mask_3: 0.1781  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.4751  m1_loss_mask_4: 0.1729  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.4705  m1_loss_mask_5: 0.1709  m1_loss_dice_5: 1.183  m1_loss_ce_6: 0.421  m1_loss_mask_6: 0.1723  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.4221  m1_loss_mask_7: 0.1737  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.444  m1_loss_mask_8: 0.1726  m1_loss_dice_8: 1.184  m2_loss_ce: 0.428  m2_loss_mask: 0.1674  m2_loss_dice: 1.265  m2_loss_ce_0: 0.5753  m2_loss_mask_0: 0.2019  m2_loss_dice_0: 1.401  m2_loss_ce_1: 0.612  m2_loss_mask_1: 0.1895  m2_loss_dice_1: 1.382  m2_loss_ce_2: 0.5323  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5011  m2_loss_mask_3: 0.1708  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.4657  m2_loss_mask_4: 0.166  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.4576  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4497  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.4516  m2_loss_mask_7: 0.1672  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4387  m2_loss_mask_8: 0.1662  m2_loss_dice_8: 1.239    time: 1.4218  last_time: 1.3571  data_time: 0.0438  last_data_time: 0.0397   lr: 0.0001  max_mem: 33915M
[10/13 20:24:38] d2.utils.events INFO:  eta: 0:19:50  iter: 159  total_loss: 40.86  m1_loss_ce: 0.4844  m1_loss_mask: 0.1687  m1_loss_dice: 1.246  m1_loss_ce_0: 0.5965  m1_loss_mask_0: 0.1973  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6638  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.426  m1_loss_ce_2: 0.6173  m1_loss_mask_2: 0.1715  m1_loss_dice_2: 1.355  m1_loss_ce_3: 0.5756  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5313  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.5541  m1_loss_mask_5: 0.1699  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.5284  m1_loss_mask_6: 0.1684  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5073  m1_loss_mask_7: 0.1699  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.5042  m1_loss_mask_8: 0.1678  m1_loss_dice_8: 1.245  m2_loss_ce: 0.4867  m2_loss_mask: 0.1657  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6262  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.6719  m2_loss_mask_1: 0.1813  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.5925  m2_loss_mask_2: 0.1706  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5561  m2_loss_mask_3: 0.1698  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5373  m2_loss_mask_4: 0.1689  m2_loss_dice_4: 1.308  m2_loss_ce_5: 0.5575  m2_loss_mask_5: 0.1677  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.4974  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5174  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.5085  m2_loss_mask_8: 0.1709  m2_loss_dice_8: 1.277    time: 1.4301  last_time: 1.4854  data_time: 0.0545  last_data_time: 0.0449   lr: 0.0001  max_mem: 33931M
[10/13 20:25:06] d2.utils.events INFO:  eta: 0:19:23  iter: 179  total_loss: 41.65  m1_loss_ce: 0.5026  m1_loss_mask: 0.1719  m1_loss_dice: 1.243  m1_loss_ce_0: 0.6169  m1_loss_mask_0: 0.1975  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6804  m1_loss_mask_1: 0.1804  m1_loss_dice_1: 1.381  m1_loss_ce_2: 0.6144  m1_loss_mask_2: 0.1755  m1_loss_dice_2: 1.378  m1_loss_ce_3: 0.5551  m1_loss_mask_3: 0.1737  m1_loss_dice_3: 1.305  m1_loss_ce_4: 0.5159  m1_loss_mask_4: 0.1759  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.5336  m1_loss_mask_5: 0.1734  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.5269  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5105  m1_loss_mask_7: 0.1728  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.5067  m1_loss_mask_8: 0.1712  m1_loss_dice_8: 1.215  m2_loss_ce: 0.4953  m2_loss_mask: 0.1676  m2_loss_dice: 1.291  m2_loss_ce_0: 0.6461  m2_loss_mask_0: 0.192  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6644  m2_loss_mask_1: 0.187  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.6218  m2_loss_mask_2: 0.1716  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5868  m2_loss_mask_3: 0.1698  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5539  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.5033  m2_loss_mask_5: 0.1662  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.5144  m2_loss_mask_6: 0.169  m2_loss_dice_6: 1.272  m2_loss_ce_7: 0.5232  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.4714  m2_loss_mask_8: 0.1689  m2_loss_dice_8: 1.253    time: 1.4300  last_time: 1.4479  data_time: 0.0520  last_data_time: 0.0546   lr: 0.0001  max_mem: 34827M
[10/13 20:25:34] d2.utils.events INFO:  eta: 0:18:51  iter: 199  total_loss: 39.78  m1_loss_ce: 0.4674  m1_loss_mask: 0.1809  m1_loss_dice: 1.226  m1_loss_ce_0: 0.5646  m1_loss_mask_0: 0.2183  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6005  m1_loss_mask_1: 0.1984  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.6022  m1_loss_mask_2: 0.1892  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5305  m1_loss_mask_3: 0.187  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.4819  m1_loss_mask_4: 0.1863  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4879  m1_loss_mask_5: 0.1857  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4976  m1_loss_mask_6: 0.1833  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4713  m1_loss_mask_7: 0.1806  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.4618  m1_loss_mask_8: 0.181  m1_loss_dice_8: 1.231  m2_loss_ce: 0.4803  m2_loss_mask: 0.1841  m2_loss_dice: 1.197  m2_loss_ce_0: 0.5896  m2_loss_mask_0: 0.2216  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.6606  m2_loss_mask_1: 0.2053  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.5554  m2_loss_mask_2: 0.1925  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5249  m2_loss_mask_3: 0.1859  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5033  m2_loss_mask_4: 0.1855  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.4498  m2_loss_mask_5: 0.1842  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4759  m2_loss_mask_6: 0.1845  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.4999  m2_loss_mask_7: 0.1877  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.4454  m2_loss_mask_8: 0.1841  m2_loss_dice_8: 1.249    time: 1.4259  last_time: 1.3490  data_time: 0.0497  last_data_time: 0.0343   lr: 0.0001  max_mem: 34827M
[10/13 20:26:03] d2.utils.events INFO:  eta: 0:18:26  iter: 219  total_loss: 39.42  m1_loss_ce: 0.4399  m1_loss_mask: 0.169  m1_loss_dice: 1.277  m1_loss_ce_0: 0.5166  m1_loss_mask_0: 0.184  m1_loss_dice_0: 1.52  m1_loss_ce_1: 0.6358  m1_loss_mask_1: 0.174  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.5818  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.4974  m1_loss_mask_3: 0.1719  m1_loss_dice_3: 1.295  m1_loss_ce_4: 0.4899  m1_loss_mask_4: 0.1721  m1_loss_dice_4: 1.286  m1_loss_ce_5: 0.4958  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.289  m1_loss_ce_6: 0.4684  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.248  m1_loss_ce_7: 0.4584  m1_loss_mask_7: 0.1654  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.4583  m1_loss_mask_8: 0.1649  m1_loss_dice_8: 1.252  m2_loss_ce: 0.4223  m2_loss_mask: 0.1543  m2_loss_dice: 1.288  m2_loss_ce_0: 0.5762  m2_loss_mask_0: 0.1865  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.6249  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.5715  m2_loss_mask_2: 0.157  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.4927  m2_loss_mask_3: 0.1594  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.4856  m2_loss_mask_4: 0.1535  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.4507  m2_loss_mask_5: 0.1519  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.4408  m2_loss_mask_6: 0.1539  m2_loss_dice_6: 1.275  m2_loss_ce_7: 0.4508  m2_loss_mask_7: 0.1534  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.4492  m2_loss_mask_8: 0.1541  m2_loss_dice_8: 1.31    time: 1.4259  last_time: 1.3672  data_time: 0.0568  last_data_time: 0.0487   lr: 0.0001  max_mem: 34827M
[10/13 20:26:31] d2.utils.events INFO:  eta: 0:17:54  iter: 239  total_loss: 40.42  m1_loss_ce: 0.4839  m1_loss_mask: 0.1631  m1_loss_dice: 1.256  m1_loss_ce_0: 0.5483  m1_loss_mask_0: 0.1961  m1_loss_dice_0: 1.476  m1_loss_ce_1: 0.6597  m1_loss_mask_1: 0.1866  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.6337  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.354  m1_loss_ce_3: 0.5775  m1_loss_mask_3: 0.1683  m1_loss_dice_3: 1.279  m1_loss_ce_4: 0.5205  m1_loss_mask_4: 0.1702  m1_loss_dice_4: 1.289  m1_loss_ce_5: 0.5234  m1_loss_mask_5: 0.1662  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.4853  m1_loss_mask_6: 0.1665  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.4889  m1_loss_mask_7: 0.1654  m1_loss_dice_7: 1.28  m1_loss_ce_8: 0.4915  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.211  m2_loss_ce: 0.5156  m2_loss_mask: 0.1593  m2_loss_dice: 1.254  m2_loss_ce_0: 0.6251  m2_loss_mask_0: 0.1911  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.6798  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.6276  m2_loss_mask_2: 0.1618  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.5754  m2_loss_mask_3: 0.1615  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5819  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5529  m2_loss_mask_5: 0.1578  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.5419  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5512  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.26  m2_loss_ce_8: 0.515  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.245    time: 1.4243  last_time: 1.3988  data_time: 0.0524  last_data_time: 0.0434   lr: 0.0001  max_mem: 34827M
[10/13 20:27:00] d2.utils.events INFO:  eta: 0:17:30  iter: 259  total_loss: 41.23  m1_loss_ce: 0.4796  m1_loss_mask: 0.1559  m1_loss_dice: 1.274  m1_loss_ce_0: 0.5681  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.528  m1_loss_ce_1: 0.6587  m1_loss_mask_1: 0.1769  m1_loss_dice_1: 1.421  m1_loss_ce_2: 0.5967  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.361  m1_loss_ce_3: 0.5209  m1_loss_mask_3: 0.162  m1_loss_dice_3: 1.306  m1_loss_ce_4: 0.5107  m1_loss_mask_4: 0.1613  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.5039  m1_loss_mask_5: 0.1573  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5059  m1_loss_mask_6: 0.1577  m1_loss_dice_6: 1.27  m1_loss_ce_7: 0.506  m1_loss_mask_7: 0.1573  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.5028  m1_loss_mask_8: 0.1561  m1_loss_dice_8: 1.243  m2_loss_ce: 0.489  m2_loss_mask: 0.1574  m2_loss_dice: 1.292  m2_loss_ce_0: 0.6129  m2_loss_mask_0: 0.186  m2_loss_dice_0: 1.509  m2_loss_ce_1: 0.7126  m2_loss_mask_1: 0.1744  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.6108  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.5253  m2_loss_mask_3: 0.1603  m2_loss_dice_3: 1.318  m2_loss_ce_4: 0.5261  m2_loss_mask_4: 0.1592  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5108  m2_loss_mask_5: 0.1591  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.4901  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.4916  m2_loss_mask_7: 0.1612  m2_loss_dice_7: 1.324  m2_loss_ce_8: 0.4783  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.279    time: 1.4274  last_time: 1.5758  data_time: 0.0488  last_data_time: 0.0389   lr: 0.0001  max_mem: 34827M
[10/13 20:27:29] d2.utils.events INFO:  eta: 0:17:04  iter: 279  total_loss: 38.63  m1_loss_ce: 0.4621  m1_loss_mask: 0.1711  m1_loss_dice: 1.201  m1_loss_ce_0: 0.5824  m1_loss_mask_0: 0.1886  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6432  m1_loss_mask_1: 0.1751  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6047  m1_loss_mask_2: 0.1698  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5091  m1_loss_mask_3: 0.1712  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.4883  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.4998  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.4648  m1_loss_mask_6: 0.1715  m1_loss_dice_6: 1.259  m1_loss_ce_7: 0.473  m1_loss_mask_7: 0.17  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.4619  m1_loss_mask_8: 0.172  m1_loss_dice_8: 1.211  m2_loss_ce: 0.4593  m2_loss_mask: 0.1638  m2_loss_dice: 1.244  m2_loss_ce_0: 0.6052  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6474  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.5875  m2_loss_mask_2: 0.1659  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5274  m2_loss_mask_3: 0.1659  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.5157  m2_loss_mask_4: 0.1657  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5075  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.4669  m2_loss_mask_6: 0.1656  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.4732  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4569  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.23    time: 1.4278  last_time: 1.4460  data_time: 0.0403  last_data_time: 0.0514   lr: 0.0001  max_mem: 34827M
[10/13 20:27:58] d2.utils.events INFO:  eta: 0:16:36  iter: 299  total_loss: 38.45  m1_loss_ce: 0.4833  m1_loss_mask: 0.1788  m1_loss_dice: 1.219  m1_loss_ce_0: 0.5233  m1_loss_mask_0: 0.1962  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6386  m1_loss_mask_1: 0.1898  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.577  m1_loss_mask_2: 0.1857  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5208  m1_loss_mask_3: 0.1801  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.5377  m1_loss_mask_4: 0.1788  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5216  m1_loss_mask_5: 0.1784  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.4892  m1_loss_mask_6: 0.1793  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4775  m1_loss_mask_7: 0.1753  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4741  m1_loss_mask_8: 0.1773  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4646  m2_loss_mask: 0.1684  m2_loss_dice: 1.226  m2_loss_ce_0: 0.5849  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.398  m2_loss_ce_1: 0.6579  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.332  m2_loss_ce_2: 0.5847  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5412  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.223  m2_loss_ce_4: 0.5165  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.5203  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.4878  m2_loss_mask_6: 0.1701  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.484  m2_loss_mask_7: 0.1687  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.5049  m2_loss_mask_8: 0.1691  m2_loss_dice_8: 1.228    time: 1.4285  last_time: 1.4990  data_time: 0.0400  last_data_time: 0.0442   lr: 0.0001  max_mem: 34827M
[10/13 20:28:28] d2.utils.events INFO:  eta: 0:16:13  iter: 319  total_loss: 38.76  m1_loss_ce: 0.4344  m1_loss_mask: 0.1736  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5502  m1_loss_mask_0: 0.2082  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6227  m1_loss_mask_1: 0.1849  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.6198  m1_loss_mask_2: 0.1744  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.4877  m1_loss_mask_3: 0.1774  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.4579  m1_loss_mask_4: 0.1773  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.4606  m1_loss_mask_5: 0.175  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.4306  m1_loss_mask_6: 0.1756  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4545  m1_loss_mask_7: 0.1747  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.4186  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4345  m2_loss_mask: 0.1722  m2_loss_dice: 1.226  m2_loss_ce_0: 0.5795  m2_loss_mask_0: 0.2028  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6541  m2_loss_mask_1: 0.1931  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.5577  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5314  m2_loss_mask_3: 0.1766  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.4751  m2_loss_mask_4: 0.1742  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.4812  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4669  m2_loss_mask_6: 0.1752  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4416  m2_loss_mask_7: 0.1752  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.453  m2_loss_mask_8: 0.173  m2_loss_dice_8: 1.254    time: 1.4322  last_time: 1.4900  data_time: 0.0478  last_data_time: 0.0472   lr: 0.0001  max_mem: 34827M
[10/13 20:28:58] d2.utils.events INFO:  eta: 0:15:46  iter: 339  total_loss: 40.67  m1_loss_ce: 0.48  m1_loss_mask: 0.1598  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5931  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6257  m1_loss_mask_1: 0.1738  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.5922  m1_loss_mask_2: 0.1677  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5081  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.4988  m1_loss_mask_4: 0.1666  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.4925  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.4985  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4916  m1_loss_mask_7: 0.1609  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.5174  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4903  m2_loss_mask: 0.1587  m2_loss_dice: 1.25  m2_loss_ce_0: 0.6398  m2_loss_mask_0: 0.1965  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.6965  m2_loss_mask_1: 0.1808  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.6184  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5696  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5809  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.278  m2_loss_ce_5: 0.5268  m2_loss_mask_5: 0.157  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5124  m2_loss_mask_6: 0.1572  m2_loss_dice_6: 1.207  m2_loss_ce_7: 0.5124  m2_loss_mask_7: 0.1601  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.5011  m2_loss_mask_8: 0.1589  m2_loss_dice_8: 1.274    time: 1.4349  last_time: 1.4122  data_time: 0.0490  last_data_time: 0.0557   lr: 0.0001  max_mem: 34827M
[10/13 20:29:27] d2.utils.events INFO:  eta: 0:15:19  iter: 359  total_loss: 40.65  m1_loss_ce: 0.5114  m1_loss_mask: 0.1699  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5373  m1_loss_mask_0: 0.1988  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.6454  m1_loss_mask_1: 0.1848  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5883  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5241  m1_loss_mask_3: 0.1725  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5185  m1_loss_mask_4: 0.172  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.5136  m1_loss_mask_5: 0.1712  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.505  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.5063  m1_loss_mask_7: 0.1682  m1_loss_dice_7: 1.227  m1_loss_ce_8: 0.4961  m1_loss_mask_8: 0.1663  m1_loss_dice_8: 1.199  m2_loss_ce: 0.4808  m2_loss_mask: 0.1699  m2_loss_dice: 1.234  m2_loss_ce_0: 0.5789  m2_loss_mask_0: 0.1965  m2_loss_dice_0: 1.427  m2_loss_ce_1: 0.6664  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.6059  m2_loss_mask_2: 0.1734  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.5466  m2_loss_mask_3: 0.1702  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.4972  m2_loss_mask_4: 0.1715  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5181  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.503  m2_loss_mask_6: 0.1728  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4798  m2_loss_mask_7: 0.1733  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.4888  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.242    time: 1.4355  last_time: 1.5059  data_time: 0.0401  last_data_time: 0.0409   lr: 0.0001  max_mem: 34827M
[10/13 20:29:57] d2.utils.events INFO:  eta: 0:14:53  iter: 379  total_loss: 40.82  m1_loss_ce: 0.4664  m1_loss_mask: 0.1622  m1_loss_dice: 1.266  m1_loss_ce_0: 0.5368  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.502  m1_loss_ce_1: 0.6217  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.409  m1_loss_ce_2: 0.6166  m1_loss_mask_2: 0.1728  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.496  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.271  m1_loss_ce_4: 0.5235  m1_loss_mask_4: 0.1665  m1_loss_dice_4: 1.29  m1_loss_ce_5: 0.5345  m1_loss_mask_5: 0.1653  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.4887  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.4899  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.4846  m1_loss_mask_8: 0.1639  m1_loss_dice_8: 1.252  m2_loss_ce: 0.4672  m2_loss_mask: 0.1664  m2_loss_dice: 1.301  m2_loss_ce_0: 0.6137  m2_loss_mask_0: 0.1947  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.6686  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.6161  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5607  m2_loss_mask_3: 0.1689  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5237  m2_loss_mask_4: 0.1661  m2_loss_dice_4: 1.297  m2_loss_ce_5: 0.5131  m2_loss_mask_5: 0.165  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5111  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.4823  m2_loss_mask_7: 0.1679  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.4845  m2_loss_mask_8: 0.1647  m2_loss_dice_8: 1.28    time: 1.4388  last_time: 1.5369  data_time: 0.0576  last_data_time: 0.0396   lr: 0.0001  max_mem: 34827M
[10/13 20:30:26] d2.utils.events INFO:  eta: 0:14:25  iter: 399  total_loss: 38.67  m1_loss_ce: 0.4563  m1_loss_mask: 0.1658  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5913  m1_loss_mask_0: 0.192  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.6383  m1_loss_mask_1: 0.1838  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.6026  m1_loss_mask_2: 0.1716  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.5544  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.4954  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.179  m1_loss_ce_5: 0.5172  m1_loss_mask_5: 0.1664  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4932  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4931  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4818  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.185  m2_loss_ce: 0.4613  m2_loss_mask: 0.162  m2_loss_dice: 1.229  m2_loss_ce_0: 0.5838  m2_loss_mask_0: 0.1928  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6468  m2_loss_mask_1: 0.1764  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.5832  m2_loss_mask_2: 0.1666  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5176  m2_loss_mask_3: 0.1661  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.5054  m2_loss_mask_4: 0.1601  m2_loss_dice_4: 1.209  m2_loss_ce_5: 0.496  m2_loss_mask_5: 0.1608  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.451  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4793  m2_loss_mask_7: 0.1639  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4507  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.213    time: 1.4411  last_time: 1.6556  data_time: 0.0480  last_data_time: 0.0430   lr: 0.0001  max_mem: 34827M
[10/13 20:30:56] d2.utils.events INFO:  eta: 0:13:57  iter: 419  total_loss: 37.94  m1_loss_ce: 0.4397  m1_loss_mask: 0.1647  m1_loss_dice: 1.145  m1_loss_ce_0: 0.5279  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.6396  m1_loss_mask_1: 0.1764  m1_loss_dice_1: 1.279  m1_loss_ce_2: 0.5581  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.241  m1_loss_ce_3: 0.5045  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.4687  m1_loss_mask_4: 0.1678  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.4718  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.172  m1_loss_ce_6: 0.4579  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4409  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4248  m1_loss_mask_8: 0.1668  m1_loss_dice_8: 1.141  m2_loss_ce: 0.4191  m2_loss_mask: 0.1696  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5616  m2_loss_mask_0: 0.1983  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6442  m2_loss_mask_1: 0.1886  m2_loss_dice_1: 1.311  m2_loss_ce_2: 0.5525  m2_loss_mask_2: 0.172  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.4808  m2_loss_mask_3: 0.1674  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.488  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.223  m2_loss_ce_5: 0.4676  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.177  m2_loss_ce_6: 0.4372  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.447  m2_loss_mask_7: 0.1701  m2_loss_dice_7: 1.176  m2_loss_ce_8: 0.447  m2_loss_mask_8: 0.168  m2_loss_dice_8: 1.191    time: 1.4437  last_time: 1.4460  data_time: 0.0610  last_data_time: 0.0689   lr: 0.0001  max_mem: 34827M
[10/13 20:31:27] d2.utils.events INFO:  eta: 0:13:30  iter: 439  total_loss: 39.97  m1_loss_ce: 0.4492  m1_loss_mask: 0.1585  m1_loss_dice: 1.231  m1_loss_ce_0: 0.6004  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.489  m1_loss_ce_1: 0.6227  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.5493  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5012  m1_loss_mask_3: 0.1578  m1_loss_dice_3: 1.271  m1_loss_ce_4: 0.5058  m1_loss_mask_4: 0.1592  m1_loss_dice_4: 1.275  m1_loss_ce_5: 0.4765  m1_loss_mask_5: 0.1584  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.4717  m1_loss_mask_6: 0.1588  m1_loss_dice_6: 1.258  m1_loss_ce_7: 0.4494  m1_loss_mask_7: 0.1572  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4659  m1_loss_mask_8: 0.1603  m1_loss_dice_8: 1.239  m2_loss_ce: 0.4732  m2_loss_mask: 0.1608  m2_loss_dice: 1.328  m2_loss_ce_0: 0.6686  m2_loss_mask_0: 0.1911  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.687  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.613  m2_loss_mask_2: 0.1631  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5757  m2_loss_mask_3: 0.1654  m2_loss_dice_3: 1.321  m2_loss_ce_4: 0.5393  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.271  m2_loss_ce_5: 0.5419  m2_loss_mask_5: 0.1599  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.4884  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.293  m2_loss_ce_7: 0.5049  m2_loss_mask_7: 0.1604  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.4717  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.269    time: 1.4461  last_time: 1.3962  data_time: 0.0599  last_data_time: 0.0600   lr: 0.0001  max_mem: 34827M
[10/13 20:31:57] d2.utils.events INFO:  eta: 0:13:02  iter: 459  total_loss: 41.01  m1_loss_ce: 0.4912  m1_loss_mask: 0.1724  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5779  m1_loss_mask_0: 0.1978  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6458  m1_loss_mask_1: 0.1835  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.6059  m1_loss_mask_2: 0.1734  m1_loss_dice_2: 1.291  m1_loss_ce_3: 0.5461  m1_loss_mask_3: 0.172  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5271  m1_loss_mask_4: 0.1752  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.5088  m1_loss_mask_5: 0.1742  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.5301  m1_loss_mask_6: 0.1742  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.4941  m1_loss_mask_7: 0.1724  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.5193  m1_loss_mask_8: 0.171  m1_loss_dice_8: 1.194  m2_loss_ce: 0.485  m2_loss_mask: 0.1714  m2_loss_dice: 1.293  m2_loss_ce_0: 0.6099  m2_loss_mask_0: 0.2057  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6733  m2_loss_mask_1: 0.1844  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.5996  m2_loss_mask_2: 0.1758  m2_loss_dice_2: 1.354  m2_loss_ce_3: 0.573  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.318  m2_loss_ce_4: 0.5483  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.5387  m2_loss_mask_5: 0.1689  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.5362  m2_loss_mask_6: 0.1696  m2_loss_dice_6: 1.286  m2_loss_ce_7: 0.5186  m2_loss_mask_7: 0.1713  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.5289  m2_loss_mask_8: 0.1714  m2_loss_dice_8: 1.27    time: 1.4483  last_time: 1.5649  data_time: 0.0582  last_data_time: 0.0646   lr: 0.0001  max_mem: 34827M
[10/13 20:32:25] d2.utils.events INFO:  eta: 0:12:33  iter: 479  total_loss: 39.56  m1_loss_ce: 0.4585  m1_loss_mask: 0.1719  m1_loss_dice: 1.186  m1_loss_ce_0: 0.5227  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.5817  m1_loss_mask_1: 0.1877  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.558  m1_loss_mask_2: 0.1799  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5205  m1_loss_mask_3: 0.1791  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.4994  m1_loss_mask_4: 0.1753  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4876  m1_loss_mask_5: 0.1725  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.4823  m1_loss_mask_6: 0.1716  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.4565  m1_loss_mask_7: 0.1713  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.4731  m1_loss_mask_8: 0.1728  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4847  m2_loss_mask: 0.1753  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5939  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.682  m2_loss_mask_1: 0.1942  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.6112  m2_loss_mask_2: 0.1811  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5366  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.5236  m2_loss_mask_4: 0.1764  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.5288  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4973  m2_loss_mask_6: 0.1763  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5147  m2_loss_mask_7: 0.1786  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.4814  m2_loss_mask_8: 0.1751  m2_loss_dice_8: 1.244    time: 1.4476  last_time: 1.3655  data_time: 0.0633  last_data_time: 0.0966   lr: 0.0001  max_mem: 34827M
[10/13 20:32:54] d2.utils.events INFO:  eta: 0:12:04  iter: 499  total_loss: 39.83  m1_loss_ce: 0.4978  m1_loss_mask: 0.1753  m1_loss_dice: 1.266  m1_loss_ce_0: 0.5871  m1_loss_mask_0: 0.2  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.631  m1_loss_mask_1: 0.1869  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.6121  m1_loss_mask_2: 0.182  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5661  m1_loss_mask_3: 0.1774  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5118  m1_loss_mask_4: 0.179  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5502  m1_loss_mask_5: 0.1726  m1_loss_dice_5: 1.27  m1_loss_ce_6: 0.5  m1_loss_mask_6: 0.1756  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.5017  m1_loss_mask_7: 0.1766  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.4766  m1_loss_mask_8: 0.1768  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5034  m2_loss_mask: 0.1755  m2_loss_dice: 1.316  m2_loss_ce_0: 0.6249  m2_loss_mask_0: 0.2039  m2_loss_dice_0: 1.504  m2_loss_ce_1: 0.6522  m2_loss_mask_1: 0.1937  m2_loss_dice_1: 1.405  m2_loss_ce_2: 0.6022  m2_loss_mask_2: 0.1871  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.5534  m2_loss_mask_3: 0.1789  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5488  m2_loss_mask_4: 0.1779  m2_loss_dice_4: 1.313  m2_loss_ce_5: 0.522  m2_loss_mask_5: 0.1782  m2_loss_dice_5: 1.301  m2_loss_ce_6: 0.4833  m2_loss_mask_6: 0.1805  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.493  m2_loss_mask_7: 0.1796  m2_loss_dice_7: 1.33  m2_loss_ce_8: 0.4721  m2_loss_mask_8: 0.1787  m2_loss_dice_8: 1.281    time: 1.4466  last_time: 1.3636  data_time: 0.0603  last_data_time: 0.0445   lr: 0.0001  max_mem: 34827M
[10/13 20:33:23] d2.utils.events INFO:  eta: 0:11:34  iter: 519  total_loss: 39.99  m1_loss_ce: 0.4575  m1_loss_mask: 0.1639  m1_loss_dice: 1.236  m1_loss_ce_0: 0.5526  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.5952  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.558  m1_loss_mask_2: 0.1622  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5242  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.4772  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5093  m1_loss_mask_5: 0.1579  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4921  m1_loss_mask_6: 0.1589  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4862  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4954  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.22  m2_loss_ce: 0.4991  m2_loss_mask: 0.16  m2_loss_dice: 1.266  m2_loss_ce_0: 0.6027  m2_loss_mask_0: 0.1857  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.6851  m2_loss_mask_1: 0.1782  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.6305  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.337  m2_loss_ce_3: 0.5737  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5433  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5208  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.4908  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.5073  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4789  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.247    time: 1.4460  last_time: 1.4664  data_time: 0.0594  last_data_time: 0.0473   lr: 0.0001  max_mem: 34827M
[10/13 20:33:52] d2.utils.events INFO:  eta: 0:11:05  iter: 539  total_loss: 39.63  m1_loss_ce: 0.4596  m1_loss_mask: 0.1586  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5812  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.46  m1_loss_ce_1: 0.6187  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.5534  m1_loss_mask_2: 0.1622  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.4981  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.4922  m1_loss_mask_4: 0.1576  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5238  m1_loss_mask_5: 0.1572  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4866  m1_loss_mask_6: 0.1567  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4906  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.4466  m1_loss_mask_8: 0.1576  m1_loss_dice_8: 1.235  m2_loss_ce: 0.481  m2_loss_mask: 0.1522  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6188  m2_loss_mask_0: 0.1824  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6513  m2_loss_mask_1: 0.1672  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5851  m2_loss_mask_2: 0.1586  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5233  m2_loss_mask_3: 0.1575  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.4869  m2_loss_mask_4: 0.1541  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.5014  m2_loss_mask_5: 0.1533  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.4939  m2_loss_mask_6: 0.155  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.4861  m2_loss_mask_7: 0.1543  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4596  m2_loss_mask_8: 0.1539  m2_loss_dice_8: 1.246    time: 1.4461  last_time: 1.4400  data_time: 0.0531  last_data_time: 0.0441   lr: 0.0001  max_mem: 34827M
[10/13 20:34:21] d2.utils.events INFO:  eta: 0:10:36  iter: 559  total_loss: 39.73  m1_loss_ce: 0.448  m1_loss_mask: 0.1633  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5649  m1_loss_mask_0: 0.1991  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6202  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5672  m1_loss_mask_2: 0.1768  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.5051  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.202  m1_loss_ce_4: 0.4854  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.472  m1_loss_mask_5: 0.1621  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4544  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4716  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.191  m1_loss_ce_8: 0.455  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4691  m2_loss_mask: 0.1672  m2_loss_dice: 1.19  m2_loss_ce_0: 0.5947  m2_loss_mask_0: 0.2073  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.6465  m2_loss_mask_1: 0.1934  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.557  m2_loss_mask_2: 0.1754  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.521  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.5114  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.478  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.208  m2_loss_ce_6: 0.4686  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4758  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.4794  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.213    time: 1.4464  last_time: 1.4608  data_time: 0.0739  last_data_time: 0.0966   lr: 0.0001  max_mem: 34827M
[10/13 20:34:50] d2.utils.events INFO:  eta: 0:10:07  iter: 579  total_loss: 39.96  m1_loss_ce: 0.4421  m1_loss_mask: 0.1777  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5573  m1_loss_mask_0: 0.209  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.6184  m1_loss_mask_1: 0.195  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5619  m1_loss_mask_2: 0.185  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5247  m1_loss_mask_3: 0.1802  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.4926  m1_loss_mask_4: 0.1799  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.492  m1_loss_mask_5: 0.1783  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4681  m1_loss_mask_6: 0.1779  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4499  m1_loss_mask_7: 0.1783  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.4712  m1_loss_mask_8: 0.1791  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4751  m2_loss_mask: 0.1805  m2_loss_dice: 1.294  m2_loss_ce_0: 0.6075  m2_loss_mask_0: 0.2127  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6736  m2_loss_mask_1: 0.199  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.5991  m2_loss_mask_2: 0.1852  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5567  m2_loss_mask_3: 0.1828  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5177  m2_loss_mask_4: 0.1796  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5116  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.4817  m2_loss_mask_6: 0.1779  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.4811  m2_loss_mask_7: 0.1803  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.4906  m2_loss_mask_8: 0.179  m2_loss_dice_8: 1.267    time: 1.4460  last_time: 1.5526  data_time: 0.0577  last_data_time: 0.0763   lr: 0.0001  max_mem: 34827M
[10/13 20:35:18] d2.utils.events INFO:  eta: 0:09:38  iter: 599  total_loss: 39.39  m1_loss_ce: 0.4262  m1_loss_mask: 0.1684  m1_loss_dice: 1.236  m1_loss_ce_0: 0.535  m1_loss_mask_0: 0.1923  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.5808  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.5302  m1_loss_mask_2: 0.1727  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.4886  m1_loss_mask_3: 0.1736  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.4507  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.4598  m1_loss_mask_5: 0.1689  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4355  m1_loss_mask_6: 0.1699  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.4507  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.4435  m1_loss_mask_8: 0.1685  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4566  m2_loss_mask: 0.1729  m2_loss_dice: 1.278  m2_loss_ce_0: 0.6091  m2_loss_mask_0: 0.2033  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6299  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.35  m2_loss_ce_2: 0.5809  m2_loss_mask_2: 0.1775  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5363  m2_loss_mask_3: 0.1755  m2_loss_dice_3: 1.314  m2_loss_ce_4: 0.5253  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.4852  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.4582  m2_loss_mask_6: 0.1715  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4796  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4538  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.231    time: 1.4453  last_time: 1.2994  data_time: 0.0583  last_data_time: 0.0399   lr: 0.0001  max_mem: 35434M
[10/13 20:35:47] d2.utils.events INFO:  eta: 0:09:09  iter: 619  total_loss: 38.81  m1_loss_ce: 0.478  m1_loss_mask: 0.1631  m1_loss_dice: 1.2  m1_loss_ce_0: 0.552  m1_loss_mask_0: 0.1959  m1_loss_dice_0: 1.345  m1_loss_ce_1: 0.5807  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.5222  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.4865  m1_loss_mask_3: 0.1653  m1_loss_dice_3: 1.182  m1_loss_ce_4: 0.4711  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.4603  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.4669  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.4582  m1_loss_mask_7: 0.1666  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4606  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.185  m2_loss_ce: 0.4418  m2_loss_mask: 0.1669  m2_loss_dice: 1.225  m2_loss_ce_0: 0.5782  m2_loss_mask_0: 0.199  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6459  m2_loss_mask_1: 0.1722  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.5678  m2_loss_mask_2: 0.1661  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5264  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.287  m2_loss_ce_4: 0.5182  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.4974  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4611  m2_loss_mask_6: 0.1622  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.4659  m2_loss_mask_7: 0.1663  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.4391  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.238    time: 1.4455  last_time: 1.3877  data_time: 0.0658  last_data_time: 0.0439   lr: 0.0001  max_mem: 35434M
[10/13 20:36:16] d2.utils.events INFO:  eta: 0:08:40  iter: 639  total_loss: 39.34  m1_loss_ce: 0.4533  m1_loss_mask: 0.1749  m1_loss_dice: 1.184  m1_loss_ce_0: 0.6185  m1_loss_mask_0: 0.1946  m1_loss_dice_0: 1.347  m1_loss_ce_1: 0.6255  m1_loss_mask_1: 0.1837  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.595  m1_loss_mask_2: 0.1786  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5384  m1_loss_mask_3: 0.1794  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.5127  m1_loss_mask_4: 0.1747  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.497  m1_loss_mask_5: 0.1768  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.489  m1_loss_mask_6: 0.1762  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.4898  m1_loss_mask_7: 0.1766  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4704  m1_loss_mask_8: 0.1729  m1_loss_dice_8: 1.177  m2_loss_ce: 0.4284  m2_loss_mask: 0.1813  m2_loss_dice: 1.265  m2_loss_ce_0: 0.5742  m2_loss_mask_0: 0.2112  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6439  m2_loss_mask_1: 0.1971  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.5577  m2_loss_mask_2: 0.1801  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5164  m2_loss_mask_3: 0.1764  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.4862  m2_loss_mask_4: 0.1786  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.4711  m2_loss_mask_5: 0.1777  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4732  m2_loss_mask_6: 0.1807  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4733  m2_loss_mask_7: 0.1762  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4591  m2_loss_mask_8: 0.1802  m2_loss_dice_8: 1.196    time: 1.4450  last_time: 1.3668  data_time: 0.0622  last_data_time: 0.0480   lr: 0.0001  max_mem: 35434M
[10/13 20:36:44] d2.utils.events INFO:  eta: 0:08:11  iter: 659  total_loss: 38.99  m1_loss_ce: 0.4729  m1_loss_mask: 0.1602  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5531  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.5995  m1_loss_mask_1: 0.1735  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5784  m1_loss_mask_2: 0.1673  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.5062  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4655  m1_loss_mask_4: 0.1634  m1_loss_dice_4: 1.209  m1_loss_ce_5: 0.4528  m1_loss_mask_5: 0.1609  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4882  m1_loss_mask_6: 0.1622  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.4461  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4716  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.191  m2_loss_ce: 0.4474  m2_loss_mask: 0.166  m2_loss_dice: 1.27  m2_loss_ce_0: 0.5892  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6778  m2_loss_mask_1: 0.1807  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5513  m2_loss_mask_2: 0.1731  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5155  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.495  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.4869  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4658  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.4614  m2_loss_mask_7: 0.1669  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.4587  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.246    time: 1.4438  last_time: 1.4617  data_time: 0.0472  last_data_time: 0.0444   lr: 0.0001  max_mem: 35434M
[10/13 20:37:13] d2.utils.events INFO:  eta: 0:07:41  iter: 679  total_loss: 39.59  m1_loss_ce: 0.4468  m1_loss_mask: 0.1689  m1_loss_dice: 1.194  m1_loss_ce_0: 0.5414  m1_loss_mask_0: 0.1967  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6073  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.5677  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.5514  m1_loss_mask_3: 0.1806  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4968  m1_loss_mask_4: 0.1693  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.4768  m1_loss_mask_5: 0.1697  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.4754  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.4704  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4346  m1_loss_mask_8: 0.1686  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4931  m2_loss_mask: 0.1745  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5817  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.6792  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.5818  m2_loss_mask_2: 0.1755  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5333  m2_loss_mask_3: 0.1765  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.5179  m2_loss_mask_4: 0.1783  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5274  m2_loss_mask_5: 0.1733  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4866  m2_loss_mask_6: 0.1735  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.4953  m2_loss_mask_7: 0.1753  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.4679  m2_loss_mask_8: 0.1724  m2_loss_dice_8: 1.188    time: 1.4434  last_time: 1.4384  data_time: 0.0546  last_data_time: 0.0723   lr: 0.0001  max_mem: 35434M
[10/13 20:37:41] d2.utils.events INFO:  eta: 0:07:12  iter: 699  total_loss: 41.03  m1_loss_ce: 0.4651  m1_loss_mask: 0.1663  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5473  m1_loss_mask_0: 0.1886  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.6014  m1_loss_mask_1: 0.1827  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6047  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5316  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5109  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4744  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.4779  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4874  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.4481  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.248  m2_loss_ce: 0.482  m2_loss_mask: 0.1696  m2_loss_dice: 1.315  m2_loss_ce_0: 0.5995  m2_loss_mask_0: 0.1938  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.6601  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.441  m2_loss_ce_2: 0.6222  m2_loss_mask_2: 0.1739  m2_loss_dice_2: 1.412  m2_loss_ce_3: 0.5519  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5403  m2_loss_mask_4: 0.1712  m2_loss_dice_4: 1.314  m2_loss_ce_5: 0.5377  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.514  m2_loss_mask_6: 0.1687  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.5075  m2_loss_mask_7: 0.1713  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.4767  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.312    time: 1.4424  last_time: 1.3847  data_time: 0.0540  last_data_time: 0.0476   lr: 0.0001  max_mem: 35434M
[10/13 20:38:10] d2.utils.events INFO:  eta: 0:06:43  iter: 719  total_loss: 38.76  m1_loss_ce: 0.475  m1_loss_mask: 0.1699  m1_loss_dice: 1.163  m1_loss_ce_0: 0.5418  m1_loss_mask_0: 0.1982  m1_loss_dice_0: 1.393  m1_loss_ce_1: 0.625  m1_loss_mask_1: 0.1858  m1_loss_dice_1: 1.252  m1_loss_ce_2: 0.5584  m1_loss_mask_2: 0.1749  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.5393  m1_loss_mask_3: 0.1769  m1_loss_dice_3: 1.175  m1_loss_ce_4: 0.5381  m1_loss_mask_4: 0.1742  m1_loss_dice_4: 1.147  m1_loss_ce_5: 0.49  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.154  m1_loss_ce_6: 0.4605  m1_loss_mask_6: 0.172  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.4766  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.146  m1_loss_ce_8: 0.45  m1_loss_mask_8: 0.1684  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4692  m2_loss_mask: 0.1711  m2_loss_dice: 1.22  m2_loss_ce_0: 0.6099  m2_loss_mask_0: 0.1994  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6522  m2_loss_mask_1: 0.1896  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5682  m2_loss_mask_2: 0.176  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5174  m2_loss_mask_3: 0.1799  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.4979  m2_loss_mask_4: 0.1733  m2_loss_dice_4: 1.217  m2_loss_ce_5: 0.5039  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.5207  m2_loss_mask_6: 0.1741  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4927  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.4702  m2_loss_mask_8: 0.1698  m2_loss_dice_8: 1.202    time: 1.4419  last_time: 1.4790  data_time: 0.0553  last_data_time: 0.0615   lr: 0.0001  max_mem: 35434M
[10/13 20:38:39] d2.utils.events INFO:  eta: 0:06:14  iter: 739  total_loss: 42.21  m1_loss_ce: 0.5004  m1_loss_mask: 0.1598  m1_loss_dice: 1.288  m1_loss_ce_0: 0.5813  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.511  m1_loss_ce_1: 0.6646  m1_loss_mask_1: 0.1664  m1_loss_dice_1: 1.426  m1_loss_ce_2: 0.5995  m1_loss_mask_2: 0.1603  m1_loss_dice_2: 1.378  m1_loss_ce_3: 0.5461  m1_loss_mask_3: 0.1605  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5639  m1_loss_mask_4: 0.1598  m1_loss_dice_4: 1.326  m1_loss_ce_5: 0.4899  m1_loss_mask_5: 0.1579  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.5131  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.28  m1_loss_ce_7: 0.492  m1_loss_mask_7: 0.1594  m1_loss_dice_7: 1.293  m1_loss_ce_8: 0.4903  m1_loss_mask_8: 0.1602  m1_loss_dice_8: 1.299  m2_loss_ce: 0.5166  m2_loss_mask: 0.1564  m2_loss_dice: 1.361  m2_loss_ce_0: 0.6249  m2_loss_mask_0: 0.1898  m2_loss_dice_0: 1.535  m2_loss_ce_1: 0.6901  m2_loss_mask_1: 0.1733  m2_loss_dice_1: 1.478  m2_loss_ce_2: 0.6197  m2_loss_mask_2: 0.1634  m2_loss_dice_2: 1.393  m2_loss_ce_3: 0.5835  m2_loss_mask_3: 0.1603  m2_loss_dice_3: 1.387  m2_loss_ce_4: 0.5261  m2_loss_mask_4: 0.1609  m2_loss_dice_4: 1.337  m2_loss_ce_5: 0.5394  m2_loss_mask_5: 0.1604  m2_loss_dice_5: 1.366  m2_loss_ce_6: 0.5055  m2_loss_mask_6: 0.1571  m2_loss_dice_6: 1.341  m2_loss_ce_7: 0.5094  m2_loss_mask_7: 0.1589  m2_loss_dice_7: 1.325  m2_loss_ce_8: 0.5186  m2_loss_mask_8: 0.1579  m2_loss_dice_8: 1.356    time: 1.4420  last_time: 1.4168  data_time: 0.0602  last_data_time: 0.0388   lr: 0.0001  max_mem: 35434M
[10/13 20:39:07] d2.utils.events INFO:  eta: 0:05:45  iter: 759  total_loss: 39.3  m1_loss_ce: 0.4285  m1_loss_mask: 0.1761  m1_loss_dice: 1.218  m1_loss_ce_0: 0.5688  m1_loss_mask_0: 0.2056  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6375  m1_loss_mask_1: 0.1922  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5431  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5018  m1_loss_mask_3: 0.1808  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.4597  m1_loss_mask_4: 0.1783  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.4831  m1_loss_mask_5: 0.177  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.4459  m1_loss_mask_6: 0.1753  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4585  m1_loss_mask_7: 0.1746  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.442  m1_loss_mask_8: 0.1759  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4682  m2_loss_mask: 0.1824  m2_loss_dice: 1.265  m2_loss_ce_0: 0.5652  m2_loss_mask_0: 0.2119  m2_loss_dice_0: 1.4  m2_loss_ce_1: 0.6671  m2_loss_mask_1: 0.1947  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.5714  m2_loss_mask_2: 0.1878  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5199  m2_loss_mask_3: 0.1849  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.4789  m2_loss_mask_4: 0.1838  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.4903  m2_loss_mask_5: 0.1835  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.4537  m2_loss_mask_6: 0.1845  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.4663  m2_loss_mask_7: 0.1828  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.4613  m2_loss_mask_8: 0.182  m2_loss_dice_8: 1.246    time: 1.4408  last_time: 1.4221  data_time: 0.0526  last_data_time: 0.0417   lr: 0.0001  max_mem: 35434M
[10/13 20:39:36] d2.utils.events INFO:  eta: 0:05:16  iter: 779  total_loss: 39.91  m1_loss_ce: 0.4798  m1_loss_mask: 0.1585  m1_loss_dice: 1.193  m1_loss_ce_0: 0.5652  m1_loss_mask_0: 0.1885  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6369  m1_loss_mask_1: 0.1803  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5727  m1_loss_mask_2: 0.1642  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5209  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4943  m1_loss_mask_4: 0.1601  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.455  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4809  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4692  m1_loss_mask_7: 0.1594  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4665  m1_loss_mask_8: 0.1595  m1_loss_dice_8: 1.217  m2_loss_ce: 0.4849  m2_loss_mask: 0.1616  m2_loss_dice: 1.267  m2_loss_ce_0: 0.6312  m2_loss_mask_0: 0.1973  m2_loss_dice_0: 1.545  m2_loss_ce_1: 0.6751  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.595  m2_loss_mask_2: 0.1691  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.557  m2_loss_mask_3: 0.1636  m2_loss_dice_3: 1.297  m2_loss_ce_4: 0.5432  m2_loss_mask_4: 0.1636  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.5234  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5066  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.5106  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.5031  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.281    time: 1.4405  last_time: 1.3440  data_time: 0.0621  last_data_time: 0.0754   lr: 0.0001  max_mem: 35434M
[10/13 20:40:05] d2.utils.events INFO:  eta: 0:04:48  iter: 799  total_loss: 40.68  m1_loss_ce: 0.4695  m1_loss_mask: 0.1574  m1_loss_dice: 1.2  m1_loss_ce_0: 0.5378  m1_loss_mask_0: 0.1851  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6003  m1_loss_mask_1: 0.172  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.5446  m1_loss_mask_2: 0.1581  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.512  m1_loss_mask_3: 0.1554  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.5081  m1_loss_mask_4: 0.1583  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.4809  m1_loss_mask_5: 0.1574  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4632  m1_loss_mask_6: 0.1579  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.4683  m1_loss_mask_7: 0.1559  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.463  m1_loss_mask_8: 0.1564  m1_loss_dice_8: 1.199  m2_loss_ce: 0.4616  m2_loss_mask: 0.1627  m2_loss_dice: 1.242  m2_loss_ce_0: 0.607  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6486  m2_loss_mask_1: 0.1798  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.5948  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.384  m2_loss_ce_3: 0.521  m2_loss_mask_3: 0.1616  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.5273  m2_loss_mask_4: 0.1635  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5226  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.4748  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4837  m2_loss_mask_7: 0.1598  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4739  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.287    time: 1.4409  last_time: 1.4927  data_time: 0.0496  last_data_time: 0.0400   lr: 0.0001  max_mem: 35434M
[10/13 20:40:34] d2.utils.events INFO:  eta: 0:04:19  iter: 819  total_loss: 38.78  m1_loss_ce: 0.44  m1_loss_mask: 0.159  m1_loss_dice: 1.185  m1_loss_ce_0: 0.5479  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.5913  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5496  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.497  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.27  m1_loss_ce_4: 0.4704  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4606  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.422  m1_loss_mask_6: 0.1602  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4473  m1_loss_mask_7: 0.1605  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.4719  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.18  m2_loss_ce: 0.4451  m2_loss_mask: 0.1685  m2_loss_dice: 1.243  m2_loss_ce_0: 0.607  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.632  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5678  m2_loss_mask_2: 0.1715  m2_loss_dice_2: 1.292  m2_loss_ce_3: 0.5243  m2_loss_mask_3: 0.1708  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5201  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4729  m2_loss_mask_6: 0.1698  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.4899  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.4738  m2_loss_mask_8: 0.1706  m2_loss_dice_8: 1.249    time: 1.4411  last_time: 1.5182  data_time: 0.0506  last_data_time: 0.0453   lr: 0.0001  max_mem: 35434M
[10/13 20:41:03] d2.utils.events INFO:  eta: 0:03:50  iter: 839  total_loss: 38.67  m1_loss_ce: 0.4712  m1_loss_mask: 0.167  m1_loss_dice: 1.175  m1_loss_ce_0: 0.6102  m1_loss_mask_0: 0.1972  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6331  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.293  m1_loss_ce_2: 0.5597  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.5145  m1_loss_mask_3: 0.168  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.4948  m1_loss_mask_4: 0.1704  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.4646  m1_loss_mask_5: 0.1686  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.4586  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.16  m1_loss_ce_7: 0.5002  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4529  m1_loss_mask_8: 0.1683  m1_loss_dice_8: 1.171  m2_loss_ce: 0.4873  m2_loss_mask: 0.1657  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6173  m2_loss_mask_0: 0.1999  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6611  m2_loss_mask_1: 0.1868  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.6003  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5549  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.5071  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.5079  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.4826  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.5015  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.4615  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.191    time: 1.4417  last_time: 1.3175  data_time: 0.0496  last_data_time: 0.0431   lr: 0.0001  max_mem: 35434M
[10/13 20:41:33] d2.utils.events INFO:  eta: 0:03:21  iter: 859  total_loss: 39  m1_loss_ce: 0.4096  m1_loss_mask: 0.155  m1_loss_dice: 1.223  m1_loss_ce_0: 0.5295  m1_loss_mask_0: 0.1816  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.5723  m1_loss_mask_1: 0.166  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5409  m1_loss_mask_2: 0.163  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5088  m1_loss_mask_3: 0.1614  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.454  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4727  m1_loss_mask_5: 0.1583  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.4306  m1_loss_mask_6: 0.1577  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.43  m1_loss_mask_7: 0.1572  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.4423  m1_loss_mask_8: 0.155  m1_loss_dice_8: 1.231  m2_loss_ce: 0.4725  m2_loss_mask: 0.163  m2_loss_dice: 1.247  m2_loss_ce_0: 0.6054  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.6282  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.5658  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5324  m2_loss_mask_3: 0.1655  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.4987  m2_loss_mask_4: 0.1627  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.5111  m2_loss_mask_5: 0.1597  m2_loss_dice_5: 1.288  m2_loss_ce_6: 0.484  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.5033  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.257  m2_loss_ce_8: 0.4726  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.252    time: 1.4422  last_time: 1.4997  data_time: 0.0592  last_data_time: 0.0394   lr: 0.0001  max_mem: 35434M
[10/13 20:42:02] d2.utils.events INFO:  eta: 0:02:53  iter: 879  total_loss: 39.93  m1_loss_ce: 0.4726  m1_loss_mask: 0.172  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5465  m1_loss_mask_0: 0.1984  m1_loss_dice_0: 1.373  m1_loss_ce_1: 0.6127  m1_loss_mask_1: 0.1829  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.5666  m1_loss_mask_2: 0.1691  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.5146  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.5007  m1_loss_mask_4: 0.1773  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.487  m1_loss_mask_5: 0.173  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.4706  m1_loss_mask_6: 0.1731  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.48  m1_loss_mask_7: 0.1742  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.47  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.215  m2_loss_ce: 0.5157  m2_loss_mask: 0.1726  m2_loss_dice: 1.252  m2_loss_ce_0: 0.6436  m2_loss_mask_0: 0.2057  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6874  m2_loss_mask_1: 0.1884  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.6223  m2_loss_mask_2: 0.1763  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.569  m2_loss_mask_3: 0.1758  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5617  m2_loss_mask_4: 0.1714  m2_loss_dice_4: 1.227  m2_loss_ce_5: 0.5507  m2_loss_mask_5: 0.1716  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.52  m2_loss_mask_6: 0.1727  m2_loss_dice_6: 1.225  m2_loss_ce_7: 0.5239  m2_loss_mask_7: 0.1727  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.5157  m2_loss_mask_8: 0.1738  m2_loss_dice_8: 1.269    time: 1.4427  last_time: 1.4568  data_time: 0.0649  last_data_time: 0.0382   lr: 0.0001  max_mem: 35434M
[10/13 20:42:32] d2.utils.events INFO:  eta: 0:02:24  iter: 899  total_loss: 40.25  m1_loss_ce: 0.4455  m1_loss_mask: 0.1552  m1_loss_dice: 1.224  m1_loss_ce_0: 0.5905  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.6123  m1_loss_mask_1: 0.1676  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.5806  m1_loss_mask_2: 0.1597  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.4895  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.5112  m1_loss_mask_4: 0.1613  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4627  m1_loss_mask_5: 0.157  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.4718  m1_loss_mask_6: 0.1578  m1_loss_dice_6: 1.242  m1_loss_ce_7: 0.4573  m1_loss_mask_7: 0.1579  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.4437  m1_loss_mask_8: 0.1581  m1_loss_dice_8: 1.201  m2_loss_ce: 0.4824  m2_loss_mask: 0.1633  m2_loss_dice: 1.282  m2_loss_ce_0: 0.635  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6839  m2_loss_mask_1: 0.1868  m2_loss_dice_1: 1.414  m2_loss_ce_2: 0.6348  m2_loss_mask_2: 0.174  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.539  m2_loss_mask_3: 0.1708  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5255  m2_loss_mask_4: 0.1633  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5232  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.288  m2_loss_ce_6: 0.4661  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.272  m2_loss_ce_7: 0.5115  m2_loss_mask_7: 0.1631  m2_loss_dice_7: 1.273  m2_loss_ce_8: 0.4869  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.288    time: 1.4435  last_time: 1.5390  data_time: 0.0517  last_data_time: 0.0533   lr: 0.0001  max_mem: 35434M
[10/13 20:43:02] d2.utils.events INFO:  eta: 0:01:55  iter: 919  total_loss: 39.53  m1_loss_ce: 0.4353  m1_loss_mask: 0.1566  m1_loss_dice: 1.235  m1_loss_ce_0: 0.5029  m1_loss_mask_0: 0.1985  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.5762  m1_loss_mask_1: 0.173  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.552  m1_loss_mask_2: 0.1689  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.5229  m1_loss_mask_3: 0.1597  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.4651  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4717  m1_loss_mask_5: 0.1588  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4396  m1_loss_mask_6: 0.1584  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.4569  m1_loss_mask_7: 0.1572  m1_loss_dice_7: 1.199  m1_loss_ce_8: 0.4673  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.184  m2_loss_ce: 0.4335  m2_loss_mask: 0.1686  m2_loss_dice: 1.246  m2_loss_ce_0: 0.6044  m2_loss_mask_0: 0.1974  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6436  m2_loss_mask_1: 0.178  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.5732  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5304  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5063  m2_loss_mask_4: 0.1642  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.4899  m2_loss_mask_5: 0.1644  m2_loss_dice_5: 1.296  m2_loss_ce_6: 0.4566  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.4779  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4532  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.26    time: 1.4444  last_time: 1.5874  data_time: 0.0618  last_data_time: 0.0998   lr: 0.0001  max_mem: 35434M
[10/13 20:43:31] d2.utils.events INFO:  eta: 0:01:26  iter: 939  total_loss: 37.47  m1_loss_ce: 0.4396  m1_loss_mask: 0.1607  m1_loss_dice: 1.096  m1_loss_ce_0: 0.5542  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.342  m1_loss_ce_1: 0.6156  m1_loss_mask_1: 0.1718  m1_loss_dice_1: 1.232  m1_loss_ce_2: 0.5591  m1_loss_mask_2: 0.163  m1_loss_dice_2: 1.207  m1_loss_ce_3: 0.4893  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.15  m1_loss_ce_4: 0.4504  m1_loss_mask_4: 0.1623  m1_loss_dice_4: 1.16  m1_loss_ce_5: 0.4623  m1_loss_mask_5: 0.1612  m1_loss_dice_5: 1.161  m1_loss_ce_6: 0.4467  m1_loss_mask_6: 0.1581  m1_loss_dice_6: 1.119  m1_loss_ce_7: 0.4379  m1_loss_mask_7: 0.1605  m1_loss_dice_7: 1.138  m1_loss_ce_8: 0.426  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.145  m2_loss_ce: 0.488  m2_loss_mask: 0.1642  m2_loss_dice: 1.187  m2_loss_ce_0: 0.6064  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6825  m2_loss_mask_1: 0.1818  m2_loss_dice_1: 1.305  m2_loss_ce_2: 0.5957  m2_loss_mask_2: 0.1635  m2_loss_dice_2: 1.232  m2_loss_ce_3: 0.4921  m2_loss_mask_3: 0.1674  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.4981  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.5029  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.189  m2_loss_ce_6: 0.4678  m2_loss_mask_6: 0.1633  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.4898  m2_loss_mask_7: 0.1632  m2_loss_dice_7: 1.166  m2_loss_ce_8: 0.4983  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.212    time: 1.4451  last_time: 1.5719  data_time: 0.0489  last_data_time: 0.0453   lr: 0.0001  max_mem: 35434M
[10/13 20:44:00] d2.utils.events INFO:  eta: 0:00:57  iter: 959  total_loss: 37.15  m1_loss_ce: 0.393  m1_loss_mask: 0.1758  m1_loss_dice: 1.126  m1_loss_ce_0: 0.532  m1_loss_mask_0: 0.2081  m1_loss_dice_0: 1.339  m1_loss_ce_1: 0.5801  m1_loss_mask_1: 0.1885  m1_loss_dice_1: 1.237  m1_loss_ce_2: 0.4922  m1_loss_mask_2: 0.1799  m1_loss_dice_2: 1.203  m1_loss_ce_3: 0.4849  m1_loss_mask_3: 0.1787  m1_loss_dice_3: 1.166  m1_loss_ce_4: 0.4605  m1_loss_mask_4: 0.1787  m1_loss_dice_4: 1.111  m1_loss_ce_5: 0.4576  m1_loss_mask_5: 0.1787  m1_loss_dice_5: 1.156  m1_loss_ce_6: 0.4312  m1_loss_mask_6: 0.1773  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.4289  m1_loss_mask_7: 0.1764  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4388  m1_loss_mask_8: 0.1767  m1_loss_dice_8: 1.138  m2_loss_ce: 0.4525  m2_loss_mask: 0.183  m2_loss_dice: 1.174  m2_loss_ce_0: 0.6078  m2_loss_mask_0: 0.2076  m2_loss_dice_0: 1.371  m2_loss_ce_1: 0.6194  m2_loss_mask_1: 0.1982  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.5666  m2_loss_mask_2: 0.1856  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.492  m2_loss_mask_3: 0.1817  m2_loss_dice_3: 1.198  m2_loss_ce_4: 0.486  m2_loss_mask_4: 0.1828  m2_loss_dice_4: 1.199  m2_loss_ce_5: 0.4729  m2_loss_mask_5: 0.1794  m2_loss_dice_5: 1.172  m2_loss_ce_6: 0.4502  m2_loss_mask_6: 0.182  m2_loss_dice_6: 1.169  m2_loss_ce_7: 0.4708  m2_loss_mask_7: 0.1812  m2_loss_dice_7: 1.163  m2_loss_ce_8: 0.4769  m2_loss_mask_8: 0.1806  m2_loss_dice_8: 1.174    time: 1.4450  last_time: 1.2846  data_time: 0.0560  last_data_time: 0.0376   lr: 0.0001  max_mem: 35434M
[10/13 20:44:30] d2.utils.events INFO:  eta: 0:00:28  iter: 979  total_loss: 38.08  m1_loss_ce: 0.4327  m1_loss_mask: 0.1663  m1_loss_dice: 1.19  m1_loss_ce_0: 0.536  m1_loss_mask_0: 0.1976  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.5773  m1_loss_mask_1: 0.1867  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5138  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.4862  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.4467  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.186  m1_loss_ce_5: 0.4216  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4177  m1_loss_mask_6: 0.1669  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4198  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.4394  m1_loss_mask_8: 0.1686  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4469  m2_loss_mask: 0.1752  m2_loss_dice: 1.224  m2_loss_ce_0: 0.5824  m2_loss_mask_0: 0.2024  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6532  m2_loss_mask_1: 0.1949  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.5502  m2_loss_mask_2: 0.178  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5126  m2_loss_mask_3: 0.1796  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5022  m2_loss_mask_4: 0.1784  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.4662  m2_loss_mask_5: 0.1749  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4554  m2_loss_mask_6: 0.1755  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.4663  m2_loss_mask_7: 0.1769  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.4612  m2_loss_mask_8: 0.1758  m2_loss_dice_8: 1.235    time: 1.4457  last_time: 1.4599  data_time: 0.0568  last_data_time: 0.0736   lr: 0.0001  max_mem: 35434M
[10/13 20:45:00] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_7_0_3/model_final.pth
[10/13 20:45:04] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 38.31  m1_loss_ce: 0.4205  m1_loss_mask: 0.1662  m1_loss_dice: 1.18  m1_loss_ce_0: 0.5327  m1_loss_mask_0: 0.2007  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.5619  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.5184  m1_loss_mask_2: 0.1782  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.4819  m1_loss_mask_3: 0.1754  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.4569  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.4338  m1_loss_mask_5: 0.1701  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4045  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.4174  m1_loss_mask_7: 0.1695  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.4278  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.169  m2_loss_ce: 0.4508  m2_loss_mask: 0.1724  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5923  m2_loss_mask_0: 0.2065  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6357  m2_loss_mask_1: 0.1919  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.5265  m2_loss_mask_2: 0.1787  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.4806  m2_loss_mask_3: 0.1812  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.4874  m2_loss_mask_4: 0.1801  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5063  m2_loss_mask_5: 0.1787  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4504  m2_loss_mask_6: 0.1755  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4546  m2_loss_mask_7: 0.1763  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4316  m2_loss_mask_8: 0.179  m2_loss_dice_8: 1.227    time: 1.4469  last_time: 1.4907  data_time: 0.0552  last_data_time: 0.0599   lr: 0.0001  max_mem: 35434M
[10/13 20:45:04] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:24:04 (1.4469 s / it)
[10/13 20:45:04] d2.engine.hooks INFO: Total training time: 0:24:13 (0:00:09 on hooks)
[10/13 20:45:04] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/13 20:45:04] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/13 20:45:04] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/13 20:45:04] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/13 20:45:04] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/13 20:46:34] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval7ojf0mhl ...
[10/13 20:47:42] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.787 | 81.009 | 70.271 |      19       |
| Things | 48.337 | 80.192 | 60.209 |       8       |
| Stuff  | 64.659 | 81.604 | 77.589 |      11       |
[10/13 20:47:42] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.241 | 97.543 | 99.690 |     Stuff     |
| class_8  | 73.418 | 84.655 | 86.726 |     Stuff     |
| class_11 | 87.410 | 89.705 | 97.441 |     Stuff     |
| class_12 | 42.903 | 79.510 | 53.959 |     Stuff     |
| class_13 | 36.017 | 75.860 | 47.478 |     Stuff     |
| class_17 | 45.696 | 65.004 | 70.298 |     Stuff     |
| class_19 | 47.734 | 69.562 | 68.621 |     Stuff     |
| class_20 | 65.062 | 77.261 | 84.211 |     Stuff     |
| class_21 | 89.259 | 90.187 | 98.971 |     Stuff     |
| class_22 | 38.170 | 76.514 | 49.887 |     Stuff     |
| class_23 | 88.342 | 91.837 | 96.194 |     Stuff     |
| class_24 | 49.562 | 76.275 | 64.978 |    Things     |
| class_25 | 46.010 | 73.177 | 62.876 |    Things     |
| class_26 | 64.634 | 82.907 | 77.959 |    Things     |
| class_27 | 47.112 | 87.429 | 53.886 |    Things     |
| class_28 | 60.218 | 90.855 | 66.279 |    Things     |
| class_31 | 40.234 | 85.497 | 47.059 |    Things     |
| class_32 | 39.231 | 74.258 | 52.830 |    Things     |
| class_33 | 39.698 | 71.136 | 55.806 |    Things     |
[10/13 20:47:42] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/13 20:47:42] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/13 20:47:42] d2.evaluation.testing INFO: copypaste: 57.7869,81.0092,70.2709,48.3374,80.1919,60.2091,64.6592,81.6035,77.5886,97.2405,97.5431,99.6898,73.4177,84.6552,86.7257,87.4095,89.7049,97.4411,42.9027,79.5098,53.9589,36.0166,75.8600,47.4777,45.6964,65.0038,70.2980,47.7340,69.5622,68.6207,65.0622,77.2614,84.2105,89.2591,90.1869,98.9712,38.1705,76.5145,49.8866,88.3415,91.8371,96.1938,49.5620,76.2748,64.9783,46.0103,73.1767,62.8755,64.6340,82.9074,77.9592,47.1119,87.4288,53.8860,60.2181,90.8554,66.2791,40.2340,85.4973,47.0588,39.2309,74.2585,52.8302,39.6981,71.1363,55.8057
