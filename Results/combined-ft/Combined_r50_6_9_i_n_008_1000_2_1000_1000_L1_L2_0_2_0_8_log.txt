[10/15 15:50:44] detectron2 INFO: Rank of current process: 0. World size: 2
[10/15 15:50:45] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/15 15:50:45] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_2_0_8_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/15 15:50:45] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_2_0_8_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_2_0_8
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/15 15:50:45] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_2_0_8
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/15 15:50:45] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_2_0_8/config.yaml
[10/15 15:50:45] d2.utils.env INFO: Using a generated random seed 48838005
[10/15 15:50:49] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/15 15:50:49] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/15 15:50:49] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/15 15:50:50] d2.data.build INFO: Using training sampler TrainingSampler
[10/15 15:50:50] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/15 15:50:50] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/15 15:50:50] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/15 15:50:50] d2.data.build INFO: Making batched data loader with batch_size=4
[10/15 15:50:50] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/15 15:50:53] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/15 15:50:53] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:50:53] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:50:56] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:50:56] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:51:35] d2.utils.events INFO:  eta: 0:24:33  iter: 19  total_loss: 39.78  m1_loss_ce: 0.4802  m1_loss_mask: 0.1762  m1_loss_dice: 1.286  m1_loss_ce_0: 0.5787  m1_loss_mask_0: 0.2011  m1_loss_dice_0: 1.561  m1_loss_ce_1: 0.6485  m1_loss_mask_1: 0.1919  m1_loss_dice_1: 1.431  m1_loss_ce_2: 0.5479  m1_loss_mask_2: 0.1813  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5215  m1_loss_mask_3: 0.1792  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.4951  m1_loss_mask_4: 0.1777  m1_loss_dice_4: 1.282  m1_loss_ce_5: 0.4858  m1_loss_mask_5: 0.1744  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.5019  m1_loss_mask_6: 0.1758  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.4987  m1_loss_mask_7: 0.1747  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.4697  m1_loss_mask_8: 0.1737  m1_loss_dice_8: 1.226  m2_loss_ce: 0.466  m2_loss_mask: 0.1734  m2_loss_dice: 1.251  m2_loss_ce_0: 0.5913  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.6648  m2_loss_mask_1: 0.1874  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.6099  m2_loss_mask_2: 0.1762  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5016  m2_loss_mask_3: 0.1768  m2_loss_dice_3: 1.322  m2_loss_ce_4: 0.5206  m2_loss_mask_4: 0.1732  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.4898  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.4855  m2_loss_mask_6: 0.1729  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.4801  m2_loss_mask_7: 0.1731  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.4407  m2_loss_mask_8: 0.1717  m2_loss_dice_8: 1.248    time: 1.5126  last_time: 1.6603  data_time: 0.3547  last_data_time: 0.1073   lr: 0.0001  max_mem: 34339M
[10/15 15:52:06] d2.utils.events INFO:  eta: 0:24:35  iter: 39  total_loss: 40.69  m1_loss_ce: 0.4584  m1_loss_mask: 0.1641  m1_loss_dice: 1.264  m1_loss_ce_0: 0.5704  m1_loss_mask_0: 0.1936  m1_loss_dice_0: 1.495  m1_loss_ce_1: 0.6795  m1_loss_mask_1: 0.1808  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.5954  m1_loss_mask_2: 0.1694  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5102  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.4828  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.508  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.302  m1_loss_ce_6: 0.4514  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.249  m1_loss_ce_7: 0.4758  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.263  m1_loss_ce_8: 0.4609  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.291  m2_loss_ce: 0.4586  m2_loss_mask: 0.1585  m2_loss_dice: 1.296  m2_loss_ce_0: 0.5706  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6792  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.5947  m2_loss_mask_2: 0.1635  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5188  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.308  m2_loss_ce_4: 0.5082  m2_loss_mask_4: 0.1598  m2_loss_dice_4: 1.323  m2_loss_ce_5: 0.4929  m2_loss_mask_5: 0.1584  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.4754  m2_loss_mask_6: 0.1603  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.475  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.307  m2_loss_ce_8: 0.4789  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.255    time: 1.5282  last_time: 1.6003  data_time: 0.0717  last_data_time: 0.0531   lr: 0.0001  max_mem: 34339M
[10/15 15:52:36] d2.utils.events INFO:  eta: 0:24:02  iter: 59  total_loss: 40.54  m1_loss_ce: 0.4812  m1_loss_mask: 0.1647  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5816  m1_loss_mask_0: 0.1947  m1_loss_dice_0: 1.464  m1_loss_ce_1: 0.6603  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.391  m1_loss_ce_2: 0.6155  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5485  m1_loss_mask_3: 0.171  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5245  m1_loss_mask_4: 0.1693  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.5323  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.4752  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.4875  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.4698  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.234  m2_loss_ce: 0.4595  m2_loss_mask: 0.155  m2_loss_dice: 1.23  m2_loss_ce_0: 0.6217  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6594  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.391  m2_loss_ce_2: 0.5937  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.5487  m2_loss_mask_3: 0.1594  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5343  m2_loss_mask_4: 0.1571  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.5092  m2_loss_mask_5: 0.154  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.5048  m2_loss_mask_6: 0.1581  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.5019  m2_loss_mask_7: 0.1591  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.4913  m2_loss_mask_8: 0.1553  m2_loss_dice_8: 1.207    time: 1.5254  last_time: 1.4636  data_time: 0.0636  last_data_time: 0.0553   lr: 0.0001  max_mem: 34339M
[10/15 15:53:07] d2.utils.events INFO:  eta: 0:23:38  iter: 79  total_loss: 39.62  m1_loss_ce: 0.482  m1_loss_mask: 0.1751  m1_loss_dice: 1.166  m1_loss_ce_0: 0.5732  m1_loss_mask_0: 0.2072  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6537  m1_loss_mask_1: 0.1874  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6006  m1_loss_mask_2: 0.1831  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.5324  m1_loss_mask_3: 0.1801  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.4837  m1_loss_mask_4: 0.1786  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.5001  m1_loss_mask_5: 0.179  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4941  m1_loss_mask_6: 0.1757  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4833  m1_loss_mask_7: 0.1752  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4972  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.18  m2_loss_ce: 0.4452  m2_loss_mask: 0.1755  m2_loss_dice: 1.214  m2_loss_ce_0: 0.5996  m2_loss_mask_0: 0.2099  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6663  m2_loss_mask_1: 0.1899  m2_loss_dice_1: 1.304  m2_loss_ce_2: 0.569  m2_loss_mask_2: 0.1765  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5133  m2_loss_mask_3: 0.1778  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.4945  m2_loss_mask_4: 0.1749  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.504  m2_loss_mask_5: 0.1785  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.4879  m2_loss_mask_6: 0.1781  m2_loss_dice_6: 1.207  m2_loss_ce_7: 0.4773  m2_loss_mask_7: 0.1777  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4395  m2_loss_mask_8: 0.176  m2_loss_dice_8: 1.197    time: 1.5302  last_time: 1.5942  data_time: 0.0566  last_data_time: 0.0926   lr: 0.0001  max_mem: 34339M
[10/15 15:53:38] d2.utils.events INFO:  eta: 0:23:03  iter: 99  total_loss: 38.7  m1_loss_ce: 0.4622  m1_loss_mask: 0.1638  m1_loss_dice: 1.156  m1_loss_ce_0: 0.5862  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.393  m1_loss_ce_1: 0.662  m1_loss_mask_1: 0.1797  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5911  m1_loss_mask_2: 0.1691  m1_loss_dice_2: 1.227  m1_loss_ce_3: 0.5238  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.193  m1_loss_ce_4: 0.5165  m1_loss_mask_4: 0.1665  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.5067  m1_loss_mask_5: 0.1657  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.48  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.4887  m1_loss_mask_7: 0.1614  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.4849  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4707  m2_loss_mask: 0.1601  m2_loss_dice: 1.194  m2_loss_ce_0: 0.5915  m2_loss_mask_0: 0.1958  m2_loss_dice_0: 1.42  m2_loss_ce_1: 0.6755  m2_loss_mask_1: 0.1805  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5767  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.5001  m2_loss_mask_3: 0.164  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.506  m2_loss_mask_4: 0.1622  m2_loss_dice_4: 1.193  m2_loss_ce_5: 0.488  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.4507  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.163  m2_loss_ce_7: 0.4768  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.169  m2_loss_ce_8: 0.4681  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.199    time: 1.5294  last_time: 1.5902  data_time: 0.0799  last_data_time: 0.0488   lr: 0.0001  max_mem: 34785M
[10/15 15:54:09] d2.utils.events INFO:  eta: 0:22:33  iter: 119  total_loss: 38.16  m1_loss_ce: 0.4284  m1_loss_mask: 0.1853  m1_loss_dice: 1.15  m1_loss_ce_0: 0.536  m1_loss_mask_0: 0.1996  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.6182  m1_loss_mask_1: 0.1877  m1_loss_dice_1: 1.273  m1_loss_ce_2: 0.5349  m1_loss_mask_2: 0.1824  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4874  m1_loss_mask_3: 0.1852  m1_loss_dice_3: 1.185  m1_loss_ce_4: 0.4719  m1_loss_mask_4: 0.1839  m1_loss_dice_4: 1.164  m1_loss_ce_5: 0.4889  m1_loss_mask_5: 0.1831  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.443  m1_loss_mask_6: 0.1824  m1_loss_dice_6: 1.138  m1_loss_ce_7: 0.4355  m1_loss_mask_7: 0.1836  m1_loss_dice_7: 1.134  m1_loss_ce_8: 0.4371  m1_loss_mask_8: 0.1864  m1_loss_dice_8: 1.143  m2_loss_ce: 0.4603  m2_loss_mask: 0.1793  m2_loss_dice: 1.179  m2_loss_ce_0: 0.588  m2_loss_mask_0: 0.2072  m2_loss_dice_0: 1.404  m2_loss_ce_1: 0.6429  m2_loss_mask_1: 0.1957  m2_loss_dice_1: 1.273  m2_loss_ce_2: 0.5721  m2_loss_mask_2: 0.1828  m2_loss_dice_2: 1.224  m2_loss_ce_3: 0.5223  m2_loss_mask_3: 0.1836  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.4964  m2_loss_mask_4: 0.1798  m2_loss_dice_4: 1.185  m2_loss_ce_5: 0.4932  m2_loss_mask_5: 0.1789  m2_loss_dice_5: 1.165  m2_loss_ce_6: 0.4768  m2_loss_mask_6: 0.1806  m2_loss_dice_6: 1.158  m2_loss_ce_7: 0.4622  m2_loss_mask_7: 0.1809  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.4293  m2_loss_mask_8: 0.179  m2_loss_dice_8: 1.173    time: 1.5301  last_time: 1.4501  data_time: 0.0694  last_data_time: 0.0714   lr: 0.0001  max_mem: 34785M
[10/15 15:54:39] d2.utils.events INFO:  eta: 0:22:03  iter: 139  total_loss: 41.36  m1_loss_ce: 0.4685  m1_loss_mask: 0.1652  m1_loss_dice: 1.273  m1_loss_ce_0: 0.5479  m1_loss_mask_0: 0.1892  m1_loss_dice_0: 1.488  m1_loss_ce_1: 0.6544  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.43  m1_loss_ce_2: 0.6205  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.344  m1_loss_ce_3: 0.5618  m1_loss_mask_3: 0.1697  m1_loss_dice_3: 1.303  m1_loss_ce_4: 0.5193  m1_loss_mask_4: 0.1695  m1_loss_dice_4: 1.341  m1_loss_ce_5: 0.519  m1_loss_mask_5: 0.169  m1_loss_dice_5: 1.329  m1_loss_ce_6: 0.4998  m1_loss_mask_6: 0.1693  m1_loss_dice_6: 1.297  m1_loss_ce_7: 0.5121  m1_loss_mask_7: 0.1673  m1_loss_dice_7: 1.279  m1_loss_ce_8: 0.508  m1_loss_mask_8: 0.1672  m1_loss_dice_8: 1.316  m2_loss_ce: 0.4779  m2_loss_mask: 0.1669  m2_loss_dice: 1.304  m2_loss_ce_0: 0.6543  m2_loss_mask_0: 0.1875  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.6563  m2_loss_mask_1: 0.1789  m2_loss_dice_1: 1.439  m2_loss_ce_2: 0.5912  m2_loss_mask_2: 0.1717  m2_loss_dice_2: 1.365  m2_loss_ce_3: 0.5645  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5247  m2_loss_mask_4: 0.1676  m2_loss_dice_4: 1.325  m2_loss_ce_5: 0.5103  m2_loss_mask_5: 0.1678  m2_loss_dice_5: 1.313  m2_loss_ce_6: 0.525  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.355  m2_loss_ce_7: 0.4861  m2_loss_mask_7: 0.1687  m2_loss_dice_7: 1.33  m2_loss_ce_8: 0.4935  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.3    time: 1.5300  last_time: 1.4477  data_time: 0.0717  last_data_time: 0.0578   lr: 0.0001  max_mem: 34785M
[10/15 15:55:10] d2.utils.events INFO:  eta: 0:21:30  iter: 159  total_loss: 39.39  m1_loss_ce: 0.5057  m1_loss_mask: 0.1732  m1_loss_dice: 1.195  m1_loss_ce_0: 0.5816  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.6538  m1_loss_mask_1: 0.1851  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.592  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.554  m1_loss_mask_3: 0.1728  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.5087  m1_loss_mask_4: 0.174  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.4946  m1_loss_mask_5: 0.1705  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4982  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.4668  m1_loss_mask_7: 0.17  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4727  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.174  m2_loss_ce: 0.4817  m2_loss_mask: 0.174  m2_loss_dice: 1.188  m2_loss_ce_0: 0.609  m2_loss_mask_0: 0.2013  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6732  m2_loss_mask_1: 0.1934  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.5888  m2_loss_mask_2: 0.179  m2_loss_dice_2: 1.285  m2_loss_ce_3: 0.5186  m2_loss_mask_3: 0.172  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.52  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.4836  m2_loss_mask_5: 0.1685  m2_loss_dice_5: 1.207  m2_loss_ce_6: 0.466  m2_loss_mask_6: 0.1705  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.5016  m2_loss_mask_7: 0.1731  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.506  m2_loss_mask_8: 0.1741  m2_loss_dice_8: 1.209    time: 1.5276  last_time: 1.5458  data_time: 0.0709  last_data_time: 0.0807   lr: 0.0001  max_mem: 34785M
[10/15 15:55:40] d2.utils.events INFO:  eta: 0:20:58  iter: 179  total_loss: 39.78  m1_loss_ce: 0.4479  m1_loss_mask: 0.1768  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5717  m1_loss_mask_0: 0.2098  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.6035  m1_loss_mask_1: 0.1979  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.5504  m1_loss_mask_2: 0.185  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.5259  m1_loss_mask_3: 0.1855  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.483  m1_loss_mask_4: 0.1851  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.4947  m1_loss_mask_5: 0.1798  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.4869  m1_loss_mask_6: 0.1817  m1_loss_dice_6: 1.213  m1_loss_ce_7: 0.4588  m1_loss_mask_7: 0.1781  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.4931  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.225  m2_loss_ce: 0.448  m2_loss_mask: 0.174  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5962  m2_loss_mask_0: 0.2131  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6429  m2_loss_mask_1: 0.1978  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5715  m2_loss_mask_2: 0.1804  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5216  m2_loss_mask_3: 0.1779  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5021  m2_loss_mask_4: 0.1785  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.4853  m2_loss_mask_5: 0.1763  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4569  m2_loss_mask_6: 0.1738  m2_loss_dice_6: 1.25  m2_loss_ce_7: 0.4351  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4557  m2_loss_mask_8: 0.1731  m2_loss_dice_8: 1.261    time: 1.5260  last_time: 1.5583  data_time: 0.0605  last_data_time: 0.0675   lr: 0.0001  max_mem: 34785M
[10/15 15:56:11] d2.utils.events INFO:  eta: 0:20:25  iter: 199  total_loss: 41.73  m1_loss_ce: 0.4839  m1_loss_mask: 0.1801  m1_loss_dice: 1.21  m1_loss_ce_0: 0.5856  m1_loss_mask_0: 0.2055  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.6449  m1_loss_mask_1: 0.192  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.597  m1_loss_mask_2: 0.1843  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.548  m1_loss_mask_3: 0.1782  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.5265  m1_loss_mask_4: 0.1815  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5154  m1_loss_mask_5: 0.1776  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4841  m1_loss_mask_6: 0.1797  m1_loss_dice_6: 1.251  m1_loss_ce_7: 0.5244  m1_loss_mask_7: 0.1794  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.5075  m1_loss_mask_8: 0.1774  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4872  m2_loss_mask: 0.1742  m2_loss_dice: 1.265  m2_loss_ce_0: 0.6191  m2_loss_mask_0: 0.2086  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6992  m2_loss_mask_1: 0.1935  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.6113  m2_loss_mask_2: 0.1777  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5385  m2_loss_mask_3: 0.1761  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5136  m2_loss_mask_4: 0.1751  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5074  m2_loss_mask_5: 0.1725  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5068  m2_loss_mask_6: 0.1781  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.5005  m2_loss_mask_7: 0.1762  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.4691  m2_loss_mask_8: 0.1748  m2_loss_dice_8: 1.265    time: 1.5247  last_time: 1.5970  data_time: 0.0722  last_data_time: 0.0585   lr: 0.0001  max_mem: 34785M
[10/15 15:56:42] d2.utils.events INFO:  eta: 0:20:01  iter: 219  total_loss: 41.32  m1_loss_ce: 0.486  m1_loss_mask: 0.1673  m1_loss_dice: 1.346  m1_loss_ce_0: 0.5898  m1_loss_mask_0: 0.1909  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.6513  m1_loss_mask_1: 0.183  m1_loss_dice_1: 1.452  m1_loss_ce_2: 0.6096  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.378  m1_loss_ce_3: 0.4912  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.333  m1_loss_ce_4: 0.5218  m1_loss_mask_4: 0.1678  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.5467  m1_loss_mask_5: 0.1642  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.5058  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.4936  m1_loss_mask_7: 0.166  m1_loss_dice_7: 1.307  m1_loss_ce_8: 0.5201  m1_loss_mask_8: 0.1671  m1_loss_dice_8: 1.308  m2_loss_ce: 0.4698  m2_loss_mask: 0.1603  m2_loss_dice: 1.346  m2_loss_ce_0: 0.6163  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.536  m2_loss_ce_1: 0.661  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.496  m2_loss_ce_2: 0.5943  m2_loss_mask_2: 0.1658  m2_loss_dice_2: 1.399  m2_loss_ce_3: 0.5331  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.325  m2_loss_ce_4: 0.5389  m2_loss_mask_4: 0.1575  m2_loss_dice_4: 1.361  m2_loss_ce_5: 0.5091  m2_loss_mask_5: 0.1535  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.4763  m2_loss_mask_6: 0.1591  m2_loss_dice_6: 1.3  m2_loss_ce_7: 0.4914  m2_loss_mask_7: 0.1591  m2_loss_dice_7: 1.289  m2_loss_ce_8: 0.4835  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.306    time: 1.5297  last_time: 1.5968  data_time: 0.0830  last_data_time: 0.0727   lr: 0.0001  max_mem: 34785M
[10/15 15:57:14] d2.utils.events INFO:  eta: 0:19:32  iter: 239  total_loss: 39.4  m1_loss_ce: 0.4459  m1_loss_mask: 0.1753  m1_loss_dice: 1.231  m1_loss_ce_0: 0.5309  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.442  m1_loss_ce_1: 0.5857  m1_loss_mask_1: 0.1871  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.5749  m1_loss_mask_2: 0.172  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.483  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.4726  m1_loss_mask_4: 0.174  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.451  m1_loss_mask_5: 0.1744  m1_loss_dice_5: 1.256  m1_loss_ce_6: 0.4823  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4552  m1_loss_mask_7: 0.1709  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4709  m1_loss_mask_8: 0.1716  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4355  m2_loss_mask: 0.1729  m2_loss_dice: 1.268  m2_loss_ce_0: 0.5968  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.6305  m2_loss_mask_1: 0.1879  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.543  m2_loss_mask_2: 0.1774  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.4941  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.4621  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.4831  m2_loss_mask_5: 0.1692  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.4332  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4694  m2_loss_mask_7: 0.1716  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.4431  m2_loss_mask_8: 0.1714  m2_loss_dice_8: 1.248    time: 1.5331  last_time: 1.4057  data_time: 0.0731  last_data_time: 0.0530   lr: 0.0001  max_mem: 34785M
[10/15 15:57:45] d2.utils.events INFO:  eta: 0:19:04  iter: 259  total_loss: 40.5  m1_loss_ce: 0.4844  m1_loss_mask: 0.1647  m1_loss_dice: 1.25  m1_loss_ce_0: 0.6126  m1_loss_mask_0: 0.1956  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.6482  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.6169  m1_loss_mask_2: 0.1733  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.5673  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.5114  m1_loss_mask_4: 0.1678  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5145  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.5135  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.272  m1_loss_ce_7: 0.4751  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.5059  m1_loss_mask_8: 0.1653  m1_loss_dice_8: 1.205  m2_loss_ce: 0.4866  m2_loss_mask: 0.1615  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6627  m2_loss_mask_0: 0.1918  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6845  m2_loss_mask_1: 0.1752  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.5944  m2_loss_mask_2: 0.1623  m2_loss_dice_2: 1.374  m2_loss_ce_3: 0.5595  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.5254  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5284  m2_loss_mask_5: 0.1566  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.5013  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.251  m2_loss_ce_7: 0.4967  m2_loss_mask_7: 0.1598  m2_loss_dice_7: 1.304  m2_loss_ce_8: 0.5092  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.255    time: 1.5361  last_time: 1.6442  data_time: 0.0747  last_data_time: 0.0610   lr: 0.0001  max_mem: 34785M
[10/15 15:58:16] d2.utils.events INFO:  eta: 0:18:33  iter: 279  total_loss: 41.45  m1_loss_ce: 0.4555  m1_loss_mask: 0.1664  m1_loss_dice: 1.283  m1_loss_ce_0: 0.55  m1_loss_mask_0: 0.1873  m1_loss_dice_0: 1.526  m1_loss_ce_1: 0.6232  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.5747  m1_loss_mask_2: 0.1695  m1_loss_dice_2: 1.379  m1_loss_ce_3: 0.5154  m1_loss_mask_3: 0.1679  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.4923  m1_loss_mask_4: 0.1676  m1_loss_dice_4: 1.29  m1_loss_ce_5: 0.4771  m1_loss_mask_5: 0.1647  m1_loss_dice_5: 1.289  m1_loss_ce_6: 0.4892  m1_loss_mask_6: 0.1669  m1_loss_dice_6: 1.255  m1_loss_ce_7: 0.4756  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.4805  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.254  m2_loss_ce: 0.443  m2_loss_mask: 0.1642  m2_loss_dice: 1.304  m2_loss_ce_0: 0.585  m2_loss_mask_0: 0.1946  m2_loss_dice_0: 1.568  m2_loss_ce_1: 0.6645  m2_loss_mask_1: 0.1836  m2_loss_dice_1: 1.411  m2_loss_ce_2: 0.5721  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.365  m2_loss_ce_3: 0.5181  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.4942  m2_loss_mask_4: 0.1632  m2_loss_dice_4: 1.334  m2_loss_ce_5: 0.4921  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.317  m2_loss_ce_6: 0.4767  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.301  m2_loss_ce_7: 0.4918  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.4749  m2_loss_mask_8: 0.1616  m2_loss_dice_8: 1.269    time: 1.5364  last_time: 1.5428  data_time: 0.0646  last_data_time: 0.0584   lr: 0.0001  max_mem: 34785M
[10/15 15:58:47] d2.utils.events INFO:  eta: 0:18:01  iter: 299  total_loss: 39.73  m1_loss_ce: 0.4328  m1_loss_mask: 0.1705  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5865  m1_loss_mask_0: 0.1972  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.6251  m1_loss_mask_1: 0.187  m1_loss_dice_1: 1.314  m1_loss_ce_2: 0.5649  m1_loss_mask_2: 0.1758  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.535  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.4832  m1_loss_mask_4: 0.1736  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.4814  m1_loss_mask_5: 0.1737  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.4808  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.473  m1_loss_mask_7: 0.1692  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4585  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4659  m2_loss_mask: 0.1661  m2_loss_dice: 1.214  m2_loss_ce_0: 0.6216  m2_loss_mask_0: 0.195  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6798  m2_loss_mask_1: 0.1854  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.5973  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5609  m2_loss_mask_3: 0.1675  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5009  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.5184  m2_loss_mask_5: 0.1686  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.4845  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4832  m2_loss_mask_7: 0.1681  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.4858  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.256    time: 1.5365  last_time: 1.6104  data_time: 0.0665  last_data_time: 0.0676   lr: 0.0001  max_mem: 34785M
[10/15 15:59:19] d2.utils.events INFO:  eta: 0:17:32  iter: 319  total_loss: 39.66  m1_loss_ce: 0.4637  m1_loss_mask: 0.1652  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5405  m1_loss_mask_0: 0.1875  m1_loss_dice_0: 1.471  m1_loss_ce_1: 0.5811  m1_loss_mask_1: 0.1824  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.5438  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.4915  m1_loss_mask_3: 0.1683  m1_loss_dice_3: 1.226  m1_loss_ce_4: 0.4892  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.4578  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.4712  m1_loss_mask_6: 0.1657  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.4668  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.4516  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.218  m2_loss_ce: 0.4428  m2_loss_mask: 0.1623  m2_loss_dice: 1.246  m2_loss_ce_0: 0.5771  m2_loss_mask_0: 0.2043  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.645  m2_loss_mask_1: 0.1875  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5583  m2_loss_mask_2: 0.1664  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.5047  m2_loss_mask_3: 0.1695  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.4842  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.4929  m2_loss_mask_5: 0.1599  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.4385  m2_loss_mask_6: 0.1642  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.4825  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4491  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.295    time: 1.5393  last_time: 1.6431  data_time: 0.0828  last_data_time: 0.0545   lr: 0.0001  max_mem: 34785M
[10/15 15:59:50] d2.utils.events INFO:  eta: 0:17:03  iter: 339  total_loss: 40.9  m1_loss_ce: 0.48  m1_loss_mask: 0.1501  m1_loss_dice: 1.249  m1_loss_ce_0: 0.5597  m1_loss_mask_0: 0.1831  m1_loss_dice_0: 1.53  m1_loss_ce_1: 0.6304  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.401  m1_loss_ce_2: 0.6312  m1_loss_mask_2: 0.1575  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.5038  m1_loss_mask_3: 0.1587  m1_loss_dice_3: 1.289  m1_loss_ce_4: 0.5004  m1_loss_mask_4: 0.1541  m1_loss_dice_4: 1.277  m1_loss_ce_5: 0.5072  m1_loss_mask_5: 0.1531  m1_loss_dice_5: 1.283  m1_loss_ce_6: 0.5174  m1_loss_mask_6: 0.1508  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.4889  m1_loss_mask_7: 0.1494  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4642  m1_loss_mask_8: 0.151  m1_loss_dice_8: 1.234  m2_loss_ce: 0.4742  m2_loss_mask: 0.1507  m2_loss_dice: 1.272  m2_loss_ce_0: 0.6167  m2_loss_mask_0: 0.1833  m2_loss_dice_0: 1.507  m2_loss_ce_1: 0.6928  m2_loss_mask_1: 0.1697  m2_loss_dice_1: 1.402  m2_loss_ce_2: 0.6059  m2_loss_mask_2: 0.1599  m2_loss_dice_2: 1.354  m2_loss_ce_3: 0.5265  m2_loss_mask_3: 0.1522  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.526  m2_loss_mask_4: 0.1517  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.491  m2_loss_mask_5: 0.1509  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.5  m2_loss_mask_6: 0.1513  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.4908  m2_loss_mask_7: 0.1506  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4835  m2_loss_mask_8: 0.148  m2_loss_dice_8: 1.307    time: 1.5405  last_time: 1.5643  data_time: 0.0671  last_data_time: 0.0537   lr: 0.0001  max_mem: 34785M
[10/15 16:00:22] d2.utils.events INFO:  eta: 0:16:35  iter: 359  total_loss: 41.51  m1_loss_ce: 0.5024  m1_loss_mask: 0.157  m1_loss_dice: 1.261  m1_loss_ce_0: 0.5856  m1_loss_mask_0: 0.1833  m1_loss_dice_0: 1.498  m1_loss_ce_1: 0.6732  m1_loss_mask_1: 0.1712  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.6209  m1_loss_mask_2: 0.1607  m1_loss_dice_2: 1.327  m1_loss_ce_3: 0.543  m1_loss_mask_3: 0.1584  m1_loss_dice_3: 1.291  m1_loss_ce_4: 0.5368  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.5168  m1_loss_mask_5: 0.157  m1_loss_dice_5: 1.279  m1_loss_ce_6: 0.4883  m1_loss_mask_6: 0.1574  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.4801  m1_loss_mask_7: 0.1546  m1_loss_dice_7: 1.265  m1_loss_ce_8: 0.5227  m1_loss_mask_8: 0.1528  m1_loss_dice_8: 1.239  m2_loss_ce: 0.4618  m2_loss_mask: 0.1568  m2_loss_dice: 1.301  m2_loss_ce_0: 0.6243  m2_loss_mask_0: 0.1806  m2_loss_dice_0: 1.523  m2_loss_ce_1: 0.71  m2_loss_mask_1: 0.1706  m2_loss_dice_1: 1.461  m2_loss_ce_2: 0.5993  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.384  m2_loss_ce_3: 0.5385  m2_loss_mask_3: 0.157  m2_loss_dice_3: 1.329  m2_loss_ce_4: 0.5237  m2_loss_mask_4: 0.1555  m2_loss_dice_4: 1.316  m2_loss_ce_5: 0.5313  m2_loss_mask_5: 0.1557  m2_loss_dice_5: 1.289  m2_loss_ce_6: 0.4663  m2_loss_mask_6: 0.157  m2_loss_dice_6: 1.29  m2_loss_ce_7: 0.4826  m2_loss_mask_7: 0.1567  m2_loss_dice_7: 1.289  m2_loss_ce_8: 0.4786  m2_loss_mask_8: 0.156  m2_loss_dice_8: 1.306    time: 1.5436  last_time: 1.6164  data_time: 0.0830  last_data_time: 0.0828   lr: 0.0001  max_mem: 34880M
[10/15 16:00:53] d2.utils.events INFO:  eta: 0:16:04  iter: 379  total_loss: 37.97  m1_loss_ce: 0.4293  m1_loss_mask: 0.1691  m1_loss_dice: 1.161  m1_loss_ce_0: 0.5386  m1_loss_mask_0: 0.1981  m1_loss_dice_0: 1.351  m1_loss_ce_1: 0.6136  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.5928  m1_loss_mask_2: 0.1785  m1_loss_dice_2: 1.231  m1_loss_ce_3: 0.5036  m1_loss_mask_3: 0.181  m1_loss_dice_3: 1.17  m1_loss_ce_4: 0.4747  m1_loss_mask_4: 0.1746  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.4731  m1_loss_mask_5: 0.1706  m1_loss_dice_5: 1.171  m1_loss_ce_6: 0.4675  m1_loss_mask_6: 0.1679  m1_loss_dice_6: 1.15  m1_loss_ce_7: 0.4263  m1_loss_mask_7: 0.1692  m1_loss_dice_7: 1.15  m1_loss_ce_8: 0.4718  m1_loss_mask_8: 0.1705  m1_loss_dice_8: 1.172  m2_loss_ce: 0.443  m2_loss_mask: 0.175  m2_loss_dice: 1.177  m2_loss_ce_0: 0.5835  m2_loss_mask_0: 0.2095  m2_loss_dice_0: 1.403  m2_loss_ce_1: 0.6196  m2_loss_mask_1: 0.195  m2_loss_dice_1: 1.304  m2_loss_ce_2: 0.5992  m2_loss_mask_2: 0.1823  m2_loss_dice_2: 1.262  m2_loss_ce_3: 0.4951  m2_loss_mask_3: 0.1768  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.5009  m2_loss_mask_4: 0.1744  m2_loss_dice_4: 1.195  m2_loss_ce_5: 0.4732  m2_loss_mask_5: 0.1701  m2_loss_dice_5: 1.206  m2_loss_ce_6: 0.4757  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.177  m2_loss_ce_7: 0.4632  m2_loss_mask_7: 0.1754  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.4524  m2_loss_mask_8: 0.1739  m2_loss_dice_8: 1.186    time: 1.5436  last_time: 1.4715  data_time: 0.0789  last_data_time: 0.0604   lr: 0.0001  max_mem: 34880M
[10/15 16:01:24] d2.utils.events INFO:  eta: 0:15:32  iter: 399  total_loss: 37.57  m1_loss_ce: 0.3988  m1_loss_mask: 0.1677  m1_loss_dice: 1.179  m1_loss_ce_0: 0.5304  m1_loss_mask_0: 0.2034  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.5674  m1_loss_mask_1: 0.1799  m1_loss_dice_1: 1.278  m1_loss_ce_2: 0.5291  m1_loss_mask_2: 0.174  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.461  m1_loss_mask_3: 0.1721  m1_loss_dice_3: 1.135  m1_loss_ce_4: 0.431  m1_loss_mask_4: 0.1703  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.423  m1_loss_mask_5: 0.1666  m1_loss_dice_5: 1.164  m1_loss_ce_6: 0.4166  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.159  m1_loss_ce_7: 0.4046  m1_loss_mask_7: 0.1658  m1_loss_dice_7: 1.154  m1_loss_ce_8: 0.406  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.119  m2_loss_ce: 0.4707  m2_loss_mask: 0.172  m2_loss_dice: 1.196  m2_loss_ce_0: 0.5715  m2_loss_mask_0: 0.2118  m2_loss_dice_0: 1.393  m2_loss_ce_1: 0.6257  m2_loss_mask_1: 0.1947  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5523  m2_loss_mask_2: 0.1783  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5011  m2_loss_mask_3: 0.1702  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.4763  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.4779  m2_loss_mask_5: 0.1698  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.435  m2_loss_mask_6: 0.172  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.4514  m2_loss_mask_7: 0.1741  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.4443  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.214    time: 1.5434  last_time: 1.5566  data_time: 0.0702  last_data_time: 0.0521   lr: 0.0001  max_mem: 34880M
[10/15 16:01:55] d2.utils.events INFO:  eta: 0:14:59  iter: 419  total_loss: 41.2  m1_loss_ce: 0.4633  m1_loss_mask: 0.1642  m1_loss_dice: 1.291  m1_loss_ce_0: 0.5783  m1_loss_mask_0: 0.1824  m1_loss_dice_0: 1.499  m1_loss_ce_1: 0.6338  m1_loss_mask_1: 0.1732  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.5883  m1_loss_mask_2: 0.1615  m1_loss_dice_2: 1.358  m1_loss_ce_3: 0.5324  m1_loss_mask_3: 0.1632  m1_loss_dice_3: 1.31  m1_loss_ce_4: 0.4924  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.4951  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.316  m1_loss_ce_6: 0.4829  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.296  m1_loss_ce_7: 0.4887  m1_loss_mask_7: 0.1612  m1_loss_dice_7: 1.272  m1_loss_ce_8: 0.4759  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.28  m2_loss_ce: 0.4749  m2_loss_mask: 0.1613  m2_loss_dice: 1.306  m2_loss_ce_0: 0.6233  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.51  m2_loss_ce_1: 0.664  m2_loss_mask_1: 0.1835  m2_loss_dice_1: 1.428  m2_loss_ce_2: 0.5765  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.386  m2_loss_ce_3: 0.5403  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.341  m2_loss_ce_4: 0.5109  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.358  m2_loss_ce_5: 0.5326  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.296  m2_loss_ce_6: 0.4988  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.314  m2_loss_ce_7: 0.5086  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.4748  m2_loss_mask_8: 0.1609  m2_loss_dice_8: 1.314    time: 1.5424  last_time: 1.5098  data_time: 0.0759  last_data_time: 0.0531   lr: 0.0001  max_mem: 34880M
[10/15 16:02:26] d2.utils.events INFO:  eta: 0:14:29  iter: 439  total_loss: 41.73  m1_loss_ce: 0.5005  m1_loss_mask: 0.1706  m1_loss_dice: 1.275  m1_loss_ce_0: 0.5676  m1_loss_mask_0: 0.198  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6313  m1_loss_mask_1: 0.1936  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.5738  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5276  m1_loss_mask_3: 0.1758  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.4936  m1_loss_mask_4: 0.1758  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.4935  m1_loss_mask_5: 0.1767  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4968  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.5061  m1_loss_mask_7: 0.1713  m1_loss_dice_7: 1.263  m1_loss_ce_8: 0.4847  m1_loss_mask_8: 0.1703  m1_loss_dice_8: 1.238  m2_loss_ce: 0.4855  m2_loss_mask: 0.177  m2_loss_dice: 1.278  m2_loss_ce_0: 0.6183  m2_loss_mask_0: 0.2106  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.6726  m2_loss_mask_1: 0.1966  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.6252  m2_loss_mask_2: 0.185  m2_loss_dice_2: 1.376  m2_loss_ce_3: 0.5585  m2_loss_mask_3: 0.1812  m2_loss_dice_3: 1.335  m2_loss_ce_4: 0.5456  m2_loss_mask_4: 0.1781  m2_loss_dice_4: 1.308  m2_loss_ce_5: 0.5291  m2_loss_mask_5: 0.176  m2_loss_dice_5: 1.32  m2_loss_ce_6: 0.5158  m2_loss_mask_6: 0.1794  m2_loss_dice_6: 1.287  m2_loss_ce_7: 0.5116  m2_loss_mask_7: 0.1794  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.5128  m2_loss_mask_8: 0.178  m2_loss_dice_8: 1.303    time: 1.5423  last_time: 1.5639  data_time: 0.0706  last_data_time: 0.0481   lr: 0.0001  max_mem: 35174M
[10/15 16:02:57] d2.utils.events INFO:  eta: 0:13:58  iter: 459  total_loss: 40.4  m1_loss_ce: 0.4407  m1_loss_mask: 0.1713  m1_loss_dice: 1.261  m1_loss_ce_0: 0.5117  m1_loss_mask_0: 0.1884  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.5708  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.383  m1_loss_ce_2: 0.5245  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.34  m1_loss_ce_3: 0.5111  m1_loss_mask_3: 0.173  m1_loss_dice_3: 1.287  m1_loss_ce_4: 0.4652  m1_loss_mask_4: 0.1709  m1_loss_dice_4: 1.292  m1_loss_ce_5: 0.4425  m1_loss_mask_5: 0.1716  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.4537  m1_loss_mask_6: 0.1699  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4199  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.4511  m1_loss_mask_8: 0.1682  m1_loss_dice_8: 1.275  m2_loss_ce: 0.4527  m2_loss_mask: 0.1675  m2_loss_dice: 1.304  m2_loss_ce_0: 0.5949  m2_loss_mask_0: 0.1914  m2_loss_dice_0: 1.51  m2_loss_ce_1: 0.6266  m2_loss_mask_1: 0.1814  m2_loss_dice_1: 1.444  m2_loss_ce_2: 0.5519  m2_loss_mask_2: 0.1652  m2_loss_dice_2: 1.368  m2_loss_ce_3: 0.5107  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.336  m2_loss_ce_4: 0.4849  m2_loss_mask_4: 0.1696  m2_loss_dice_4: 1.322  m2_loss_ce_5: 0.4977  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.306  m2_loss_ce_6: 0.4674  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.329  m2_loss_ce_7: 0.4631  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.305  m2_loss_ce_8: 0.4508  m2_loss_mask_8: 0.168  m2_loss_dice_8: 1.285    time: 1.5429  last_time: 1.5462  data_time: 0.0727  last_data_time: 0.0456   lr: 0.0001  max_mem: 35174M
[10/15 16:03:28] d2.utils.events INFO:  eta: 0:13:27  iter: 479  total_loss: 41.9  m1_loss_ce: 0.4793  m1_loss_mask: 0.1626  m1_loss_dice: 1.277  m1_loss_ce_0: 0.5889  m1_loss_mask_0: 0.1855  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.6474  m1_loss_mask_1: 0.1772  m1_loss_dice_1: 1.411  m1_loss_ce_2: 0.591  m1_loss_mask_2: 0.1638  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5484  m1_loss_mask_3: 0.1678  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.5259  m1_loss_mask_4: 0.167  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5032  m1_loss_mask_5: 0.1662  m1_loss_dice_5: 1.267  m1_loss_ce_6: 0.5069  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.259  m1_loss_ce_7: 0.5231  m1_loss_mask_7: 0.1634  m1_loss_dice_7: 1.241  m1_loss_ce_8: 0.4689  m1_loss_mask_8: 0.1635  m1_loss_dice_8: 1.255  m2_loss_ce: 0.4878  m2_loss_mask: 0.1641  m2_loss_dice: 1.287  m2_loss_ce_0: 0.6191  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.6747  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.5772  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.5555  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5501  m2_loss_mask_4: 0.1618  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5378  m2_loss_mask_5: 0.1622  m2_loss_dice_5: 1.306  m2_loss_ce_6: 0.5149  m2_loss_mask_6: 0.1625  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.5236  m2_loss_mask_7: 0.1616  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.4902  m2_loss_mask_8: 0.1628  m2_loss_dice_8: 1.272    time: 1.5434  last_time: 1.5612  data_time: 0.0704  last_data_time: 0.0521   lr: 0.0001  max_mem: 35174M
[10/15 16:04:00] d2.utils.events INFO:  eta: 0:12:57  iter: 499  total_loss: 39  m1_loss_ce: 0.4692  m1_loss_mask: 0.1644  m1_loss_dice: 1.144  m1_loss_ce_0: 0.551  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.352  m1_loss_ce_1: 0.6311  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.284  m1_loss_ce_2: 0.5824  m1_loss_mask_2: 0.1637  m1_loss_dice_2: 1.229  m1_loss_ce_3: 0.4981  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.172  m1_loss_ce_4: 0.4898  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.4722  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.152  m1_loss_ce_6: 0.5048  m1_loss_mask_6: 0.1687  m1_loss_dice_6: 1.136  m1_loss_ce_7: 0.4925  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.4881  m1_loss_mask_8: 0.1643  m1_loss_dice_8: 1.15  m2_loss_ce: 0.4702  m2_loss_mask: 0.1628  m2_loss_dice: 1.197  m2_loss_ce_0: 0.6071  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.391  m2_loss_ce_1: 0.6522  m2_loss_mask_1: 0.1838  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.5859  m2_loss_mask_2: 0.168  m2_loss_dice_2: 1.246  m2_loss_ce_3: 0.5743  m2_loss_mask_3: 0.1652  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.546  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.4822  m2_loss_mask_5: 0.1631  m2_loss_dice_5: 1.179  m2_loss_ce_6: 0.4794  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4944  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.176  m2_loss_ce_8: 0.4911  m2_loss_mask_8: 0.1602  m2_loss_dice_8: 1.176    time: 1.5447  last_time: 1.5306  data_time: 0.0799  last_data_time: 0.0823   lr: 0.0001  max_mem: 35174M
[10/15 16:04:31] d2.utils.events INFO:  eta: 0:12:25  iter: 519  total_loss: 38.99  m1_loss_ce: 0.4513  m1_loss_mask: 0.166  m1_loss_dice: 1.16  m1_loss_ce_0: 0.555  m1_loss_mask_0: 0.1971  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.6066  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.284  m1_loss_ce_2: 0.5555  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.4835  m1_loss_mask_3: 0.1721  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.4972  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.191  m1_loss_ce_5: 0.4651  m1_loss_mask_5: 0.1686  m1_loss_dice_5: 1.188  m1_loss_ce_6: 0.4601  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.4466  m1_loss_mask_7: 0.1681  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.443  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.149  m2_loss_ce: 0.4587  m2_loss_mask: 0.1751  m2_loss_dice: 1.173  m2_loss_ce_0: 0.5772  m2_loss_mask_0: 0.2062  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.628  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.553  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5373  m2_loss_mask_3: 0.1786  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.4944  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.5024  m2_loss_mask_5: 0.1753  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.462  m2_loss_mask_6: 0.1776  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.4802  m2_loss_mask_7: 0.1767  m2_loss_dice_7: 1.198  m2_loss_ce_8: 0.4631  m2_loss_mask_8: 0.1763  m2_loss_dice_8: 1.193    time: 1.5444  last_time: 1.5416  data_time: 0.0632  last_data_time: 0.0393   lr: 0.0001  max_mem: 35174M
[10/15 16:05:02] d2.utils.events INFO:  eta: 0:11:55  iter: 539  total_loss: 39.56  m1_loss_ce: 0.4447  m1_loss_mask: 0.1644  m1_loss_dice: 1.199  m1_loss_ce_0: 0.5762  m1_loss_mask_0: 0.1882  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.6166  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.574  m1_loss_mask_2: 0.1684  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5303  m1_loss_mask_3: 0.168  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5131  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4911  m1_loss_mask_5: 0.1663  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.4672  m1_loss_mask_6: 0.1649  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4606  m1_loss_mask_7: 0.1675  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.4581  m1_loss_mask_8: 0.1687  m1_loss_dice_8: 1.213  m2_loss_ce: 0.4902  m2_loss_mask: 0.1676  m2_loss_dice: 1.274  m2_loss_ce_0: 0.5942  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6599  m2_loss_mask_1: 0.1802  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.586  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5389  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5229  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5146  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.4958  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.4828  m2_loss_mask_7: 0.166  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4846  m2_loss_mask_8: 0.1659  m2_loss_dice_8: 1.269    time: 1.5451  last_time: 1.6123  data_time: 0.0770  last_data_time: 0.0561   lr: 0.0001  max_mem: 35174M
[10/15 16:05:33] d2.utils.events INFO:  eta: 0:11:23  iter: 559  total_loss: 38.65  m1_loss_ce: 0.4336  m1_loss_mask: 0.1623  m1_loss_dice: 1.178  m1_loss_ce_0: 0.5737  m1_loss_mask_0: 0.2016  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.595  m1_loss_mask_1: 0.1814  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.5137  m1_loss_mask_2: 0.1709  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.4935  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.4335  m1_loss_mask_4: 0.1677  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.452  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.439  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4112  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.4346  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.188  m2_loss_ce: 0.4424  m2_loss_mask: 0.1698  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6022  m2_loss_mask_0: 0.208  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6501  m2_loss_mask_1: 0.1942  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5491  m2_loss_mask_2: 0.1767  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.4856  m2_loss_mask_3: 0.1755  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.468  m2_loss_mask_4: 0.1691  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.4714  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.4507  m2_loss_mask_6: 0.1739  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4378  m2_loss_mask_7: 0.172  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4159  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.277    time: 1.5442  last_time: 1.4470  data_time: 0.0658  last_data_time: 0.0385   lr: 0.0001  max_mem: 35174M
[10/15 16:06:04] d2.utils.events INFO:  eta: 0:10:52  iter: 579  total_loss: 42.07  m1_loss_ce: 0.5213  m1_loss_mask: 0.1621  m1_loss_dice: 1.274  m1_loss_ce_0: 0.6269  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.6191  m1_loss_mask_1: 0.1764  m1_loss_dice_1: 1.414  m1_loss_ce_2: 0.6046  m1_loss_mask_2: 0.1708  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5613  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.5259  m1_loss_mask_4: 0.1626  m1_loss_dice_4: 1.28  m1_loss_ce_5: 0.5338  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.27  m1_loss_ce_6: 0.5068  m1_loss_mask_6: 0.1589  m1_loss_dice_6: 1.278  m1_loss_ce_7: 0.487  m1_loss_mask_7: 0.1605  m1_loss_dice_7: 1.28  m1_loss_ce_8: 0.4974  m1_loss_mask_8: 0.1576  m1_loss_dice_8: 1.261  m2_loss_ce: 0.5052  m2_loss_mask: 0.16  m2_loss_dice: 1.31  m2_loss_ce_0: 0.6263  m2_loss_mask_0: 0.1891  m2_loss_dice_0: 1.538  m2_loss_ce_1: 0.684  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.466  m2_loss_ce_2: 0.6059  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.5566  m2_loss_mask_3: 0.1602  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5316  m2_loss_mask_4: 0.1564  m2_loss_dice_4: 1.33  m2_loss_ce_5: 0.5303  m2_loss_mask_5: 0.1567  m2_loss_dice_5: 1.308  m2_loss_ce_6: 0.5321  m2_loss_mask_6: 0.1561  m2_loss_dice_6: 1.322  m2_loss_ce_7: 0.5087  m2_loss_mask_7: 0.156  m2_loss_dice_7: 1.308  m2_loss_ce_8: 0.5094  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.302    time: 1.5452  last_time: 1.6192  data_time: 0.0806  last_data_time: 0.0676   lr: 0.0001  max_mem: 35174M
[10/15 16:06:35] d2.utils.events INFO:  eta: 0:10:21  iter: 599  total_loss: 42.28  m1_loss_ce: 0.5222  m1_loss_mask: 0.1645  m1_loss_dice: 1.302  m1_loss_ce_0: 0.6119  m1_loss_mask_0: 0.1897  m1_loss_dice_0: 1.506  m1_loss_ce_1: 0.7037  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.46  m1_loss_ce_2: 0.6681  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.383  m1_loss_ce_3: 0.5586  m1_loss_mask_3: 0.1678  m1_loss_dice_3: 1.316  m1_loss_ce_4: 0.5377  m1_loss_mask_4: 0.1682  m1_loss_dice_4: 1.306  m1_loss_ce_5: 0.5582  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.311  m1_loss_ce_6: 0.5164  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.276  m1_loss_ce_7: 0.5308  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.281  m1_loss_ce_8: 0.5238  m1_loss_mask_8: 0.1648  m1_loss_dice_8: 1.275  m2_loss_ce: 0.5434  m2_loss_mask: 0.1631  m2_loss_dice: 1.354  m2_loss_ce_0: 0.6475  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.571  m2_loss_ce_1: 0.6835  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.473  m2_loss_ce_2: 0.634  m2_loss_mask_2: 0.1702  m2_loss_dice_2: 1.386  m2_loss_ce_3: 0.5979  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.351  m2_loss_ce_4: 0.5819  m2_loss_mask_4: 0.1609  m2_loss_dice_4: 1.368  m2_loss_ce_5: 0.5608  m2_loss_mask_5: 0.16  m2_loss_dice_5: 1.346  m2_loss_ce_6: 0.534  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.298  m2_loss_ce_7: 0.5396  m2_loss_mask_7: 0.1634  m2_loss_dice_7: 1.319  m2_loss_ce_8: 0.5504  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.324    time: 1.5454  last_time: 1.5917  data_time: 0.0612  last_data_time: 0.0733   lr: 0.0001  max_mem: 35174M
[10/15 16:07:07] d2.utils.events INFO:  eta: 0:09:50  iter: 619  total_loss: 38.52  m1_loss_ce: 0.4637  m1_loss_mask: 0.1623  m1_loss_dice: 1.197  m1_loss_ce_0: 0.5511  m1_loss_mask_0: 0.1962  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.6309  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5172  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.5009  m1_loss_mask_3: 0.1663  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4716  m1_loss_mask_4: 0.1656  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.4665  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.189  m1_loss_ce_6: 0.462  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4449  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4589  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.155  m2_loss_ce: 0.4382  m2_loss_mask: 0.169  m2_loss_dice: 1.235  m2_loss_ce_0: 0.5825  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6135  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.35  m2_loss_ce_2: 0.5597  m2_loss_mask_2: 0.17  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5371  m2_loss_mask_3: 0.1751  m2_loss_dice_3: 1.2  m2_loss_ce_4: 0.4833  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.4804  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.4778  m2_loss_mask_6: 0.172  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4804  m2_loss_mask_7: 0.1696  m2_loss_dice_7: 1.194  m2_loss_ce_8: 0.4714  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.232    time: 1.5462  last_time: 1.6599  data_time: 0.0767  last_data_time: 0.0880   lr: 0.0001  max_mem: 35174M
[10/15 16:07:38] d2.utils.events INFO:  eta: 0:09:19  iter: 639  total_loss: 37.21  m1_loss_ce: 0.4472  m1_loss_mask: 0.1618  m1_loss_dice: 1.138  m1_loss_ce_0: 0.5524  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.352  m1_loss_ce_1: 0.6043  m1_loss_mask_1: 0.1759  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.5296  m1_loss_mask_2: 0.171  m1_loss_dice_2: 1.203  m1_loss_ce_3: 0.4914  m1_loss_mask_3: 0.1684  m1_loss_dice_3: 1.157  m1_loss_ce_4: 0.4844  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.163  m1_loss_ce_5: 0.4378  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.16  m1_loss_ce_6: 0.4609  m1_loss_mask_6: 0.161  m1_loss_dice_6: 1.113  m1_loss_ce_7: 0.4113  m1_loss_mask_7: 0.1616  m1_loss_dice_7: 1.107  m1_loss_ce_8: 0.4604  m1_loss_mask_8: 0.1622  m1_loss_dice_8: 1.131  m2_loss_ce: 0.4259  m2_loss_mask: 0.1612  m2_loss_dice: 1.173  m2_loss_ce_0: 0.5601  m2_loss_mask_0: 0.1917  m2_loss_dice_0: 1.38  m2_loss_ce_1: 0.6621  m2_loss_mask_1: 0.1761  m2_loss_dice_1: 1.28  m2_loss_ce_2: 0.5818  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5115  m2_loss_mask_3: 0.1661  m2_loss_dice_3: 1.215  m2_loss_ce_4: 0.4768  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.475  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.4295  m2_loss_mask_6: 0.1595  m2_loss_dice_6: 1.169  m2_loss_ce_7: 0.4862  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.483  m2_loss_mask_8: 0.1606  m2_loss_dice_8: 1.179    time: 1.5469  last_time: 1.5454  data_time: 0.0737  last_data_time: 0.0480   lr: 0.0001  max_mem: 35174M
[10/15 16:08:10] d2.utils.events INFO:  eta: 0:08:48  iter: 659  total_loss: 40.05  m1_loss_ce: 0.491  m1_loss_mask: 0.1566  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5763  m1_loss_mask_0: 0.179  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.6283  m1_loss_mask_1: 0.1699  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5789  m1_loss_mask_2: 0.1586  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.5107  m1_loss_mask_3: 0.1611  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4876  m1_loss_mask_4: 0.1574  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4869  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.4853  m1_loss_mask_6: 0.1582  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4698  m1_loss_mask_7: 0.1596  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.4644  m1_loss_mask_8: 0.1556  m1_loss_dice_8: 1.216  m2_loss_ce: 0.4742  m2_loss_mask: 0.1596  m2_loss_dice: 1.244  m2_loss_ce_0: 0.5706  m2_loss_mask_0: 0.1873  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.6967  m2_loss_mask_1: 0.181  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6046  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5549  m2_loss_mask_3: 0.1624  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.505  m2_loss_mask_4: 0.1613  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.525  m2_loss_mask_5: 0.1632  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.4903  m2_loss_mask_6: 0.1651  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.491  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4781  m2_loss_mask_8: 0.1616  m2_loss_dice_8: 1.266    time: 1.5473  last_time: 1.5647  data_time: 0.0719  last_data_time: 0.0544   lr: 0.0001  max_mem: 35174M
[10/15 16:08:40] d2.utils.events INFO:  eta: 0:08:17  iter: 679  total_loss: 40.78  m1_loss_ce: 0.437  m1_loss_mask: 0.1583  m1_loss_dice: 1.264  m1_loss_ce_0: 0.5385  m1_loss_mask_0: 0.1805  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.5802  m1_loss_mask_1: 0.1711  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.5346  m1_loss_mask_2: 0.1633  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.4832  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.4661  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.4645  m1_loss_mask_5: 0.1599  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.4567  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.4478  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.4419  m1_loss_mask_8: 0.1606  m1_loss_dice_8: 1.26  m2_loss_ce: 0.4319  m2_loss_mask: 0.1688  m2_loss_dice: 1.271  m2_loss_ce_0: 0.5734  m2_loss_mask_0: 0.1918  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.6324  m2_loss_mask_1: 0.1854  m2_loss_dice_1: 1.405  m2_loss_ce_2: 0.5776  m2_loss_mask_2: 0.1768  m2_loss_dice_2: 1.361  m2_loss_ce_3: 0.5265  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.325  m2_loss_ce_4: 0.5098  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.32  m2_loss_ce_5: 0.4785  m2_loss_mask_5: 0.1691  m2_loss_dice_5: 1.322  m2_loss_ce_6: 0.4507  m2_loss_mask_6: 0.1699  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.4686  m2_loss_mask_7: 0.1719  m2_loss_dice_7: 1.286  m2_loss_ce_8: 0.4628  m2_loss_mask_8: 0.1695  m2_loss_dice_8: 1.268    time: 1.5468  last_time: 1.5724  data_time: 0.0904  last_data_time: 0.2025   lr: 0.0001  max_mem: 35174M
[10/15 16:09:12] d2.utils.events INFO:  eta: 0:07:46  iter: 699  total_loss: 40.75  m1_loss_ce: 0.4768  m1_loss_mask: 0.1619  m1_loss_dice: 1.21  m1_loss_ce_0: 0.5956  m1_loss_mask_0: 0.2028  m1_loss_dice_0: 1.373  m1_loss_ce_1: 0.6545  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.6138  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5123  m1_loss_mask_3: 0.1654  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.4878  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.4764  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.4999  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.5164  m1_loss_mask_7: 0.161  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4826  m1_loss_mask_8: 0.1606  m1_loss_dice_8: 1.249  m2_loss_ce: 0.464  m2_loss_mask: 0.1645  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6456  m2_loss_mask_0: 0.2065  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6882  m2_loss_mask_1: 0.181  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.613  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5907  m2_loss_mask_3: 0.1633  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5369  m2_loss_mask_4: 0.1648  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5437  m2_loss_mask_5: 0.1632  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.4949  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.5026  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4759  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.26    time: 1.5471  last_time: 1.6381  data_time: 0.0797  last_data_time: 0.0796   lr: 0.0001  max_mem: 35174M
[10/15 16:09:43] d2.utils.events INFO:  eta: 0:07:15  iter: 719  total_loss: 38.68  m1_loss_ce: 0.4541  m1_loss_mask: 0.1589  m1_loss_dice: 1.157  m1_loss_ce_0: 0.594  m1_loss_mask_0: 0.1967  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.6168  m1_loss_mask_1: 0.1738  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.5807  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.219  m1_loss_ce_3: 0.4831  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.4873  m1_loss_mask_4: 0.1601  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.473  m1_loss_mask_5: 0.1617  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.4355  m1_loss_mask_6: 0.161  m1_loss_dice_6: 1.15  m1_loss_ce_7: 0.4403  m1_loss_mask_7: 0.1634  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4698  m1_loss_mask_8: 0.1588  m1_loss_dice_8: 1.18  m2_loss_ce: 0.4512  m2_loss_mask: 0.163  m2_loss_dice: 1.222  m2_loss_ce_0: 0.6196  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6677  m2_loss_mask_1: 0.1797  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.5782  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5435  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.4995  m2_loss_mask_4: 0.1633  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.4967  m2_loss_mask_5: 0.1614  m2_loss_dice_5: 1.199  m2_loss_ce_6: 0.4886  m2_loss_mask_6: 0.1618  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.4858  m2_loss_mask_7: 0.1627  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4524  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.24    time: 1.5475  last_time: 1.4477  data_time: 0.0734  last_data_time: 0.0454   lr: 0.0001  max_mem: 35174M
[10/15 16:10:14] d2.utils.events INFO:  eta: 0:06:44  iter: 739  total_loss: 41.68  m1_loss_ce: 0.4964  m1_loss_mask: 0.1667  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5867  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6471  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.387  m1_loss_ce_2: 0.5884  m1_loss_mask_2: 0.175  m1_loss_dice_2: 1.35  m1_loss_ce_3: 0.5436  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5301  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.5225  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.5099  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.4965  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.523  m1_loss_mask_8: 0.1649  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4977  m2_loss_mask: 0.1642  m2_loss_dice: 1.321  m2_loss_ce_0: 0.5934  m2_loss_mask_0: 0.1961  m2_loss_dice_0: 1.517  m2_loss_ce_1: 0.7006  m2_loss_mask_1: 0.1862  m2_loss_dice_1: 1.435  m2_loss_ce_2: 0.6244  m2_loss_mask_2: 0.1755  m2_loss_dice_2: 1.371  m2_loss_ce_3: 0.5655  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.337  m2_loss_ce_4: 0.5979  m2_loss_mask_4: 0.1616  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.5269  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.339  m2_loss_ce_6: 0.5349  m2_loss_mask_6: 0.1668  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.534  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.296  m2_loss_ce_8: 0.5125  m2_loss_mask_8: 0.1646  m2_loss_dice_8: 1.306    time: 1.5470  last_time: 1.4789  data_time: 0.0842  last_data_time: 0.0525   lr: 0.0001  max_mem: 35174M
[10/15 16:10:45] d2.utils.events INFO:  eta: 0:06:13  iter: 759  total_loss: 38.88  m1_loss_ce: 0.4476  m1_loss_mask: 0.1562  m1_loss_dice: 1.166  m1_loss_ce_0: 0.573  m1_loss_mask_0: 0.1994  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.635  m1_loss_mask_1: 0.1788  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.58  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.227  m1_loss_ce_3: 0.5294  m1_loss_mask_3: 0.1619  m1_loss_dice_3: 1.182  m1_loss_ce_4: 0.5036  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4849  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.4559  m1_loss_mask_6: 0.1601  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.4502  m1_loss_mask_7: 0.1585  m1_loss_dice_7: 1.199  m1_loss_ce_8: 0.457  m1_loss_mask_8: 0.155  m1_loss_dice_8: 1.172  m2_loss_ce: 0.4767  m2_loss_mask: 0.1718  m2_loss_dice: 1.241  m2_loss_ce_0: 0.5708  m2_loss_mask_0: 0.2023  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.6697  m2_loss_mask_1: 0.1879  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.5998  m2_loss_mask_2: 0.1775  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5769  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5212  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.5248  m2_loss_mask_5: 0.1704  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4936  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.5334  m2_loss_mask_7: 0.1726  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4695  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.247    time: 1.5474  last_time: 1.6337  data_time: 0.0626  last_data_time: 0.0887   lr: 0.0001  max_mem: 35174M
[10/15 16:11:17] d2.utils.events INFO:  eta: 0:05:42  iter: 779  total_loss: 40.57  m1_loss_ce: 0.4777  m1_loss_mask: 0.1612  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5683  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6119  m1_loss_mask_1: 0.1705  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.5604  m1_loss_mask_2: 0.169  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.4906  m1_loss_mask_3: 0.1603  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.4949  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4696  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.4735  m1_loss_mask_6: 0.1628  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.4555  m1_loss_mask_7: 0.1605  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4893  m1_loss_mask_8: 0.1625  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5117  m2_loss_mask: 0.1681  m2_loss_dice: 1.271  m2_loss_ce_0: 0.6415  m2_loss_mask_0: 0.1911  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6646  m2_loss_mask_1: 0.1792  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.6039  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.347  m2_loss_ce_3: 0.579  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5335  m2_loss_mask_4: 0.1678  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.4992  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.4992  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.4948  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.4947  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.267    time: 1.5480  last_time: 1.6104  data_time: 0.0695  last_data_time: 0.0955   lr: 0.0001  max_mem: 35174M
[10/15 16:11:48] d2.utils.events INFO:  eta: 0:05:11  iter: 799  total_loss: 38.77  m1_loss_ce: 0.4486  m1_loss_mask: 0.1729  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5274  m1_loss_mask_0: 0.1964  m1_loss_dice_0: 1.363  m1_loss_ce_1: 0.5632  m1_loss_mask_1: 0.185  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5359  m1_loss_mask_2: 0.1807  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4609  m1_loss_mask_3: 0.1787  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.4155  m1_loss_mask_4: 0.1775  m1_loss_dice_4: 1.168  m1_loss_ce_5: 0.414  m1_loss_mask_5: 0.176  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.4342  m1_loss_mask_6: 0.1762  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.4123  m1_loss_mask_7: 0.1754  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4292  m1_loss_mask_8: 0.1737  m1_loss_dice_8: 1.171  m2_loss_ce: 0.4608  m2_loss_mask: 0.179  m2_loss_dice: 1.273  m2_loss_ce_0: 0.6038  m2_loss_mask_0: 0.206  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6519  m2_loss_mask_1: 0.1929  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.5615  m2_loss_mask_2: 0.1801  m2_loss_dice_2: 1.288  m2_loss_ce_3: 0.4967  m2_loss_mask_3: 0.1823  m2_loss_dice_3: 1.287  m2_loss_ce_4: 0.5036  m2_loss_mask_4: 0.1809  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5035  m2_loss_mask_5: 0.1815  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4783  m2_loss_mask_6: 0.1798  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.4798  m2_loss_mask_7: 0.1798  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4609  m2_loss_mask_8: 0.1785  m2_loss_dice_8: 1.239    time: 1.5481  last_time: 1.4449  data_time: 0.0991  last_data_time: 0.0560   lr: 0.0001  max_mem: 35174M
[10/15 16:12:19] d2.utils.events INFO:  eta: 0:04:40  iter: 819  total_loss: 40.61  m1_loss_ce: 0.4544  m1_loss_mask: 0.1491  m1_loss_dice: 1.223  m1_loss_ce_0: 0.6031  m1_loss_mask_0: 0.1827  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.6402  m1_loss_mask_1: 0.169  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5918  m1_loss_mask_2: 0.1581  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.4944  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5161  m1_loss_mask_4: 0.1539  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.476  m1_loss_mask_5: 0.1542  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.4689  m1_loss_mask_6: 0.1493  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4945  m1_loss_mask_7: 0.1505  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.451  m1_loss_mask_8: 0.1511  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5105  m2_loss_mask: 0.1586  m2_loss_dice: 1.287  m2_loss_ce_0: 0.6529  m2_loss_mask_0: 0.1923  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.711  m2_loss_mask_1: 0.1756  m2_loss_dice_1: 1.449  m2_loss_ce_2: 0.6384  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5676  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.559  m2_loss_mask_4: 0.16  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.5445  m2_loss_mask_5: 0.158  m2_loss_dice_5: 1.305  m2_loss_ce_6: 0.5208  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.288  m2_loss_ce_7: 0.5391  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.305  m2_loss_ce_8: 0.5395  m2_loss_mask_8: 0.1606  m2_loss_dice_8: 1.304    time: 1.5483  last_time: 1.6062  data_time: 0.0687  last_data_time: 0.0555   lr: 0.0001  max_mem: 35174M
[10/15 16:12:50] d2.utils.events INFO:  eta: 0:04:08  iter: 839  total_loss: 37.92  m1_loss_ce: 0.3989  m1_loss_mask: 0.1678  m1_loss_dice: 1.151  m1_loss_ce_0: 0.5222  m1_loss_mask_0: 0.198  m1_loss_dice_0: 1.314  m1_loss_ce_1: 0.5874  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.252  m1_loss_ce_2: 0.5211  m1_loss_mask_2: 0.1727  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4863  m1_loss_mask_3: 0.171  m1_loss_dice_3: 1.154  m1_loss_ce_4: 0.4936  m1_loss_mask_4: 0.1711  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.4758  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.17  m1_loss_ce_6: 0.4605  m1_loss_mask_6: 0.1712  m1_loss_dice_6: 1.159  m1_loss_ce_7: 0.4456  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.147  m1_loss_ce_8: 0.4278  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.101  m2_loss_ce: 0.4854  m2_loss_mask: 0.1731  m2_loss_dice: 1.19  m2_loss_ce_0: 0.5921  m2_loss_mask_0: 0.1989  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.6469  m2_loss_mask_1: 0.1911  m2_loss_dice_1: 1.321  m2_loss_ce_2: 0.5893  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.5238  m2_loss_mask_3: 0.1744  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.4998  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.4848  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5115  m2_loss_mask_6: 0.1729  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4796  m2_loss_mask_7: 0.1716  m2_loss_dice_7: 1.175  m2_loss_ce_8: 0.4578  m2_loss_mask_8: 0.1736  m2_loss_dice_8: 1.185    time: 1.5479  last_time: 1.5420  data_time: 0.0626  last_data_time: 0.0531   lr: 0.0001  max_mem: 35174M
[10/15 16:13:22] d2.utils.events INFO:  eta: 0:03:37  iter: 859  total_loss: 38.45  m1_loss_ce: 0.4649  m1_loss_mask: 0.1522  m1_loss_dice: 1.165  m1_loss_ce_0: 0.5688  m1_loss_mask_0: 0.1801  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.5951  m1_loss_mask_1: 0.1689  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.5762  m1_loss_mask_2: 0.1591  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.4968  m1_loss_mask_3: 0.1538  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.4971  m1_loss_mask_4: 0.1527  m1_loss_dice_4: 1.159  m1_loss_ce_5: 0.477  m1_loss_mask_5: 0.1541  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.4673  m1_loss_mask_6: 0.1532  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.4513  m1_loss_mask_7: 0.153  m1_loss_dice_7: 1.155  m1_loss_ce_8: 0.4492  m1_loss_mask_8: 0.1536  m1_loss_dice_8: 1.155  m2_loss_ce: 0.482  m2_loss_mask: 0.1629  m2_loss_dice: 1.228  m2_loss_ce_0: 0.5784  m2_loss_mask_0: 0.1878  m2_loss_dice_0: 1.43  m2_loss_ce_1: 0.6554  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.5986  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5244  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5122  m2_loss_mask_4: 0.1636  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.4943  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.222  m2_loss_ce_6: 0.502  m2_loss_mask_6: 0.1645  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.482  m2_loss_mask_7: 0.1643  m2_loss_dice_7: 1.213  m2_loss_ce_8: 0.4746  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.199    time: 1.5486  last_time: 1.5842  data_time: 0.0759  last_data_time: 0.0757   lr: 0.0001  max_mem: 35174M
[10/15 16:13:53] d2.utils.events INFO:  eta: 0:03:06  iter: 879  total_loss: 36.86  m1_loss_ce: 0.4042  m1_loss_mask: 0.1573  m1_loss_dice: 1.111  m1_loss_ce_0: 0.5262  m1_loss_mask_0: 0.1864  m1_loss_dice_0: 1.286  m1_loss_ce_1: 0.5566  m1_loss_mask_1: 0.1752  m1_loss_dice_1: 1.271  m1_loss_ce_2: 0.5024  m1_loss_mask_2: 0.1669  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.4469  m1_loss_mask_3: 0.1629  m1_loss_dice_3: 1.146  m1_loss_ce_4: 0.4187  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.162  m1_loss_ce_5: 0.4241  m1_loss_mask_5: 0.1592  m1_loss_dice_5: 1.123  m1_loss_ce_6: 0.4309  m1_loss_mask_6: 0.1571  m1_loss_dice_6: 1.105  m1_loss_ce_7: 0.4096  m1_loss_mask_7: 0.1556  m1_loss_dice_7: 1.103  m1_loss_ce_8: 0.3948  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.099  m2_loss_ce: 0.4339  m2_loss_mask: 0.1713  m2_loss_dice: 1.177  m2_loss_ce_0: 0.5732  m2_loss_mask_0: 0.2158  m2_loss_dice_0: 1.367  m2_loss_ce_1: 0.6129  m2_loss_mask_1: 0.1939  m2_loss_dice_1: 1.272  m2_loss_ce_2: 0.5299  m2_loss_mask_2: 0.1778  m2_loss_dice_2: 1.26  m2_loss_ce_3: 0.4825  m2_loss_mask_3: 0.1767  m2_loss_dice_3: 1.181  m2_loss_ce_4: 0.4725  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.187  m2_loss_ce_5: 0.4449  m2_loss_mask_5: 0.171  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.468  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.173  m2_loss_ce_7: 0.4444  m2_loss_mask_7: 0.1715  m2_loss_dice_7: 1.14  m2_loss_ce_8: 0.4573  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.157    time: 1.5489  last_time: 1.5299  data_time: 0.0775  last_data_time: 0.0447   lr: 0.0001  max_mem: 35174M
[10/15 16:14:23] d2.utils.events INFO:  eta: 0:02:35  iter: 899  total_loss: 39.53  m1_loss_ce: 0.4605  m1_loss_mask: 0.1658  m1_loss_dice: 1.225  m1_loss_ce_0: 0.5344  m1_loss_mask_0: 0.1894  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.5727  m1_loss_mask_1: 0.1848  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.5327  m1_loss_mask_2: 0.1733  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.4744  m1_loss_mask_3: 0.1692  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.4659  m1_loss_mask_4: 0.1688  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.467  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.4505  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4373  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4467  m1_loss_mask_8: 0.1649  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4907  m2_loss_mask: 0.1666  m2_loss_dice: 1.314  m2_loss_ce_0: 0.6086  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6727  m2_loss_mask_1: 0.1886  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.6147  m2_loss_mask_2: 0.1747  m2_loss_dice_2: 1.375  m2_loss_ce_3: 0.5339  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.324  m2_loss_ce_4: 0.5326  m2_loss_mask_4: 0.17  m2_loss_dice_4: 1.333  m2_loss_ce_5: 0.5211  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.5057  m2_loss_mask_6: 0.1696  m2_loss_dice_6: 1.312  m2_loss_ce_7: 0.5061  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.301  m2_loss_ce_8: 0.4777  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.279    time: 1.5483  last_time: 1.5654  data_time: 0.0798  last_data_time: 0.0434   lr: 0.0001  max_mem: 35174M
[10/15 16:14:54] d2.utils.events INFO:  eta: 0:02:04  iter: 919  total_loss: 39.37  m1_loss_ce: 0.445  m1_loss_mask: 0.1639  m1_loss_dice: 1.161  m1_loss_ce_0: 0.5663  m1_loss_mask_0: 0.1859  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6094  m1_loss_mask_1: 0.1713  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.5274  m1_loss_mask_2: 0.1698  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.5068  m1_loss_mask_3: 0.1652  m1_loss_dice_3: 1.202  m1_loss_ce_4: 0.4667  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4415  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.175  m1_loss_ce_6: 0.4454  m1_loss_mask_6: 0.1613  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.4142  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.4483  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4789  m2_loss_mask: 0.1677  m2_loss_dice: 1.222  m2_loss_ce_0: 0.6346  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6675  m2_loss_mask_1: 0.1833  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.6088  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5724  m2_loss_mask_3: 0.1715  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.5452  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5036  m2_loss_mask_5: 0.165  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.5177  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.217  m2_loss_ce_7: 0.5024  m2_loss_mask_7: 0.1684  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4985  m2_loss_mask_8: 0.1647  m2_loss_dice_8: 1.224    time: 1.5481  last_time: 1.6004  data_time: 0.0682  last_data_time: 0.0732   lr: 0.0001  max_mem: 35174M
[10/15 16:15:26] d2.utils.events INFO:  eta: 0:01:33  iter: 939  total_loss: 37.99  m1_loss_ce: 0.425  m1_loss_mask: 0.1661  m1_loss_dice: 1.17  m1_loss_ce_0: 0.535  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.585  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.299  m1_loss_ce_2: 0.5415  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.4938  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.475  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.174  m1_loss_ce_5: 0.4364  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.4465  m1_loss_mask_6: 0.163  m1_loss_dice_6: 1.157  m1_loss_ce_7: 0.4203  m1_loss_mask_7: 0.1652  m1_loss_dice_7: 1.158  m1_loss_ce_8: 0.4393  m1_loss_mask_8: 0.1623  m1_loss_dice_8: 1.149  m2_loss_ce: 0.4691  m2_loss_mask: 0.169  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5755  m2_loss_mask_0: 0.1987  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.6407  m2_loss_mask_1: 0.1848  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.5504  m2_loss_mask_2: 0.1716  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5228  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.4984  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.4789  m2_loss_mask_5: 0.1679  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4722  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.4705  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.4837  m2_loss_mask_8: 0.1653  m2_loss_dice_8: 1.223    time: 1.5483  last_time: 1.6458  data_time: 0.0862  last_data_time: 0.2101   lr: 0.0001  max_mem: 35174M
[10/15 16:15:57] d2.utils.events INFO:  eta: 0:01:02  iter: 959  total_loss: 39.88  m1_loss_ce: 0.4728  m1_loss_mask: 0.1486  m1_loss_dice: 1.168  m1_loss_ce_0: 0.5798  m1_loss_mask_0: 0.1778  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.6005  m1_loss_mask_1: 0.1651  m1_loss_dice_1: 1.36  m1_loss_ce_2: 0.5741  m1_loss_mask_2: 0.1534  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5011  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.4866  m1_loss_mask_4: 0.1553  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.4572  m1_loss_mask_5: 0.1488  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.4651  m1_loss_mask_6: 0.1499  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.4536  m1_loss_mask_7: 0.1476  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.462  m1_loss_mask_8: 0.1466  m1_loss_dice_8: 1.188  m2_loss_ce: 0.4963  m2_loss_mask: 0.1477  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6122  m2_loss_mask_0: 0.1818  m2_loss_dice_0: 1.555  m2_loss_ce_1: 0.6493  m2_loss_mask_1: 0.1701  m2_loss_dice_1: 1.436  m2_loss_ce_2: 0.5909  m2_loss_mask_2: 0.1504  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.5602  m2_loss_mask_3: 0.1485  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.5202  m2_loss_mask_4: 0.1479  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.4878  m2_loss_mask_5: 0.1479  m2_loss_dice_5: 1.276  m2_loss_ce_6: 0.492  m2_loss_mask_6: 0.1467  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.4847  m2_loss_mask_7: 0.1468  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4743  m2_loss_mask_8: 0.1487  m2_loss_dice_8: 1.267    time: 1.5489  last_time: 1.6178  data_time: 0.1444  last_data_time: 0.1239   lr: 0.0001  max_mem: 35174M
[10/15 16:16:29] d2.utils.events INFO:  eta: 0:00:31  iter: 979  total_loss: 38.87  m1_loss_ce: 0.4334  m1_loss_mask: 0.1648  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5502  m1_loss_mask_0: 0.188  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.6136  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.5316  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.4975  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.187  m1_loss_ce_4: 0.4715  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.182  m1_loss_ce_5: 0.4653  m1_loss_mask_5: 0.1646  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4438  m1_loss_mask_6: 0.1668  m1_loss_dice_6: 1.17  m1_loss_ce_7: 0.4426  m1_loss_mask_7: 0.1642  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4314  m1_loss_mask_8: 0.1655  m1_loss_dice_8: 1.199  m2_loss_ce: 0.4653  m2_loss_mask: 0.1657  m2_loss_dice: 1.263  m2_loss_ce_0: 0.5904  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6865  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.5841  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.5041  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5191  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5097  m2_loss_mask_5: 0.169  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.4876  m2_loss_mask_6: 0.1689  m2_loss_dice_6: 1.26  m2_loss_ce_7: 0.5048  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.4903  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.259    time: 1.5491  last_time: 1.6820  data_time: 0.0748  last_data_time: 0.0466   lr: 0.0001  max_mem: 35174M
[10/15 16:16:59] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_2_0_8/model_final.pth
[10/15 16:17:03] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 39.46  m1_loss_ce: 0.4364  m1_loss_mask: 0.1687  m1_loss_dice: 1.198  m1_loss_ce_0: 0.5634  m1_loss_mask_0: 0.1933  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.6165  m1_loss_mask_1: 0.1805  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.5983  m1_loss_mask_2: 0.1753  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5363  m1_loss_mask_3: 0.1736  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.4896  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.4865  m1_loss_mask_5: 0.1694  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.4246  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.4611  m1_loss_mask_7: 0.1712  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.4408  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.186  m2_loss_ce: 0.4487  m2_loss_mask: 0.1709  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6259  m2_loss_mask_0: 0.199  m2_loss_dice_0: 1.45  m2_loss_ce_1: 0.653  m2_loss_mask_1: 0.1872  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6035  m2_loss_mask_2: 0.1786  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.5584  m2_loss_mask_3: 0.1737  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5096  m2_loss_mask_4: 0.1723  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.4997  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.309  m2_loss_ce_6: 0.4865  m2_loss_mask_6: 0.1697  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.5067  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.4405  m2_loss_mask_8: 0.1678  m2_loss_dice_8: 1.241    time: 1.5489  last_time: 1.6057  data_time: 0.0669  last_data_time: 0.0930   lr: 0.0001  max_mem: 35174M
[10/15 16:17:03] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:25:45 (1.5489 s / it)
[10/15 16:17:03] d2.engine.hooks INFO: Total training time: 0:25:55 (0:00:09 on hooks)
[10/15 16:17:03] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/15 16:17:03] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/15 16:17:03] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/15 16:17:03] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/15 16:17:03] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/15 16:18:50] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalkbc4c9za ...
[10/15 16:19:43] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.656 | 80.504 | 69.438 |      19       |
| Things | 46.254 | 79.575 | 58.343 |       8       |
| Stuff  | 64.221 | 81.180 | 77.507 |      11       |
[10/15 16:19:43] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.177 | 97.581 | 99.586 |     Stuff     |
| class_8  | 70.939 | 83.249 | 85.214 |     Stuff     |
| class_11 | 87.085 | 88.440 | 98.468 |     Stuff     |
| class_12 | 41.166 | 80.127 | 51.376 |     Stuff     |
| class_13 | 37.500 | 75.807 | 49.468 |     Stuff     |
| class_17 | 45.584 | 63.976 | 71.253 |     Stuff     |
| class_19 | 48.348 | 68.873 | 70.199 |     Stuff     |
| class_20 | 67.717 | 77.975 | 86.845 |     Stuff     |
| class_21 | 89.133 | 90.058 | 98.973 |     Stuff     |
| class_22 | 34.673 | 75.383 | 45.996 |     Stuff     |
| class_23 | 87.113 | 91.509 | 95.196 |     Stuff     |
| class_24 | 50.379 | 75.930 | 66.350 |    Things     |
| class_25 | 47.992 | 73.473 | 65.320 |    Things     |
| class_26 | 62.298 | 82.041 | 75.936 |    Things     |
| class_27 | 46.922 | 88.233 | 53.179 |    Things     |
| class_28 | 54.115 | 87.755 | 61.667 |    Things     |
| class_31 | 29.903 | 85.438 | 35.000 |    Things     |
| class_32 | 36.775 | 73.244 | 50.209 |    Things     |
| class_33 | 41.646 | 70.488 | 59.083 |    Things     |
[10/15 16:19:43] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/15 16:19:43] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/15 16:19:43] d2.evaluation.testing INFO: copypaste: 56.6562,80.5041,69.4377,46.2539,79.5751,58.3430,64.2215,81.1798,77.5066,97.1768,97.5808,99.5859,70.9391,83.2486,85.2136,87.0851,88.4402,98.4678,41.1663,80.1273,51.3761,37.5005,75.8074,49.4681,45.5845,63.9759,71.2526,48.3481,68.8733,70.1987,67.7170,77.9746,86.8449,89.1330,90.0577,98.9733,34.6730,75.3827,45.9959,87.1126,91.5091,95.1955,50.3794,75.9297,66.3501,47.9921,73.4725,65.3199,62.2984,82.0406,75.9361,46.9216,88.2330,53.1792,54.1154,87.7547,61.6667,29.9032,85.4378,35.0000,36.7755,73.2445,50.2092,41.6459,70.4876,59.0826
