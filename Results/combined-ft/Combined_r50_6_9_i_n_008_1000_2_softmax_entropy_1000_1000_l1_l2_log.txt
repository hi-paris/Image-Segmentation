[09/30 23:54:19] detectron2 INFO: Rank of current process: 0. World size: 2
[09/30 23:54:20] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/30 23:54:20] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_entropy_1000_1000_1000_l1_l2.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[09/30 23:54:20] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_entropy_1000_1000_1000_l1_l2.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_1000_1000_l1_l2
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[09/30 23:54:20] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_1000_1000_l1_l2
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/30 23:54:20] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_1000_1000_l1_l2/config.yaml
[09/30 23:54:20] d2.utils.env INFO: Using a generated random seed 21073296
[09/30 23:54:25] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/30 23:54:25] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/30 23:54:25] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/30 23:54:25] d2.data.build INFO: Using training sampler TrainingSampler
[09/30 23:54:25] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/30 23:54:25] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/30 23:54:25] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/30 23:54:25] d2.data.build INFO: Making batched data loader with batch_size=4
[09/30 23:54:25] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/30 23:54:30] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/30 23:54:30] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 23:54:30] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 23:54:30] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 23:54:30] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/30 23:55:09] d2.utils.events INFO:  eta: 0:24:55  iter: 19  total_loss: 44.65  m1_loss_ce: 0.4996  m1_loss_mask: 0.1791  m1_loss_dice: 1.255  m1_loss_ce_0: 0.5882  m1_loss_mask_0: 0.2007  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.6971  m1_loss_mask_1: 0.1905  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.6291  m1_loss_mask_2: 0.1795  m1_loss_dice_2: 1.344  m1_loss_ce_3: 0.5471  m1_loss_mask_3: 0.1805  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5299  m1_loss_mask_4: 0.179  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.5263  m1_loss_mask_5: 0.1798  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.5398  m1_loss_mask_6: 0.1789  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.5449  m1_loss_mask_7: 0.1779  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4998  m1_loss_mask_8: 0.178  m1_loss_dice_8: 1.272  m2_loss_ce: 0.5227  m2_loss_mask: 0.169  m2_loss_dice: 1.278  m2_loss_ce_0: 0.6057  m2_loss_mask_0: 0.1961  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.7062  m2_loss_mask_1: 0.1891  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.6282  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5429  m2_loss_mask_3: 0.1689  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5378  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.525  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.538  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5289  m2_loss_mask_7: 0.1705  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5307  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.217  com_loss_ce: 1.782  com_loss_mask: 0.6924  com_loss_dice: 0.9697    time: 1.5321  last_time: 1.4643  data_time: 0.3524  last_data_time: 0.0537   lr: 0.0001  max_mem: 34519M
[09/30 23:55:41] d2.utils.events INFO:  eta: 0:24:50  iter: 39  total_loss: 43.75  m1_loss_ce: 0.5045  m1_loss_mask: 0.1716  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5713  m1_loss_mask_0: 0.2004  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.691  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5829  m1_loss_mask_2: 0.1759  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.5324  m1_loss_mask_3: 0.1764  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.4921  m1_loss_mask_4: 0.1761  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.4934  m1_loss_mask_5: 0.1711  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4835  m1_loss_mask_6: 0.1723  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.4696  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.4932  m1_loss_mask_8: 0.1709  m1_loss_dice_8: 1.205  m2_loss_ce: 0.4892  m2_loss_mask: 0.1686  m2_loss_dice: 1.228  m2_loss_ce_0: 0.6199  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.417  m2_loss_ce_1: 0.6845  m2_loss_mask_1: 0.1825  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5903  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5502  m2_loss_mask_3: 0.1698  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5204  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.4998  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.4841  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.4808  m2_loss_mask_7: 0.1679  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.491  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.248  com_loss_ce: 1.775  com_loss_mask: 0.6924  com_loss_dice: 0.9717    time: 1.5529  last_time: 1.6150  data_time: 0.0877  last_data_time: 0.1231   lr: 0.0001  max_mem: 34664M
[09/30 23:56:13] d2.utils.events INFO:  eta: 0:24:34  iter: 59  total_loss: 43.32  m1_loss_ce: 0.5295  m1_loss_mask: 0.1689  m1_loss_dice: 1.202  m1_loss_ce_0: 0.6331  m1_loss_mask_0: 0.1929  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6444  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5952  m1_loss_mask_2: 0.1748  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5723  m1_loss_mask_3: 0.172  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.5287  m1_loss_mask_4: 0.1715  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.5459  m1_loss_mask_5: 0.1697  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.5232  m1_loss_mask_6: 0.171  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.5234  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.512  m1_loss_mask_8: 0.1701  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4851  m2_loss_mask: 0.1664  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6339  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6987  m2_loss_mask_1: 0.1813  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.6029  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5609  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.534  m2_loss_mask_4: 0.1645  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5041  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5175  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.4934  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.4823  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.227  com_loss_ce: 1.779  com_loss_mask: 0.6924  com_loss_dice: 0.9704    time: 1.5656  last_time: 1.6946  data_time: 0.0796  last_data_time: 0.1739   lr: 0.0001  max_mem: 35676M
[09/30 23:56:45] d2.utils.events INFO:  eta: 0:24:13  iter: 79  total_loss: 42.35  m1_loss_ce: 0.5066  m1_loss_mask: 0.1625  m1_loss_dice: 1.164  m1_loss_ce_0: 0.5799  m1_loss_mask_0: 0.1988  m1_loss_dice_0: 1.389  m1_loss_ce_1: 0.6374  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.28  m1_loss_ce_2: 0.576  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.215  m1_loss_ce_3: 0.5267  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.5318  m1_loss_mask_4: 0.1707  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.5246  m1_loss_mask_5: 0.169  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.5046  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.4708  m1_loss_mask_7: 0.1661  m1_loss_dice_7: 1.178  m1_loss_ce_8: 0.4747  m1_loss_mask_8: 0.1683  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4609  m2_loss_mask: 0.165  m2_loss_dice: 1.205  m2_loss_ce_0: 0.6116  m2_loss_mask_0: 0.1958  m2_loss_dice_0: 1.415  m2_loss_ce_1: 0.631  m2_loss_mask_1: 0.1853  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.5679  m2_loss_mask_2: 0.1651  m2_loss_dice_2: 1.238  m2_loss_ce_3: 0.5534  m2_loss_mask_3: 0.1678  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.5339  m2_loss_mask_4: 0.1646  m2_loss_dice_4: 1.187  m2_loss_ce_5: 0.5046  m2_loss_mask_5: 0.1643  m2_loss_dice_5: 1.212  m2_loss_ce_6: 0.5001  m2_loss_mask_6: 0.1663  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4846  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4674  m2_loss_mask_8: 0.1655  m2_loss_dice_8: 1.215  com_loss_ce: 1.778  com_loss_mask: 0.6924  com_loss_dice: 0.9685    time: 1.5737  last_time: 1.6346  data_time: 0.0789  last_data_time: 0.1004   lr: 0.0001  max_mem: 35676M
[09/30 23:57:17] d2.utils.events INFO:  eta: 0:23:38  iter: 99  total_loss: 42.25  m1_loss_ce: 0.5106  m1_loss_mask: 0.1574  m1_loss_dice: 1.226  m1_loss_ce_0: 0.5945  m1_loss_mask_0: 0.1882  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6409  m1_loss_mask_1: 0.173  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.5599  m1_loss_mask_2: 0.1625  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.4968  m1_loss_mask_3: 0.1602  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.5075  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.197  m1_loss_ce_5: 0.5006  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.477  m1_loss_mask_6: 0.16  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.4623  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.4369  m1_loss_mask_8: 0.1575  m1_loss_dice_8: 1.176  m2_loss_ce: 0.4618  m2_loss_mask: 0.1588  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6077  m2_loss_mask_0: 0.195  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6492  m2_loss_mask_1: 0.1747  m2_loss_dice_1: 1.35  m2_loss_ce_2: 0.587  m2_loss_mask_2: 0.1648  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5571  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.4863  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.4876  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.4741  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.4844  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4683  m2_loss_mask_8: 0.1584  m2_loss_dice_8: 1.226  com_loss_ce: 1.749  com_loss_mask: 0.6924  com_loss_dice: 0.9705    time: 1.5767  last_time: 1.6407  data_time: 0.0732  last_data_time: 0.0560   lr: 0.0001  max_mem: 35676M
[09/30 23:57:49] d2.utils.events INFO:  eta: 0:23:17  iter: 119  total_loss: 44.85  m1_loss_ce: 0.5284  m1_loss_mask: 0.164  m1_loss_dice: 1.248  m1_loss_ce_0: 0.6256  m1_loss_mask_0: 0.1984  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.7242  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.5917  m1_loss_mask_2: 0.1721  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5569  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.5129  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5335  m1_loss_mask_5: 0.1642  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5449  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.245  m1_loss_ce_7: 0.4913  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.272  m1_loss_ce_8: 0.5329  m1_loss_mask_8: 0.1616  m1_loss_dice_8: 1.258  m2_loss_ce: 0.5032  m2_loss_mask: 0.1633  m2_loss_dice: 1.255  m2_loss_ce_0: 0.64  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6963  m2_loss_mask_1: 0.1895  m2_loss_dice_1: 1.439  m2_loss_ce_2: 0.6443  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.356  m2_loss_ce_3: 0.5879  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.5681  m2_loss_mask_4: 0.1632  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.5321  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.4954  m2_loss_mask_6: 0.1641  m2_loss_dice_6: 1.26  m2_loss_ce_7: 0.5288  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.5216  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.248  com_loss_ce: 1.782  com_loss_mask: 0.6923  com_loss_dice: 0.9711    time: 1.5828  last_time: 1.5462  data_time: 0.0962  last_data_time: 0.0446   lr: 0.0001  max_mem: 35676M
[09/30 23:58:21] d2.utils.events INFO:  eta: 0:22:47  iter: 139  total_loss: 41.26  m1_loss_ce: 0.4328  m1_loss_mask: 0.1563  m1_loss_dice: 1.175  m1_loss_ce_0: 0.54  m1_loss_mask_0: 0.1923  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.6553  m1_loss_mask_1: 0.1763  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5327  m1_loss_mask_2: 0.1642  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.5237  m1_loss_mask_3: 0.1599  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4359  m1_loss_mask_4: 0.1567  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.4581  m1_loss_mask_5: 0.1582  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.4593  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.4502  m1_loss_mask_7: 0.1592  m1_loss_dice_7: 1.178  m1_loss_ce_8: 0.4563  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.165  m2_loss_ce: 0.4588  m2_loss_mask: 0.1603  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6138  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6756  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.33  m2_loss_ce_2: 0.5735  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5276  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.4865  m2_loss_mask_4: 0.1601  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.4718  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.4628  m2_loss_mask_6: 0.1598  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.4603  m2_loss_mask_7: 0.1626  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4626  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.195  com_loss_ce: 1.769  com_loss_mask: 0.6924  com_loss_dice: 0.9692    time: 1.5818  last_time: 1.4129  data_time: 0.0796  last_data_time: 0.0574   lr: 0.0001  max_mem: 35676M
[09/30 23:58:52] d2.utils.events INFO:  eta: 0:22:13  iter: 159  total_loss: 42.53  m1_loss_ce: 0.453  m1_loss_mask: 0.1562  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5536  m1_loss_mask_0: 0.1853  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6085  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.5643  m1_loss_mask_2: 0.1575  m1_loss_dice_2: 1.339  m1_loss_ce_3: 0.493  m1_loss_mask_3: 0.1592  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.4682  m1_loss_mask_4: 0.1577  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.4911  m1_loss_mask_5: 0.1562  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.4846  m1_loss_mask_6: 0.1571  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.4427  m1_loss_mask_7: 0.1573  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.436  m1_loss_mask_8: 0.1573  m1_loss_dice_8: 1.223  m2_loss_ce: 0.4374  m2_loss_mask: 0.1628  m2_loss_dice: 1.23  m2_loss_ce_0: 0.5667  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6484  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5588  m2_loss_mask_2: 0.1702  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.4906  m2_loss_mask_3: 0.164  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.4823  m2_loss_mask_4: 0.1622  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.4602  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.4336  m2_loss_mask_6: 0.1625  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.472  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.4333  m2_loss_mask_8: 0.1626  m2_loss_dice_8: 1.262  com_loss_ce: 1.769  com_loss_mask: 0.6924  com_loss_dice: 0.9721    time: 1.5821  last_time: 1.6334  data_time: 0.0735  last_data_time: 0.0654   lr: 0.0001  max_mem: 35676M
[09/30 23:59:24] d2.utils.events INFO:  eta: 0:21:43  iter: 179  total_loss: 41.68  m1_loss_ce: 0.4621  m1_loss_mask: 0.1633  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5755  m1_loss_mask_0: 0.1936  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6046  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5738  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.4885  m1_loss_mask_3: 0.1681  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4641  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.467  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4618  m1_loss_mask_6: 0.165  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.4775  m1_loss_mask_7: 0.1645  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4668  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.203  m2_loss_ce: 0.4418  m2_loss_mask: 0.168  m2_loss_dice: 1.194  m2_loss_ce_0: 0.5831  m2_loss_mask_0: 0.1954  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.6441  m2_loss_mask_1: 0.1836  m2_loss_dice_1: 1.338  m2_loss_ce_2: 0.543  m2_loss_mask_2: 0.1694  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5129  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.217  m2_loss_ce_4: 0.476  m2_loss_mask_4: 0.1646  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.4791  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4426  m2_loss_mask_6: 0.1652  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.453  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4584  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.211  com_loss_ce: 1.753  com_loss_mask: 0.6924  com_loss_dice: 0.9708    time: 1.5832  last_time: 1.5534  data_time: 0.0771  last_data_time: 0.0508   lr: 0.0001  max_mem: 35676M
[09/30 23:59:56] d2.utils.events INFO:  eta: 0:21:11  iter: 199  total_loss: 45.18  m1_loss_ce: 0.5536  m1_loss_mask: 0.169  m1_loss_dice: 1.292  m1_loss_ce_0: 0.6233  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.478  m1_loss_ce_1: 0.6552  m1_loss_mask_1: 0.182  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.6194  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.364  m1_loss_ce_3: 0.536  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.323  m1_loss_ce_4: 0.5102  m1_loss_mask_4: 0.1708  m1_loss_dice_4: 1.309  m1_loss_ce_5: 0.4954  m1_loss_mask_5: 0.1711  m1_loss_dice_5: 1.286  m1_loss_ce_6: 0.5173  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.307  m1_loss_ce_7: 0.495  m1_loss_mask_7: 0.169  m1_loss_dice_7: 1.313  m1_loss_ce_8: 0.5411  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.277  m2_loss_ce: 0.4904  m2_loss_mask: 0.1649  m2_loss_dice: 1.348  m2_loss_ce_0: 0.6202  m2_loss_mask_0: 0.1938  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.7044  m2_loss_mask_1: 0.1847  m2_loss_dice_1: 1.45  m2_loss_ce_2: 0.63  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.5492  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.339  m2_loss_ce_4: 0.5511  m2_loss_mask_4: 0.1634  m2_loss_dice_4: 1.326  m2_loss_ce_5: 0.538  m2_loss_mask_5: 0.1591  m2_loss_dice_5: 1.308  m2_loss_ce_6: 0.51  m2_loss_mask_6: 0.1604  m2_loss_dice_6: 1.37  m2_loss_ce_7: 0.4905  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.325  m2_loss_ce_8: 0.5065  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.319  com_loss_ce: 1.782  com_loss_mask: 0.6924  com_loss_dice: 0.9735    time: 1.5850  last_time: 1.5817  data_time: 0.0798  last_data_time: 0.0562   lr: 0.0001  max_mem: 35676M
[10/01 00:00:29] d2.utils.events INFO:  eta: 0:20:40  iter: 219  total_loss: 44.84  m1_loss_ce: 0.5382  m1_loss_mask: 0.1612  m1_loss_dice: 1.269  m1_loss_ce_0: 0.5434  m1_loss_mask_0: 0.1806  m1_loss_dice_0: 1.492  m1_loss_ce_1: 0.6637  m1_loss_mask_1: 0.1721  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.5913  m1_loss_mask_2: 0.1673  m1_loss_dice_2: 1.343  m1_loss_ce_3: 0.5359  m1_loss_mask_3: 0.164  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.5431  m1_loss_mask_4: 0.163  m1_loss_dice_4: 1.28  m1_loss_ce_5: 0.5043  m1_loss_mask_5: 0.1617  m1_loss_dice_5: 1.256  m1_loss_ce_6: 0.5323  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.5007  m1_loss_mask_7: 0.1608  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.5164  m1_loss_mask_8: 0.1595  m1_loss_dice_8: 1.256  m2_loss_ce: 0.4866  m2_loss_mask: 0.1633  m2_loss_dice: 1.293  m2_loss_ce_0: 0.6245  m2_loss_mask_0: 0.1887  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.7084  m2_loss_mask_1: 0.1764  m2_loss_dice_1: 1.443  m2_loss_ce_2: 0.6152  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.359  m2_loss_ce_3: 0.5432  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5266  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.318  m2_loss_ce_5: 0.5469  m2_loss_mask_5: 0.1609  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.5123  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.5054  m2_loss_mask_7: 0.1631  m2_loss_dice_7: 1.283  m2_loss_ce_8: 0.4962  m2_loss_mask_8: 0.1609  m2_loss_dice_8: 1.26  com_loss_ce: 1.785  com_loss_mask: 0.6924  com_loss_dice: 0.9729    time: 1.5861  last_time: 1.5810  data_time: 0.0654  last_data_time: 0.0648   lr: 0.0001  max_mem: 35676M
[10/01 00:01:01] d2.utils.events INFO:  eta: 0:20:08  iter: 239  total_loss: 45.56  m1_loss_ce: 0.512  m1_loss_mask: 0.1673  m1_loss_dice: 1.238  m1_loss_ce_0: 0.6117  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.589  m1_loss_ce_1: 0.6614  m1_loss_mask_1: 0.1842  m1_loss_dice_1: 1.464  m1_loss_ce_2: 0.618  m1_loss_mask_2: 0.1758  m1_loss_dice_2: 1.371  m1_loss_ce_3: 0.5469  m1_loss_mask_3: 0.1754  m1_loss_dice_3: 1.316  m1_loss_ce_4: 0.5135  m1_loss_mask_4: 0.1746  m1_loss_dice_4: 1.34  m1_loss_ce_5: 0.5115  m1_loss_mask_5: 0.1708  m1_loss_dice_5: 1.293  m1_loss_ce_6: 0.4942  m1_loss_mask_6: 0.1738  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.4823  m1_loss_mask_7: 0.1695  m1_loss_dice_7: 1.295  m1_loss_ce_8: 0.5112  m1_loss_mask_8: 0.1693  m1_loss_dice_8: 1.306  m2_loss_ce: 0.4665  m2_loss_mask: 0.1696  m2_loss_dice: 1.361  m2_loss_ce_0: 0.6703  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.593  m2_loss_ce_1: 0.688  m2_loss_mask_1: 0.1899  m2_loss_dice_1: 1.496  m2_loss_ce_2: 0.6193  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.408  m2_loss_ce_3: 0.5539  m2_loss_mask_3: 0.1771  m2_loss_dice_3: 1.365  m2_loss_ce_4: 0.539  m2_loss_mask_4: 0.1719  m2_loss_dice_4: 1.349  m2_loss_ce_5: 0.5048  m2_loss_mask_5: 0.1687  m2_loss_dice_5: 1.336  m2_loss_ce_6: 0.4887  m2_loss_mask_6: 0.1701  m2_loss_dice_6: 1.326  m2_loss_ce_7: 0.4938  m2_loss_mask_7: 0.1711  m2_loss_dice_7: 1.341  m2_loss_ce_8: 0.4973  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.346  com_loss_ce: 1.772  com_loss_mask: 0.6924  com_loss_dice: 0.9751    time: 1.5865  last_time: 1.6952  data_time: 0.0761  last_data_time: 0.1408   lr: 0.0001  max_mem: 35676M
[10/01 00:01:33] d2.utils.events INFO:  eta: 0:19:38  iter: 259  total_loss: 43.05  m1_loss_ce: 0.4657  m1_loss_mask: 0.1771  m1_loss_dice: 1.215  m1_loss_ce_0: 0.6042  m1_loss_mask_0: 0.2053  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.5812  m1_loss_mask_1: 0.191  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.5735  m1_loss_mask_2: 0.1808  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.4981  m1_loss_mask_3: 0.1827  m1_loss_dice_3: 1.268  m1_loss_ce_4: 0.47  m1_loss_mask_4: 0.1786  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.4327  m1_loss_mask_5: 0.1773  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.4613  m1_loss_mask_6: 0.1779  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.46  m1_loss_mask_7: 0.1788  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.4486  m1_loss_mask_8: 0.1794  m1_loss_dice_8: 1.18  m2_loss_ce: 0.4538  m2_loss_mask: 0.1834  m2_loss_dice: 1.261  m2_loss_ce_0: 0.5994  m2_loss_mask_0: 0.2108  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6298  m2_loss_mask_1: 0.2005  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.5278  m2_loss_mask_2: 0.1854  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.4938  m2_loss_mask_3: 0.1832  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.4859  m2_loss_mask_4: 0.1814  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.4848  m2_loss_mask_5: 0.1809  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4513  m2_loss_mask_6: 0.1823  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.468  m2_loss_mask_7: 0.1841  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4614  m2_loss_mask_8: 0.1817  m2_loss_dice_8: 1.235  com_loss_ce: 1.741  com_loss_mask: 0.6924  com_loss_dice: 0.97    time: 1.5882  last_time: 1.5808  data_time: 0.0875  last_data_time: 0.0889   lr: 0.0001  max_mem: 35952M
[10/01 00:02:05] d2.utils.events INFO:  eta: 0:19:06  iter: 279  total_loss: 45.5  m1_loss_ce: 0.5023  m1_loss_mask: 0.1708  m1_loss_dice: 1.295  m1_loss_ce_0: 0.5551  m1_loss_mask_0: 0.2064  m1_loss_dice_0: 1.515  m1_loss_ce_1: 0.6749  m1_loss_mask_1: 0.1887  m1_loss_dice_1: 1.441  m1_loss_ce_2: 0.5911  m1_loss_mask_2: 0.1791  m1_loss_dice_2: 1.372  m1_loss_ce_3: 0.5507  m1_loss_mask_3: 0.1756  m1_loss_dice_3: 1.33  m1_loss_ce_4: 0.5374  m1_loss_mask_4: 0.175  m1_loss_dice_4: 1.324  m1_loss_ce_5: 0.5191  m1_loss_mask_5: 0.1742  m1_loss_dice_5: 1.29  m1_loss_ce_6: 0.5204  m1_loss_mask_6: 0.1737  m1_loss_dice_6: 1.308  m1_loss_ce_7: 0.4938  m1_loss_mask_7: 0.1728  m1_loss_dice_7: 1.303  m1_loss_ce_8: 0.5022  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.287  m2_loss_ce: 0.4559  m2_loss_mask: 0.1732  m2_loss_dice: 1.338  m2_loss_ce_0: 0.5908  m2_loss_mask_0: 0.2046  m2_loss_dice_0: 1.571  m2_loss_ce_1: 0.6769  m2_loss_mask_1: 0.1899  m2_loss_dice_1: 1.469  m2_loss_ce_2: 0.5559  m2_loss_mask_2: 0.1783  m2_loss_dice_2: 1.373  m2_loss_ce_3: 0.5214  m2_loss_mask_3: 0.1757  m2_loss_dice_3: 1.37  m2_loss_ce_4: 0.5028  m2_loss_mask_4: 0.1726  m2_loss_dice_4: 1.347  m2_loss_ce_5: 0.4949  m2_loss_mask_5: 0.1714  m2_loss_dice_5: 1.34  m2_loss_ce_6: 0.4868  m2_loss_mask_6: 0.172  m2_loss_dice_6: 1.329  m2_loss_ce_7: 0.4806  m2_loss_mask_7: 0.1757  m2_loss_dice_7: 1.324  m2_loss_ce_8: 0.4494  m2_loss_mask_8: 0.1741  m2_loss_dice_8: 1.304  com_loss_ce: 1.764  com_loss_mask: 0.6924  com_loss_dice: 0.9716    time: 1.5889  last_time: 1.5764  data_time: 0.0912  last_data_time: 0.0583   lr: 0.0001  max_mem: 35952M
[10/01 00:02:36] d2.utils.events INFO:  eta: 0:18:33  iter: 299  total_loss: 41  m1_loss_ce: 0.4665  m1_loss_mask: 0.1723  m1_loss_dice: 1.14  m1_loss_ce_0: 0.5324  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.326  m1_loss_ce_1: 0.6118  m1_loss_mask_1: 0.1867  m1_loss_dice_1: 1.243  m1_loss_ce_2: 0.562  m1_loss_mask_2: 0.1762  m1_loss_dice_2: 1.167  m1_loss_ce_3: 0.4925  m1_loss_mask_3: 0.1756  m1_loss_dice_3: 1.147  m1_loss_ce_4: 0.4645  m1_loss_mask_4: 0.1757  m1_loss_dice_4: 1.141  m1_loss_ce_5: 0.4843  m1_loss_mask_5: 0.1719  m1_loss_dice_5: 1.137  m1_loss_ce_6: 0.4504  m1_loss_mask_6: 0.1738  m1_loss_dice_6: 1.089  m1_loss_ce_7: 0.4341  m1_loss_mask_7: 0.175  m1_loss_dice_7: 1.107  m1_loss_ce_8: 0.4431  m1_loss_mask_8: 0.1761  m1_loss_dice_8: 1.115  m2_loss_ce: 0.4444  m2_loss_mask: 0.1663  m2_loss_dice: 1.118  m2_loss_ce_0: 0.5714  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.33  m2_loss_ce_1: 0.6686  m2_loss_mask_1: 0.1824  m2_loss_dice_1: 1.278  m2_loss_ce_2: 0.5539  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.203  m2_loss_ce_3: 0.5188  m2_loss_mask_3: 0.1709  m2_loss_dice_3: 1.149  m2_loss_ce_4: 0.4858  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.137  m2_loss_ce_5: 0.4495  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.139  m2_loss_ce_6: 0.4505  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.139  m2_loss_ce_7: 0.4388  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.104  m2_loss_ce_8: 0.4369  m2_loss_mask_8: 0.168  m2_loss_dice_8: 1.097  com_loss_ce: 1.745  com_loss_mask: 0.6924  com_loss_dice: 0.9702    time: 1.5871  last_time: 1.5376  data_time: 0.0721  last_data_time: 0.0816   lr: 0.0001  max_mem: 35952M
[10/01 00:03:08] d2.utils.events INFO:  eta: 0:18:02  iter: 319  total_loss: 43.61  m1_loss_ce: 0.4899  m1_loss_mask: 0.1642  m1_loss_dice: 1.175  m1_loss_ce_0: 0.578  m1_loss_mask_0: 0.188  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.6292  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.5958  m1_loss_mask_2: 0.1683  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.5411  m1_loss_mask_3: 0.171  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.513  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4999  m1_loss_mask_5: 0.1613  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.4689  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4844  m1_loss_mask_7: 0.1601  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.4977  m1_loss_mask_8: 0.1638  m1_loss_dice_8: 1.144  m2_loss_ce: 0.4384  m2_loss_mask: 0.1627  m2_loss_dice: 1.224  m2_loss_ce_0: 0.5838  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6873  m2_loss_mask_1: 0.1774  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5592  m2_loss_mask_2: 0.1672  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.5087  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.4905  m2_loss_mask_4: 0.1613  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.4856  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.4659  m2_loss_mask_6: 0.1688  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4841  m2_loss_mask_7: 0.1607  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4555  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.229  com_loss_ce: 1.774  com_loss_mask: 0.6924  com_loss_dice: 0.9699    time: 1.5875  last_time: 1.6054  data_time: 0.0731  last_data_time: 0.0551   lr: 0.0001  max_mem: 35952M
[10/01 00:03:40] d2.utils.events INFO:  eta: 0:17:29  iter: 339  total_loss: 43.49  m1_loss_ce: 0.49  m1_loss_mask: 0.1709  m1_loss_dice: 1.199  m1_loss_ce_0: 0.5676  m1_loss_mask_0: 0.2001  m1_loss_dice_0: 1.482  m1_loss_ce_1: 0.6372  m1_loss_mask_1: 0.1866  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.6227  m1_loss_mask_2: 0.178  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.5476  m1_loss_mask_3: 0.1747  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5096  m1_loss_mask_4: 0.1769  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.5103  m1_loss_mask_5: 0.1752  m1_loss_dice_5: 1.246  m1_loss_ce_6: 0.5024  m1_loss_mask_6: 0.1726  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.5084  m1_loss_mask_7: 0.17  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5391  m1_loss_mask_8: 0.1702  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5198  m2_loss_mask: 0.1677  m2_loss_dice: 1.238  m2_loss_ce_0: 0.623  m2_loss_mask_0: 0.2034  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.7186  m2_loss_mask_1: 0.1898  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.625  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5802  m2_loss_mask_3: 0.1745  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.5628  m2_loss_mask_4: 0.1691  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.5656  m2_loss_mask_5: 0.1714  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.531  m2_loss_mask_6: 0.1709  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5536  m2_loss_mask_7: 0.1681  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4989  m2_loss_mask_8: 0.1694  m2_loss_dice_8: 1.241  com_loss_ce: 1.765  com_loss_mask: 0.6924  com_loss_dice: 0.9724    time: 1.5866  last_time: 1.6256  data_time: 0.0631  last_data_time: 0.0551   lr: 0.0001  max_mem: 35952M
[10/01 00:04:12] d2.utils.events INFO:  eta: 0:16:58  iter: 359  total_loss: 43.14  m1_loss_ce: 0.4643  m1_loss_mask: 0.1653  m1_loss_dice: 1.267  m1_loss_ce_0: 0.5544  m1_loss_mask_0: 0.1944  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.6263  m1_loss_mask_1: 0.187  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.5564  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5243  m1_loss_mask_3: 0.1679  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.4922  m1_loss_mask_4: 0.1694  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4627  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4708  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.251  m1_loss_ce_7: 0.4644  m1_loss_mask_7: 0.1671  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.4486  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.213  m2_loss_ce: 0.4932  m2_loss_mask: 0.1671  m2_loss_dice: 1.23  m2_loss_ce_0: 0.5957  m2_loss_mask_0: 0.1995  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6677  m2_loss_mask_1: 0.189  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.5987  m2_loss_mask_2: 0.1728  m2_loss_dice_2: 1.285  m2_loss_ce_3: 0.4992  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.4978  m2_loss_mask_4: 0.1669  m2_loss_dice_4: 1.278  m2_loss_ce_5: 0.4859  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.484  m2_loss_mask_6: 0.1688  m2_loss_dice_6: 1.275  m2_loss_ce_7: 0.4703  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4594  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.266  com_loss_ce: 1.763  com_loss_mask: 0.6924  com_loss_dice: 0.972    time: 1.5873  last_time: 1.5236  data_time: 0.0746  last_data_time: 0.0432   lr: 0.0001  max_mem: 35952M
[10/01 00:04:43] d2.utils.events INFO:  eta: 0:16:25  iter: 379  total_loss: 44.88  m1_loss_ce: 0.451  m1_loss_mask: 0.1581  m1_loss_dice: 1.3  m1_loss_ce_0: 0.546  m1_loss_mask_0: 0.1757  m1_loss_dice_0: 1.543  m1_loss_ce_1: 0.5922  m1_loss_mask_1: 0.1687  m1_loss_dice_1: 1.451  m1_loss_ce_2: 0.5767  m1_loss_mask_2: 0.1588  m1_loss_dice_2: 1.379  m1_loss_ce_3: 0.526  m1_loss_mask_3: 0.1627  m1_loss_dice_3: 1.323  m1_loss_ce_4: 0.4853  m1_loss_mask_4: 0.1623  m1_loss_dice_4: 1.297  m1_loss_ce_5: 0.4876  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.324  m1_loss_ce_6: 0.4616  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.321  m1_loss_ce_7: 0.4408  m1_loss_mask_7: 0.1589  m1_loss_dice_7: 1.28  m1_loss_ce_8: 0.4168  m1_loss_mask_8: 0.1609  m1_loss_dice_8: 1.298  m2_loss_ce: 0.4529  m2_loss_mask: 0.1575  m2_loss_dice: 1.327  m2_loss_ce_0: 0.6415  m2_loss_mask_0: 0.1865  m2_loss_dice_0: 1.54  m2_loss_ce_1: 0.6547  m2_loss_mask_1: 0.1777  m2_loss_dice_1: 1.484  m2_loss_ce_2: 0.5941  m2_loss_mask_2: 0.1598  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.5188  m2_loss_mask_3: 0.159  m2_loss_dice_3: 1.34  m2_loss_ce_4: 0.4991  m2_loss_mask_4: 0.1571  m2_loss_dice_4: 1.343  m2_loss_ce_5: 0.4928  m2_loss_mask_5: 0.1539  m2_loss_dice_5: 1.332  m2_loss_ce_6: 0.4866  m2_loss_mask_6: 0.1568  m2_loss_dice_6: 1.323  m2_loss_ce_7: 0.4719  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.305  m2_loss_ce_8: 0.4476  m2_loss_mask_8: 0.1594  m2_loss_dice_8: 1.341  com_loss_ce: 1.771  com_loss_mask: 0.6924  com_loss_dice: 0.9737    time: 1.5863  last_time: 1.6035  data_time: 0.0633  last_data_time: 0.0590   lr: 0.0001  max_mem: 35952M
[10/01 00:05:15] d2.utils.events INFO:  eta: 0:15:54  iter: 399  total_loss: 42.44  m1_loss_ce: 0.481  m1_loss_mask: 0.1664  m1_loss_dice: 1.157  m1_loss_ce_0: 0.6044  m1_loss_mask_0: 0.2055  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.628  m1_loss_mask_1: 0.1902  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.581  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.5128  m1_loss_mask_3: 0.1784  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.471  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.4765  m1_loss_mask_5: 0.1692  m1_loss_dice_5: 1.186  m1_loss_ce_6: 0.4809  m1_loss_mask_6: 0.1704  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.4779  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.4661  m1_loss_mask_8: 0.1686  m1_loss_dice_8: 1.154  m2_loss_ce: 0.4852  m2_loss_mask: 0.1725  m2_loss_dice: 1.221  m2_loss_ce_0: 0.6144  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.395  m2_loss_ce_1: 0.7152  m2_loss_mask_1: 0.1856  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.6001  m2_loss_mask_2: 0.1745  m2_loss_dice_2: 1.248  m2_loss_ce_3: 0.5419  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.5173  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.212  m2_loss_ce_5: 0.5288  m2_loss_mask_5: 0.1702  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5025  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4933  m2_loss_mask_7: 0.1748  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.5067  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.194  com_loss_ce: 1.789  com_loss_mask: 0.6924  com_loss_dice: 0.9716    time: 1.5871  last_time: 1.6401  data_time: 0.0758  last_data_time: 0.0614   lr: 0.0001  max_mem: 35952M
[10/01 00:05:48] d2.utils.events INFO:  eta: 0:15:22  iter: 419  total_loss: 42.17  m1_loss_ce: 0.4897  m1_loss_mask: 0.16  m1_loss_dice: 1.166  m1_loss_ce_0: 0.561  m1_loss_mask_0: 0.1856  m1_loss_dice_0: 1.374  m1_loss_ce_1: 0.6169  m1_loss_mask_1: 0.1719  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5826  m1_loss_mask_2: 0.1647  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.5003  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.4645  m1_loss_mask_4: 0.1629  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4407  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4465  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.4665  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.155  m1_loss_ce_8: 0.4772  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4627  m2_loss_mask: 0.1618  m2_loss_dice: 1.212  m2_loss_ce_0: 0.6118  m2_loss_mask_0: 0.191  m2_loss_dice_0: 1.379  m2_loss_ce_1: 0.6347  m2_loss_mask_1: 0.1754  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5634  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.4993  m2_loss_mask_3: 0.1659  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.506  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.4979  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.4769  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.18  m2_loss_ce_7: 0.4794  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.4626  m2_loss_mask_8: 0.1602  m2_loss_dice_8: 1.201  com_loss_ce: 1.758  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5882  last_time: 1.9203  data_time: 0.0799  last_data_time: 0.0571   lr: 0.0001  max_mem: 35952M
[10/01 00:06:20] d2.utils.events INFO:  eta: 0:14:50  iter: 439  total_loss: 44.03  m1_loss_ce: 0.4725  m1_loss_mask: 0.1603  m1_loss_dice: 1.277  m1_loss_ce_0: 0.5823  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.478  m1_loss_ce_1: 0.6427  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.5451  m1_loss_mask_2: 0.162  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.5079  m1_loss_mask_3: 0.16  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.4833  m1_loss_mask_4: 0.1626  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.493  m1_loss_mask_5: 0.1609  m1_loss_dice_5: 1.294  m1_loss_ce_6: 0.484  m1_loss_mask_6: 0.1611  m1_loss_dice_6: 1.303  m1_loss_ce_7: 0.476  m1_loss_mask_7: 0.1591  m1_loss_dice_7: 1.261  m1_loss_ce_8: 0.4667  m1_loss_mask_8: 0.1608  m1_loss_dice_8: 1.248  m2_loss_ce: 0.5072  m2_loss_mask: 0.1678  m2_loss_dice: 1.304  m2_loss_ce_0: 0.633  m2_loss_mask_0: 0.1958  m2_loss_dice_0: 1.517  m2_loss_ce_1: 0.6866  m2_loss_mask_1: 0.1867  m2_loss_dice_1: 1.45  m2_loss_ce_2: 0.5998  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.399  m2_loss_ce_3: 0.5489  m2_loss_mask_3: 0.1677  m2_loss_dice_3: 1.348  m2_loss_ce_4: 0.5473  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.341  m2_loss_ce_5: 0.5286  m2_loss_mask_5: 0.1677  m2_loss_dice_5: 1.306  m2_loss_ce_6: 0.5002  m2_loss_mask_6: 0.1678  m2_loss_dice_6: 1.326  m2_loss_ce_7: 0.5295  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.298  m2_loss_ce_8: 0.4785  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.277  com_loss_ce: 1.779  com_loss_mask: 0.6924  com_loss_dice: 0.974    time: 1.5882  last_time: 1.5880  data_time: 0.0704  last_data_time: 0.0506   lr: 0.0001  max_mem: 35952M
[10/01 00:06:52] d2.utils.events INFO:  eta: 0:14:18  iter: 459  total_loss: 43.82  m1_loss_ce: 0.467  m1_loss_mask: 0.1603  m1_loss_dice: 1.239  m1_loss_ce_0: 0.6032  m1_loss_mask_0: 0.1988  m1_loss_dice_0: 1.442  m1_loss_ce_1: 0.6213  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.5591  m1_loss_mask_2: 0.1688  m1_loss_dice_2: 1.343  m1_loss_ce_3: 0.5131  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.4823  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.4731  m1_loss_mask_5: 0.1634  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4624  m1_loss_mask_6: 0.1565  m1_loss_dice_6: 1.266  m1_loss_ce_7: 0.4651  m1_loss_mask_7: 0.1588  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.4704  m1_loss_mask_8: 0.157  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4922  m2_loss_mask: 0.1667  m2_loss_dice: 1.319  m2_loss_ce_0: 0.6229  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.6983  m2_loss_mask_1: 0.1891  m2_loss_dice_1: 1.437  m2_loss_ce_2: 0.6024  m2_loss_mask_2: 0.1769  m2_loss_dice_2: 1.378  m2_loss_ce_3: 0.5527  m2_loss_mask_3: 0.171  m2_loss_dice_3: 1.347  m2_loss_ce_4: 0.5346  m2_loss_mask_4: 0.1687  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5102  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.309  m2_loss_ce_6: 0.5173  m2_loss_mask_6: 0.1688  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.4917  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.336  m2_loss_ce_8: 0.5095  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.279  com_loss_ce: 1.783  com_loss_mask: 0.6924  com_loss_dice: 0.9727    time: 1.5887  last_time: 1.5717  data_time: 0.0828  last_data_time: 0.1558   lr: 0.0001  max_mem: 35952M
[10/01 00:07:24] d2.utils.events INFO:  eta: 0:13:47  iter: 479  total_loss: 40.88  m1_loss_ce: 0.4192  m1_loss_mask: 0.1612  m1_loss_dice: 1.176  m1_loss_ce_0: 0.5233  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6006  m1_loss_mask_1: 0.1746  m1_loss_dice_1: 1.296  m1_loss_ce_2: 0.5186  m1_loss_mask_2: 0.1684  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.4556  m1_loss_mask_3: 0.1674  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.4721  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.186  m1_loss_ce_5: 0.4387  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.4266  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4115  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.14  m1_loss_ce_8: 0.4154  m1_loss_mask_8: 0.1609  m1_loss_dice_8: 1.161  m2_loss_ce: 0.4367  m2_loss_mask: 0.1643  m2_loss_dice: 1.207  m2_loss_ce_0: 0.5888  m2_loss_mask_0: 0.1846  m2_loss_dice_0: 1.357  m2_loss_ce_1: 0.6578  m2_loss_mask_1: 0.1803  m2_loss_dice_1: 1.304  m2_loss_ce_2: 0.5715  m2_loss_mask_2: 0.1657  m2_loss_dice_2: 1.229  m2_loss_ce_3: 0.5067  m2_loss_mask_3: 0.1667  m2_loss_dice_3: 1.217  m2_loss_ce_4: 0.5179  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.497  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.4659  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.181  m2_loss_ce_7: 0.4784  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.194  m2_loss_ce_8: 0.4581  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.176  com_loss_ce: 1.762  com_loss_mask: 0.6925  com_loss_dice: 0.9693    time: 1.5891  last_time: 1.6048  data_time: 0.0878  last_data_time: 0.1174   lr: 0.0001  max_mem: 35952M
[10/01 00:07:56] d2.utils.events INFO:  eta: 0:13:15  iter: 499  total_loss: 43.55  m1_loss_ce: 0.505  m1_loss_mask: 0.1637  m1_loss_dice: 1.232  m1_loss_ce_0: 0.5621  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.41  m1_loss_ce_1: 0.624  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.348  m1_loss_ce_2: 0.5776  m1_loss_mask_2: 0.1663  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.4983  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.4695  m1_loss_mask_4: 0.165  m1_loss_dice_4: 1.285  m1_loss_ce_5: 0.4705  m1_loss_mask_5: 0.1649  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4604  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.4806  m1_loss_mask_7: 0.1639  m1_loss_dice_7: 1.247  m1_loss_ce_8: 0.4927  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.215  m2_loss_ce: 0.4632  m2_loss_mask: 0.1606  m2_loss_dice: 1.257  m2_loss_ce_0: 0.613  m2_loss_mask_0: 0.1955  m2_loss_dice_0: 1.491  m2_loss_ce_1: 0.6825  m2_loss_mask_1: 0.1848  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.613  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.531  m2_loss_mask_3: 0.1655  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.488  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5145  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.298  m2_loss_ce_6: 0.4994  m2_loss_mask_6: 0.1627  m2_loss_dice_6: 1.288  m2_loss_ce_7: 0.4712  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.285  m2_loss_ce_8: 0.4695  m2_loss_mask_8: 0.1619  m2_loss_dice_8: 1.293  com_loss_ce: 1.775  com_loss_mask: 0.6924  com_loss_dice: 0.9714    time: 1.5903  last_time: 1.6351  data_time: 0.1007  last_data_time: 0.1355   lr: 0.0001  max_mem: 35952M
[10/01 00:08:29] d2.utils.events INFO:  eta: 0:12:44  iter: 519  total_loss: 45.26  m1_loss_ce: 0.5045  m1_loss_mask: 0.1548  m1_loss_dice: 1.337  m1_loss_ce_0: 0.5594  m1_loss_mask_0: 0.182  m1_loss_dice_0: 1.573  m1_loss_ce_1: 0.6263  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.447  m1_loss_ce_2: 0.5997  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.404  m1_loss_ce_3: 0.5299  m1_loss_mask_3: 0.163  m1_loss_dice_3: 1.34  m1_loss_ce_4: 0.522  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.347  m1_loss_ce_5: 0.4827  m1_loss_mask_5: 0.155  m1_loss_dice_5: 1.385  m1_loss_ce_6: 0.4842  m1_loss_mask_6: 0.1531  m1_loss_dice_6: 1.334  m1_loss_ce_7: 0.4849  m1_loss_mask_7: 0.1546  m1_loss_dice_7: 1.289  m1_loss_ce_8: 0.4851  m1_loss_mask_8: 0.1544  m1_loss_dice_8: 1.307  m2_loss_ce: 0.5074  m2_loss_mask: 0.1507  m2_loss_dice: 1.343  m2_loss_ce_0: 0.6805  m2_loss_mask_0: 0.1835  m2_loss_dice_0: 1.561  m2_loss_ce_1: 0.7147  m2_loss_mask_1: 0.1711  m2_loss_dice_1: 1.453  m2_loss_ce_2: 0.6411  m2_loss_mask_2: 0.1564  m2_loss_dice_2: 1.429  m2_loss_ce_3: 0.6155  m2_loss_mask_3: 0.1563  m2_loss_dice_3: 1.361  m2_loss_ce_4: 0.5809  m2_loss_mask_4: 0.1527  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5676  m2_loss_mask_5: 0.1544  m2_loss_dice_5: 1.335  m2_loss_ce_6: 0.5213  m2_loss_mask_6: 0.1551  m2_loss_dice_6: 1.316  m2_loss_ce_7: 0.5027  m2_loss_mask_7: 0.155  m2_loss_dice_7: 1.331  m2_loss_ce_8: 0.5395  m2_loss_mask_8: 0.1541  m2_loss_dice_8: 1.325  com_loss_ce: 1.807  com_loss_mask: 0.6924  com_loss_dice: 0.9717    time: 1.5912  last_time: 1.5919  data_time: 0.0976  last_data_time: 0.0549   lr: 0.0001  max_mem: 35952M
[10/01 00:09:01] d2.utils.events INFO:  eta: 0:12:12  iter: 539  total_loss: 41.53  m1_loss_ce: 0.4385  m1_loss_mask: 0.1771  m1_loss_dice: 1.144  m1_loss_ce_0: 0.5121  m1_loss_mask_0: 0.2004  m1_loss_dice_0: 1.362  m1_loss_ce_1: 0.5627  m1_loss_mask_1: 0.188  m1_loss_dice_1: 1.259  m1_loss_ce_2: 0.5547  m1_loss_mask_2: 0.1836  m1_loss_dice_2: 1.212  m1_loss_ce_3: 0.4619  m1_loss_mask_3: 0.1799  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.458  m1_loss_mask_4: 0.1799  m1_loss_dice_4: 1.154  m1_loss_ce_5: 0.4532  m1_loss_mask_5: 0.178  m1_loss_dice_5: 1.17  m1_loss_ce_6: 0.449  m1_loss_mask_6: 0.1773  m1_loss_dice_6: 1.12  m1_loss_ce_7: 0.4378  m1_loss_mask_7: 0.1775  m1_loss_dice_7: 1.141  m1_loss_ce_8: 0.4104  m1_loss_mask_8: 0.1781  m1_loss_dice_8: 1.172  m2_loss_ce: 0.4306  m2_loss_mask: 0.1831  m2_loss_dice: 1.209  m2_loss_ce_0: 0.5598  m2_loss_mask_0: 0.2123  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6097  m2_loss_mask_1: 0.1987  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.5665  m2_loss_mask_2: 0.184  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.4896  m2_loss_mask_3: 0.1844  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.4841  m2_loss_mask_4: 0.1821  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.4806  m2_loss_mask_5: 0.1814  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.4408  m2_loss_mask_6: 0.1818  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.4557  m2_loss_mask_7: 0.181  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4589  m2_loss_mask_8: 0.1822  m2_loss_dice_8: 1.192  com_loss_ce: 1.745  com_loss_mask: 0.6924  com_loss_dice: 0.9706    time: 1.5911  last_time: 1.5943  data_time: 0.0750  last_data_time: 0.0811   lr: 0.0001  max_mem: 35952M
[10/01 00:09:33] d2.utils.events INFO:  eta: 0:11:40  iter: 559  total_loss: 41.21  m1_loss_ce: 0.4444  m1_loss_mask: 0.1813  m1_loss_dice: 1.187  m1_loss_ce_0: 0.5367  m1_loss_mask_0: 0.2027  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.556  m1_loss_mask_1: 0.1884  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.512  m1_loss_mask_2: 0.1856  m1_loss_dice_2: 1.25  m1_loss_ce_3: 0.4928  m1_loss_mask_3: 0.183  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4375  m1_loss_mask_4: 0.1825  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.4486  m1_loss_mask_5: 0.1816  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.4492  m1_loss_mask_6: 0.1833  m1_loss_dice_6: 1.161  m1_loss_ce_7: 0.4348  m1_loss_mask_7: 0.1809  m1_loss_dice_7: 1.177  m1_loss_ce_8: 0.4025  m1_loss_mask_8: 0.1809  m1_loss_dice_8: 1.177  m2_loss_ce: 0.4366  m2_loss_mask: 0.1718  m2_loss_dice: 1.232  m2_loss_ce_0: 0.575  m2_loss_mask_0: 0.2057  m2_loss_dice_0: 1.417  m2_loss_ce_1: 0.6473  m2_loss_mask_1: 0.202  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5646  m2_loss_mask_2: 0.1843  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5027  m2_loss_mask_3: 0.1834  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.4868  m2_loss_mask_4: 0.1809  m2_loss_dice_4: 1.197  m2_loss_ce_5: 0.4674  m2_loss_mask_5: 0.1771  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.4707  m2_loss_mask_6: 0.177  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4807  m2_loss_mask_7: 0.1753  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.4367  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.215  com_loss_ce: 1.758  com_loss_mask: 0.6924  com_loss_dice: 0.9713    time: 1.5911  last_time: 1.7525  data_time: 0.0753  last_data_time: 0.1233   lr: 0.0001  max_mem: 35952M
[10/01 00:10:05] d2.utils.events INFO:  eta: 0:11:08  iter: 579  total_loss: 44.77  m1_loss_ce: 0.4651  m1_loss_mask: 0.1756  m1_loss_dice: 1.296  m1_loss_ce_0: 0.6036  m1_loss_mask_0: 0.1925  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.6299  m1_loss_mask_1: 0.1885  m1_loss_dice_1: 1.415  m1_loss_ce_2: 0.592  m1_loss_mask_2: 0.1845  m1_loss_dice_2: 1.378  m1_loss_ce_3: 0.5175  m1_loss_mask_3: 0.1818  m1_loss_dice_3: 1.296  m1_loss_ce_4: 0.5231  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.329  m1_loss_ce_5: 0.4722  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.3  m1_loss_ce_6: 0.4735  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.316  m1_loss_ce_7: 0.4554  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.334  m1_loss_ce_8: 0.4724  m1_loss_mask_8: 0.176  m1_loss_dice_8: 1.292  m2_loss_ce: 0.5108  m2_loss_mask: 0.1668  m2_loss_dice: 1.306  m2_loss_ce_0: 0.6311  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.513  m2_loss_ce_1: 0.6661  m2_loss_mask_1: 0.1887  m2_loss_dice_1: 1.434  m2_loss_ce_2: 0.6216  m2_loss_mask_2: 0.1734  m2_loss_dice_2: 1.418  m2_loss_ce_3: 0.5829  m2_loss_mask_3: 0.1711  m2_loss_dice_3: 1.334  m2_loss_ce_4: 0.506  m2_loss_mask_4: 0.1717  m2_loss_dice_4: 1.356  m2_loss_ce_5: 0.5417  m2_loss_mask_5: 0.1678  m2_loss_dice_5: 1.338  m2_loss_ce_6: 0.4983  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.301  m2_loss_ce_7: 0.5017  m2_loss_mask_7: 0.1627  m2_loss_dice_7: 1.309  m2_loss_ce_8: 0.4607  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.306  com_loss_ce: 1.785  com_loss_mask: 0.6924  com_loss_dice: 0.9726    time: 1.5920  last_time: 1.5708  data_time: 0.1062  last_data_time: 0.1014   lr: 0.0001  max_mem: 35952M
[10/01 00:10:37] d2.utils.events INFO:  eta: 0:10:36  iter: 599  total_loss: 42.86  m1_loss_ce: 0.4901  m1_loss_mask: 0.1657  m1_loss_dice: 1.211  m1_loss_ce_0: 0.5878  m1_loss_mask_0: 0.1941  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.591  m1_loss_mask_1: 0.1775  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.5221  m1_loss_mask_2: 0.1788  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.5048  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.4521  m1_loss_mask_4: 0.1656  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.4493  m1_loss_mask_5: 0.1642  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4856  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.4534  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.4521  m1_loss_mask_8: 0.1654  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4732  m2_loss_mask: 0.162  m2_loss_dice: 1.28  m2_loss_ce_0: 0.6152  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.683  m2_loss_mask_1: 0.1776  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.583  m2_loss_mask_2: 0.1657  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5313  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.305  m2_loss_ce_4: 0.4972  m2_loss_mask_4: 0.1612  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.4951  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.4615  m2_loss_mask_6: 0.1616  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.4893  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.4559  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.26  com_loss_ce: 1.772  com_loss_mask: 0.6924  com_loss_dice: 0.973    time: 1.5921  last_time: 1.5193  data_time: 0.0818  last_data_time: 0.0713   lr: 0.0001  max_mem: 35952M
[10/01 00:11:09] d2.utils.events INFO:  eta: 0:10:05  iter: 619  total_loss: 42.94  m1_loss_ce: 0.4531  m1_loss_mask: 0.1793  m1_loss_dice: 1.179  m1_loss_ce_0: 0.5865  m1_loss_mask_0: 0.1996  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6498  m1_loss_mask_1: 0.1873  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5592  m1_loss_mask_2: 0.1802  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.4999  m1_loss_mask_3: 0.1828  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.482  m1_loss_mask_4: 0.1815  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.4675  m1_loss_mask_5: 0.1823  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4708  m1_loss_mask_6: 0.1781  m1_loss_dice_6: 1.152  m1_loss_ce_7: 0.4764  m1_loss_mask_7: 0.1763  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.4646  m1_loss_mask_8: 0.1766  m1_loss_dice_8: 1.174  m2_loss_ce: 0.4895  m2_loss_mask: 0.1763  m2_loss_dice: 1.196  m2_loss_ce_0: 0.6127  m2_loss_mask_0: 0.199  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6984  m2_loss_mask_1: 0.1885  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5841  m2_loss_mask_2: 0.1781  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5569  m2_loss_mask_3: 0.1776  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.537  m2_loss_mask_4: 0.1776  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.5271  m2_loss_mask_5: 0.1731  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.512  m2_loss_mask_6: 0.1743  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5096  m2_loss_mask_7: 0.1769  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.5158  m2_loss_mask_8: 0.1744  m2_loss_dice_8: 1.234  com_loss_ce: 1.774  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5926  last_time: 1.4913  data_time: 0.0932  last_data_time: 0.0529   lr: 0.0001  max_mem: 35952M
[10/01 00:11:41] d2.utils.events INFO:  eta: 0:09:33  iter: 639  total_loss: 41.1  m1_loss_ce: 0.432  m1_loss_mask: 0.1742  m1_loss_dice: 1.137  m1_loss_ce_0: 0.5539  m1_loss_mask_0: 0.1964  m1_loss_dice_0: 1.332  m1_loss_ce_1: 0.5792  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.518  m1_loss_mask_2: 0.1798  m1_loss_dice_2: 1.19  m1_loss_ce_3: 0.4748  m1_loss_mask_3: 0.1771  m1_loss_dice_3: 1.2  m1_loss_ce_4: 0.4864  m1_loss_mask_4: 0.1789  m1_loss_dice_4: 1.152  m1_loss_ce_5: 0.4417  m1_loss_mask_5: 0.1777  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.4435  m1_loss_mask_6: 0.1746  m1_loss_dice_6: 1.124  m1_loss_ce_7: 0.4124  m1_loss_mask_7: 0.1751  m1_loss_dice_7: 1.148  m1_loss_ce_8: 0.4541  m1_loss_mask_8: 0.1741  m1_loss_dice_8: 1.139  m2_loss_ce: 0.4285  m2_loss_mask: 0.1789  m2_loss_dice: 1.191  m2_loss_ce_0: 0.5505  m2_loss_mask_0: 0.2116  m2_loss_dice_0: 1.34  m2_loss_ce_1: 0.632  m2_loss_mask_1: 0.1915  m2_loss_dice_1: 1.278  m2_loss_ce_2: 0.5247  m2_loss_mask_2: 0.1815  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.489  m2_loss_mask_3: 0.1812  m2_loss_dice_3: 1.178  m2_loss_ce_4: 0.4486  m2_loss_mask_4: 0.1797  m2_loss_dice_4: 1.211  m2_loss_ce_5: 0.4664  m2_loss_mask_5: 0.1773  m2_loss_dice_5: 1.21  m2_loss_ce_6: 0.4254  m2_loss_mask_6: 0.1809  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.4448  m2_loss_mask_7: 0.1798  m2_loss_dice_7: 1.174  m2_loss_ce_8: 0.4364  m2_loss_mask_8: 0.1773  m2_loss_dice_8: 1.189  com_loss_ce: 1.752  com_loss_mask: 0.6924  com_loss_dice: 0.9688    time: 1.5924  last_time: 1.5754  data_time: 0.0660  last_data_time: 0.0413   lr: 0.0001  max_mem: 35952M
[10/01 00:12:13] d2.utils.events INFO:  eta: 0:09:01  iter: 659  total_loss: 43.1  m1_loss_ce: 0.444  m1_loss_mask: 0.156  m1_loss_dice: 1.251  m1_loss_ce_0: 0.5556  m1_loss_mask_0: 0.1838  m1_loss_dice_0: 1.436  m1_loss_ce_1: 0.6241  m1_loss_mask_1: 0.1699  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5801  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5075  m1_loss_mask_3: 0.1627  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4985  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5054  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.4881  m1_loss_mask_6: 0.1586  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.455  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4608  m1_loss_mask_8: 0.1571  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4792  m2_loss_mask: 0.1669  m2_loss_dice: 1.246  m2_loss_ce_0: 0.5891  m2_loss_mask_0: 0.1927  m2_loss_dice_0: 1.495  m2_loss_ce_1: 0.6579  m2_loss_mask_1: 0.1833  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.6015  m2_loss_mask_2: 0.1685  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5433  m2_loss_mask_3: 0.1677  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.5358  m2_loss_mask_4: 0.1644  m2_loss_dice_4: 1.307  m2_loss_ce_5: 0.5177  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.4864  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.287  m2_loss_ce_7: 0.4964  m2_loss_mask_7: 0.1681  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4794  m2_loss_mask_8: 0.1646  m2_loss_dice_8: 1.247  com_loss_ce: 1.767  com_loss_mask: 0.6924  com_loss_dice: 0.9727    time: 1.5928  last_time: 1.5571  data_time: 0.0902  last_data_time: 0.1569   lr: 0.0001  max_mem: 35952M
[10/01 00:12:45] d2.utils.events INFO:  eta: 0:08:29  iter: 679  total_loss: 43.19  m1_loss_ce: 0.4807  m1_loss_mask: 0.1696  m1_loss_dice: 1.237  m1_loss_ce_0: 0.5303  m1_loss_mask_0: 0.2105  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.5966  m1_loss_mask_1: 0.1912  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.5421  m1_loss_mask_2: 0.1787  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.4954  m1_loss_mask_3: 0.1728  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.4541  m1_loss_mask_4: 0.1729  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.4419  m1_loss_mask_5: 0.1713  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4746  m1_loss_mask_6: 0.1672  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.4453  m1_loss_mask_7: 0.1709  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.4554  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.241  m2_loss_ce: 0.4706  m2_loss_mask: 0.1753  m2_loss_dice: 1.246  m2_loss_ce_0: 0.5779  m2_loss_mask_0: 0.2095  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6447  m2_loss_mask_1: 0.1918  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.5616  m2_loss_mask_2: 0.1843  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.4971  m2_loss_mask_3: 0.1765  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5069  m2_loss_mask_4: 0.1772  m2_loss_dice_4: 1.296  m2_loss_ce_5: 0.4582  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4621  m2_loss_mask_6: 0.1733  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.4811  m2_loss_mask_7: 0.1742  m2_loss_dice_7: 1.26  m2_loss_ce_8: 0.4733  m2_loss_mask_8: 0.1723  m2_loss_dice_8: 1.263  com_loss_ce: 1.747  com_loss_mask: 0.6924  com_loss_dice: 0.9697    time: 1.5926  last_time: 1.5286  data_time: 0.0954  last_data_time: 0.0582   lr: 0.0001  max_mem: 35952M
[10/01 00:13:17] d2.utils.events INFO:  eta: 0:07:57  iter: 699  total_loss: 45.18  m1_loss_ce: 0.4899  m1_loss_mask: 0.1595  m1_loss_dice: 1.31  m1_loss_ce_0: 0.5592  m1_loss_mask_0: 0.1936  m1_loss_dice_0: 1.585  m1_loss_ce_1: 0.6318  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.436  m1_loss_ce_2: 0.5802  m1_loss_mask_2: 0.1703  m1_loss_dice_2: 1.361  m1_loss_ce_3: 0.5212  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.326  m1_loss_ce_4: 0.5213  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.302  m1_loss_ce_5: 0.4809  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.319  m1_loss_ce_6: 0.4699  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.278  m1_loss_ce_7: 0.4615  m1_loss_mask_7: 0.1604  m1_loss_dice_7: 1.285  m1_loss_ce_8: 0.4838  m1_loss_mask_8: 0.1597  m1_loss_dice_8: 1.266  m2_loss_ce: 0.4863  m2_loss_mask: 0.1618  m2_loss_dice: 1.325  m2_loss_ce_0: 0.6408  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.537  m2_loss_ce_1: 0.6664  m2_loss_mask_1: 0.181  m2_loss_dice_1: 1.439  m2_loss_ce_2: 0.6013  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.414  m2_loss_ce_3: 0.5733  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.381  m2_loss_ce_4: 0.5384  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.357  m2_loss_ce_5: 0.5156  m2_loss_mask_5: 0.1644  m2_loss_dice_5: 1.361  m2_loss_ce_6: 0.4811  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.325  m2_loss_ce_7: 0.5028  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.308  m2_loss_ce_8: 0.4906  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.317  com_loss_ce: 1.799  com_loss_mask: 0.6924  com_loss_dice: 0.9721    time: 1.5930  last_time: 1.5176  data_time: 0.0927  last_data_time: 0.0470   lr: 0.0001  max_mem: 35952M
[10/01 00:13:50] d2.utils.events INFO:  eta: 0:07:25  iter: 719  total_loss: 41.67  m1_loss_ce: 0.4702  m1_loss_mask: 0.1569  m1_loss_dice: 1.212  m1_loss_ce_0: 0.5279  m1_loss_mask_0: 0.1836  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6314  m1_loss_mask_1: 0.1685  m1_loss_dice_1: 1.265  m1_loss_ce_2: 0.5864  m1_loss_mask_2: 0.1594  m1_loss_dice_2: 1.239  m1_loss_ce_3: 0.5106  m1_loss_mask_3: 0.158  m1_loss_dice_3: 1.2  m1_loss_ce_4: 0.4898  m1_loss_mask_4: 0.1607  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4635  m1_loss_mask_5: 0.1552  m1_loss_dice_5: 1.186  m1_loss_ce_6: 0.4618  m1_loss_mask_6: 0.1563  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4477  m1_loss_mask_7: 0.1582  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.4419  m1_loss_mask_8: 0.1563  m1_loss_dice_8: 1.149  m2_loss_ce: 0.4624  m2_loss_mask: 0.1602  m2_loss_dice: 1.245  m2_loss_ce_0: 0.6018  m2_loss_mask_0: 0.1867  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.6906  m2_loss_mask_1: 0.1774  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.5856  m2_loss_mask_2: 0.1621  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5071  m2_loss_mask_3: 0.1588  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.501  m2_loss_mask_4: 0.1565  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.4905  m2_loss_mask_5: 0.1599  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.4573  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4794  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.4874  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.243  com_loss_ce: 1.771  com_loss_mask: 0.6925  com_loss_dice: 0.9703    time: 1.5935  last_time: 1.5659  data_time: 0.0877  last_data_time: 0.0443   lr: 0.0001  max_mem: 35952M
[10/01 00:14:22] d2.utils.events INFO:  eta: 0:06:54  iter: 739  total_loss: 42.17  m1_loss_ce: 0.4108  m1_loss_mask: 0.1729  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5225  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.5791  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.5155  m1_loss_mask_2: 0.1741  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.4813  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.4199  m1_loss_mask_4: 0.1729  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4349  m1_loss_mask_5: 0.173  m1_loss_dice_5: 1.226  m1_loss_ce_6: 0.4379  m1_loss_mask_6: 0.1694  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4384  m1_loss_mask_7: 0.172  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.3996  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.265  m2_loss_ce: 0.4546  m2_loss_mask: 0.1634  m2_loss_dice: 1.221  m2_loss_ce_0: 0.5753  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6172  m2_loss_mask_1: 0.1827  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.5416  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.483  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.4453  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.4475  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4485  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.4323  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4419  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.249  com_loss_ce: 1.743  com_loss_mask: 0.6924  com_loss_dice: 0.9712    time: 1.5937  last_time: 1.6601  data_time: 0.0828  last_data_time: 0.0936   lr: 0.0001  max_mem: 35952M
[10/01 00:14:54] d2.utils.events INFO:  eta: 0:06:22  iter: 759  total_loss: 41.73  m1_loss_ce: 0.4541  m1_loss_mask: 0.1672  m1_loss_dice: 1.189  m1_loss_ce_0: 0.552  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.353  m1_loss_ce_1: 0.6174  m1_loss_mask_1: 0.1737  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5858  m1_loss_mask_2: 0.1689  m1_loss_dice_2: 1.234  m1_loss_ce_3: 0.5006  m1_loss_mask_3: 0.1705  m1_loss_dice_3: 1.2  m1_loss_ce_4: 0.4524  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.197  m1_loss_ce_5: 0.4731  m1_loss_mask_5: 0.1695  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4478  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.4504  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.4508  m1_loss_mask_8: 0.1663  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4715  m2_loss_mask: 0.1757  m2_loss_dice: 1.223  m2_loss_ce_0: 0.5945  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6539  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5978  m2_loss_mask_2: 0.1769  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.5241  m2_loss_mask_3: 0.1761  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.4956  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.172  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4796  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.4776  m2_loss_mask_7: 0.1762  m2_loss_dice_7: 1.256  m2_loss_ce_8: 0.4644  m2_loss_mask_8: 0.1734  m2_loss_dice_8: 1.212  com_loss_ce: 1.759  com_loss_mask: 0.6924  com_loss_dice: 0.9702    time: 1.5933  last_time: 1.6053  data_time: 0.0846  last_data_time: 0.1416   lr: 0.0001  max_mem: 35952M
[10/01 00:15:26] d2.utils.events INFO:  eta: 0:05:50  iter: 779  total_loss: 41.29  m1_loss_ce: 0.4424  m1_loss_mask: 0.1575  m1_loss_dice: 1.167  m1_loss_ce_0: 0.4982  m1_loss_mask_0: 0.1817  m1_loss_dice_0: 1.335  m1_loss_ce_1: 0.5856  m1_loss_mask_1: 0.171  m1_loss_dice_1: 1.261  m1_loss_ce_2: 0.5089  m1_loss_mask_2: 0.1623  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.4736  m1_loss_mask_3: 0.1606  m1_loss_dice_3: 1.185  m1_loss_ce_4: 0.4376  m1_loss_mask_4: 0.1616  m1_loss_dice_4: 1.161  m1_loss_ce_5: 0.4398  m1_loss_mask_5: 0.1574  m1_loss_dice_5: 1.189  m1_loss_ce_6: 0.4693  m1_loss_mask_6: 0.1564  m1_loss_dice_6: 1.178  m1_loss_ce_7: 0.4346  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4101  m1_loss_mask_8: 0.1623  m1_loss_dice_8: 1.147  m2_loss_ce: 0.4728  m2_loss_mask: 0.1643  m2_loss_dice: 1.2  m2_loss_ce_0: 0.6187  m2_loss_mask_0: 0.1919  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6502  m2_loss_mask_1: 0.18  m2_loss_dice_1: 1.33  m2_loss_ce_2: 0.5839  m2_loss_mask_2: 0.1694  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5542  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5425  m2_loss_mask_4: 0.1632  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.5405  m2_loss_mask_5: 0.1625  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.4805  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.469  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.4827  m2_loss_mask_8: 0.1627  m2_loss_dice_8: 1.209  com_loss_ce: 1.75  com_loss_mask: 0.6925  com_loss_dice: 0.9717    time: 1.5932  last_time: 1.5749  data_time: 0.0765  last_data_time: 0.0695   lr: 0.0001  max_mem: 35952M
[10/01 00:15:57] d2.utils.events INFO:  eta: 0:05:18  iter: 799  total_loss: 42.98  m1_loss_ce: 0.4359  m1_loss_mask: 0.1561  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5477  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6062  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.568  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.4951  m1_loss_mask_3: 0.1618  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.4918  m1_loss_mask_4: 0.161  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.4849  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.4348  m1_loss_mask_6: 0.1639  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.4207  m1_loss_mask_7: 0.1588  m1_loss_dice_7: 1.247  m1_loss_ce_8: 0.444  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.275  m2_loss_ce: 0.4972  m2_loss_mask: 0.1624  m2_loss_dice: 1.286  m2_loss_ce_0: 0.611  m2_loss_mask_0: 0.1909  m2_loss_dice_0: 1.492  m2_loss_ce_1: 0.7079  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.6234  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.5471  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5615  m2_loss_mask_4: 0.1597  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.5179  m2_loss_mask_5: 0.16  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.4951  m2_loss_mask_6: 0.1618  m2_loss_dice_6: 1.294  m2_loss_ce_7: 0.5272  m2_loss_mask_7: 0.1619  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.5211  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.272  com_loss_ce: 1.781  com_loss_mask: 0.6924  com_loss_dice: 0.9707    time: 1.5928  last_time: 1.4247  data_time: 0.0784  last_data_time: 0.0474   lr: 0.0001  max_mem: 35952M
[10/01 00:16:28] d2.utils.events INFO:  eta: 0:04:46  iter: 819  total_loss: 44.19  m1_loss_ce: 0.4249  m1_loss_mask: 0.1648  m1_loss_dice: 1.264  m1_loss_ce_0: 0.5216  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.5979  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.5474  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.4875  m1_loss_mask_3: 0.1675  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.4648  m1_loss_mask_4: 0.1685  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.4579  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.244  m1_loss_ce_6: 0.4407  m1_loss_mask_6: 0.1642  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.4038  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.264  m1_loss_ce_8: 0.4179  m1_loss_mask_8: 0.1643  m1_loss_dice_8: 1.252  m2_loss_ce: 0.4383  m2_loss_mask: 0.1708  m2_loss_dice: 1.287  m2_loss_ce_0: 0.605  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.6349  m2_loss_mask_1: 0.1905  m2_loss_dice_1: 1.429  m2_loss_ce_2: 0.5608  m2_loss_mask_2: 0.1797  m2_loss_dice_2: 1.366  m2_loss_ce_3: 0.5175  m2_loss_mask_3: 0.1796  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.4902  m2_loss_mask_4: 0.1712  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.485  m2_loss_mask_5: 0.172  m2_loss_dice_5: 1.298  m2_loss_ce_6: 0.5014  m2_loss_mask_6: 0.1726  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.4538  m2_loss_mask_7: 0.1725  m2_loss_dice_7: 1.287  m2_loss_ce_8: 0.4638  m2_loss_mask_8: 0.1716  m2_loss_dice_8: 1.292  com_loss_ce: 1.765  com_loss_mask: 0.6924  com_loss_dice: 0.9728    time: 1.5918  last_time: 1.5817  data_time: 0.0658  last_data_time: 0.0495   lr: 0.0001  max_mem: 35952M
[10/01 00:17:00] d2.utils.events INFO:  eta: 0:04:14  iter: 839  total_loss: 41.67  m1_loss_ce: 0.4002  m1_loss_mask: 0.1585  m1_loss_dice: 1.231  m1_loss_ce_0: 0.5099  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.375  m1_loss_ce_1: 0.5714  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.301  m1_loss_ce_2: 0.4997  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.4411  m1_loss_mask_3: 0.1594  m1_loss_dice_3: 1.191  m1_loss_ce_4: 0.4232  m1_loss_mask_4: 0.1604  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.4306  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.3904  m1_loss_mask_6: 0.1591  m1_loss_dice_6: 1.208  m1_loss_ce_7: 0.3989  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.3813  m1_loss_mask_8: 0.1592  m1_loss_dice_8: 1.202  m2_loss_ce: 0.4459  m2_loss_mask: 0.1622  m2_loss_dice: 1.205  m2_loss_ce_0: 0.5866  m2_loss_mask_0: 0.1915  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.6277  m2_loss_mask_1: 0.1732  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5629  m2_loss_mask_2: 0.1609  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.5136  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.4997  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.4563  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4544  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.217  m2_loss_ce_7: 0.4449  m2_loss_mask_7: 0.1604  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.4568  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.231  com_loss_ce: 1.75  com_loss_mask: 0.6925  com_loss_dice: 0.9699    time: 1.5909  last_time: 1.5375  data_time: 0.0702  last_data_time: 0.0438   lr: 0.0001  max_mem: 35952M
[10/01 00:17:32] d2.utils.events INFO:  eta: 0:03:42  iter: 859  total_loss: 42.42  m1_loss_ce: 0.4297  m1_loss_mask: 0.1532  m1_loss_dice: 1.229  m1_loss_ce_0: 0.5392  m1_loss_mask_0: 0.1814  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.5946  m1_loss_mask_1: 0.1631  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5332  m1_loss_mask_2: 0.1564  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.472  m1_loss_mask_3: 0.1559  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4544  m1_loss_mask_4: 0.1533  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4352  m1_loss_mask_5: 0.1512  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.3971  m1_loss_mask_6: 0.1549  m1_loss_dice_6: 1.275  m1_loss_ce_7: 0.3827  m1_loss_mask_7: 0.1526  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.3868  m1_loss_mask_8: 0.1531  m1_loss_dice_8: 1.17  m2_loss_ce: 0.4606  m2_loss_mask: 0.1647  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6221  m2_loss_mask_0: 0.1993  m2_loss_dice_0: 1.521  m2_loss_ce_1: 0.6227  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.433  m2_loss_ce_2: 0.5344  m2_loss_mask_2: 0.1702  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5134  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.4861  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.4689  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.219  m2_loss_ce_6: 0.4622  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.4382  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.4594  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.271  com_loss_ce: 1.738  com_loss_mask: 0.6924  com_loss_dice: 0.9733    time: 1.5910  last_time: 1.5358  data_time: 0.0734  last_data_time: 0.0607   lr: 0.0001  max_mem: 35952M
[10/01 00:18:04] d2.utils.events INFO:  eta: 0:03:10  iter: 879  total_loss: 42.47  m1_loss_ce: 0.4207  m1_loss_mask: 0.1613  m1_loss_dice: 1.28  m1_loss_ce_0: 0.5432  m1_loss_mask_0: 0.1855  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.5892  m1_loss_mask_1: 0.1693  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.5061  m1_loss_mask_2: 0.1617  m1_loss_dice_2: 1.33  m1_loss_ce_3: 0.4718  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.4732  m1_loss_mask_4: 0.1616  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.4379  m1_loss_mask_5: 0.1612  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4078  m1_loss_mask_6: 0.1602  m1_loss_dice_6: 1.239  m1_loss_ce_7: 0.3945  m1_loss_mask_7: 0.1588  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.3994  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4682  m2_loss_mask: 0.1655  m2_loss_dice: 1.239  m2_loss_ce_0: 0.5785  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6778  m2_loss_mask_1: 0.1818  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5995  m2_loss_mask_2: 0.1628  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5453  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.5324  m2_loss_mask_4: 0.1634  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5269  m2_loss_mask_5: 0.1616  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.5107  m2_loss_mask_6: 0.1639  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4842  m2_loss_mask_7: 0.1632  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.4856  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.255  com_loss_ce: 1.761  com_loss_mask: 0.6924  com_loss_dice: 0.9704    time: 1.5911  last_time: 1.6065  data_time: 0.0692  last_data_time: 0.0536   lr: 0.0001  max_mem: 35952M
[10/01 00:18:35] d2.utils.events INFO:  eta: 0:02:39  iter: 899  total_loss: 41.41  m1_loss_ce: 0.4466  m1_loss_mask: 0.1539  m1_loss_dice: 1.192  m1_loss_ce_0: 0.558  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.346  m1_loss_ce_1: 0.6102  m1_loss_mask_1: 0.1692  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.5215  m1_loss_mask_2: 0.1599  m1_loss_dice_2: 1.239  m1_loss_ce_3: 0.4876  m1_loss_mask_3: 0.1585  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4594  m1_loss_mask_4: 0.1582  m1_loss_dice_4: 1.197  m1_loss_ce_5: 0.4332  m1_loss_mask_5: 0.155  m1_loss_dice_5: 1.2  m1_loss_ce_6: 0.4099  m1_loss_mask_6: 0.1549  m1_loss_dice_6: 1.18  m1_loss_ce_7: 0.4132  m1_loss_mask_7: 0.1565  m1_loss_dice_7: 1.188  m1_loss_ce_8: 0.3912  m1_loss_mask_8: 0.1541  m1_loss_dice_8: 1.159  m2_loss_ce: 0.453  m2_loss_mask: 0.1587  m2_loss_dice: 1.214  m2_loss_ce_0: 0.5716  m2_loss_mask_0: 0.1915  m2_loss_dice_0: 1.416  m2_loss_ce_1: 0.6606  m2_loss_mask_1: 0.1775  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.561  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5248  m2_loss_mask_3: 0.1591  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.4893  m2_loss_mask_4: 0.1572  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.4921  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4892  m2_loss_mask_6: 0.1556  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.4642  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.4575  m2_loss_mask_8: 0.1569  m2_loss_dice_8: 1.225  com_loss_ce: 1.768  com_loss_mask: 0.6924  com_loss_dice: 0.9705    time: 1.5907  last_time: 1.5369  data_time: 0.0725  last_data_time: 0.0489   lr: 0.0001  max_mem: 35952M
[10/01 00:19:07] d2.utils.events INFO:  eta: 0:02:07  iter: 919  total_loss: 44.87  m1_loss_ce: 0.5055  m1_loss_mask: 0.1522  m1_loss_dice: 1.269  m1_loss_ce_0: 0.5886  m1_loss_mask_0: 0.1741  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.6218  m1_loss_mask_1: 0.1628  m1_loss_dice_1: 1.396  m1_loss_ce_2: 0.5837  m1_loss_mask_2: 0.1578  m1_loss_dice_2: 1.343  m1_loss_ce_3: 0.5369  m1_loss_mask_3: 0.1583  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.4764  m1_loss_mask_4: 0.1548  m1_loss_dice_4: 1.28  m1_loss_ce_5: 0.4896  m1_loss_mask_5: 0.1531  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.4663  m1_loss_mask_6: 0.1565  m1_loss_dice_6: 1.286  m1_loss_ce_7: 0.4791  m1_loss_mask_7: 0.1558  m1_loss_dice_7: 1.271  m1_loss_ce_8: 0.4535  m1_loss_mask_8: 0.1533  m1_loss_dice_8: 1.269  m2_loss_ce: 0.5001  m2_loss_mask: 0.1544  m2_loss_dice: 1.298  m2_loss_ce_0: 0.6052  m2_loss_mask_0: 0.1824  m2_loss_dice_0: 1.541  m2_loss_ce_1: 0.7065  m2_loss_mask_1: 0.1734  m2_loss_dice_1: 1.435  m2_loss_ce_2: 0.6101  m2_loss_mask_2: 0.165  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5716  m2_loss_mask_3: 0.1622  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5244  m2_loss_mask_4: 0.1617  m2_loss_dice_4: 1.286  m2_loss_ce_5: 0.5252  m2_loss_mask_5: 0.1591  m2_loss_dice_5: 1.317  m2_loss_ce_6: 0.5256  m2_loss_mask_6: 0.1584  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.5109  m2_loss_mask_7: 0.1559  m2_loss_dice_7: 1.287  m2_loss_ce_8: 0.4899  m2_loss_mask_8: 0.1558  m2_loss_dice_8: 1.275  com_loss_ce: 1.785  com_loss_mask: 0.6924  com_loss_dice: 0.9739    time: 1.5902  last_time: 1.4732  data_time: 0.0815  last_data_time: 0.0564   lr: 0.0001  max_mem: 36293M
[10/01 00:19:38] d2.utils.events INFO:  eta: 0:01:35  iter: 939  total_loss: 41.13  m1_loss_ce: 0.4145  m1_loss_mask: 0.1755  m1_loss_dice: 1.172  m1_loss_ce_0: 0.5026  m1_loss_mask_0: 0.1824  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.5588  m1_loss_mask_1: 0.1852  m1_loss_dice_1: 1.254  m1_loss_ce_2: 0.5335  m1_loss_mask_2: 0.1787  m1_loss_dice_2: 1.163  m1_loss_ce_3: 0.4466  m1_loss_mask_3: 0.1756  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.4419  m1_loss_mask_4: 0.1741  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.3986  m1_loss_mask_5: 0.174  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.3995  m1_loss_mask_6: 0.1711  m1_loss_dice_6: 1.134  m1_loss_ce_7: 0.3979  m1_loss_mask_7: 0.1742  m1_loss_dice_7: 1.139  m1_loss_ce_8: 0.4011  m1_loss_mask_8: 0.1763  m1_loss_dice_8: 1.175  m2_loss_ce: 0.428  m2_loss_mask: 0.1685  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5487  m2_loss_mask_0: 0.1936  m2_loss_dice_0: 1.417  m2_loss_ce_1: 0.632  m2_loss_mask_1: 0.1835  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.5301  m2_loss_mask_2: 0.1753  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.4854  m2_loss_mask_3: 0.1681  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.4852  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.4625  m2_loss_mask_5: 0.1683  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.4469  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4481  m2_loss_mask_7: 0.1684  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.419  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.173  com_loss_ce: 1.757  com_loss_mask: 0.6925  com_loss_dice: 0.9712    time: 1.5898  last_time: 1.6348  data_time: 0.0610  last_data_time: 0.0836   lr: 0.0001  max_mem: 36293M
[10/01 00:20:10] d2.utils.events INFO:  eta: 0:01:03  iter: 959  total_loss: 43.09  m1_loss_ce: 0.4595  m1_loss_mask: 0.1717  m1_loss_dice: 1.175  m1_loss_ce_0: 0.5616  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.6138  m1_loss_mask_1: 0.1788  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5623  m1_loss_mask_2: 0.1744  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5015  m1_loss_mask_3: 0.1715  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4762  m1_loss_mask_4: 0.1698  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.4564  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.4783  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.4575  m1_loss_mask_7: 0.1715  m1_loss_dice_7: 1.191  m1_loss_ce_8: 0.4532  m1_loss_mask_8: 0.1703  m1_loss_dice_8: 1.198  m2_loss_ce: 0.4789  m2_loss_mask: 0.1664  m2_loss_dice: 1.244  m2_loss_ce_0: 0.6335  m2_loss_mask_0: 0.1957  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6786  m2_loss_mask_1: 0.1839  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.6228  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.5593  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.244  m2_loss_ce_4: 0.5156  m2_loss_mask_4: 0.1648  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.521  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.5084  m2_loss_mask_6: 0.1659  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5178  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.4607  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.249  com_loss_ce: 1.769  com_loss_mask: 0.6923  com_loss_dice: 0.9697    time: 1.5895  last_time: 1.6810  data_time: 0.0814  last_data_time: 0.1427   lr: 0.0001  max_mem: 36293M
[10/01 00:20:41] d2.utils.events INFO:  eta: 0:00:31  iter: 979  total_loss: 42.75  m1_loss_ce: 0.398  m1_loss_mask: 0.1661  m1_loss_dice: 1.212  m1_loss_ce_0: 0.5572  m1_loss_mask_0: 0.1929  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.5755  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.4971  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.4726  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4144  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.4733  m1_loss_mask_5: 0.1621  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.4268  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.4207  m1_loss_mask_7: 0.1649  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.4201  m1_loss_mask_8: 0.1654  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4776  m2_loss_mask: 0.1707  m2_loss_dice: 1.265  m2_loss_ce_0: 0.602  m2_loss_mask_0: 0.2033  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6498  m2_loss_mask_1: 0.1928  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5701  m2_loss_mask_2: 0.1813  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5096  m2_loss_mask_3: 0.1727  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5071  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.4831  m2_loss_mask_5: 0.1693  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.5153  m2_loss_mask_6: 0.1734  m2_loss_dice_6: 1.25  m2_loss_ce_7: 0.5035  m2_loss_mask_7: 0.1762  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.4704  m2_loss_mask_8: 0.1717  m2_loss_dice_8: 1.252  com_loss_ce: 1.75  com_loss_mask: 0.6924  com_loss_dice: 0.9709    time: 1.5893  last_time: 1.6075  data_time: 0.0753  last_data_time: 0.0447   lr: 0.0001  max_mem: 36293M
[10/01 00:21:13] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_softmax_entropy_1000_1000_l1_l2/model_final.pth
[10/01 00:21:15] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 43.07  m1_loss_ce: 0.4601  m1_loss_mask: 0.1686  m1_loss_dice: 1.256  m1_loss_ce_0: 0.517  m1_loss_mask_0: 0.1947  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.5665  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.5446  m1_loss_mask_2: 0.1773  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5024  m1_loss_mask_3: 0.1737  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.4742  m1_loss_mask_4: 0.1733  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4606  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4468  m1_loss_mask_6: 0.1703  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4654  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.4488  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.227  m2_loss_ce: 0.4723  m2_loss_mask: 0.1738  m2_loss_dice: 1.259  m2_loss_ce_0: 0.5761  m2_loss_mask_0: 0.2063  m2_loss_dice_0: 1.508  m2_loss_ce_1: 0.6358  m2_loss_mask_1: 0.1881  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5526  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.5266  m2_loss_mask_3: 0.1724  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.5101  m2_loss_mask_4: 0.1743  m2_loss_dice_4: 1.286  m2_loss_ce_5: 0.5111  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.326  m2_loss_ce_6: 0.4789  m2_loss_mask_6: 0.1768  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.4911  m2_loss_mask_7: 0.1742  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.4927  m2_loss_mask_8: 0.173  m2_loss_dice_8: 1.296  com_loss_ce: 1.758  com_loss_mask: 0.6924  com_loss_dice: 0.9711    time: 1.5888  last_time: 1.5508  data_time: 0.0645  last_data_time: 0.1115   lr: 0.0001  max_mem: 36293M
[10/01 00:21:15] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:26:25 (1.5888 s / it)
[10/01 00:21:15] d2.engine.hooks INFO: Total training time: 0:26:34 (0:00:08 on hooks)
[10/01 00:21:15] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/01 00:21:15] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/01 00:21:15] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/01 00:21:15] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/01 00:21:15] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/01 00:22:59] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalcdidzzac ...
[10/01 00:23:47] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.587 | 80.804 | 69.020 |      19       |
| Things | 47.159 | 80.715 | 58.664 |       8       |
| Stuff  | 63.445 | 80.870 | 76.552 |      11       |
[10/01 00:23:47] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.904 | 97.206 | 99.690 |     Stuff     |
| class_8  | 71.524 | 83.201 | 85.965 |     Stuff     |
| class_11 | 86.965 | 88.686 | 98.059 |     Stuff     |
| class_12 | 44.150 | 78.145 | 56.497 |     Stuff     |
| class_13 | 35.191 | 75.354 | 46.701 |     Stuff     |
| class_17 | 40.984 | 63.221 | 64.826 |     Stuff     |
| class_19 | 45.532 | 69.333 | 65.672 |     Stuff     |
| class_20 | 66.466 | 77.461 | 85.806 |     Stuff     |
| class_21 | 89.077 | 89.907 | 99.077 |     Stuff     |
| class_22 | 32.562 | 75.375 | 43.200 |     Stuff     |
| class_23 | 88.538 | 91.677 | 96.575 |     Stuff     |
| class_24 | 52.024 | 76.810 | 67.730 |    Things     |
| class_25 | 47.018 | 74.289 | 63.291 |    Things     |
| class_26 | 64.349 | 82.504 | 77.996 |    Things     |
| class_27 | 47.099 | 87.469 | 53.846 |    Things     |
| class_28 | 61.905 | 90.320 | 68.539 |    Things     |
| class_31 | 27.218 | 89.820 | 30.303 |    Things     |
| class_32 | 36.432 | 73.385 | 49.645 |    Things     |
| class_33 | 41.224 | 71.120 | 57.964 |    Things     |
[10/01 00:23:47] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/01 00:23:47] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_3310/01 00:23:47] d2.evaluation.testing INFO: copypaste: 56.5875,80.8044,69.0202,47.1586,80.7145,58.6644,63.4448,80.8697,76.5516,96.9042,97.2057,99.6898,71.5237,83.2011,85.9649,86.9648,88.6860,98.0592,44.1500,78.1454,56.4972,35.1906,75.3538,46.7005,40.9838,63.2211,64.8262,45.5321,69.3330,65.6716,66.4663,77.4614,85.8058,89.0774,89.9073,99.0769,32.5620,75.3749,43.2000,88.5377,91.6774,96.5753,52.0236,76.8098,67.7304,47.0182,74.2888,63.2911,64.3493,82.5036,77.9957,47.0985,87.4687,53.8462,61.9049,90.3202,68.5393,27.2181,89.8199,30.3030,36.4321,73.3846,49.6454,41.2244,71.1204,57.9642
