[08/16 01:08:09] detectron2 INFO: Rank of current process: 0. World size: 2
[08/16 01:08:10] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2                        NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/16 01:08:10] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_0_6_0_4.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/16 01:08:10] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_0_6_0_4.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/16 01:08:10] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/16 01:08:10] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4/config.yaml
[08/16 01:08:11] d2.utils.env INFO: Using a generated random seed 12196020
[08/16 01:08:15] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/16 01:08:15] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/16 01:08:15] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/16 01:08:15] d2.data.build INFO: Using training sampler TrainingSampler
[08/16 01:08:16] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 01:08:16] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/16 01:08:16] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/16 01:08:16] d2.data.build INFO: Making batched data loader with batch_size=4
[08/16 01:08:16] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/16 01:08:19] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/16 01:08:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:08:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:08:19] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:08:19] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/16 01:08:53] d2.utils.events INFO:  eta: 0:21:37  iter: 19  total_loss: 41.85  m1_loss_ce: 0.5287  m1_loss_mask: 0.1733  m1_loss_dice: 1.227  m1_loss_ce_0: 0.646  m1_loss_mask_0: 0.202  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.6738  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.6403  m1_loss_mask_2: 0.1764  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.5939  m1_loss_mask_3: 0.1782  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5415  m1_loss_mask_4: 0.1751  m1_loss_dice_4: 1.282  m1_loss_ce_5: 0.5671  m1_loss_mask_5: 0.1729  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.5277  m1_loss_mask_6: 0.1762  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.518  m1_loss_mask_7: 0.1742  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.5192  m1_loss_mask_8: 0.174  m1_loss_dice_8: 1.249  m2_loss_ce: 0.5231  m2_loss_mask: 0.1709  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6159  m2_loss_mask_0: 0.2024  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6569  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.5772  m2_loss_mask_2: 0.175  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.5824  m2_loss_mask_3: 0.1749  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5348  m2_loss_mask_4: 0.1731  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5383  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5113  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5152  m2_loss_mask_7: 0.1719  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5105  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.21  com_loss_ce: 0.4232  com_loss_mask: 0.04794  com_loss_dice: 0.3087    time: 1.3447  last_time: 1.3288  data_time: 0.2147  last_data_time: 0.0431   lr: 0.0001  max_mem: 34131M
[08/16 01:09:20] d2.utils.events INFO:  eta: 0:21:13  iter: 39  total_loss: 41.95  m1_loss_ce: 0.5425  m1_loss_mask: 0.1676  m1_loss_dice: 1.228  m1_loss_ce_0: 0.5963  m1_loss_mask_0: 0.1958  m1_loss_dice_0: 1.438  m1_loss_ce_1: 0.6589  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.6323  m1_loss_mask_2: 0.1705  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5737  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5892  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.587  m1_loss_mask_5: 0.1668  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.538  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.5454  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.5479  m1_loss_mask_8: 0.1692  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5511  m2_loss_mask: 0.1671  m2_loss_dice: 1.187  m2_loss_ce_0: 0.6127  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6304  m2_loss_mask_1: 0.1805  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5987  m2_loss_mask_2: 0.1761  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.562  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.5829  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.211  m2_loss_ce_5: 0.5761  m2_loss_mask_5: 0.1702  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.5538  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.5339  m2_loss_mask_7: 0.1686  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.5172  m2_loss_mask_8: 0.1686  m2_loss_dice_8: 1.181  com_loss_ce: 0.4348  com_loss_mask: 0.05404  com_loss_dice: 0.3312    time: 1.3463  last_time: 1.3600  data_time: 0.0395  last_data_time: 0.0344   lr: 0.0001  max_mem: 34159M
[08/16 01:09:47] d2.utils.events INFO:  eta: 0:20:47  iter: 59  total_loss: 40.73  m1_loss_ce: 0.5624  m1_loss_mask: 0.1638  m1_loss_dice: 1.184  m1_loss_ce_0: 0.6659  m1_loss_mask_0: 0.2014  m1_loss_dice_0: 1.395  m1_loss_ce_1: 0.6955  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.6418  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5932  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.5802  m1_loss_mask_4: 0.1645  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.5777  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.535  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.5454  m1_loss_mask_7: 0.1639  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.5383  m1_loss_mask_8: 0.1656  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4854  m2_loss_mask: 0.1632  m2_loss_dice: 1.189  m2_loss_ce_0: 0.6308  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6764  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6191  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5595  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.5231  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.5544  m2_loss_mask_5: 0.1637  m2_loss_dice_5: 1.204  m2_loss_ce_6: 0.477  m2_loss_mask_6: 0.1641  m2_loss_dice_6: 1.198  m2_loss_ce_7: 0.5217  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.5043  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.168  com_loss_ce: 0.4075  com_loss_mask: 0.04165  com_loss_dice: 0.2811    time: 1.3400  last_time: 1.2672  data_time: 0.0388  last_data_time: 0.0369   lr: 0.0001  max_mem: 34221M
[08/16 01:10:14] d2.utils.events INFO:  eta: 0:20:21  iter: 79  total_loss: 43.87  m1_loss_ce: 0.6002  m1_loss_mask: 0.1542  m1_loss_dice: 1.27  m1_loss_ce_0: 0.6727  m1_loss_mask_0: 0.1746  m1_loss_dice_0: 1.517  m1_loss_ce_1: 0.7714  m1_loss_mask_1: 0.1646  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.7349  m1_loss_mask_2: 0.1574  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.6501  m1_loss_mask_3: 0.1559  m1_loss_dice_3: 1.287  m1_loss_ce_4: 0.6382  m1_loss_mask_4: 0.1552  m1_loss_dice_4: 1.295  m1_loss_ce_5: 0.6222  m1_loss_mask_5: 0.1526  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5835  m1_loss_mask_6: 0.1532  m1_loss_dice_6: 1.317  m1_loss_ce_7: 0.576  m1_loss_mask_7: 0.1529  m1_loss_dice_7: 1.288  m1_loss_ce_8: 0.561  m1_loss_mask_8: 0.1523  m1_loss_dice_8: 1.28  m2_loss_ce: 0.5674  m2_loss_mask: 0.1504  m2_loss_dice: 1.311  m2_loss_ce_0: 0.657  m2_loss_mask_0: 0.1757  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.7432  m2_loss_mask_1: 0.1632  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.6901  m2_loss_mask_2: 0.1511  m2_loss_dice_2: 1.366  m2_loss_ce_3: 0.6234  m2_loss_mask_3: 0.1518  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.5978  m2_loss_mask_4: 0.1534  m2_loss_dice_4: 1.319  m2_loss_ce_5: 0.6069  m2_loss_mask_5: 0.1505  m2_loss_dice_5: 1.329  m2_loss_ce_6: 0.5645  m2_loss_mask_6: 0.1479  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.5823  m2_loss_mask_7: 0.1493  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.5624  m2_loss_mask_8: 0.15  m2_loss_dice_8: 1.297  com_loss_ce: 0.4153  com_loss_mask: 0.04606  com_loss_dice: 0.3144    time: 1.3409  last_time: 1.3484  data_time: 0.0420  last_data_time: 0.0390   lr: 0.0001  max_mem: 34263M
[08/16 01:10:41] d2.utils.events INFO:  eta: 0:19:55  iter: 99  total_loss: 42.43  m1_loss_ce: 0.5588  m1_loss_mask: 0.1728  m1_loss_dice: 1.219  m1_loss_ce_0: 0.6384  m1_loss_mask_0: 0.2087  m1_loss_dice_0: 1.483  m1_loss_ce_1: 0.7129  m1_loss_mask_1: 0.1808  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.6633  m1_loss_mask_2: 0.1773  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.6431  m1_loss_mask_3: 0.1765  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.6011  m1_loss_mask_4: 0.1739  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.5692  m1_loss_mask_5: 0.1707  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5661  m1_loss_mask_6: 0.1705  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.5827  m1_loss_mask_7: 0.1713  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.5588  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.249  m2_loss_ce: 0.5505  m2_loss_mask: 0.1654  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6622  m2_loss_mask_0: 0.1936  m2_loss_dice_0: 1.509  m2_loss_ce_1: 0.6828  m2_loss_mask_1: 0.1851  m2_loss_dice_1: 1.423  m2_loss_ce_2: 0.6455  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5943  m2_loss_mask_3: 0.1678  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.5838  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.288  m2_loss_ce_5: 0.5773  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5399  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.5553  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.5555  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.259  com_loss_ce: 0.4084  com_loss_mask: 0.04232  com_loss_dice: 0.3069    time: 1.3406  last_time: 1.3493  data_time: 0.0404  last_data_time: 0.0455   lr: 0.0001  max_mem: 34292M
[08/16 01:11:08] d2.utils.events INFO:  eta: 0:19:35  iter: 119  total_loss: 41.02  m1_loss_ce: 0.5476  m1_loss_mask: 0.1704  m1_loss_dice: 1.225  m1_loss_ce_0: 0.6238  m1_loss_mask_0: 0.1885  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.657  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.6266  m1_loss_mask_2: 0.1729  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.5604  m1_loss_mask_3: 0.1692  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5673  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5466  m1_loss_mask_5: 0.1688  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.5175  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.535  m1_loss_mask_7: 0.1678  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.5253  m1_loss_mask_8: 0.1676  m1_loss_dice_8: 1.205  m2_loss_ce: 0.5146  m2_loss_mask: 0.1698  m2_loss_dice: 1.192  m2_loss_ce_0: 0.6079  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6455  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.6014  m2_loss_mask_2: 0.1764  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.5498  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.5169  m2_loss_mask_4: 0.1764  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5455  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.5364  m2_loss_mask_6: 0.1697  m2_loss_dice_6: 1.219  m2_loss_ce_7: 0.5198  m2_loss_mask_7: 0.1724  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.4931  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.194  com_loss_ce: 0.4  com_loss_mask: 0.05376  com_loss_dice: 0.3322    time: 1.3443  last_time: 1.3604  data_time: 0.0398  last_data_time: 0.0435   lr: 0.0001  max_mem: 34292M
[08/16 01:11:35] d2.utils.events INFO:  eta: 0:19:08  iter: 139  total_loss: 42.48  m1_loss_ce: 0.5259  m1_loss_mask: 0.179  m1_loss_dice: 1.31  m1_loss_ce_0: 0.6483  m1_loss_mask_0: 0.1937  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.693  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.424  m1_loss_ce_2: 0.6354  m1_loss_mask_2: 0.178  m1_loss_dice_2: 1.375  m1_loss_ce_3: 0.5676  m1_loss_mask_3: 0.1751  m1_loss_dice_3: 1.311  m1_loss_ce_4: 0.5508  m1_loss_mask_4: 0.1756  m1_loss_dice_4: 1.315  m1_loss_ce_5: 0.5675  m1_loss_mask_5: 0.1748  m1_loss_dice_5: 1.319  m1_loss_ce_6: 0.5481  m1_loss_mask_6: 0.1747  m1_loss_dice_6: 1.324  m1_loss_ce_7: 0.525  m1_loss_mask_7: 0.175  m1_loss_dice_7: 1.324  m1_loss_ce_8: 0.537  m1_loss_mask_8: 0.1753  m1_loss_dice_8: 1.275  m2_loss_ce: 0.5395  m2_loss_mask: 0.1707  m2_loss_dice: 1.288  m2_loss_ce_0: 0.6331  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.6683  m2_loss_mask_1: 0.1851  m2_loss_dice_1: 1.433  m2_loss_ce_2: 0.6529  m2_loss_mask_2: 0.1793  m2_loss_dice_2: 1.378  m2_loss_ce_3: 0.6209  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.321  m2_loss_ce_4: 0.5835  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.313  m2_loss_ce_5: 0.5551  m2_loss_mask_5: 0.1746  m2_loss_dice_5: 1.289  m2_loss_ce_6: 0.5766  m2_loss_mask_6: 0.1753  m2_loss_dice_6: 1.306  m2_loss_ce_7: 0.5295  m2_loss_mask_7: 0.1727  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.5204  m2_loss_mask_8: 0.1735  m2_loss_dice_8: 1.298  com_loss_ce: 0.3855  com_loss_mask: 0.05461  com_loss_dice: 0.3294    time: 1.3470  last_time: 1.3273  data_time: 0.0416  last_data_time: 0.0536   lr: 0.0001  max_mem: 34439M
[08/16 01:12:02] d2.utils.events INFO:  eta: 0:18:39  iter: 159  total_loss: 42.69  m1_loss_ce: 0.5692  m1_loss_mask: 0.1782  m1_loss_dice: 1.252  m1_loss_ce_0: 0.6924  m1_loss_mask_0: 0.2119  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.7073  m1_loss_mask_1: 0.1883  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.6651  m1_loss_mask_2: 0.1812  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.5917  m1_loss_mask_3: 0.1758  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.5966  m1_loss_mask_4: 0.1748  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.5684  m1_loss_mask_5: 0.1737  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.5287  m1_loss_mask_6: 0.1739  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.5551  m1_loss_mask_7: 0.1741  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.5401  m1_loss_mask_8: 0.1749  m1_loss_dice_8: 1.244  m2_loss_ce: 0.5474  m2_loss_mask: 0.1732  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6315  m2_loss_mask_0: 0.2007  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.7157  m2_loss_mask_1: 0.1849  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.6386  m2_loss_mask_2: 0.1759  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.612  m2_loss_mask_3: 0.176  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.5964  m2_loss_mask_4: 0.1769  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5804  m2_loss_mask_5: 0.1748  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.5819  m2_loss_mask_6: 0.1735  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5444  m2_loss_mask_7: 0.1746  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.5518  m2_loss_mask_8: 0.1742  m2_loss_dice_8: 1.258  com_loss_ce: 0.3909  com_loss_mask: 0.05195  com_loss_dice: 0.3153    time: 1.3444  last_time: 1.3117  data_time: 0.0403  last_data_time: 0.0382   lr: 0.0001  max_mem: 34439M
[08/16 01:12:29] d2.utils.events INFO:  eta: 0:18:12  iter: 179  total_loss: 42.03  m1_loss_ce: 0.5604  m1_loss_mask: 0.1938  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6132  m1_loss_mask_0: 0.2076  m1_loss_dice_0: 1.488  m1_loss_ce_1: 0.6741  m1_loss_mask_1: 0.1875  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.6433  m1_loss_mask_2: 0.1817  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.6089  m1_loss_mask_3: 0.1793  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5701  m1_loss_mask_4: 0.1772  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.552  m1_loss_mask_5: 0.1801  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.544  m1_loss_mask_6: 0.1801  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5484  m1_loss_mask_7: 0.1762  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.5346  m1_loss_mask_8: 0.1847  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4978  m2_loss_mask: 0.1765  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6297  m2_loss_mask_0: 0.2132  m2_loss_dice_0: 1.419  m2_loss_ce_1: 0.6641  m2_loss_mask_1: 0.1887  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.6367  m2_loss_mask_2: 0.1787  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.6003  m2_loss_mask_3: 0.178  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.5604  m2_loss_mask_4: 0.1781  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.5654  m2_loss_mask_5: 0.1793  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.5288  m2_loss_mask_6: 0.1745  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.5314  m2_loss_mask_7: 0.1737  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.5413  m2_loss_mask_8: 0.1736  m2_loss_dice_8: 1.215  com_loss_ce: 0.4375  com_loss_mask: 0.05412  com_loss_dice: 0.3241    time: 1.3437  last_time: 1.4679  data_time: 0.0399  last_data_time: 0.0367   lr: 0.0001  max_mem: 34664M
[08/16 01:12:56] d2.utils.events INFO:  eta: 0:17:47  iter: 199  total_loss: 42.18  m1_loss_ce: 0.5706  m1_loss_mask: 0.1696  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6087  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.6912  m1_loss_mask_1: 0.1662  m1_loss_dice_1: 1.448  m1_loss_ce_2: 0.6569  m1_loss_mask_2: 0.1587  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5839  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.618  m1_loss_mask_4: 0.157  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.5378  m1_loss_mask_5: 0.1524  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.5495  m1_loss_mask_6: 0.1558  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.5406  m1_loss_mask_7: 0.1552  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.5282  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.251  m2_loss_ce: 0.5384  m2_loss_mask: 0.1558  m2_loss_dice: 1.25  m2_loss_ce_0: 0.5951  m2_loss_mask_0: 0.1831  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.6651  m2_loss_mask_1: 0.1655  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.6334  m2_loss_mask_2: 0.1578  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5807  m2_loss_mask_3: 0.16  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5551  m2_loss_mask_4: 0.1575  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.5315  m2_loss_mask_5: 0.1555  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.5492  m2_loss_mask_6: 0.1542  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.4915  m2_loss_mask_7: 0.1537  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.5458  m2_loss_mask_8: 0.1533  m2_loss_dice_8: 1.215  com_loss_ce: 0.4001  com_loss_mask: 0.05681  com_loss_dice: 0.3131    time: 1.3457  last_time: 1.3708  data_time: 0.0434  last_data_time: 0.0374   lr: 0.0001  max_mem: 34664M
[08/16 01:13:23] d2.utils.events INFO:  eta: 0:17:21  iter: 219  total_loss: 40.51  m1_loss_ce: 0.5508  m1_loss_mask: 0.1841  m1_loss_dice: 1.183  m1_loss_ce_0: 0.6986  m1_loss_mask_0: 0.1992  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.694  m1_loss_mask_1: 0.1873  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.6322  m1_loss_mask_2: 0.1761  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.6008  m1_loss_mask_3: 0.1761  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.58  m1_loss_mask_4: 0.1776  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.568  m1_loss_mask_5: 0.1754  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.5534  m1_loss_mask_6: 0.1722  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.5433  m1_loss_mask_7: 0.1709  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.5589  m1_loss_mask_8: 0.1724  m1_loss_dice_8: 1.202  m2_loss_ce: 0.5501  m2_loss_mask: 0.1694  m2_loss_dice: 1.187  m2_loss_ce_0: 0.6861  m2_loss_mask_0: 0.1999  m2_loss_dice_0: 1.409  m2_loss_ce_1: 0.7182  m2_loss_mask_1: 0.1857  m2_loss_dice_1: 1.321  m2_loss_ce_2: 0.6427  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.6027  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.5687  m2_loss_mask_4: 0.1742  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.5909  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.202  m2_loss_ce_6: 0.5424  m2_loss_mask_6: 0.1709  m2_loss_dice_6: 1.176  m2_loss_ce_7: 0.5442  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.5331  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.195  com_loss_ce: 0.4366  com_loss_mask: 0.05227  com_loss_dice: 0.2986    time: 1.3458  last_time: 1.3139  data_time: 0.0391  last_data_time: 0.0489   lr: 0.0001  max_mem: 34664M
[08/16 01:13:50] d2.utils.events INFO:  eta: 0:16:55  iter: 239  total_loss: 42.38  m1_loss_ce: 0.555  m1_loss_mask: 0.1792  m1_loss_dice: 1.308  m1_loss_ce_0: 0.6527  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.539  m1_loss_ce_1: 0.7114  m1_loss_mask_1: 0.1856  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.6491  m1_loss_mask_2: 0.177  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5899  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.309  m1_loss_ce_4: 0.5821  m1_loss_mask_4: 0.1695  m1_loss_dice_4: 1.302  m1_loss_ce_5: 0.5527  m1_loss_mask_5: 0.1714  m1_loss_dice_5: 1.322  m1_loss_ce_6: 0.5594  m1_loss_mask_6: 0.1685  m1_loss_dice_6: 1.316  m1_loss_ce_7: 0.546  m1_loss_mask_7: 0.167  m1_loss_dice_7: 1.261  m1_loss_ce_8: 0.5291  m1_loss_mask_8: 0.1717  m1_loss_dice_8: 1.308  m2_loss_ce: 0.5055  m2_loss_mask: 0.161  m2_loss_dice: 1.309  m2_loss_ce_0: 0.6205  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.684  m2_loss_mask_1: 0.1744  m2_loss_dice_1: 1.484  m2_loss_ce_2: 0.6465  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.587  m2_loss_mask_3: 0.1655  m2_loss_dice_3: 1.327  m2_loss_ce_4: 0.5741  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.345  m2_loss_ce_5: 0.5723  m2_loss_mask_5: 0.1683  m2_loss_dice_5: 1.325  m2_loss_ce_6: 0.5553  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.338  m2_loss_ce_7: 0.5465  m2_loss_mask_7: 0.1644  m2_loss_dice_7: 1.305  m2_loss_ce_8: 0.497  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.267  com_loss_ce: 0.4253  com_loss_mask: 0.04482  com_loss_dice: 0.313    time: 1.3458  last_time: 1.2684  data_time: 0.0379  last_data_time: 0.0313   lr: 0.0001  max_mem: 34664M
[08/16 01:14:18] d2.utils.events INFO:  eta: 0:16:29  iter: 259  total_loss: 41.03  m1_loss_ce: 0.5553  m1_loss_mask: 0.1714  m1_loss_dice: 1.188  m1_loss_ce_0: 0.673  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.721  m1_loss_mask_1: 0.1707  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.6534  m1_loss_mask_2: 0.1622  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.6086  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.6013  m1_loss_mask_4: 0.1602  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.5622  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.19  m1_loss_ce_6: 0.588  m1_loss_mask_6: 0.16  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.5674  m1_loss_mask_7: 0.1604  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.5887  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.203  m2_loss_ce: 0.5664  m2_loss_mask: 0.1609  m2_loss_dice: 1.169  m2_loss_ce_0: 0.6638  m2_loss_mask_0: 0.188  m2_loss_dice_0: 1.399  m2_loss_ce_1: 0.6827  m2_loss_mask_1: 0.1721  m2_loss_dice_1: 1.298  m2_loss_ce_2: 0.6437  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.22  m2_loss_ce_3: 0.5847  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.5563  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.194  m2_loss_ce_5: 0.5621  m2_loss_mask_5: 0.163  m2_loss_dice_5: 1.18  m2_loss_ce_6: 0.56  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.173  m2_loss_ce_7: 0.538  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.5207  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.195  com_loss_ce: 0.461  com_loss_mask: 0.04695  com_loss_dice: 0.3189    time: 1.3469  last_time: 1.3559  data_time: 0.0384  last_data_time: 0.0425   lr: 0.0001  max_mem: 34664M
[08/16 01:14:45] d2.utils.events INFO:  eta: 0:16:03  iter: 279  total_loss: 42.27  m1_loss_ce: 0.5667  m1_loss_mask: 0.1885  m1_loss_dice: 1.245  m1_loss_ce_0: 0.6743  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.494  m1_loss_ce_1: 0.7122  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.6609  m1_loss_mask_2: 0.18  m1_loss_dice_2: 1.327  m1_loss_ce_3: 0.6222  m1_loss_mask_3: 0.1777  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.5812  m1_loss_mask_4: 0.1767  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5704  m1_loss_mask_5: 0.1736  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5481  m1_loss_mask_6: 0.1788  m1_loss_dice_6: 1.239  m1_loss_ce_7: 0.5608  m1_loss_mask_7: 0.1742  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.522  m1_loss_mask_8: 0.1779  m1_loss_dice_8: 1.233  m2_loss_ce: 0.5496  m2_loss_mask: 0.1755  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6576  m2_loss_mask_0: 0.2031  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.6816  m2_loss_mask_1: 0.1884  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.677  m2_loss_mask_2: 0.182  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.6384  m2_loss_mask_3: 0.1778  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5723  m2_loss_mask_4: 0.1794  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5505  m2_loss_mask_5: 0.1767  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5654  m2_loss_mask_6: 0.1758  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5784  m2_loss_mask_7: 0.1766  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.5496  m2_loss_mask_8: 0.1754  m2_loss_dice_8: 1.252  com_loss_ce: 0.4624  com_loss_mask: 0.05604  com_loss_dice: 0.3155    time: 1.3487  last_time: 1.5717  data_time: 0.0390  last_data_time: 0.0403   lr: 0.0001  max_mem: 34664M
[08/16 01:15:12] d2.utils.events INFO:  eta: 0:15:37  iter: 299  total_loss: 41.68  m1_loss_ce: 0.5839  m1_loss_mask: 0.1836  m1_loss_dice: 1.214  m1_loss_ce_0: 0.6747  m1_loss_mask_0: 0.1856  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.7182  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.6904  m1_loss_mask_2: 0.1669  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.6153  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.6159  m1_loss_mask_4: 0.1664  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.6028  m1_loss_mask_5: 0.1663  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.5945  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.56  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.5773  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.223  m2_loss_ce: 0.5848  m2_loss_mask: 0.1597  m2_loss_dice: 1.195  m2_loss_ce_0: 0.648  m2_loss_mask_0: 0.19  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.7011  m2_loss_mask_1: 0.1715  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6616  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.615  m2_loss_mask_3: 0.1618  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.5698  m2_loss_mask_4: 0.1644  m2_loss_dice_4: 1.204  m2_loss_ce_5: 0.5926  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.211  m2_loss_ce_6: 0.5939  m2_loss_mask_6: 0.158  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.5628  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.581  m2_loss_mask_8: 0.1575  m2_loss_dice_8: 1.19  com_loss_ce: 0.4869  com_loss_mask: 0.04807  com_loss_dice: 0.3067    time: 1.3488  last_time: 1.3830  data_time: 0.0409  last_data_time: 0.0363   lr: 0.0001  max_mem: 34664M
[08/16 01:15:40] d2.utils.events INFO:  eta: 0:15:11  iter: 319  total_loss: 43.38  m1_loss_ce: 0.5693  m1_loss_mask: 0.1902  m1_loss_dice: 1.3  m1_loss_ce_0: 0.623  m1_loss_mask_0: 0.1986  m1_loss_dice_0: 1.569  m1_loss_ce_1: 0.6898  m1_loss_mask_1: 0.1851  m1_loss_dice_1: 1.408  m1_loss_ce_2: 0.6291  m1_loss_mask_2: 0.1721  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5956  m1_loss_mask_3: 0.1693  m1_loss_dice_3: 1.281  m1_loss_ce_4: 0.6261  m1_loss_mask_4: 0.1685  m1_loss_dice_4: 1.31  m1_loss_ce_5: 0.5597  m1_loss_mask_5: 0.1663  m1_loss_dice_5: 1.318  m1_loss_ce_6: 0.5702  m1_loss_mask_6: 0.1689  m1_loss_dice_6: 1.282  m1_loss_ce_7: 0.5423  m1_loss_mask_7: 0.1666  m1_loss_dice_7: 1.282  m1_loss_ce_8: 0.5444  m1_loss_mask_8: 0.1705  m1_loss_dice_8: 1.243  m2_loss_ce: 0.5635  m2_loss_mask: 0.1631  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6559  m2_loss_mask_0: 0.1979  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.6756  m2_loss_mask_1: 0.1807  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.6407  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.6024  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5707  m2_loss_mask_4: 0.1663  m2_loss_dice_4: 1.319  m2_loss_ce_5: 0.549  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5234  m2_loss_mask_6: 0.1636  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.5536  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5691  m2_loss_mask_8: 0.162  m2_loss_dice_8: 1.264  com_loss_ce: 0.4111  com_loss_mask: 0.04565  com_loss_dice: 0.2895    time: 1.3495  last_time: 1.3356  data_time: 0.0401  last_data_time: 0.0390   lr: 0.0001  max_mem: 34664M
[08/16 01:16:07] d2.utils.events INFO:  eta: 0:14:45  iter: 339  total_loss: 43  m1_loss_ce: 0.5584  m1_loss_mask: 0.1812  m1_loss_dice: 1.227  m1_loss_ce_0: 0.6675  m1_loss_mask_0: 0.1847  m1_loss_dice_0: 1.516  m1_loss_ce_1: 0.7268  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.6734  m1_loss_mask_2: 0.1702  m1_loss_dice_2: 1.354  m1_loss_ce_3: 0.6093  m1_loss_mask_3: 0.1659  m1_loss_dice_3: 1.305  m1_loss_ce_4: 0.5639  m1_loss_mask_4: 0.1636  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.5743  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.5767  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.299  m1_loss_ce_7: 0.5381  m1_loss_mask_7: 0.1634  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.5767  m1_loss_mask_8: 0.1644  m1_loss_dice_8: 1.233  m2_loss_ce: 0.5488  m2_loss_mask: 0.1666  m2_loss_dice: 1.243  m2_loss_ce_0: 0.6675  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.542  m2_loss_ce_1: 0.7306  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.422  m2_loss_ce_2: 0.6728  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.6112  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5653  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5665  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.5509  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.5596  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5442  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.267  com_loss_ce: 0.4314  com_loss_mask: 0.0437  com_loss_dice: 0.3074    time: 1.3503  last_time: 1.4156  data_time: 0.0417  last_data_time: 0.0475   lr: 0.0001  max_mem: 34664M
[08/16 01:16:34] d2.utils.events INFO:  eta: 0:14:18  iter: 359  total_loss: 40.4  m1_loss_ce: 0.5487  m1_loss_mask: 0.1733  m1_loss_dice: 1.14  m1_loss_ce_0: 0.6582  m1_loss_mask_0: 0.1887  m1_loss_dice_0: 1.293  m1_loss_ce_1: 0.7258  m1_loss_mask_1: 0.1777  m1_loss_dice_1: 1.274  m1_loss_ce_2: 0.6531  m1_loss_mask_2: 0.1683  m1_loss_dice_2: 1.198  m1_loss_ce_3: 0.5943  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.5767  m1_loss_mask_4: 0.1605  m1_loss_dice_4: 1.15  m1_loss_ce_5: 0.5628  m1_loss_mask_5: 0.1608  m1_loss_dice_5: 1.159  m1_loss_ce_6: 0.5475  m1_loss_mask_6: 0.1605  m1_loss_dice_6: 1.148  m1_loss_ce_7: 0.5277  m1_loss_mask_7: 0.1608  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.5276  m1_loss_mask_8: 0.1605  m1_loss_dice_8: 1.172  m2_loss_ce: 0.539  m2_loss_mask: 0.1628  m2_loss_dice: 1.135  m2_loss_ce_0: 0.5985  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.383  m2_loss_ce_1: 0.6644  m2_loss_mask_1: 0.1729  m2_loss_dice_1: 1.266  m2_loss_ce_2: 0.6429  m2_loss_mask_2: 0.1649  m2_loss_dice_2: 1.162  m2_loss_ce_3: 0.5671  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.5171  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.178  m2_loss_ce_5: 0.5401  m2_loss_mask_5: 0.1631  m2_loss_dice_5: 1.143  m2_loss_ce_6: 0.5446  m2_loss_mask_6: 0.1629  m2_loss_dice_6: 1.172  m2_loss_ce_7: 0.536  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.5414  m2_loss_mask_8: 0.1623  m2_loss_dice_8: 1.151  com_loss_ce: 0.4059  com_loss_mask: 0.04716  com_loss_dice: 0.2761    time: 1.3496  last_time: 1.3869  data_time: 0.0385  last_data_time: 0.0412   lr: 0.0001  max_mem: 34664M
[08/16 01:17:01] d2.utils.events INFO:  eta: 0:13:52  iter: 379  total_loss: 40.69  m1_loss_ce: 0.5325  m1_loss_mask: 0.1821  m1_loss_dice: 1.229  m1_loss_ce_0: 0.6579  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.7003  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.6792  m1_loss_mask_2: 0.1671  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5752  m1_loss_mask_3: 0.1607  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5899  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.275  m1_loss_ce_5: 0.5588  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.4963  m1_loss_mask_6: 0.1596  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.5293  m1_loss_mask_7: 0.1596  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.5198  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.211  m2_loss_ce: 0.5509  m2_loss_mask: 0.1602  m2_loss_dice: 1.209  m2_loss_ce_0: 0.6483  m2_loss_mask_0: 0.1893  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.7014  m2_loss_mask_1: 0.171  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6579  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.257  m2_loss_ce_3: 0.5643  m2_loss_mask_3: 0.1608  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.5292  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.548  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5239  m2_loss_mask_6: 0.1604  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.526  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.5612  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.224  com_loss_ce: 0.4243  com_loss_mask: 0.04528  com_loss_dice: 0.2875    time: 1.3501  last_time: 1.3419  data_time: 0.0392  last_data_time: 0.0381   lr: 0.0001  max_mem: 34664M
[08/16 01:17:29] d2.utils.events INFO:  eta: 0:13:25  iter: 399  total_loss: 40.98  m1_loss_ce: 0.4905  m1_loss_mask: 0.1793  m1_loss_dice: 1.165  m1_loss_ce_0: 0.6309  m1_loss_mask_0: 0.1835  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.6681  m1_loss_mask_1: 0.1724  m1_loss_dice_1: 1.326  m1_loss_ce_2: 0.6274  m1_loss_mask_2: 0.1644  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.5569  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.5207  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.5144  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.503  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.4775  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.141  m1_loss_ce_8: 0.4979  m1_loss_mask_8: 0.1623  m1_loss_dice_8: 1.168  m2_loss_ce: 0.5299  m2_loss_mask: 0.1613  m2_loss_dice: 1.203  m2_loss_ce_0: 0.6412  m2_loss_mask_0: 0.1923  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6643  m2_loss_mask_1: 0.1743  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.6455  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.26  m2_loss_ce_3: 0.5841  m2_loss_mask_3: 0.1616  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.5402  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.522  m2_loss_mask_5: 0.1662  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5199  m2_loss_mask_6: 0.1611  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.5378  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.5371  m2_loss_mask_8: 0.1604  m2_loss_dice_8: 1.221  com_loss_ce: 0.4535  com_loss_mask: 0.04451  com_loss_dice: 0.2945    time: 1.3508  last_time: 1.3117  data_time: 0.0399  last_data_time: 0.0540   lr: 0.0001  max_mem: 34664M
[08/16 01:17:56] d2.utils.events INFO:  eta: 0:12:58  iter: 419  total_loss: 41.46  m1_loss_ce: 0.5192  m1_loss_mask: 0.1815  m1_loss_dice: 1.18  m1_loss_ce_0: 0.6387  m1_loss_mask_0: 0.1751  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.6926  m1_loss_mask_1: 0.166  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.6362  m1_loss_mask_2: 0.1622  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.5691  m1_loss_mask_3: 0.1608  m1_loss_dice_3: 1.213  m1_loss_ce_4: 0.5248  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5417  m1_loss_mask_5: 0.155  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4976  m1_loss_mask_6: 0.1611  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.5142  m1_loss_mask_7: 0.1582  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4976  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.188  m2_loss_ce: 0.5275  m2_loss_mask: 0.1537  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6208  m2_loss_mask_0: 0.1832  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6809  m2_loss_mask_1: 0.1649  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6528  m2_loss_mask_2: 0.1561  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5626  m2_loss_mask_3: 0.1572  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.5471  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5616  m2_loss_mask_5: 0.1543  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.5325  m2_loss_mask_6: 0.1556  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.512  m2_loss_mask_7: 0.1517  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.5268  m2_loss_mask_8: 0.1542  m2_loss_dice_8: 1.224  com_loss_ce: 0.4225  com_loss_mask: 0.04231  com_loss_dice: 0.2779    time: 1.3509  last_time: 1.3744  data_time: 0.0419  last_data_time: 0.0429   lr: 0.0001  max_mem: 34664M
[08/16 01:18:24] d2.utils.events INFO:  eta: 0:12:32  iter: 439  total_loss: 41.15  m1_loss_ce: 0.5142  m1_loss_mask: 0.1816  m1_loss_dice: 1.256  m1_loss_ce_0: 0.6283  m1_loss_mask_0: 0.1822  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.6476  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.626  m1_loss_mask_2: 0.1609  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5808  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.224  m1_loss_ce_4: 0.5511  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5323  m1_loss_mask_5: 0.1593  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5207  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.5053  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.5174  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.251  m2_loss_ce: 0.5351  m2_loss_mask: 0.1626  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6197  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.514  m2_loss_ce_1: 0.6496  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.615  m2_loss_mask_2: 0.161  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5886  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5542  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.5766  m2_loss_mask_5: 0.1644  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5321  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5498  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5323  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.256  com_loss_ce: 0.4097  com_loss_mask: 0.04243  com_loss_dice: 0.2894    time: 1.3523  last_time: 1.3436  data_time: 0.0422  last_data_time: 0.0365   lr: 0.0001  max_mem: 34664M
[08/16 01:18:51] d2.utils.events INFO:  eta: 0:12:05  iter: 459  total_loss: 41.25  m1_loss_ce: 0.515  m1_loss_mask: 0.1924  m1_loss_dice: 1.199  m1_loss_ce_0: 0.6558  m1_loss_mask_0: 0.1881  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.6739  m1_loss_mask_1: 0.1891  m1_loss_dice_1: 1.298  m1_loss_ce_2: 0.6639  m1_loss_mask_2: 0.1822  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.5685  m1_loss_mask_3: 0.1795  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.5615  m1_loss_mask_4: 0.1768  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.5669  m1_loss_mask_5: 0.1755  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.5192  m1_loss_mask_6: 0.1754  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.5136  m1_loss_mask_7: 0.1757  m1_loss_dice_7: 1.191  m1_loss_ce_8: 0.5326  m1_loss_mask_8: 0.174  m1_loss_dice_8: 1.174  m2_loss_ce: 0.5643  m2_loss_mask: 0.1737  m2_loss_dice: 1.186  m2_loss_ce_0: 0.6619  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.409  m2_loss_ce_1: 0.6641  m2_loss_mask_1: 0.1873  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.614  m2_loss_mask_2: 0.1802  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.5659  m2_loss_mask_3: 0.1777  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5412  m2_loss_mask_4: 0.1792  m2_loss_dice_4: 1.18  m2_loss_ce_5: 0.5483  m2_loss_mask_5: 0.1771  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.5316  m2_loss_mask_6: 0.1753  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.5475  m2_loss_mask_7: 0.1721  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.5073  m2_loss_mask_8: 0.1724  m2_loss_dice_8: 1.191  com_loss_ce: 0.436  com_loss_mask: 0.04216  com_loss_dice: 0.2828    time: 1.3522  last_time: 1.3307  data_time: 0.0403  last_data_time: 0.0551   lr: 0.0001  max_mem: 34664M
[08/16 01:19:18] d2.utils.events INFO:  eta: 0:11:39  iter: 479  total_loss: 42.81  m1_loss_ce: 0.5967  m1_loss_mask: 0.1922  m1_loss_dice: 1.249  m1_loss_ce_0: 0.676  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.48  m1_loss_ce_1: 0.7191  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.6758  m1_loss_mask_2: 0.1846  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.6096  m1_loss_mask_3: 0.1782  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.5869  m1_loss_mask_4: 0.1772  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.5964  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.598  m1_loss_mask_6: 0.1718  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.5518  m1_loss_mask_7: 0.1705  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.5444  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5938  m2_loss_mask: 0.1737  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6777  m2_loss_mask_0: 0.2076  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.7457  m2_loss_mask_1: 0.1827  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.675  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.6292  m2_loss_mask_3: 0.1759  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5979  m2_loss_mask_4: 0.1758  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.6133  m2_loss_mask_5: 0.1735  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.6106  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5964  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.5844  m2_loss_mask_8: 0.1742  m2_loss_dice_8: 1.256  com_loss_ce: 0.4801  com_loss_mask: 0.04436  com_loss_dice: 0.2995    time: 1.3524  last_time: 1.2916  data_time: 0.0389  last_data_time: 0.0400   lr: 0.0001  max_mem: 34664M
[08/16 01:19:45] d2.utils.events INFO:  eta: 0:11:12  iter: 499  total_loss: 41.02  m1_loss_ce: 0.5291  m1_loss_mask: 0.1972  m1_loss_dice: 1.189  m1_loss_ce_0: 0.6101  m1_loss_mask_0: 0.1969  m1_loss_dice_0: 1.379  m1_loss_ce_1: 0.6328  m1_loss_mask_1: 0.1867  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.6052  m1_loss_mask_2: 0.1792  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.5667  m1_loss_mask_3: 0.1769  m1_loss_dice_3: 1.199  m1_loss_ce_4: 0.5614  m1_loss_mask_4: 0.1755  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.5459  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.5364  m1_loss_mask_6: 0.1767  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.525  m1_loss_mask_7: 0.1773  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.5197  m1_loss_mask_8: 0.1765  m1_loss_dice_8: 1.161  m2_loss_ce: 0.5139  m2_loss_mask: 0.1775  m2_loss_dice: 1.165  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.2073  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6718  m2_loss_mask_1: 0.1883  m2_loss_dice_1: 1.359  m2_loss_ce_2: 0.6183  m2_loss_mask_2: 0.1789  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.5738  m2_loss_mask_3: 0.178  m2_loss_dice_3: 1.2  m2_loss_ce_4: 0.5317  m2_loss_mask_4: 0.1815  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5383  m2_loss_mask_5: 0.1809  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.5357  m2_loss_mask_6: 0.1781  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.5082  m2_loss_mask_7: 0.1803  m2_loss_dice_7: 1.189  m2_loss_ce_8: 0.5037  m2_loss_mask_8: 0.179  m2_loss_dice_8: 1.212  com_loss_ce: 0.4201  com_loss_mask: 0.04467  com_loss_dice: 0.2699    time: 1.3521  last_time: 1.3603  data_time: 0.0386  last_data_time: 0.0396   lr: 0.0001  max_mem: 34664M
[08/16 01:20:12] d2.utils.events INFO:  eta: 0:10:45  iter: 519  total_loss: 41.23  m1_loss_ce: 0.5203  m1_loss_mask: 0.1858  m1_loss_dice: 1.266  m1_loss_ce_0: 0.5937  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.6273  m1_loss_mask_1: 0.1823  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6346  m1_loss_mask_2: 0.1726  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5378  m1_loss_mask_3: 0.1717  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.5662  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.5433  m1_loss_mask_5: 0.1695  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.4994  m1_loss_mask_6: 0.1666  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.5207  m1_loss_mask_7: 0.1655  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.4848  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.213  m2_loss_ce: 0.5056  m2_loss_mask: 0.1704  m2_loss_dice: 1.249  m2_loss_ce_0: 0.6216  m2_loss_mask_0: 0.1925  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6703  m2_loss_mask_1: 0.1822  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.6435  m2_loss_mask_2: 0.1751  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.596  m2_loss_mask_3: 0.1734  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5626  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.252  m2_loss_ce_5: 0.5395  m2_loss_mask_5: 0.1718  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.4977  m2_loss_mask_6: 0.17  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.5361  m2_loss_mask_7: 0.1725  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.5175  m2_loss_mask_8: 0.1704  m2_loss_dice_8: 1.231  com_loss_ce: 0.4495  com_loss_mask: 0.04045  com_loss_dice: 0.2828    time: 1.3523  last_time: 1.3721  data_time: 0.0404  last_data_time: 0.0339   lr: 0.0001  max_mem: 35281M
[08/16 01:20:40] d2.utils.events INFO:  eta: 0:10:18  iter: 539  total_loss: 42.37  m1_loss_ce: 0.5025  m1_loss_mask: 0.1785  m1_loss_dice: 1.296  m1_loss_ce_0: 0.6187  m1_loss_mask_0: 0.1869  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.7034  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.423  m1_loss_ce_2: 0.6658  m1_loss_mask_2: 0.167  m1_loss_dice_2: 1.343  m1_loss_ce_3: 0.5658  m1_loss_mask_3: 0.165  m1_loss_dice_3: 1.317  m1_loss_ce_4: 0.566  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.334  m1_loss_ce_5: 0.5516  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.328  m1_loss_ce_6: 0.5163  m1_loss_mask_6: 0.1582  m1_loss_dice_6: 1.297  m1_loss_ce_7: 0.5176  m1_loss_mask_7: 0.1589  m1_loss_dice_7: 1.307  m1_loss_ce_8: 0.5027  m1_loss_mask_8: 0.159  m1_loss_dice_8: 1.244  m2_loss_ce: 0.503  m2_loss_mask: 0.1641  m2_loss_dice: 1.295  m2_loss_ce_0: 0.6115  m2_loss_mask_0: 0.2002  m2_loss_dice_0: 1.506  m2_loss_ce_1: 0.6778  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.6344  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5686  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.308  m2_loss_ce_4: 0.5354  m2_loss_mask_4: 0.1684  m2_loss_dice_4: 1.326  m2_loss_ce_5: 0.5372  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.5177  m2_loss_mask_6: 0.1663  m2_loss_dice_6: 1.318  m2_loss_ce_7: 0.5366  m2_loss_mask_7: 0.1666  m2_loss_dice_7: 1.291  m2_loss_ce_8: 0.5076  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.265  com_loss_ce: 0.4151  com_loss_mask: 0.04441  com_loss_dice: 0.3048    time: 1.3525  last_time: 1.3330  data_time: 0.0409  last_data_time: 0.0402   lr: 0.0001  max_mem: 35281M
[08/16 01:21:07] d2.utils.events INFO:  eta: 0:09:51  iter: 559  total_loss: 41.42  m1_loss_ce: 0.5612  m1_loss_mask: 0.1908  m1_loss_dice: 1.217  m1_loss_ce_0: 0.6507  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.7072  m1_loss_mask_1: 0.1783  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.6453  m1_loss_mask_2: 0.1711  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.613  m1_loss_mask_3: 0.1691  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.6191  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5768  m1_loss_mask_5: 0.1679  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.5461  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5528  m1_loss_mask_7: 0.17  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.5331  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.228  m2_loss_ce: 0.5223  m2_loss_mask: 0.1656  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6534  m2_loss_mask_0: 0.1938  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6781  m2_loss_mask_1: 0.1777  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.6537  m2_loss_mask_2: 0.1673  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.597  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5736  m2_loss_mask_4: 0.1677  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5539  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5938  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.6012  m2_loss_mask_7: 0.164  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.559  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.226  com_loss_ce: 0.4352  com_loss_mask: 0.04163  com_loss_dice: 0.2901    time: 1.3524  last_time: 1.3976  data_time: 0.0387  last_data_time: 0.0398   lr: 0.0001  max_mem: 35281M
[08/16 01:21:34] d2.utils.events INFO:  eta: 0:09:25  iter: 579  total_loss: 39.8  m1_loss_ce: 0.5272  m1_loss_mask: 0.1822  m1_loss_dice: 1.199  m1_loss_ce_0: 0.6131  m1_loss_mask_0: 0.1968  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6722  m1_loss_mask_1: 0.1753  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.621  m1_loss_mask_2: 0.1638  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.6033  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.5807  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.5518  m1_loss_mask_5: 0.1621  m1_loss_dice_5: 1.196  m1_loss_ce_6: 0.5447  m1_loss_mask_6: 0.1596  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.5219  m1_loss_mask_7: 0.1618  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.5777  m1_loss_mask_8: 0.1617  m1_loss_dice_8: 1.185  m2_loss_ce: 0.4945  m2_loss_mask: 0.1595  m2_loss_dice: 1.161  m2_loss_ce_0: 0.6249  m2_loss_mask_0: 0.1963  m2_loss_dice_0: 1.387  m2_loss_ce_1: 0.6506  m2_loss_mask_1: 0.1776  m2_loss_dice_1: 1.311  m2_loss_ce_2: 0.6237  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.27  m2_loss_ce_3: 0.5536  m2_loss_mask_3: 0.1633  m2_loss_dice_3: 1.196  m2_loss_ce_4: 0.5362  m2_loss_mask_4: 0.1609  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.5398  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.185  m2_loss_ce_6: 0.5161  m2_loss_mask_6: 0.1609  m2_loss_dice_6: 1.14  m2_loss_ce_7: 0.5096  m2_loss_mask_7: 0.1583  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.4965  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.201  com_loss_ce: 0.4255  com_loss_mask: 0.04196  com_loss_dice: 0.2749    time: 1.3525  last_time: 1.3526  data_time: 0.0399  last_data_time: 0.0351   lr: 0.0001  max_mem: 35281M
[08/16 01:22:01] d2.utils.events INFO:  eta: 0:08:58  iter: 599  total_loss: 39.57  m1_loss_ce: 0.5292  m1_loss_mask: 0.1921  m1_loss_dice: 1.162  m1_loss_ce_0: 0.6176  m1_loss_mask_0: 0.204  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.6721  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.24  m1_loss_ce_2: 0.6094  m1_loss_mask_2: 0.1777  m1_loss_dice_2: 1.233  m1_loss_ce_3: 0.5702  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.154  m1_loss_ce_4: 0.5588  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.164  m1_loss_ce_5: 0.5292  m1_loss_mask_5: 0.1683  m1_loss_dice_5: 1.175  m1_loss_ce_6: 0.529  m1_loss_mask_6: 0.1668  m1_loss_dice_6: 1.147  m1_loss_ce_7: 0.5081  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.5101  m1_loss_mask_8: 0.1685  m1_loss_dice_8: 1.152  m2_loss_ce: 0.5268  m2_loss_mask: 0.1773  m2_loss_dice: 1.161  m2_loss_ce_0: 0.6076  m2_loss_mask_0: 0.2085  m2_loss_dice_0: 1.365  m2_loss_ce_1: 0.6587  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.27  m2_loss_ce_2: 0.6281  m2_loss_mask_2: 0.1762  m2_loss_dice_2: 1.23  m2_loss_ce_3: 0.5807  m2_loss_mask_3: 0.1763  m2_loss_dice_3: 1.19  m2_loss_ce_4: 0.5174  m2_loss_mask_4: 0.1761  m2_loss_dice_4: 1.183  m2_loss_ce_5: 0.5321  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.5372  m2_loss_mask_6: 0.1757  m2_loss_dice_6: 1.164  m2_loss_ce_7: 0.5395  m2_loss_mask_7: 0.1742  m2_loss_dice_7: 1.161  m2_loss_ce_8: 0.5441  m2_loss_mask_8: 0.1734  m2_loss_dice_8: 1.167  com_loss_ce: 0.4474  com_loss_mask: 0.04473  com_loss_dice: 0.2672    time: 1.3523  last_time: 1.2993  data_time: 0.0386  last_data_time: 0.0366   lr: 0.0001  max_mem: 35281M
[08/16 01:22:28] d2.utils.events INFO:  eta: 0:08:31  iter: 619  total_loss: 39.85  m1_loss_ce: 0.5193  m1_loss_mask: 0.1936  m1_loss_dice: 1.145  m1_loss_ce_0: 0.5965  m1_loss_mask_0: 0.2029  m1_loss_dice_0: 1.329  m1_loss_ce_1: 0.6759  m1_loss_mask_1: 0.1877  m1_loss_dice_1: 1.249  m1_loss_ce_2: 0.6019  m1_loss_mask_2: 0.1861  m1_loss_dice_2: 1.2  m1_loss_ce_3: 0.5374  m1_loss_mask_3: 0.1763  m1_loss_dice_3: 1.161  m1_loss_ce_4: 0.5169  m1_loss_mask_4: 0.1768  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.5071  m1_loss_mask_5: 0.174  m1_loss_dice_5: 1.14  m1_loss_ce_6: 0.4913  m1_loss_mask_6: 0.1763  m1_loss_dice_6: 1.156  m1_loss_ce_7: 0.4793  m1_loss_mask_7: 0.1751  m1_loss_dice_7: 1.114  m1_loss_ce_8: 0.4616  m1_loss_mask_8: 0.1768  m1_loss_dice_8: 1.149  m2_loss_ce: 0.486  m2_loss_mask: 0.1758  m2_loss_dice: 1.117  m2_loss_ce_0: 0.6206  m2_loss_mask_0: 0.2098  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6582  m2_loss_mask_1: 0.1874  m2_loss_dice_1: 1.278  m2_loss_ce_2: 0.63  m2_loss_mask_2: 0.1829  m2_loss_dice_2: 1.209  m2_loss_ce_3: 0.5461  m2_loss_mask_3: 0.1804  m2_loss_dice_3: 1.21  m2_loss_ce_4: 0.5175  m2_loss_mask_4: 0.1797  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.5076  m2_loss_mask_5: 0.1786  m2_loss_dice_5: 1.188  m2_loss_ce_6: 0.4814  m2_loss_mask_6: 0.1751  m2_loss_dice_6: 1.13  m2_loss_ce_7: 0.4869  m2_loss_mask_7: 0.177  m2_loss_dice_7: 1.171  m2_loss_ce_8: 0.5044  m2_loss_mask_8: 0.1743  m2_loss_dice_8: 1.143  com_loss_ce: 0.5109  com_loss_mask: 0.04884  com_loss_dice: 0.3095    time: 1.3524  last_time: 1.3164  data_time: 0.0385  last_data_time: 0.0485   lr: 0.0001  max_mem: 35281M
[08/16 01:22:55] d2.utils.events INFO:  eta: 0:08:04  iter: 639  total_loss: 42.74  m1_loss_ce: 0.556  m1_loss_mask: 0.1886  m1_loss_dice: 1.303  m1_loss_ce_0: 0.6206  m1_loss_mask_0: 0.1903  m1_loss_dice_0: 1.56  m1_loss_ce_1: 0.6844  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.412  m1_loss_ce_2: 0.6501  m1_loss_mask_2: 0.1744  m1_loss_dice_2: 1.377  m1_loss_ce_3: 0.5999  m1_loss_mask_3: 0.1665  m1_loss_dice_3: 1.327  m1_loss_ce_4: 0.5533  m1_loss_mask_4: 0.1716  m1_loss_dice_4: 1.294  m1_loss_ce_5: 0.5541  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.323  m1_loss_ce_6: 0.5358  m1_loss_mask_6: 0.1624  m1_loss_dice_6: 1.299  m1_loss_ce_7: 0.4913  m1_loss_mask_7: 0.1705  m1_loss_dice_7: 1.287  m1_loss_ce_8: 0.5012  m1_loss_mask_8: 0.171  m1_loss_dice_8: 1.304  m2_loss_ce: 0.5492  m2_loss_mask: 0.1668  m2_loss_dice: 1.33  m2_loss_ce_0: 0.6111  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.568  m2_loss_ce_1: 0.6883  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.472  m2_loss_ce_2: 0.6451  m2_loss_mask_2: 0.1679  m2_loss_dice_2: 1.384  m2_loss_ce_3: 0.5955  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.5691  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.319  m2_loss_ce_5: 0.5425  m2_loss_mask_5: 0.1678  m2_loss_dice_5: 1.325  m2_loss_ce_6: 0.5352  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.332  m2_loss_ce_7: 0.5208  m2_loss_mask_7: 0.1678  m2_loss_dice_7: 1.326  m2_loss_ce_8: 0.5384  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.303  com_loss_ce: 0.5222  com_loss_mask: 0.04795  com_loss_dice: 0.3209    time: 1.3525  last_time: 1.3176  data_time: 0.0409  last_data_time: 0.0348   lr: 0.0001  max_mem: 35281M
[08/16 01:23:23] d2.utils.events INFO:  eta: 0:07:37  iter: 659  total_loss: 42.86  m1_loss_ce: 0.5611  m1_loss_mask: 0.186  m1_loss_dice: 1.299  m1_loss_ce_0: 0.6275  m1_loss_mask_0: 0.1956  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.7166  m1_loss_mask_1: 0.1775  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.6494  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.348  m1_loss_ce_3: 0.5927  m1_loss_mask_3: 0.1651  m1_loss_dice_3: 1.291  m1_loss_ce_4: 0.571  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.5642  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.5458  m1_loss_mask_6: 0.165  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.5273  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.258  m1_loss_ce_8: 0.5219  m1_loss_mask_8: 0.1686  m1_loss_dice_8: 1.253  m2_loss_ce: 0.5487  m2_loss_mask: 0.1674  m2_loss_dice: 1.312  m2_loss_ce_0: 0.6586  m2_loss_mask_0: 0.199  m2_loss_dice_0: 1.521  m2_loss_ce_1: 0.664  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.6759  m2_loss_mask_2: 0.1745  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5751  m2_loss_mask_3: 0.1734  m2_loss_dice_3: 1.307  m2_loss_ce_4: 0.5626  m2_loss_mask_4: 0.1752  m2_loss_dice_4: 1.308  m2_loss_ce_5: 0.5791  m2_loss_mask_5: 0.1725  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5297  m2_loss_mask_6: 0.1704  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5479  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.5293  m2_loss_mask_8: 0.1709  m2_loss_dice_8: 1.313  com_loss_ce: 0.4833  com_loss_mask: 0.04575  com_loss_dice: 0.2906    time: 1.3528  last_time: 1.4047  data_time: 0.0405  last_data_time: 0.0386   lr: 0.0001  max_mem: 35281M
[08/16 01:23:50] d2.utils.events INFO:  eta: 0:07:11  iter: 679  total_loss: 40.98  m1_loss_ce: 0.4878  m1_loss_mask: 0.178  m1_loss_dice: 1.24  m1_loss_ce_0: 0.5941  m1_loss_mask_0: 0.1897  m1_loss_dice_0: 1.522  m1_loss_ce_1: 0.6289  m1_loss_mask_1: 0.174  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.599  m1_loss_mask_2: 0.1665  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.5613  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.5076  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.5065  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.5067  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4936  m1_loss_mask_7: 0.1628  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.5069  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.2  m2_loss_ce: 0.503  m2_loss_mask: 0.162  m2_loss_dice: 1.259  m2_loss_ce_0: 0.6233  m2_loss_mask_0: 0.1914  m2_loss_dice_0: 1.559  m2_loss_ce_1: 0.6272  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.6032  m2_loss_mask_2: 0.1668  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5413  m2_loss_mask_3: 0.1676  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.5566  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5281  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.4857  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.268  m2_loss_ce_7: 0.5105  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.507  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.246  com_loss_ce: 0.4165  com_loss_mask: 0.0411  com_loss_dice: 0.2802    time: 1.3530  last_time: 1.3966  data_time: 0.0416  last_data_time: 0.0378   lr: 0.0001  max_mem: 35281M
[08/16 01:24:17] d2.utils.events INFO:  eta: 0:06:44  iter: 699  total_loss: 42.79  m1_loss_ce: 0.5503  m1_loss_mask: 0.1815  m1_loss_dice: 1.264  m1_loss_ce_0: 0.6085  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.7162  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.6343  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.6168  m1_loss_mask_3: 0.1666  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5731  m1_loss_mask_4: 0.1636  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.5453  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.5087  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.5318  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.5547  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.257  m2_loss_ce: 0.5464  m2_loss_mask: 0.1597  m2_loss_dice: 1.225  m2_loss_ce_0: 0.6308  m2_loss_mask_0: 0.1898  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.677  m2_loss_mask_1: 0.1663  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6542  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.6247  m2_loss_mask_3: 0.1646  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5796  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5649  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.5255  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.5589  m2_loss_mask_7: 0.1607  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.5552  m2_loss_mask_8: 0.1575  m2_loss_dice_8: 1.223  com_loss_ce: 0.4501  com_loss_mask: 0.04154  com_loss_dice: 0.2791    time: 1.3528  last_time: 1.3659  data_time: 0.0400  last_data_time: 0.0358   lr: 0.0001  max_mem: 35281M
[08/16 01:24:44] d2.utils.events INFO:  eta: 0:06:17  iter: 719  total_loss: 42.24  m1_loss_ce: 0.5055  m1_loss_mask: 0.1777  m1_loss_dice: 1.257  m1_loss_ce_0: 0.6438  m1_loss_mask_0: 0.1851  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.6898  m1_loss_mask_1: 0.172  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.6246  m1_loss_mask_2: 0.1589  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.56  m1_loss_mask_3: 0.1586  m1_loss_dice_3: 1.342  m1_loss_ce_4: 0.5411  m1_loss_mask_4: 0.158  m1_loss_dice_4: 1.293  m1_loss_ce_5: 0.5309  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.314  m1_loss_ce_6: 0.4949  m1_loss_mask_6: 0.155  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.479  m1_loss_mask_7: 0.1543  m1_loss_dice_7: 1.281  m1_loss_ce_8: 0.5082  m1_loss_mask_8: 0.1563  m1_loss_dice_8: 1.271  m2_loss_ce: 0.5525  m2_loss_mask: 0.1617  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6699  m2_loss_mask_0: 0.1836  m2_loss_dice_0: 1.538  m2_loss_ce_1: 0.7285  m2_loss_mask_1: 0.1712  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.6229  m2_loss_mask_2: 0.1644  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5947  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5665  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5534  m2_loss_mask_5: 0.1634  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.5564  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.5351  m2_loss_mask_7: 0.1607  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.5615  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.266  com_loss_ce: 0.3974  com_loss_mask: 0.04091  com_loss_dice: 0.2852    time: 1.3528  last_time: 1.3733  data_time: 0.0427  last_data_time: 0.0434   lr: 0.0001  max_mem: 35281M
[08/16 01:25:12] d2.utils.events INFO:  eta: 0:05:50  iter: 739  total_loss: 39.35  m1_loss_ce: 0.4843  m1_loss_mask: 0.1709  m1_loss_dice: 1.25  m1_loss_ce_0: 0.615  m1_loss_mask_0: 0.1894  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.6769  m1_loss_mask_1: 0.1661  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.6104  m1_loss_mask_2: 0.165  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.572  m1_loss_mask_3: 0.1595  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.5237  m1_loss_mask_4: 0.1559  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.5143  m1_loss_mask_5: 0.1551  m1_loss_dice_5: 1.269  m1_loss_ce_6: 0.4951  m1_loss_mask_6: 0.1563  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.469  m1_loss_mask_7: 0.1548  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.5092  m1_loss_mask_8: 0.1517  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5299  m2_loss_mask: 0.16  m2_loss_dice: 1.216  m2_loss_ce_0: 0.6301  m2_loss_mask_0: 0.1849  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6595  m2_loss_mask_1: 0.1701  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.6248  m2_loss_mask_2: 0.1661  m2_loss_dice_2: 1.27  m2_loss_ce_3: 0.5735  m2_loss_mask_3: 0.162  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5553  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5323  m2_loss_mask_5: 0.1612  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.5237  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5188  m2_loss_mask_7: 0.1611  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4975  m2_loss_mask_8: 0.161  m2_loss_dice_8: 1.249  com_loss_ce: 0.4098  com_loss_mask: 0.04025  com_loss_dice: 0.2984    time: 1.3528  last_time: 1.2987  data_time: 0.0429  last_data_time: 0.0336   lr: 0.0001  max_mem: 35281M
[08/16 01:25:39] d2.utils.events INFO:  eta: 0:05:23  iter: 759  total_loss: 39.45  m1_loss_ce: 0.4727  m1_loss_mask: 0.1785  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5978  m1_loss_mask_0: 0.188  m1_loss_dice_0: 1.373  m1_loss_ce_1: 0.6187  m1_loss_mask_1: 0.1715  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.5628  m1_loss_mask_2: 0.1619  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5326  m1_loss_mask_3: 0.1603  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5224  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4795  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.166  m1_loss_ce_6: 0.467  m1_loss_mask_6: 0.1613  m1_loss_dice_6: 1.175  m1_loss_ce_7: 0.4726  m1_loss_mask_7: 0.1601  m1_loss_dice_7: 1.154  m1_loss_ce_8: 0.4432  m1_loss_mask_8: 0.1582  m1_loss_dice_8: 1.199  m2_loss_ce: 0.5105  m2_loss_mask: 0.1575  m2_loss_dice: 1.22  m2_loss_ce_0: 0.5882  m2_loss_mask_0: 0.1865  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6428  m2_loss_mask_1: 0.1704  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.5775  m2_loss_mask_2: 0.1621  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5328  m2_loss_mask_3: 0.1617  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.523  m2_loss_mask_4: 0.1631  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5257  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.5088  m2_loss_mask_6: 0.1601  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.5252  m2_loss_mask_7: 0.157  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.5283  m2_loss_mask_8: 0.1584  m2_loss_dice_8: 1.198  com_loss_ce: 0.4106  com_loss_mask: 0.03928  com_loss_dice: 0.2724    time: 1.3527  last_time: 1.3686  data_time: 0.0420  last_data_time: 0.0434   lr: 0.0001  max_mem: 35281M
[08/16 01:26:05] d2.utils.events INFO:  eta: 0:04:56  iter: 779  total_loss: 41.48  m1_loss_ce: 0.5108  m1_loss_mask: 0.1826  m1_loss_dice: 1.2  m1_loss_ce_0: 0.6002  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.329  m1_loss_ce_1: 0.6247  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.293  m1_loss_ce_2: 0.6023  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.5419  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.192  m1_loss_ce_4: 0.533  m1_loss_mask_4: 0.1637  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.5309  m1_loss_mask_5: 0.162  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.5004  m1_loss_mask_6: 0.1642  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.5031  m1_loss_mask_7: 0.1616  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.5057  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.188  m2_loss_ce: 0.5269  m2_loss_mask: 0.1699  m2_loss_dice: 1.194  m2_loss_ce_0: 0.6501  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.67  m2_loss_mask_1: 0.1922  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.6388  m2_loss_mask_2: 0.1742  m2_loss_dice_2: 1.249  m2_loss_ce_3: 0.5871  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.5531  m2_loss_mask_4: 0.175  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5705  m2_loss_mask_5: 0.1713  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.5355  m2_loss_mask_6: 0.1695  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.5486  m2_loss_mask_7: 0.1721  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.5151  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.227  com_loss_ce: 0.4195  com_loss_mask: 0.03928  com_loss_dice: 0.2635    time: 1.3520  last_time: 1.3837  data_time: 0.0407  last_data_time: 0.0381   lr: 0.0001  max_mem: 35281M
[08/16 01:26:33] d2.utils.events INFO:  eta: 0:04:29  iter: 799  total_loss: 43.48  m1_loss_ce: 0.4997  m1_loss_mask: 0.1793  m1_loss_dice: 1.306  m1_loss_ce_0: 0.6596  m1_loss_mask_0: 0.1854  m1_loss_dice_0: 1.504  m1_loss_ce_1: 0.7046  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.6787  m1_loss_mask_2: 0.1581  m1_loss_dice_2: 1.383  m1_loss_ce_3: 0.5861  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.306  m1_loss_ce_4: 0.5491  m1_loss_mask_4: 0.1586  m1_loss_dice_4: 1.311  m1_loss_ce_5: 0.5516  m1_loss_mask_5: 0.1576  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.5094  m1_loss_mask_6: 0.1577  m1_loss_dice_6: 1.324  m1_loss_ce_7: 0.5018  m1_loss_mask_7: 0.1553  m1_loss_dice_7: 1.298  m1_loss_ce_8: 0.482  m1_loss_mask_8: 0.1538  m1_loss_dice_8: 1.29  m2_loss_ce: 0.5465  m2_loss_mask: 0.1584  m2_loss_dice: 1.281  m2_loss_ce_0: 0.6858  m2_loss_mask_0: 0.1912  m2_loss_dice_0: 1.575  m2_loss_ce_1: 0.7126  m2_loss_mask_1: 0.1738  m2_loss_dice_1: 1.492  m2_loss_ce_2: 0.6535  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.6078  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.357  m2_loss_ce_4: 0.5941  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.343  m2_loss_ce_5: 0.6032  m2_loss_mask_5: 0.1612  m2_loss_dice_5: 1.366  m2_loss_ce_6: 0.5769  m2_loss_mask_6: 0.1591  m2_loss_dice_6: 1.333  m2_loss_ce_7: 0.5541  m2_loss_mask_7: 0.1591  m2_loss_dice_7: 1.299  m2_loss_ce_8: 0.5548  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.317  com_loss_ce: 0.4532  com_loss_mask: 0.04133  com_loss_dice: 0.3149    time: 1.3527  last_time: 1.3874  data_time: 0.0434  last_data_time: 0.0577   lr: 0.0001  max_mem: 35281M
[08/16 01:27:00] d2.utils.events INFO:  eta: 0:04:02  iter: 819  total_loss: 41.32  m1_loss_ce: 0.5161  m1_loss_mask: 0.177  m1_loss_dice: 1.236  m1_loss_ce_0: 0.6269  m1_loss_mask_0: 0.1827  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.663  m1_loss_mask_1: 0.1668  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.6319  m1_loss_mask_2: 0.1635  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5663  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.5137  m1_loss_mask_4: 0.1564  m1_loss_dice_4: 1.268  m1_loss_ce_5: 0.4939  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.506  m1_loss_mask_6: 0.16  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.5169  m1_loss_mask_7: 0.1579  m1_loss_dice_7: 1.247  m1_loss_ce_8: 0.5078  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.234  m2_loss_ce: 0.5549  m2_loss_mask: 0.1628  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6541  m2_loss_mask_0: 0.1875  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6963  m2_loss_mask_1: 0.1725  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.6496  m2_loss_mask_2: 0.1639  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5882  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5875  m2_loss_mask_4: 0.1705  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5505  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5653  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5552  m2_loss_mask_7: 0.1627  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5309  m2_loss_mask_8: 0.1638  m2_loss_dice_8: 1.253  com_loss_ce: 0.4405  com_loss_mask: 0.04059  com_loss_dice: 0.2751    time: 1.3528  last_time: 1.3411  data_time: 0.0421  last_data_time: 0.0386   lr: 0.0001  max_mem: 35281M
[08/16 01:27:27] d2.utils.events INFO:  eta: 0:03:35  iter: 839  total_loss: 42.84  m1_loss_ce: 0.5941  m1_loss_mask: 0.1961  m1_loss_dice: 1.241  m1_loss_ce_0: 0.7017  m1_loss_mask_0: 0.2023  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.7366  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.6955  m1_loss_mask_2: 0.1804  m1_loss_dice_2: 1.33  m1_loss_ce_3: 0.6272  m1_loss_mask_3: 0.1772  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.5896  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.5876  m1_loss_mask_5: 0.1764  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.5801  m1_loss_mask_6: 0.1706  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5525  m1_loss_mask_7: 0.1733  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.564  m1_loss_mask_8: 0.171  m1_loss_dice_8: 1.216  m2_loss_ce: 0.5704  m2_loss_mask: 0.1764  m2_loss_dice: 1.262  m2_loss_ce_0: 0.6621  m2_loss_mask_0: 0.2033  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.7574  m2_loss_mask_1: 0.1875  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.6796  m2_loss_mask_2: 0.1792  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.6402  m2_loss_mask_3: 0.1825  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.5811  m2_loss_mask_4: 0.1792  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.6043  m2_loss_mask_5: 0.1798  m2_loss_dice_5: 1.287  m2_loss_ce_6: 0.5728  m2_loss_mask_6: 0.1773  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.5818  m2_loss_mask_7: 0.179  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.5782  m2_loss_mask_8: 0.1763  m2_loss_dice_8: 1.247  com_loss_ce: 0.5018  com_loss_mask: 0.04182  com_loss_dice: 0.2826    time: 1.3528  last_time: 1.3670  data_time: 0.0415  last_data_time: 0.0436   lr: 0.0001  max_mem: 35281M
[08/16 01:27:54] d2.utils.events INFO:  eta: 0:03:08  iter: 859  total_loss: 41.68  m1_loss_ce: 0.5023  m1_loss_mask: 0.1898  m1_loss_dice: 1.213  m1_loss_ce_0: 0.6031  m1_loss_mask_0: 0.2058  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.6486  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.5897  m1_loss_mask_2: 0.1744  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5461  m1_loss_mask_3: 0.1759  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.5138  m1_loss_mask_4: 0.1735  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.531  m1_loss_mask_5: 0.1719  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.486  m1_loss_mask_6: 0.1684  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.5063  m1_loss_mask_7: 0.1689  m1_loss_dice_7: 1.16  m1_loss_ce_8: 0.4893  m1_loss_mask_8: 0.1711  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4948  m2_loss_mask: 0.1717  m2_loss_dice: 1.225  m2_loss_ce_0: 0.6214  m2_loss_mask_0: 0.206  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6736  m2_loss_mask_1: 0.1869  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6143  m2_loss_mask_2: 0.1777  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.575  m2_loss_mask_3: 0.1752  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.5449  m2_loss_mask_4: 0.1751  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5332  m2_loss_mask_5: 0.1765  m2_loss_dice_5: 1.221  m2_loss_ce_6: 0.5349  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5284  m2_loss_mask_7: 0.1719  m2_loss_dice_7: 1.189  m2_loss_ce_8: 0.5462  m2_loss_mask_8: 0.173  m2_loss_dice_8: 1.238  com_loss_ce: 0.51  com_loss_mask: 0.0422  com_loss_dice: 0.2825    time: 1.3526  last_time: 1.3243  data_time: 0.0390  last_data_time: 0.0415   lr: 0.0001  max_mem: 35281M
[08/16 01:28:22] d2.utils.events INFO:  eta: 0:02:41  iter: 879  total_loss: 40.84  m1_loss_ce: 0.5395  m1_loss_mask: 0.172  m1_loss_dice: 1.2  m1_loss_ce_0: 0.6508  m1_loss_mask_0: 0.1842  m1_loss_dice_0: 1.363  m1_loss_ce_1: 0.6698  m1_loss_mask_1: 0.1701  m1_loss_dice_1: 1.283  m1_loss_ce_2: 0.6075  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.5607  m1_loss_mask_3: 0.1599  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.5572  m1_loss_mask_4: 0.1576  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.5504  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.5043  m1_loss_mask_6: 0.1604  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.4968  m1_loss_mask_7: 0.1587  m1_loss_dice_7: 1.151  m1_loss_ce_8: 0.4944  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.182  m2_loss_ce: 0.5649  m2_loss_mask: 0.1578  m2_loss_dice: 1.205  m2_loss_ce_0: 0.673  m2_loss_mask_0: 0.195  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6944  m2_loss_mask_1: 0.1767  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.6331  m2_loss_mask_2: 0.1685  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.6185  m2_loss_mask_3: 0.163  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5475  m2_loss_mask_4: 0.1648  m2_loss_dice_4: 1.198  m2_loss_ce_5: 0.5652  m2_loss_mask_5: 0.162  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.5686  m2_loss_mask_6: 0.1595  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5514  m2_loss_mask_7: 0.1616  m2_loss_dice_7: 1.173  m2_loss_ce_8: 0.5297  m2_loss_mask_8: 0.1591  m2_loss_dice_8: 1.196  com_loss_ce: 0.4737  com_loss_mask: 0.03909  com_loss_dice: 0.2683    time: 1.3529  last_time: 1.4066  data_time: 0.0412  last_data_time: 0.0384   lr: 0.0001  max_mem: 35281M
[08/16 01:28:50] d2.utils.events INFO:  eta: 0:02:14  iter: 899  total_loss: 37.4  m1_loss_ce: 0.4419  m1_loss_mask: 0.1888  m1_loss_dice: 1.102  m1_loss_ce_0: 0.5711  m1_loss_mask_0: 0.2001  m1_loss_dice_0: 1.247  m1_loss_ce_1: 0.5971  m1_loss_mask_1: 0.1849  m1_loss_dice_1: 1.196  m1_loss_ce_2: 0.5718  m1_loss_mask_2: 0.1754  m1_loss_dice_2: 1.09  m1_loss_ce_3: 0.5114  m1_loss_mask_3: 0.1778  m1_loss_dice_3: 1.101  m1_loss_ce_4: 0.4827  m1_loss_mask_4: 0.1761  m1_loss_dice_4: 1.092  m1_loss_ce_5: 0.5034  m1_loss_mask_5: 0.1728  m1_loss_dice_5: 1.087  m1_loss_ce_6: 0.449  m1_loss_mask_6: 0.177  m1_loss_dice_6: 1.078  m1_loss_ce_7: 0.4466  m1_loss_mask_7: 0.1756  m1_loss_dice_7: 1.091  m1_loss_ce_8: 0.4568  m1_loss_mask_8: 0.1756  m1_loss_dice_8: 1.088  m2_loss_ce: 0.5132  m2_loss_mask: 0.1775  m2_loss_dice: 1.061  m2_loss_ce_0: 0.6223  m2_loss_mask_0: 0.2182  m2_loss_dice_0: 1.286  m2_loss_ce_1: 0.6597  m2_loss_mask_1: 0.192  m2_loss_dice_1: 1.242  m2_loss_ce_2: 0.6236  m2_loss_mask_2: 0.1797  m2_loss_dice_2: 1.154  m2_loss_ce_3: 0.5424  m2_loss_mask_3: 0.1785  m2_loss_dice_3: 1.095  m2_loss_ce_4: 0.5418  m2_loss_mask_4: 0.1815  m2_loss_dice_4: 1.136  m2_loss_ce_5: 0.5116  m2_loss_mask_5: 0.1806  m2_loss_dice_5: 1.092  m2_loss_ce_6: 0.5172  m2_loss_mask_6: 0.1791  m2_loss_dice_6: 1.089  m2_loss_ce_7: 0.5231  m2_loss_mask_7: 0.1774  m2_loss_dice_7: 1.106  m2_loss_ce_8: 0.507  m2_loss_mask_8: 0.1811  m2_loss_dice_8: 1.088  com_loss_ce: 0.4284  com_loss_mask: 0.03984  com_loss_dice: 0.2684    time: 1.3534  last_time: 1.4750  data_time: 0.0398  last_data_time: 0.0358   lr: 0.0001  max_mem: 35281M
[08/16 01:29:18] d2.utils.events INFO:  eta: 0:01:47  iter: 919  total_loss: 42.91  m1_loss_ce: 0.5342  m1_loss_mask: 0.1771  m1_loss_dice: 1.268  m1_loss_ce_0: 0.6213  m1_loss_mask_0: 0.1849  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.7168  m1_loss_mask_1: 0.1779  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.6703  m1_loss_mask_2: 0.1646  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5804  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.297  m1_loss_ce_4: 0.5555  m1_loss_mask_4: 0.1673  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.5869  m1_loss_mask_5: 0.16  m1_loss_dice_5: 1.279  m1_loss_ce_6: 0.5174  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.297  m1_loss_ce_7: 0.5271  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.5224  m1_loss_mask_8: 0.1596  m1_loss_dice_8: 1.268  m2_loss_ce: 0.5767  m2_loss_mask: 0.1741  m2_loss_dice: 1.295  m2_loss_ce_0: 0.6314  m2_loss_mask_0: 0.2063  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.7051  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.411  m2_loss_ce_2: 0.6396  m2_loss_mask_2: 0.1806  m2_loss_dice_2: 1.369  m2_loss_ce_3: 0.6148  m2_loss_mask_3: 0.1782  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.5819  m2_loss_mask_4: 0.1756  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5972  m2_loss_mask_5: 0.1755  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.5766  m2_loss_mask_6: 0.1755  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.5857  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.288  m2_loss_ce_8: 0.5541  m2_loss_mask_8: 0.1739  m2_loss_dice_8: 1.266  com_loss_ce: 0.4787  com_loss_mask: 0.04082  com_loss_dice: 0.2926    time: 1.3546  last_time: 1.4084  data_time: 0.0410  last_data_time: 0.0339   lr: 0.0001  max_mem: 35281M
[08/16 01:29:45] d2.utils.events INFO:  eta: 0:01:20  iter: 939  total_loss: 40.38  m1_loss_ce: 0.5356  m1_loss_mask: 0.1742  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6119  m1_loss_mask_0: 0.1893  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.6591  m1_loss_mask_1: 0.1737  m1_loss_dice_1: 1.326  m1_loss_ce_2: 0.5969  m1_loss_mask_2: 0.1595  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5343  m1_loss_mask_3: 0.163  m1_loss_dice_3: 1.236  m1_loss_ce_4: 0.5287  m1_loss_mask_4: 0.1622  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4703  m1_loss_mask_5: 0.16  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4777  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.503  m1_loss_mask_7: 0.1611  m1_loss_dice_7: 1.229  m1_loss_ce_8: 0.4839  m1_loss_mask_8: 0.156  m1_loss_dice_8: 1.217  m2_loss_ce: 0.4982  m2_loss_mask: 0.1588  m2_loss_dice: 1.227  m2_loss_ce_0: 0.59  m2_loss_mask_0: 0.1947  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6271  m2_loss_mask_1: 0.1755  m2_loss_dice_1: 1.405  m2_loss_ce_2: 0.6169  m2_loss_mask_2: 0.1601  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5626  m2_loss_mask_3: 0.1594  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.5313  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.534  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.5495  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.279  m2_loss_ce_7: 0.5278  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5066  m2_loss_mask_8: 0.159  m2_loss_dice_8: 1.203  com_loss_ce: 0.4794  com_loss_mask: 0.04429  com_loss_dice: 0.2782    time: 1.3547  last_time: 1.3174  data_time: 0.0418  last_data_time: 0.0451   lr: 0.0001  max_mem: 35281M
[08/16 01:30:12] d2.utils.events INFO:  eta: 0:00:53  iter: 959  total_loss: 40.07  m1_loss_ce: 0.4814  m1_loss_mask: 0.1783  m1_loss_dice: 1.191  m1_loss_ce_0: 0.606  m1_loss_mask_0: 0.1851  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.641  m1_loss_mask_1: 0.1702  m1_loss_dice_1: 1.308  m1_loss_ce_2: 0.5573  m1_loss_mask_2: 0.1599  m1_loss_dice_2: 1.232  m1_loss_ce_3: 0.4995  m1_loss_mask_3: 0.1607  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.4932  m1_loss_mask_4: 0.1575  m1_loss_dice_4: 1.197  m1_loss_ce_5: 0.4968  m1_loss_mask_5: 0.154  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4501  m1_loss_mask_6: 0.1563  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.4705  m1_loss_mask_7: 0.159  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.5172  m1_loss_mask_8: 0.1571  m1_loss_dice_8: 1.169  m2_loss_ce: 0.4912  m2_loss_mask: 0.1639  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6328  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.686  m2_loss_mask_1: 0.1757  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6189  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5494  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5543  m2_loss_mask_4: 0.1631  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.5335  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4957  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.5064  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.4758  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.218  com_loss_ce: 0.4954  com_loss_mask: 0.04217  com_loss_dice: 0.2626    time: 1.3547  last_time: 1.4306  data_time: 0.0411  last_data_time: 0.0349   lr: 0.0001  max_mem: 35281M
[08/16 01:30:40] d2.utils.events INFO:  eta: 0:00:26  iter: 979  total_loss: 41.44  m1_loss_ce: 0.5463  m1_loss_mask: 0.1937  m1_loss_dice: 1.21  m1_loss_ce_0: 0.6409  m1_loss_mask_0: 0.2084  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.7087  m1_loss_mask_1: 0.1845  m1_loss_dice_1: 1.366  m1_loss_ce_2: 0.6298  m1_loss_mask_2: 0.1714  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5353  m1_loss_mask_3: 0.1701  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5404  m1_loss_mask_4: 0.1714  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.5352  m1_loss_mask_5: 0.171  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.5605  m1_loss_mask_6: 0.17  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.5505  m1_loss_mask_7: 0.1712  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.5212  m1_loss_mask_8: 0.172  m1_loss_dice_8: 1.217  m2_loss_ce: 0.5514  m2_loss_mask: 0.1677  m2_loss_dice: 1.227  m2_loss_ce_0: 0.6453  m2_loss_mask_0: 0.2083  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.6676  m2_loss_mask_1: 0.1913  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.6329  m2_loss_mask_2: 0.1793  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5823  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.553  m2_loss_mask_4: 0.1737  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5938  m2_loss_mask_5: 0.1743  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5591  m2_loss_mask_6: 0.1734  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5367  m2_loss_mask_7: 0.1704  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.5595  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.218  com_loss_ce: 0.5254  com_loss_mask: 0.04146  com_loss_dice: 0.288    time: 1.3554  last_time: 1.4189  data_time: 0.0422  last_data_time: 0.0391   lr: 0.0001  max_mem: 35281M
[08/16 01:31:08] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_0_6_0_4/model_final.pth
[08/16 01:31:12] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 40.14  m1_loss_ce: 0.5189  m1_loss_mask: 0.1814  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5996  m1_loss_mask_0: 0.1954  m1_loss_dice_0: 1.368  m1_loss_ce_1: 0.6702  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.254  m1_loss_ce_2: 0.6053  m1_loss_mask_2: 0.1721  m1_loss_dice_2: 1.236  m1_loss_ce_3: 0.5416  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.148  m1_loss_ce_4: 0.5477  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.5279  m1_loss_mask_5: 0.1664  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.5333  m1_loss_mask_6: 0.1676  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.5318  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.148  m1_loss_ce_8: 0.4789  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.186  m2_loss_ce: 0.5635  m2_loss_mask: 0.1724  m2_loss_dice: 1.221  m2_loss_ce_0: 0.6271  m2_loss_mask_0: 0.212  m2_loss_dice_0: 1.386  m2_loss_ce_1: 0.6842  m2_loss_mask_1: 0.1906  m2_loss_dice_1: 1.33  m2_loss_ce_2: 0.6559  m2_loss_mask_2: 0.1797  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.5979  m2_loss_mask_3: 0.183  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.5523  m2_loss_mask_4: 0.1829  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5498  m2_loss_mask_5: 0.1795  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.5633  m2_loss_mask_6: 0.1772  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.555  m2_loss_mask_7: 0.1748  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.5694  m2_loss_mask_8: 0.1754  m2_loss_dice_8: 1.197  com_loss_ce: 0.5207  com_loss_mask: 0.04062  com_loss_dice: 0.2721    time: 1.3557  last_time: 1.3463  data_time: 0.0388  last_data_time: 0.0389   lr: 0.0001  max_mem: 35281M
[08/16 01:31:12] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:22:33 (1.3557 s / it)
[08/16 01:31:12] d2.engine.hooks INFO: Total training time: 0:22:43 (0:00:10 on hooks)
[08/16 01:31:12] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/16 01:31:12] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/16 01:31:12] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 01:31:12] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/16 01:31:12] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/16 01:32:32] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evaluuovq1y_ ...
[08/16 01:32:48] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.422 | 81.025 | 69.883 |      19       |
| Things | 48.056 | 80.347 | 59.867 |       8       |
| Stuff  | 64.234 | 81.517 | 77.168 |      11       |
[08/16 01:32:48] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.422 | 97.827 | 99.586 |     Stuff     |
| class_8  | 71.775 | 84.943 | 84.498 |     Stuff     |
| class_11 | 86.174 | 88.901 | 96.933 |     Stuff     |
| class_12 | 43.088 | 80.123 | 53.776 |     Stuff     |
| class_13 | 36.467 | 75.239 | 48.468 |     Stuff     |
| class_17 | 43.934 | 63.993 | 68.654 |     Stuff     |
| class_19 | 48.669 | 69.457 | 70.070 |     Stuff     |
| class_20 | 66.941 | 77.598 | 86.266 |     Stuff     |
| class_21 | 88.950 | 89.967 | 98.869 |     Stuff     |
| class_22 | 35.818 | 76.774 | 46.653 |     Stuff     |
| class_23 | 87.341 | 91.866 | 95.074 |     Stuff     |
| class_24 | 52.119 | 77.005 | 67.682 |    Things     |
| class_25 | 47.112 | 74.328 | 63.383 |    Things     |
| class_26 | 64.653 | 83.167 | 77.739 |    Things     |
| class_27 | 54.566 | 87.199 | 62.577 |    Things     |
| class_28 | 61.893 | 89.353 | 69.268 |    Things     |
| class_31 | 22.172 | 85.915 | 25.806 |    Things     |
| class_32 | 39.431 | 74.075 | 53.232 |    Things     |
| class_33 | 42.503 | 71.737 | 59.249 |    Things     |
[08/16 01:32:48] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/16 01:32:48] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/16 01:32:48] d2.evaluation.testing INFO: copypaste: 57.4224,81.0247,69.8834,48.0561,80.3473,59.8670,64.2343,81.5173,77.1680,97.4224,97.8275,99.5859,71.7747,84.9427,84.4978,86.1738,88.9008,96.9325,43.0875,80.1235,53.7764,36.4669,75.2392,48.4680,43.9339,63.9935,68.6536,48.6688,69.4569,70.0704,66.9412,77.5985,86.2661,88.9500,89.9671,98.8695,35.8177,76.7744,46.6531,87.3411,91.8660,95.0745,52.1185,77.0051,67.6819,47.1117,74.3283,63.3833,64.6530,83.1670,77.7388,54.5661,87.1987,62.5767,61.8931,89.3528,69.2683,22.1717,85.9153,25.8065,39.4313,74.0746,53.2319,42.5031,71.7369,59.2486
