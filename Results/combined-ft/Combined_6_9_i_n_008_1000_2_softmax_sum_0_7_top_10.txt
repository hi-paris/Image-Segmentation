[08/19 19:52:23] detectron2 INFO: Rank of current process: 0. World size: 2
[08/19 19:52:24] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/19 19:52:24] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_0_7_top_10.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/19 19:52:24] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_0_7_top_10.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_0_7_top_10
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/19 19:52:24] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_0_7_top_10
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/19 19:52:24] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_0_7_top_10/config.yaml
[08/19 19:52:24] d2.utils.env INFO: Using a generated random seed 25643702
[08/19 19:52:29] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 19:52:29] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/19 19:52:29] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/19 19:52:29] d2.data.build INFO: Using training sampler TrainingSampler
[08/19 19:52:30] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 19:52:30] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/19 19:52:30] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/19 19:52:30] d2.data.build INFO: Making batched data loader with batch_size=4
[08/19 19:52:30] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/19 19:52:33] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 19:52:33] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:52:33] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:52:34] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:52:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:53:10] d2.utils.events INFO:  eta: 0:23:46  iter: 19  total_loss: 45.32  m1_loss_ce: 0.5519  m1_loss_mask: 0.1771  m1_loss_dice: 1.28  m1_loss_ce_0: 0.6813  m1_loss_mask_0: 0.2088  m1_loss_dice_0: 1.531  m1_loss_ce_1: 0.7256  m1_loss_mask_1: 0.1907  m1_loss_dice_1: 1.422  m1_loss_ce_2: 0.6485  m1_loss_mask_2: 0.1843  m1_loss_dice_2: 1.356  m1_loss_ce_3: 0.5845  m1_loss_mask_3: 0.1851  m1_loss_dice_3: 1.313  m1_loss_ce_4: 0.5521  m1_loss_mask_4: 0.1832  m1_loss_dice_4: 1.32  m1_loss_ce_5: 0.5438  m1_loss_mask_5: 0.1782  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.5772  m1_loss_mask_6: 0.1806  m1_loss_dice_6: 1.309  m1_loss_ce_7: 0.5381  m1_loss_mask_7: 0.1798  m1_loss_dice_7: 1.275  m1_loss_ce_8: 0.5764  m1_loss_mask_8: 0.1791  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5442  m2_loss_mask: 0.1666  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6479  m2_loss_mask_0: 0.2009  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6916  m2_loss_mask_1: 0.18  m2_loss_dice_1: 1.465  m2_loss_ce_2: 0.6334  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5895  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5741  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5739  m2_loss_mask_5: 0.1692  m2_loss_dice_5: 1.332  m2_loss_ce_6: 0.5677  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.298  m2_loss_ce_7: 0.5582  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.5416  m2_loss_mask_8: 0.1676  m2_loss_dice_8: 1.282  com_loss_ce: 2.15  com_loss_mask: 0.6935  com_loss_dice: 0.9606    time: 1.4518  last_time: 1.4587  data_time: 0.2301  last_data_time: 0.0513   lr: 0.0001  max_mem: 34637M
[08/19 19:53:38] d2.utils.events INFO:  eta: 0:23:05  iter: 39  total_loss: 44.82  m1_loss_ce: 0.544  m1_loss_mask: 0.1624  m1_loss_dice: 1.22  m1_loss_ce_0: 0.6289  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.436  m1_loss_ce_1: 0.7331  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.356  m1_loss_ce_2: 0.6475  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.332  m1_loss_ce_3: 0.5985  m1_loss_mask_3: 0.1683  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.5713  m1_loss_mask_4: 0.1667  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5762  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5549  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.5578  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.259  m1_loss_ce_8: 0.5798  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5136  m2_loss_mask: 0.1684  m2_loss_dice: 1.23  m2_loss_ce_0: 0.6107  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6895  m2_loss_mask_1: 0.1755  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6466  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5687  m2_loss_mask_3: 0.1675  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.582  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5407  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.5206  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5287  m2_loss_mask_7: 0.166  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.4966  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.236  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9576    time: 1.4362  last_time: 1.4260  data_time: 0.0501  last_data_time: 0.0460   lr: 0.0001  max_mem: 34637M
[08/19 19:54:07] d2.utils.events INFO:  eta: 0:22:24  iter: 59  total_loss: 44.37  m1_loss_ce: 0.5538  m1_loss_mask: 0.1702  m1_loss_dice: 1.218  m1_loss_ce_0: 0.6066  m1_loss_mask_0: 0.2059  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.6571  m1_loss_mask_1: 0.1869  m1_loss_dice_1: 1.356  m1_loss_ce_2: 0.6314  m1_loss_mask_2: 0.178  m1_loss_dice_2: 1.278  m1_loss_ce_3: 0.5781  m1_loss_mask_3: 0.1752  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5452  m1_loss_mask_4: 0.1783  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.5703  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.5456  m1_loss_mask_6: 0.1738  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5298  m1_loss_mask_7: 0.1724  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.5374  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.233  m2_loss_ce: 0.5257  m2_loss_mask: 0.1651  m2_loss_dice: 1.225  m2_loss_ce_0: 0.6269  m2_loss_mask_0: 0.2059  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.6624  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6086  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.344  m2_loss_ce_3: 0.5992  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5717  m2_loss_mask_4: 0.1724  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.523  m2_loss_mask_5: 0.1709  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5318  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5325  m2_loss_mask_7: 0.1669  m2_loss_dice_7: 1.194  m2_loss_ce_8: 0.5318  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.222  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.956    time: 1.4299  last_time: 1.4178  data_time: 0.0491  last_data_time: 0.0498   lr: 0.0001  max_mem: 34652M
[08/19 19:54:35] d2.utils.events INFO:  eta: 0:21:47  iter: 79  total_loss: 44.6  m1_loss_ce: 0.5309  m1_loss_mask: 0.1661  m1_loss_dice: 1.239  m1_loss_ce_0: 0.6036  m1_loss_mask_0: 0.1977  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6378  m1_loss_mask_1: 0.179  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.6463  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5655  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.5493  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.544  m1_loss_mask_5: 0.1694  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.5228  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.5188  m1_loss_mask_7: 0.1664  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.5368  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5152  m2_loss_mask: 0.1678  m2_loss_dice: 1.256  m2_loss_ce_0: 0.6007  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.432  m2_loss_ce_1: 0.6673  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.621  m2_loss_mask_2: 0.1764  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.58  m2_loss_mask_3: 0.173  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5536  m2_loss_mask_4: 0.1727  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.5483  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5432  m2_loss_mask_6: 0.173  m2_loss_dice_6: 1.177  m2_loss_ce_7: 0.5454  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.5315  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.202  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9557    time: 1.4210  last_time: 1.3788  data_time: 0.0452  last_data_time: 0.0452   lr: 0.0001  max_mem: 34775M
[08/19 19:55:04] d2.utils.events INFO:  eta: 0:21:17  iter: 99  total_loss: 43.48  m1_loss_ce: 0.563  m1_loss_mask: 0.1632  m1_loss_dice: 1.201  m1_loss_ce_0: 0.6309  m1_loss_mask_0: 0.1923  m1_loss_dice_0: 1.453  m1_loss_ce_1: 0.7306  m1_loss_mask_1: 0.188  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.666  m1_loss_mask_2: 0.181  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.6081  m1_loss_mask_3: 0.1705  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.6269  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.5993  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.5754  m1_loss_mask_6: 0.165  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.5821  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.5474  m1_loss_mask_8: 0.1658  m1_loss_dice_8: 1.207  m2_loss_ce: 0.5319  m2_loss_mask: 0.164  m2_loss_dice: 1.19  m2_loss_ce_0: 0.6202  m2_loss_mask_0: 0.1964  m2_loss_dice_0: 1.405  m2_loss_ce_1: 0.679  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.6245  m2_loss_mask_2: 0.1648  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5888  m2_loss_mask_3: 0.1678  m2_loss_dice_3: 1.219  m2_loss_ce_4: 0.552  m2_loss_mask_4: 0.1687  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.5528  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.198  m2_loss_ce_6: 0.564  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5594  m2_loss_mask_7: 0.1658  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.5445  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.226  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.957    time: 1.4213  last_time: 1.3846  data_time: 0.0471  last_data_time: 0.0457   lr: 0.0001  max_mem: 34775M
[08/19 19:55:33] d2.utils.events INFO:  eta: 0:20:52  iter: 119  total_loss: 44.65  m1_loss_ce: 0.5723  m1_loss_mask: 0.1781  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6246  m1_loss_mask_0: 0.2054  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.7212  m1_loss_mask_1: 0.1893  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.6623  m1_loss_mask_2: 0.1869  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.6058  m1_loss_mask_3: 0.1806  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.5976  m1_loss_mask_4: 0.1855  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.5659  m1_loss_mask_5: 0.1779  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.5508  m1_loss_mask_6: 0.178  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.5641  m1_loss_mask_7: 0.1777  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.5636  m1_loss_mask_8: 0.1775  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5275  m2_loss_mask: 0.1719  m2_loss_dice: 1.197  m2_loss_ce_0: 0.621  m2_loss_mask_0: 0.2078  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6561  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.6141  m2_loss_mask_2: 0.1758  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.5802  m2_loss_mask_3: 0.1729  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.5544  m2_loss_mask_4: 0.1776  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.5588  m2_loss_mask_5: 0.1735  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.5432  m2_loss_mask_6: 0.1747  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.5105  m2_loss_mask_7: 0.173  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.5052  m2_loss_mask_8: 0.1734  m2_loss_dice_8: 1.236  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9575    time: 1.4252  last_time: 1.3833  data_time: 0.0468  last_data_time: 0.0432   lr: 0.0001  max_mem: 34775M
[08/19 19:56:02] d2.utils.events INFO:  eta: 0:20:27  iter: 139  total_loss: 45.97  m1_loss_ce: 0.5796  m1_loss_mask: 0.1708  m1_loss_dice: 1.231  m1_loss_ce_0: 0.6801  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.7205  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.6735  m1_loss_mask_2: 0.1814  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.5985  m1_loss_mask_3: 0.1784  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.5886  m1_loss_mask_4: 0.1745  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.6123  m1_loss_mask_5: 0.1684  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.6056  m1_loss_mask_6: 0.171  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.5881  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.218  m1_loss_ce_8: 0.5684  m1_loss_mask_8: 0.1711  m1_loss_dice_8: 1.262  m2_loss_ce: 0.5729  m2_loss_mask: 0.1647  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6877  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.733  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.6923  m2_loss_mask_2: 0.1672  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.646  m2_loss_mask_3: 0.1681  m2_loss_dice_3: 1.218  m2_loss_ce_4: 0.5764  m2_loss_mask_4: 0.1682  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5616  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.5807  m2_loss_mask_6: 0.1659  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5695  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.586  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.225  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9568    time: 1.4299  last_time: 1.4310  data_time: 0.0492  last_data_time: 0.0545   lr: 0.0001  max_mem: 34775M
[08/19 19:56:30] d2.utils.events INFO:  eta: 0:19:58  iter: 159  total_loss: 44.58  m1_loss_ce: 0.5521  m1_loss_mask: 0.1671  m1_loss_dice: 1.244  m1_loss_ce_0: 0.6655  m1_loss_mask_0: 0.1964  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.6975  m1_loss_mask_1: 0.1815  m1_loss_dice_1: 1.44  m1_loss_ce_2: 0.6404  m1_loss_mask_2: 0.1777  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.6197  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.559  m1_loss_mask_4: 0.1702  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.5477  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5773  m1_loss_mask_6: 0.1684  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.5603  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.5805  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.239  m2_loss_ce: 0.5411  m2_loss_mask: 0.1689  m2_loss_dice: 1.221  m2_loss_ce_0: 0.629  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.6727  m2_loss_mask_1: 0.1783  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6338  m2_loss_mask_2: 0.17  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.575  m2_loss_mask_3: 0.1711  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5752  m2_loss_mask_4: 0.1721  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.5498  m2_loss_mask_5: 0.1707  m2_loss_dice_5: 1.325  m2_loss_ce_6: 0.5481  m2_loss_mask_6: 0.1708  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.503  m2_loss_mask_7: 0.1692  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.5344  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.285  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9578    time: 1.4297  last_time: 1.5096  data_time: 0.0469  last_data_time: 0.0451   lr: 0.0001  max_mem: 34775M
[08/19 19:56:59] d2.utils.events INFO:  eta: 0:19:30  iter: 179  total_loss: 43.32  m1_loss_ce: 0.5235  m1_loss_mask: 0.1571  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6262  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.6702  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.6012  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.563  m1_loss_mask_3: 0.1605  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5443  m1_loss_mask_4: 0.16  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5209  m1_loss_mask_5: 0.1575  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.5265  m1_loss_mask_6: 0.158  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.5443  m1_loss_mask_7: 0.1583  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.5189  m1_loss_mask_8: 0.1579  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5406  m2_loss_mask: 0.1599  m2_loss_dice: 1.18  m2_loss_ce_0: 0.5933  m2_loss_mask_0: 0.1924  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.6706  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.337  m2_loss_ce_2: 0.5936  m2_loss_mask_2: 0.1588  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5631  m2_loss_mask_3: 0.1598  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5386  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.5074  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.494  m2_loss_mask_6: 0.1611  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.503  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4948  m2_loss_mask_8: 0.1606  m2_loss_dice_8: 1.236  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9575    time: 1.4310  last_time: 1.4716  data_time: 0.0512  last_data_time: 0.0356   lr: 0.0001  max_mem: 34775M
[08/19 19:57:27] d2.utils.events INFO:  eta: 0:19:00  iter: 199  total_loss: 43.45  m1_loss_ce: 0.5569  m1_loss_mask: 0.1636  m1_loss_dice: 1.157  m1_loss_ce_0: 0.619  m1_loss_mask_0: 0.1961  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.6724  m1_loss_mask_1: 0.1799  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6481  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.6009  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.5646  m1_loss_mask_4: 0.166  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.5731  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.5712  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.149  m1_loss_ce_7: 0.5577  m1_loss_mask_7: 0.1649  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.5506  m1_loss_mask_8: 0.1637  m1_loss_dice_8: 1.154  m2_loss_ce: 0.5728  m2_loss_mask: 0.167  m2_loss_dice: 1.164  m2_loss_ce_0: 0.6459  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.381  m2_loss_ce_1: 0.6753  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.6772  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5802  m2_loss_mask_3: 0.1717  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.5791  m2_loss_mask_4: 0.174  m2_loss_dice_4: 1.205  m2_loss_ce_5: 0.5643  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.191  m2_loss_ce_6: 0.5792  m2_loss_mask_6: 0.1704  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.5715  m2_loss_mask_7: 0.1678  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.5542  m2_loss_mask_8: 0.1687  m2_loss_dice_8: 1.21  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9552    time: 1.4272  last_time: 1.4084  data_time: 0.0459  last_data_time: 0.0453   lr: 0.0001  max_mem: 34775M
[08/19 19:57:57] d2.utils.events INFO:  eta: 0:18:36  iter: 219  total_loss: 44.33  m1_loss_ce: 0.5198  m1_loss_mask: 0.1558  m1_loss_dice: 1.219  m1_loss_ce_0: 0.6072  m1_loss_mask_0: 0.1788  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.6861  m1_loss_mask_1: 0.1653  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.5812  m1_loss_mask_2: 0.1621  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5938  m1_loss_mask_3: 0.1608  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.5587  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.5458  m1_loss_mask_5: 0.1592  m1_loss_dice_5: 1.246  m1_loss_ce_6: 0.5429  m1_loss_mask_6: 0.155  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.526  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.5255  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.233  m2_loss_ce: 0.5088  m2_loss_mask: 0.1507  m2_loss_dice: 1.172  m2_loss_ce_0: 0.622  m2_loss_mask_0: 0.1802  m2_loss_dice_0: 1.432  m2_loss_ce_1: 0.6637  m2_loss_mask_1: 0.1587  m2_loss_dice_1: 1.341  m2_loss_ce_2: 0.6305  m2_loss_mask_2: 0.1592  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5922  m2_loss_mask_3: 0.1521  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.5577  m2_loss_mask_4: 0.1562  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.5419  m2_loss_mask_5: 0.1546  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5654  m2_loss_mask_6: 0.1524  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.5343  m2_loss_mask_7: 0.1516  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5003  m2_loss_mask_8: 0.1526  m2_loss_dice_8: 1.206  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9573    time: 1.4298  last_time: 1.4857  data_time: 0.0446  last_data_time: 0.0550   lr: 0.0001  max_mem: 34775M
[08/19 19:58:26] d2.utils.events INFO:  eta: 0:18:08  iter: 239  total_loss: 46.65  m1_loss_ce: 0.597  m1_loss_mask: 0.1633  m1_loss_dice: 1.235  m1_loss_ce_0: 0.7264  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.7608  m1_loss_mask_1: 0.176  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.699  m1_loss_mask_2: 0.1674  m1_loss_dice_2: 1.336  m1_loss_ce_3: 0.69  m1_loss_mask_3: 0.165  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.6447  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.6295  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.226  m1_loss_ce_6: 0.6419  m1_loss_mask_6: 0.1646  m1_loss_dice_6: 1.242  m1_loss_ce_7: 0.5955  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.6013  m1_loss_mask_8: 0.1623  m1_loss_dice_8: 1.243  m2_loss_ce: 0.6215  m2_loss_mask: 0.1554  m2_loss_dice: 1.205  m2_loss_ce_0: 0.7034  m2_loss_mask_0: 0.1906  m2_loss_dice_0: 1.509  m2_loss_ce_1: 0.7338  m2_loss_mask_1: 0.1684  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.7159  m2_loss_mask_2: 0.1587  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.6571  m2_loss_mask_3: 0.1576  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.6096  m2_loss_mask_4: 0.1602  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.6299  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.6144  m2_loss_mask_6: 0.159  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.5962  m2_loss_mask_7: 0.1569  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.5926  m2_loss_mask_8: 0.1558  m2_loss_dice_8: 1.231  com_loss_ce: 2.149  com_loss_mask: 0.6935  com_loss_dice: 0.9598    time: 1.4315  last_time: 1.5177  data_time: 0.0447  last_data_time: 0.0393   lr: 0.0001  max_mem: 34780M
[08/19 19:58:55] d2.utils.events INFO:  eta: 0:17:40  iter: 259  total_loss: 43.67  m1_loss_ce: 0.5558  m1_loss_mask: 0.1724  m1_loss_dice: 1.193  m1_loss_ce_0: 0.6598  m1_loss_mask_0: 0.2045  m1_loss_dice_0: 1.393  m1_loss_ce_1: 0.7105  m1_loss_mask_1: 0.1875  m1_loss_dice_1: 1.348  m1_loss_ce_2: 0.6617  m1_loss_mask_2: 0.1788  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.6068  m1_loss_mask_3: 0.1761  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.6007  m1_loss_mask_4: 0.1766  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.5661  m1_loss_mask_5: 0.1768  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.5715  m1_loss_mask_6: 0.1782  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.5836  m1_loss_mask_7: 0.1748  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.5588  m1_loss_mask_8: 0.1815  m1_loss_dice_8: 1.196  m2_loss_ce: 0.5319  m2_loss_mask: 0.1673  m2_loss_dice: 1.208  m2_loss_ce_0: 0.6368  m2_loss_mask_0: 0.2013  m2_loss_dice_0: 1.384  m2_loss_ce_1: 0.7013  m2_loss_mask_1: 0.1818  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.6396  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.277  m2_loss_ce_3: 0.6184  m2_loss_mask_3: 0.1742  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5644  m2_loss_mask_4: 0.1723  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.5735  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.5439  m2_loss_mask_6: 0.1689  m2_loss_dice_6: 1.18  m2_loss_ce_7: 0.5378  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.5267  m2_loss_mask_8: 0.1689  m2_loss_dice_8: 1.201  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9556    time: 1.4335  last_time: 1.4479  data_time: 0.0445  last_data_time: 0.0352   lr: 0.0001  max_mem: 34780M
[08/19 19:59:25] d2.utils.events INFO:  eta: 0:17:15  iter: 279  total_loss: 46.41  m1_loss_ce: 0.5789  m1_loss_mask: 0.1603  m1_loss_dice: 1.291  m1_loss_ce_0: 0.6861  m1_loss_mask_0: 0.2063  m1_loss_dice_0: 1.517  m1_loss_ce_1: 0.7401  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.435  m1_loss_ce_2: 0.6981  m1_loss_mask_2: 0.1684  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.6128  m1_loss_mask_3: 0.1667  m1_loss_dice_3: 1.33  m1_loss_ce_4: 0.5906  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.302  m1_loss_ce_5: 0.5621  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.307  m1_loss_ce_6: 0.5637  m1_loss_mask_6: 0.158  m1_loss_dice_6: 1.297  m1_loss_ce_7: 0.5785  m1_loss_mask_7: 0.1616  m1_loss_dice_7: 1.305  m1_loss_ce_8: 0.5845  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.29  m2_loss_ce: 0.57  m2_loss_mask: 0.1643  m2_loss_dice: 1.281  m2_loss_ce_0: 0.6523  m2_loss_mask_0: 0.1859  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.7219  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.475  m2_loss_ce_2: 0.6587  m2_loss_mask_2: 0.1631  m2_loss_dice_2: 1.386  m2_loss_ce_3: 0.6072  m2_loss_mask_3: 0.161  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5855  m2_loss_mask_4: 0.1631  m2_loss_dice_4: 1.316  m2_loss_ce_5: 0.5984  m2_loss_mask_5: 0.1653  m2_loss_dice_5: 1.322  m2_loss_ce_6: 0.5584  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.5604  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.286  m2_loss_ce_8: 0.5581  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.279  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9584    time: 1.4377  last_time: 1.5052  data_time: 0.0465  last_data_time: 0.0406   lr: 0.0001  max_mem: 35245M
[08/19 19:59:55] d2.utils.events INFO:  eta: 0:16:50  iter: 299  total_loss: 44.98  m1_loss_ce: 0.5444  m1_loss_mask: 0.1746  m1_loss_dice: 1.26  m1_loss_ce_0: 0.6337  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.6676  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.384  m1_loss_ce_2: 0.6226  m1_loss_mask_2: 0.1777  m1_loss_dice_2: 1.359  m1_loss_ce_3: 0.5724  m1_loss_mask_3: 0.1758  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.5462  m1_loss_mask_4: 0.176  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.5665  m1_loss_mask_5: 0.1742  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.5512  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.232  m1_loss_ce_7: 0.5613  m1_loss_mask_7: 0.1715  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.5582  m1_loss_mask_8: 0.1724  m1_loss_dice_8: 1.229  m2_loss_ce: 0.5289  m2_loss_mask: 0.1653  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6214  m2_loss_mask_0: 0.1923  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6745  m2_loss_mask_1: 0.184  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.5984  m2_loss_mask_2: 0.1686  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5938  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.5304  m2_loss_mask_4: 0.1714  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.536  m2_loss_mask_5: 0.1686  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5135  m2_loss_mask_6: 0.169  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5385  m2_loss_mask_7: 0.166  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.5216  m2_loss_mask_8: 0.1656  m2_loss_dice_8: 1.235  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9584    time: 1.4406  last_time: 1.4799  data_time: 0.0436  last_data_time: 0.0420   lr: 0.0001  max_mem: 35245M
[08/19 20:00:25] d2.utils.events INFO:  eta: 0:16:22  iter: 319  total_loss: 45.86  m1_loss_ce: 0.5311  m1_loss_mask: 0.1714  m1_loss_dice: 1.281  m1_loss_ce_0: 0.678  m1_loss_mask_0: 0.2009  m1_loss_dice_0: 1.507  m1_loss_ce_1: 0.7362  m1_loss_mask_1: 0.1835  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.6738  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.333  m1_loss_ce_3: 0.6019  m1_loss_mask_3: 0.173  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.5877  m1_loss_mask_4: 0.1727  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.5957  m1_loss_mask_5: 0.1735  m1_loss_dice_5: 1.282  m1_loss_ce_6: 0.5792  m1_loss_mask_6: 0.1739  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.5528  m1_loss_mask_7: 0.1719  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.5538  m1_loss_mask_8: 0.1733  m1_loss_dice_8: 1.269  m2_loss_ce: 0.5447  m2_loss_mask: 0.1626  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6802  m2_loss_mask_0: 0.196  m2_loss_dice_0: 1.529  m2_loss_ce_1: 0.6998  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.6994  m2_loss_mask_2: 0.1645  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.6167  m2_loss_mask_3: 0.1643  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.5968  m2_loss_mask_4: 0.1627  m2_loss_dice_4: 1.318  m2_loss_ce_5: 0.5866  m2_loss_mask_5: 0.1643  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5729  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.54  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.5254  m2_loss_mask_8: 0.1616  m2_loss_dice_8: 1.28  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9602    time: 1.4434  last_time: 1.4709  data_time: 0.0439  last_data_time: 0.0411   lr: 0.0001  max_mem: 35245M
[08/19 20:00:54] d2.utils.events INFO:  eta: 0:15:54  iter: 339  total_loss: 44.88  m1_loss_ce: 0.534  m1_loss_mask: 0.1751  m1_loss_dice: 1.241  m1_loss_ce_0: 0.6417  m1_loss_mask_0: 0.2019  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.6918  m1_loss_mask_1: 0.1905  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.6642  m1_loss_mask_2: 0.1824  m1_loss_dice_2: 1.332  m1_loss_ce_3: 0.5983  m1_loss_mask_3: 0.1783  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.5809  m1_loss_mask_4: 0.1767  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.5778  m1_loss_mask_5: 0.1726  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.5482  m1_loss_mask_6: 0.1761  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.5511  m1_loss_mask_7: 0.1745  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.5632  m1_loss_mask_8: 0.1746  m1_loss_dice_8: 1.23  m2_loss_ce: 0.5168  m2_loss_mask: 0.1701  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6942  m2_loss_mask_0: 0.2093  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.7123  m2_loss_mask_1: 0.1847  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.6533  m2_loss_mask_2: 0.1756  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.577  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5982  m2_loss_mask_4: 0.1715  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5453  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.222  m2_loss_ce_6: 0.5123  m2_loss_mask_6: 0.1728  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.5335  m2_loss_mask_7: 0.1707  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.5094  m2_loss_mask_8: 0.1728  m2_loss_dice_8: 1.268  com_loss_ce: 2.148  com_loss_mask: 0.6935  com_loss_dice: 0.9604    time: 1.4447  last_time: 1.5380  data_time: 0.0426  last_data_time: 0.0513   lr: 0.0001  max_mem: 35245M
[08/19 20:01:24] d2.utils.events INFO:  eta: 0:15:25  iter: 359  total_loss: 43.32  m1_loss_ce: 0.4982  m1_loss_mask: 0.1584  m1_loss_dice: 1.216  m1_loss_ce_0: 0.6196  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6468  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.6111  m1_loss_mask_2: 0.1633  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5638  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5357  m1_loss_mask_4: 0.1604  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.5397  m1_loss_mask_5: 0.1569  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.527  m1_loss_mask_6: 0.1616  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.5182  m1_loss_mask_7: 0.159  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.4967  m1_loss_mask_8: 0.1574  m1_loss_dice_8: 1.181  m2_loss_ce: 0.5288  m2_loss_mask: 0.1555  m2_loss_dice: 1.189  m2_loss_ce_0: 0.5907  m2_loss_mask_0: 0.1875  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.6712  m2_loss_mask_1: 0.1726  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.6442  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.5508  m2_loss_mask_3: 0.1625  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.5658  m2_loss_mask_4: 0.1652  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.5627  m2_loss_mask_5: 0.1589  m2_loss_dice_5: 1.2  m2_loss_ce_6: 0.5521  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.5188  m2_loss_mask_7: 0.1559  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.5113  m2_loss_mask_8: 0.1544  m2_loss_dice_8: 1.182  com_loss_ce: 2.141  com_loss_mask: 0.6935  com_loss_dice: 0.9573    time: 1.4456  last_time: 1.3765  data_time: 0.0427  last_data_time: 0.0381   lr: 0.0001  max_mem: 35245M
[08/19 20:01:53] d2.utils.events INFO:  eta: 0:14:57  iter: 379  total_loss: 44.27  m1_loss_ce: 0.5023  m1_loss_mask: 0.1595  m1_loss_dice: 1.198  m1_loss_ce_0: 0.6564  m1_loss_mask_0: 0.1799  m1_loss_dice_0: 1.395  m1_loss_ce_1: 0.6561  m1_loss_mask_1: 0.1697  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.619  m1_loss_mask_2: 0.1622  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5681  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.224  m1_loss_ce_4: 0.5403  m1_loss_mask_4: 0.1651  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5421  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.5357  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.175  m1_loss_ce_7: 0.5036  m1_loss_mask_7: 0.1618  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.4941  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.207  m2_loss_ce: 0.5447  m2_loss_mask: 0.16  m2_loss_dice: 1.167  m2_loss_ce_0: 0.6193  m2_loss_mask_0: 0.1829  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.6797  m2_loss_mask_1: 0.1663  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.6394  m2_loss_mask_2: 0.1644  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.592  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.219  m2_loss_ce_4: 0.577  m2_loss_mask_4: 0.1631  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.5726  m2_loss_mask_5: 0.1616  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.5451  m2_loss_mask_6: 0.1596  m2_loss_dice_6: 1.189  m2_loss_ce_7: 0.52  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.5044  m2_loss_mask_8: 0.161  m2_loss_dice_8: 1.206  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9551    time: 1.4471  last_time: 1.4547  data_time: 0.0421  last_data_time: 0.0426   lr: 0.0001  max_mem: 35245M
[08/19 20:02:22] d2.utils.events INFO:  eta: 0:14:28  iter: 399  total_loss: 43.77  m1_loss_ce: 0.4854  m1_loss_mask: 0.1651  m1_loss_dice: 1.237  m1_loss_ce_0: 0.6502  m1_loss_mask_0: 0.1991  m1_loss_dice_0: 1.452  m1_loss_ce_1: 0.6722  m1_loss_mask_1: 0.1789  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.598  m1_loss_mask_2: 0.1723  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5348  m1_loss_mask_3: 0.169  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.5216  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.5072  m1_loss_mask_5: 0.1649  m1_loss_dice_5: 1.306  m1_loss_ce_6: 0.4931  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.4986  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.5098  m1_loss_mask_8: 0.1655  m1_loss_dice_8: 1.278  m2_loss_ce: 0.5092  m2_loss_mask: 0.1701  m2_loss_dice: 1.263  m2_loss_ce_0: 0.6254  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6768  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.6067  m2_loss_mask_2: 0.1702  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.556  m2_loss_mask_3: 0.1711  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5708  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.5174  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.5287  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.4943  m2_loss_mask_7: 0.1718  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5055  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.244  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9574    time: 1.4475  last_time: 1.4001  data_time: 0.0422  last_data_time: 0.0449   lr: 0.0001  max_mem: 35245M
[08/19 20:02:52] d2.utils.events INFO:  eta: 0:14:00  iter: 419  total_loss: 43.08  m1_loss_ce: 0.5122  m1_loss_mask: 0.1624  m1_loss_dice: 1.183  m1_loss_ce_0: 0.6363  m1_loss_mask_0: 0.1993  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.6682  m1_loss_mask_1: 0.1752  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.6134  m1_loss_mask_2: 0.1682  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.5507  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5222  m1_loss_mask_4: 0.1652  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.5146  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5134  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4722  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.4855  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.206  m2_loss_ce: 0.5214  m2_loss_mask: 0.1628  m2_loss_dice: 1.198  m2_loss_ce_0: 0.6265  m2_loss_mask_0: 0.1832  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.675  m2_loss_mask_1: 0.1692  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.6084  m2_loss_mask_2: 0.1664  m2_loss_dice_2: 1.262  m2_loss_ce_3: 0.5565  m2_loss_mask_3: 0.1642  m2_loss_dice_3: 1.204  m2_loss_ce_4: 0.5532  m2_loss_mask_4: 0.1644  m2_loss_dice_4: 1.209  m2_loss_ce_5: 0.516  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5228  m2_loss_mask_6: 0.1619  m2_loss_dice_6: 1.18  m2_loss_ce_7: 0.5  m2_loss_mask_7: 0.159  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.5213  m2_loss_mask_8: 0.1575  m2_loss_dice_8: 1.204  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9581    time: 1.4490  last_time: 1.4914  data_time: 0.0444  last_data_time: 0.0580   lr: 0.0001  max_mem: 35245M
[08/19 20:03:22] d2.utils.events INFO:  eta: 0:13:31  iter: 439  total_loss: 46.22  m1_loss_ce: 0.5826  m1_loss_mask: 0.1683  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6779  m1_loss_mask_0: 0.1981  m1_loss_dice_0: 1.5  m1_loss_ce_1: 0.6744  m1_loss_mask_1: 0.1867  m1_loss_dice_1: 1.412  m1_loss_ce_2: 0.6448  m1_loss_mask_2: 0.1736  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.599  m1_loss_mask_3: 0.172  m1_loss_dice_3: 1.311  m1_loss_ce_4: 0.5842  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.5619  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.295  m1_loss_ce_6: 0.5625  m1_loss_mask_6: 0.1716  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.5515  m1_loss_mask_7: 0.1686  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.5411  m1_loss_mask_8: 0.168  m1_loss_dice_8: 1.244  m2_loss_ce: 0.5457  m2_loss_mask: 0.1706  m2_loss_dice: 1.292  m2_loss_ce_0: 0.6482  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.569  m2_loss_ce_1: 0.701  m2_loss_mask_1: 0.1902  m2_loss_dice_1: 1.47  m2_loss_ce_2: 0.6644  m2_loss_mask_2: 0.1758  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.5952  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5818  m2_loss_mask_4: 0.1756  m2_loss_dice_4: 1.307  m2_loss_ce_5: 0.5757  m2_loss_mask_5: 0.1767  m2_loss_dice_5: 1.318  m2_loss_ce_6: 0.5557  m2_loss_mask_6: 0.172  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.5592  m2_loss_mask_7: 0.1707  m2_loss_dice_7: 1.287  m2_loss_ce_8: 0.5545  m2_loss_mask_8: 0.1699  m2_loss_dice_8: 1.242  com_loss_ce: 2.15  com_loss_mask: 0.6935  com_loss_dice: 0.959    time: 1.4499  last_time: 1.4981  data_time: 0.0439  last_data_time: 0.0407   lr: 0.0001  max_mem: 35245M
[08/19 20:03:51] d2.utils.events INFO:  eta: 0:13:02  iter: 459  total_loss: 44.26  m1_loss_ce: 0.4837  m1_loss_mask: 0.1711  m1_loss_dice: 1.237  m1_loss_ce_0: 0.5848  m1_loss_mask_0: 0.1997  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.6798  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.399  m1_loss_ce_2: 0.5852  m1_loss_mask_2: 0.1795  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5486  m1_loss_mask_3: 0.1775  m1_loss_dice_3: 1.285  m1_loss_ce_4: 0.5107  m1_loss_mask_4: 0.1772  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.4947  m1_loss_mask_5: 0.1757  m1_loss_dice_5: 1.268  m1_loss_ce_6: 0.5006  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.4934  m1_loss_mask_7: 0.1728  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.5119  m1_loss_mask_8: 0.1715  m1_loss_dice_8: 1.258  m2_loss_ce: 0.5038  m2_loss_mask: 0.1708  m2_loss_dice: 1.25  m2_loss_ce_0: 0.6037  m2_loss_mask_0: 0.2036  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6926  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.38  m2_loss_ce_2: 0.6193  m2_loss_mask_2: 0.1742  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5477  m2_loss_mask_3: 0.1778  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5036  m2_loss_mask_4: 0.1745  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5159  m2_loss_mask_5: 0.1764  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5008  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.5171  m2_loss_mask_7: 0.1688  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.493  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.26  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.957    time: 1.4501  last_time: 1.4152  data_time: 0.0417  last_data_time: 0.0346   lr: 0.0001  max_mem: 35245M
[08/19 20:04:21] d2.utils.events INFO:  eta: 0:12:34  iter: 479  total_loss: 45.79  m1_loss_ce: 0.5372  m1_loss_mask: 0.153  m1_loss_dice: 1.228  m1_loss_ce_0: 0.6323  m1_loss_mask_0: 0.1894  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6823  m1_loss_mask_1: 0.1636  m1_loss_dice_1: 1.421  m1_loss_ce_2: 0.6458  m1_loss_mask_2: 0.1549  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.579  m1_loss_mask_3: 0.1533  m1_loss_dice_3: 1.323  m1_loss_ce_4: 0.5684  m1_loss_mask_4: 0.1579  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.5414  m1_loss_mask_5: 0.1566  m1_loss_dice_5: 1.289  m1_loss_ce_6: 0.5395  m1_loss_mask_6: 0.1548  m1_loss_dice_6: 1.273  m1_loss_ce_7: 0.5359  m1_loss_mask_7: 0.1525  m1_loss_dice_7: 1.305  m1_loss_ce_8: 0.5402  m1_loss_mask_8: 0.1538  m1_loss_dice_8: 1.272  m2_loss_ce: 0.5315  m2_loss_mask: 0.1584  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6239  m2_loss_mask_0: 0.1936  m2_loss_dice_0: 1.515  m2_loss_ce_1: 0.6702  m2_loss_mask_1: 0.1696  m2_loss_dice_1: 1.414  m2_loss_ce_2: 0.6166  m2_loss_mask_2: 0.161  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5646  m2_loss_mask_3: 0.16  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5562  m2_loss_mask_4: 0.1644  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.5675  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.313  m2_loss_ce_6: 0.5238  m2_loss_mask_6: 0.1628  m2_loss_dice_6: 1.284  m2_loss_ce_7: 0.5498  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.313  m2_loss_ce_8: 0.5199  m2_loss_mask_8: 0.1588  m2_loss_dice_8: 1.311  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9584    time: 1.4518  last_time: 1.4881  data_time: 0.0427  last_data_time: 0.0435   lr: 0.0001  max_mem: 35245M
[08/19 20:04:50] d2.utils.events INFO:  eta: 0:12:04  iter: 499  total_loss: 46.5  m1_loss_ce: 0.5424  m1_loss_mask: 0.1596  m1_loss_dice: 1.278  m1_loss_ce_0: 0.65  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.7314  m1_loss_mask_1: 0.1657  m1_loss_dice_1: 1.43  m1_loss_ce_2: 0.681  m1_loss_mask_2: 0.165  m1_loss_dice_2: 1.359  m1_loss_ce_3: 0.6094  m1_loss_mask_3: 0.1619  m1_loss_dice_3: 1.293  m1_loss_ce_4: 0.6086  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.303  m1_loss_ce_5: 0.5674  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.343  m1_loss_ce_6: 0.5736  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.271  m1_loss_ce_7: 0.5615  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.297  m1_loss_ce_8: 0.5202  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.281  m2_loss_ce: 0.5566  m2_loss_mask: 0.1591  m2_loss_dice: 1.313  m2_loss_ce_0: 0.664  m2_loss_mask_0: 0.1837  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.7377  m2_loss_mask_1: 0.1687  m2_loss_dice_1: 1.449  m2_loss_ce_2: 0.6776  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.37  m2_loss_ce_3: 0.6017  m2_loss_mask_3: 0.1618  m2_loss_dice_3: 1.355  m2_loss_ce_4: 0.599  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.5967  m2_loss_mask_5: 0.162  m2_loss_dice_5: 1.333  m2_loss_ce_6: 0.5867  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.3  m2_loss_ce_7: 0.5692  m2_loss_mask_7: 0.1615  m2_loss_dice_7: 1.318  m2_loss_ce_8: 0.5837  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.299  com_loss_ce: 2.148  com_loss_mask: 0.6935  com_loss_dice: 0.9595    time: 1.4520  last_time: 1.4170  data_time: 0.0438  last_data_time: 0.0376   lr: 0.0001  max_mem: 35245M
[08/19 20:05:19] d2.utils.events INFO:  eta: 0:11:35  iter: 519  total_loss: 43.19  m1_loss_ce: 0.4804  m1_loss_mask: 0.1649  m1_loss_dice: 1.119  m1_loss_ce_0: 0.6004  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.6528  m1_loss_mask_1: 0.1793  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.595  m1_loss_mask_2: 0.1691  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.5597  m1_loss_mask_3: 0.1714  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.525  m1_loss_mask_4: 0.1698  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.488  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.5302  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.5079  m1_loss_mask_7: 0.1642  m1_loss_dice_7: 1.158  m1_loss_ce_8: 0.5248  m1_loss_mask_8: 0.1637  m1_loss_dice_8: 1.162  m2_loss_ce: 0.5117  m2_loss_mask: 0.1654  m2_loss_dice: 1.176  m2_loss_ce_0: 0.6035  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6845  m2_loss_mask_1: 0.1771  m2_loss_dice_1: 1.303  m2_loss_ce_2: 0.6274  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.245  m2_loss_ce_3: 0.5511  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.209  m2_loss_ce_4: 0.5377  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.189  m2_loss_ce_5: 0.5255  m2_loss_mask_5: 0.1662  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.4989  m2_loss_mask_6: 0.1659  m2_loss_dice_6: 1.181  m2_loss_ce_7: 0.5206  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.5463  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.201  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9557    time: 1.4519  last_time: 1.4405  data_time: 0.0413  last_data_time: 0.0349   lr: 0.0001  max_mem: 35245M
[08/19 20:05:49] d2.utils.events INFO:  eta: 0:11:07  iter: 539  total_loss: 45.9  m1_loss_ce: 0.5309  m1_loss_mask: 0.1624  m1_loss_dice: 1.248  m1_loss_ce_0: 0.6473  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.7175  m1_loss_mask_1: 0.1706  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.6589  m1_loss_mask_2: 0.1691  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.6057  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.6021  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.285  m1_loss_ce_5: 0.5723  m1_loss_mask_5: 0.1614  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.5622  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.535  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.5306  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5631  m2_loss_mask: 0.1677  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6739  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.7385  m2_loss_mask_1: 0.1717  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.7014  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.6306  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5958  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5615  m2_loss_mask_5: 0.1703  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5612  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5757  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.5675  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.238  com_loss_ce: 2.148  com_loss_mask: 0.6935  com_loss_dice: 0.9572    time: 1.4528  last_time: 1.4643  data_time: 0.0429  last_data_time: 0.0414   lr: 0.0001  max_mem: 35245M
[08/19 20:06:18] d2.utils.events INFO:  eta: 0:10:38  iter: 559  total_loss: 44.67  m1_loss_ce: 0.4548  m1_loss_mask: 0.1628  m1_loss_dice: 1.265  m1_loss_ce_0: 0.612  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.6836  m1_loss_mask_1: 0.1731  m1_loss_dice_1: 1.414  m1_loss_ce_2: 0.6098  m1_loss_mask_2: 0.1711  m1_loss_dice_2: 1.381  m1_loss_ce_3: 0.5101  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5142  m1_loss_mask_4: 0.1679  m1_loss_dice_4: 1.301  m1_loss_ce_5: 0.4997  m1_loss_mask_5: 0.1634  m1_loss_dice_5: 1.294  m1_loss_ce_6: 0.4672  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.4586  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.273  m1_loss_ce_8: 0.4704  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.249  m2_loss_ce: 0.5106  m2_loss_mask: 0.1708  m2_loss_dice: 1.249  m2_loss_ce_0: 0.6282  m2_loss_mask_0: 0.1991  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.6963  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.6472  m2_loss_mask_2: 0.1722  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5906  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.544  m2_loss_mask_4: 0.1725  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.5305  m2_loss_mask_5: 0.1731  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.5081  m2_loss_mask_6: 0.1704  m2_loss_dice_6: 1.313  m2_loss_ce_7: 0.4899  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.289  m2_loss_ce_8: 0.5316  m2_loss_mask_8: 0.1713  m2_loss_dice_8: 1.252  com_loss_ce: 2.141  com_loss_mask: 0.6935  com_loss_dice: 0.958    time: 1.4533  last_time: 1.4521  data_time: 0.0417  last_data_time: 0.0386   lr: 0.0001  max_mem: 35245M
[08/19 20:06:48] d2.utils.events INFO:  eta: 0:10:09  iter: 579  total_loss: 42.34  m1_loss_ce: 0.4793  m1_loss_mask: 0.167  m1_loss_dice: 1.098  m1_loss_ce_0: 0.6397  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.326  m1_loss_ce_1: 0.6334  m1_loss_mask_1: 0.1753  m1_loss_dice_1: 1.256  m1_loss_ce_2: 0.5729  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.188  m1_loss_ce_3: 0.5486  m1_loss_mask_3: 0.1675  m1_loss_dice_3: 1.147  m1_loss_ce_4: 0.5048  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.138  m1_loss_ce_5: 0.4979  m1_loss_mask_5: 0.1696  m1_loss_dice_5: 1.143  m1_loss_ce_6: 0.4967  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.128  m1_loss_ce_7: 0.4841  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.106  m1_loss_ce_8: 0.4847  m1_loss_mask_8: 0.1678  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4957  m2_loss_mask: 0.1628  m2_loss_dice: 1.13  m2_loss_ce_0: 0.614  m2_loss_mask_0: 0.1964  m2_loss_dice_0: 1.391  m2_loss_ce_1: 0.6338  m2_loss_mask_1: 0.1708  m2_loss_dice_1: 1.29  m2_loss_ce_2: 0.6171  m2_loss_mask_2: 0.165  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.5812  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.5161  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.166  m2_loss_ce_5: 0.5011  m2_loss_mask_5: 0.1653  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.5055  m2_loss_mask_6: 0.1634  m2_loss_dice_6: 1.174  m2_loss_ce_7: 0.5097  m2_loss_mask_7: 0.1613  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.4937  m2_loss_mask_8: 0.1617  m2_loss_dice_8: 1.145  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9556    time: 1.4536  last_time: 1.4133  data_time: 0.0395  last_data_time: 0.0370   lr: 0.0001  max_mem: 35245M
[08/19 20:07:17] d2.utils.events INFO:  eta: 0:09:40  iter: 599  total_loss: 45.52  m1_loss_ce: 0.5351  m1_loss_mask: 0.1731  m1_loss_dice: 1.246  m1_loss_ce_0: 0.667  m1_loss_mask_0: 0.2014  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.7314  m1_loss_mask_1: 0.1848  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.6754  m1_loss_mask_2: 0.1725  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.6079  m1_loss_mask_3: 0.1754  m1_loss_dice_3: 1.265  m1_loss_ce_4: 0.577  m1_loss_mask_4: 0.1735  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5878  m1_loss_mask_5: 0.1714  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5597  m1_loss_mask_6: 0.1703  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.5604  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.5723  m1_loss_mask_8: 0.1726  m1_loss_dice_8: 1.23  m2_loss_ce: 0.5435  m2_loss_mask: 0.1753  m2_loss_dice: 1.227  m2_loss_ce_0: 0.6869  m2_loss_mask_0: 0.207  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.7192  m2_loss_mask_1: 0.1865  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.683  m2_loss_mask_2: 0.1754  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5927  m2_loss_mask_3: 0.1784  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.6043  m2_loss_mask_4: 0.18  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5743  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5643  m2_loss_mask_6: 0.1753  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5508  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.5493  m2_loss_mask_8: 0.1755  m2_loss_dice_8: 1.222  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9571    time: 1.4533  last_time: 1.4319  data_time: 0.0418  last_data_time: 0.0330   lr: 0.0001  max_mem: 35245M
[08/19 20:07:46] d2.utils.events INFO:  eta: 0:09:11  iter: 619  total_loss: 43.02  m1_loss_ce: 0.484  m1_loss_mask: 0.1772  m1_loss_dice: 1.138  m1_loss_ce_0: 0.5993  m1_loss_mask_0: 0.2037  m1_loss_dice_0: 1.301  m1_loss_ce_1: 0.6297  m1_loss_mask_1: 0.1929  m1_loss_dice_1: 1.256  m1_loss_ce_2: 0.5845  m1_loss_mask_2: 0.1842  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.5404  m1_loss_mask_3: 0.177  m1_loss_dice_3: 1.144  m1_loss_ce_4: 0.533  m1_loss_mask_4: 0.1844  m1_loss_dice_4: 1.142  m1_loss_ce_5: 0.5101  m1_loss_mask_5: 0.1799  m1_loss_dice_5: 1.127  m1_loss_ce_6: 0.4777  m1_loss_mask_6: 0.1756  m1_loss_dice_6: 1.143  m1_loss_ce_7: 0.5135  m1_loss_mask_7: 0.175  m1_loss_dice_7: 1.095  m1_loss_ce_8: 0.4795  m1_loss_mask_8: 0.176  m1_loss_dice_8: 1.117  m2_loss_ce: 0.499  m2_loss_mask: 0.1845  m2_loss_dice: 1.099  m2_loss_ce_0: 0.5753  m2_loss_mask_0: 0.2083  m2_loss_dice_0: 1.349  m2_loss_ce_1: 0.6395  m2_loss_mask_1: 0.191  m2_loss_dice_1: 1.248  m2_loss_ce_2: 0.5811  m2_loss_mask_2: 0.1884  m2_loss_dice_2: 1.173  m2_loss_ce_3: 0.5299  m2_loss_mask_3: 0.1855  m2_loss_dice_3: 1.183  m2_loss_ce_4: 0.4955  m2_loss_mask_4: 0.1877  m2_loss_dice_4: 1.171  m2_loss_ce_5: 0.5035  m2_loss_mask_5: 0.1878  m2_loss_dice_5: 1.139  m2_loss_ce_6: 0.4948  m2_loss_mask_6: 0.1847  m2_loss_dice_6: 1.155  m2_loss_ce_7: 0.4888  m2_loss_mask_7: 0.1853  m2_loss_dice_7: 1.115  m2_loss_ce_8: 0.4861  m2_loss_mask_8: 0.1822  m2_loss_dice_8: 1.127  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9514    time: 1.4528  last_time: 1.4448  data_time: 0.0386  last_data_time: 0.0353   lr: 0.0001  max_mem: 35245M
[08/19 20:08:15] d2.utils.events INFO:  eta: 0:08:42  iter: 639  total_loss: 44.87  m1_loss_ce: 0.497  m1_loss_mask: 0.1664  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6195  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.662  m1_loss_mask_1: 0.179  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.6167  m1_loss_mask_2: 0.1708  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.5736  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5596  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5484  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.5228  m1_loss_mask_6: 0.1646  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.5221  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.5026  m1_loss_mask_8: 0.1678  m1_loss_dice_8: 1.221  m2_loss_ce: 0.5062  m2_loss_mask: 0.1647  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6241  m2_loss_mask_0: 0.1927  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.666  m2_loss_mask_1: 0.1763  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.62  m2_loss_mask_2: 0.1732  m2_loss_dice_2: 1.337  m2_loss_ce_3: 0.5626  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.563  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5197  m2_loss_mask_5: 0.1695  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.4998  m2_loss_mask_6: 0.1673  m2_loss_dice_6: 1.272  m2_loss_ce_7: 0.5218  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.255  m2_loss_ce_8: 0.5229  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.248  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.9568    time: 1.4535  last_time: 1.4487  data_time: 0.0415  last_data_time: 0.0427   lr: 0.0001  max_mem: 35245M
[08/19 20:08:45] d2.utils.events INFO:  eta: 0:08:13  iter: 659  total_loss: 43.72  m1_loss_ce: 0.5385  m1_loss_mask: 0.1681  m1_loss_dice: 1.183  m1_loss_ce_0: 0.6318  m1_loss_mask_0: 0.1952  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.7176  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.6312  m1_loss_mask_2: 0.1762  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.6082  m1_loss_mask_3: 0.1755  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.5714  m1_loss_mask_4: 0.1718  m1_loss_dice_4: 1.2  m1_loss_ce_5: 0.5624  m1_loss_mask_5: 0.1675  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.5296  m1_loss_mask_6: 0.1708  m1_loss_dice_6: 1.143  m1_loss_ce_7: 0.5431  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.5308  m1_loss_mask_8: 0.1679  m1_loss_dice_8: 1.164  m2_loss_ce: 0.5371  m2_loss_mask: 0.1616  m2_loss_dice: 1.198  m2_loss_ce_0: 0.6322  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.427  m2_loss_ce_1: 0.6983  m2_loss_mask_1: 0.1754  m2_loss_dice_1: 1.337  m2_loss_ce_2: 0.662  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5958  m2_loss_mask_3: 0.1605  m2_loss_dice_3: 1.228  m2_loss_ce_4: 0.5531  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5592  m2_loss_mask_5: 0.1625  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.5304  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.5577  m2_loss_mask_7: 0.1595  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.5176  m2_loss_mask_8: 0.1592  m2_loss_dice_8: 1.221  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.9579    time: 1.4539  last_time: 1.4492  data_time: 0.0423  last_data_time: 0.0426   lr: 0.0001  max_mem: 35245M
[08/19 20:09:15] d2.utils.events INFO:  eta: 0:07:44  iter: 679  total_loss: 44.22  m1_loss_ce: 0.5123  m1_loss_mask: 0.1618  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5913  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.495  m1_loss_ce_1: 0.6689  m1_loss_mask_1: 0.1758  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.6067  m1_loss_mask_2: 0.1674  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5691  m1_loss_mask_3: 0.1663  m1_loss_dice_3: 1.301  m1_loss_ce_4: 0.5663  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.5461  m1_loss_mask_5: 0.1613  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.5306  m1_loss_mask_6: 0.1618  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.5092  m1_loss_mask_7: 0.1627  m1_loss_dice_7: 1.298  m1_loss_ce_8: 0.503  m1_loss_mask_8: 0.1597  m1_loss_dice_8: 1.277  m2_loss_ce: 0.5587  m2_loss_mask: 0.1576  m2_loss_dice: 1.269  m2_loss_ce_0: 0.6498  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.715  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.6635  m2_loss_mask_2: 0.1644  m2_loss_dice_2: 1.371  m2_loss_ce_3: 0.6019  m2_loss_mask_3: 0.159  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.6054  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.58  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.5464  m2_loss_mask_6: 0.1585  m2_loss_dice_6: 1.288  m2_loss_ce_7: 0.541  m2_loss_mask_7: 0.1578  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.5437  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.27  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9593    time: 1.4547  last_time: 1.5046  data_time: 0.0429  last_data_time: 0.0411   lr: 0.0001  max_mem: 35245M
[08/19 20:09:44] d2.utils.events INFO:  eta: 0:07:16  iter: 699  total_loss: 43.73  m1_loss_ce: 0.5147  m1_loss_mask: 0.1531  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5848  m1_loss_mask_0: 0.1807  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.642  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.582  m1_loss_mask_2: 0.1564  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.5339  m1_loss_mask_3: 0.1577  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.5351  m1_loss_mask_4: 0.1535  m1_loss_dice_4: 1.288  m1_loss_ce_5: 0.5488  m1_loss_mask_5: 0.1543  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.4807  m1_loss_mask_6: 0.1529  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.4821  m1_loss_mask_7: 0.1533  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4668  m1_loss_mask_8: 0.1533  m1_loss_dice_8: 1.245  m2_loss_ce: 0.5014  m2_loss_mask: 0.1526  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5764  m2_loss_mask_0: 0.1823  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6785  m2_loss_mask_1: 0.1697  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.6139  m2_loss_mask_2: 0.1612  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5377  m2_loss_mask_3: 0.1613  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5334  m2_loss_mask_4: 0.1577  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.522  m2_loss_mask_5: 0.1567  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.4772  m2_loss_mask_6: 0.153  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.499  m2_loss_mask_7: 0.1514  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.5014  m2_loss_mask_8: 0.1511  m2_loss_dice_8: 1.267  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9574    time: 1.4554  last_time: 1.4839  data_time: 0.0420  last_data_time: 0.0366   lr: 0.0001  max_mem: 35245M
[08/19 20:10:14] d2.utils.events INFO:  eta: 0:06:46  iter: 719  total_loss: 44.71  m1_loss_ce: 0.5478  m1_loss_mask: 0.1667  m1_loss_dice: 1.215  m1_loss_ce_0: 0.6611  m1_loss_mask_0: 0.1927  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.7251  m1_loss_mask_1: 0.1829  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.6498  m1_loss_mask_2: 0.1745  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.6034  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.172  m1_loss_ce_4: 0.5627  m1_loss_mask_4: 0.1742  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.5634  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.5575  m1_loss_mask_6: 0.1701  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.5262  m1_loss_mask_7: 0.1686  m1_loss_dice_7: 1.184  m1_loss_ce_8: 0.5563  m1_loss_mask_8: 0.166  m1_loss_dice_8: 1.184  m2_loss_ce: 0.5682  m2_loss_mask: 0.1697  m2_loss_dice: 1.204  m2_loss_ce_0: 0.6658  m2_loss_mask_0: 0.2012  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.7317  m2_loss_mask_1: 0.187  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.6581  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.6299  m2_loss_mask_3: 0.1757  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.6269  m2_loss_mask_4: 0.174  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.5699  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.5514  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5635  m2_loss_mask_7: 0.1708  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.5406  m2_loss_mask_8: 0.1694  m2_loss_dice_8: 1.191  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9568    time: 1.4552  last_time: 1.4153  data_time: 0.0413  last_data_time: 0.0467   lr: 0.0001  max_mem: 35245M
[08/19 20:10:42] d2.utils.events INFO:  eta: 0:06:17  iter: 739  total_loss: 43.54  m1_loss_ce: 0.5306  m1_loss_mask: 0.1674  m1_loss_dice: 1.207  m1_loss_ce_0: 0.6113  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.6687  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.6481  m1_loss_mask_2: 0.1696  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.582  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.5427  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.5494  m1_loss_mask_5: 0.1668  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.5243  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.5507  m1_loss_mask_7: 0.167  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.5284  m1_loss_mask_8: 0.168  m1_loss_dice_8: 1.22  m2_loss_ce: 0.5442  m2_loss_mask: 0.1677  m2_loss_dice: 1.228  m2_loss_ce_0: 0.6097  m2_loss_mask_0: 0.2014  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.6372  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.6239  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5722  m2_loss_mask_3: 0.1729  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.5262  m2_loss_mask_4: 0.1726  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.558  m2_loss_mask_5: 0.1725  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5141  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5216  m2_loss_mask_7: 0.1658  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.5239  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.214  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9572    time: 1.4546  last_time: 1.4447  data_time: 0.0409  last_data_time: 0.0379   lr: 0.0001  max_mem: 35245M
[08/19 20:11:12] d2.utils.events INFO:  eta: 0:05:48  iter: 759  total_loss: 44.83  m1_loss_ce: 0.4982  m1_loss_mask: 0.1527  m1_loss_dice: 1.258  m1_loss_ce_0: 0.6115  m1_loss_mask_0: 0.1861  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.6615  m1_loss_mask_1: 0.1651  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.6468  m1_loss_mask_2: 0.1564  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.5604  m1_loss_mask_3: 0.1575  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.545  m1_loss_mask_4: 0.1582  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5406  m1_loss_mask_5: 0.1535  m1_loss_dice_5: 1.277  m1_loss_ce_6: 0.5036  m1_loss_mask_6: 0.1526  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.5  m1_loss_mask_7: 0.1532  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.5042  m1_loss_mask_8: 0.1528  m1_loss_dice_8: 1.252  m2_loss_ce: 0.5292  m2_loss_mask: 0.161  m2_loss_dice: 1.271  m2_loss_ce_0: 0.6375  m2_loss_mask_0: 0.1887  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6641  m2_loss_mask_1: 0.1751  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.6364  m2_loss_mask_2: 0.1638  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5874  m2_loss_mask_3: 0.1652  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5783  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5672  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.5543  m2_loss_mask_6: 0.1602  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5494  m2_loss_mask_7: 0.1586  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.5617  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.242  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9567    time: 1.4545  last_time: 1.3767  data_time: 0.0410  last_data_time: 0.0323   lr: 0.0001  max_mem: 35245M
[08/19 20:11:41] d2.utils.events INFO:  eta: 0:05:19  iter: 779  total_loss: 43.93  m1_loss_ce: 0.4881  m1_loss_mask: 0.1562  m1_loss_dice: 1.198  m1_loss_ce_0: 0.6065  m1_loss_mask_0: 0.1916  m1_loss_dice_0: 1.393  m1_loss_ce_1: 0.6296  m1_loss_mask_1: 0.1682  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5976  m1_loss_mask_2: 0.1633  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5387  m1_loss_mask_3: 0.1606  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.4909  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.5105  m1_loss_mask_5: 0.1581  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.4621  m1_loss_mask_6: 0.1581  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4638  m1_loss_mask_7: 0.1578  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.4688  m1_loss_mask_8: 0.159  m1_loss_dice_8: 1.259  m2_loss_ce: 0.5162  m2_loss_mask: 0.162  m2_loss_dice: 1.24  m2_loss_ce_0: 0.5957  m2_loss_mask_0: 0.1927  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6447  m2_loss_mask_1: 0.1729  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.6003  m2_loss_mask_2: 0.1648  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5579  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.5464  m2_loss_mask_4: 0.1643  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.5134  m2_loss_mask_5: 0.1638  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.5178  m2_loss_mask_6: 0.1609  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.496  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.5039  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.258  com_loss_ce: 2.139  com_loss_mask: 0.6935  com_loss_dice: 0.9559    time: 1.4553  last_time: 1.4129  data_time: 0.0421  last_data_time: 0.0595   lr: 0.0001  max_mem: 35245M
[08/19 20:12:11] d2.utils.events INFO:  eta: 0:04:50  iter: 799  total_loss: 44.67  m1_loss_ce: 0.4449  m1_loss_mask: 0.1576  m1_loss_dice: 1.27  m1_loss_ce_0: 0.6247  m1_loss_mask_0: 0.1812  m1_loss_dice_0: 1.48  m1_loss_ce_1: 0.6328  m1_loss_mask_1: 0.1729  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.5852  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.339  m1_loss_ce_3: 0.5337  m1_loss_mask_3: 0.1597  m1_loss_dice_3: 1.27  m1_loss_ce_4: 0.4992  m1_loss_mask_4: 0.1592  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.4824  m1_loss_mask_5: 0.1581  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4718  m1_loss_mask_6: 0.1591  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.4811  m1_loss_mask_7: 0.1591  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.4636  m1_loss_mask_8: 0.1567  m1_loss_dice_8: 1.263  m2_loss_ce: 0.4999  m2_loss_mask: 0.1639  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6309  m2_loss_mask_0: 0.1916  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.6984  m2_loss_mask_1: 0.1767  m2_loss_dice_1: 1.411  m2_loss_ce_2: 0.6206  m2_loss_mask_2: 0.1636  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.5734  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5195  m2_loss_mask_4: 0.1617  m2_loss_dice_4: 1.31  m2_loss_ce_5: 0.5464  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.309  m2_loss_ce_6: 0.5377  m2_loss_mask_6: 0.1627  m2_loss_dice_6: 1.299  m2_loss_ce_7: 0.5402  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.297  m2_loss_ce_8: 0.5016  m2_loss_mask_8: 0.1626  m2_loss_dice_8: 1.271  com_loss_ce: 2.139  com_loss_mask: 0.6935  com_loss_dice: 0.9583    time: 1.4556  last_time: 1.3833  data_time: 0.0430  last_data_time: 0.0452   lr: 0.0001  max_mem: 35245M
[08/19 20:12:40] d2.utils.events INFO:  eta: 0:04:21  iter: 819  total_loss: 44.11  m1_loss_ce: 0.5418  m1_loss_mask: 0.1658  m1_loss_dice: 1.175  m1_loss_ce_0: 0.6303  m1_loss_mask_0: 0.1985  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.6638  m1_loss_mask_1: 0.1774  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.6043  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5763  m1_loss_mask_3: 0.1693  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5247  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.209  m1_loss_ce_5: 0.5228  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.5051  m1_loss_mask_6: 0.1685  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.5108  m1_loss_mask_7: 0.165  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.5256  m1_loss_mask_8: 0.1649  m1_loss_dice_8: 1.178  m2_loss_ce: 0.5108  m2_loss_mask: 0.1694  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6177  m2_loss_mask_0: 0.2008  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6721  m2_loss_mask_1: 0.1853  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.6394  m2_loss_mask_2: 0.1777  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5925  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5547  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.565  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5206  m2_loss_mask_6: 0.1718  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.499  m2_loss_mask_7: 0.1708  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5254  m2_loss_mask_8: 0.1721  m2_loss_dice_8: 1.24  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9561    time: 1.4550  last_time: 1.3868  data_time: 0.0407  last_data_time: 0.0419   lr: 0.0001  max_mem: 35245M
[08/19 20:13:09] d2.utils.events INFO:  eta: 0:03:52  iter: 839  total_loss: 43.81  m1_loss_ce: 0.5241  m1_loss_mask: 0.1502  m1_loss_dice: 1.183  m1_loss_ce_0: 0.6707  m1_loss_mask_0: 0.1787  m1_loss_dice_0: 1.351  m1_loss_ce_1: 0.6933  m1_loss_mask_1: 0.1627  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.625  m1_loss_mask_2: 0.1562  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.5798  m1_loss_mask_3: 0.1535  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.5443  m1_loss_mask_4: 0.1537  m1_loss_dice_4: 1.188  m1_loss_ce_5: 0.5784  m1_loss_mask_5: 0.1505  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.5321  m1_loss_mask_6: 0.1505  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.5645  m1_loss_mask_7: 0.1488  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.5341  m1_loss_mask_8: 0.1505  m1_loss_dice_8: 1.178  m2_loss_ce: 0.5608  m2_loss_mask: 0.1618  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6389  m2_loss_mask_0: 0.1898  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.7134  m2_loss_mask_1: 0.1731  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6786  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.6157  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5826  m2_loss_mask_4: 0.1619  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5907  m2_loss_mask_5: 0.16  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.5577  m2_loss_mask_6: 0.1598  m2_loss_dice_6: 1.217  m2_loss_ce_7: 0.576  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.557  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.24  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9573    time: 1.4551  last_time: 1.4969  data_time: 0.0420  last_data_time: 0.0449   lr: 0.0001  max_mem: 35245M
[08/19 20:13:38] d2.utils.events INFO:  eta: 0:03:23  iter: 859  total_loss: 44.33  m1_loss_ce: 0.5291  m1_loss_mask: 0.152  m1_loss_dice: 1.189  m1_loss_ce_0: 0.6418  m1_loss_mask_0: 0.1753  m1_loss_dice_0: 1.363  m1_loss_ce_1: 0.6721  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.6215  m1_loss_mask_2: 0.1564  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5601  m1_loss_mask_3: 0.1532  m1_loss_dice_3: 1.219  m1_loss_ce_4: 0.5422  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.5448  m1_loss_mask_5: 0.152  m1_loss_dice_5: 1.2  m1_loss_ce_6: 0.5215  m1_loss_mask_6: 0.1518  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.5175  m1_loss_mask_7: 0.1523  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.5109  m1_loss_mask_8: 0.1511  m1_loss_dice_8: 1.211  m2_loss_ce: 0.5545  m2_loss_mask: 0.1554  m2_loss_dice: 1.255  m2_loss_ce_0: 0.6553  m2_loss_mask_0: 0.1847  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6988  m2_loss_mask_1: 0.1664  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.6692  m2_loss_mask_2: 0.1569  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5999  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5643  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5404  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.5243  m2_loss_mask_6: 0.1568  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5258  m2_loss_mask_7: 0.1574  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.5271  m2_loss_mask_8: 0.1563  m2_loss_dice_8: 1.267  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9574    time: 1.4550  last_time: 1.4910  data_time: 0.0421  last_data_time: 0.0453   lr: 0.0001  max_mem: 35245M
[08/19 20:14:07] d2.utils.events INFO:  eta: 0:02:54  iter: 879  total_loss: 43.66  m1_loss_ce: 0.5091  m1_loss_mask: 0.1644  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6177  m1_loss_mask_0: 0.1914  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.6471  m1_loss_mask_1: 0.1786  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5829  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.5456  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.5154  m1_loss_mask_4: 0.1745  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.5171  m1_loss_mask_5: 0.1699  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.5165  m1_loss_mask_6: 0.1691  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.5064  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.4889  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.164  m2_loss_ce: 0.5024  m2_loss_mask: 0.1741  m2_loss_dice: 1.197  m2_loss_ce_0: 0.6142  m2_loss_mask_0: 0.2061  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6529  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5959  m2_loss_mask_2: 0.1799  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5614  m2_loss_mask_3: 0.1746  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.525  m2_loss_mask_4: 0.1779  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.5079  m2_loss_mask_5: 0.1793  m2_loss_dice_5: 1.214  m2_loss_ce_6: 0.5175  m2_loss_mask_6: 0.1746  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.5017  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.199  m2_loss_ce_8: 0.492  m2_loss_mask_8: 0.1728  m2_loss_dice_8: 1.212  com_loss_ce: 2.14  com_loss_mask: 0.6935  com_loss_dice: 0.9571    time: 1.4551  last_time: 1.4319  data_time: 0.0415  last_data_time: 0.0419   lr: 0.0001  max_mem: 35245M
[08/19 20:14:37] d2.utils.events INFO:  eta: 0:02:25  iter: 899  total_loss: 42.65  m1_loss_ce: 0.5178  m1_loss_mask: 0.1644  m1_loss_dice: 1.177  m1_loss_ce_0: 0.5777  m1_loss_mask_0: 0.1918  m1_loss_dice_0: 1.398  m1_loss_ce_1: 0.642  m1_loss_mask_1: 0.1736  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.6143  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.228  m1_loss_ce_3: 0.5663  m1_loss_mask_3: 0.1665  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.5212  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.17  m1_loss_ce_5: 0.5213  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.5108  m1_loss_mask_6: 0.1622  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.5068  m1_loss_mask_7: 0.1616  m1_loss_dice_7: 1.162  m1_loss_ce_8: 0.5009  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.18  m2_loss_ce: 0.5345  m2_loss_mask: 0.1637  m2_loss_dice: 1.171  m2_loss_ce_0: 0.6133  m2_loss_mask_0: 0.1965  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6498  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.6029  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.255  m2_loss_ce_3: 0.57  m2_loss_mask_3: 0.1721  m2_loss_dice_3: 1.229  m2_loss_ce_4: 0.5645  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5389  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.21  m2_loss_ce_6: 0.5543  m2_loss_mask_6: 0.1643  m2_loss_dice_6: 1.184  m2_loss_ce_7: 0.5312  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.5252  m2_loss_mask_8: 0.1648  m2_loss_dice_8: 1.17  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9585    time: 1.4554  last_time: 1.5077  data_time: 0.0400  last_data_time: 0.0403   lr: 0.0001  max_mem: 35245M
[08/19 20:15:06] d2.utils.events INFO:  eta: 0:01:56  iter: 919  total_loss: 44.32  m1_loss_ce: 0.4928  m1_loss_mask: 0.1708  m1_loss_dice: 1.145  m1_loss_ce_0: 0.611  m1_loss_mask_0: 0.198  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6756  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.301  m1_loss_ce_2: 0.6168  m1_loss_mask_2: 0.1765  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.5883  m1_loss_mask_3: 0.1765  m1_loss_dice_3: 1.177  m1_loss_ce_4: 0.5269  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.174  m1_loss_ce_5: 0.5042  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.161  m1_loss_ce_6: 0.5103  m1_loss_mask_6: 0.1712  m1_loss_dice_6: 1.152  m1_loss_ce_7: 0.4996  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.4927  m1_loss_mask_8: 0.1731  m1_loss_dice_8: 1.113  m2_loss_ce: 0.54  m2_loss_mask: 0.1751  m2_loss_dice: 1.185  m2_loss_ce_0: 0.631  m2_loss_mask_0: 0.2056  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6325  m2_loss_mask_1: 0.1851  m2_loss_dice_1: 1.359  m2_loss_ce_2: 0.6345  m2_loss_mask_2: 0.184  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5891  m2_loss_mask_3: 0.18  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5754  m2_loss_mask_4: 0.1795  m2_loss_dice_4: 1.252  m2_loss_ce_5: 0.5368  m2_loss_mask_5: 0.1774  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.5386  m2_loss_mask_6: 0.1771  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.5532  m2_loss_mask_7: 0.1761  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.53  m2_loss_mask_8: 0.1756  m2_loss_dice_8: 1.196  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9558    time: 1.4556  last_time: 1.5218  data_time: 0.0414  last_data_time: 0.0448   lr: 0.0001  max_mem: 35245M
[08/19 20:15:36] d2.utils.events INFO:  eta: 0:01:27  iter: 939  total_loss: 44.3  m1_loss_ce: 0.5162  m1_loss_mask: 0.1692  m1_loss_dice: 1.177  m1_loss_ce_0: 0.6226  m1_loss_mask_0: 0.2048  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6704  m1_loss_mask_1: 0.1878  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.6362  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.5895  m1_loss_mask_3: 0.1727  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.5367  m1_loss_mask_4: 0.1708  m1_loss_dice_4: 1.198  m1_loss_ce_5: 0.5388  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.5341  m1_loss_mask_6: 0.1694  m1_loss_dice_6: 1.17  m1_loss_ce_7: 0.5292  m1_loss_mask_7: 0.1681  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.5338  m1_loss_mask_8: 0.1706  m1_loss_dice_8: 1.18  m2_loss_ce: 0.5323  m2_loss_mask: 0.1676  m2_loss_dice: 1.206  m2_loss_ce_0: 0.6398  m2_loss_mask_0: 0.2048  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6986  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.672  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.566  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5869  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.22  m2_loss_ce_5: 0.5784  m2_loss_mask_5: 0.1701  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.5667  m2_loss_mask_6: 0.172  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.5422  m2_loss_mask_7: 0.1697  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.5268  m2_loss_mask_8: 0.1691  m2_loss_dice_8: 1.219  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9558    time: 1.4558  last_time: 1.5069  data_time: 0.0418  last_data_time: 0.0455   lr: 0.0001  max_mem: 35245M
[08/19 20:16:05] d2.utils.events INFO:  eta: 0:00:58  iter: 959  total_loss: 42.35  m1_loss_ce: 0.479  m1_loss_mask: 0.1783  m1_loss_dice: 1.173  m1_loss_ce_0: 0.5963  m1_loss_mask_0: 0.2086  m1_loss_dice_0: 1.345  m1_loss_ce_1: 0.6471  m1_loss_mask_1: 0.1921  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.6062  m1_loss_mask_2: 0.1806  m1_loss_dice_2: 1.211  m1_loss_ce_3: 0.5214  m1_loss_mask_3: 0.1802  m1_loss_dice_3: 1.144  m1_loss_ce_4: 0.5309  m1_loss_mask_4: 0.1764  m1_loss_dice_4: 1.153  m1_loss_ce_5: 0.5139  m1_loss_mask_5: 0.1773  m1_loss_dice_5: 1.142  m1_loss_ce_6: 0.5127  m1_loss_mask_6: 0.1769  m1_loss_dice_6: 1.17  m1_loss_ce_7: 0.5066  m1_loss_mask_7: 0.1779  m1_loss_dice_7: 1.113  m1_loss_ce_8: 0.4985  m1_loss_mask_8: 0.1767  m1_loss_dice_8: 1.129  m2_loss_ce: 0.5007  m2_loss_mask: 0.1762  m2_loss_dice: 1.16  m2_loss_ce_0: 0.6463  m2_loss_mask_0: 0.2131  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.7022  m2_loss_mask_1: 0.1906  m2_loss_dice_1: 1.314  m2_loss_ce_2: 0.632  m2_loss_mask_2: 0.1858  m2_loss_dice_2: 1.234  m2_loss_ce_3: 0.5843  m2_loss_mask_3: 0.1839  m2_loss_dice_3: 1.22  m2_loss_ce_4: 0.5492  m2_loss_mask_4: 0.1843  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5805  m2_loss_mask_5: 0.1808  m2_loss_dice_5: 1.186  m2_loss_ce_6: 0.5367  m2_loss_mask_6: 0.1783  m2_loss_dice_6: 1.181  m2_loss_ce_7: 0.5544  m2_loss_mask_7: 0.1786  m2_loss_dice_7: 1.173  m2_loss_ce_8: 0.5334  m2_loss_mask_8: 0.1778  m2_loss_dice_8: 1.2  com_loss_ce: 2.141  com_loss_mask: 0.6935  com_loss_dice: 0.9544    time: 1.4558  last_time: 1.4449  data_time: 0.0420  last_data_time: 0.0386   lr: 0.0001  max_mem: 35245M
[08/19 20:16:34] d2.utils.events INFO:  eta: 0:00:29  iter: 979  total_loss: 44.11  m1_loss_ce: 0.5324  m1_loss_mask: 0.1668  m1_loss_dice: 1.184  m1_loss_ce_0: 0.6251  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.359  m1_loss_ce_1: 0.6365  m1_loss_mask_1: 0.1736  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.5963  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.5485  m1_loss_mask_3: 0.161  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.5288  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.547  m1_loss_mask_5: 0.1643  m1_loss_dice_5: 1.188  m1_loss_ce_6: 0.5426  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.5153  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.5169  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.164  m2_loss_ce: 0.5604  m2_loss_mask: 0.164  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6461  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.7096  m2_loss_mask_1: 0.1737  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6579  m2_loss_mask_2: 0.1656  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.6184  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5643  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.5845  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5574  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.5524  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.5544  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.208  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9549    time: 1.4554  last_time: 1.4681  data_time: 0.0399  last_data_time: 0.0342   lr: 0.0001  max_mem: 35245M
[08/19 20:17:03] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_0_7_top_10/model_final.pth
[08/19 20:17:05] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 43.82  m1_loss_ce: 0.5104  m1_loss_mask: 0.1604  m1_loss_dice: 1.207  m1_loss_ce_0: 0.6242  m1_loss_mask_0: 0.187  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6708  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.6276  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.224  m1_loss_ce_3: 0.5838  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.548  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.5301  m1_loss_mask_5: 0.1614  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.5158  m1_loss_mask_6: 0.1649  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.5152  m1_loss_mask_7: 0.1629  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4969  m1_loss_mask_8: 0.1583  m1_loss_dice_8: 1.202  m2_loss_ce: 0.5617  m2_loss_mask: 0.1635  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6819  m2_loss_mask_0: 0.1974  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.7318  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.6831  m2_loss_mask_2: 0.1716  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.6208  m2_loss_mask_3: 0.1676  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.6199  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.5871  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.5943  m2_loss_mask_6: 0.1698  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5696  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.5737  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.21  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9583    time: 1.4548  last_time: 1.3727  data_time: 0.0428  last_data_time: 0.0342   lr: 0.0001  max_mem: 35245M
[08/19 20:17:06] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:24:11 (1.4548 s / it)
[08/19 20:17:06] d2.engine.hooks INFO: Total training time: 0:24:22 (0:00:10 on hooks)
[08/19 20:17:06] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/19 20:17:06] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/19 20:17:06] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 20:17:06] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/19 20:17:06] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/19 20:18:35] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalze030djw ...
[08/19 20:18:54] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.774 | 80.970 | 69.154 |      19       |
| Things | 46.934 | 80.224 | 58.598 |       8       |
| Stuff  | 63.931 | 81.513 | 76.831 |      11       |
[08/19 20:18:54] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.441 | 97.847 | 99.586 |     Stuff     |
| class_8  | 68.978 | 84.102 | 82.018 |     Stuff     |
| class_11 | 86.872 | 89.053 | 97.551 |     Stuff     |
| class_12 | 37.087 | 80.735 | 45.936 |     Stuff     |
| class_13 | 36.282 | 76.191 | 47.619 |     Stuff     |
| class_17 | 46.914 | 64.891 | 72.297 |     Stuff     |
| class_19 | 48.375 | 69.418 | 69.686 |     Stuff     |
| class_20 | 67.161 | 77.765 | 86.364 |     Stuff     |
| class_21 | 89.503 | 90.058 | 99.384 |     Stuff     |
| class_22 | 36.457 | 74.526 | 48.918 |     Stuff     |
| class_23 | 88.168 | 92.052 | 95.781 |     Stuff     |
| class_24 | 53.176 | 77.605 | 68.522 |    Things     |
| class_25 | 47.492 | 73.390 | 64.712 |    Things     |
| class_26 | 65.567 | 83.225 | 78.783 |    Things     |
| class_27 | 50.833 | 87.942 | 57.803 |    Things     |
| class_28 | 56.787 | 88.622 | 64.078 |    Things     |
| class_31 | 26.202 | 86.467 | 30.303 |    Things     |
| class_32 | 32.787 | 73.369 | 44.689 |    Things     |
| class_33 | 42.629 | 71.170 | 59.897 |    Things     |
[08/19 20:18:54] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/19 20:18:54] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/19 20:18:54] d2.evaluation.testing INFO: copypaste: 56.7744,80.9700,69.1540,46.9343,80.2237,58.5983,63.9308,81.5127,76.8309,97.4415,97.8466,99.5859,68.9785,84.1021,82.0175,86.8721,89.0530,97.5510,37.0869,80.7353,45.9364,36.2816,76.1913,47.6190,46.9142,64.8913,72.2966,48.3746,69.4176,69.6864,67.1610,77.7654,86.3636,89.5034,90.0581,99.3840,36.4567,74.5264,48.9177,88.1684,92.0521,95.7811,53.1761,77.6047,68.5217,47.4925,73.3904,64.7120,65.5671,83.2249,78.7831,50.8335,87.9419,57.8035,56.7872,88.6224,64.0777,26.2020,86.4666,30.3030,32.7875,73.3687,44.6886,42.6285,71.1701,59.8967
