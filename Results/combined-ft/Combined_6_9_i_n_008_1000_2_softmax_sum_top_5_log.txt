[08/19 16:46:14] detectron2 INFO: Rank of current process: 0. World size: 2
[08/19 16:46:15] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/19 16:46:15] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_top_5.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/19 16:46:15] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_top_5.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_5
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/19 16:46:15] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_5
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/19 16:46:15] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_5/config.yaml
[08/19 16:46:15] d2.utils.env INFO: Using a generated random seed 16381283
[08/19 16:46:20] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 16:46:20] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/19 16:46:20] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/19 16:46:20] d2.data.build INFO: Using training sampler TrainingSampler
[08/19 16:46:21] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 16:46:21] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/19 16:46:21] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/19 16:46:21] d2.data.build INFO: Making batched data loader with batch_size=4
[08/19 16:46:21] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/19 16:46:25] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 16:46:25] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 16:46:25] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 16:46:36] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 16:46:36] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 16:47:12] d2.utils.events INFO:  eta: 0:23:33  iter: 19  total_loss: 44.1  m1_loss_ce: 0.5733  m1_loss_mask: 0.1692  m1_loss_dice: 1.226  m1_loss_ce_0: 0.7013  m1_loss_mask_0: 0.1987  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.7049  m1_loss_mask_1: 0.1793  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.6604  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.5996  m1_loss_mask_3: 0.1701  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.594  m1_loss_mask_4: 0.1738  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.5703  m1_loss_mask_5: 0.1735  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.5789  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.5766  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.5901  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5531  m2_loss_mask: 0.1664  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6399  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6812  m2_loss_mask_1: 0.175  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.6566  m2_loss_mask_2: 0.1673  m2_loss_dice_2: 1.27  m2_loss_ce_3: 0.574  m2_loss_mask_3: 0.1656  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5364  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.5557  m2_loss_mask_5: 0.1683  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5439  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.5225  m2_loss_mask_7: 0.1672  m2_loss_dice_7: 1.213  m2_loss_ce_8: 0.5454  m2_loss_mask_8: 0.166  m2_loss_dice_8: 1.219  com_loss_ce: 1.532  com_loss_mask: 0.6936  com_loss_dice: 0.959    time: 1.4612  last_time: 1.5204  data_time: 0.2214  last_data_time: 0.0462   lr: 0.0001  max_mem: 34667M
[08/19 16:47:41] d2.utils.events INFO:  eta: 0:23:04  iter: 39  total_loss: 44.3  m1_loss_ce: 0.5474  m1_loss_mask: 0.1652  m1_loss_dice: 1.245  m1_loss_ce_0: 0.6382  m1_loss_mask_0: 0.2067  m1_loss_dice_0: 1.41  m1_loss_ce_1: 0.6852  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.408  m1_loss_ce_2: 0.6603  m1_loss_mask_2: 0.1758  m1_loss_dice_2: 1.338  m1_loss_ce_3: 0.5938  m1_loss_mask_3: 0.1681  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.59  m1_loss_mask_4: 0.1718  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.5605  m1_loss_mask_5: 0.1683  m1_loss_dice_5: 1.288  m1_loss_ce_6: 0.5569  m1_loss_mask_6: 0.1684  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.5406  m1_loss_mask_7: 0.1658  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.5283  m1_loss_mask_8: 0.1663  m1_loss_dice_8: 1.222  m2_loss_ce: 0.5407  m2_loss_mask: 0.169  m2_loss_dice: 1.194  m2_loss_ce_0: 0.6561  m2_loss_mask_0: 0.1952  m2_loss_dice_0: 1.402  m2_loss_ce_1: 0.6783  m2_loss_mask_1: 0.1792  m2_loss_dice_1: 1.357  m2_loss_ce_2: 0.6531  m2_loss_mask_2: 0.1734  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5897  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5863  m2_loss_mask_4: 0.172  m2_loss_dice_4: 1.219  m2_loss_ce_5: 0.579  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.5681  m2_loss_mask_6: 0.1678  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5438  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.195  m2_loss_ce_8: 0.5348  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.221  com_loss_ce: 1.539  com_loss_mask: 0.6936  com_loss_dice: 0.9534    time: 1.4584  last_time: 1.4808  data_time: 0.0506  last_data_time: 0.0471   lr: 0.0001  max_mem: 34667M
[08/19 16:48:10] d2.utils.events INFO:  eta: 0:22:44  iter: 59  total_loss: 41.95  m1_loss_ce: 0.5302  m1_loss_mask: 0.168  m1_loss_dice: 1.165  m1_loss_ce_0: 0.6227  m1_loss_mask_0: 0.1861  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.6938  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.6413  m1_loss_mask_2: 0.1736  m1_loss_dice_2: 1.224  m1_loss_ce_3: 0.5653  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.175  m1_loss_ce_4: 0.5542  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.5283  m1_loss_mask_5: 0.1705  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.5046  m1_loss_mask_6: 0.1693  m1_loss_dice_6: 1.176  m1_loss_ce_7: 0.504  m1_loss_mask_7: 0.1702  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4812  m1_loss_mask_8: 0.1689  m1_loss_dice_8: 1.158  m2_loss_ce: 0.5179  m2_loss_mask: 0.1618  m2_loss_dice: 1.154  m2_loss_ce_0: 0.6105  m2_loss_mask_0: 0.1815  m2_loss_dice_0: 1.355  m2_loss_ce_1: 0.6739  m2_loss_mask_1: 0.171  m2_loss_dice_1: 1.29  m2_loss_ce_2: 0.6257  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.236  m2_loss_ce_3: 0.5652  m2_loss_mask_3: 0.168  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.5424  m2_loss_mask_4: 0.1662  m2_loss_dice_4: 1.177  m2_loss_ce_5: 0.5617  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.5208  m2_loss_mask_6: 0.1624  m2_loss_dice_6: 1.16  m2_loss_ce_7: 0.5241  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.4919  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.177  com_loss_ce: 1.532  com_loss_mask: 0.6936  com_loss_dice: 0.9539    time: 1.4560  last_time: 1.4133  data_time: 0.0388  last_data_time: 0.0392   lr: 0.0001  max_mem: 34667M
[08/19 16:48:40] d2.utils.events INFO:  eta: 0:22:15  iter: 79  total_loss: 43.63  m1_loss_ce: 0.507  m1_loss_mask: 0.1674  m1_loss_dice: 1.251  m1_loss_ce_0: 0.6091  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.516  m1_loss_ce_1: 0.6701  m1_loss_mask_1: 0.1829  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.6369  m1_loss_mask_2: 0.1824  m1_loss_dice_2: 1.346  m1_loss_ce_3: 0.5689  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.5695  m1_loss_mask_4: 0.1696  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5323  m1_loss_mask_5: 0.1707  m1_loss_dice_5: 1.276  m1_loss_ce_6: 0.5189  m1_loss_mask_6: 0.174  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.5201  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.262  m1_loss_ce_8: 0.5096  m1_loss_mask_8: 0.1709  m1_loss_dice_8: 1.28  m2_loss_ce: 0.5109  m2_loss_mask: 0.1649  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6079  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.515  m2_loss_ce_1: 0.6809  m2_loss_mask_1: 0.1749  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.6111  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.362  m2_loss_ce_3: 0.5784  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5261  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5148  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.5137  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5202  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5052  m2_loss_mask_8: 0.1637  m2_loss_dice_8: 1.255  com_loss_ce: 1.55  com_loss_mask: 0.6936  com_loss_dice: 0.9588    time: 1.4570  last_time: 1.4845  data_time: 0.0419  last_data_time: 0.0406   lr: 0.0001  max_mem: 34752M
[08/19 16:49:09] d2.utils.events INFO:  eta: 0:21:47  iter: 99  total_loss: 44.52  m1_loss_ce: 0.5187  m1_loss_mask: 0.1705  m1_loss_dice: 1.265  m1_loss_ce_0: 0.6263  m1_loss_mask_0: 0.1981  m1_loss_dice_0: 1.501  m1_loss_ce_1: 0.6634  m1_loss_mask_1: 0.1899  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.6432  m1_loss_mask_2: 0.1782  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.6021  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.291  m1_loss_ce_4: 0.5505  m1_loss_mask_4: 0.1754  m1_loss_dice_4: 1.306  m1_loss_ce_5: 0.5385  m1_loss_mask_5: 0.1727  m1_loss_dice_5: 1.296  m1_loss_ce_6: 0.5155  m1_loss_mask_6: 0.1729  m1_loss_dice_6: 1.288  m1_loss_ce_7: 0.5378  m1_loss_mask_7: 0.1733  m1_loss_dice_7: 1.274  m1_loss_ce_8: 0.5464  m1_loss_mask_8: 0.1727  m1_loss_dice_8: 1.272  m2_loss_ce: 0.5442  m2_loss_mask: 0.1671  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6385  m2_loss_mask_0: 0.204  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6863  m2_loss_mask_1: 0.1813  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.6306  m2_loss_mask_2: 0.176  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5916  m2_loss_mask_3: 0.1696  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5563  m2_loss_mask_4: 0.1707  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5776  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5546  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.5589  m2_loss_mask_7: 0.1678  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.54  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.244  com_loss_ce: 1.552  com_loss_mask: 0.6936  com_loss_dice: 0.9568    time: 1.4580  last_time: 1.4066  data_time: 0.0415  last_data_time: 0.0505   lr: 0.0001  max_mem: 35212M
[08/19 16:49:39] d2.utils.events INFO:  eta: 0:21:18  iter: 119  total_loss: 44.49  m1_loss_ce: 0.5417  m1_loss_mask: 0.1638  m1_loss_dice: 1.246  m1_loss_ce_0: 0.646  m1_loss_mask_0: 0.1854  m1_loss_dice_0: 1.507  m1_loss_ce_1: 0.6846  m1_loss_mask_1: 0.1796  m1_loss_dice_1: 1.387  m1_loss_ce_2: 0.6382  m1_loss_mask_2: 0.1725  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5773  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5331  m1_loss_mask_4: 0.1692  m1_loss_dice_4: 1.292  m1_loss_ce_5: 0.5364  m1_loss_mask_5: 0.1669  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5475  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.278  m1_loss_ce_7: 0.5274  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.292  m1_loss_ce_8: 0.5219  m1_loss_mask_8: 0.1671  m1_loss_dice_8: 1.267  m2_loss_ce: 0.5031  m2_loss_mask: 0.1665  m2_loss_dice: 1.259  m2_loss_ce_0: 0.631  m2_loss_mask_0: 0.1866  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6633  m2_loss_mask_1: 0.1743  m2_loss_dice_1: 1.439  m2_loss_ce_2: 0.6358  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5705  m2_loss_mask_3: 0.1681  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.5426  m2_loss_mask_4: 0.1693  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.551  m2_loss_mask_5: 0.1703  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5508  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5247  m2_loss_mask_7: 0.1655  m2_loss_dice_7: 1.281  m2_loss_ce_8: 0.536  m2_loss_mask_8: 0.1638  m2_loss_dice_8: 1.256  com_loss_ce: 1.545  com_loss_mask: 0.6936  com_loss_dice: 0.9569    time: 1.4602  last_time: 1.3990  data_time: 0.0429  last_data_time: 0.0355   lr: 0.0001  max_mem: 35212M
[08/19 16:50:08] d2.utils.events INFO:  eta: 0:20:50  iter: 139  total_loss: 43.87  m1_loss_ce: 0.5181  m1_loss_mask: 0.1528  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6149  m1_loss_mask_0: 0.1864  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.6587  m1_loss_mask_1: 0.1701  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.5825  m1_loss_mask_2: 0.1601  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.5203  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5097  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.226  m1_loss_ce_5: 0.5348  m1_loss_mask_5: 0.1532  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.4874  m1_loss_mask_6: 0.1523  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4878  m1_loss_mask_7: 0.1537  m1_loss_dice_7: 1.227  m1_loss_ce_8: 0.5248  m1_loss_mask_8: 0.1534  m1_loss_dice_8: 1.19  m2_loss_ce: 0.481  m2_loss_mask: 0.1582  m2_loss_dice: 1.207  m2_loss_ce_0: 0.5874  m2_loss_mask_0: 0.1807  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6533  m2_loss_mask_1: 0.1674  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.5984  m2_loss_mask_2: 0.1586  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5425  m2_loss_mask_3: 0.1588  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.5088  m2_loss_mask_4: 0.16  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.4674  m2_loss_mask_5: 0.1614  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.4928  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.4873  m2_loss_mask_7: 0.1592  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.4443  m2_loss_mask_8: 0.1582  m2_loss_dice_8: 1.285  com_loss_ce: 1.545  com_loss_mask: 0.6936  com_loss_dice: 0.957    time: 1.4620  last_time: 1.4327  data_time: 0.0439  last_data_time: 0.0407   lr: 0.0001  max_mem: 35454M
[08/19 16:50:37] d2.utils.events INFO:  eta: 0:20:21  iter: 159  total_loss: 44.91  m1_loss_ce: 0.5779  m1_loss_mask: 0.1765  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6752  m1_loss_mask_0: 0.1995  m1_loss_dice_0: 1.525  m1_loss_ce_1: 0.7122  m1_loss_mask_1: 0.1891  m1_loss_dice_1: 1.423  m1_loss_ce_2: 0.6811  m1_loss_mask_2: 0.18  m1_loss_dice_2: 1.377  m1_loss_ce_3: 0.6095  m1_loss_mask_3: 0.1777  m1_loss_dice_3: 1.294  m1_loss_ce_4: 0.5576  m1_loss_mask_4: 0.1789  m1_loss_dice_4: 1.316  m1_loss_ce_5: 0.5871  m1_loss_mask_5: 0.1803  m1_loss_dice_5: 1.31  m1_loss_ce_6: 0.573  m1_loss_mask_6: 0.1773  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.5824  m1_loss_mask_7: 0.1782  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.5369  m1_loss_mask_8: 0.1787  m1_loss_dice_8: 1.241  m2_loss_ce: 0.5328  m2_loss_mask: 0.1697  m2_loss_dice: 1.276  m2_loss_ce_0: 0.6289  m2_loss_mask_0: 0.1987  m2_loss_dice_0: 1.561  m2_loss_ce_1: 0.7253  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.462  m2_loss_ce_2: 0.6597  m2_loss_mask_2: 0.1741  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.6079  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5682  m2_loss_mask_4: 0.1724  m2_loss_dice_4: 1.288  m2_loss_ce_5: 0.5617  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.5603  m2_loss_mask_6: 0.1718  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.567  m2_loss_mask_7: 0.1716  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.5491  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.275  com_loss_ce: 1.562  com_loss_mask: 0.6936  com_loss_dice: 0.9591    time: 1.4609  last_time: 1.4894  data_time: 0.0428  last_data_time: 0.0430   lr: 0.0001  max_mem: 35454M
[08/19 16:51:07] d2.utils.events INFO:  eta: 0:19:55  iter: 179  total_loss: 44.72  m1_loss_ce: 0.5612  m1_loss_mask: 0.1791  m1_loss_dice: 1.227  m1_loss_ce_0: 0.6669  m1_loss_mask_0: 0.2044  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.7181  m1_loss_mask_1: 0.1884  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.6454  m1_loss_mask_2: 0.1834  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.6186  m1_loss_mask_3: 0.182  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.6061  m1_loss_mask_4: 0.1812  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.6036  m1_loss_mask_5: 0.1811  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5686  m1_loss_mask_6: 0.1804  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.5675  m1_loss_mask_7: 0.1809  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5715  m1_loss_mask_8: 0.178  m1_loss_dice_8: 1.237  m2_loss_ce: 0.566  m2_loss_mask: 0.1778  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6594  m2_loss_mask_0: 0.2072  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.6752  m2_loss_mask_1: 0.1902  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.6418  m2_loss_mask_2: 0.1828  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5837  m2_loss_mask_3: 0.1817  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5605  m2_loss_mask_4: 0.1811  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.5652  m2_loss_mask_5: 0.181  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.5268  m2_loss_mask_6: 0.1811  m2_loss_dice_6: 1.289  m2_loss_ce_7: 0.5437  m2_loss_mask_7: 0.1787  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.5527  m2_loss_mask_8: 0.1769  m2_loss_dice_8: 1.214  com_loss_ce: 1.55  com_loss_mask: 0.6936  com_loss_dice: 0.9557    time: 1.4606  last_time: 1.4013  data_time: 0.0429  last_data_time: 0.0413   lr: 0.0001  max_mem: 35454M
[08/19 16:51:36] d2.utils.events INFO:  eta: 0:19:23  iter: 199  total_loss: 45.73  m1_loss_ce: 0.5705  m1_loss_mask: 0.1724  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6937  m1_loss_mask_0: 0.1991  m1_loss_dice_0: 1.496  m1_loss_ce_1: 0.7819  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.6801  m1_loss_mask_2: 0.1763  m1_loss_dice_2: 1.33  m1_loss_ce_3: 0.6018  m1_loss_mask_3: 0.1774  m1_loss_dice_3: 1.305  m1_loss_ce_4: 0.5788  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.316  m1_loss_ce_5: 0.5712  m1_loss_mask_5: 0.1712  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.5919  m1_loss_mask_6: 0.1737  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.5932  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.262  m1_loss_ce_8: 0.5883  m1_loss_mask_8: 0.1714  m1_loss_dice_8: 1.26  m2_loss_ce: 0.5494  m2_loss_mask: 0.1591  m2_loss_dice: 1.253  m2_loss_ce_0: 0.647  m2_loss_mask_0: 0.1859  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.704  m2_loss_mask_1: 0.1737  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.6324  m2_loss_mask_2: 0.1668  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.581  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5753  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.314  m2_loss_ce_5: 0.5652  m2_loss_mask_5: 0.1634  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.5761  m2_loss_mask_6: 0.1625  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5637  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.5323  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.237  com_loss_ce: 1.564  com_loss_mask: 0.6936  com_loss_dice: 0.9587    time: 1.4608  last_time: 1.5109  data_time: 0.0417  last_data_time: 0.0410   lr: 0.0001  max_mem: 35651M
[08/19 16:52:06] d2.utils.events INFO:  eta: 0:18:55  iter: 219  total_loss: 44.29  m1_loss_ce: 0.5356  m1_loss_mask: 0.168  m1_loss_dice: 1.259  m1_loss_ce_0: 0.6254  m1_loss_mask_0: 0.2066  m1_loss_dice_0: 1.436  m1_loss_ce_1: 0.6898  m1_loss_mask_1: 0.1883  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.5983  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.326  m1_loss_ce_3: 0.5707  m1_loss_mask_3: 0.1784  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5535  m1_loss_mask_4: 0.1757  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5467  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5523  m1_loss_mask_6: 0.1694  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.5362  m1_loss_mask_7: 0.1674  m1_loss_dice_7: 1.263  m1_loss_ce_8: 0.531  m1_loss_mask_8: 0.1697  m1_loss_dice_8: 1.255  m2_loss_ce: 0.526  m2_loss_mask: 0.1629  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6481  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6594  m2_loss_mask_1: 0.1809  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.6284  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5611  m2_loss_mask_3: 0.1643  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5521  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.543  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.5181  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.545  m2_loss_mask_7: 0.1643  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.5264  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.274  com_loss_ce: 1.55  com_loss_mask: 0.6936  com_loss_dice: 0.9546    time: 1.4608  last_time: 1.4605  data_time: 0.0415  last_data_time: 0.0438   lr: 0.0001  max_mem: 35651M
[08/19 16:52:35] d2.utils.events INFO:  eta: 0:18:24  iter: 239  total_loss: 42.86  m1_loss_ce: 0.4991  m1_loss_mask: 0.1711  m1_loss_dice: 1.204  m1_loss_ce_0: 0.6253  m1_loss_mask_0: 0.207  m1_loss_dice_0: 1.395  m1_loss_ce_1: 0.6644  m1_loss_mask_1: 0.1893  m1_loss_dice_1: 1.317  m1_loss_ce_2: 0.5994  m1_loss_mask_2: 0.1781  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.5376  m1_loss_mask_3: 0.1767  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.5231  m1_loss_mask_4: 0.1751  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.5104  m1_loss_mask_5: 0.1748  m1_loss_dice_5: 1.196  m1_loss_ce_6: 0.5332  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.5112  m1_loss_mask_7: 0.1729  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.5174  m1_loss_mask_8: 0.1723  m1_loss_dice_8: 1.2  m2_loss_ce: 0.5096  m2_loss_mask: 0.177  m2_loss_dice: 1.17  m2_loss_ce_0: 0.6107  m2_loss_mask_0: 0.2072  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6392  m2_loss_mask_1: 0.1907  m2_loss_dice_1: 1.31  m2_loss_ce_2: 0.6014  m2_loss_mask_2: 0.1785  m2_loss_dice_2: 1.249  m2_loss_ce_3: 0.5762  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.5563  m2_loss_mask_4: 0.1787  m2_loss_dice_4: 1.195  m2_loss_ce_5: 0.5293  m2_loss_mask_5: 0.1796  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.5119  m2_loss_mask_6: 0.1784  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.5124  m2_loss_mask_7: 0.1781  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.5229  m2_loss_mask_8: 0.1776  m2_loss_dice_8: 1.173  com_loss_ce: 1.566  com_loss_mask: 0.6936  com_loss_dice: 0.955    time: 1.4593  last_time: 1.4506  data_time: 0.0395  last_data_time: 0.0357   lr: 0.0001  max_mem: 35651M
[08/19 16:53:05] d2.utils.events INFO:  eta: 0:17:59  iter: 259  total_loss: 46.03  m1_loss_ce: 0.5623  m1_loss_mask: 0.163  m1_loss_dice: 1.296  m1_loss_ce_0: 0.7201  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.529  m1_loss_ce_1: 0.7618  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.444  m1_loss_ce_2: 0.6718  m1_loss_mask_2: 0.1658  m1_loss_dice_2: 1.327  m1_loss_ce_3: 0.6327  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.308  m1_loss_ce_4: 0.5938  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.307  m1_loss_ce_5: 0.5983  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.5561  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.304  m1_loss_ce_7: 0.5682  m1_loss_mask_7: 0.164  m1_loss_dice_7: 1.282  m1_loss_ce_8: 0.5676  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.3  m2_loss_ce: 0.5342  m2_loss_mask: 0.1601  m2_loss_dice: 1.283  m2_loss_ce_0: 0.6472  m2_loss_mask_0: 0.1852  m2_loss_dice_0: 1.55  m2_loss_ce_1: 0.7413  m2_loss_mask_1: 0.1746  m2_loss_dice_1: 1.46  m2_loss_ce_2: 0.6641  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.644  m2_loss_mask_3: 0.1641  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.5737  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.343  m2_loss_ce_5: 0.6032  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5678  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.5276  m2_loss_mask_7: 0.1601  m2_loss_dice_7: 1.293  m2_loss_ce_8: 0.5533  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.288  com_loss_ce: 1.579  com_loss_mask: 0.6936  com_loss_dice: 0.9593    time: 1.4620  last_time: 1.4828  data_time: 0.0458  last_data_time: 0.0366   lr: 0.0001  max_mem: 35791M
[08/19 16:53:34] d2.utils.events INFO:  eta: 0:17:30  iter: 279  total_loss: 42.42  m1_loss_ce: 0.5597  m1_loss_mask: 0.1662  m1_loss_dice: 1.163  m1_loss_ce_0: 0.6299  m1_loss_mask_0: 0.1864  m1_loss_dice_0: 1.332  m1_loss_ce_1: 0.673  m1_loss_mask_1: 0.1739  m1_loss_dice_1: 1.279  m1_loss_ce_2: 0.6135  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.206  m1_loss_ce_3: 0.5577  m1_loss_mask_3: 0.1637  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.5834  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.532  m1_loss_mask_5: 0.1658  m1_loss_dice_5: 1.165  m1_loss_ce_6: 0.5165  m1_loss_mask_6: 0.1658  m1_loss_dice_6: 1.144  m1_loss_ce_7: 0.5078  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.5121  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.151  m2_loss_ce: 0.5394  m2_loss_mask: 0.1656  m2_loss_dice: 1.178  m2_loss_ce_0: 0.5982  m2_loss_mask_0: 0.1948  m2_loss_dice_0: 1.377  m2_loss_ce_1: 0.6692  m2_loss_mask_1: 0.1734  m2_loss_dice_1: 1.305  m2_loss_ce_2: 0.6266  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.244  m2_loss_ce_3: 0.5469  m2_loss_mask_3: 0.1653  m2_loss_dice_3: 1.186  m2_loss_ce_4: 0.5471  m2_loss_mask_4: 0.1684  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.5346  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.5066  m2_loss_mask_6: 0.1645  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.5243  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.158  m2_loss_ce_8: 0.5315  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.17  com_loss_ce: 1.565  com_loss_mask: 0.6936  com_loss_dice: 0.9552    time: 1.4619  last_time: 1.4624  data_time: 0.0419  last_data_time: 0.0423   lr: 0.0001  max_mem: 35791M
[08/19 16:54:03] d2.utils.events INFO:  eta: 0:17:00  iter: 299  total_loss: 43.29  m1_loss_ce: 0.5303  m1_loss_mask: 0.1603  m1_loss_dice: 1.21  m1_loss_ce_0: 0.6374  m1_loss_mask_0: 0.1932  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6885  m1_loss_mask_1: 0.174  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.6734  m1_loss_mask_2: 0.1682  m1_loss_dice_2: 1.268  m1_loss_ce_3: 0.5805  m1_loss_mask_3: 0.1679  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5679  m1_loss_mask_4: 0.1635  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.5743  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.5599  m1_loss_mask_6: 0.1602  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.5461  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5202  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.234  m2_loss_ce: 0.5371  m2_loss_mask: 0.1644  m2_loss_dice: 1.254  m2_loss_ce_0: 0.6202  m2_loss_mask_0: 0.1867  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.678  m2_loss_mask_1: 0.1731  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.611  m2_loss_mask_2: 0.1694  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5805  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5688  m2_loss_mask_4: 0.1657  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.5885  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.5595  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.5717  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.5369  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.208  com_loss_ce: 1.577  com_loss_mask: 0.6936  com_loss_dice: 0.957    time: 1.4623  last_time: 1.5109  data_time: 0.0420  last_data_time: 0.0354   lr: 0.0001  max_mem: 35791M
[08/19 16:54:33] d2.utils.events INFO:  eta: 0:16:31  iter: 319  total_loss: 43.97  m1_loss_ce: 0.5539  m1_loss_mask: 0.1692  m1_loss_dice: 1.255  m1_loss_ce_0: 0.5899  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.461  m1_loss_ce_1: 0.6854  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.6231  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.6008  m1_loss_mask_3: 0.1747  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.5659  m1_loss_mask_4: 0.1744  m1_loss_dice_4: 1.308  m1_loss_ce_5: 0.5635  m1_loss_mask_5: 0.1722  m1_loss_dice_5: 1.298  m1_loss_ce_6: 0.5559  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.5299  m1_loss_mask_7: 0.173  m1_loss_dice_7: 1.278  m1_loss_ce_8: 0.5195  m1_loss_mask_8: 0.1671  m1_loss_dice_8: 1.271  m2_loss_ce: 0.5128  m2_loss_mask: 0.1666  m2_loss_dice: 1.279  m2_loss_ce_0: 0.6204  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6592  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.6279  m2_loss_mask_2: 0.1737  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.6002  m2_loss_mask_3: 0.169  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5452  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5532  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.5171  m2_loss_mask_6: 0.1688  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.5425  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5525  m2_loss_mask_8: 0.1676  m2_loss_dice_8: 1.257  com_loss_ce: 1.567  com_loss_mask: 0.6936  com_loss_dice: 0.9552    time: 1.4624  last_time: 1.4723  data_time: 0.0412  last_data_time: 0.0367   lr: 0.0001  max_mem: 35993M
[08/19 16:55:02] d2.utils.events INFO:  eta: 0:16:02  iter: 339  total_loss: 43.39  m1_loss_ce: 0.5692  m1_loss_mask: 0.1574  m1_loss_dice: 1.222  m1_loss_ce_0: 0.6416  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.7182  m1_loss_mask_1: 0.1678  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.6613  m1_loss_mask_2: 0.1576  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.6083  m1_loss_mask_3: 0.1577  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.5688  m1_loss_mask_4: 0.1593  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5533  m1_loss_mask_5: 0.1584  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.543  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.199  m1_loss_ce_7: 0.5131  m1_loss_mask_7: 0.1565  m1_loss_dice_7: 1.178  m1_loss_ce_8: 0.5242  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.207  m2_loss_ce: 0.5478  m2_loss_mask: 0.1532  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6583  m2_loss_mask_0: 0.186  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6886  m2_loss_mask_1: 0.1693  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.6496  m2_loss_mask_2: 0.1598  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5931  m2_loss_mask_3: 0.1593  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.547  m2_loss_mask_4: 0.1574  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.5711  m2_loss_mask_5: 0.1599  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.5404  m2_loss_mask_6: 0.1596  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.5408  m2_loss_mask_7: 0.158  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.5334  m2_loss_mask_8: 0.1551  m2_loss_dice_8: 1.227  com_loss_ce: 1.564  com_loss_mask: 0.6936  com_loss_dice: 0.9543    time: 1.4614  last_time: 1.5149  data_time: 0.0402  last_data_time: 0.0524   lr: 0.0001  max_mem: 35993M
[08/19 16:55:31] d2.utils.events INFO:  eta: 0:15:33  iter: 359  total_loss: 45.25  m1_loss_ce: 0.5607  m1_loss_mask: 0.1717  m1_loss_dice: 1.25  m1_loss_ce_0: 0.6271  m1_loss_mask_0: 0.2016  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.7023  m1_loss_mask_1: 0.1808  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.6546  m1_loss_mask_2: 0.1772  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.5834  m1_loss_mask_3: 0.1771  m1_loss_dice_3: 1.313  m1_loss_ce_4: 0.5795  m1_loss_mask_4: 0.1772  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.5529  m1_loss_mask_5: 0.1736  m1_loss_dice_5: 1.276  m1_loss_ce_6: 0.549  m1_loss_mask_6: 0.1739  m1_loss_dice_6: 1.259  m1_loss_ce_7: 0.5568  m1_loss_mask_7: 0.1733  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.5547  m1_loss_mask_8: 0.1737  m1_loss_dice_8: 1.277  m2_loss_ce: 0.5613  m2_loss_mask: 0.1688  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6506  m2_loss_mask_0: 0.2039  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.7204  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.6354  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.578  m2_loss_mask_3: 0.1742  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.561  m2_loss_mask_4: 0.1717  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5633  m2_loss_mask_5: 0.1698  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5574  m2_loss_mask_6: 0.1704  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.5594  m2_loss_mask_7: 0.168  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.5507  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.258  com_loss_ce: 1.563  com_loss_mask: 0.6936  com_loss_dice: 0.9572    time: 1.4607  last_time: 1.4528  data_time: 0.0403  last_data_time: 0.0357   lr: 0.0001  max_mem: 35993M
[08/19 16:55:59] d2.utils.events INFO:  eta: 0:15:01  iter: 379  total_loss: 43.92  m1_loss_ce: 0.5555  m1_loss_mask: 0.1626  m1_loss_dice: 1.194  m1_loss_ce_0: 0.6535  m1_loss_mask_0: 0.1955  m1_loss_dice_0: 1.361  m1_loss_ce_1: 0.7403  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.6661  m1_loss_mask_2: 0.1691  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5957  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.6246  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.578  m1_loss_mask_5: 0.1651  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.5644  m1_loss_mask_6: 0.1662  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.5447  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.57  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.183  m2_loss_ce: 0.5407  m2_loss_mask: 0.1621  m2_loss_dice: 1.176  m2_loss_ce_0: 0.6713  m2_loss_mask_0: 0.1961  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.7006  m2_loss_mask_1: 0.175  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.6778  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.6145  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.5849  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.546  m2_loss_mask_5: 0.1657  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.6023  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.5587  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.5862  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.209  com_loss_ce: 1.565  com_loss_mask: 0.6936  com_loss_dice: 0.9547    time: 1.4581  last_time: 1.3468  data_time: 0.0401  last_data_time: 0.0468   lr: 0.0001  max_mem: 35993M
[08/19 16:56:28] d2.utils.events INFO:  eta: 0:14:31  iter: 399  total_loss: 44.35  m1_loss_ce: 0.5555  m1_loss_mask: 0.1741  m1_loss_dice: 1.205  m1_loss_ce_0: 0.6014  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.475  m1_loss_ce_1: 0.6855  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.638  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5643  m1_loss_mask_3: 0.1753  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.5839  m1_loss_mask_4: 0.1713  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.5512  m1_loss_mask_5: 0.1745  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5512  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.5391  m1_loss_mask_7: 0.1737  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.5484  m1_loss_mask_8: 0.1724  m1_loss_dice_8: 1.241  m2_loss_ce: 0.5799  m2_loss_mask: 0.1726  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6373  m2_loss_mask_0: 0.201  m2_loss_dice_0: 1.432  m2_loss_ce_1: 0.7092  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.612  m2_loss_mask_2: 0.1782  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.6086  m2_loss_mask_3: 0.1715  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5571  m2_loss_mask_4: 0.1683  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.5499  m2_loss_mask_5: 0.1718  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.5583  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.5345  m2_loss_mask_7: 0.1724  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.5173  m2_loss_mask_8: 0.1707  m2_loss_dice_8: 1.223  com_loss_ce: 1.573  com_loss_mask: 0.6936  com_loss_dice: 0.9536    time: 1.4556  last_time: 1.4072  data_time: 0.0407  last_data_time: 0.0404   lr: 0.0001  max_mem: 35993M
[08/19 16:56:57] d2.utils.events INFO:  eta: 0:14:01  iter: 419  total_loss: 44.39  m1_loss_ce: 0.5201  m1_loss_mask: 0.1692  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6431  m1_loss_mask_0: 0.1986  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.7095  m1_loss_mask_1: 0.1876  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.6575  m1_loss_mask_2: 0.1732  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.5944  m1_loss_mask_3: 0.1736  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.5255  m1_loss_mask_4: 0.1751  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5548  m1_loss_mask_5: 0.1719  m1_loss_dice_5: 1.256  m1_loss_ce_6: 0.5523  m1_loss_mask_6: 0.1729  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.5278  m1_loss_mask_7: 0.1715  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.5367  m1_loss_mask_8: 0.1695  m1_loss_dice_8: 1.207  m2_loss_ce: 0.5664  m2_loss_mask: 0.1672  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6319  m2_loss_mask_0: 0.2014  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.699  m2_loss_mask_1: 0.1878  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.665  m2_loss_mask_2: 0.1735  m2_loss_dice_2: 1.344  m2_loss_ce_3: 0.5939  m2_loss_mask_3: 0.1719  m2_loss_dice_3: 1.324  m2_loss_ce_4: 0.5936  m2_loss_mask_4: 0.1689  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5805  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.297  m2_loss_ce_6: 0.5387  m2_loss_mask_6: 0.1691  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5642  m2_loss_mask_7: 0.1658  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.5369  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.271  com_loss_ce: 1.574  com_loss_mask: 0.6936  com_loss_dice: 0.958    time: 1.4553  last_time: 1.4961  data_time: 0.0417  last_data_time: 0.0341   lr: 0.0001  max_mem: 35993M
[08/19 16:57:26] d2.utils.events INFO:  eta: 0:13:32  iter: 439  total_loss: 44.74  m1_loss_ce: 0.5255  m1_loss_mask: 0.1553  m1_loss_dice: 1.23  m1_loss_ce_0: 0.6292  m1_loss_mask_0: 0.1891  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6834  m1_loss_mask_1: 0.165  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.6521  m1_loss_mask_2: 0.1606  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5889  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.5621  m1_loss_mask_4: 0.1568  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.5757  m1_loss_mask_5: 0.1567  m1_loss_dice_5: 1.268  m1_loss_ce_6: 0.5439  m1_loss_mask_6: 0.1568  m1_loss_dice_6: 1.236  m1_loss_ce_7: 0.5244  m1_loss_mask_7: 0.155  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.5463  m1_loss_mask_8: 0.1539  m1_loss_dice_8: 1.251  m2_loss_ce: 0.5345  m2_loss_mask: 0.1599  m2_loss_dice: 1.25  m2_loss_ce_0: 0.6333  m2_loss_mask_0: 0.1919  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6935  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.6414  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.6069  m2_loss_mask_3: 0.1639  m2_loss_dice_3: 1.323  m2_loss_ce_4: 0.5775  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.556  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.305  m2_loss_ce_6: 0.574  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.294  m2_loss_ce_7: 0.5527  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.537  m2_loss_mask_8: 0.1619  m2_loss_dice_8: 1.303  com_loss_ce: 1.558  com_loss_mask: 0.6936  com_loss_dice: 0.957    time: 1.4540  last_time: 1.3794  data_time: 0.0407  last_data_time: 0.0407   lr: 0.0001  max_mem: 35993M
[08/19 16:57:55] d2.utils.events INFO:  eta: 0:13:03  iter: 459  total_loss: 43.58  m1_loss_ce: 0.5058  m1_loss_mask: 0.1634  m1_loss_dice: 1.191  m1_loss_ce_0: 0.6182  m1_loss_mask_0: 0.1872  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.6746  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.609  m1_loss_mask_2: 0.1732  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.5568  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.5505  m1_loss_mask_4: 0.1665  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.521  m1_loss_mask_5: 0.1659  m1_loss_dice_5: 1.264  m1_loss_ce_6: 0.5319  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5122  m1_loss_mask_7: 0.1679  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.5349  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.212  m2_loss_ce: 0.5351  m2_loss_mask: 0.1687  m2_loss_dice: 1.234  m2_loss_ce_0: 0.6383  m2_loss_mask_0: 0.1991  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.7009  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6363  m2_loss_mask_2: 0.1754  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5766  m2_loss_mask_3: 0.1761  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.543  m2_loss_mask_4: 0.1785  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5707  m2_loss_mask_5: 0.1759  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.5365  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5387  m2_loss_mask_7: 0.1688  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5329  m2_loss_mask_8: 0.1698  m2_loss_dice_8: 1.227  com_loss_ce: 1.566  com_loss_mask: 0.6936  com_loss_dice: 0.9562    time: 1.4536  last_time: 1.4951  data_time: 0.0413  last_data_time: 0.0468   lr: 0.0001  max_mem: 35993M
[08/19 16:58:23] d2.utils.events INFO:  eta: 0:12:33  iter: 479  total_loss: 45.21  m1_loss_ce: 0.5487  m1_loss_mask: 0.1878  m1_loss_dice: 1.226  m1_loss_ce_0: 0.662  m1_loss_mask_0: 0.2163  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.7174  m1_loss_mask_1: 0.2012  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.6266  m1_loss_mask_2: 0.1928  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.591  m1_loss_mask_3: 0.1944  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.5661  m1_loss_mask_4: 0.1903  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.5427  m1_loss_mask_5: 0.1882  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.541  m1_loss_mask_6: 0.1882  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.5579  m1_loss_mask_7: 0.1891  m1_loss_dice_7: 1.166  m1_loss_ce_8: 0.5631  m1_loss_mask_8: 0.189  m1_loss_dice_8: 1.169  m2_loss_ce: 0.5585  m2_loss_mask: 0.1841  m2_loss_dice: 1.214  m2_loss_ce_0: 0.6606  m2_loss_mask_0: 0.2081  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6845  m2_loss_mask_1: 0.1952  m2_loss_dice_1: 1.341  m2_loss_ce_2: 0.6582  m2_loss_mask_2: 0.1855  m2_loss_dice_2: 1.285  m2_loss_ce_3: 0.6251  m2_loss_mask_3: 0.1855  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.6017  m2_loss_mask_4: 0.1886  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.5639  m2_loss_mask_5: 0.1873  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5735  m2_loss_mask_6: 0.1856  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.5477  m2_loss_mask_7: 0.1836  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.5428  m2_loss_mask_8: 0.1848  m2_loss_dice_8: 1.231  com_loss_ce: 1.581  com_loss_mask: 0.6936  com_loss_dice: 0.9552    time: 1.4516  last_time: 1.4015  data_time: 0.0402  last_data_time: 0.0342   lr: 0.0001  max_mem: 35993M
[08/19 16:58:52] d2.utils.events INFO:  eta: 0:12:04  iter: 499  total_loss: 43.42  m1_loss_ce: 0.5071  m1_loss_mask: 0.1716  m1_loss_dice: 1.216  m1_loss_ce_0: 0.588  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.6666  m1_loss_mask_1: 0.1808  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.6463  m1_loss_mask_2: 0.1808  m1_loss_dice_2: 1.234  m1_loss_ce_3: 0.5752  m1_loss_mask_3: 0.177  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.502  m1_loss_mask_4: 0.1791  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.5258  m1_loss_mask_5: 0.1754  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.5065  m1_loss_mask_6: 0.1722  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.495  m1_loss_mask_7: 0.1736  m1_loss_dice_7: 1.199  m1_loss_ce_8: 0.4937  m1_loss_mask_8: 0.1721  m1_loss_dice_8: 1.16  m2_loss_ce: 0.4971  m2_loss_mask: 0.1722  m2_loss_dice: 1.185  m2_loss_ce_0: 0.6004  m2_loss_mask_0: 0.2087  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6587  m2_loss_mask_1: 0.1943  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6048  m2_loss_mask_2: 0.1796  m2_loss_dice_2: 1.26  m2_loss_ce_3: 0.5433  m2_loss_mask_3: 0.1812  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.5311  m2_loss_mask_4: 0.1819  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5478  m2_loss_mask_5: 0.1796  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.5275  m2_loss_mask_6: 0.176  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.4919  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.5147  m2_loss_mask_8: 0.1772  m2_loss_dice_8: 1.209  com_loss_ce: 1.563  com_loss_mask: 0.6936  com_loss_dice: 0.9548    time: 1.4514  last_time: 1.4361  data_time: 0.0401  last_data_time: 0.0438   lr: 0.0001  max_mem: 35993M
[08/19 16:59:21] d2.utils.events INFO:  eta: 0:11:35  iter: 519  total_loss: 41.52  m1_loss_ce: 0.4907  m1_loss_mask: 0.1662  m1_loss_dice: 1.117  m1_loss_ce_0: 0.6307  m1_loss_mask_0: 0.1927  m1_loss_dice_0: 1.362  m1_loss_ce_1: 0.6701  m1_loss_mask_1: 0.1823  m1_loss_dice_1: 1.24  m1_loss_ce_2: 0.6316  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.198  m1_loss_ce_3: 0.5807  m1_loss_mask_3: 0.1714  m1_loss_dice_3: 1.148  m1_loss_ce_4: 0.5758  m1_loss_mask_4: 0.1699  m1_loss_dice_4: 1.155  m1_loss_ce_5: 0.5668  m1_loss_mask_5: 0.1683  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.5096  m1_loss_mask_6: 0.1704  m1_loss_dice_6: 1.152  m1_loss_ce_7: 0.5304  m1_loss_mask_7: 0.1709  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.5198  m1_loss_mask_8: 0.1689  m1_loss_dice_8: 1.128  m2_loss_ce: 0.5367  m2_loss_mask: 0.1672  m2_loss_dice: 1.127  m2_loss_ce_0: 0.6152  m2_loss_mask_0: 0.2079  m2_loss_dice_0: 1.372  m2_loss_ce_1: 0.6669  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.273  m2_loss_ce_2: 0.6016  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.204  m2_loss_ce_3: 0.5823  m2_loss_mask_3: 0.1684  m2_loss_dice_3: 1.166  m2_loss_ce_4: 0.5829  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.157  m2_loss_ce_5: 0.5466  m2_loss_mask_5: 0.1699  m2_loss_dice_5: 1.156  m2_loss_ce_6: 0.5378  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.146  m2_loss_ce_7: 0.5146  m2_loss_mask_7: 0.1679  m2_loss_dice_7: 1.114  m2_loss_ce_8: 0.5084  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.142  com_loss_ce: 1.587  com_loss_mask: 0.6936  com_loss_dice: 0.9538    time: 1.4505  last_time: 1.4223  data_time: 0.0396  last_data_time: 0.0377   lr: 0.0001  max_mem: 35993M
[08/19 16:59:49] d2.utils.events INFO:  eta: 0:11:05  iter: 539  total_loss: 43.89  m1_loss_ce: 0.5444  m1_loss_mask: 0.1537  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6424  m1_loss_mask_0: 0.1834  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.7147  m1_loss_mask_1: 0.1615  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.6842  m1_loss_mask_2: 0.1533  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.6072  m1_loss_mask_3: 0.1562  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5882  m1_loss_mask_4: 0.1555  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.5531  m1_loss_mask_5: 0.1563  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5412  m1_loss_mask_6: 0.1551  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.5324  m1_loss_mask_7: 0.1549  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.5239  m1_loss_mask_8: 0.1535  m1_loss_dice_8: 1.225  m2_loss_ce: 0.5733  m2_loss_mask: 0.156  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6453  m2_loss_mask_0: 0.1915  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.7068  m2_loss_mask_1: 0.1659  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6504  m2_loss_mask_2: 0.1579  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5927  m2_loss_mask_3: 0.1577  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5898  m2_loss_mask_4: 0.1581  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5837  m2_loss_mask_5: 0.1577  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.5509  m2_loss_mask_6: 0.158  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.5574  m2_loss_mask_7: 0.1571  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.5322  m2_loss_mask_8: 0.1568  m2_loss_dice_8: 1.219  com_loss_ce: 1.579  com_loss_mask: 0.6936  com_loss_dice: 0.9572    time: 1.4498  last_time: 1.5663  data_time: 0.0412  last_data_time: 0.0409   lr: 0.0001  max_mem: 35993M
[08/19 17:00:18] d2.utils.events INFO:  eta: 0:10:35  iter: 559  total_loss: 44.42  m1_loss_ce: 0.5265  m1_loss_mask: 0.1685  m1_loss_dice: 1.247  m1_loss_ce_0: 0.5741  m1_loss_mask_0: 0.1926  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.6337  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.6068  m1_loss_mask_2: 0.1743  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5547  m1_loss_mask_3: 0.1749  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.5925  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.5628  m1_loss_mask_5: 0.1719  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.5358  m1_loss_mask_6: 0.1722  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.5249  m1_loss_mask_7: 0.1721  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.533  m1_loss_mask_8: 0.1683  m1_loss_dice_8: 1.23  m2_loss_ce: 0.5297  m2_loss_mask: 0.1646  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6172  m2_loss_mask_0: 0.1955  m2_loss_dice_0: 1.506  m2_loss_ce_1: 0.672  m2_loss_mask_1: 0.1771  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.6449  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.5741  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5734  m2_loss_mask_4: 0.169  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5361  m2_loss_mask_5: 0.1683  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5469  m2_loss_mask_6: 0.1664  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.542  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5188  m2_loss_mask_8: 0.1665  m2_loss_dice_8: 1.225  com_loss_ce: 1.595  com_loss_mask: 0.6936  com_loss_dice: 0.9565    time: 1.4491  last_time: 1.4217  data_time: 0.0402  last_data_time: 0.0467   lr: 0.0001  max_mem: 35993M
[08/19 17:00:47] d2.utils.events INFO:  eta: 0:10:06  iter: 579  total_loss: 44.7  m1_loss_ce: 0.5557  m1_loss_mask: 0.1601  m1_loss_dice: 1.319  m1_loss_ce_0: 0.6534  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6677  m1_loss_mask_1: 0.1784  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.6078  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.368  m1_loss_ce_3: 0.5896  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.291  m1_loss_ce_4: 0.5912  m1_loss_mask_4: 0.1626  m1_loss_dice_4: 1.302  m1_loss_ce_5: 0.5807  m1_loss_mask_5: 0.1575  m1_loss_dice_5: 1.274  m1_loss_ce_6: 0.5719  m1_loss_mask_6: 0.159  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.561  m1_loss_mask_7: 0.1581  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.5495  m1_loss_mask_8: 0.1576  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5315  m2_loss_mask: 0.1585  m2_loss_dice: 1.287  m2_loss_ce_0: 0.618  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.6634  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.6306  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.332  m2_loss_ce_3: 0.5811  m2_loss_mask_3: 0.1615  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5529  m2_loss_mask_4: 0.1632  m2_loss_dice_4: 1.333  m2_loss_ce_5: 0.5569  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.337  m2_loss_ce_6: 0.5589  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.5545  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.3  m2_loss_ce_8: 0.5254  m2_loss_mask_8: 0.1589  m2_loss_dice_8: 1.255  com_loss_ce: 1.572  com_loss_mask: 0.6936  com_loss_dice: 0.9587    time: 1.4488  last_time: 1.4195  data_time: 0.0416  last_data_time: 0.0455   lr: 0.0001  max_mem: 35993M
[08/19 17:01:16] d2.utils.events INFO:  eta: 0:09:37  iter: 599  total_loss: 42.77  m1_loss_ce: 0.5284  m1_loss_mask: 0.1563  m1_loss_dice: 1.25  m1_loss_ce_0: 0.6355  m1_loss_mask_0: 0.1812  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6408  m1_loss_mask_1: 0.1669  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.606  m1_loss_mask_2: 0.16  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5807  m1_loss_mask_3: 0.1608  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5739  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.5382  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.5313  m1_loss_mask_6: 0.1611  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.4883  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.241  m1_loss_ce_8: 0.5131  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.259  m2_loss_ce: 0.5233  m2_loss_mask: 0.158  m2_loss_dice: 1.223  m2_loss_ce_0: 0.6337  m2_loss_mask_0: 0.1831  m2_loss_dice_0: 1.507  m2_loss_ce_1: 0.6783  m2_loss_mask_1: 0.1678  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6187  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.6111  m2_loss_mask_3: 0.1613  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5721  m2_loss_mask_4: 0.1631  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.548  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.5221  m2_loss_mask_6: 0.1582  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5229  m2_loss_mask_7: 0.1585  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.5126  m2_loss_mask_8: 0.1584  m2_loss_dice_8: 1.241  com_loss_ce: 1.582  com_loss_mask: 0.6936  com_loss_dice: 0.9578    time: 1.4479  last_time: 1.4279  data_time: 0.0414  last_data_time: 0.0411   lr: 0.0001  max_mem: 35993M
[08/19 17:01:44] d2.utils.events INFO:  eta: 0:09:08  iter: 619  total_loss: 43.28  m1_loss_ce: 0.4887  m1_loss_mask: 0.1627  m1_loss_dice: 1.176  m1_loss_ce_0: 0.6384  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.375  m1_loss_ce_1: 0.6924  m1_loss_mask_1: 0.1811  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.5997  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.5767  m1_loss_mask_3: 0.1692  m1_loss_dice_3: 1.219  m1_loss_ce_4: 0.5391  m1_loss_mask_4: 0.167  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.5465  m1_loss_mask_5: 0.1649  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.5102  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.5123  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.473  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5041  m2_loss_mask: 0.1637  m2_loss_dice: 1.17  m2_loss_ce_0: 0.6278  m2_loss_mask_0: 0.2104  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6696  m2_loss_mask_1: 0.1884  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6016  m2_loss_mask_2: 0.1671  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5528  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5168  m2_loss_mask_4: 0.1657  m2_loss_dice_4: 1.206  m2_loss_ce_5: 0.5474  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.507  m2_loss_mask_6: 0.1652  m2_loss_dice_6: 1.152  m2_loss_ce_7: 0.5109  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.4912  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.141  com_loss_ce: 1.593  com_loss_mask: 0.6936  com_loss_dice: 0.9556    time: 1.4470  last_time: 1.4766  data_time: 0.0391  last_data_time: 0.0369   lr: 0.0001  max_mem: 35993M
[08/19 17:02:13] d2.utils.events INFO:  eta: 0:08:39  iter: 639  total_loss: 42.38  m1_loss_ce: 0.4913  m1_loss_mask: 0.1564  m1_loss_dice: 1.255  m1_loss_ce_0: 0.6301  m1_loss_mask_0: 0.1908  m1_loss_dice_0: 1.512  m1_loss_ce_1: 0.6641  m1_loss_mask_1: 0.1682  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.611  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5785  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.226  m1_loss_ce_4: 0.5431  m1_loss_mask_4: 0.1599  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.4846  m1_loss_mask_5: 0.1575  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.4876  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.266  m1_loss_ce_7: 0.4831  m1_loss_mask_7: 0.159  m1_loss_dice_7: 1.291  m1_loss_ce_8: 0.4934  m1_loss_mask_8: 0.1584  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5126  m2_loss_mask: 0.1612  m2_loss_dice: 1.228  m2_loss_ce_0: 0.5893  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.515  m2_loss_ce_1: 0.6465  m2_loss_mask_1: 0.1673  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5898  m2_loss_mask_2: 0.1636  m2_loss_dice_2: 1.354  m2_loss_ce_3: 0.5553  m2_loss_mask_3: 0.1607  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5496  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.5264  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.5005  m2_loss_mask_6: 0.159  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.5139  m2_loss_mask_7: 0.1586  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4937  m2_loss_mask_8: 0.1582  m2_loss_dice_8: 1.245  com_loss_ce: 1.591  com_loss_mask: 0.6936  com_loss_dice: 0.9589    time: 1.4466  last_time: 1.4013  data_time: 0.0412  last_data_time: 0.0379   lr: 0.0001  max_mem: 35993M
[08/19 17:02:42] d2.utils.events INFO:  eta: 0:08:10  iter: 659  total_loss: 44.53  m1_loss_ce: 0.5282  m1_loss_mask: 0.1547  m1_loss_dice: 1.278  m1_loss_ce_0: 0.6335  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.7015  m1_loss_mask_1: 0.1719  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.6351  m1_loss_mask_2: 0.1627  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.5794  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.5622  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.5668  m1_loss_mask_5: 0.1568  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.5202  m1_loss_mask_6: 0.158  m1_loss_dice_6: 1.27  m1_loss_ce_7: 0.5283  m1_loss_mask_7: 0.1543  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.5203  m1_loss_mask_8: 0.1546  m1_loss_dice_8: 1.229  m2_loss_ce: 0.5432  m2_loss_mask: 0.1591  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6373  m2_loss_mask_0: 0.1928  m2_loss_dice_0: 1.523  m2_loss_ce_1: 0.7028  m2_loss_mask_1: 0.1748  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.6691  m2_loss_mask_2: 0.1623  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.5939  m2_loss_mask_3: 0.1589  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5535  m2_loss_mask_4: 0.1604  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.573  m2_loss_mask_5: 0.159  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5652  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5182  m2_loss_mask_7: 0.1593  m2_loss_dice_7: 1.281  m2_loss_ce_8: 0.5174  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.253  com_loss_ce: 1.59  com_loss_mask: 0.6936  com_loss_dice: 0.9581    time: 1.4468  last_time: 1.4807  data_time: 0.0417  last_data_time: 0.0380   lr: 0.0001  max_mem: 35993M
[08/19 17:03:11] d2.utils.events INFO:  eta: 0:07:41  iter: 679  total_loss: 44.77  m1_loss_ce: 0.5091  m1_loss_mask: 0.1869  m1_loss_dice: 1.231  m1_loss_ce_0: 0.5882  m1_loss_mask_0: 0.22  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6613  m1_loss_mask_1: 0.1989  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.6099  m1_loss_mask_2: 0.1884  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5943  m1_loss_mask_3: 0.1892  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.564  m1_loss_mask_4: 0.1886  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.548  m1_loss_mask_5: 0.184  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.5178  m1_loss_mask_6: 0.1863  m1_loss_dice_6: 1.248  m1_loss_ce_7: 0.513  m1_loss_mask_7: 0.1867  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.4966  m1_loss_mask_8: 0.1859  m1_loss_dice_8: 1.255  m2_loss_ce: 0.5515  m2_loss_mask: 0.1854  m2_loss_dice: 1.195  m2_loss_ce_0: 0.6401  m2_loss_mask_0: 0.2164  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6797  m2_loss_mask_1: 0.1951  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.6264  m2_loss_mask_2: 0.1921  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5979  m2_loss_mask_3: 0.1892  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5822  m2_loss_mask_4: 0.1894  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.5718  m2_loss_mask_5: 0.188  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.5596  m2_loss_mask_6: 0.1861  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.5481  m2_loss_mask_7: 0.1866  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.5585  m2_loss_mask_8: 0.1866  m2_loss_dice_8: 1.238  com_loss_ce: 1.58  com_loss_mask: 0.6936  com_loss_dice: 0.9556    time: 1.4466  last_time: 1.4674  data_time: 0.0396  last_data_time: 0.0346   lr: 0.0001  max_mem: 35993M
[08/19 17:03:41] d2.utils.events INFO:  eta: 0:07:12  iter: 699  total_loss: 42.6  m1_loss_ce: 0.5744  m1_loss_mask: 0.162  m1_loss_dice: 1.182  m1_loss_ce_0: 0.6538  m1_loss_mask_0: 0.188  m1_loss_dice_0: 1.347  m1_loss_ce_1: 0.6642  m1_loss_mask_1: 0.1699  m1_loss_dice_1: 1.26  m1_loss_ce_2: 0.6548  m1_loss_mask_2: 0.1641  m1_loss_dice_2: 1.226  m1_loss_ce_3: 0.5764  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.219  m1_loss_ce_4: 0.5637  m1_loss_mask_4: 0.1599  m1_loss_dice_4: 1.173  m1_loss_ce_5: 0.5448  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.5438  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.5256  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.162  m1_loss_ce_8: 0.5486  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5598  m2_loss_mask: 0.1674  m2_loss_dice: 1.176  m2_loss_ce_0: 0.6392  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.398  m2_loss_ce_1: 0.722  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.287  m2_loss_ce_2: 0.6476  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.6384  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.196  m2_loss_ce_4: 0.5845  m2_loss_mask_4: 0.1707  m2_loss_dice_4: 1.198  m2_loss_ce_5: 0.5707  m2_loss_mask_5: 0.169  m2_loss_dice_5: 1.178  m2_loss_ce_6: 0.5698  m2_loss_mask_6: 0.1663  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.5549  m2_loss_mask_7: 0.1666  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.5436  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.154  com_loss_ce: 1.572  com_loss_mask: 0.6936  com_loss_dice: 0.9562    time: 1.4466  last_time: 1.5259  data_time: 0.0393  last_data_time: 0.0374   lr: 0.0001  max_mem: 35993M
[08/19 17:04:09] d2.utils.events INFO:  eta: 0:06:43  iter: 719  total_loss: 45.32  m1_loss_ce: 0.5589  m1_loss_mask: 0.1542  m1_loss_dice: 1.271  m1_loss_ce_0: 0.6444  m1_loss_mask_0: 0.1753  m1_loss_dice_0: 1.457  m1_loss_ce_1: 0.6865  m1_loss_mask_1: 0.164  m1_loss_dice_1: 1.406  m1_loss_ce_2: 0.662  m1_loss_mask_2: 0.1549  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.6048  m1_loss_mask_3: 0.1576  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.541  m1_loss_mask_4: 0.1539  m1_loss_dice_4: 1.277  m1_loss_ce_5: 0.5522  m1_loss_mask_5: 0.1514  m1_loss_dice_5: 1.282  m1_loss_ce_6: 0.5383  m1_loss_mask_6: 0.1544  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.5085  m1_loss_mask_7: 0.1521  m1_loss_dice_7: 1.274  m1_loss_ce_8: 0.5282  m1_loss_mask_8: 0.1534  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5565  m2_loss_mask: 0.1547  m2_loss_dice: 1.271  m2_loss_ce_0: 0.642  m2_loss_mask_0: 0.1872  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.6789  m2_loss_mask_1: 0.1661  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.6521  m2_loss_mask_2: 0.1599  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5837  m2_loss_mask_3: 0.1566  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5958  m2_loss_mask_4: 0.1549  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.567  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.5406  m2_loss_mask_6: 0.154  m2_loss_dice_6: 1.281  m2_loss_ce_7: 0.5599  m2_loss_mask_7: 0.1549  m2_loss_dice_7: 1.291  m2_loss_ce_8: 0.5657  m2_loss_mask_8: 0.1535  m2_loss_dice_8: 1.266  com_loss_ce: 1.584  com_loss_mask: 0.6936  com_loss_dice: 0.9568    time: 1.4463  last_time: 1.3902  data_time: 0.0401  last_data_time: 0.0447   lr: 0.0001  max_mem: 35993M
[08/19 17:04:38] d2.utils.events INFO:  eta: 0:06:15  iter: 739  total_loss: 41.87  m1_loss_ce: 0.5045  m1_loss_mask: 0.1563  m1_loss_dice: 1.191  m1_loss_ce_0: 0.612  m1_loss_mask_0: 0.1917  m1_loss_dice_0: 1.379  m1_loss_ce_1: 0.6522  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5725  m1_loss_mask_2: 0.1608  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.5152  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.5228  m1_loss_mask_4: 0.1595  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4734  m1_loss_mask_5: 0.1593  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.4717  m1_loss_mask_6: 0.1548  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.4709  m1_loss_mask_7: 0.1612  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.4849  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.167  m2_loss_ce: 0.5103  m2_loss_mask: 0.1594  m2_loss_dice: 1.179  m2_loss_ce_0: 0.5989  m2_loss_mask_0: 0.1945  m2_loss_dice_0: 1.378  m2_loss_ce_1: 0.6725  m2_loss_mask_1: 0.1645  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.5932  m2_loss_mask_2: 0.1616  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5553  m2_loss_mask_3: 0.1641  m2_loss_dice_3: 1.21  m2_loss_ce_4: 0.5363  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.227  m2_loss_ce_5: 0.5228  m2_loss_mask_5: 0.1614  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.5408  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.5363  m2_loss_mask_7: 0.1585  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.5158  m2_loss_mask_8: 0.1609  m2_loss_dice_8: 1.188  com_loss_ce: 1.573  com_loss_mask: 0.6936  com_loss_dice: 0.9528    time: 1.4457  last_time: 1.4002  data_time: 0.0385  last_data_time: 0.0367   lr: 0.0001  max_mem: 35993M
[08/19 17:05:07] d2.utils.events INFO:  eta: 0:05:46  iter: 759  total_loss: 42.75  m1_loss_ce: 0.5105  m1_loss_mask: 0.167  m1_loss_dice: 1.133  m1_loss_ce_0: 0.6082  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.7155  m1_loss_mask_1: 0.1784  m1_loss_dice_1: 1.266  m1_loss_ce_2: 0.6544  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.237  m1_loss_ce_3: 0.5449  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.5414  m1_loss_mask_4: 0.1656  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.5092  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.5188  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.5198  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.158  m1_loss_ce_8: 0.5214  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.17  m2_loss_ce: 0.5396  m2_loss_mask: 0.1722  m2_loss_dice: 1.167  m2_loss_ce_0: 0.6667  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.369  m2_loss_ce_1: 0.6761  m2_loss_mask_1: 0.1782  m2_loss_dice_1: 1.315  m2_loss_ce_2: 0.6624  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5889  m2_loss_mask_3: 0.1764  m2_loss_dice_3: 1.219  m2_loss_ce_4: 0.6133  m2_loss_mask_4: 0.1756  m2_loss_dice_4: 1.189  m2_loss_ce_5: 0.5533  m2_loss_mask_5: 0.1731  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.5251  m2_loss_mask_6: 0.1725  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5203  m2_loss_mask_7: 0.1723  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.5333  m2_loss_mask_8: 0.1722  m2_loss_dice_8: 1.186  com_loss_ce: 1.58  com_loss_mask: 0.6936  com_loss_dice: 0.9558    time: 1.4456  last_time: 1.4469  data_time: 0.0392  last_data_time: 0.0418   lr: 0.0001  max_mem: 35993M
[08/19 17:05:36] d2.utils.events INFO:  eta: 0:05:17  iter: 779  total_loss: 44.58  m1_loss_ce: 0.562  m1_loss_mask: 0.1721  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6425  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.6853  m1_loss_mask_1: 0.1824  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.6288  m1_loss_mask_2: 0.1714  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.5841  m1_loss_mask_3: 0.1748  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5613  m1_loss_mask_4: 0.1714  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.5335  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.5306  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.232  m1_loss_ce_7: 0.519  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.227  m1_loss_ce_8: 0.534  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.24  m2_loss_ce: 0.5401  m2_loss_mask: 0.1746  m2_loss_dice: 1.212  m2_loss_ce_0: 0.6703  m2_loss_mask_0: 0.209  m2_loss_dice_0: 1.506  m2_loss_ce_1: 0.726  m2_loss_mask_1: 0.1869  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.685  m2_loss_mask_2: 0.1761  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.615  m2_loss_mask_3: 0.1752  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5703  m2_loss_mask_4: 0.1769  m2_loss_dice_4: 1.252  m2_loss_ce_5: 0.5833  m2_loss_mask_5: 0.1756  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5874  m2_loss_mask_6: 0.1718  m2_loss_dice_6: 1.268  m2_loss_ce_7: 0.5784  m2_loss_mask_7: 0.1726  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5849  m2_loss_mask_8: 0.1725  m2_loss_dice_8: 1.253  com_loss_ce: 1.594  com_loss_mask: 0.6936  com_loss_dice: 0.9574    time: 1.4458  last_time: 1.4719  data_time: 0.0386  last_data_time: 0.0393   lr: 0.0001  max_mem: 35993M
[08/19 17:06:05] d2.utils.events INFO:  eta: 0:04:48  iter: 799  total_loss: 44.61  m1_loss_ce: 0.5223  m1_loss_mask: 0.162  m1_loss_dice: 1.207  m1_loss_ce_0: 0.6507  m1_loss_mask_0: 0.1799  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6745  m1_loss_mask_1: 0.1678  m1_loss_dice_1: 1.305  m1_loss_ce_2: 0.6285  m1_loss_mask_2: 0.1634  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.5726  m1_loss_mask_3: 0.1662  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.5401  m1_loss_mask_4: 0.1595  m1_loss_dice_4: 1.248  m1_loss_ce_5: 0.5022  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4996  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.4815  m1_loss_mask_7: 0.165  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.4911  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5608  m2_loss_mask: 0.1645  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6437  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6957  m2_loss_mask_1: 0.1721  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.6847  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.6022  m2_loss_mask_3: 0.1661  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.586  m2_loss_mask_4: 0.1662  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.5589  m2_loss_mask_5: 0.1609  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5638  m2_loss_mask_6: 0.159  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.5611  m2_loss_mask_7: 0.1615  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.5539  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.225  com_loss_ce: 1.588  com_loss_mask: 0.6936  com_loss_dice: 0.9566    time: 1.4453  last_time: 1.4326  data_time: 0.0408  last_data_time: 0.0418   lr: 0.0001  max_mem: 35993M
[08/19 17:06:34] d2.utils.events INFO:  eta: 0:04:19  iter: 819  total_loss: 42.53  m1_loss_ce: 0.4885  m1_loss_mask: 0.1669  m1_loss_dice: 1.207  m1_loss_ce_0: 0.6072  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6333  m1_loss_mask_1: 0.1746  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.5874  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.55  m1_loss_mask_3: 0.1678  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.5223  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4875  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5126  m1_loss_mask_6: 0.1669  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4899  m1_loss_mask_7: 0.1673  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.493  m1_loss_mask_8: 0.1676  m1_loss_dice_8: 1.194  m2_loss_ce: 0.5311  m2_loss_mask: 0.1705  m2_loss_dice: 1.227  m2_loss_ce_0: 0.6429  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6728  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.6112  m2_loss_mask_2: 0.1695  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.5694  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5422  m2_loss_mask_4: 0.1743  m2_loss_dice_4: 1.217  m2_loss_ce_5: 0.5375  m2_loss_mask_5: 0.171  m2_loss_dice_5: 1.233  m2_loss_ce_6: 0.5368  m2_loss_mask_6: 0.1729  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.5319  m2_loss_mask_7: 0.1718  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.5381  m2_loss_mask_8: 0.1704  m2_loss_dice_8: 1.23  com_loss_ce: 1.578  com_loss_mask: 0.6936  com_loss_dice: 0.9557    time: 1.4450  last_time: 1.4494  data_time: 0.0403  last_data_time: 0.0332   lr: 0.0001  max_mem: 35993M
[08/19 17:07:03] d2.utils.events INFO:  eta: 0:03:50  iter: 839  total_loss: 43.62  m1_loss_ce: 0.4748  m1_loss_mask: 0.1623  m1_loss_dice: 1.191  m1_loss_ce_0: 0.6159  m1_loss_mask_0: 0.1849  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.6253  m1_loss_mask_1: 0.1766  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.6059  m1_loss_mask_2: 0.1652  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.522  m1_loss_mask_3: 0.1646  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.5009  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.202  m1_loss_ce_5: 0.504  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4706  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.4975  m1_loss_mask_7: 0.1628  m1_loss_dice_7: 1.16  m1_loss_ce_8: 0.4699  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4744  m2_loss_mask: 0.1659  m2_loss_dice: 1.232  m2_loss_ce_0: 0.6139  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6289  m2_loss_mask_1: 0.1808  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.6336  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5811  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5397  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5194  m2_loss_mask_5: 0.1702  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4985  m2_loss_mask_6: 0.1659  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4965  m2_loss_mask_7: 0.1644  m2_loss_dice_7: 1.191  m2_loss_ce_8: 0.4829  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.182  com_loss_ce: 1.582  com_loss_mask: 0.6936  com_loss_dice: 0.9548    time: 1.4446  last_time: 1.4231  data_time: 0.0391  last_data_time: 0.0379   lr: 0.0001  max_mem: 35993M
[08/19 17:07:32] d2.utils.events INFO:  eta: 0:03:21  iter: 859  total_loss: 43.49  m1_loss_ce: 0.5437  m1_loss_mask: 0.1592  m1_loss_dice: 1.172  m1_loss_ce_0: 0.6145  m1_loss_mask_0: 0.1784  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6608  m1_loss_mask_1: 0.1709  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.6048  m1_loss_mask_2: 0.163  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5423  m1_loss_mask_3: 0.1628  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.5329  m1_loss_mask_4: 0.1605  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.543  m1_loss_mask_5: 0.1574  m1_loss_dice_5: 1.256  m1_loss_ce_6: 0.5229  m1_loss_mask_6: 0.1578  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5323  m1_loss_mask_7: 0.1592  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.5187  m1_loss_mask_8: 0.1596  m1_loss_dice_8: 1.186  m2_loss_ce: 0.544  m2_loss_mask: 0.1616  m2_loss_dice: 1.223  m2_loss_ce_0: 0.627  m2_loss_mask_0: 0.1885  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.6994  m2_loss_mask_1: 0.1721  m2_loss_dice_1: 1.381  m2_loss_ce_2: 0.6491  m2_loss_mask_2: 0.1695  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.6007  m2_loss_mask_3: 0.165  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.5768  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.572  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.5621  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.5412  m2_loss_mask_7: 0.1622  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.5311  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.248  com_loss_ce: 1.584  com_loss_mask: 0.6936  com_loss_dice: 0.9579    time: 1.4445  last_time: 1.4025  data_time: 0.0406  last_data_time: 0.0366   lr: 0.0001  max_mem: 35993M
[08/19 17:08:01] d2.utils.events INFO:  eta: 0:02:53  iter: 879  total_loss: 42.61  m1_loss_ce: 0.5023  m1_loss_mask: 0.1697  m1_loss_dice: 1.174  m1_loss_ce_0: 0.5703  m1_loss_mask_0: 0.1929  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.649  m1_loss_mask_1: 0.1727  m1_loss_dice_1: 1.289  m1_loss_ce_2: 0.5804  m1_loss_mask_2: 0.1711  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.5318  m1_loss_mask_3: 0.1715  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.5185  m1_loss_mask_4: 0.1699  m1_loss_dice_4: 1.153  m1_loss_ce_5: 0.5258  m1_loss_mask_5: 0.1692  m1_loss_dice_5: 1.139  m1_loss_ce_6: 0.5148  m1_loss_mask_6: 0.1696  m1_loss_dice_6: 1.148  m1_loss_ce_7: 0.4944  m1_loss_mask_7: 0.1718  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.4882  m1_loss_mask_8: 0.1719  m1_loss_dice_8: 1.109  m2_loss_ce: 0.5236  m2_loss_mask: 0.1836  m2_loss_dice: 1.189  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.2118  m2_loss_dice_0: 1.398  m2_loss_ce_1: 0.6558  m2_loss_mask_1: 0.1884  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.6115  m2_loss_mask_2: 0.1868  m2_loss_dice_2: 1.236  m2_loss_ce_3: 0.5697  m2_loss_mask_3: 0.1823  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.5514  m2_loss_mask_4: 0.1875  m2_loss_dice_4: 1.195  m2_loss_ce_5: 0.5296  m2_loss_mask_5: 0.1854  m2_loss_dice_5: 1.189  m2_loss_ce_6: 0.5155  m2_loss_mask_6: 0.1858  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5082  m2_loss_mask_7: 0.1852  m2_loss_dice_7: 1.165  m2_loss_ce_8: 0.4967  m2_loss_mask_8: 0.1861  m2_loss_dice_8: 1.205  com_loss_ce: 1.556  com_loss_mask: 0.6936  com_loss_dice: 0.9539    time: 1.4450  last_time: 1.4763  data_time: 0.0386  last_data_time: 0.0418   lr: 0.0001  max_mem: 35993M
[08/19 17:08:30] d2.utils.events INFO:  eta: 0:02:24  iter: 899  total_loss: 42.62  m1_loss_ce: 0.5081  m1_loss_mask: 0.1594  m1_loss_dice: 1.186  m1_loss_ce_0: 0.5557  m1_loss_mask_0: 0.1822  m1_loss_dice_0: 1.37  m1_loss_ce_1: 0.6153  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.297  m1_loss_ce_2: 0.6086  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.5043  m1_loss_mask_3: 0.1591  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4995  m1_loss_mask_4: 0.1605  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4723  m1_loss_mask_5: 0.1592  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.482  m1_loss_mask_6: 0.1598  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.4746  m1_loss_mask_7: 0.1589  m1_loss_dice_7: 1.155  m1_loss_ce_8: 0.481  m1_loss_mask_8: 0.1607  m1_loss_dice_8: 1.2  m2_loss_ce: 0.5234  m2_loss_mask: 0.1637  m2_loss_dice: 1.181  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.1926  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6709  m2_loss_mask_1: 0.1789  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.6122  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.5525  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5659  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5185  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.5162  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.194  m2_loss_ce_7: 0.5356  m2_loss_mask_7: 0.1681  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.5132  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.198  com_loss_ce: 1.573  com_loss_mask: 0.6936  com_loss_dice: 0.9576    time: 1.4449  last_time: 1.3653  data_time: 0.0396  last_data_time: 0.0404   lr: 0.0001  max_mem: 35993M
[08/19 17:08:59] d2.utils.events INFO:  eta: 0:01:55  iter: 919  total_loss: 43.31  m1_loss_ce: 0.5082  m1_loss_mask: 0.153  m1_loss_dice: 1.222  m1_loss_ce_0: 0.6032  m1_loss_mask_0: 0.1763  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6276  m1_loss_mask_1: 0.1635  m1_loss_dice_1: 1.36  m1_loss_ce_2: 0.5839  m1_loss_mask_2: 0.1549  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5468  m1_loss_mask_3: 0.1532  m1_loss_dice_3: 1.292  m1_loss_ce_4: 0.508  m1_loss_mask_4: 0.1536  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.4853  m1_loss_mask_5: 0.1535  m1_loss_dice_5: 1.257  m1_loss_ce_6: 0.4711  m1_loss_mask_6: 0.1495  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.5135  m1_loss_mask_7: 0.1514  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.5149  m1_loss_mask_8: 0.1512  m1_loss_dice_8: 1.23  m2_loss_ce: 0.5363  m2_loss_mask: 0.1529  m2_loss_dice: 1.23  m2_loss_ce_0: 0.666  m2_loss_mask_0: 0.1775  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.7051  m2_loss_mask_1: 0.1637  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6204  m2_loss_mask_2: 0.1572  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5727  m2_loss_mask_3: 0.1537  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.572  m2_loss_mask_4: 0.1561  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.5304  m2_loss_mask_5: 0.1551  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.531  m2_loss_mask_6: 0.1511  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.5227  m2_loss_mask_7: 0.1523  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4854  m2_loss_mask_8: 0.1534  m2_loss_dice_8: 1.278  com_loss_ce: 1.585  com_loss_mask: 0.6936  com_loss_dice: 0.9583    time: 1.4452  last_time: 1.3904  data_time: 0.0414  last_data_time: 0.0609   lr: 0.0001  max_mem: 35993M
[08/19 17:09:28] d2.utils.events INFO:  eta: 0:01:26  iter: 939  total_loss: 41.4  m1_loss_ce: 0.517  m1_loss_mask: 0.164  m1_loss_dice: 1.122  m1_loss_ce_0: 0.5929  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.306  m1_loss_ce_1: 0.6802  m1_loss_mask_1: 0.1777  m1_loss_dice_1: 1.239  m1_loss_ce_2: 0.5696  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.169  m1_loss_ce_3: 0.5373  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.5174  m1_loss_mask_4: 0.1651  m1_loss_dice_4: 1.165  m1_loss_ce_5: 0.4712  m1_loss_mask_5: 0.1646  m1_loss_dice_5: 1.156  m1_loss_ce_6: 0.5009  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.4709  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.139  m1_loss_ce_8: 0.4944  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.157  m2_loss_ce: 0.4943  m2_loss_mask: 0.1711  m2_loss_dice: 1.148  m2_loss_ce_0: 0.6203  m2_loss_mask_0: 0.2035  m2_loss_dice_0: 1.379  m2_loss_ce_1: 0.6576  m2_loss_mask_1: 0.1834  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.6274  m2_loss_mask_2: 0.1762  m2_loss_dice_2: 1.211  m2_loss_ce_3: 0.5646  m2_loss_mask_3: 0.1725  m2_loss_dice_3: 1.175  m2_loss_ce_4: 0.5176  m2_loss_mask_4: 0.1792  m2_loss_dice_4: 1.171  m2_loss_ce_5: 0.528  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.5389  m2_loss_mask_6: 0.1702  m2_loss_dice_6: 1.153  m2_loss_ce_7: 0.4998  m2_loss_mask_7: 0.1715  m2_loss_dice_7: 1.163  m2_loss_ce_8: 0.513  m2_loss_mask_8: 0.1732  m2_loss_dice_8: 1.152  com_loss_ce: 1.561  com_loss_mask: 0.6936  com_loss_dice: 0.9533    time: 1.4452  last_time: 1.4508  data_time: 0.0382  last_data_time: 0.0375   lr: 0.0001  max_mem: 35993M
[08/19 17:09:58] d2.utils.events INFO:  eta: 0:00:57  iter: 959  total_loss: 41.87  m1_loss_ce: 0.531  m1_loss_mask: 0.1646  m1_loss_dice: 1.107  m1_loss_ce_0: 0.6052  m1_loss_mask_0: 0.1932  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.645  m1_loss_mask_1: 0.173  m1_loss_dice_1: 1.272  m1_loss_ce_2: 0.6091  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.189  m1_loss_ce_3: 0.5825  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.165  m1_loss_ce_4: 0.5534  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.149  m1_loss_ce_5: 0.5502  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.153  m1_loss_ce_6: 0.5485  m1_loss_mask_6: 0.166  m1_loss_dice_6: 1.094  m1_loss_ce_7: 0.539  m1_loss_mask_7: 0.1661  m1_loss_dice_7: 1.114  m1_loss_ce_8: 0.5122  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.108  m2_loss_ce: 0.5262  m2_loss_mask: 0.1709  m2_loss_dice: 1.162  m2_loss_ce_0: 0.6099  m2_loss_mask_0: 0.2008  m2_loss_dice_0: 1.39  m2_loss_ce_1: 0.6855  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.299  m2_loss_ce_2: 0.6284  m2_loss_mask_2: 0.175  m2_loss_dice_2: 1.242  m2_loss_ce_3: 0.5663  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.5355  m2_loss_mask_4: 0.1696  m2_loss_dice_4: 1.183  m2_loss_ce_5: 0.5406  m2_loss_mask_5: 0.17  m2_loss_dice_5: 1.187  m2_loss_ce_6: 0.5232  m2_loss_mask_6: 0.1702  m2_loss_dice_6: 1.152  m2_loss_ce_7: 0.5218  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.169  m2_loss_ce_8: 0.5225  m2_loss_mask_8: 0.168  m2_loss_dice_8: 1.173  com_loss_ce: 1.57  com_loss_mask: 0.6936  com_loss_dice: 0.9559    time: 1.4454  last_time: 1.4389  data_time: 0.0413  last_data_time: 0.0363   lr: 0.0001  max_mem: 35993M
[08/19 17:10:27] d2.utils.events INFO:  eta: 0:00:28  iter: 979  total_loss: 44.12  m1_loss_ce: 0.5059  m1_loss_mask: 0.1486  m1_loss_dice: 1.196  m1_loss_ce_0: 0.6438  m1_loss_mask_0: 0.1832  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6768  m1_loss_mask_1: 0.1637  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.635  m1_loss_mask_2: 0.1575  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.5869  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.5637  m1_loss_mask_4: 0.1563  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.5549  m1_loss_mask_5: 0.1599  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.5357  m1_loss_mask_6: 0.1545  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.5353  m1_loss_mask_7: 0.1493  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.5199  m1_loss_mask_8: 0.1478  m1_loss_dice_8: 1.201  m2_loss_ce: 0.5454  m2_loss_mask: 0.1588  m2_loss_dice: 1.248  m2_loss_ce_0: 0.6916  m2_loss_mask_0: 0.1874  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.7433  m2_loss_mask_1: 0.1696  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.6469  m2_loss_mask_2: 0.1591  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.6067  m2_loss_mask_3: 0.1587  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5718  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.5706  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.5265  m2_loss_mask_6: 0.1608  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.5434  m2_loss_mask_7: 0.1592  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5123  m2_loss_mask_8: 0.1583  m2_loss_dice_8: 1.259  com_loss_ce: 1.588  com_loss_mask: 0.6936  com_loss_dice: 0.9598    time: 1.4456  last_time: 1.4711  data_time: 0.0410  last_data_time: 0.0400   lr: 0.0001  max_mem: 35993M
[08/19 17:10:56] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_5/model_final.pth
[08/19 17:10:59] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 43.99  m1_loss_ce: 0.5344  m1_loss_mask: 0.1632  m1_loss_dice: 1.23  m1_loss_ce_0: 0.6809  m1_loss_mask_0: 0.1865  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.7015  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.6873  m1_loss_mask_2: 0.1768  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.6196  m1_loss_mask_3: 0.1712  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.5877  m1_loss_mask_4: 0.1693  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.536  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.5374  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.5322  m1_loss_mask_7: 0.1646  m1_loss_dice_7: 1.241  m1_loss_ce_8: 0.5482  m1_loss_mask_8: 0.1655  m1_loss_dice_8: 1.208  m2_loss_ce: 0.5714  m2_loss_mask: 0.1672  m2_loss_dice: 1.279  m2_loss_ce_0: 0.6763  m2_loss_mask_0: 0.1938  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.7226  m2_loss_mask_1: 0.1773  m2_loss_dice_1: 1.433  m2_loss_ce_2: 0.6599  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5907  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.317  m2_loss_ce_4: 0.6176  m2_loss_mask_4: 0.1746  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.584  m2_loss_mask_5: 0.1749  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5834  m2_loss_mask_6: 0.1709  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.5587  m2_loss_mask_7: 0.165  m2_loss_dice_7: 1.268  m2_loss_ce_8: 0.5595  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.227  com_loss_ce: 1.581  com_loss_mask: 0.6936  com_loss_dice: 0.9587    time: 1.4457  last_time: 1.5251  data_time: 0.0409  last_data_time: 0.0512   lr: 0.0001  max_mem: 35993M
[08/19 17:10:59] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:24:02 (1.4457 s / it)
[08/19 17:10:59] d2.engine.hooks INFO: Total training time: 0:24:13 (0:00:10 on hooks)
[08/19 17:10:59] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/19 17:10:59] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/19 17:10:59] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 17:10:59] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/19 17:10:59] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/19 17:12:32] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evallq5a2kjq ...
[08/19 17:12:51] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.400 | 81.005 | 69.890 |      19       |
| Things | 48.367 | 80.565 | 60.200 |       8       |
| Stuff  | 63.969 | 81.325 | 76.936 |      11       |
[08/19 17:12:51] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.132 | 97.638 | 99.482 |     Stuff     |
| class_8  | 74.287 | 83.572 | 88.889 |     Stuff     |
| class_11 | 86.725 | 89.275 | 97.143 |     Stuff     |
| class_12 | 39.186 | 79.982 | 48.993 |     Stuff     |
| class_13 | 37.718 | 76.416 | 49.359 |     Stuff     |
| class_17 | 40.940 | 63.837 | 64.132 |     Stuff     |
| class_19 | 48.848 | 68.920 | 70.877 |     Stuff     |
| class_20 | 66.109 | 77.294 | 85.529 |     Stuff     |
| class_21 | 89.424 | 90.072 | 99.281 |     Stuff     |
| class_22 | 35.806 | 75.923 | 47.162 |     Stuff     |
| class_23 | 87.481 | 91.646 | 95.455 |     Stuff     |
| class_24 | 53.299 | 76.652 | 69.534 |    Things     |
| class_25 | 46.545 | 72.920 | 63.830 |    Things     |
| class_26 | 64.297 | 83.126 | 77.349 |    Things     |
| class_27 | 41.013 | 88.460 | 46.364 |    Things     |
| class_28 | 60.110 | 90.166 | 66.667 |    Things     |
| class_31 | 39.093 | 86.564 | 45.161 |    Things     |
| class_32 | 41.384 | 75.115 | 55.094 |    Things     |
| class_33 | 41.193 | 71.514 | 57.602 |    Things     |
[08/19 17:12:51] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/19 17:12:51] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/19 17:12:51] d2.evaluation.testing INFO: copypaste: 57.3995,81.0048,69.8895,48.3669,80.5645,60.2001,63.9686,81.3250,76.9364,97.1319,97.6378,99.4819,74.2866,83.5724,88.8889,86.7248,89.2755,97.1429,39.1858,79.9820,48.9933,37.7181,76.4159,49.3590,40.9397,63.8370,64.1316,48.8483,68.9197,70.8772,66.1090,77.2941,85.5292,89.4242,90.0722,99.2806,35.8063,75.9226,47.1616,87.4805,91.6462,95.4545,53.2993,76.6518,69.5343,46.5450,72.9205,63.8298,64.2971,83.1258,77.3492,41.0131,88.4595,46.3636,60.1105,90.1657,66.6667,39.0935,86.5641,45.1613,41.3839,75.1146,55.0943,41.1933,71.5142,57.6015
