[09/08 22:37:55] detectron2 INFO: Rank of current process: 0. World size: 2
[09/08 22:37:56] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/08 22:37:56] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r101_Comb_2000_2_softmax_entropy_2000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[09/08 22:37:56] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r101_Comb_2000_2_softmax_entropy_2000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r101.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r101_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r101_6_9_i_n_008_2000_2_softmax_entropy_2000_1000
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 2000
TEST:
  EVAL_PERIOD: 2000


[09/08 22:37:56] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN101
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 512
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r101_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r101_6_9_i_n_008_2000_2_softmax_entropy_2000_1000
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/08 22:37:56] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r101_6_9_i_n_008_2000_2_softmax_entropy_2000_1000/config.yaml
[09/08 22:37:56] d2.utils.env INFO: Using a generated random seed 58122339
[09/08 22:38:00] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (6): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (7): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (8): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (9): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (10): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (11): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (12): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (13): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (14): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (15): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (16): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (17): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (18): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (19): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (20): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (21): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (22): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=512, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=512, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 512)
)
[09/08 22:38:00] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/08 22:38:00] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/08 22:38:00] d2.data.build INFO: Using training sampler TrainingSampler
[09/08 22:38:01] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/08 22:38:01] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/08 22:38:01] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/08 22:38:01] d2.data.build INFO: Making batched data loader with batch_size=4
[09/08 22:38:01] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/08 22:38:04] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (6): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (7): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (8): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (9): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (10): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (11): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (12): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (13): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (14): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (15): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (16): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (17): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (18): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (19): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (20): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (21): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (22): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=512, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=512, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 512)
)
[09/08 22:38:04] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/model_final.pth ...
[09/08 22:38:04] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/model_final.pth ...
[09/08 22:38:05] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/model_final.pth ...
[09/08 22:38:05] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/model_final.pth ...
[09/08 22:38:40] d2.utils.events INFO:  eta: 0:46:31  iter: 19  total_loss: 42.67  m1_loss_ce: 0.4659  m1_loss_mask: 0.1514  m1_loss_dice: 1.21  m1_loss_ce_0: 0.572  m1_loss_mask_0: 0.1762  m1_loss_dice_0: 1.378  m1_loss_ce_1: 0.6367  m1_loss_mask_1: 0.1642  m1_loss_dice_1: 1.307  m1_loss_ce_2: 0.5593  m1_loss_mask_2: 0.1596  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.5135  m1_loss_mask_3: 0.1579  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4961  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.5075  m1_loss_mask_5: 0.1546  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4806  m1_loss_mask_6: 0.1515  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.4459  m1_loss_mask_7: 0.1521  m1_loss_dice_7: 1.218  m1_loss_ce_8: 0.4519  m1_loss_mask_8: 0.1518  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4932  m2_loss_mask: 0.1552  m2_loss_dice: 1.176  m2_loss_ce_0: 0.603  m2_loss_mask_0: 0.1759  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6506  m2_loss_mask_1: 0.1625  m2_loss_dice_1: 1.34  m2_loss_ce_2: 0.6009  m2_loss_mask_2: 0.1552  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.5169  m2_loss_mask_3: 0.1601  m2_loss_dice_3: 1.223  m2_loss_ce_4: 0.4901  m2_loss_mask_4: 0.1605  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.4991  m2_loss_mask_5: 0.1511  m2_loss_dice_5: 1.202  m2_loss_ce_6: 0.485  m2_loss_mask_6: 0.1545  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4997  m2_loss_mask_7: 0.1542  m2_loss_dice_7: 1.198  m2_loss_ce_8: 0.491  m2_loss_mask_8: 0.1539  m2_loss_dice_8: 1.204  com_loss_ce: 1.797  com_loss_mask: 0.6926  com_loss_dice: 0.9746    time: 1.4398  last_time: 1.3892  data_time: 0.2625  last_data_time: 0.0402   lr: 0.0001  max_mem: 35303M
[09/08 22:39:09] d2.utils.events INFO:  eta: 0:45:50  iter: 39  total_loss: 40.48  m1_loss_ce: 0.4234  m1_loss_mask: 0.1637  m1_loss_dice: 1.115  m1_loss_ce_0: 0.55  m1_loss_mask_0: 0.1909  m1_loss_dice_0: 1.285  m1_loss_ce_1: 0.5877  m1_loss_mask_1: 0.1763  m1_loss_dice_1: 1.237  m1_loss_ce_2: 0.5438  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.179  m1_loss_ce_3: 0.4595  m1_loss_mask_3: 0.1698  m1_loss_dice_3: 1.144  m1_loss_ce_4: 0.4481  m1_loss_mask_4: 0.1688  m1_loss_dice_4: 1.145  m1_loss_ce_5: 0.4505  m1_loss_mask_5: 0.1683  m1_loss_dice_5: 1.155  m1_loss_ce_6: 0.4541  m1_loss_mask_6: 0.1646  m1_loss_dice_6: 1.106  m1_loss_ce_7: 0.435  m1_loss_mask_7: 0.1661  m1_loss_dice_7: 1.128  m1_loss_ce_8: 0.4375  m1_loss_mask_8: 0.1668  m1_loss_dice_8: 1.11  m2_loss_ce: 0.4465  m2_loss_mask: 0.1633  m2_loss_dice: 1.093  m2_loss_ce_0: 0.5662  m2_loss_mask_0: 0.1874  m2_loss_dice_0: 1.262  m2_loss_ce_1: 0.5866  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.257  m2_loss_ce_2: 0.5492  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.199  m2_loss_ce_3: 0.5143  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.135  m2_loss_ce_4: 0.4815  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.155  m2_loss_ce_5: 0.4604  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.158  m2_loss_ce_6: 0.4431  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.101  m2_loss_ce_7: 0.4494  m2_loss_mask_7: 0.164  m2_loss_dice_7: 1.089  m2_loss_ce_8: 0.4488  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.129  com_loss_ce: 1.743  com_loss_mask: 0.6926  com_loss_dice: 0.9692    time: 1.4220  last_time: 1.3646  data_time: 0.0429  last_data_time: 0.0452   lr: 0.0001  max_mem: 35303M
[09/08 22:39:37] d2.utils.events INFO:  eta: 0:45:29  iter: 59  total_loss: 40.47  m1_loss_ce: 0.4704  m1_loss_mask: 0.1614  m1_loss_dice: 1.121  m1_loss_ce_0: 0.5677  m1_loss_mask_0: 0.1942  m1_loss_dice_0: 1.347  m1_loss_ce_1: 0.5756  m1_loss_mask_1: 0.1786  m1_loss_dice_1: 1.278  m1_loss_ce_2: 0.5524  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.195  m1_loss_ce_3: 0.5019  m1_loss_mask_3: 0.1649  m1_loss_dice_3: 1.17  m1_loss_ce_4: 0.4716  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.152  m1_loss_ce_5: 0.4506  m1_loss_mask_5: 0.1627  m1_loss_dice_5: 1.166  m1_loss_ce_6: 0.4231  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.144  m1_loss_ce_7: 0.4607  m1_loss_mask_7: 0.1633  m1_loss_dice_7: 1.141  m1_loss_ce_8: 0.4462  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.143  m2_loss_ce: 0.4545  m2_loss_mask: 0.1633  m2_loss_dice: 1.127  m2_loss_ce_0: 0.5763  m2_loss_mask_0: 0.1896  m2_loss_dice_0: 1.353  m2_loss_ce_1: 0.6322  m2_loss_mask_1: 0.1737  m2_loss_dice_1: 1.317  m2_loss_ce_2: 0.5654  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.257  m2_loss_ce_3: 0.5383  m2_loss_mask_3: 0.1652  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.5078  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.195  m2_loss_ce_5: 0.4949  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.176  m2_loss_ce_6: 0.4643  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.158  m2_loss_ce_7: 0.477  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.145  m2_loss_ce_8: 0.4779  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.133  com_loss_ce: 1.738  com_loss_mask: 0.6926  com_loss_dice: 0.9719    time: 1.4221  last_time: 1.4496  data_time: 0.0423  last_data_time: 0.0728   lr: 0.0001  max_mem: 35303M
[09/08 22:40:06] d2.utils.events INFO:  eta: 0:45:11  iter: 79  total_loss: 43.17  m1_loss_ce: 0.5021  m1_loss_mask: 0.1575  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5632  m1_loss_mask_0: 0.1823  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.64  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.5656  m1_loss_mask_2: 0.1636  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.5023  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.5136  m1_loss_mask_4: 0.163  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.4518  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.5088  m1_loss_mask_6: 0.1608  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4886  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4752  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.215  m2_loss_ce: 0.5198  m2_loss_mask: 0.1582  m2_loss_dice: 1.191  m2_loss_ce_0: 0.5967  m2_loss_mask_0: 0.1783  m2_loss_dice_0: 1.391  m2_loss_ce_1: 0.6611  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.6039  m2_loss_mask_2: 0.1653  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5728  m2_loss_mask_3: 0.1614  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.5965  m2_loss_mask_4: 0.1596  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.5241  m2_loss_mask_5: 0.1592  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.5333  m2_loss_mask_6: 0.1593  m2_loss_dice_6: 1.201  m2_loss_ce_7: 0.5323  m2_loss_mask_7: 0.1586  m2_loss_dice_7: 1.171  m2_loss_ce_8: 0.5504  m2_loss_mask_8: 0.1596  m2_loss_dice_8: 1.199  com_loss_ce: 1.763  com_loss_mask: 0.6925  com_loss_dice: 0.9736    time: 1.4283  last_time: 1.4081  data_time: 0.0489  last_data_time: 0.0511   lr: 0.0001  max_mem: 35303M
[09/08 22:40:35] d2.utils.events INFO:  eta: 0:45:00  iter: 99  total_loss: 41.17  m1_loss_ce: 0.4061  m1_loss_mask: 0.1611  m1_loss_dice: 1.219  m1_loss_ce_0: 0.528  m1_loss_mask_0: 0.1851  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.5747  m1_loss_mask_1: 0.1687  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.5113  m1_loss_mask_2: 0.1658  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.4338  m1_loss_mask_3: 0.1704  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.4239  m1_loss_mask_4: 0.1711  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.4337  m1_loss_mask_5: 0.1658  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.4059  m1_loss_mask_6: 0.1687  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.4201  m1_loss_mask_7: 0.1655  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4383  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.24  m2_loss_ce: 0.4386  m2_loss_mask: 0.1591  m2_loss_dice: 1.176  m2_loss_ce_0: 0.5602  m2_loss_mask_0: 0.185  m2_loss_dice_0: 1.374  m2_loss_ce_1: 0.6186  m2_loss_mask_1: 0.1677  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5474  m2_loss_mask_2: 0.1581  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5206  m2_loss_mask_3: 0.159  m2_loss_dice_3: 1.229  m2_loss_ce_4: 0.491  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.4946  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.233  m2_loss_ce_6: 0.4544  m2_loss_mask_6: 0.1596  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4689  m2_loss_mask_7: 0.1557  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.4548  m2_loss_mask_8: 0.1577  m2_loss_dice_8: 1.199  com_loss_ce: 1.766  com_loss_mask: 0.6926  com_loss_dice: 0.9721    time: 1.4315  last_time: 1.4059  data_time: 0.0551  last_data_time: 0.0620   lr: 0.0001  max_mem: 35303M
[09/08 22:41:04] d2.utils.events INFO:  eta: 0:44:36  iter: 119  total_loss: 40.84  m1_loss_ce: 0.4275  m1_loss_mask: 0.1647  m1_loss_dice: 1.103  m1_loss_ce_0: 0.5315  m1_loss_mask_0: 0.1873  m1_loss_dice_0: 1.3  m1_loss_ce_1: 0.6163  m1_loss_mask_1: 0.1774  m1_loss_dice_1: 1.262  m1_loss_ce_2: 0.5127  m1_loss_mask_2: 0.1677  m1_loss_dice_2: 1.185  m1_loss_ce_3: 0.4779  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.125  m1_loss_ce_4: 0.4506  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.13  m1_loss_ce_5: 0.4303  m1_loss_mask_5: 0.1664  m1_loss_dice_5: 1.15  m1_loss_ce_6: 0.4325  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.099  m1_loss_ce_7: 0.4362  m1_loss_mask_7: 0.1652  m1_loss_dice_7: 1.122  m1_loss_ce_8: 0.4346  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.125  m2_loss_ce: 0.4556  m2_loss_mask: 0.1606  m2_loss_dice: 1.079  m2_loss_ce_0: 0.5326  m2_loss_mask_0: 0.1826  m2_loss_dice_0: 1.279  m2_loss_ce_1: 0.5888  m2_loss_mask_1: 0.1727  m2_loss_dice_1: 1.254  m2_loss_ce_2: 0.5413  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.201  m2_loss_ce_3: 0.4692  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.148  m2_loss_ce_4: 0.4761  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.141  m2_loss_ce_5: 0.4461  m2_loss_mask_5: 0.1598  m2_loss_dice_5: 1.124  m2_loss_ce_6: 0.4414  m2_loss_mask_6: 0.1609  m2_loss_dice_6: 1.111  m2_loss_ce_7: 0.4295  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.091  m2_loss_ce_8: 0.4398  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.085  com_loss_ce: 1.742  com_loss_mask: 0.6926  com_loss_dice: 0.9695    time: 1.4300  last_time: 1.3767  data_time: 0.0554  last_data_time: 0.0382   lr: 0.0001  max_mem: 35303M
[09/08 22:41:33] d2.utils.events INFO:  eta: 0:44:11  iter: 139  total_loss: 42.61  m1_loss_ce: 0.4879  m1_loss_mask: 0.1519  m1_loss_dice: 1.199  m1_loss_ce_0: 0.5645  m1_loss_mask_0: 0.1788  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.6458  m1_loss_mask_1: 0.1638  m1_loss_dice_1: 1.391  m1_loss_ce_2: 0.6034  m1_loss_mask_2: 0.1601  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5157  m1_loss_mask_3: 0.1585  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.4847  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.4845  m1_loss_mask_5: 0.1538  m1_loss_dice_5: 1.226  m1_loss_ce_6: 0.4709  m1_loss_mask_6: 0.1549  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.4644  m1_loss_mask_7: 0.1555  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4645  m1_loss_mask_8: 0.1548  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5015  m2_loss_mask: 0.1516  m2_loss_dice: 1.169  m2_loss_ce_0: 0.5981  m2_loss_mask_0: 0.1715  m2_loss_dice_0: 1.404  m2_loss_ce_1: 0.6991  m2_loss_mask_1: 0.1654  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.6373  m2_loss_mask_2: 0.1553  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5576  m2_loss_mask_3: 0.1506  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5257  m2_loss_mask_4: 0.1517  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.5138  m2_loss_mask_5: 0.1498  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.5234  m2_loss_mask_6: 0.1496  m2_loss_dice_6: 1.189  m2_loss_ce_7: 0.5094  m2_loss_mask_7: 0.1507  m2_loss_dice_7: 1.165  m2_loss_ce_8: 0.5304  m2_loss_mask_8: 0.1508  m2_loss_dice_8: 1.182  com_loss_ce: 1.772  com_loss_mask: 0.6926  com_loss_dice: 0.9748    time: 1.4302  last_time: 1.3264  data_time: 0.0560  last_data_time: 0.0379   lr: 0.0001  max_mem: 35303M
[09/08 22:42:02] d2.utils.events INFO:  eta: 0:43:47  iter: 159  total_loss: 41.13  m1_loss_ce: 0.4576  m1_loss_mask: 0.1717  m1_loss_dice: 1.108  m1_loss_ce_0: 0.5343  m1_loss_mask_0: 0.1997  m1_loss_dice_0: 1.338  m1_loss_ce_1: 0.594  m1_loss_mask_1: 0.1847  m1_loss_dice_1: 1.25  m1_loss_ce_2: 0.5254  m1_loss_mask_2: 0.1797  m1_loss_dice_2: 1.205  m1_loss_ce_3: 0.4621  m1_loss_mask_3: 0.1747  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.4569  m1_loss_mask_4: 0.1755  m1_loss_dice_4: 1.137  m1_loss_ce_5: 0.4497  m1_loss_mask_5: 0.1765  m1_loss_dice_5: 1.149  m1_loss_ce_6: 0.4154  m1_loss_mask_6: 0.1722  m1_loss_dice_6: 1.143  m1_loss_ce_7: 0.3953  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4351  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.153  m2_loss_ce: 0.4431  m2_loss_mask: 0.17  m2_loss_dice: 1.119  m2_loss_ce_0: 0.5489  m2_loss_mask_0: 0.1918  m2_loss_dice_0: 1.339  m2_loss_ce_1: 0.5856  m2_loss_mask_1: 0.1826  m2_loss_dice_1: 1.289  m2_loss_ce_2: 0.5603  m2_loss_mask_2: 0.1722  m2_loss_dice_2: 1.209  m2_loss_ce_3: 0.4775  m2_loss_mask_3: 0.1741  m2_loss_dice_3: 1.201  m2_loss_ce_4: 0.4802  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.149  m2_loss_ce_5: 0.4454  m2_loss_mask_5: 0.169  m2_loss_dice_5: 1.172  m2_loss_ce_6: 0.4782  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.122  m2_loss_ce_7: 0.4623  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.144  m2_loss_ce_8: 0.4478  m2_loss_mask_8: 0.1693  m2_loss_dice_8: 1.113  com_loss_ce: 1.741  com_loss_mask: 0.6926  com_loss_dice: 0.9709    time: 1.4311  last_time: 1.4613  data_time: 0.0523  last_data_time: 0.0433   lr: 0.0001  max_mem: 35303M
[09/08 22:42:30] d2.utils.events INFO:  eta: 0:43:21  iter: 179  total_loss: 42.09  m1_loss_ce: 0.4625  m1_loss_mask: 0.1508  m1_loss_dice: 1.185  m1_loss_ce_0: 0.5396  m1_loss_mask_0: 0.1796  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6277  m1_loss_mask_1: 0.1605  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5249  m1_loss_mask_2: 0.1551  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.52  m1_loss_mask_3: 0.1524  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4794  m1_loss_mask_4: 0.1509  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.4941  m1_loss_mask_5: 0.1524  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4652  m1_loss_mask_6: 0.1523  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.4594  m1_loss_mask_7: 0.1507  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4512  m1_loss_mask_8: 0.1521  m1_loss_dice_8: 1.186  m2_loss_ce: 0.4733  m2_loss_mask: 0.1537  m2_loss_dice: 1.172  m2_loss_ce_0: 0.5538  m2_loss_mask_0: 0.1827  m2_loss_dice_0: 1.391  m2_loss_ce_1: 0.6655  m2_loss_mask_1: 0.1627  m2_loss_dice_1: 1.341  m2_loss_ce_2: 0.5805  m2_loss_mask_2: 0.1561  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5415  m2_loss_mask_3: 0.1532  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5046  m2_loss_mask_4: 0.1512  m2_loss_dice_4: 1.184  m2_loss_ce_5: 0.4851  m2_loss_mask_5: 0.1519  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.4735  m2_loss_mask_6: 0.151  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4579  m2_loss_mask_7: 0.1515  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.4605  m2_loss_mask_8: 0.1508  m2_loss_dice_8: 1.162  com_loss_ce: 1.767  com_loss_mask: 0.6926  com_loss_dice: 0.9749    time: 1.4321  last_time: 1.5324  data_time: 0.0543  last_data_time: 0.0647   lr: 0.0001  max_mem: 35303M
[09/08 22:43:00] d2.utils.events INFO:  eta: 0:42:54  iter: 199  total_loss: 41.06  m1_loss_ce: 0.4554  m1_loss_mask: 0.1617  m1_loss_dice: 1.165  m1_loss_ce_0: 0.5407  m1_loss_mask_0: 0.185  m1_loss_dice_0: 1.395  m1_loss_ce_1: 0.6239  m1_loss_mask_1: 0.1774  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5311  m1_loss_mask_2: 0.1726  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.4719  m1_loss_mask_3: 0.176  m1_loss_dice_3: 1.191  m1_loss_ce_4: 0.4807  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.19  m1_loss_ce_5: 0.459  m1_loss_mask_5: 0.1625  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.4271  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4428  m1_loss_mask_7: 0.1637  m1_loss_dice_7: 1.159  m1_loss_ce_8: 0.4627  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.172  m2_loss_ce: 0.4662  m2_loss_mask: 0.1668  m2_loss_dice: 1.161  m2_loss_ce_0: 0.5802  m2_loss_mask_0: 0.1916  m2_loss_dice_0: 1.352  m2_loss_ce_1: 0.6496  m2_loss_mask_1: 0.1774  m2_loss_dice_1: 1.306  m2_loss_ce_2: 0.5621  m2_loss_mask_2: 0.1666  m2_loss_dice_2: 1.234  m2_loss_ce_3: 0.4895  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.199  m2_loss_ce_4: 0.4919  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.474  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.195  m2_loss_ce_6: 0.4685  m2_loss_mask_6: 0.1652  m2_loss_dice_6: 1.139  m2_loss_ce_7: 0.4541  m2_loss_mask_7: 0.1663  m2_loss_dice_7: 1.155  m2_loss_ce_8: 0.4493  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.178  com_loss_ce: 1.738  com_loss_mask: 0.6926  com_loss_dice: 0.9725    time: 1.4347  last_time: 1.4290  data_time: 0.0564  last_data_time: 0.0482   lr: 0.0001  max_mem: 35303M
[09/08 22:43:28] d2.utils.events INFO:  eta: 0:42:25  iter: 219  total_loss: 41.33  m1_loss_ce: 0.4657  m1_loss_mask: 0.1475  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5322  m1_loss_mask_0: 0.1673  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.6092  m1_loss_mask_1: 0.1608  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5223  m1_loss_mask_2: 0.1573  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.5015  m1_loss_mask_3: 0.1547  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.4743  m1_loss_mask_4: 0.1513  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4626  m1_loss_mask_5: 0.1514  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.4437  m1_loss_mask_6: 0.1484  m1_loss_dice_6: 1.19  m1_loss_ce_7: 0.4345  m1_loss_mask_7: 0.1487  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4313  m1_loss_mask_8: 0.1488  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4609  m2_loss_mask: 0.1432  m2_loss_dice: 1.173  m2_loss_ce_0: 0.58  m2_loss_mask_0: 0.1696  m2_loss_dice_0: 1.38  m2_loss_ce_1: 0.6546  m2_loss_mask_1: 0.1562  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.5778  m2_loss_mask_2: 0.1443  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5096  m2_loss_mask_3: 0.141  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.4684  m2_loss_mask_4: 0.1415  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.4879  m2_loss_mask_5: 0.1399  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.449  m2_loss_mask_6: 0.1424  m2_loss_dice_6: 1.157  m2_loss_ce_7: 0.4349  m2_loss_mask_7: 0.1435  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.4658  m2_loss_mask_8: 0.143  m2_loss_dice_8: 1.174  com_loss_ce: 1.762  com_loss_mask: 0.6926  com_loss_dice: 0.9731    time: 1.4340  last_time: 1.4707  data_time: 0.0535  last_data_time: 0.0483   lr: 0.0001  max_mem: 35303M
[09/08 22:43:57] d2.utils.events INFO:  eta: 0:41:55  iter: 239  total_loss: 41.18  m1_loss_ce: 0.4441  m1_loss_mask: 0.1613  m1_loss_dice: 1.181  m1_loss_ce_0: 0.5843  m1_loss_mask_0: 0.185  m1_loss_dice_0: 1.352  m1_loss_ce_1: 0.6115  m1_loss_mask_1: 0.1751  m1_loss_dice_1: 1.29  m1_loss_ce_2: 0.5597  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.225  m1_loss_ce_3: 0.5211  m1_loss_mask_3: 0.1683  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4909  m1_loss_mask_4: 0.1648  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.4471  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.158  m1_loss_ce_6: 0.4616  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4369  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4315  m1_loss_mask_8: 0.1617  m1_loss_dice_8: 1.161  m2_loss_ce: 0.4633  m2_loss_mask: 0.1609  m2_loss_dice: 1.155  m2_loss_ce_0: 0.5867  m2_loss_mask_0: 0.1817  m2_loss_dice_0: 1.37  m2_loss_ce_1: 0.6805  m2_loss_mask_1: 0.1717  m2_loss_dice_1: 1.3  m2_loss_ce_2: 0.5734  m2_loss_mask_2: 0.163  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.509  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.218  m2_loss_ce_4: 0.506  m2_loss_mask_4: 0.1578  m2_loss_dice_4: 1.172  m2_loss_ce_5: 0.4673  m2_loss_mask_5: 0.1578  m2_loss_dice_5: 1.192  m2_loss_ce_6: 0.4774  m2_loss_mask_6: 0.1599  m2_loss_dice_6: 1.143  m2_loss_ce_7: 0.4722  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.165  m2_loss_ce_8: 0.4673  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.152  com_loss_ce: 1.75  com_loss_mask: 0.6926  com_loss_dice: 0.9718    time: 1.4334  last_time: 1.3829  data_time: 0.0502  last_data_time: 0.0441   lr: 0.0001  max_mem: 35303M
[09/08 22:44:27] d2.utils.events INFO:  eta: 0:41:34  iter: 259  total_loss: 44.18  m1_loss_ce: 0.4922  m1_loss_mask: 0.1473  m1_loss_dice: 1.309  m1_loss_ce_0: 0.6084  m1_loss_mask_0: 0.1721  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.6579  m1_loss_mask_1: 0.1629  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.5852  m1_loss_mask_2: 0.1529  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.5542  m1_loss_mask_3: 0.1539  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.5277  m1_loss_mask_4: 0.1526  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.4966  m1_loss_mask_5: 0.1503  m1_loss_dice_5: 1.27  m1_loss_ce_6: 0.5072  m1_loss_mask_6: 0.15  m1_loss_dice_6: 1.285  m1_loss_ce_7: 0.5041  m1_loss_mask_7: 0.1502  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.5063  m1_loss_mask_8: 0.1494  m1_loss_dice_8: 1.29  m2_loss_ce: 0.4804  m2_loss_mask: 0.1476  m2_loss_dice: 1.256  m2_loss_ce_0: 0.6118  m2_loss_mask_0: 0.1637  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.6722  m2_loss_mask_1: 0.1543  m2_loss_dice_1: 1.419  m2_loss_ce_2: 0.6318  m2_loss_mask_2: 0.1468  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5381  m2_loss_mask_3: 0.1484  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.514  m2_loss_mask_4: 0.1491  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5135  m2_loss_mask_5: 0.1438  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5016  m2_loss_mask_6: 0.1471  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.5068  m2_loss_mask_7: 0.1487  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.4952  m2_loss_mask_8: 0.1482  m2_loss_dice_8: 1.227  com_loss_ce: 1.789  com_loss_mask: 0.6925  com_loss_dice: 0.9736    time: 1.4363  last_time: 1.4112  data_time: 0.0591  last_data_time: 0.0530   lr: 0.0001  max_mem: 36242M
[09/08 22:44:55] d2.utils.events INFO:  eta: 0:41:06  iter: 279  total_loss: 41.03  m1_loss_ce: 0.4423  m1_loss_mask: 0.1608  m1_loss_dice: 1.219  m1_loss_ce_0: 0.4938  m1_loss_mask_0: 0.188  m1_loss_dice_0: 1.378  m1_loss_ce_1: 0.5577  m1_loss_mask_1: 0.1738  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.4948  m1_loss_mask_2: 0.1657  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.452  m1_loss_mask_3: 0.1603  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4274  m1_loss_mask_4: 0.1608  m1_loss_dice_4: 1.22  m1_loss_ce_5: 0.4177  m1_loss_mask_5: 0.1591  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.3705  m1_loss_mask_6: 0.1612  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.3959  m1_loss_mask_7: 0.1564  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.3902  m1_loss_mask_8: 0.1574  m1_loss_dice_8: 1.221  m2_loss_ce: 0.4198  m2_loss_mask: 0.1648  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5355  m2_loss_mask_0: 0.1872  m2_loss_dice_0: 1.371  m2_loss_ce_1: 0.6193  m2_loss_mask_1: 0.1765  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.5332  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5302  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.494  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.4692  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4484  m2_loss_mask_6: 0.1628  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.4421  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.4456  m2_loss_mask_8: 0.1639  m2_loss_dice_8: 1.191  com_loss_ce: 1.732  com_loss_mask: 0.6925  com_loss_dice: 0.9733    time: 1.4363  last_time: 1.4708  data_time: 0.0552  last_data_time: 0.0453   lr: 0.0001  max_mem: 36242M
[09/08 22:45:24] d2.utils.events INFO:  eta: 0:40:37  iter: 299  total_loss: 39.67  m1_loss_ce: 0.4417  m1_loss_mask: 0.1713  m1_loss_dice: 1.118  m1_loss_ce_0: 0.5427  m1_loss_mask_0: 0.196  m1_loss_dice_0: 1.287  m1_loss_ce_1: 0.5456  m1_loss_mask_1: 0.1915  m1_loss_dice_1: 1.24  m1_loss_ce_2: 0.5384  m1_loss_mask_2: 0.1786  m1_loss_dice_2: 1.186  m1_loss_ce_3: 0.491  m1_loss_mask_3: 0.175  m1_loss_dice_3: 1.133  m1_loss_ce_4: 0.4755  m1_loss_mask_4: 0.1708  m1_loss_dice_4: 1.154  m1_loss_ce_5: 0.4603  m1_loss_mask_5: 0.1679  m1_loss_dice_5: 1.14  m1_loss_ce_6: 0.4403  m1_loss_mask_6: 0.174  m1_loss_dice_6: 1.132  m1_loss_ce_7: 0.447  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.146  m1_loss_ce_8: 0.4713  m1_loss_mask_8: 0.173  m1_loss_dice_8: 1.127  m2_loss_ce: 0.431  m2_loss_mask: 0.1716  m2_loss_dice: 1.121  m2_loss_ce_0: 0.548  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.262  m2_loss_ce_1: 0.6275  m2_loss_mask_1: 0.1752  m2_loss_dice_1: 1.215  m2_loss_ce_2: 0.552  m2_loss_mask_2: 0.1737  m2_loss_dice_2: 1.17  m2_loss_ce_3: 0.4765  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.11  m2_loss_ce_4: 0.478  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.113  m2_loss_ce_5: 0.4665  m2_loss_mask_5: 0.1687  m2_loss_dice_5: 1.102  m2_loss_ce_6: 0.4144  m2_loss_mask_6: 0.1698  m2_loss_dice_6: 1.131  m2_loss_ce_7: 0.4452  m2_loss_mask_7: 0.1709  m2_loss_dice_7: 1.122  m2_loss_ce_8: 0.4341  m2_loss_mask_8: 0.1709  m2_loss_dice_8: 1.088  com_loss_ce: 1.737  com_loss_mask: 0.6926  com_loss_dice: 0.9709    time: 1.4348  last_time: 1.4128  data_time: 0.0475  last_data_time: 0.0430   lr: 0.0001  max_mem: 36242M
[09/08 22:45:53] d2.utils.events INFO:  eta: 0:40:11  iter: 319  total_loss: 42.35  m1_loss_ce: 0.4597  m1_loss_mask: 0.1568  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5522  m1_loss_mask_0: 0.1888  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.5836  m1_loss_mask_1: 0.1688  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5277  m1_loss_mask_2: 0.162  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5113  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.4815  m1_loss_mask_4: 0.1586  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.477  m1_loss_mask_5: 0.1586  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.4302  m1_loss_mask_6: 0.1579  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4539  m1_loss_mask_7: 0.1569  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.4307  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.233  m2_loss_ce: 0.476  m2_loss_mask: 0.153  m2_loss_dice: 1.204  m2_loss_ce_0: 0.5632  m2_loss_mask_0: 0.1792  m2_loss_dice_0: 1.404  m2_loss_ce_1: 0.6468  m2_loss_mask_1: 0.168  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5895  m2_loss_mask_2: 0.1584  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.547  m2_loss_mask_3: 0.1545  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.4904  m2_loss_mask_4: 0.152  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.4847  m2_loss_mask_5: 0.1505  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.5194  m2_loss_mask_6: 0.152  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.46  m2_loss_mask_7: 0.1523  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.47  m2_loss_mask_8: 0.1509  m2_loss_dice_8: 1.191  com_loss_ce: 1.769  com_loss_mask: 0.6925  com_loss_dice: 0.9732    time: 1.4363  last_time: 1.5154  data_time: 0.0568  last_data_time: 0.0508   lr: 0.0001  max_mem: 36242M
[09/08 22:46:22] d2.utils.events INFO:  eta: 0:39:42  iter: 339  total_loss: 41.82  m1_loss_ce: 0.4118  m1_loss_mask: 0.1515  m1_loss_dice: 1.168  m1_loss_ce_0: 0.5125  m1_loss_mask_0: 0.1721  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.5979  m1_loss_mask_1: 0.1601  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.5655  m1_loss_mask_2: 0.1531  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.4926  m1_loss_mask_3: 0.154  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4488  m1_loss_mask_4: 0.1529  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.4389  m1_loss_mask_5: 0.1519  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4278  m1_loss_mask_6: 0.1525  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.3996  m1_loss_mask_7: 0.1524  m1_loss_dice_7: 1.234  m1_loss_ce_8: 0.4084  m1_loss_mask_8: 0.1516  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4657  m2_loss_mask: 0.146  m2_loss_dice: 1.228  m2_loss_ce_0: 0.5792  m2_loss_mask_0: 0.1661  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6793  m2_loss_mask_1: 0.1531  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.583  m2_loss_mask_2: 0.1493  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5521  m2_loss_mask_3: 0.1446  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.507  m2_loss_mask_4: 0.143  m2_loss_dice_4: 1.227  m2_loss_ce_5: 0.4825  m2_loss_mask_5: 0.1418  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.4736  m2_loss_mask_6: 0.1433  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4519  m2_loss_mask_7: 0.1461  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.4632  m2_loss_mask_8: 0.1455  m2_loss_dice_8: 1.214  com_loss_ce: 1.785  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.4364  last_time: 1.4447  data_time: 0.0527  last_data_time: 0.0453   lr: 0.0001  max_mem: 36242M
[09/08 22:46:51] d2.utils.events INFO:  eta: 0:39:16  iter: 359  total_loss: 44.26  m1_loss_ce: 0.5087  m1_loss_mask: 0.1657  m1_loss_dice: 1.256  m1_loss_ce_0: 0.585  m1_loss_mask_0: 0.1875  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6042  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.417  m1_loss_ce_2: 0.5461  m1_loss_mask_2: 0.1647  m1_loss_dice_2: 1.345  m1_loss_ce_3: 0.4845  m1_loss_mask_3: 0.1655  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.4679  m1_loss_mask_4: 0.1666  m1_loss_dice_4: 1.299  m1_loss_ce_5: 0.4672  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.4644  m1_loss_mask_6: 0.1688  m1_loss_dice_6: 1.289  m1_loss_ce_7: 0.4747  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.272  m1_loss_ce_8: 0.507  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.322  m2_loss_ce: 0.4877  m2_loss_mask: 0.1629  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6049  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.6843  m2_loss_mask_1: 0.1668  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.6193  m2_loss_mask_2: 0.1659  m2_loss_dice_2: 1.344  m2_loss_ce_3: 0.5621  m2_loss_mask_3: 0.1639  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5301  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.252  m2_loss_ce_5: 0.516  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.298  m2_loss_ce_6: 0.5155  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.4884  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4943  m2_loss_mask_8: 0.1638  m2_loss_dice_8: 1.236  com_loss_ce: 1.787  com_loss_mask: 0.6925  com_loss_dice: 0.9747    time: 1.4376  last_time: 1.4111  data_time: 0.0580  last_data_time: 0.0520   lr: 0.0001  max_mem: 36242M
[09/08 22:47:20] d2.utils.events INFO:  eta: 0:38:46  iter: 379  total_loss: 39.54  m1_loss_ce: 0.3734  m1_loss_mask: 0.1551  m1_loss_dice: 1.123  m1_loss_ce_0: 0.5049  m1_loss_mask_0: 0.1823  m1_loss_dice_0: 1.323  m1_loss_ce_1: 0.598  m1_loss_mask_1: 0.1648  m1_loss_dice_1: 1.237  m1_loss_ce_2: 0.5192  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.177  m1_loss_ce_3: 0.4297  m1_loss_mask_3: 0.1601  m1_loss_dice_3: 1.158  m1_loss_ce_4: 0.4199  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.4032  m1_loss_mask_5: 0.1556  m1_loss_dice_5: 1.124  m1_loss_ce_6: 0.3719  m1_loss_mask_6: 0.1543  m1_loss_dice_6: 1.12  m1_loss_ce_7: 0.403  m1_loss_mask_7: 0.1558  m1_loss_dice_7: 1.126  m1_loss_ce_8: 0.385  m1_loss_mask_8: 0.1552  m1_loss_dice_8: 1.11  m2_loss_ce: 0.4263  m2_loss_mask: 0.1592  m2_loss_dice: 1.091  m2_loss_ce_0: 0.5497  m2_loss_mask_0: 0.1774  m2_loss_dice_0: 1.326  m2_loss_ce_1: 0.6146  m2_loss_mask_1: 0.17  m2_loss_dice_1: 1.245  m2_loss_ce_2: 0.5381  m2_loss_mask_2: 0.1584  m2_loss_dice_2: 1.177  m2_loss_ce_3: 0.5018  m2_loss_mask_3: 0.16  m2_loss_dice_3: 1.143  m2_loss_ce_4: 0.4629  m2_loss_mask_4: 0.1567  m2_loss_dice_4: 1.148  m2_loss_ce_5: 0.4818  m2_loss_mask_5: 0.1572  m2_loss_dice_5: 1.118  m2_loss_ce_6: 0.4174  m2_loss_mask_6: 0.1599  m2_loss_dice_6: 1.106  m2_loss_ce_7: 0.4352  m2_loss_mask_7: 0.1605  m2_loss_dice_7: 1.135  m2_loss_ce_8: 0.4273  m2_loss_mask_8: 0.1593  m2_loss_dice_8: 1.132  com_loss_ce: 1.755  com_loss_mask: 0.6926  com_loss_dice: 0.9706    time: 1.4374  last_time: 1.4229  data_time: 0.0528  last_data_time: 0.0673   lr: 0.0001  max_mem: 36242M
[09/08 22:47:49] d2.utils.events INFO:  eta: 0:38:16  iter: 399  total_loss: 40.62  m1_loss_ce: 0.4757  m1_loss_mask: 0.1536  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5521  m1_loss_mask_0: 0.1801  m1_loss_dice_0: 1.356  m1_loss_ce_1: 0.6244  m1_loss_mask_1: 0.1658  m1_loss_dice_1: 1.295  m1_loss_ce_2: 0.5703  m1_loss_mask_2: 0.1576  m1_loss_dice_2: 1.226  m1_loss_ce_3: 0.4824  m1_loss_mask_3: 0.1576  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.4662  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4491  m1_loss_mask_5: 0.1543  m1_loss_dice_5: 1.183  m1_loss_ce_6: 0.4508  m1_loss_mask_6: 0.1525  m1_loss_dice_6: 1.175  m1_loss_ce_7: 0.4631  m1_loss_mask_7: 0.1525  m1_loss_dice_7: 1.159  m1_loss_ce_8: 0.4582  m1_loss_mask_8: 0.1533  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4796  m2_loss_mask: 0.1577  m2_loss_dice: 1.167  m2_loss_ce_0: 0.6183  m2_loss_mask_0: 0.1729  m2_loss_dice_0: 1.335  m2_loss_ce_1: 0.674  m2_loss_mask_1: 0.1666  m2_loss_dice_1: 1.295  m2_loss_ce_2: 0.5532  m2_loss_mask_2: 0.1566  m2_loss_dice_2: 1.232  m2_loss_ce_3: 0.5145  m2_loss_mask_3: 0.1552  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5021  m2_loss_mask_4: 0.152  m2_loss_dice_4: 1.168  m2_loss_ce_5: 0.4727  m2_loss_mask_5: 0.1532  m2_loss_dice_5: 1.174  m2_loss_ce_6: 0.4989  m2_loss_mask_6: 0.1556  m2_loss_dice_6: 1.174  m2_loss_ce_7: 0.4463  m2_loss_mask_7: 0.1546  m2_loss_dice_7: 1.153  m2_loss_ce_8: 0.4582  m2_loss_mask_8: 0.1545  m2_loss_dice_8: 1.147  com_loss_ce: 1.755  com_loss_mask: 0.6925  com_loss_dice: 0.9739    time: 1.4373  last_time: 1.4063  data_time: 0.0525  last_data_time: 0.0728   lr: 0.0001  max_mem: 36242M
[09/08 22:48:18] d2.utils.events INFO:  eta: 0:37:49  iter: 419  total_loss: 39.66  m1_loss_ce: 0.4581  m1_loss_mask: 0.1526  m1_loss_dice: 1.141  m1_loss_ce_0: 0.5487  m1_loss_mask_0: 0.1836  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6128  m1_loss_mask_1: 0.1695  m1_loss_dice_1: 1.269  m1_loss_ce_2: 0.5387  m1_loss_mask_2: 0.1559  m1_loss_dice_2: 1.179  m1_loss_ce_3: 0.4405  m1_loss_mask_3: 0.1569  m1_loss_dice_3: 1.142  m1_loss_ce_4: 0.4445  m1_loss_mask_4: 0.1544  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.4332  m1_loss_mask_5: 0.1533  m1_loss_dice_5: 1.176  m1_loss_ce_6: 0.4344  m1_loss_mask_6: 0.1534  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.426  m1_loss_mask_7: 0.1534  m1_loss_dice_7: 1.129  m1_loss_ce_8: 0.444  m1_loss_mask_8: 0.1531  m1_loss_dice_8: 1.133  m2_loss_ce: 0.4293  m2_loss_mask: 0.1562  m2_loss_dice: 1.172  m2_loss_ce_0: 0.6071  m2_loss_mask_0: 0.1843  m2_loss_dice_0: 1.318  m2_loss_ce_1: 0.6565  m2_loss_mask_1: 0.1718  m2_loss_dice_1: 1.283  m2_loss_ce_2: 0.5609  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.187  m2_loss_ce_3: 0.5381  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.187  m2_loss_ce_4: 0.4834  m2_loss_mask_4: 0.1554  m2_loss_dice_4: 1.185  m2_loss_ce_5: 0.4782  m2_loss_mask_5: 0.1531  m2_loss_dice_5: 1.18  m2_loss_ce_6: 0.4924  m2_loss_mask_6: 0.1553  m2_loss_dice_6: 1.172  m2_loss_ce_7: 0.4624  m2_loss_mask_7: 0.1552  m2_loss_dice_7: 1.14  m2_loss_ce_8: 0.4622  m2_loss_mask_8: 0.1555  m2_loss_dice_8: 1.137  com_loss_ce: 1.775  com_loss_mask: 0.6926  com_loss_dice: 0.9728    time: 1.4378  last_time: 1.4671  data_time: 0.0607  last_data_time: 0.0449   lr: 0.0001  max_mem: 36242M
[09/08 22:48:46] d2.utils.events INFO:  eta: 0:37:18  iter: 439  total_loss: 40.59  m1_loss_ce: 0.4209  m1_loss_mask: 0.1686  m1_loss_dice: 1.197  m1_loss_ce_0: 0.5241  m1_loss_mask_0: 0.1947  m1_loss_dice_0: 1.355  m1_loss_ce_1: 0.5645  m1_loss_mask_1: 0.1847  m1_loss_dice_1: 1.259  m1_loss_ce_2: 0.5179  m1_loss_mask_2: 0.1746  m1_loss_dice_2: 1.243  m1_loss_ce_3: 0.4669  m1_loss_mask_3: 0.1764  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.4587  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.197  m1_loss_ce_5: 0.4288  m1_loss_mask_5: 0.1744  m1_loss_dice_5: 1.16  m1_loss_ce_6: 0.406  m1_loss_mask_6: 0.1734  m1_loss_dice_6: 1.17  m1_loss_ce_7: 0.412  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4005  m1_loss_mask_8: 0.1672  m1_loss_dice_8: 1.169  m2_loss_ce: 0.4584  m2_loss_mask: 0.1664  m2_loss_dice: 1.165  m2_loss_ce_0: 0.5757  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.32  m2_loss_ce_1: 0.6419  m2_loss_mask_1: 0.1763  m2_loss_dice_1: 1.292  m2_loss_ce_2: 0.5405  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.236  m2_loss_ce_3: 0.5193  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.179  m2_loss_ce_4: 0.4928  m2_loss_mask_4: 0.1645  m2_loss_dice_4: 1.195  m2_loss_ce_5: 0.4888  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.177  m2_loss_ce_6: 0.4374  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.185  m2_loss_ce_7: 0.4381  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.4597  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.181  com_loss_ce: 1.76  com_loss_mask: 0.6926  com_loss_dice: 0.9721    time: 1.4365  last_time: 1.4786  data_time: 0.0537  last_data_time: 0.0380   lr: 0.0001  max_mem: 36242M
[09/08 22:49:15] d2.utils.events INFO:  eta: 0:36:49  iter: 459  total_loss: 41.13  m1_loss_ce: 0.405  m1_loss_mask: 0.1554  m1_loss_dice: 1.125  m1_loss_ce_0: 0.5326  m1_loss_mask_0: 0.1848  m1_loss_dice_0: 1.376  m1_loss_ce_1: 0.5868  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.248  m1_loss_ce_2: 0.5154  m1_loss_mask_2: 0.1603  m1_loss_dice_2: 1.186  m1_loss_ce_3: 0.4683  m1_loss_mask_3: 0.1589  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.4291  m1_loss_mask_4: 0.1565  m1_loss_dice_4: 1.165  m1_loss_ce_5: 0.4611  m1_loss_mask_5: 0.1556  m1_loss_dice_5: 1.169  m1_loss_ce_6: 0.3975  m1_loss_mask_6: 0.1548  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.3883  m1_loss_mask_7: 0.155  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.4063  m1_loss_mask_8: 0.1553  m1_loss_dice_8: 1.162  m2_loss_ce: 0.4499  m2_loss_mask: 0.1552  m2_loss_dice: 1.142  m2_loss_ce_0: 0.5686  m2_loss_mask_0: 0.1807  m2_loss_dice_0: 1.324  m2_loss_ce_1: 0.6435  m2_loss_mask_1: 0.1686  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.5543  m2_loss_mask_2: 0.158  m2_loss_dice_2: 1.232  m2_loss_ce_3: 0.4889  m2_loss_mask_3: 0.1573  m2_loss_dice_3: 1.18  m2_loss_ce_4: 0.4784  m2_loss_mask_4: 0.1554  m2_loss_dice_4: 1.147  m2_loss_ce_5: 0.4725  m2_loss_mask_5: 0.1543  m2_loss_dice_5: 1.174  m2_loss_ce_6: 0.461  m2_loss_mask_6: 0.1543  m2_loss_dice_6: 1.178  m2_loss_ce_7: 0.4679  m2_loss_mask_7: 0.1556  m2_loss_dice_7: 1.103  m2_loss_ce_8: 0.4474  m2_loss_mask_8: 0.1561  m2_loss_dice_8: 1.154  com_loss_ce: 1.747  com_loss_mask: 0.6926  com_loss_dice: 0.9717    time: 1.4358  last_time: 1.4593  data_time: 0.0510  last_data_time: 0.0437   lr: 0.0001  max_mem: 36242M
[09/08 22:49:44] d2.utils.events INFO:  eta: 0:36:20  iter: 479  total_loss: 40.97  m1_loss_ce: 0.4365  m1_loss_mask: 0.1639  m1_loss_dice: 1.186  m1_loss_ce_0: 0.5096  m1_loss_mask_0: 0.1896  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.5854  m1_loss_mask_1: 0.1774  m1_loss_dice_1: 1.296  m1_loss_ce_2: 0.5229  m1_loss_mask_2: 0.1619  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.4638  m1_loss_mask_3: 0.1614  m1_loss_dice_3: 1.213  m1_loss_ce_4: 0.4488  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4716  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.4513  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.4503  m1_loss_mask_7: 0.165  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.428  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4657  m2_loss_mask: 0.1679  m2_loss_dice: 1.189  m2_loss_ce_0: 0.5584  m2_loss_mask_0: 0.1938  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6453  m2_loss_mask_1: 0.1827  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.5876  m2_loss_mask_2: 0.1693  m2_loss_dice_2: 1.272  m2_loss_ce_3: 0.5169  m2_loss_mask_3: 0.165  m2_loss_dice_3: 1.191  m2_loss_ce_4: 0.4915  m2_loss_mask_4: 0.1634  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.4875  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.176  m2_loss_ce_6: 0.4549  m2_loss_mask_6: 0.1678  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.478  m2_loss_mask_7: 0.1688  m2_loss_dice_7: 1.174  m2_loss_ce_8: 0.4793  m2_loss_mask_8: 0.1708  m2_loss_dice_8: 1.194  com_loss_ce: 1.772  com_loss_mask: 0.6925  com_loss_dice: 0.9733    time: 1.4359  last_time: 1.4878  data_time: 0.0547  last_data_time: 0.0675   lr: 0.0001  max_mem: 36242M
[09/08 22:50:13] d2.utils.events INFO:  eta: 0:35:54  iter: 499  total_loss: 42.11  m1_loss_ce: 0.4541  m1_loss_mask: 0.146  m1_loss_dice: 1.186  m1_loss_ce_0: 0.5146  m1_loss_mask_0: 0.1698  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.5948  m1_loss_mask_1: 0.1564  m1_loss_dice_1: 1.289  m1_loss_ce_2: 0.5366  m1_loss_mask_2: 0.1482  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.5083  m1_loss_mask_3: 0.1507  m1_loss_dice_3: 1.176  m1_loss_ce_4: 0.4598  m1_loss_mask_4: 0.1506  m1_loss_dice_4: 1.209  m1_loss_ce_5: 0.4401  m1_loss_mask_5: 0.1488  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4319  m1_loss_mask_6: 0.1488  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.448  m1_loss_mask_7: 0.1497  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4484  m1_loss_mask_8: 0.1503  m1_loss_dice_8: 1.216  m2_loss_ce: 0.4655  m2_loss_mask: 0.1542  m2_loss_dice: 1.195  m2_loss_ce_0: 0.5906  m2_loss_mask_0: 0.172  m2_loss_dice_0: 1.368  m2_loss_ce_1: 0.6478  m2_loss_mask_1: 0.1577  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.5647  m2_loss_mask_2: 0.1545  m2_loss_dice_2: 1.272  m2_loss_ce_3: 0.5644  m2_loss_mask_3: 0.1506  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.4937  m2_loss_mask_4: 0.1507  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.5075  m2_loss_mask_5: 0.1482  m2_loss_dice_5: 1.206  m2_loss_ce_6: 0.504  m2_loss_mask_6: 0.1514  m2_loss_dice_6: 1.187  m2_loss_ce_7: 0.495  m2_loss_mask_7: 0.1498  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.4828  m2_loss_mask_8: 0.1489  m2_loss_dice_8: 1.183  com_loss_ce: 1.787  com_loss_mask: 0.6925  com_loss_dice: 0.9738    time: 1.4374  last_time: 1.5217  data_time: 0.0582  last_data_time: 0.0483   lr: 0.0001  max_mem: 36242M
[09/08 22:50:42] d2.utils.events INFO:  eta: 0:35:25  iter: 519  total_loss: 41.53  m1_loss_ce: 0.4792  m1_loss_mask: 0.1525  m1_loss_dice: 1.211  m1_loss_ce_0: 0.5563  m1_loss_mask_0: 0.1777  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.6065  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.5289  m1_loss_mask_2: 0.1572  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5069  m1_loss_mask_3: 0.153  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.4621  m1_loss_mask_4: 0.1522  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.4438  m1_loss_mask_5: 0.1523  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4513  m1_loss_mask_6: 0.1482  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4352  m1_loss_mask_7: 0.1479  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4483  m1_loss_mask_8: 0.1489  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4611  m2_loss_mask: 0.1508  m2_loss_dice: 1.198  m2_loss_ce_0: 0.5821  m2_loss_mask_0: 0.177  m2_loss_dice_0: 1.389  m2_loss_ce_1: 0.6835  m2_loss_mask_1: 0.1659  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.5839  m2_loss_mask_2: 0.1586  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.5491  m2_loss_mask_3: 0.1561  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.528  m2_loss_mask_4: 0.1532  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.4852  m2_loss_mask_5: 0.1501  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4913  m2_loss_mask_6: 0.1502  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.4508  m2_loss_mask_7: 0.1524  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.488  m2_loss_mask_8: 0.1528  m2_loss_dice_8: 1.203  com_loss_ce: 1.778  com_loss_mask: 0.6926  com_loss_dice: 0.9737    time: 1.4376  last_time: 1.4635  data_time: 0.0537  last_data_time: 0.0654   lr: 0.0001  max_mem: 36242M
[09/08 22:51:12] d2.utils.events INFO:  eta: 0:34:58  iter: 539  total_loss: 41.66  m1_loss_ce: 0.4432  m1_loss_mask: 0.1495  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5061  m1_loss_mask_0: 0.1757  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.5971  m1_loss_mask_1: 0.1554  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5313  m1_loss_mask_2: 0.1522  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.456  m1_loss_mask_3: 0.1521  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.4514  m1_loss_mask_4: 0.151  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.4319  m1_loss_mask_5: 0.1497  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.4343  m1_loss_mask_6: 0.1475  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.4416  m1_loss_mask_7: 0.1475  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4135  m1_loss_mask_8: 0.1474  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4697  m2_loss_mask: 0.1482  m2_loss_dice: 1.172  m2_loss_ce_0: 0.5835  m2_loss_mask_0: 0.1704  m2_loss_dice_0: 1.416  m2_loss_ce_1: 0.6661  m2_loss_mask_1: 0.1577  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.5626  m2_loss_mask_2: 0.1522  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5113  m2_loss_mask_3: 0.1489  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.479  m2_loss_mask_4: 0.1475  m2_loss_dice_4: 1.184  m2_loss_ce_5: 0.4495  m2_loss_mask_5: 0.1474  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.4716  m2_loss_mask_6: 0.1495  m2_loss_dice_6: 1.167  m2_loss_ce_7: 0.4606  m2_loss_mask_7: 0.1483  m2_loss_dice_7: 1.196  m2_loss_ce_8: 0.4477  m2_loss_mask_8: 0.1491  m2_loss_dice_8: 1.19  com_loss_ce: 1.781  com_loss_mask: 0.6925  com_loss_dice: 0.975    time: 1.4394  last_time: 1.4196  data_time: 0.0615  last_data_time: 0.0363   lr: 0.0001  max_mem: 36242M
[09/08 22:51:41] d2.utils.events INFO:  eta: 0:34:29  iter: 559  total_loss: 39.46  m1_loss_ce: 0.4545  m1_loss_mask: 0.1648  m1_loss_dice: 1.107  m1_loss_ce_0: 0.5679  m1_loss_mask_0: 0.1928  m1_loss_dice_0: 1.303  m1_loss_ce_1: 0.5968  m1_loss_mask_1: 0.1731  m1_loss_dice_1: 1.221  m1_loss_ce_2: 0.5387  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.17  m1_loss_ce_3: 0.4948  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.122  m1_loss_ce_4: 0.4702  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.086  m1_loss_ce_5: 0.4552  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.119  m1_loss_ce_6: 0.452  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.061  m1_loss_ce_7: 0.4526  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.071  m1_loss_ce_8: 0.4401  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.096  m2_loss_ce: 0.4556  m2_loss_mask: 0.1685  m2_loss_dice: 1.061  m2_loss_ce_0: 0.5729  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.306  m2_loss_ce_1: 0.6286  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.247  m2_loss_ce_2: 0.5185  m2_loss_mask_2: 0.17  m2_loss_dice_2: 1.21  m2_loss_ce_3: 0.5481  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.122  m2_loss_ce_4: 0.5008  m2_loss_mask_4: 0.1693  m2_loss_dice_4: 1.122  m2_loss_ce_5: 0.4827  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.137  m2_loss_ce_6: 0.4671  m2_loss_mask_6: 0.1684  m2_loss_dice_6: 1.12  m2_loss_ce_7: 0.4479  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.101  m2_loss_ce_8: 0.4515  m2_loss_mask_8: 0.1696  m2_loss_dice_8: 1.117  com_loss_ce: 1.745  com_loss_mask: 0.6926  com_loss_dice: 0.9724    time: 1.4388  last_time: 1.3610  data_time: 0.0520  last_data_time: 0.0437   lr: 0.0001  max_mem: 36242M
[09/08 22:52:09] d2.utils.events INFO:  eta: 0:34:00  iter: 579  total_loss: 41.32  m1_loss_ce: 0.4784  m1_loss_mask: 0.1643  m1_loss_dice: 1.165  m1_loss_ce_0: 0.5042  m1_loss_mask_0: 0.1918  m1_loss_dice_0: 1.389  m1_loss_ce_1: 0.5939  m1_loss_mask_1: 0.1736  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.5112  m1_loss_mask_2: 0.1682  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.4807  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4484  m1_loss_mask_4: 0.1676  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4384  m1_loss_mask_5: 0.1662  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4596  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.4258  m1_loss_mask_7: 0.1642  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.4483  m1_loss_mask_8: 0.1649  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4835  m2_loss_mask: 0.1656  m2_loss_dice: 1.173  m2_loss_ce_0: 0.5753  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.6793  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.5965  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5298  m2_loss_mask_3: 0.1689  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5089  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.212  m2_loss_ce_5: 0.5117  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.4892  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.173  m2_loss_ce_7: 0.5128  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.4901  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.177  com_loss_ce: 1.772  com_loss_mask: 0.6925  com_loss_dice: 0.9735    time: 1.4387  last_time: 1.4108  data_time: 0.0542  last_data_time: 0.0444   lr: 0.0001  max_mem: 36242M
[09/08 22:52:38] d2.utils.events INFO:  eta: 0:33:31  iter: 599  total_loss: 42.21  m1_loss_ce: 0.4707  m1_loss_mask: 0.1637  m1_loss_dice: 1.202  m1_loss_ce_0: 0.5094  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.6107  m1_loss_mask_1: 0.1777  m1_loss_dice_1: 1.317  m1_loss_ce_2: 0.5308  m1_loss_mask_2: 0.1716  m1_loss_dice_2: 1.284  m1_loss_ce_3: 0.4766  m1_loss_mask_3: 0.1675  m1_loss_dice_3: 1.202  m1_loss_ce_4: 0.4553  m1_loss_mask_4: 0.1657  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.4876  m1_loss_mask_5: 0.1653  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.4719  m1_loss_mask_6: 0.1657  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4541  m1_loss_mask_7: 0.1682  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.4623  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4726  m2_loss_mask: 0.1671  m2_loss_dice: 1.196  m2_loss_ce_0: 0.5921  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.649  m2_loss_mask_1: 0.1783  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.5903  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5396  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.251  m2_loss_ce_4: 0.5019  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.5068  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4909  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.4842  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4879  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.201  com_loss_ce: 1.768  com_loss_mask: 0.6925  com_loss_dice: 0.9741    time: 1.4388  last_time: 1.4201  data_time: 0.0584  last_data_time: 0.0377   lr: 0.0001  max_mem: 36242M
[09/08 22:53:07] d2.utils.events INFO:  eta: 0:33:02  iter: 619  total_loss: 41.97  m1_loss_ce: 0.4841  m1_loss_mask: 0.1458  m1_loss_dice: 1.212  m1_loss_ce_0: 0.571  m1_loss_mask_0: 0.1829  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6415  m1_loss_mask_1: 0.1612  m1_loss_dice_1: 1.307  m1_loss_ce_2: 0.5974  m1_loss_mask_2: 0.1501  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.5048  m1_loss_mask_3: 0.1467  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.4759  m1_loss_mask_4: 0.1453  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.463  m1_loss_mask_5: 0.1454  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.4813  m1_loss_mask_6: 0.1466  m1_loss_dice_6: 1.19  m1_loss_ce_7: 0.4797  m1_loss_mask_7: 0.1457  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.4475  m1_loss_mask_8: 0.1474  m1_loss_dice_8: 1.158  m2_loss_ce: 0.5072  m2_loss_mask: 0.1533  m2_loss_dice: 1.192  m2_loss_ce_0: 0.5756  m2_loss_mask_0: 0.1801  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6311  m2_loss_mask_1: 0.1667  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.5884  m2_loss_mask_2: 0.1595  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.54  m2_loss_mask_3: 0.1526  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5349  m2_loss_mask_4: 0.1549  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.5376  m2_loss_mask_5: 0.1517  m2_loss_dice_5: 1.191  m2_loss_ce_6: 0.5238  m2_loss_mask_6: 0.1481  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.5025  m2_loss_mask_7: 0.149  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.5252  m2_loss_mask_8: 0.153  m2_loss_dice_8: 1.165  com_loss_ce: 1.779  com_loss_mask: 0.6925  com_loss_dice: 0.972    time: 1.4389  last_time: 1.5094  data_time: 0.0547  last_data_time: 0.0554   lr: 0.0001  max_mem: 36242M
[09/08 22:53:36] d2.utils.events INFO:  eta: 0:32:31  iter: 639  total_loss: 41  m1_loss_ce: 0.4573  m1_loss_mask: 0.1675  m1_loss_dice: 1.152  m1_loss_ce_0: 0.5443  m1_loss_mask_0: 0.2006  m1_loss_dice_0: 1.341  m1_loss_ce_1: 0.6358  m1_loss_mask_1: 0.1823  m1_loss_dice_1: 1.258  m1_loss_ce_2: 0.5543  m1_loss_mask_2: 0.1721  m1_loss_dice_2: 1.215  m1_loss_ce_3: 0.4964  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.169  m1_loss_ce_4: 0.471  m1_loss_mask_4: 0.1701  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.4597  m1_loss_mask_5: 0.1661  m1_loss_dice_5: 1.149  m1_loss_ce_6: 0.4634  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.116  m1_loss_ce_7: 0.4586  m1_loss_mask_7: 0.1641  m1_loss_dice_7: 1.146  m1_loss_ce_8: 0.4504  m1_loss_mask_8: 0.1676  m1_loss_dice_8: 1.153  m2_loss_ce: 0.4682  m2_loss_mask: 0.1648  m2_loss_dice: 1.176  m2_loss_ce_0: 0.6047  m2_loss_mask_0: 0.1873  m2_loss_dice_0: 1.359  m2_loss_ce_1: 0.7023  m2_loss_mask_1: 0.1808  m2_loss_dice_1: 1.321  m2_loss_ce_2: 0.6001  m2_loss_mask_2: 0.1666  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.5533  m2_loss_mask_3: 0.1662  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.5274  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.191  m2_loss_ce_5: 0.4881  m2_loss_mask_5: 0.1638  m2_loss_dice_5: 1.184  m2_loss_ce_6: 0.4876  m2_loss_mask_6: 0.1656  m2_loss_dice_6: 1.148  m2_loss_ce_7: 0.4789  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4734  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.169  com_loss_ce: 1.767  com_loss_mask: 0.6925  com_loss_dice: 0.9713    time: 1.4377  last_time: 1.4247  data_time: 0.0477  last_data_time: 0.0752   lr: 0.0001  max_mem: 36242M
[09/08 22:54:05] d2.utils.events INFO:  eta: 0:32:03  iter: 659  total_loss: 42.85  m1_loss_ce: 0.449  m1_loss_mask: 0.1525  m1_loss_dice: 1.265  m1_loss_ce_0: 0.4928  m1_loss_mask_0: 0.1814  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.5576  m1_loss_mask_1: 0.1617  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.5008  m1_loss_mask_2: 0.1564  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.4694  m1_loss_mask_3: 0.1554  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.4822  m1_loss_mask_4: 0.1515  m1_loss_dice_4: 1.289  m1_loss_ce_5: 0.4527  m1_loss_mask_5: 0.1522  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.4619  m1_loss_mask_6: 0.1509  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.4461  m1_loss_mask_7: 0.154  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.4361  m1_loss_mask_8: 0.1554  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4354  m2_loss_mask: 0.1598  m2_loss_dice: 1.202  m2_loss_ce_0: 0.5648  m2_loss_mask_0: 0.1824  m2_loss_dice_0: 1.432  m2_loss_ce_1: 0.6178  m2_loss_mask_1: 0.1678  m2_loss_dice_1: 1.338  m2_loss_ce_2: 0.5842  m2_loss_mask_2: 0.1615  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.5222  m2_loss_mask_3: 0.1616  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.4969  m2_loss_mask_4: 0.1592  m2_loss_dice_4: 1.219  m2_loss_ce_5: 0.4611  m2_loss_mask_5: 0.1573  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4486  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.4666  m2_loss_mask_7: 0.1595  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.4781  m2_loss_mask_8: 0.1589  m2_loss_dice_8: 1.206  com_loss_ce: 1.763  com_loss_mask: 0.6925  com_loss_dice: 0.9741    time: 1.4385  last_time: 1.6142  data_time: 0.0578  last_data_time: 0.0815   lr: 0.0001  max_mem: 36242M
[09/08 22:54:34] d2.utils.events INFO:  eta: 0:31:34  iter: 679  total_loss: 40.83  m1_loss_ce: 0.4286  m1_loss_mask: 0.1585  m1_loss_dice: 1.167  m1_loss_ce_0: 0.5412  m1_loss_mask_0: 0.1867  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.609  m1_loss_mask_1: 0.1689  m1_loss_dice_1: 1.293  m1_loss_ce_2: 0.514  m1_loss_mask_2: 0.1599  m1_loss_dice_2: 1.227  m1_loss_ce_3: 0.4547  m1_loss_mask_3: 0.1589  m1_loss_dice_3: 1.15  m1_loss_ce_4: 0.463  m1_loss_mask_4: 0.1593  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4327  m1_loss_mask_5: 0.16  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.4534  m1_loss_mask_6: 0.1598  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.4342  m1_loss_mask_7: 0.1582  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.4248  m1_loss_mask_8: 0.1592  m1_loss_dice_8: 1.175  m2_loss_ce: 0.4452  m2_loss_mask: 0.1604  m2_loss_dice: 1.14  m2_loss_ce_0: 0.5524  m2_loss_mask_0: 0.1802  m2_loss_dice_0: 1.395  m2_loss_ce_1: 0.6525  m2_loss_mask_1: 0.1716  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.5551  m2_loss_mask_2: 0.1607  m2_loss_dice_2: 1.227  m2_loss_ce_3: 0.4933  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.2  m2_loss_ce_4: 0.4861  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4566  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.175  m2_loss_ce_6: 0.4544  m2_loss_mask_6: 0.1602  m2_loss_dice_6: 1.178  m2_loss_ce_7: 0.4415  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.175  m2_loss_ce_8: 0.4501  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.169  com_loss_ce: 1.762  com_loss_mask: 0.6926  com_loss_dice: 0.9706    time: 1.4385  last_time: 1.5045  data_time: 0.0499  last_data_time: 0.0389   lr: 0.0001  max_mem: 36242M
[09/08 22:55:02] d2.utils.events INFO:  eta: 0:31:05  iter: 699  total_loss: 39.85  m1_loss_ce: 0.4471  m1_loss_mask: 0.1591  m1_loss_dice: 1.137  m1_loss_ce_0: 0.5501  m1_loss_mask_0: 0.1807  m1_loss_dice_0: 1.307  m1_loss_ce_1: 0.5705  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.254  m1_loss_ce_2: 0.5188  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.215  m1_loss_ce_3: 0.4725  m1_loss_mask_3: 0.1618  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.4537  m1_loss_mask_4: 0.1589  m1_loss_dice_4: 1.131  m1_loss_ce_5: 0.4553  m1_loss_mask_5: 0.1591  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.4345  m1_loss_mask_6: 0.1579  m1_loss_dice_6: 1.147  m1_loss_ce_7: 0.459  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.134  m1_loss_ce_8: 0.4407  m1_loss_mask_8: 0.1588  m1_loss_dice_8: 1.142  m2_loss_ce: 0.4769  m2_loss_mask: 0.1527  m2_loss_dice: 1.138  m2_loss_ce_0: 0.5509  m2_loss_mask_0: 0.1828  m2_loss_dice_0: 1.319  m2_loss_ce_1: 0.6467  m2_loss_mask_1: 0.1692  m2_loss_dice_1: 1.271  m2_loss_ce_2: 0.5792  m2_loss_mask_2: 0.1588  m2_loss_dice_2: 1.216  m2_loss_ce_3: 0.5178  m2_loss_mask_3: 0.1596  m2_loss_dice_3: 1.182  m2_loss_ce_4: 0.4746  m2_loss_mask_4: 0.1558  m2_loss_dice_4: 1.168  m2_loss_ce_5: 0.5002  m2_loss_mask_5: 0.154  m2_loss_dice_5: 1.18  m2_loss_ce_6: 0.4752  m2_loss_mask_6: 0.1532  m2_loss_dice_6: 1.152  m2_loss_ce_7: 0.5008  m2_loss_mask_7: 0.155  m2_loss_dice_7: 1.158  m2_loss_ce_8: 0.5069  m2_loss_mask_8: 0.1556  m2_loss_dice_8: 1.144  com_loss_ce: 1.759  com_loss_mask: 0.6926  com_loss_dice: 0.9714    time: 1.4381  last_time: 1.3846  data_time: 0.0555  last_data_time: 0.0578   lr: 0.0001  max_mem: 36242M
[09/08 22:55:31] d2.utils.events INFO:  eta: 0:30:36  iter: 719  total_loss: 39.38  m1_loss_ce: 0.4441  m1_loss_mask: 0.1418  m1_loss_dice: 1.08  m1_loss_ce_0: 0.4941  m1_loss_mask_0: 0.1695  m1_loss_dice_0: 1.283  m1_loss_ce_1: 0.5928  m1_loss_mask_1: 0.1519  m1_loss_dice_1: 1.208  m1_loss_ce_2: 0.4964  m1_loss_mask_2: 0.1488  m1_loss_dice_2: 1.155  m1_loss_ce_3: 0.4617  m1_loss_mask_3: 0.1472  m1_loss_dice_3: 1.112  m1_loss_ce_4: 0.4559  m1_loss_mask_4: 0.145  m1_loss_dice_4: 1.095  m1_loss_ce_5: 0.4457  m1_loss_mask_5: 0.1471  m1_loss_dice_5: 1.088  m1_loss_ce_6: 0.411  m1_loss_mask_6: 0.143  m1_loss_dice_6: 1.094  m1_loss_ce_7: 0.396  m1_loss_mask_7: 0.145  m1_loss_dice_7: 1.051  m1_loss_ce_8: 0.4111  m1_loss_mask_8: 0.1443  m1_loss_dice_8: 1.08  m2_loss_ce: 0.4486  m2_loss_mask: 0.1451  m2_loss_dice: 1.077  m2_loss_ce_0: 0.5365  m2_loss_mask_0: 0.1728  m2_loss_dice_0: 1.289  m2_loss_ce_1: 0.6273  m2_loss_mask_1: 0.1588  m2_loss_dice_1: 1.196  m2_loss_ce_2: 0.5178  m2_loss_mask_2: 0.1495  m2_loss_dice_2: 1.158  m2_loss_ce_3: 0.4957  m2_loss_mask_3: 0.1467  m2_loss_dice_3: 1.128  m2_loss_ce_4: 0.4585  m2_loss_mask_4: 0.1475  m2_loss_dice_4: 1.092  m2_loss_ce_5: 0.4683  m2_loss_mask_5: 0.1454  m2_loss_dice_5: 1.102  m2_loss_ce_6: 0.4351  m2_loss_mask_6: 0.1449  m2_loss_dice_6: 1.068  m2_loss_ce_7: 0.4185  m2_loss_mask_7: 0.1449  m2_loss_dice_7: 1.094  m2_loss_ce_8: 0.4612  m2_loss_mask_8: 0.1439  m2_loss_dice_8: 1.093  com_loss_ce: 1.737  com_loss_mask: 0.6926  com_loss_dice: 0.9712    time: 1.4384  last_time: 1.4552  data_time: 0.0623  last_data_time: 0.0506   lr: 0.0001  max_mem: 36242M
[09/08 22:56:00] d2.utils.events INFO:  eta: 0:30:07  iter: 739  total_loss: 40.95  m1_loss_ce: 0.447  m1_loss_mask: 0.1623  m1_loss_dice: 1.137  m1_loss_ce_0: 0.5226  m1_loss_mask_0: 0.1839  m1_loss_dice_0: 1.333  m1_loss_ce_1: 0.5846  m1_loss_mask_1: 0.1701  m1_loss_dice_1: 1.23  m1_loss_ce_2: 0.5314  m1_loss_mask_2: 0.1648  m1_loss_dice_2: 1.209  m1_loss_ce_3: 0.4819  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.172  m1_loss_ce_4: 0.4796  m1_loss_mask_4: 0.162  m1_loss_dice_4: 1.145  m1_loss_ce_5: 0.4522  m1_loss_mask_5: 0.1669  m1_loss_dice_5: 1.133  m1_loss_ce_6: 0.4296  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.122  m1_loss_ce_7: 0.4157  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.146  m1_loss_ce_8: 0.4164  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.106  m2_loss_ce: 0.439  m2_loss_mask: 0.1625  m2_loss_dice: 1.14  m2_loss_ce_0: 0.5402  m2_loss_mask_0: 0.1786  m2_loss_dice_0: 1.335  m2_loss_ce_1: 0.6015  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.241  m2_loss_ce_2: 0.5655  m2_loss_mask_2: 0.1639  m2_loss_dice_2: 1.211  m2_loss_ce_3: 0.536  m2_loss_mask_3: 0.1615  m2_loss_dice_3: 1.18  m2_loss_ce_4: 0.463  m2_loss_mask_4: 0.1621  m2_loss_dice_4: 1.157  m2_loss_ce_5: 0.4444  m2_loss_mask_5: 0.1638  m2_loss_dice_5: 1.166  m2_loss_ce_6: 0.4419  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.143  m2_loss_ce_7: 0.4562  m2_loss_mask_7: 0.1653  m2_loss_dice_7: 1.126  m2_loss_ce_8: 0.4341  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.138  com_loss_ce: 1.762  com_loss_mask: 0.6925  com_loss_dice: 0.9714    time: 1.4380  last_time: 1.4442  data_time: 0.0478  last_data_time: 0.0405   lr: 0.0001  max_mem: 36242M
[09/08 22:56:29] d2.utils.events INFO:  eta: 0:29:38  iter: 759  total_loss: 40.51  m1_loss_ce: 0.4143  m1_loss_mask: 0.149  m1_loss_dice: 1.163  m1_loss_ce_0: 0.4916  m1_loss_mask_0: 0.1757  m1_loss_dice_0: 1.301  m1_loss_ce_1: 0.5671  m1_loss_mask_1: 0.1581  m1_loss_dice_1: 1.254  m1_loss_ce_2: 0.5017  m1_loss_mask_2: 0.1517  m1_loss_dice_2: 1.219  m1_loss_ce_3: 0.4468  m1_loss_mask_3: 0.1511  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.414  m1_loss_mask_4: 0.1521  m1_loss_dice_4: 1.147  m1_loss_ce_5: 0.4077  m1_loss_mask_5: 0.1507  m1_loss_dice_5: 1.178  m1_loss_ce_6: 0.4197  m1_loss_mask_6: 0.1515  m1_loss_dice_6: 1.156  m1_loss_ce_7: 0.3948  m1_loss_mask_7: 0.1528  m1_loss_dice_7: 1.132  m1_loss_ce_8: 0.4039  m1_loss_mask_8: 0.1518  m1_loss_dice_8: 1.142  m2_loss_ce: 0.4522  m2_loss_mask: 0.1526  m2_loss_dice: 1.155  m2_loss_ce_0: 0.5648  m2_loss_mask_0: 0.172  m2_loss_dice_0: 1.334  m2_loss_ce_1: 0.6485  m2_loss_mask_1: 0.1658  m2_loss_dice_1: 1.284  m2_loss_ce_2: 0.5495  m2_loss_mask_2: 0.1556  m2_loss_dice_2: 1.223  m2_loss_ce_3: 0.5158  m2_loss_mask_3: 0.1537  m2_loss_dice_3: 1.184  m2_loss_ce_4: 0.4839  m2_loss_mask_4: 0.1559  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.4687  m2_loss_mask_5: 0.151  m2_loss_dice_5: 1.169  m2_loss_ce_6: 0.4647  m2_loss_mask_6: 0.1549  m2_loss_dice_6: 1.149  m2_loss_ce_7: 0.4487  m2_loss_mask_7: 0.15  m2_loss_dice_7: 1.142  m2_loss_ce_8: 0.4529  m2_loss_mask_8: 0.1509  m2_loss_dice_8: 1.158  com_loss_ce: 1.756  com_loss_mask: 0.6926  com_loss_dice: 0.9736    time: 1.4379  last_time: 1.4472  data_time: 0.0538  last_data_time: 0.0598   lr: 0.0001  max_mem: 36242M
[09/08 22:56:58] d2.utils.events INFO:  eta: 0:29:09  iter: 779  total_loss: 41.56  m1_loss_ce: 0.4578  m1_loss_mask: 0.1391  m1_loss_dice: 1.18  m1_loss_ce_0: 0.5041  m1_loss_mask_0: 0.158  m1_loss_dice_0: 1.337  m1_loss_ce_1: 0.5969  m1_loss_mask_1: 0.1512  m1_loss_dice_1: 1.288  m1_loss_ce_2: 0.5365  m1_loss_mask_2: 0.1424  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.4836  m1_loss_mask_3: 0.1398  m1_loss_dice_3: 1.171  m1_loss_ce_4: 0.4561  m1_loss_mask_4: 0.1426  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.4409  m1_loss_mask_5: 0.1393  m1_loss_dice_5: 1.196  m1_loss_ce_6: 0.4594  m1_loss_mask_6: 0.1379  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.4321  m1_loss_mask_7: 0.1382  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.3983  m1_loss_mask_8: 0.1401  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4929  m2_loss_mask: 0.1463  m2_loss_dice: 1.166  m2_loss_ce_0: 0.5897  m2_loss_mask_0: 0.1684  m2_loss_dice_0: 1.372  m2_loss_ce_1: 0.6421  m2_loss_mask_1: 0.1577  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.5808  m2_loss_mask_2: 0.1503  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.5007  m2_loss_mask_3: 0.1491  m2_loss_dice_3: 1.186  m2_loss_ce_4: 0.4858  m2_loss_mask_4: 0.1481  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.4899  m2_loss_mask_5: 0.1465  m2_loss_dice_5: 1.184  m2_loss_ce_6: 0.5121  m2_loss_mask_6: 0.1485  m2_loss_dice_6: 1.166  m2_loss_ce_7: 0.4769  m2_loss_mask_7: 0.1459  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4902  m2_loss_mask_8: 0.147  m2_loss_dice_8: 1.162  com_loss_ce: 1.763  com_loss_mask: 0.6926  com_loss_dice: 0.9722    time: 1.4378  last_time: 1.3906  data_time: 0.0440  last_data_time: 0.0465   lr: 0.0001  max_mem: 36242M
[09/08 22:57:27] d2.utils.events INFO:  eta: 0:28:40  iter: 799  total_loss: 40  m1_loss_ce: 0.4454  m1_loss_mask: 0.1575  m1_loss_dice: 1.127  m1_loss_ce_0: 0.5173  m1_loss_mask_0: 0.1769  m1_loss_dice_0: 1.347  m1_loss_ce_1: 0.5907  m1_loss_mask_1: 0.1631  m1_loss_dice_1: 1.25  m1_loss_ce_2: 0.4948  m1_loss_mask_2: 0.1635  m1_loss_dice_2: 1.205  m1_loss_ce_3: 0.451  m1_loss_mask_3: 0.1604  m1_loss_dice_3: 1.154  m1_loss_ce_4: 0.4362  m1_loss_mask_4: 0.1586  m1_loss_dice_4: 1.148  m1_loss_ce_5: 0.4264  m1_loss_mask_5: 0.1566  m1_loss_dice_5: 1.175  m1_loss_ce_6: 0.4138  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.143  m1_loss_ce_7: 0.4056  m1_loss_mask_7: 0.1576  m1_loss_dice_7: 1.126  m1_loss_ce_8: 0.4249  m1_loss_mask_8: 0.1562  m1_loss_dice_8: 1.132  m2_loss_ce: 0.4674  m2_loss_mask: 0.1598  m2_loss_dice: 1.182  m2_loss_ce_0: 0.5649  m2_loss_mask_0: 0.1814  m2_loss_dice_0: 1.376  m2_loss_ce_1: 0.6165  m2_loss_mask_1: 0.1711  m2_loss_dice_1: 1.272  m2_loss_ce_2: 0.5701  m2_loss_mask_2: 0.1613  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5226  m2_loss_mask_3: 0.1563  m2_loss_dice_3: 1.215  m2_loss_ce_4: 0.5013  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.173  m2_loss_ce_5: 0.453  m2_loss_mask_5: 0.157  m2_loss_dice_5: 1.188  m2_loss_ce_6: 0.4493  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.163  m2_loss_ce_7: 0.4529  m2_loss_mask_7: 0.1604  m2_loss_dice_7: 1.169  m2_loss_ce_8: 0.4635  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.153  com_loss_ce: 1.749  com_loss_mask: 0.6926  com_loss_dice: 0.9734    time: 1.4378  last_time: 1.3723  data_time: 0.0504  last_data_time: 0.0349   lr: 0.0001  max_mem: 36242M
[09/08 22:57:55] d2.utils.events INFO:  eta: 0:28:12  iter: 819  total_loss: 40.5  m1_loss_ce: 0.4137  m1_loss_mask: 0.1457  m1_loss_dice: 1.144  m1_loss_ce_0: 0.5326  m1_loss_mask_0: 0.1736  m1_loss_dice_0: 1.362  m1_loss_ce_1: 0.5751  m1_loss_mask_1: 0.1598  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.499  m1_loss_mask_2: 0.1518  m1_loss_dice_2: 1.21  m1_loss_ce_3: 0.4621  m1_loss_mask_3: 0.1475  m1_loss_dice_3: 1.18  m1_loss_ce_4: 0.4221  m1_loss_mask_4: 0.1495  m1_loss_dice_4: 1.184  m1_loss_ce_5: 0.4208  m1_loss_mask_5: 0.1455  m1_loss_dice_5: 1.153  m1_loss_ce_6: 0.4413  m1_loss_mask_6: 0.1476  m1_loss_dice_6: 1.129  m1_loss_ce_7: 0.4026  m1_loss_mask_7: 0.1457  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.4315  m1_loss_mask_8: 0.146  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4164  m2_loss_mask: 0.1572  m2_loss_dice: 1.153  m2_loss_ce_0: 0.5353  m2_loss_mask_0: 0.1797  m2_loss_dice_0: 1.336  m2_loss_ce_1: 0.6417  m2_loss_mask_1: 0.1669  m2_loss_dice_1: 1.276  m2_loss_ce_2: 0.5493  m2_loss_mask_2: 0.158  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.4986  m2_loss_mask_3: 0.1577  m2_loss_dice_3: 1.201  m2_loss_ce_4: 0.4812  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.19  m2_loss_ce_5: 0.4648  m2_loss_mask_5: 0.1532  m2_loss_dice_5: 1.171  m2_loss_ce_6: 0.4255  m2_loss_mask_6: 0.1552  m2_loss_dice_6: 1.168  m2_loss_ce_7: 0.4515  m2_loss_mask_7: 0.1569  m2_loss_dice_7: 1.142  m2_loss_ce_8: 0.4225  m2_loss_mask_8: 0.1568  m2_loss_dice_8: 1.204  com_loss_ce: 1.764  com_loss_mask: 0.6926  com_loss_dice: 0.9698    time: 1.4376  last_time: 1.4978  data_time: 0.0513  last_data_time: 0.0937   lr: 0.0001  max_mem: 36242M
[09/08 22:58:25] d2.utils.events INFO:  eta: 0:27:44  iter: 839  total_loss: 41.27  m1_loss_ce: 0.4546  m1_loss_mask: 0.1525  m1_loss_dice: 1.148  m1_loss_ce_0: 0.593  m1_loss_mask_0: 0.1753  m1_loss_dice_0: 1.328  m1_loss_ce_1: 0.6076  m1_loss_mask_1: 0.1619  m1_loss_dice_1: 1.246  m1_loss_ce_2: 0.5845  m1_loss_mask_2: 0.1574  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.5035  m1_loss_mask_3: 0.1546  m1_loss_dice_3: 1.164  m1_loss_ce_4: 0.4915  m1_loss_mask_4: 0.1545  m1_loss_dice_4: 1.16  m1_loss_ce_5: 0.4715  m1_loss_mask_5: 0.1512  m1_loss_dice_5: 1.176  m1_loss_ce_6: 0.4379  m1_loss_mask_6: 0.152  m1_loss_dice_6: 1.134  m1_loss_ce_7: 0.4387  m1_loss_mask_7: 0.1543  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.4349  m1_loss_mask_8: 0.1528  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4848  m2_loss_mask: 0.1536  m2_loss_dice: 1.152  m2_loss_ce_0: 0.6151  m2_loss_mask_0: 0.1696  m2_loss_dice_0: 1.342  m2_loss_ce_1: 0.6751  m2_loss_mask_1: 0.1604  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.6044  m2_loss_mask_2: 0.1563  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.5486  m2_loss_mask_3: 0.1566  m2_loss_dice_3: 1.192  m2_loss_ce_4: 0.542  m2_loss_mask_4: 0.1556  m2_loss_dice_4: 1.163  m2_loss_ce_5: 0.5208  m2_loss_mask_5: 0.1545  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.5186  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.176  m2_loss_ce_7: 0.4995  m2_loss_mask_7: 0.1529  m2_loss_dice_7: 1.158  m2_loss_ce_8: 0.5061  m2_loss_mask_8: 0.1594  m2_loss_dice_8: 1.188  com_loss_ce: 1.753  com_loss_mask: 0.6925  com_loss_dice: 0.9734    time: 1.4384  last_time: 1.4324  data_time: 0.0570  last_data_time: 0.0481   lr: 0.0001  max_mem: 36242M
[09/08 22:58:53] d2.utils.events INFO:  eta: 0:27:15  iter: 859  total_loss: 41.43  m1_loss_ce: 0.4528  m1_loss_mask: 0.1539  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5637  m1_loss_mask_0: 0.1766  m1_loss_dice_0: 1.342  m1_loss_ce_1: 0.6006  m1_loss_mask_1: 0.1647  m1_loss_dice_1: 1.271  m1_loss_ce_2: 0.5182  m1_loss_mask_2: 0.1618  m1_loss_dice_2: 1.236  m1_loss_ce_3: 0.4616  m1_loss_mask_3: 0.1615  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.435  m1_loss_mask_4: 0.1597  m1_loss_dice_4: 1.191  m1_loss_ce_5: 0.4177  m1_loss_mask_5: 0.1584  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.4214  m1_loss_mask_6: 0.1574  m1_loss_dice_6: 1.151  m1_loss_ce_7: 0.4198  m1_loss_mask_7: 0.1559  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.3911  m1_loss_mask_8: 0.1527  m1_loss_dice_8: 1.157  m2_loss_ce: 0.491  m2_loss_mask: 0.1592  m2_loss_dice: 1.151  m2_loss_ce_0: 0.5802  m2_loss_mask_0: 0.1849  m2_loss_dice_0: 1.385  m2_loss_ce_1: 0.6294  m2_loss_mask_1: 0.1688  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.558  m2_loss_mask_2: 0.1612  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5203  m2_loss_mask_3: 0.1624  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.5136  m2_loss_mask_4: 0.1629  m2_loss_dice_4: 1.205  m2_loss_ce_5: 0.4853  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.4575  m2_loss_mask_6: 0.1618  m2_loss_dice_6: 1.174  m2_loss_ce_7: 0.463  m2_loss_mask_7: 0.1607  m2_loss_dice_7: 1.168  m2_loss_ce_8: 0.4516  m2_loss_mask_8: 0.161  m2_loss_dice_8: 1.193  com_loss_ce: 1.75  com_loss_mask: 0.6926  com_loss_dice: 0.9738    time: 1.4380  last_time: 1.4516  data_time: 0.0553  last_data_time: 0.0427   lr: 0.0001  max_mem: 36242M
[09/08 22:59:22] d2.utils.events INFO:  eta: 0:26:46  iter: 879  total_loss: 41.7  m1_loss_ce: 0.4545  m1_loss_mask: 0.1571  m1_loss_dice: 1.14  m1_loss_ce_0: 0.5364  m1_loss_mask_0: 0.1729  m1_loss_dice_0: 1.317  m1_loss_ce_1: 0.6127  m1_loss_mask_1: 0.1713  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5579  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5015  m1_loss_mask_3: 0.161  m1_loss_dice_3: 1.177  m1_loss_ce_4: 0.4624  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.4532  m1_loss_mask_5: 0.1584  m1_loss_dice_5: 1.17  m1_loss_ce_6: 0.4442  m1_loss_mask_6: 0.158  m1_loss_dice_6: 1.149  m1_loss_ce_7: 0.4614  m1_loss_mask_7: 0.1576  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4642  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.128  m2_loss_ce: 0.4572  m2_loss_mask: 0.1596  m2_loss_dice: 1.181  m2_loss_ce_0: 0.5865  m2_loss_mask_0: 0.1758  m2_loss_dice_0: 1.358  m2_loss_ce_1: 0.632  m2_loss_mask_1: 0.1671  m2_loss_dice_1: 1.303  m2_loss_ce_2: 0.5886  m2_loss_mask_2: 0.1585  m2_loss_dice_2: 1.238  m2_loss_ce_3: 0.5383  m2_loss_mask_3: 0.1569  m2_loss_dice_3: 1.2  m2_loss_ce_4: 0.4935  m2_loss_mask_4: 0.1584  m2_loss_dice_4: 1.204  m2_loss_ce_5: 0.4688  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.202  m2_loss_ce_6: 0.4671  m2_loss_mask_6: 0.1604  m2_loss_dice_6: 1.155  m2_loss_ce_7: 0.4775  m2_loss_mask_7: 0.158  m2_loss_dice_7: 1.169  m2_loss_ce_8: 0.4722  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.162  com_loss_ce: 1.755  com_loss_mask: 0.6926  com_loss_dice: 0.9734    time: 1.4380  last_time: 1.3949  data_time: 0.0482  last_data_time: 0.0336   lr: 0.0001  max_mem: 36242M
[09/08 22:59:51] d2.utils.events INFO:  eta: 0:26:17  iter: 899  total_loss: 41.24  m1_loss_ce: 0.3914  m1_loss_mask: 0.155  m1_loss_dice: 1.199  m1_loss_ce_0: 0.5314  m1_loss_mask_0: 0.1772  m1_loss_dice_0: 1.34  m1_loss_ce_1: 0.5527  m1_loss_mask_1: 0.1711  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.4937  m1_loss_mask_2: 0.1587  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.454  m1_loss_mask_3: 0.1589  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.4379  m1_loss_mask_4: 0.1566  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.4212  m1_loss_mask_5: 0.159  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4157  m1_loss_mask_6: 0.1587  m1_loss_dice_6: 1.17  m1_loss_ce_7: 0.4166  m1_loss_mask_7: 0.1553  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.4036  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4669  m2_loss_mask: 0.162  m2_loss_dice: 1.203  m2_loss_ce_0: 0.5581  m2_loss_mask_0: 0.1827  m2_loss_dice_0: 1.353  m2_loss_ce_1: 0.6229  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.304  m2_loss_ce_2: 0.5548  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.5167  m2_loss_mask_3: 0.1611  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.4588  m2_loss_mask_4: 0.1635  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.4761  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.4534  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4788  m2_loss_mask_7: 0.1622  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.4396  m2_loss_mask_8: 0.1623  m2_loss_dice_8: 1.178  com_loss_ce: 1.74  com_loss_mask: 0.6926  com_loss_dice: 0.9717    time: 1.4382  last_time: 1.4394  data_time: 0.0591  last_data_time: 0.0880   lr: 0.0001  max_mem: 36242M
[09/08 23:00:20] d2.utils.events INFO:  eta: 0:25:48  iter: 919  total_loss: 42.83  m1_loss_ce: 0.4881  m1_loss_mask: 0.1463  m1_loss_dice: 1.153  m1_loss_ce_0: 0.5277  m1_loss_mask_0: 0.1698  m1_loss_dice_0: 1.299  m1_loss_ce_1: 0.6287  m1_loss_mask_1: 0.1608  m1_loss_dice_1: 1.257  m1_loss_ce_2: 0.5908  m1_loss_mask_2: 0.1547  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5185  m1_loss_mask_3: 0.151  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.4932  m1_loss_mask_4: 0.1517  m1_loss_dice_4: 1.163  m1_loss_ce_5: 0.4614  m1_loss_mask_5: 0.1502  m1_loss_dice_5: 1.15  m1_loss_ce_6: 0.4598  m1_loss_mask_6: 0.1477  m1_loss_dice_6: 1.148  m1_loss_ce_7: 0.4898  m1_loss_mask_7: 0.1431  m1_loss_dice_7: 1.122  m1_loss_ce_8: 0.459  m1_loss_mask_8: 0.1462  m1_loss_dice_8: 1.128  m2_loss_ce: 0.4946  m2_loss_mask: 0.1571  m2_loss_dice: 1.168  m2_loss_ce_0: 0.5735  m2_loss_mask_0: 0.1732  m2_loss_dice_0: 1.366  m2_loss_ce_1: 0.6599  m2_loss_mask_1: 0.1695  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.6072  m2_loss_mask_2: 0.1559  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.5388  m2_loss_mask_3: 0.1547  m2_loss_dice_3: 1.21  m2_loss_ce_4: 0.5069  m2_loss_mask_4: 0.1561  m2_loss_dice_4: 1.208  m2_loss_ce_5: 0.5017  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.5095  m2_loss_mask_6: 0.1561  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5045  m2_loss_mask_7: 0.157  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.4833  m2_loss_mask_8: 0.1572  m2_loss_dice_8: 1.184  com_loss_ce: 1.769  com_loss_mask: 0.6926  com_loss_dice: 0.9737    time: 1.4382  last_time: 1.6539  data_time: 0.0500  last_data_time: 0.1679   lr: 0.0001  max_mem: 36242M
[09/08 23:00:49] d2.utils.events INFO:  eta: 0:25:20  iter: 939  total_loss: 39.82  m1_loss_ce: 0.3929  m1_loss_mask: 0.1456  m1_loss_dice: 1.154  m1_loss_ce_0: 0.4619  m1_loss_mask_0: 0.1725  m1_loss_dice_0: 1.303  m1_loss_ce_1: 0.5313  m1_loss_mask_1: 0.1599  m1_loss_dice_1: 1.231  m1_loss_ce_2: 0.4887  m1_loss_mask_2: 0.1534  m1_loss_dice_2: 1.19  m1_loss_ce_3: 0.4306  m1_loss_mask_3: 0.1549  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.393  m1_loss_mask_4: 0.1517  m1_loss_dice_4: 1.157  m1_loss_ce_5: 0.3999  m1_loss_mask_5: 0.1541  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.4037  m1_loss_mask_6: 0.1482  m1_loss_dice_6: 1.149  m1_loss_ce_7: 0.393  m1_loss_mask_7: 0.1485  m1_loss_dice_7: 1.147  m1_loss_ce_8: 0.3805  m1_loss_mask_8: 0.1469  m1_loss_dice_8: 1.132  m2_loss_ce: 0.4313  m2_loss_mask: 0.1548  m2_loss_dice: 1.187  m2_loss_ce_0: 0.5313  m2_loss_mask_0: 0.1726  m2_loss_dice_0: 1.334  m2_loss_ce_1: 0.6082  m2_loss_mask_1: 0.1608  m2_loss_dice_1: 1.281  m2_loss_ce_2: 0.5568  m2_loss_mask_2: 0.1537  m2_loss_dice_2: 1.208  m2_loss_ce_3: 0.4751  m2_loss_mask_3: 0.1551  m2_loss_dice_3: 1.165  m2_loss_ce_4: 0.4774  m2_loss_mask_4: 0.1539  m2_loss_dice_4: 1.152  m2_loss_ce_5: 0.4292  m2_loss_mask_5: 0.1532  m2_loss_dice_5: 1.161  m2_loss_ce_6: 0.4389  m2_loss_mask_6: 0.152  m2_loss_dice_6: 1.168  m2_loss_ce_7: 0.4364  m2_loss_mask_7: 0.1535  m2_loss_dice_7: 1.165  m2_loss_ce_8: 0.4285  m2_loss_mask_8: 0.1547  m2_loss_dice_8: 1.175  com_loss_ce: 1.738  com_loss_mask: 0.6926  com_loss_dice: 0.9728    time: 1.4383  last_time: 1.4631  data_time: 0.0570  last_data_time: 0.0889   lr: 0.0001  max_mem: 36242M
[09/08 23:01:18] d2.utils.events INFO:  eta: 0:24:52  iter: 959  total_loss: 40.83  m1_loss_ce: 0.4093  m1_loss_mask: 0.1458  m1_loss_dice: 1.173  m1_loss_ce_0: 0.5033  m1_loss_mask_0: 0.1745  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.5857  m1_loss_mask_1: 0.1528  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.5281  m1_loss_mask_2: 0.149  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.4651  m1_loss_mask_3: 0.1515  m1_loss_dice_3: 1.192  m1_loss_ce_4: 0.4401  m1_loss_mask_4: 0.1467  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.4548  m1_loss_mask_5: 0.1489  m1_loss_dice_5: 1.188  m1_loss_ce_6: 0.4271  m1_loss_mask_6: 0.1475  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.408  m1_loss_mask_7: 0.1464  m1_loss_dice_7: 1.162  m1_loss_ce_8: 0.4122  m1_loss_mask_8: 0.146  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4662  m2_loss_mask: 0.149  m2_loss_dice: 1.169  m2_loss_ce_0: 0.5675  m2_loss_mask_0: 0.1774  m2_loss_dice_0: 1.393  m2_loss_ce_1: 0.6412  m2_loss_mask_1: 0.1607  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.5517  m2_loss_mask_2: 0.1539  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5211  m2_loss_mask_3: 0.1545  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.494  m2_loss_mask_4: 0.1528  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.4809  m2_loss_mask_5: 0.1505  m2_loss_dice_5: 1.219  m2_loss_ce_6: 0.469  m2_loss_mask_6: 0.1584  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4376  m2_loss_mask_7: 0.1517  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4686  m2_loss_mask_8: 0.1506  m2_loss_dice_8: 1.191  com_loss_ce: 1.789  com_loss_mask: 0.6926  com_loss_dice: 0.9735    time: 1.4386  last_time: 1.4392  data_time: 0.0555  last_data_time: 0.0403   lr: 0.0001  max_mem: 36242M
[09/08 23:01:47] d2.utils.events INFO:  eta: 0:24:23  iter: 979  total_loss: 42.06  m1_loss_ce: 0.4301  m1_loss_mask: 0.153  m1_loss_dice: 1.208  m1_loss_ce_0: 0.5336  m1_loss_mask_0: 0.1677  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.6076  m1_loss_mask_1: 0.1566  m1_loss_dice_1: 1.333  m1_loss_ce_2: 0.5437  m1_loss_mask_2: 0.151  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.4903  m1_loss_mask_3: 0.1522  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.4914  m1_loss_mask_4: 0.1554  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.4671  m1_loss_mask_5: 0.1526  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.4339  m1_loss_mask_6: 0.1544  m1_loss_dice_6: 1.288  m1_loss_ce_7: 0.4297  m1_loss_mask_7: 0.1514  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.4325  m1_loss_mask_8: 0.1503  m1_loss_dice_8: 1.271  m2_loss_ce: 0.4806  m2_loss_mask: 0.159  m2_loss_dice: 1.23  m2_loss_ce_0: 0.5659  m2_loss_mask_0: 0.1722  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.661  m2_loss_mask_1: 0.1641  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.5745  m2_loss_mask_2: 0.1607  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5337  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.311  m2_loss_ce_4: 0.5019  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.4966  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5071  m2_loss_mask_6: 0.1593  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.4764  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4831  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.268  com_loss_ce: 1.783  com_loss_mask: 0.6926  com_loss_dice: 0.9747    time: 1.4386  last_time: 1.3948  data_time: 0.0579  last_data_time: 0.0618   lr: 0.0001  max_mem: 36242M
[09/08 23:02:16] d2.utils.events INFO:  eta: 0:23:55  iter: 999  total_loss: 40.96  m1_loss_ce: 0.4523  m1_loss_mask: 0.15  m1_loss_dice: 1.173  m1_loss_ce_0: 0.5203  m1_loss_mask_0: 0.1824  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.5912  m1_loss_mask_1: 0.1661  m1_loss_dice_1: 1.272  m1_loss_ce_2: 0.527  m1_loss_mask_2: 0.1564  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.5017  m1_loss_mask_3: 0.1546  m1_loss_dice_3: 1.167  m1_loss_ce_4: 0.454  m1_loss_mask_4: 0.1522  m1_loss_dice_4: 1.188  m1_loss_ce_5: 0.4485  m1_loss_mask_5: 0.1501  m1_loss_dice_5: 1.172  m1_loss_ce_6: 0.4222  m1_loss_mask_6: 0.1515  m1_loss_dice_6: 1.148  m1_loss_ce_7: 0.409  m1_loss_mask_7: 0.1504  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.431  m1_loss_mask_8: 0.1503  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4637  m2_loss_mask: 0.1516  m2_loss_dice: 1.136  m2_loss_ce_0: 0.5976  m2_loss_mask_0: 0.1784  m2_loss_dice_0: 1.339  m2_loss_ce_1: 0.6539  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.3  m2_loss_ce_2: 0.5853  m2_loss_mask_2: 0.1576  m2_loss_dice_2: 1.238  m2_loss_ce_3: 0.5352  m2_loss_mask_3: 0.1581  m2_loss_dice_3: 1.18  m2_loss_ce_4: 0.483  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.4876  m2_loss_mask_5: 0.1542  m2_loss_dice_5: 1.17  m2_loss_ce_6: 0.4913  m2_loss_mask_6: 0.155  m2_loss_dice_6: 1.135  m2_loss_ce_7: 0.4748  m2_loss_mask_7: 0.1553  m2_loss_dice_7: 1.152  m2_loss_ce_8: 0.4813  m2_loss_mask_8: 0.1507  m2_loss_dice_8: 1.163  com_loss_ce: 1.769  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.4384  last_time: 1.3881  data_time: 0.0571  last_data_time: 0.0383   lr: 0.0001  max_mem: 36242M
[09/08 23:02:45] d2.utils.events INFO:  eta: 0:23:26  iter: 1019  total_loss: 38.91  m1_loss_ce: 0.4303  m1_loss_mask: 0.1583  m1_loss_dice: 1.105  m1_loss_ce_0: 0.4743  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.325  m1_loss_ce_1: 0.5667  m1_loss_mask_1: 0.1735  m1_loss_dice_1: 1.198  m1_loss_ce_2: 0.5373  m1_loss_mask_2: 0.1668  m1_loss_dice_2: 1.176  m1_loss_ce_3: 0.4661  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.106  m1_loss_ce_4: 0.4215  m1_loss_mask_4: 0.1602  m1_loss_dice_4: 1.136  m1_loss_ce_5: 0.4076  m1_loss_mask_5: 0.16  m1_loss_dice_5: 1.124  m1_loss_ce_6: 0.4358  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.075  m1_loss_ce_7: 0.4439  m1_loss_mask_7: 0.1554  m1_loss_dice_7: 1.084  m1_loss_ce_8: 0.4128  m1_loss_mask_8: 0.1547  m1_loss_dice_8: 1.133  m2_loss_ce: 0.4041  m2_loss_mask: 0.1594  m2_loss_dice: 1.104  m2_loss_ce_0: 0.5589  m2_loss_mask_0: 0.1849  m2_loss_dice_0: 1.286  m2_loss_ce_1: 0.5915  m2_loss_mask_1: 0.1724  m2_loss_dice_1: 1.263  m2_loss_ce_2: 0.5418  m2_loss_mask_2: 0.1653  m2_loss_dice_2: 1.198  m2_loss_ce_3: 0.4882  m2_loss_mask_3: 0.1629  m2_loss_dice_3: 1.15  m2_loss_ce_4: 0.4532  m2_loss_mask_4: 0.1608  m2_loss_dice_4: 1.144  m2_loss_ce_5: 0.4624  m2_loss_mask_5: 0.1602  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.4226  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.127  m2_loss_ce_7: 0.4632  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.121  m2_loss_ce_8: 0.4459  m2_loss_mask_8: 0.1594  m2_loss_dice_8: 1.12  com_loss_ce: 1.751  com_loss_mask: 0.6926  com_loss_dice: 0.9712    time: 1.4382  last_time: 1.4366  data_time: 0.0502  last_data_time: 0.0657   lr: 0.0001  max_mem: 36242M
[09/08 23:03:13] d2.utils.events INFO:  eta: 0:22:57  iter: 1039  total_loss: 39.73  m1_loss_ce: 0.474  m1_loss_mask: 0.1555  m1_loss_dice: 1.144  m1_loss_ce_0: 0.5518  m1_loss_mask_0: 0.178  m1_loss_dice_0: 1.3  m1_loss_ce_1: 0.5776  m1_loss_mask_1: 0.1666  m1_loss_dice_1: 1.244  m1_loss_ce_2: 0.4979  m1_loss_mask_2: 0.1575  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4554  m1_loss_mask_3: 0.1571  m1_loss_dice_3: 1.16  m1_loss_ce_4: 0.4475  m1_loss_mask_4: 0.1563  m1_loss_dice_4: 1.145  m1_loss_ce_5: 0.4368  m1_loss_mask_5: 0.1563  m1_loss_dice_5: 1.142  m1_loss_ce_6: 0.4143  m1_loss_mask_6: 0.1538  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.4121  m1_loss_mask_7: 0.1582  m1_loss_dice_7: 1.109  m1_loss_ce_8: 0.411  m1_loss_mask_8: 0.1552  m1_loss_dice_8: 1.138  m2_loss_ce: 0.431  m2_loss_mask: 0.1554  m2_loss_dice: 1.143  m2_loss_ce_0: 0.5362  m2_loss_mask_0: 0.175  m2_loss_dice_0: 1.345  m2_loss_ce_1: 0.6257  m2_loss_mask_1: 0.1643  m2_loss_dice_1: 1.291  m2_loss_ce_2: 0.5423  m2_loss_mask_2: 0.1563  m2_loss_dice_2: 1.255  m2_loss_ce_3: 0.4877  m2_loss_mask_3: 0.1558  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.4541  m2_loss_mask_4: 0.1536  m2_loss_dice_4: 1.132  m2_loss_ce_5: 0.4721  m2_loss_mask_5: 0.153  m2_loss_dice_5: 1.18  m2_loss_ce_6: 0.4553  m2_loss_mask_6: 0.1547  m2_loss_dice_6: 1.159  m2_loss_ce_7: 0.4354  m2_loss_mask_7: 0.1552  m2_loss_dice_7: 1.132  m2_loss_ce_8: 0.4287  m2_loss_mask_8: 0.1583  m2_loss_dice_8: 1.155  com_loss_ce: 1.748  com_loss_mask: 0.6926  com_loss_dice: 0.9706    time: 1.4378  last_time: 1.4618  data_time: 0.0507  last_data_time: 0.0674   lr: 0.0001  max_mem: 36242M
[09/08 23:03:42] d2.utils.events INFO:  eta: 0:22:29  iter: 1059  total_loss: 40.36  m1_loss_ce: 0.4421  m1_loss_mask: 0.1464  m1_loss_dice: 1.157  m1_loss_ce_0: 0.5646  m1_loss_mask_0: 0.1776  m1_loss_dice_0: 1.366  m1_loss_ce_1: 0.5947  m1_loss_mask_1: 0.1626  m1_loss_dice_1: 1.256  m1_loss_ce_2: 0.5398  m1_loss_mask_2: 0.1542  m1_loss_dice_2: 1.216  m1_loss_ce_3: 0.4843  m1_loss_mask_3: 0.1516  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.4551  m1_loss_mask_4: 0.1525  m1_loss_dice_4: 1.171  m1_loss_ce_5: 0.4833  m1_loss_mask_5: 0.1504  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.4212  m1_loss_mask_6: 0.1481  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4267  m1_loss_mask_7: 0.148  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.4326  m1_loss_mask_8: 0.1453  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4691  m2_loss_mask: 0.1532  m2_loss_dice: 1.162  m2_loss_ce_0: 0.6071  m2_loss_mask_0: 0.1751  m2_loss_dice_0: 1.343  m2_loss_ce_1: 0.659  m2_loss_mask_1: 0.1638  m2_loss_dice_1: 1.287  m2_loss_ce_2: 0.5743  m2_loss_mask_2: 0.1565  m2_loss_dice_2: 1.204  m2_loss_ce_3: 0.5004  m2_loss_mask_3: 0.1525  m2_loss_dice_3: 1.164  m2_loss_ce_4: 0.4906  m2_loss_mask_4: 0.1536  m2_loss_dice_4: 1.172  m2_loss_ce_5: 0.4833  m2_loss_mask_5: 0.1523  m2_loss_dice_5: 1.183  m2_loss_ce_6: 0.4681  m2_loss_mask_6: 0.1524  m2_loss_dice_6: 1.141  m2_loss_ce_7: 0.4698  m2_loss_mask_7: 0.1525  m2_loss_dice_7: 1.166  m2_loss_ce_8: 0.4839  m2_loss_mask_8: 0.1526  m2_loss_dice_8: 1.134  com_loss_ce: 1.769  com_loss_mask: 0.6926  com_loss_dice: 0.9738    time: 1.4380  last_time: 1.5712  data_time: 0.0562  last_data_time: 0.1111   lr: 0.0001  max_mem: 36242M
[09/08 23:04:11] d2.utils.events INFO:  eta: 0:22:01  iter: 1079  total_loss: 42.27  m1_loss_ce: 0.4224  m1_loss_mask: 0.1563  m1_loss_dice: 1.197  m1_loss_ce_0: 0.5481  m1_loss_mask_0: 0.1915  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.6108  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.5318  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.5049  m1_loss_mask_3: 0.1612  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4565  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.4555  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.425  m1_loss_mask_6: 0.1544  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.4199  m1_loss_mask_7: 0.1562  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.444  m1_loss_mask_8: 0.1559  m1_loss_dice_8: 1.175  m2_loss_ce: 0.466  m2_loss_mask: 0.1625  m2_loss_dice: 1.193  m2_loss_ce_0: 0.6032  m2_loss_mask_0: 0.1779  m2_loss_dice_0: 1.384  m2_loss_ce_1: 0.6587  m2_loss_mask_1: 0.1726  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5608  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.5305  m2_loss_mask_3: 0.1601  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.5164  m2_loss_mask_4: 0.1608  m2_loss_dice_4: 1.195  m2_loss_ce_5: 0.5083  m2_loss_mask_5: 0.1602  m2_loss_dice_5: 1.202  m2_loss_ce_6: 0.5077  m2_loss_mask_6: 0.1624  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.4637  m2_loss_mask_7: 0.1634  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.4666  m2_loss_mask_8: 0.1616  m2_loss_dice_8: 1.172  com_loss_ce: 1.778  com_loss_mask: 0.6926  com_loss_dice: 0.9727    time: 1.4382  last_time: 1.3895  data_time: 0.0557  last_data_time: 0.0486   lr: 0.0001  max_mem: 36242M
[09/08 23:04:40] d2.utils.events INFO:  eta: 0:21:32  iter: 1099  total_loss: 41.71  m1_loss_ce: 0.437  m1_loss_mask: 0.1535  m1_loss_dice: 1.276  m1_loss_ce_0: 0.4822  m1_loss_mask_0: 0.1865  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.5408  m1_loss_mask_1: 0.1771  m1_loss_dice_1: 1.302  m1_loss_ce_2: 0.4978  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.4473  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.4041  m1_loss_mask_4: 0.1568  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.4383  m1_loss_mask_5: 0.1547  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.4134  m1_loss_mask_6: 0.1553  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.4158  m1_loss_mask_7: 0.1564  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.3931  m1_loss_mask_8: 0.1534  m1_loss_dice_8: 1.242  m2_loss_ce: 0.4761  m2_loss_mask: 0.1588  m2_loss_dice: 1.141  m2_loss_ce_0: 0.5591  m2_loss_mask_0: 0.1865  m2_loss_dice_0: 1.37  m2_loss_ce_1: 0.6008  m2_loss_mask_1: 0.1718  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.5462  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5191  m2_loss_mask_3: 0.1606  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.4883  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.4726  m2_loss_mask_5: 0.1608  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.4522  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.219  m2_loss_ce_7: 0.4719  m2_loss_mask_7: 0.1616  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4793  m2_loss_mask_8: 0.1611  m2_loss_dice_8: 1.188  com_loss_ce: 1.764  com_loss_mask: 0.6926  com_loss_dice: 0.9736    time: 1.4379  last_time: 1.4634  data_time: 0.0593  last_data_time: 0.0916   lr: 0.0001  max_mem: 36242M
[09/08 23:05:09] d2.utils.events INFO:  eta: 0:21:04  iter: 1119  total_loss: 43.81  m1_loss_ce: 0.5012  m1_loss_mask: 0.1441  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5431  m1_loss_mask_0: 0.1653  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.6241  m1_loss_mask_1: 0.1493  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.5857  m1_loss_mask_2: 0.1447  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.512  m1_loss_mask_3: 0.1426  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.4709  m1_loss_mask_4: 0.1412  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.4896  m1_loss_mask_5: 0.1413  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.454  m1_loss_mask_6: 0.1438  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.4775  m1_loss_mask_7: 0.1436  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4896  m1_loss_mask_8: 0.143  m1_loss_dice_8: 1.219  m2_loss_ce: 0.4844  m2_loss_mask: 0.1454  m2_loss_dice: 1.257  m2_loss_ce_0: 0.5795  m2_loss_mask_0: 0.1656  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.689  m2_loss_mask_1: 0.1619  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.5776  m2_loss_mask_2: 0.15  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5496  m2_loss_mask_3: 0.1471  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5226  m2_loss_mask_4: 0.1468  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.4785  m2_loss_mask_5: 0.1445  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.4692  m2_loss_mask_6: 0.144  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.4849  m2_loss_mask_7: 0.1456  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4562  m2_loss_mask_8: 0.1434  m2_loss_dice_8: 1.231  com_loss_ce: 1.802  com_loss_mask: 0.6926  com_loss_dice: 0.9749    time: 1.4384  last_time: 1.4956  data_time: 0.0605  last_data_time: 0.1018   lr: 0.0001  max_mem: 36242M
[09/08 23:05:38] d2.utils.events INFO:  eta: 0:20:35  iter: 1139  total_loss: 41.16  m1_loss_ce: 0.4617  m1_loss_mask: 0.1428  m1_loss_dice: 1.168  m1_loss_ce_0: 0.5259  m1_loss_mask_0: 0.1603  m1_loss_dice_0: 1.343  m1_loss_ce_1: 0.5865  m1_loss_mask_1: 0.1558  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.5355  m1_loss_mask_2: 0.1485  m1_loss_dice_2: 1.222  m1_loss_ce_3: 0.4806  m1_loss_mask_3: 0.145  m1_loss_dice_3: 1.161  m1_loss_ce_4: 0.4525  m1_loss_mask_4: 0.1453  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.4323  m1_loss_mask_5: 0.1448  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.4178  m1_loss_mask_6: 0.1462  m1_loss_dice_6: 1.199  m1_loss_ce_7: 0.4432  m1_loss_mask_7: 0.1445  m1_loss_dice_7: 1.182  m1_loss_ce_8: 0.4364  m1_loss_mask_8: 0.1457  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4971  m2_loss_mask: 0.1565  m2_loss_dice: 1.176  m2_loss_ce_0: 0.6049  m2_loss_mask_0: 0.1726  m2_loss_dice_0: 1.375  m2_loss_ce_1: 0.6811  m2_loss_mask_1: 0.1669  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.6014  m2_loss_mask_2: 0.1616  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.5755  m2_loss_mask_3: 0.1575  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5658  m2_loss_mask_4: 0.1602  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.5219  m2_loss_mask_5: 0.1552  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.5245  m2_loss_mask_6: 0.1585  m2_loss_dice_6: 1.217  m2_loss_ce_7: 0.4881  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.4976  m2_loss_mask_8: 0.1571  m2_loss_dice_8: 1.205  com_loss_ce: 1.78  com_loss_mask: 0.6926  com_loss_dice: 0.9748    time: 1.4384  last_time: 1.3909  data_time: 0.0542  last_data_time: 0.0374   lr: 0.0001  max_mem: 36242M
[09/08 23:06:07] d2.utils.events INFO:  eta: 0:20:07  iter: 1159  total_loss: 42.74  m1_loss_ce: 0.382  m1_loss_mask: 0.1494  m1_loss_dice: 1.227  m1_loss_ce_0: 0.5115  m1_loss_mask_0: 0.1728  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.5616  m1_loss_mask_1: 0.1592  m1_loss_dice_1: 1.333  m1_loss_ce_2: 0.5054  m1_loss_mask_2: 0.1532  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.4604  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.4237  m1_loss_mask_4: 0.1551  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.4432  m1_loss_mask_5: 0.1548  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.3998  m1_loss_mask_6: 0.1531  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.4  m1_loss_mask_7: 0.1522  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.3999  m1_loss_mask_8: 0.1496  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4707  m2_loss_mask: 0.1498  m2_loss_dice: 1.162  m2_loss_ce_0: 0.5919  m2_loss_mask_0: 0.1716  m2_loss_dice_0: 1.432  m2_loss_ce_1: 0.6369  m2_loss_mask_1: 0.1666  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.6185  m2_loss_mask_2: 0.1565  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.525  m2_loss_mask_3: 0.1591  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.511  m2_loss_mask_4: 0.1497  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.4883  m2_loss_mask_5: 0.1502  m2_loss_dice_5: 1.211  m2_loss_ce_6: 0.4899  m2_loss_mask_6: 0.1528  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.4868  m2_loss_mask_7: 0.153  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4759  m2_loss_mask_8: 0.1511  m2_loss_dice_8: 1.21  com_loss_ce: 1.759  com_loss_mask: 0.6926  com_loss_dice: 0.9717    time: 1.4387  last_time: 1.4164  data_time: 0.0536  last_data_time: 0.0350   lr: 0.0001  max_mem: 36242M
[09/08 23:06:35] d2.utils.events INFO:  eta: 0:19:37  iter: 1179  total_loss: 40.74  m1_loss_ce: 0.4108  m1_loss_mask: 0.1597  m1_loss_dice: 1.125  m1_loss_ce_0: 0.5264  m1_loss_mask_0: 0.1875  m1_loss_dice_0: 1.306  m1_loss_ce_1: 0.6092  m1_loss_mask_1: 0.1726  m1_loss_dice_1: 1.271  m1_loss_ce_2: 0.5417  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.19  m1_loss_ce_3: 0.4538  m1_loss_mask_3: 0.16  m1_loss_dice_3: 1.136  m1_loss_ce_4: 0.4331  m1_loss_mask_4: 0.1602  m1_loss_dice_4: 1.133  m1_loss_ce_5: 0.44  m1_loss_mask_5: 0.1592  m1_loss_dice_5: 1.135  m1_loss_ce_6: 0.4139  m1_loss_mask_6: 0.1582  m1_loss_dice_6: 1.118  m1_loss_ce_7: 0.4061  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.121  m1_loss_ce_8: 0.4183  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.104  m2_loss_ce: 0.4654  m2_loss_mask: 0.1664  m2_loss_dice: 1.151  m2_loss_ce_0: 0.5887  m2_loss_mask_0: 0.1952  m2_loss_dice_0: 1.348  m2_loss_ce_1: 0.6248  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.263  m2_loss_ce_2: 0.5943  m2_loss_mask_2: 0.175  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.535  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.521  m2_loss_mask_4: 0.1687  m2_loss_dice_4: 1.174  m2_loss_ce_5: 0.4934  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.131  m2_loss_ce_6: 0.4822  m2_loss_mask_6: 0.1632  m2_loss_dice_6: 1.136  m2_loss_ce_7: 0.482  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.145  m2_loss_ce_8: 0.4781  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.148  com_loss_ce: 1.755  com_loss_mask: 0.6925  com_loss_dice: 0.9722    time: 1.4379  last_time: 1.3969  data_time: 0.0466  last_data_time: 0.0502   lr: 0.0001  max_mem: 36242M
[09/08 23:07:04] d2.utils.events INFO:  eta: 0:19:08  iter: 1199  total_loss: 39.9  m1_loss_ce: 0.4375  m1_loss_mask: 0.1583  m1_loss_dice: 1.12  m1_loss_ce_0: 0.5376  m1_loss_mask_0: 0.1749  m1_loss_dice_0: 1.241  m1_loss_ce_1: 0.5442  m1_loss_mask_1: 0.1718  m1_loss_dice_1: 1.223  m1_loss_ce_2: 0.4681  m1_loss_mask_2: 0.1644  m1_loss_dice_2: 1.17  m1_loss_ce_3: 0.4185  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.152  m1_loss_ce_4: 0.4185  m1_loss_mask_4: 0.1608  m1_loss_dice_4: 1.14  m1_loss_ce_5: 0.3992  m1_loss_mask_5: 0.1591  m1_loss_dice_5: 1.152  m1_loss_ce_6: 0.3915  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.088  m1_loss_ce_7: 0.3756  m1_loss_mask_7: 0.1591  m1_loss_dice_7: 1.123  m1_loss_ce_8: 0.4051  m1_loss_mask_8: 0.1596  m1_loss_dice_8: 1.107  m2_loss_ce: 0.4577  m2_loss_mask: 0.1657  m2_loss_dice: 1.11  m2_loss_ce_0: 0.612  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.317  m2_loss_ce_1: 0.6428  m2_loss_mask_1: 0.1808  m2_loss_dice_1: 1.251  m2_loss_ce_2: 0.5247  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.238  m2_loss_ce_3: 0.5241  m2_loss_mask_3: 0.1702  m2_loss_dice_3: 1.184  m2_loss_ce_4: 0.4603  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.192  m2_loss_ce_5: 0.4378  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.131  m2_loss_ce_6: 0.4734  m2_loss_mask_6: 0.1668  m2_loss_dice_6: 1.153  m2_loss_ce_7: 0.4325  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.158  m2_loss_ce_8: 0.4558  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.169  com_loss_ce: 1.751  com_loss_mask: 0.6926  com_loss_dice: 0.9724    time: 1.4379  last_time: 1.4498  data_time: 0.0553  last_data_time: 0.0493   lr: 0.0001  max_mem: 36547M
[09/08 23:07:33] d2.utils.events INFO:  eta: 0:18:39  iter: 1219  total_loss: 38.73  m1_loss_ce: 0.4134  m1_loss_mask: 0.1456  m1_loss_dice: 1.054  m1_loss_ce_0: 0.4847  m1_loss_mask_0: 0.1751  m1_loss_dice_0: 1.239  m1_loss_ce_1: 0.5472  m1_loss_mask_1: 0.1644  m1_loss_dice_1: 1.172  m1_loss_ce_2: 0.4586  m1_loss_mask_2: 0.1525  m1_loss_dice_2: 1.146  m1_loss_ce_3: 0.4478  m1_loss_mask_3: 0.1501  m1_loss_dice_3: 1.047  m1_loss_ce_4: 0.4226  m1_loss_mask_4: 0.1511  m1_loss_dice_4: 1.064  m1_loss_ce_5: 0.3812  m1_loss_mask_5: 0.1465  m1_loss_dice_5: 1.11  m1_loss_ce_6: 0.3887  m1_loss_mask_6: 0.1461  m1_loss_dice_6: 1.072  m1_loss_ce_7: 0.3944  m1_loss_mask_7: 0.1471  m1_loss_dice_7: 1.059  m1_loss_ce_8: 0.3716  m1_loss_mask_8: 0.1446  m1_loss_dice_8: 1.091  m2_loss_ce: 0.4261  m2_loss_mask: 0.153  m2_loss_dice: 1.088  m2_loss_ce_0: 0.5337  m2_loss_mask_0: 0.175  m2_loss_dice_0: 1.298  m2_loss_ce_1: 0.6438  m2_loss_mask_1: 0.1616  m2_loss_dice_1: 1.229  m2_loss_ce_2: 0.554  m2_loss_mask_2: 0.1554  m2_loss_dice_2: 1.154  m2_loss_ce_3: 0.4849  m2_loss_mask_3: 0.1531  m2_loss_dice_3: 1.149  m2_loss_ce_4: 0.4852  m2_loss_mask_4: 0.1534  m2_loss_dice_4: 1.117  m2_loss_ce_5: 0.4446  m2_loss_mask_5: 0.1531  m2_loss_dice_5: 1.111  m2_loss_ce_6: 0.4385  m2_loss_mask_6: 0.1548  m2_loss_dice_6: 1.12  m2_loss_ce_7: 0.4505  m2_loss_mask_7: 0.1544  m2_loss_dice_7: 1.112  m2_loss_ce_8: 0.4417  m2_loss_mask_8: 0.1541  m2_loss_dice_8: 1.09  com_loss_ce: 1.76  com_loss_mask: 0.6926  com_loss_dice: 0.9711    time: 1.4376  last_time: 1.3388  data_time: 0.0493  last_data_time: 0.0443   lr: 0.0001  max_mem: 36547M
[09/08 23:08:02] d2.utils.events INFO:  eta: 0:18:12  iter: 1239  total_loss: 39.49  m1_loss_ce: 0.3655  m1_loss_mask: 0.1438  m1_loss_dice: 1.114  m1_loss_ce_0: 0.4804  m1_loss_mask_0: 0.1667  m1_loss_dice_0: 1.319  m1_loss_ce_1: 0.557  m1_loss_mask_1: 0.1589  m1_loss_dice_1: 1.212  m1_loss_ce_2: 0.505  m1_loss_mask_2: 0.1461  m1_loss_dice_2: 1.187  m1_loss_ce_3: 0.4484  m1_loss_mask_3: 0.1459  m1_loss_dice_3: 1.157  m1_loss_ce_4: 0.4142  m1_loss_mask_4: 0.1461  m1_loss_dice_4: 1.135  m1_loss_ce_5: 0.3768  m1_loss_mask_5: 0.1461  m1_loss_dice_5: 1.147  m1_loss_ce_6: 0.3945  m1_loss_mask_6: 0.1441  m1_loss_dice_6: 1.116  m1_loss_ce_7: 0.4009  m1_loss_mask_7: 0.1463  m1_loss_dice_7: 1.112  m1_loss_ce_8: 0.4107  m1_loss_mask_8: 0.1459  m1_loss_dice_8: 1.083  m2_loss_ce: 0.424  m2_loss_mask: 0.1502  m2_loss_dice: 1.146  m2_loss_ce_0: 0.5257  m2_loss_mask_0: 0.1701  m2_loss_dice_0: 1.33  m2_loss_ce_1: 0.61  m2_loss_mask_1: 0.1595  m2_loss_dice_1: 1.27  m2_loss_ce_2: 0.5271  m2_loss_mask_2: 0.1506  m2_loss_dice_2: 1.219  m2_loss_ce_3: 0.4915  m2_loss_mask_3: 0.1496  m2_loss_dice_3: 1.168  m2_loss_ce_4: 0.4544  m2_loss_mask_4: 0.149  m2_loss_dice_4: 1.178  m2_loss_ce_5: 0.4512  m2_loss_mask_5: 0.1485  m2_loss_dice_5: 1.155  m2_loss_ce_6: 0.4252  m2_loss_mask_6: 0.1488  m2_loss_dice_6: 1.138  m2_loss_ce_7: 0.4451  m2_loss_mask_7: 0.1515  m2_loss_dice_7: 1.173  m2_loss_ce_8: 0.4217  m2_loss_mask_8: 0.149  m2_loss_dice_8: 1.126  com_loss_ce: 1.739  com_loss_mask: 0.6927  com_loss_dice: 0.9725    time: 1.4381  last_time: 1.4854  data_time: 0.0610  last_data_time: 0.0529   lr: 0.0001  max_mem: 36547M
[09/08 23:08:31] d2.utils.events INFO:  eta: 0:17:42  iter: 1259  total_loss: 40.4  m1_loss_ce: 0.4186  m1_loss_mask: 0.1469  m1_loss_dice: 1.112  m1_loss_ce_0: 0.4772  m1_loss_mask_0: 0.1715  m1_loss_dice_0: 1.317  m1_loss_ce_1: 0.5733  m1_loss_mask_1: 0.1604  m1_loss_dice_1: 1.247  m1_loss_ce_2: 0.5254  m1_loss_mask_2: 0.1551  m1_loss_dice_2: 1.171  m1_loss_ce_3: 0.479  m1_loss_mask_3: 0.1506  m1_loss_dice_3: 1.139  m1_loss_ce_4: 0.4046  m1_loss_mask_4: 0.1498  m1_loss_dice_4: 1.144  m1_loss_ce_5: 0.3996  m1_loss_mask_5: 0.1478  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.3951  m1_loss_mask_6: 0.1469  m1_loss_dice_6: 1.123  m1_loss_ce_7: 0.4074  m1_loss_mask_7: 0.1464  m1_loss_dice_7: 1.12  m1_loss_ce_8: 0.4065  m1_loss_mask_8: 0.1478  m1_loss_dice_8: 1.154  m2_loss_ce: 0.4278  m2_loss_mask: 0.1552  m2_loss_dice: 1.168  m2_loss_ce_0: 0.5508  m2_loss_mask_0: 0.1754  m2_loss_dice_0: 1.369  m2_loss_ce_1: 0.6489  m2_loss_mask_1: 0.1619  m2_loss_dice_1: 1.273  m2_loss_ce_2: 0.5546  m2_loss_mask_2: 0.1569  m2_loss_dice_2: 1.251  m2_loss_ce_3: 0.5052  m2_loss_mask_3: 0.1552  m2_loss_dice_3: 1.156  m2_loss_ce_4: 0.5087  m2_loss_mask_4: 0.1531  m2_loss_dice_4: 1.172  m2_loss_ce_5: 0.4663  m2_loss_mask_5: 0.1517  m2_loss_dice_5: 1.182  m2_loss_ce_6: 0.4835  m2_loss_mask_6: 0.1549  m2_loss_dice_6: 1.171  m2_loss_ce_7: 0.4301  m2_loss_mask_7: 0.1566  m2_loss_dice_7: 1.164  m2_loss_ce_8: 0.4533  m2_loss_mask_8: 0.1559  m2_loss_dice_8: 1.171  com_loss_ce: 1.756  com_loss_mask: 0.6926  com_loss_dice: 0.9729    time: 1.4379  last_time: 1.4294  data_time: 0.0550  last_data_time: 0.0417   lr: 0.0001  max_mem: 36547M
[09/08 23:08:59] d2.utils.events INFO:  eta: 0:17:13  iter: 1279  total_loss: 41.16  m1_loss_ce: 0.4002  m1_loss_mask: 0.1554  m1_loss_dice: 1.162  m1_loss_ce_0: 0.5042  m1_loss_mask_0: 0.1706  m1_loss_dice_0: 1.35  m1_loss_ce_1: 0.5918  m1_loss_mask_1: 0.1659  m1_loss_dice_1: 1.298  m1_loss_ce_2: 0.5182  m1_loss_mask_2: 0.1573  m1_loss_dice_2: 1.228  m1_loss_ce_3: 0.4859  m1_loss_mask_3: 0.1562  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.4467  m1_loss_mask_4: 0.1554  m1_loss_dice_4: 1.163  m1_loss_ce_5: 0.4353  m1_loss_mask_5: 0.1579  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.4247  m1_loss_mask_6: 0.1547  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.4103  m1_loss_mask_7: 0.1548  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4157  m1_loss_mask_8: 0.1565  m1_loss_dice_8: 1.174  m2_loss_ce: 0.4713  m2_loss_mask: 0.1634  m2_loss_dice: 1.183  m2_loss_ce_0: 0.5355  m2_loss_mask_0: 0.1767  m2_loss_dice_0: 1.394  m2_loss_ce_1: 0.6551  m2_loss_mask_1: 0.1685  m2_loss_dice_1: 1.307  m2_loss_ce_2: 0.5581  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.288  m2_loss_ce_3: 0.5327  m2_loss_mask_3: 0.1608  m2_loss_dice_3: 1.216  m2_loss_ce_4: 0.4806  m2_loss_mask_4: 0.1591  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.5012  m2_loss_mask_5: 0.1593  m2_loss_dice_5: 1.204  m2_loss_ce_6: 0.4998  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.155  m2_loss_ce_7: 0.4675  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.165  m2_loss_ce_8: 0.4658  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.154  com_loss_ce: 1.755  com_loss_mask: 0.6926  com_loss_dice: 0.9727    time: 1.4376  last_time: 1.3721  data_time: 0.0522  last_data_time: 0.0389   lr: 0.0001  max_mem: 36547M
[09/08 23:09:28] d2.utils.events INFO:  eta: 0:16:44  iter: 1299  total_loss: 42.13  m1_loss_ce: 0.3827  m1_loss_mask: 0.1553  m1_loss_dice: 1.25  m1_loss_ce_0: 0.5169  m1_loss_mask_0: 0.179  m1_loss_dice_0: 1.495  m1_loss_ce_1: 0.576  m1_loss_mask_1: 0.1629  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.5342  m1_loss_mask_2: 0.155  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.4951  m1_loss_mask_3: 0.1538  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4811  m1_loss_mask_4: 0.1507  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.4377  m1_loss_mask_5: 0.1509  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4352  m1_loss_mask_6: 0.151  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.4494  m1_loss_mask_7: 0.1513  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.4239  m1_loss_mask_8: 0.155  m1_loss_dice_8: 1.241  m2_loss_ce: 0.45  m2_loss_mask: 0.1532  m2_loss_dice: 1.203  m2_loss_ce_0: 0.5573  m2_loss_mask_0: 0.1711  m2_loss_dice_0: 1.39  m2_loss_ce_1: 0.6488  m2_loss_mask_1: 0.1636  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5839  m2_loss_mask_2: 0.1555  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.4971  m2_loss_mask_3: 0.1551  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.4552  m2_loss_mask_4: 0.1542  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4783  m2_loss_mask_5: 0.1514  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4853  m2_loss_mask_6: 0.1526  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.4671  m2_loss_mask_7: 0.1534  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4837  m2_loss_mask_8: 0.1534  m2_loss_dice_8: 1.222  com_loss_ce: 1.782  com_loss_mask: 0.6926  com_loss_dice: 0.9738    time: 1.4377  last_time: 1.4644  data_time: 0.0555  last_data_time: 0.1115   lr: 0.0001  max_mem: 36547M
[09/08 23:09:57] d2.utils.events INFO:  eta: 0:16:15  iter: 1319  total_loss: 41.95  m1_loss_ce: 0.4366  m1_loss_mask: 0.1485  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5095  m1_loss_mask_0: 0.1778  m1_loss_dice_0: 1.387  m1_loss_ce_1: 0.5698  m1_loss_mask_1: 0.1619  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5111  m1_loss_mask_2: 0.1509  m1_loss_dice_2: 1.241  m1_loss_ce_3: 0.4974  m1_loss_mask_3: 0.1568  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4514  m1_loss_mask_4: 0.1563  m1_loss_dice_4: 1.209  m1_loss_ce_5: 0.4385  m1_loss_mask_5: 0.1497  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4053  m1_loss_mask_6: 0.1498  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4058  m1_loss_mask_7: 0.1486  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.4336  m1_loss_mask_8: 0.1481  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4908  m2_loss_mask: 0.1548  m2_loss_dice: 1.198  m2_loss_ce_0: 0.584  m2_loss_mask_0: 0.1776  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.6554  m2_loss_mask_1: 0.1698  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5841  m2_loss_mask_2: 0.1615  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5462  m2_loss_mask_3: 0.1569  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.4966  m2_loss_mask_4: 0.1579  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.4851  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.4728  m2_loss_mask_6: 0.1554  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4839  m2_loss_mask_7: 0.1569  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.4856  m2_loss_mask_8: 0.1548  m2_loss_dice_8: 1.186  com_loss_ce: 1.768  com_loss_mask: 0.6926  com_loss_dice: 0.9724    time: 1.4379  last_time: 1.4260  data_time: 0.0542  last_data_time: 0.0441   lr: 0.0001  max_mem: 36547M
[09/08 23:10:26] d2.utils.events INFO:  eta: 0:15:47  iter: 1339  total_loss: 39.64  m1_loss_ce: 0.4175  m1_loss_mask: 0.1617  m1_loss_dice: 1.119  m1_loss_ce_0: 0.5039  m1_loss_mask_0: 0.1866  m1_loss_dice_0: 1.216  m1_loss_ce_1: 0.599  m1_loss_mask_1: 0.169  m1_loss_dice_1: 1.179  m1_loss_ce_2: 0.5126  m1_loss_mask_2: 0.1629  m1_loss_dice_2: 1.133  m1_loss_ce_3: 0.4402  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.098  m1_loss_ce_4: 0.4534  m1_loss_mask_4: 0.1613  m1_loss_dice_4: 1.11  m1_loss_ce_5: 0.4314  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.085  m1_loss_ce_6: 0.404  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.079  m1_loss_ce_7: 0.436  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.119  m1_loss_ce_8: 0.4161  m1_loss_mask_8: 0.1625  m1_loss_dice_8: 1.137  m2_loss_ce: 0.4564  m2_loss_mask: 0.1655  m2_loss_dice: 1.134  m2_loss_ce_0: 0.5818  m2_loss_mask_0: 0.19  m2_loss_dice_0: 1.302  m2_loss_ce_1: 0.6343  m2_loss_mask_1: 0.1797  m2_loss_dice_1: 1.219  m2_loss_ce_2: 0.5957  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.193  m2_loss_ce_3: 0.5708  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.163  m2_loss_ce_4: 0.5109  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.155  m2_loss_ce_5: 0.4738  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.118  m2_loss_ce_6: 0.4951  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.115  m2_loss_ce_7: 0.4777  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.109  m2_loss_ce_8: 0.4736  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.114  com_loss_ce: 1.743  com_loss_mask: 0.6926  com_loss_dice: 0.9725    time: 1.4379  last_time: 1.5293  data_time: 0.0496  last_data_time: 0.0778   lr: 0.0001  max_mem: 36547M
[09/08 23:10:54] d2.utils.events INFO:  eta: 0:15:17  iter: 1359  total_loss: 40.57  m1_loss_ce: 0.3939  m1_loss_mask: 0.1426  m1_loss_dice: 1.177  m1_loss_ce_0: 0.5332  m1_loss_mask_0: 0.1738  m1_loss_dice_0: 1.293  m1_loss_ce_1: 0.6357  m1_loss_mask_1: 0.1585  m1_loss_dice_1: 1.257  m1_loss_ce_2: 0.5629  m1_loss_mask_2: 0.1451  m1_loss_dice_2: 1.16  m1_loss_ce_3: 0.4776  m1_loss_mask_3: 0.1445  m1_loss_dice_3: 1.152  m1_loss_ce_4: 0.4789  m1_loss_mask_4: 0.1426  m1_loss_dice_4: 1.104  m1_loss_ce_5: 0.4517  m1_loss_mask_5: 0.1423  m1_loss_dice_5: 1.143  m1_loss_ce_6: 0.4026  m1_loss_mask_6: 0.143  m1_loss_dice_6: 1.124  m1_loss_ce_7: 0.4098  m1_loss_mask_7: 0.1424  m1_loss_dice_7: 1.134  m1_loss_ce_8: 0.4282  m1_loss_mask_8: 0.1429  m1_loss_dice_8: 1.12  m2_loss_ce: 0.4815  m2_loss_mask: 0.1532  m2_loss_dice: 1.166  m2_loss_ce_0: 0.5834  m2_loss_mask_0: 0.1754  m2_loss_dice_0: 1.29  m2_loss_ce_1: 0.6669  m2_loss_mask_1: 0.1589  m2_loss_dice_1: 1.282  m2_loss_ce_2: 0.5743  m2_loss_mask_2: 0.1559  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.5655  m2_loss_mask_3: 0.1511  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.5036  m2_loss_mask_4: 0.1498  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.5197  m2_loss_mask_5: 0.1496  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.5364  m2_loss_mask_6: 0.1525  m2_loss_dice_6: 1.129  m2_loss_ce_7: 0.5176  m2_loss_mask_7: 0.1512  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.5118  m2_loss_mask_8: 0.1523  m2_loss_dice_8: 1.148  com_loss_ce: 1.75  com_loss_mask: 0.6926  com_loss_dice: 0.9709    time: 1.4373  last_time: 1.4254  data_time: 0.0453  last_data_time: 0.0458   lr: 0.0001  max_mem: 36547M
[09/08 23:11:23] d2.utils.events INFO:  eta: 0:14:48  iter: 1379  total_loss: 43.11  m1_loss_ce: 0.4401  m1_loss_mask: 0.1494  m1_loss_dice: 1.251  m1_loss_ce_0: 0.5433  m1_loss_mask_0: 0.1802  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.6292  m1_loss_mask_1: 0.1607  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5575  m1_loss_mask_2: 0.1477  m1_loss_dice_2: 1.231  m1_loss_ce_3: 0.5068  m1_loss_mask_3: 0.1538  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.4789  m1_loss_mask_4: 0.1522  m1_loss_dice_4: 1.266  m1_loss_ce_5: 0.4914  m1_loss_mask_5: 0.1493  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.4598  m1_loss_mask_6: 0.1535  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4419  m1_loss_mask_7: 0.1539  m1_loss_dice_7: 1.243  m1_loss_ce_8: 0.4629  m1_loss_mask_8: 0.153  m1_loss_dice_8: 1.227  m2_loss_ce: 0.5055  m2_loss_mask: 0.1559  m2_loss_dice: 1.205  m2_loss_ce_0: 0.6154  m2_loss_mask_0: 0.182  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.6768  m2_loss_mask_1: 0.1682  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.6157  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5631  m2_loss_mask_3: 0.1609  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5101  m2_loss_mask_4: 0.1586  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5224  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5444  m2_loss_mask_6: 0.1585  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4959  m2_loss_mask_7: 0.1568  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.5309  m2_loss_mask_8: 0.1565  m2_loss_dice_8: 1.246  com_loss_ce: 1.773  com_loss_mask: 0.6926  com_loss_dice: 0.9741    time: 1.4372  last_time: 1.3595  data_time: 0.0552  last_data_time: 0.0519   lr: 0.0001  max_mem: 36547M
[09/08 23:11:52] d2.utils.events INFO:  eta: 0:14:20  iter: 1399  total_loss: 40.56  m1_loss_ce: 0.4539  m1_loss_mask: 0.1519  m1_loss_dice: 1.182  m1_loss_ce_0: 0.514  m1_loss_mask_0: 0.1814  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.6054  m1_loss_mask_1: 0.1653  m1_loss_dice_1: 1.259  m1_loss_ce_2: 0.5143  m1_loss_mask_2: 0.1558  m1_loss_dice_2: 1.194  m1_loss_ce_3: 0.4882  m1_loss_mask_3: 0.1556  m1_loss_dice_3: 1.133  m1_loss_ce_4: 0.4559  m1_loss_mask_4: 0.1538  m1_loss_dice_4: 1.149  m1_loss_ce_5: 0.4374  m1_loss_mask_5: 0.1501  m1_loss_dice_5: 1.105  m1_loss_ce_6: 0.4327  m1_loss_mask_6: 0.1524  m1_loss_dice_6: 1.114  m1_loss_ce_7: 0.4381  m1_loss_mask_7: 0.1519  m1_loss_dice_7: 1.153  m1_loss_ce_8: 0.4151  m1_loss_mask_8: 0.1519  m1_loss_dice_8: 1.154  m2_loss_ce: 0.4744  m2_loss_mask: 0.1602  m2_loss_dice: 1.146  m2_loss_ce_0: 0.5793  m2_loss_mask_0: 0.1836  m2_loss_dice_0: 1.364  m2_loss_ce_1: 0.6588  m2_loss_mask_1: 0.1664  m2_loss_dice_1: 1.311  m2_loss_ce_2: 0.5651  m2_loss_mask_2: 0.161  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.5223  m2_loss_mask_3: 0.1583  m2_loss_dice_3: 1.194  m2_loss_ce_4: 0.494  m2_loss_mask_4: 0.1602  m2_loss_dice_4: 1.187  m2_loss_ce_5: 0.5056  m2_loss_mask_5: 0.1559  m2_loss_dice_5: 1.214  m2_loss_ce_6: 0.4949  m2_loss_mask_6: 0.1578  m2_loss_dice_6: 1.17  m2_loss_ce_7: 0.4656  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.138  m2_loss_ce_8: 0.4828  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.142  com_loss_ce: 1.781  com_loss_mask: 0.6926  com_loss_dice: 0.9741    time: 1.4375  last_time: 1.4422  data_time: 0.0513  last_data_time: 0.0386   lr: 0.0001  max_mem: 36547M
[09/08 23:12:21] d2.utils.events INFO:  eta: 0:13:51  iter: 1419  total_loss: 38.78  m1_loss_ce: 0.3476  m1_loss_mask: 0.1541  m1_loss_dice: 1.208  m1_loss_ce_0: 0.452  m1_loss_mask_0: 0.1771  m1_loss_dice_0: 1.375  m1_loss_ce_1: 0.5076  m1_loss_mask_1: 0.1599  m1_loss_dice_1: 1.271  m1_loss_ce_2: 0.4474  m1_loss_mask_2: 0.1572  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.3855  m1_loss_mask_3: 0.1565  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.3733  m1_loss_mask_4: 0.154  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.3781  m1_loss_mask_5: 0.1523  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.3839  m1_loss_mask_6: 0.1526  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.3535  m1_loss_mask_7: 0.1509  m1_loss_dice_7: 1.199  m1_loss_ce_8: 0.3638  m1_loss_mask_8: 0.1521  m1_loss_dice_8: 1.173  m2_loss_ce: 0.3813  m2_loss_mask: 0.1576  m2_loss_dice: 1.174  m2_loss_ce_0: 0.5097  m2_loss_mask_0: 0.1782  m2_loss_dice_0: 1.354  m2_loss_ce_1: 0.564  m2_loss_mask_1: 0.1659  m2_loss_dice_1: 1.298  m2_loss_ce_2: 0.5121  m2_loss_mask_2: 0.1584  m2_loss_dice_2: 1.27  m2_loss_ce_3: 0.4511  m2_loss_mask_3: 0.158  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.4249  m2_loss_mask_4: 0.1572  m2_loss_dice_4: 1.194  m2_loss_ce_5: 0.4366  m2_loss_mask_5: 0.1568  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.412  m2_loss_mask_6: 0.1567  m2_loss_dice_6: 1.175  m2_loss_ce_7: 0.4211  m2_loss_mask_7: 0.1566  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4152  m2_loss_mask_8: 0.1578  m2_loss_dice_8: 1.169  com_loss_ce: 1.738  com_loss_mask: 0.6926  com_loss_dice: 0.9719    time: 1.4375  last_time: 1.4743  data_time: 0.0561  last_data_time: 0.0534   lr: 0.0001  max_mem: 36547M
[09/08 23:12:50] d2.utils.events INFO:  eta: 0:13:23  iter: 1439  total_loss: 41.65  m1_loss_ce: 0.4097  m1_loss_mask: 0.1546  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5728  m1_loss_mask_0: 0.1787  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.6012  m1_loss_mask_1: 0.163  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.5244  m1_loss_mask_2: 0.149  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.468  m1_loss_mask_3: 0.1518  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4444  m1_loss_mask_4: 0.1546  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.423  m1_loss_mask_5: 0.154  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.422  m1_loss_mask_6: 0.1562  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4303  m1_loss_mask_7: 0.1549  m1_loss_dice_7: 1.188  m1_loss_ce_8: 0.4267  m1_loss_mask_8: 0.1541  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4854  m2_loss_mask: 0.157  m2_loss_dice: 1.201  m2_loss_ce_0: 0.605  m2_loss_mask_0: 0.1778  m2_loss_dice_0: 1.382  m2_loss_ce_1: 0.667  m2_loss_mask_1: 0.1689  m2_loss_dice_1: 1.305  m2_loss_ce_2: 0.5683  m2_loss_mask_2: 0.1602  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5372  m2_loss_mask_3: 0.1569  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.4879  m2_loss_mask_4: 0.1575  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.4834  m2_loss_mask_5: 0.1565  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.4707  m2_loss_mask_6: 0.1578  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4809  m2_loss_mask_7: 0.1565  m2_loss_dice_7: 1.197  m2_loss_ce_8: 0.4718  m2_loss_mask_8: 0.1578  m2_loss_dice_8: 1.209  com_loss_ce: 1.784  com_loss_mask: 0.6926  com_loss_dice: 0.9749    time: 1.4376  last_time: 1.3775  data_time: 0.0571  last_data_time: 0.0354   lr: 0.0001  max_mem: 36547M
[09/08 23:13:19] d2.utils.events INFO:  eta: 0:12:54  iter: 1459  total_loss: 40.75  m1_loss_ce: 0.4306  m1_loss_mask: 0.1462  m1_loss_dice: 1.168  m1_loss_ce_0: 0.5097  m1_loss_mask_0: 0.1719  m1_loss_dice_0: 1.35  m1_loss_ce_1: 0.5699  m1_loss_mask_1: 0.1585  m1_loss_dice_1: 1.25  m1_loss_ce_2: 0.5016  m1_loss_mask_2: 0.1493  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4366  m1_loss_mask_3: 0.1466  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.4308  m1_loss_mask_4: 0.1469  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4194  m1_loss_mask_5: 0.1436  m1_loss_dice_5: 1.164  m1_loss_ce_6: 0.4037  m1_loss_mask_6: 0.1466  m1_loss_dice_6: 1.16  m1_loss_ce_7: 0.4109  m1_loss_mask_7: 0.1462  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.3884  m1_loss_mask_8: 0.1458  m1_loss_dice_8: 1.187  m2_loss_ce: 0.4795  m2_loss_mask: 0.1517  m2_loss_dice: 1.184  m2_loss_ce_0: 0.5885  m2_loss_mask_0: 0.1696  m2_loss_dice_0: 1.382  m2_loss_ce_1: 0.6133  m2_loss_mask_1: 0.158  m2_loss_dice_1: 1.298  m2_loss_ce_2: 0.5585  m2_loss_mask_2: 0.1588  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5479  m2_loss_mask_3: 0.1527  m2_loss_dice_3: 1.202  m2_loss_ce_4: 0.4846  m2_loss_mask_4: 0.1506  m2_loss_dice_4: 1.179  m2_loss_ce_5: 0.5057  m2_loss_mask_5: 0.1479  m2_loss_dice_5: 1.158  m2_loss_ce_6: 0.4455  m2_loss_mask_6: 0.1505  m2_loss_dice_6: 1.169  m2_loss_ce_7: 0.4624  m2_loss_mask_7: 0.151  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.4803  m2_loss_mask_8: 0.1502  m2_loss_dice_8: 1.174  com_loss_ce: 1.779  com_loss_mask: 0.6926  com_loss_dice: 0.973    time: 1.4377  last_time: 1.3876  data_time: 0.0587  last_data_time: 0.0506   lr: 0.0001  max_mem: 36547M
[09/08 23:13:48] d2.utils.events INFO:  eta: 0:12:26  iter: 1479  total_loss: 39.31  m1_loss_ce: 0.3642  m1_loss_mask: 0.158  m1_loss_dice: 1.151  m1_loss_ce_0: 0.4978  m1_loss_mask_0: 0.1856  m1_loss_dice_0: 1.354  m1_loss_ce_1: 0.5569  m1_loss_mask_1: 0.1693  m1_loss_dice_1: 1.249  m1_loss_ce_2: 0.5367  m1_loss_mask_2: 0.1629  m1_loss_dice_2: 1.17  m1_loss_ce_3: 0.4354  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.4208  m1_loss_mask_4: 0.1599  m1_loss_dice_4: 1.157  m1_loss_ce_5: 0.4224  m1_loss_mask_5: 0.1592  m1_loss_dice_5: 1.147  m1_loss_ce_6: 0.387  m1_loss_mask_6: 0.1598  m1_loss_dice_6: 1.108  m1_loss_ce_7: 0.3959  m1_loss_mask_7: 0.1615  m1_loss_dice_7: 1.126  m1_loss_ce_8: 0.3931  m1_loss_mask_8: 0.1576  m1_loss_dice_8: 1.149  m2_loss_ce: 0.4675  m2_loss_mask: 0.161  m2_loss_dice: 1.178  m2_loss_ce_0: 0.5709  m2_loss_mask_0: 0.1841  m2_loss_dice_0: 1.349  m2_loss_ce_1: 0.6482  m2_loss_mask_1: 0.1713  m2_loss_dice_1: 1.3  m2_loss_ce_2: 0.5525  m2_loss_mask_2: 0.163  m2_loss_dice_2: 1.234  m2_loss_ce_3: 0.5099  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.4864  m2_loss_mask_4: 0.161  m2_loss_dice_4: 1.157  m2_loss_ce_5: 0.4746  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.153  m2_loss_ce_6: 0.4585  m2_loss_mask_6: 0.1604  m2_loss_dice_6: 1.169  m2_loss_ce_7: 0.4774  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.138  m2_loss_ce_8: 0.4561  m2_loss_mask_8: 0.1615  m2_loss_dice_8: 1.154  com_loss_ce: 1.743  com_loss_mask: 0.6926  com_loss_dice: 0.9731    time: 1.4375  last_time: 1.4459  data_time: 0.0506  last_data_time: 0.0399   lr: 0.0001  max_mem: 36547M
[09/08 23:14:16] d2.utils.events INFO:  eta: 0:11:57  iter: 1499  total_loss: 41.44  m1_loss_ce: 0.4157  m1_loss_mask: 0.1473  m1_loss_dice: 1.203  m1_loss_ce_0: 0.4705  m1_loss_mask_0: 0.1781  m1_loss_dice_0: 1.387  m1_loss_ce_1: 0.5363  m1_loss_mask_1: 0.1655  m1_loss_dice_1: 1.289  m1_loss_ce_2: 0.4891  m1_loss_mask_2: 0.1582  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.4376  m1_loss_mask_3: 0.1547  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4179  m1_loss_mask_4: 0.1572  m1_loss_dice_4: 1.19  m1_loss_ce_5: 0.3866  m1_loss_mask_5: 0.152  m1_loss_dice_5: 1.189  m1_loss_ce_6: 0.4094  m1_loss_mask_6: 0.1505  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.3847  m1_loss_mask_7: 0.152  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.3807  m1_loss_mask_8: 0.149  m1_loss_dice_8: 1.2  m2_loss_ce: 0.4787  m2_loss_mask: 0.1637  m2_loss_dice: 1.185  m2_loss_ce_0: 0.6047  m2_loss_mask_0: 0.1846  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6782  m2_loss_mask_1: 0.1756  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.5877  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5501  m2_loss_mask_3: 0.1709  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5076  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.5021  m2_loss_mask_5: 0.158  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.4929  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.197  m2_loss_ce_7: 0.468  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.4815  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.213  com_loss_ce: 1.763  com_loss_mask: 0.6926  com_loss_dice: 0.9743    time: 1.4374  last_time: 1.3536  data_time: 0.0463  last_data_time: 0.0398   lr: 0.0001  max_mem: 36547M
[09/08 23:14:45] d2.utils.events INFO:  eta: 0:11:28  iter: 1519  total_loss: 41.1  m1_loss_ce: 0.388  m1_loss_mask: 0.153  m1_loss_dice: 1.241  m1_loss_ce_0: 0.4949  m1_loss_mask_0: 0.1732  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.5574  m1_loss_mask_1: 0.1629  m1_loss_dice_1: 1.317  m1_loss_ce_2: 0.4782  m1_loss_mask_2: 0.1549  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.4241  m1_loss_mask_3: 0.1538  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.3931  m1_loss_mask_4: 0.1529  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.3687  m1_loss_mask_5: 0.1516  m1_loss_dice_5: 1.188  m1_loss_ce_6: 0.3706  m1_loss_mask_6: 0.153  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.3598  m1_loss_mask_7: 0.1511  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.3922  m1_loss_mask_8: 0.1527  m1_loss_dice_8: 1.232  m2_loss_ce: 0.466  m2_loss_mask: 0.1558  m2_loss_dice: 1.195  m2_loss_ce_0: 0.5844  m2_loss_mask_0: 0.1794  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6248  m2_loss_mask_1: 0.166  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.5496  m2_loss_mask_2: 0.1583  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5253  m2_loss_mask_3: 0.1584  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.4806  m2_loss_mask_4: 0.1559  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.4795  m2_loss_mask_5: 0.1533  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4729  m2_loss_mask_6: 0.1547  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4583  m2_loss_mask_7: 0.1576  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4624  m2_loss_mask_8: 0.1558  m2_loss_dice_8: 1.241  com_loss_ce: 1.744  com_loss_mask: 0.6926  com_loss_dice: 0.9747    time: 1.4375  last_time: 1.4029  data_time: 0.0606  last_data_time: 0.0383   lr: 0.0001  max_mem: 36547M
[09/08 23:15:14] d2.utils.events INFO:  eta: 0:10:59  iter: 1539  total_loss: 40.81  m1_loss_ce: 0.4035  m1_loss_mask: 0.1495  m1_loss_dice: 1.214  m1_loss_ce_0: 0.5159  m1_loss_mask_0: 0.173  m1_loss_dice_0: 1.335  m1_loss_ce_1: 0.6436  m1_loss_mask_1: 0.159  m1_loss_dice_1: 1.258  m1_loss_ce_2: 0.5104  m1_loss_mask_2: 0.1518  m1_loss_dice_2: 1.192  m1_loss_ce_3: 0.4584  m1_loss_mask_3: 0.1481  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4197  m1_loss_mask_4: 0.1501  m1_loss_dice_4: 1.153  m1_loss_ce_5: 0.4335  m1_loss_mask_5: 0.1503  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.4238  m1_loss_mask_6: 0.1505  m1_loss_dice_6: 1.14  m1_loss_ce_7: 0.4087  m1_loss_mask_7: 0.1491  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.385  m1_loss_mask_8: 0.1493  m1_loss_dice_8: 1.15  m2_loss_ce: 0.4772  m2_loss_mask: 0.1493  m2_loss_dice: 1.136  m2_loss_ce_0: 0.5747  m2_loss_mask_0: 0.1706  m2_loss_dice_0: 1.363  m2_loss_ce_1: 0.6618  m2_loss_mask_1: 0.1612  m2_loss_dice_1: 1.326  m2_loss_ce_2: 0.5608  m2_loss_mask_2: 0.1517  m2_loss_dice_2: 1.261  m2_loss_ce_3: 0.5337  m2_loss_mask_3: 0.1537  m2_loss_dice_3: 1.181  m2_loss_ce_4: 0.4865  m2_loss_mask_4: 0.1502  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5009  m2_loss_mask_5: 0.1484  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.4741  m2_loss_mask_6: 0.1484  m2_loss_dice_6: 1.172  m2_loss_ce_7: 0.4601  m2_loss_mask_7: 0.1485  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.4578  m2_loss_mask_8: 0.1513  m2_loss_dice_8: 1.18  com_loss_ce: 1.751  com_loss_mask: 0.6926  com_loss_dice: 0.9729    time: 1.4374  last_time: 1.4722  data_time: 0.0511  last_data_time: 0.0503   lr: 0.0001  max_mem: 36547M
[09/08 23:15:43] d2.utils.events INFO:  eta: 0:10:30  iter: 1559  total_loss: 37.28  m1_loss_ce: 0.3837  m1_loss_mask: 0.1499  m1_loss_dice: 1.06  m1_loss_ce_0: 0.5085  m1_loss_mask_0: 0.1699  m1_loss_dice_0: 1.208  m1_loss_ce_1: 0.5753  m1_loss_mask_1: 0.1604  m1_loss_dice_1: 1.123  m1_loss_ce_2: 0.4895  m1_loss_mask_2: 0.1521  m1_loss_dice_2: 1.091  m1_loss_ce_3: 0.4099  m1_loss_mask_3: 0.1509  m1_loss_dice_3: 1.059  m1_loss_ce_4: 0.3738  m1_loss_mask_4: 0.1514  m1_loss_dice_4: 1.072  m1_loss_ce_5: 0.3893  m1_loss_mask_5: 0.1496  m1_loss_dice_5: 1.042  m1_loss_ce_6: 0.3802  m1_loss_mask_6: 0.1508  m1_loss_dice_6: 1.04  m1_loss_ce_7: 0.3779  m1_loss_mask_7: 0.151  m1_loss_dice_7: 1.045  m1_loss_ce_8: 0.3716  m1_loss_mask_8: 0.1485  m1_loss_dice_8: 1.06  m2_loss_ce: 0.4568  m2_loss_mask: 0.1556  m2_loss_dice: 1.078  m2_loss_ce_0: 0.5734  m2_loss_mask_0: 0.1778  m2_loss_dice_0: 1.257  m2_loss_ce_1: 0.6461  m2_loss_mask_1: 0.1619  m2_loss_dice_1: 1.174  m2_loss_ce_2: 0.5745  m2_loss_mask_2: 0.1543  m2_loss_dice_2: 1.111  m2_loss_ce_3: 0.5407  m2_loss_mask_3: 0.1527  m2_loss_dice_3: 1.096  m2_loss_ce_4: 0.4877  m2_loss_mask_4: 0.1546  m2_loss_dice_4: 1.071  m2_loss_ce_5: 0.4705  m2_loss_mask_5: 0.1551  m2_loss_dice_5: 1.073  m2_loss_ce_6: 0.4656  m2_loss_mask_6: 0.1534  m2_loss_dice_6: 1.073  m2_loss_ce_7: 0.4606  m2_loss_mask_7: 0.1543  m2_loss_dice_7: 1.079  m2_loss_ce_8: 0.4496  m2_loss_mask_8: 0.1544  m2_loss_dice_8: 1.051  com_loss_ce: 1.73  com_loss_mask: 0.6926  com_loss_dice: 0.9703    time: 1.4373  last_time: 1.4856  data_time: 0.0555  last_data_time: 0.0645   lr: 0.0001  max_mem: 36547M
[09/08 23:16:12] d2.utils.events INFO:  eta: 0:10:02  iter: 1579  total_loss: 39.82  m1_loss_ce: 0.3953  m1_loss_mask: 0.1501  m1_loss_dice: 1.156  m1_loss_ce_0: 0.4959  m1_loss_mask_0: 0.1769  m1_loss_dice_0: 1.354  m1_loss_ce_1: 0.5289  m1_loss_mask_1: 0.1594  m1_loss_dice_1: 1.256  m1_loss_ce_2: 0.4965  m1_loss_mask_2: 0.1543  m1_loss_dice_2: 1.215  m1_loss_ce_3: 0.42  m1_loss_mask_3: 0.1539  m1_loss_dice_3: 1.16  m1_loss_ce_4: 0.3965  m1_loss_mask_4: 0.1524  m1_loss_dice_4: 1.162  m1_loss_ce_5: 0.398  m1_loss_mask_5: 0.1512  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.3599  m1_loss_mask_6: 0.1524  m1_loss_dice_6: 1.153  m1_loss_ce_7: 0.3638  m1_loss_mask_7: 0.1497  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.3737  m1_loss_mask_8: 0.1484  m1_loss_dice_8: 1.169  m2_loss_ce: 0.4514  m2_loss_mask: 0.155  m2_loss_dice: 1.181  m2_loss_ce_0: 0.5704  m2_loss_mask_0: 0.1774  m2_loss_dice_0: 1.359  m2_loss_ce_1: 0.6368  m2_loss_mask_1: 0.1626  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.5388  m2_loss_mask_2: 0.1556  m2_loss_dice_2: 1.224  m2_loss_ce_3: 0.5122  m2_loss_mask_3: 0.1523  m2_loss_dice_3: 1.196  m2_loss_ce_4: 0.4736  m2_loss_mask_4: 0.153  m2_loss_dice_4: 1.183  m2_loss_ce_5: 0.4652  m2_loss_mask_5: 0.1529  m2_loss_dice_5: 1.206  m2_loss_ce_6: 0.4361  m2_loss_mask_6: 0.1559  m2_loss_dice_6: 1.18  m2_loss_ce_7: 0.4442  m2_loss_mask_7: 0.1548  m2_loss_dice_7: 1.185  m2_loss_ce_8: 0.4872  m2_loss_mask_8: 0.1539  m2_loss_dice_8: 1.156  com_loss_ce: 1.769  com_loss_mask: 0.6927  com_loss_dice: 0.9724    time: 1.4374  last_time: 1.3970  data_time: 0.0571  last_data_time: 0.0468   lr: 0.0001  max_mem: 36547M
[09/08 23:16:41] d2.utils.events INFO:  eta: 0:09:33  iter: 1599  total_loss: 39.99  m1_loss_ce: 0.3833  m1_loss_mask: 0.1399  m1_loss_dice: 1.176  m1_loss_ce_0: 0.4805  m1_loss_mask_0: 0.1624  m1_loss_dice_0: 1.317  m1_loss_ce_1: 0.5489  m1_loss_mask_1: 0.1511  m1_loss_dice_1: 1.216  m1_loss_ce_2: 0.4628  m1_loss_mask_2: 0.1452  m1_loss_dice_2: 1.18  m1_loss_ce_3: 0.4377  m1_loss_mask_3: 0.1433  m1_loss_dice_3: 1.157  m1_loss_ce_4: 0.4223  m1_loss_mask_4: 0.1466  m1_loss_dice_4: 1.166  m1_loss_ce_5: 0.3986  m1_loss_mask_5: 0.1443  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.3631  m1_loss_mask_6: 0.1425  m1_loss_dice_6: 1.138  m1_loss_ce_7: 0.3902  m1_loss_mask_7: 0.1401  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.4061  m1_loss_mask_8: 0.1406  m1_loss_dice_8: 1.135  m2_loss_ce: 0.4385  m2_loss_mask: 0.1494  m2_loss_dice: 1.174  m2_loss_ce_0: 0.5575  m2_loss_mask_0: 0.163  m2_loss_dice_0: 1.341  m2_loss_ce_1: 0.6186  m2_loss_mask_1: 0.1623  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.5436  m2_loss_mask_2: 0.1542  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.5011  m2_loss_mask_3: 0.1499  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.4676  m2_loss_mask_4: 0.1475  m2_loss_dice_4: 1.182  m2_loss_ce_5: 0.4656  m2_loss_mask_5: 0.1467  m2_loss_dice_5: 1.199  m2_loss_ce_6: 0.4565  m2_loss_mask_6: 0.1482  m2_loss_dice_6: 1.177  m2_loss_ce_7: 0.4419  m2_loss_mask_7: 0.148  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.4689  m2_loss_mask_8: 0.1469  m2_loss_dice_8: 1.171  com_loss_ce: 1.759  com_loss_mask: 0.6926  com_loss_dice: 0.9705    time: 1.4373  last_time: 1.4506  data_time: 0.0528  last_data_time: 0.0519   lr: 0.0001  max_mem: 36547M
[09/08 23:17:10] d2.utils.events INFO:  eta: 0:09:05  iter: 1619  total_loss: 41.4  m1_loss_ce: 0.4769  m1_loss_mask: 0.1551  m1_loss_dice: 1.191  m1_loss_ce_0: 0.4728  m1_loss_mask_0: 0.1761  m1_loss_dice_0: 1.367  m1_loss_ce_1: 0.6095  m1_loss_mask_1: 0.1667  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.5315  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.192  m1_loss_ce_3: 0.4858  m1_loss_mask_3: 0.1559  m1_loss_dice_3: 1.171  m1_loss_ce_4: 0.4469  m1_loss_mask_4: 0.1596  m1_loss_dice_4: 1.184  m1_loss_ce_5: 0.4578  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.173  m1_loss_ce_6: 0.4315  m1_loss_mask_6: 0.1568  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4157  m1_loss_mask_7: 0.1563  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.4345  m1_loss_mask_8: 0.1559  m1_loss_dice_8: 1.182  m2_loss_ce: 0.5099  m2_loss_mask: 0.1647  m2_loss_dice: 1.184  m2_loss_ce_0: 0.6149  m2_loss_mask_0: 0.1931  m2_loss_dice_0: 1.408  m2_loss_ce_1: 0.7375  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.6108  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5588  m2_loss_mask_3: 0.1659  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5327  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.201  m2_loss_ce_5: 0.5197  m2_loss_mask_5: 0.1662  m2_loss_dice_5: 1.2  m2_loss_ce_6: 0.5152  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.182  m2_loss_ce_7: 0.5092  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.195  m2_loss_ce_8: 0.5453  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.169  com_loss_ce: 1.778  com_loss_mask: 0.6926  com_loss_dice: 0.9744    time: 1.4376  last_time: 1.4573  data_time: 0.0637  last_data_time: 0.0424   lr: 0.0001  max_mem: 36547M
[09/08 23:17:39] d2.utils.events INFO:  eta: 0:08:36  iter: 1639  total_loss: 38.95  m1_loss_ce: 0.3664  m1_loss_mask: 0.1447  m1_loss_dice: 1.083  m1_loss_ce_0: 0.5056  m1_loss_mask_0: 0.1708  m1_loss_dice_0: 1.26  m1_loss_ce_1: 0.5417  m1_loss_mask_1: 0.1569  m1_loss_dice_1: 1.184  m1_loss_ce_2: 0.4494  m1_loss_mask_2: 0.153  m1_loss_dice_2: 1.161  m1_loss_ce_3: 0.4236  m1_loss_mask_3: 0.1532  m1_loss_dice_3: 1.129  m1_loss_ce_4: 0.385  m1_loss_mask_4: 0.1481  m1_loss_dice_4: 1.109  m1_loss_ce_5: 0.3737  m1_loss_mask_5: 0.1463  m1_loss_dice_5: 1.085  m1_loss_ce_6: 0.3458  m1_loss_mask_6: 0.1463  m1_loss_dice_6: 1.103  m1_loss_ce_7: 0.365  m1_loss_mask_7: 0.1462  m1_loss_dice_7: 1.069  m1_loss_ce_8: 0.3436  m1_loss_mask_8: 0.1448  m1_loss_dice_8: 1.106  m2_loss_ce: 0.4556  m2_loss_mask: 0.1589  m2_loss_dice: 1.103  m2_loss_ce_0: 0.5507  m2_loss_mask_0: 0.1821  m2_loss_dice_0: 1.319  m2_loss_ce_1: 0.6014  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.226  m2_loss_ce_2: 0.547  m2_loss_mask_2: 0.1687  m2_loss_dice_2: 1.191  m2_loss_ce_3: 0.5153  m2_loss_mask_3: 0.1614  m2_loss_dice_3: 1.133  m2_loss_ce_4: 0.4666  m2_loss_mask_4: 0.1613  m2_loss_dice_4: 1.145  m2_loss_ce_5: 0.4226  m2_loss_mask_5: 0.16  m2_loss_dice_5: 1.148  m2_loss_ce_6: 0.4298  m2_loss_mask_6: 0.1584  m2_loss_dice_6: 1.101  m2_loss_ce_7: 0.4283  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.135  m2_loss_ce_8: 0.4455  m2_loss_mask_8: 0.1592  m2_loss_dice_8: 1.114  com_loss_ce: 1.749  com_loss_mask: 0.6926  com_loss_dice: 0.9704    time: 1.4377  last_time: 1.4158  data_time: 0.0553  last_data_time: 0.0638   lr: 0.0001  max_mem: 36547M
[09/08 23:18:08] d2.utils.events INFO:  eta: 0:08:07  iter: 1659  total_loss: 42.71  m1_loss_ce: 0.442  m1_loss_mask: 0.1485  m1_loss_dice: 1.187  m1_loss_ce_0: 0.4823  m1_loss_mask_0: 0.1754  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.5616  m1_loss_mask_1: 0.157  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.5429  m1_loss_mask_2: 0.1522  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.4624  m1_loss_mask_3: 0.1507  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.4443  m1_loss_mask_4: 0.1513  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4265  m1_loss_mask_5: 0.1493  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.3943  m1_loss_mask_6: 0.1484  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.4022  m1_loss_mask_7: 0.1491  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4304  m1_loss_mask_8: 0.1473  m1_loss_dice_8: 1.194  m2_loss_ce: 0.4746  m2_loss_mask: 0.1563  m2_loss_dice: 1.191  m2_loss_ce_0: 0.6004  m2_loss_mask_0: 0.1778  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6727  m2_loss_mask_1: 0.1614  m2_loss_dice_1: 1.409  m2_loss_ce_2: 0.5792  m2_loss_mask_2: 0.1575  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.521  m2_loss_mask_3: 0.1554  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.5195  m2_loss_mask_4: 0.1538  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.4991  m2_loss_mask_5: 0.1546  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.4984  m2_loss_mask_6: 0.1543  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.4881  m2_loss_mask_7: 0.1561  m2_loss_dice_7: 1.181  m2_loss_ce_8: 0.4872  m2_loss_mask_8: 0.1549  m2_loss_dice_8: 1.209  com_loss_ce: 1.78  com_loss_mask: 0.6925  com_loss_dice: 0.9735    time: 1.4377  last_time: 1.4052  data_time: 0.0593  last_data_time: 0.0405   lr: 0.0001  max_mem: 36547M
[09/08 23:18:37] d2.utils.events INFO:  eta: 0:07:39  iter: 1679  total_loss: 41.79  m1_loss_ce: 0.4038  m1_loss_mask: 0.1606  m1_loss_dice: 1.18  m1_loss_ce_0: 0.4849  m1_loss_mask_0: 0.183  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.5474  m1_loss_mask_1: 0.1709  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.4575  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.207  m1_loss_ce_3: 0.4333  m1_loss_mask_3: 0.1602  m1_loss_dice_3: 1.202  m1_loss_ce_4: 0.3987  m1_loss_mask_4: 0.1625  m1_loss_dice_4: 1.181  m1_loss_ce_5: 0.4035  m1_loss_mask_5: 0.1548  m1_loss_dice_5: 1.149  m1_loss_ce_6: 0.3661  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.3763  m1_loss_mask_7: 0.1601  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.3737  m1_loss_mask_8: 0.1551  m1_loss_dice_8: 1.148  m2_loss_ce: 0.4675  m2_loss_mask: 0.1631  m2_loss_dice: 1.202  m2_loss_ce_0: 0.5669  m2_loss_mask_0: 0.1926  m2_loss_dice_0: 1.38  m2_loss_ce_1: 0.6041  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.567  m2_loss_mask_2: 0.17  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.5137  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.4912  m2_loss_mask_4: 0.1632  m2_loss_dice_4: 1.195  m2_loss_ce_5: 0.4968  m2_loss_mask_5: 0.1628  m2_loss_dice_5: 1.207  m2_loss_ce_6: 0.5026  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.4988  m2_loss_mask_7: 0.1645  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4728  m2_loss_mask_8: 0.1648  m2_loss_dice_8: 1.188  com_loss_ce: 1.76  com_loss_mask: 0.6926  com_loss_dice: 0.9724    time: 1.4377  last_time: 1.4011  data_time: 0.0515  last_data_time: 0.0440   lr: 0.0001  max_mem: 36547M
[09/08 23:19:06] d2.utils.events INFO:  eta: 0:07:10  iter: 1699  total_loss: 43.53  m1_loss_ce: 0.4297  m1_loss_mask: 0.156  m1_loss_dice: 1.231  m1_loss_ce_0: 0.5004  m1_loss_mask_0: 0.1814  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.5781  m1_loss_mask_1: 0.1683  m1_loss_dice_1: 1.383  m1_loss_ce_2: 0.5551  m1_loss_mask_2: 0.165  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.4436  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.4271  m1_loss_mask_4: 0.1597  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.4173  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.3845  m1_loss_mask_6: 0.1576  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.3862  m1_loss_mask_7: 0.1561  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4091  m1_loss_mask_8: 0.1542  m1_loss_dice_8: 1.224  m2_loss_ce: 0.487  m2_loss_mask: 0.1619  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6068  m2_loss_mask_0: 0.186  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6929  m2_loss_mask_1: 0.1759  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.5947  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5254  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.4965  m2_loss_mask_4: 0.1618  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.5028  m2_loss_mask_5: 0.1605  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.4958  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.4749  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.4717  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.231  com_loss_ce: 1.777  com_loss_mask: 0.6926  com_loss_dice: 0.974    time: 1.4380  last_time: 1.5887  data_time: 0.0554  last_data_time: 0.0833   lr: 0.0001  max_mem: 36547M
[09/08 23:19:35] d2.utils.events INFO:  eta: 0:06:41  iter: 1719  total_loss: 40.94  m1_loss_ce: 0.4359  m1_loss_mask: 0.1525  m1_loss_dice: 1.152  m1_loss_ce_0: 0.5276  m1_loss_mask_0: 0.1744  m1_loss_dice_0: 1.363  m1_loss_ce_1: 0.5982  m1_loss_mask_1: 0.1679  m1_loss_dice_1: 1.274  m1_loss_ce_2: 0.5571  m1_loss_mask_2: 0.1561  m1_loss_dice_2: 1.235  m1_loss_ce_3: 0.5104  m1_loss_mask_3: 0.157  m1_loss_dice_3: 1.16  m1_loss_ce_4: 0.4525  m1_loss_mask_4: 0.1554  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.4414  m1_loss_mask_5: 0.1513  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.3765  m1_loss_mask_6: 0.1539  m1_loss_dice_6: 1.146  m1_loss_ce_7: 0.3929  m1_loss_mask_7: 0.152  m1_loss_dice_7: 1.145  m1_loss_ce_8: 0.3904  m1_loss_mask_8: 0.152  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4716  m2_loss_mask: 0.1596  m2_loss_dice: 1.163  m2_loss_ce_0: 0.5961  m2_loss_mask_0: 0.1819  m2_loss_dice_0: 1.379  m2_loss_ce_1: 0.6482  m2_loss_mask_1: 0.1703  m2_loss_dice_1: 1.282  m2_loss_ce_2: 0.5799  m2_loss_mask_2: 0.1615  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.5268  m2_loss_mask_3: 0.1612  m2_loss_dice_3: 1.217  m2_loss_ce_4: 0.5105  m2_loss_mask_4: 0.16  m2_loss_dice_4: 1.17  m2_loss_ce_5: 0.4913  m2_loss_mask_5: 0.1571  m2_loss_dice_5: 1.186  m2_loss_ce_6: 0.46  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.144  m2_loss_ce_7: 0.4642  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.168  m2_loss_ce_8: 0.4506  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.164  com_loss_ce: 1.781  com_loss_mask: 0.6927  com_loss_dice: 0.972    time: 1.4381  last_time: 1.4889  data_time: 0.0544  last_data_time: 0.0617   lr: 0.0001  max_mem: 36547M
[09/08 23:20:04] d2.utils.events INFO:  eta: 0:06:13  iter: 1739  total_loss: 39.5  m1_loss_ce: 0.4052  m1_loss_mask: 0.1621  m1_loss_dice: 1.153  m1_loss_ce_0: 0.5189  m1_loss_mask_0: 0.1884  m1_loss_dice_0: 1.288  m1_loss_ce_1: 0.607  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.212  m1_loss_ce_2: 0.4831  m1_loss_mask_2: 0.1686  m1_loss_dice_2: 1.196  m1_loss_ce_3: 0.4615  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.109  m1_loss_ce_4: 0.395  m1_loss_mask_4: 0.161  m1_loss_dice_4: 1.109  m1_loss_ce_5: 0.4072  m1_loss_mask_5: 0.1586  m1_loss_dice_5: 1.158  m1_loss_ce_6: 0.4094  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.125  m1_loss_ce_7: 0.387  m1_loss_mask_7: 0.1612  m1_loss_dice_7: 1.138  m1_loss_ce_8: 0.3626  m1_loss_mask_8: 0.1602  m1_loss_dice_8: 1.152  m2_loss_ce: 0.436  m2_loss_mask: 0.166  m2_loss_dice: 1.132  m2_loss_ce_0: 0.5827  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.356  m2_loss_ce_1: 0.6353  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.245  m2_loss_ce_2: 0.571  m2_loss_mask_2: 0.1726  m2_loss_dice_2: 1.242  m2_loss_ce_3: 0.5249  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.179  m2_loss_ce_4: 0.4613  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.174  m2_loss_ce_5: 0.446  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.175  m2_loss_ce_6: 0.4404  m2_loss_mask_6: 0.1639  m2_loss_dice_6: 1.133  m2_loss_ce_7: 0.4363  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.145  m2_loss_ce_8: 0.424  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.13  com_loss_ce: 1.768  com_loss_mask: 0.6926  com_loss_dice: 0.9717    time: 1.4381  last_time: 1.5342  data_time: 0.0581  last_data_time: 0.0385   lr: 0.0001  max_mem: 36547M
[09/08 23:20:33] d2.utils.events INFO:  eta: 0:05:44  iter: 1759  total_loss: 38.93  m1_loss_ce: 0.4017  m1_loss_mask: 0.1548  m1_loss_dice: 1.125  m1_loss_ce_0: 0.5066  m1_loss_mask_0: 0.1791  m1_loss_dice_0: 1.224  m1_loss_ce_1: 0.5632  m1_loss_mask_1: 0.1637  m1_loss_dice_1: 1.193  m1_loss_ce_2: 0.5042  m1_loss_mask_2: 0.1581  m1_loss_dice_2: 1.153  m1_loss_ce_3: 0.4421  m1_loss_mask_3: 0.1579  m1_loss_dice_3: 1.093  m1_loss_ce_4: 0.4242  m1_loss_mask_4: 0.1551  m1_loss_dice_4: 1.098  m1_loss_ce_5: 0.4155  m1_loss_mask_5: 0.1543  m1_loss_dice_5: 1.135  m1_loss_ce_6: 0.3974  m1_loss_mask_6: 0.1529  m1_loss_dice_6: 1.076  m1_loss_ce_7: 0.3826  m1_loss_mask_7: 0.1529  m1_loss_dice_7: 1.097  m1_loss_ce_8: 0.3799  m1_loss_mask_8: 0.1496  m1_loss_dice_8: 1.103  m2_loss_ce: 0.4467  m2_loss_mask: 0.1629  m2_loss_dice: 1.147  m2_loss_ce_0: 0.5283  m2_loss_mask_0: 0.1861  m2_loss_dice_0: 1.311  m2_loss_ce_1: 0.6398  m2_loss_mask_1: 0.1763  m2_loss_dice_1: 1.272  m2_loss_ce_2: 0.5614  m2_loss_mask_2: 0.1663  m2_loss_dice_2: 1.249  m2_loss_ce_3: 0.5184  m2_loss_mask_3: 0.1623  m2_loss_dice_3: 1.157  m2_loss_ce_4: 0.469  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.131  m2_loss_ce_5: 0.484  m2_loss_mask_5: 0.1636  m2_loss_dice_5: 1.139  m2_loss_ce_6: 0.4513  m2_loss_mask_6: 0.1628  m2_loss_dice_6: 1.132  m2_loss_ce_7: 0.4559  m2_loss_mask_7: 0.1631  m2_loss_dice_7: 1.132  m2_loss_ce_8: 0.4543  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.111  com_loss_ce: 1.753  com_loss_mask: 0.6926  com_loss_dice: 0.9696    time: 1.4383  last_time: 1.4192  data_time: 0.0599  last_data_time: 0.0409   lr: 0.0001  max_mem: 36547M
[09/08 23:21:03] d2.utils.events INFO:  eta: 0:05:16  iter: 1779  total_loss: 40.43  m1_loss_ce: 0.4095  m1_loss_mask: 0.1475  m1_loss_dice: 1.15  m1_loss_ce_0: 0.5145  m1_loss_mask_0: 0.1681  m1_loss_dice_0: 1.328  m1_loss_ce_1: 0.5831  m1_loss_mask_1: 0.1608  m1_loss_dice_1: 1.261  m1_loss_ce_2: 0.516  m1_loss_mask_2: 0.1503  m1_loss_dice_2: 1.198  m1_loss_ce_3: 0.4578  m1_loss_mask_3: 0.1484  m1_loss_dice_3: 1.142  m1_loss_ce_4: 0.4241  m1_loss_mask_4: 0.1495  m1_loss_dice_4: 1.155  m1_loss_ce_5: 0.4135  m1_loss_mask_5: 0.1457  m1_loss_dice_5: 1.164  m1_loss_ce_6: 0.4079  m1_loss_mask_6: 0.1482  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.3924  m1_loss_mask_7: 0.1466  m1_loss_dice_7: 1.135  m1_loss_ce_8: 0.3812  m1_loss_mask_8: 0.1462  m1_loss_dice_8: 1.147  m2_loss_ce: 0.477  m2_loss_mask: 0.1585  m2_loss_dice: 1.18  m2_loss_ce_0: 0.5929  m2_loss_mask_0: 0.1742  m2_loss_dice_0: 1.355  m2_loss_ce_1: 0.6828  m2_loss_mask_1: 0.1674  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.5693  m2_loss_mask_2: 0.1561  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.5638  m2_loss_mask_3: 0.1566  m2_loss_dice_3: 1.196  m2_loss_ce_4: 0.5026  m2_loss_mask_4: 0.1581  m2_loss_dice_4: 1.145  m2_loss_ce_5: 0.5025  m2_loss_mask_5: 0.1555  m2_loss_dice_5: 1.154  m2_loss_ce_6: 0.5013  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.481  m2_loss_mask_7: 0.1581  m2_loss_dice_7: 1.153  m2_loss_ce_8: 0.4932  m2_loss_mask_8: 0.159  m2_loss_dice_8: 1.161  com_loss_ce: 1.763  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.4385  last_time: 1.4114  data_time: 0.0543  last_data_time: 0.0507   lr: 0.0001  max_mem: 36547M
[09/08 23:21:32] d2.utils.events INFO:  eta: 0:04:47  iter: 1799  total_loss: 42.34  m1_loss_ce: 0.455  m1_loss_mask: 0.1477  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5391  m1_loss_mask_0: 0.1733  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.6013  m1_loss_mask_1: 0.1619  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.554  m1_loss_mask_2: 0.1509  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.4772  m1_loss_mask_3: 0.1475  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.4402  m1_loss_mask_4: 0.1467  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4306  m1_loss_mask_5: 0.1472  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4294  m1_loss_mask_6: 0.147  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4247  m1_loss_mask_7: 0.1469  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.4403  m1_loss_mask_8: 0.1497  m1_loss_dice_8: 1.208  m2_loss_ce: 0.5468  m2_loss_mask: 0.1532  m2_loss_dice: 1.223  m2_loss_ce_0: 0.5856  m2_loss_mask_0: 0.1767  m2_loss_dice_0: 1.431  m2_loss_ce_1: 0.6843  m2_loss_mask_1: 0.1631  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.636  m2_loss_mask_2: 0.1546  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.5818  m2_loss_mask_3: 0.1521  m2_loss_dice_3: 1.228  m2_loss_ce_4: 0.556  m2_loss_mask_4: 0.1524  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5289  m2_loss_mask_5: 0.1526  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.557  m2_loss_mask_6: 0.1536  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.5304  m2_loss_mask_7: 0.1537  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.5332  m2_loss_mask_8: 0.1528  m2_loss_dice_8: 1.192  com_loss_ce: 1.778  com_loss_mask: 0.6926  com_loss_dice: 0.9756    time: 1.4388  last_time: 1.5591  data_time: 0.0669  last_data_time: 0.1385   lr: 0.0001  max_mem: 36547M
[09/08 23:22:01] d2.utils.events INFO:  eta: 0:04:18  iter: 1819  total_loss: 41.12  m1_loss_ce: 0.3957  m1_loss_mask: 0.1415  m1_loss_dice: 1.24  m1_loss_ce_0: 0.5432  m1_loss_mask_0: 0.1652  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.5768  m1_loss_mask_1: 0.1515  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.5199  m1_loss_mask_2: 0.1431  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.4576  m1_loss_mask_3: 0.1412  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.4198  m1_loss_mask_4: 0.1414  m1_loss_dice_4: 1.184  m1_loss_ce_5: 0.3926  m1_loss_mask_5: 0.1405  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.3827  m1_loss_mask_6: 0.1404  m1_loss_dice_6: 1.141  m1_loss_ce_7: 0.3853  m1_loss_mask_7: 0.1441  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.3921  m1_loss_mask_8: 0.1419  m1_loss_dice_8: 1.176  m2_loss_ce: 0.4554  m2_loss_mask: 0.1491  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6032  m2_loss_mask_0: 0.1744  m2_loss_dice_0: 1.369  m2_loss_ce_1: 0.6075  m2_loss_mask_1: 0.1595  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.5281  m2_loss_mask_2: 0.1536  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.5079  m2_loss_mask_3: 0.1494  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.4766  m2_loss_mask_4: 0.1482  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.4773  m2_loss_mask_5: 0.1479  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4612  m2_loss_mask_6: 0.1479  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.4597  m2_loss_mask_7: 0.1479  m2_loss_dice_7: 1.185  m2_loss_ce_8: 0.4544  m2_loss_mask_8: 0.1481  m2_loss_dice_8: 1.205  com_loss_ce: 1.762  com_loss_mask: 0.6926  com_loss_dice: 0.9737    time: 1.4390  last_time: 1.4665  data_time: 0.0493  last_data_time: 0.0373   lr: 0.0001  max_mem: 36547M
[09/08 23:22:30] d2.utils.events INFO:  eta: 0:03:49  iter: 1839  total_loss: 41.56  m1_loss_ce: 0.4184  m1_loss_mask: 0.1517  m1_loss_dice: 1.175  m1_loss_ce_0: 0.5207  m1_loss_mask_0: 0.1815  m1_loss_dice_0: 1.363  m1_loss_ce_1: 0.6006  m1_loss_mask_1: 0.1638  m1_loss_dice_1: 1.293  m1_loss_ce_2: 0.5421  m1_loss_mask_2: 0.1605  m1_loss_dice_2: 1.222  m1_loss_ce_3: 0.4402  m1_loss_mask_3: 0.1574  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.4135  m1_loss_mask_4: 0.1528  m1_loss_dice_4: 1.194  m1_loss_ce_5: 0.4014  m1_loss_mask_5: 0.154  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.3966  m1_loss_mask_6: 0.1519  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.386  m1_loss_mask_7: 0.1515  m1_loss_dice_7: 1.155  m1_loss_ce_8: 0.4121  m1_loss_mask_8: 0.1545  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4901  m2_loss_mask: 0.1646  m2_loss_dice: 1.186  m2_loss_ce_0: 0.6276  m2_loss_mask_0: 0.1882  m2_loss_dice_0: 1.371  m2_loss_ce_1: 0.6807  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.314  m2_loss_ce_2: 0.6494  m2_loss_mask_2: 0.1634  m2_loss_dice_2: 1.27  m2_loss_ce_3: 0.5284  m2_loss_mask_3: 0.1642  m2_loss_dice_3: 1.228  m2_loss_ce_4: 0.5385  m2_loss_mask_4: 0.164  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.5134  m2_loss_mask_5: 0.1604  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.4708  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4993  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.191  m2_loss_ce_8: 0.4744  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.198  com_loss_ce: 1.753  com_loss_mask: 0.6927  com_loss_dice: 0.9725    time: 1.4390  last_time: 1.3499  data_time: 0.0640  last_data_time: 0.0451   lr: 0.0001  max_mem: 36547M
[09/08 23:22:59] d2.utils.events INFO:  eta: 0:03:21  iter: 1859  total_loss: 40.05  m1_loss_ce: 0.4142  m1_loss_mask: 0.1541  m1_loss_dice: 1.149  m1_loss_ce_0: 0.5058  m1_loss_mask_0: 0.1805  m1_loss_dice_0: 1.327  m1_loss_ce_1: 0.5417  m1_loss_mask_1: 0.1627  m1_loss_dice_1: 1.251  m1_loss_ce_2: 0.467  m1_loss_mask_2: 0.1606  m1_loss_dice_2: 1.204  m1_loss_ce_3: 0.4331  m1_loss_mask_3: 0.1594  m1_loss_dice_3: 1.172  m1_loss_ce_4: 0.4075  m1_loss_mask_4: 0.154  m1_loss_dice_4: 1.129  m1_loss_ce_5: 0.3932  m1_loss_mask_5: 0.1525  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.3665  m1_loss_mask_6: 0.155  m1_loss_dice_6: 1.102  m1_loss_ce_7: 0.3627  m1_loss_mask_7: 0.1531  m1_loss_dice_7: 1.135  m1_loss_ce_8: 0.3792  m1_loss_mask_8: 0.1555  m1_loss_dice_8: 1.127  m2_loss_ce: 0.4503  m2_loss_mask: 0.1629  m2_loss_dice: 1.137  m2_loss_ce_0: 0.5596  m2_loss_mask_0: 0.1823  m2_loss_dice_0: 1.352  m2_loss_ce_1: 0.6009  m2_loss_mask_1: 0.1683  m2_loss_dice_1: 1.242  m2_loss_ce_2: 0.5626  m2_loss_mask_2: 0.1605  m2_loss_dice_2: 1.21  m2_loss_ce_3: 0.4831  m2_loss_mask_3: 0.1613  m2_loss_dice_3: 1.185  m2_loss_ce_4: 0.4665  m2_loss_mask_4: 0.1573  m2_loss_dice_4: 1.162  m2_loss_ce_5: 0.457  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.125  m2_loss_ce_6: 0.4509  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.151  m2_loss_ce_7: 0.4546  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.145  m2_loss_ce_8: 0.4701  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.158  com_loss_ce: 1.759  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.4392  last_time: 1.4885  data_time: 0.0536  last_data_time: 0.0569   lr: 0.0001  max_mem: 36547M
[09/08 23:23:28] d2.utils.events INFO:  eta: 0:02:52  iter: 1879  total_loss: 41.46  m1_loss_ce: 0.3676  m1_loss_mask: 0.1503  m1_loss_dice: 1.17  m1_loss_ce_0: 0.4761  m1_loss_mask_0: 0.1725  m1_loss_dice_0: 1.361  m1_loss_ce_1: 0.5638  m1_loss_mask_1: 0.1625  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.5016  m1_loss_mask_2: 0.1567  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.4498  m1_loss_mask_3: 0.1556  m1_loss_dice_3: 1.2  m1_loss_ce_4: 0.3773  m1_loss_mask_4: 0.1526  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.3918  m1_loss_mask_5: 0.1537  m1_loss_dice_5: 1.186  m1_loss_ce_6: 0.3795  m1_loss_mask_6: 0.1524  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.3805  m1_loss_mask_7: 0.154  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.394  m1_loss_mask_8: 0.1513  m1_loss_dice_8: 1.208  m2_loss_ce: 0.479  m2_loss_mask: 0.1625  m2_loss_dice: 1.207  m2_loss_ce_0: 0.5899  m2_loss_mask_0: 0.177  m2_loss_dice_0: 1.396  m2_loss_ce_1: 0.655  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.603  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.5388  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5191  m2_loss_mask_4: 0.1617  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.4829  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4904  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.495  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4832  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.217  com_loss_ce: 1.754  com_loss_mask: 0.6926  com_loss_dice: 0.9716    time: 1.4391  last_time: 1.5098  data_time: 0.0526  last_data_time: 0.0448   lr: 0.0001  max_mem: 36547M
[09/08 23:23:57] d2.utils.events INFO:  eta: 0:02:23  iter: 1899  total_loss: 39.94  m1_loss_ce: 0.3965  m1_loss_mask: 0.1571  m1_loss_dice: 1.105  m1_loss_ce_0: 0.5199  m1_loss_mask_0: 0.1767  m1_loss_dice_0: 1.316  m1_loss_ce_1: 0.5742  m1_loss_mask_1: 0.156  m1_loss_dice_1: 1.236  m1_loss_ce_2: 0.4745  m1_loss_mask_2: 0.1587  m1_loss_dice_2: 1.184  m1_loss_ce_3: 0.4099  m1_loss_mask_3: 0.1577  m1_loss_dice_3: 1.148  m1_loss_ce_4: 0.4002  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.3819  m1_loss_mask_5: 0.1539  m1_loss_dice_5: 1.135  m1_loss_ce_6: 0.3688  m1_loss_mask_6: 0.1551  m1_loss_dice_6: 1.112  m1_loss_ce_7: 0.3605  m1_loss_mask_7: 0.1532  m1_loss_dice_7: 1.115  m1_loss_ce_8: 0.3894  m1_loss_mask_8: 0.1524  m1_loss_dice_8: 1.131  m2_loss_ce: 0.4608  m2_loss_mask: 0.1657  m2_loss_dice: 1.146  m2_loss_ce_0: 0.5321  m2_loss_mask_0: 0.185  m2_loss_dice_0: 1.364  m2_loss_ce_1: 0.612  m2_loss_mask_1: 0.1656  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5527  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.256  m2_loss_ce_3: 0.5029  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.2  m2_loss_ce_4: 0.4926  m2_loss_mask_4: 0.1636  m2_loss_dice_4: 1.185  m2_loss_ce_5: 0.4696  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.4318  m2_loss_mask_6: 0.1648  m2_loss_dice_6: 1.154  m2_loss_ce_7: 0.4846  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.455  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.17  com_loss_ce: 1.775  com_loss_mask: 0.6926  com_loss_dice: 0.9748    time: 1.4391  last_time: 1.3279  data_time: 0.0482  last_data_time: 0.0451   lr: 0.0001  max_mem: 36547M
[09/08 23:24:26] d2.utils.events INFO:  eta: 0:01:54  iter: 1919  total_loss: 39.46  m1_loss_ce: 0.3996  m1_loss_mask: 0.1477  m1_loss_dice: 1.113  m1_loss_ce_0: 0.5012  m1_loss_mask_0: 0.181  m1_loss_dice_0: 1.291  m1_loss_ce_1: 0.5325  m1_loss_mask_1: 0.1624  m1_loss_dice_1: 1.191  m1_loss_ce_2: 0.4786  m1_loss_mask_2: 0.157  m1_loss_dice_2: 1.15  m1_loss_ce_3: 0.4601  m1_loss_mask_3: 0.1507  m1_loss_dice_3: 1.105  m1_loss_ce_4: 0.3833  m1_loss_mask_4: 0.1488  m1_loss_dice_4: 1.098  m1_loss_ce_5: 0.3807  m1_loss_mask_5: 0.1475  m1_loss_dice_5: 1.135  m1_loss_ce_6: 0.3791  m1_loss_mask_6: 0.1492  m1_loss_dice_6: 1.149  m1_loss_ce_7: 0.3921  m1_loss_mask_7: 0.1468  m1_loss_dice_7: 1.101  m1_loss_ce_8: 0.3787  m1_loss_mask_8: 0.1499  m1_loss_dice_8: 1.115  m2_loss_ce: 0.4444  m2_loss_mask: 0.1622  m2_loss_dice: 1.133  m2_loss_ce_0: 0.5715  m2_loss_mask_0: 0.1817  m2_loss_dice_0: 1.36  m2_loss_ce_1: 0.6376  m2_loss_mask_1: 0.1762  m2_loss_dice_1: 1.27  m2_loss_ce_2: 0.5852  m2_loss_mask_2: 0.1629  m2_loss_dice_2: 1.227  m2_loss_ce_3: 0.5398  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.167  m2_loss_ce_4: 0.5071  m2_loss_mask_4: 0.1562  m2_loss_dice_4: 1.156  m2_loss_ce_5: 0.4879  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.181  m2_loss_ce_6: 0.4807  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.165  m2_loss_ce_7: 0.4734  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.4355  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.141  com_loss_ce: 1.77  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.4391  last_time: 1.4143  data_time: 0.0580  last_data_time: 0.0465   lr: 0.0001  max_mem: 36547M
[09/08 23:24:55] d2.utils.events INFO:  eta: 0:01:26  iter: 1939  total_loss: 40.62  m1_loss_ce: 0.3422  m1_loss_mask: 0.1444  m1_loss_dice: 1.119  m1_loss_ce_0: 0.5029  m1_loss_mask_0: 0.1749  m1_loss_dice_0: 1.32  m1_loss_ce_1: 0.5563  m1_loss_mask_1: 0.1585  m1_loss_dice_1: 1.236  m1_loss_ce_2: 0.512  m1_loss_mask_2: 0.1453  m1_loss_dice_2: 1.188  m1_loss_ce_3: 0.4678  m1_loss_mask_3: 0.1489  m1_loss_dice_3: 1.127  m1_loss_ce_4: 0.4168  m1_loss_mask_4: 0.1462  m1_loss_dice_4: 1.137  m1_loss_ce_5: 0.3892  m1_loss_mask_5: 0.1467  m1_loss_dice_5: 1.111  m1_loss_ce_6: 0.3822  m1_loss_mask_6: 0.1458  m1_loss_dice_6: 1.133  m1_loss_ce_7: 0.362  m1_loss_mask_7: 0.1434  m1_loss_dice_7: 1.111  m1_loss_ce_8: 0.4028  m1_loss_mask_8: 0.1462  m1_loss_dice_8: 1.106  m2_loss_ce: 0.4713  m2_loss_mask: 0.1555  m2_loss_dice: 1.16  m2_loss_ce_0: 0.5864  m2_loss_mask_0: 0.1739  m2_loss_dice_0: 1.354  m2_loss_ce_1: 0.6464  m2_loss_mask_1: 0.1636  m2_loss_dice_1: 1.291  m2_loss_ce_2: 0.5651  m2_loss_mask_2: 0.1571  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.4942  m2_loss_mask_3: 0.1578  m2_loss_dice_3: 1.18  m2_loss_ce_4: 0.5065  m2_loss_mask_4: 0.1511  m2_loss_dice_4: 1.173  m2_loss_ce_5: 0.4659  m2_loss_mask_5: 0.1557  m2_loss_dice_5: 1.153  m2_loss_ce_6: 0.452  m2_loss_mask_6: 0.154  m2_loss_dice_6: 1.165  m2_loss_ce_7: 0.4736  m2_loss_mask_7: 0.1557  m2_loss_dice_7: 1.152  m2_loss_ce_8: 0.4434  m2_loss_mask_8: 0.1549  m2_loss_dice_8: 1.164  com_loss_ce: 1.781  com_loss_mask: 0.6926  com_loss_dice: 0.9702    time: 1.4392  last_time: 1.4599  data_time: 0.0523  last_data_time: 0.0493   lr: 0.0001  max_mem: 36547M
[09/08 23:25:23] d2.utils.events INFO:  eta: 0:00:57  iter: 1959  total_loss: 38.94  m1_loss_ce: 0.4011  m1_loss_mask: 0.1504  m1_loss_dice: 1.12  m1_loss_ce_0: 0.5051  m1_loss_mask_0: 0.1728  m1_loss_dice_0: 1.292  m1_loss_ce_1: 0.5516  m1_loss_mask_1: 0.1642  m1_loss_dice_1: 1.197  m1_loss_ce_2: 0.5176  m1_loss_mask_2: 0.1557  m1_loss_dice_2: 1.183  m1_loss_ce_3: 0.4585  m1_loss_mask_3: 0.1558  m1_loss_dice_3: 1.11  m1_loss_ce_4: 0.4106  m1_loss_mask_4: 0.1544  m1_loss_dice_4: 1.131  m1_loss_ce_5: 0.4104  m1_loss_mask_5: 0.1527  m1_loss_dice_5: 1.109  m1_loss_ce_6: 0.397  m1_loss_mask_6: 0.1486  m1_loss_dice_6: 1.111  m1_loss_ce_7: 0.3894  m1_loss_mask_7: 0.1511  m1_loss_dice_7: 1.112  m1_loss_ce_8: 0.4099  m1_loss_mask_8: 0.149  m1_loss_dice_8: 1.118  m2_loss_ce: 0.4494  m2_loss_mask: 0.158  m2_loss_dice: 1.149  m2_loss_ce_0: 0.5418  m2_loss_mask_0: 0.1752  m2_loss_dice_0: 1.313  m2_loss_ce_1: 0.6245  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.248  m2_loss_ce_2: 0.5594  m2_loss_mask_2: 0.1599  m2_loss_dice_2: 1.186  m2_loss_ce_3: 0.5061  m2_loss_mask_3: 0.1569  m2_loss_dice_3: 1.158  m2_loss_ce_4: 0.4709  m2_loss_mask_4: 0.1582  m2_loss_dice_4: 1.133  m2_loss_ce_5: 0.4469  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.169  m2_loss_ce_6: 0.4398  m2_loss_mask_6: 0.1575  m2_loss_dice_6: 1.131  m2_loss_ce_7: 0.4409  m2_loss_mask_7: 0.1593  m2_loss_dice_7: 1.108  m2_loss_ce_8: 0.4466  m2_loss_mask_8: 0.1566  m2_loss_dice_8: 1.128  com_loss_ce: 1.761  com_loss_mask: 0.6926  com_loss_dice: 0.9713    time: 1.4390  last_time: 1.3990  data_time: 0.0534  last_data_time: 0.0440   lr: 0.0001  max_mem: 36547M
[09/08 23:25:53] d2.utils.events INFO:  eta: 0:00:28  iter: 1979  total_loss: 39.34  m1_loss_ce: 0.3826  m1_loss_mask: 0.1471  m1_loss_dice: 1.145  m1_loss_ce_0: 0.4837  m1_loss_mask_0: 0.1662  m1_loss_dice_0: 1.293  m1_loss_ce_1: 0.5542  m1_loss_mask_1: 0.1598  m1_loss_dice_1: 1.245  m1_loss_ce_2: 0.4839  m1_loss_mask_2: 0.1511  m1_loss_dice_2: 1.178  m1_loss_ce_3: 0.4392  m1_loss_mask_3: 0.1487  m1_loss_dice_3: 1.148  m1_loss_ce_4: 0.3881  m1_loss_mask_4: 0.1484  m1_loss_dice_4: 1.132  m1_loss_ce_5: 0.3781  m1_loss_mask_5: 0.1482  m1_loss_dice_5: 1.158  m1_loss_ce_6: 0.3798  m1_loss_mask_6: 0.1449  m1_loss_dice_6: 1.107  m1_loss_ce_7: 0.3745  m1_loss_mask_7: 0.1432  m1_loss_dice_7: 1.117  m1_loss_ce_8: 0.3995  m1_loss_mask_8: 0.1466  m1_loss_dice_8: 1.086  m2_loss_ce: 0.4263  m2_loss_mask: 0.162  m2_loss_dice: 1.188  m2_loss_ce_0: 0.5308  m2_loss_mask_0: 0.1755  m2_loss_dice_0: 1.335  m2_loss_ce_1: 0.6138  m2_loss_mask_1: 0.1799  m2_loss_dice_1: 1.289  m2_loss_ce_2: 0.5273  m2_loss_mask_2: 0.1706  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.4801  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.204  m2_loss_ce_4: 0.4704  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.159  m2_loss_ce_5: 0.4694  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.147  m2_loss_ce_6: 0.4243  m2_loss_mask_6: 0.161  m2_loss_dice_6: 1.161  m2_loss_ce_7: 0.434  m2_loss_mask_7: 0.1611  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.4608  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.17  com_loss_ce: 1.76  com_loss_mask: 0.6926  com_loss_dice: 0.9714    time: 1.4392  last_time: 1.4489  data_time: 0.0644  last_data_time: 0.1261   lr: 0.0001  max_mem: 36547M
[09/08 23:26:22] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r101_6_9_i_n_008_2000_2_softmax_entropy_2000_1000/model_final.pth
[09/08 23:26:24] d2.utils.events INFO:  eta: 0:00:00  iter: 1999  total_loss: 42.92  m1_loss_ce: 0.4264  m1_loss_mask: 0.1542  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5363  m1_loss_mask_0: 0.1716  m1_loss_dice_0: 1.341  m1_loss_ce_1: 0.6015  m1_loss_mask_1: 0.1627  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5556  m1_loss_mask_2: 0.1538  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.4626  m1_loss_mask_3: 0.158  m1_loss_dice_3: 1.162  m1_loss_ce_4: 0.4651  m1_loss_mask_4: 0.1546  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4481  m1_loss_mask_5: 0.1542  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.4458  m1_loss_mask_6: 0.1525  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4709  m1_loss_mask_7: 0.153  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4347  m1_loss_mask_8: 0.1522  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4845  m2_loss_mask: 0.1664  m2_loss_dice: 1.214  m2_loss_ce_0: 0.6333  m2_loss_mask_0: 0.183  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.725  m2_loss_mask_1: 0.1742  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.6517  m2_loss_mask_2: 0.1668  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5449  m2_loss_mask_3: 0.1646  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5468  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.227  m2_loss_ce_5: 0.4995  m2_loss_mask_5: 0.1634  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.5048  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5158  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.4919  m2_loss_mask_8: 0.1663  m2_loss_dice_8: 1.201  com_loss_ce: 1.771  com_loss_mask: 0.6926  com_loss_dice: 0.9745    time: 1.4392  last_time: 1.4212  data_time: 0.0531  last_data_time: 0.0549   lr: 0.0001  max_mem: 36547M
[09/08 23:26:24] d2.engine.hooks INFO: Overall training speed: 1998 iterations in 0:47:55 (1.4392 s / it)
[09/08 23:26:24] d2.engine.hooks INFO: Total training time: 0:48:10 (0:00:14 on hooks)
[09/08 23:26:25] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/08 23:26:25] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/08 23:26:25] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/08 23:26:25] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/08 23:26:25] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/08 23:27:51] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalft58yc3w ...
[09/08 23:28:53] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 60.948 | 81.190 | 74.039 |      19       |
| Things | 55.305 | 80.665 | 68.273 |       8       |
| Stuff  | 65.051 | 81.572 | 78.233 |      11       |
[09/08 23:28:53] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.593 | 97.897 | 99.690 |     Stuff     |
| class_8  | 74.200 | 84.185 | 88.139 |     Stuff     |
| class_11 | 87.319 | 89.506 | 97.556 |     Stuff     |
| class_12 | 42.196 | 79.000 | 53.412 |     Stuff     |
| class_13 | 34.831 | 76.973 | 45.251 |     Stuff     |
| class_17 | 48.345 | 64.459 | 75.000 |     Stuff     |
| class_19 | 51.825 | 69.542 | 74.523 |     Stuff     |
| class_20 | 64.550 | 77.134 | 83.686 |     Stuff     |
| class_21 | 89.234 | 90.445 | 98.661 |     Stuff     |
| class_22 | 37.359 | 75.652 | 49.383 |     Stuff     |
| class_23 | 88.111 | 92.495 | 95.260 |     Stuff     |
| class_24 | 55.573 | 77.780 | 71.449 |    Things     |
| class_25 | 50.527 | 73.596 | 68.653 |    Things     |
| class_26 | 67.664 | 83.687 | 80.855 |    Things     |
| class_27 | 53.755 | 88.472 | 60.759 |    Things     |
| class_28 | 67.716 | 91.314 | 74.157 |    Things     |
| class_31 | 61.328 | 84.916 | 72.222 |    Things     |
| class_32 | 41.360 | 73.816 | 56.031 |    Things     |
| class_33 | 44.518 | 71.739 | 62.056 |    Things     |
[09/08 23:28:53] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/08 23:28:53] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/08 23:28:53] d2.evaluation.testing INFO: copypaste: 60.9477,81.1900,74.0392,55.3052,80.6651,68.2728,65.0513,81.5718,78.2330,97.5929,97.8966,99.6898,74.2002,84.1851,88.1393,87.3190,89.5065,97.5560,42.1959,79.0001,53.4125,34.8314,76.9731,45.2514,48.3445,64.4594,75.0000,51.8254,69.5424,74.5234,64.5503,77.1335,83.6864,89.2345,90.4454,98.6612,37.3590,75.6520,49.3827,88.1111,92.4953,95.2601,55.5729,77.7803,71.4486,50.5265,73.5965,68.6534,67.6644,83.6865,80.8545,53.7553,88.4723,60.7595,67.7162,91.3143,74.1573,61.3283,84.9161,72.2222,41.3600,73.8161,56.0311,44.5180,71.7390,62.0555
