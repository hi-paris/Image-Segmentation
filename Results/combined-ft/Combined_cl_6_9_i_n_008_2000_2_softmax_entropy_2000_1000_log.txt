[09/08 20:41:33] detectron2 INFO: Rank of current process: 0. World size: 2
[09/08 20:41:33] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/08 20:41:33] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/cl_Comb_2000_2_softmax_entropy_2000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[09/08 20:41:33] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/cl_Comb_2000_2_softmax_entropy_2000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_2000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_2000_2_softmax_entropy_2000_1000
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 2000
TEST:
  EVAL_PERIOD: 2000


[09/08 20:41:33] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: convnext_large_d_320
    CLIP_PRETRAINED_WEIGHTS: laion2b_s29b_b131k_ft_soup
    EMBED_DIM: 768
    ENSEMBLE_ON_VALID_MASK: false
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_2000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_2000_2_softmax_entropy_2000_1000
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/08 20:41:33] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_2000_2_softmax_entropy_2000_1000/config.yaml
[09/08 20:41:34] d2.utils.env INFO: Using a generated random seed 35307965
[09/08 20:41:42] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): TimmModel(
        (trunk): ConvNeXt(
          (stem): Sequential(
            (0): Conv2d(3, 192, kernel_size=(4, 4), stride=(4, 4))
            (1): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
          )
          (stages): Sequential(
            (0): ConvNeXtStage(
              (downsample): Identity()
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): Identity()
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.003)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.006)
                )
              )
            )
            (1): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(192, 384, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.009)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.011)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.014)
                )
              )
            )
            (2): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((384,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(384, 768, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.017)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.020)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.023)
                )
                (3): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.026)
                )
                (4): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.029)
                )
                (5): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.031)
                )
                (6): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.034)
                )
                (7): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.037)
                )
                (8): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.040)
                )
                (9): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.043)
                )
                (10): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.046)
                )
                (11): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.049)
                )
                (12): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.051)
                )
                (13): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.054)
                )
                (14): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.057)
                )
                (15): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.060)
                )
                (16): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.063)
                )
                (17): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.066)
                )
                (18): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.069)
                )
                (19): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.071)
                )
                (20): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.074)
                )
                (21): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.077)
                )
                (22): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.080)
                )
                (23): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.083)
                )
                (24): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.086)
                )
                (25): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.089)
                )
                (26): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.091)
                )
              )
            )
            (3): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((768,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(768, 1536, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.094)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.097)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.100)
                )
              )
            )
          )
          (norm_pre): Identity()
          (head): NormMlpClassifierHead(
            (global_pool): SelectAdaptivePool2d(pool_type=avg, flatten=Identity())
            (norm): LayerNorm2d((1536,), eps=1e-06, elementwise_affine=True)
            (flatten): Flatten(start_dim=1, end_dim=-1)
            (pre_logits): Identity()
            (drop): Dropout(p=0.0, inplace=False)
            (fc): Identity()
          )
        )
        (head): Sequential(
          (mlp): Mlp(
            (fc1): Linear(in_features=1536, out_features=1536, bias=True)
            (act): GELU(approximate='none')
            (drop1): Dropout(p=0.0, inplace=False)
            (norm): Identity()
            (fc2): Linear(in_features=1536, out_features=768, bias=False)
            (drop2): Dropout(p=0, inplace=False)
          )
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-15): 16 x ResidualAttentionBlock(
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): GELU(approximate='none')
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 768)
      (ln_final): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=768, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 768)
)
[09/08 20:41:42] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/08 20:41:42] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/08 20:41:42] d2.data.build INFO: Using training sampler TrainingSampler
[09/08 20:41:43] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/08 20:41:43] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/08 20:41:43] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/08 20:41:43] d2.data.build INFO: Making batched data loader with batch_size=4
[09/08 20:41:43] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/08 20:41:52] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): TimmModel(
        (trunk): ConvNeXt(
          (stem): Sequential(
            (0): Conv2d(3, 192, kernel_size=(4, 4), stride=(4, 4))
            (1): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
          )
          (stages): Sequential(
            (0): ConvNeXtStage(
              (downsample): Identity()
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): Identity()
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.003)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.006)
                )
              )
            )
            (1): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(192, 384, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.009)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.011)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.014)
                )
              )
            )
            (2): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((384,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(384, 768, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.017)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.020)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.023)
                )
                (3): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.026)
                )
                (4): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.029)
                )
                (5): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.031)
                )
                (6): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.034)
                )
                (7): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.037)
                )
                (8): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.040)
                )
                (9): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.043)
                )
                (10): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.046)
                )
                (11): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.049)
                )
                (12): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.051)
                )
                (13): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.054)
                )
                (14): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.057)
                )
                (15): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.060)
                )
                (16): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.063)
                )
                (17): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.066)
                )
                (18): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.069)
                )
                (19): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.071)
                )
                (20): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.074)
                )
                (21): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.077)
                )
                (22): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.080)
                )
                (23): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.083)
                )
                (24): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.086)
                )
                (25): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.089)
                )
                (26): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.091)
                )
              )
            )
            (3): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((768,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(768, 1536, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.094)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.097)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.100)
                )
              )
            )
          )
          (norm_pre): Identity()
          (head): NormMlpClassifierHead(
            (global_pool): SelectAdaptivePool2d(pool_type=avg, flatten=Identity())
            (norm): LayerNorm2d((1536,), eps=1e-06, elementwise_affine=True)
            (flatten): Flatten(start_dim=1, end_dim=-1)
            (pre_logits): Identity()
            (drop): Dropout(p=0.0, inplace=False)
            (fc): Identity()
          )
        )
        (head): Sequential(
          (mlp): Mlp(
            (fc1): Linear(in_features=1536, out_features=1536, bias=True)
            (act): GELU(approximate='none')
            (drop1): Dropout(p=0.0, inplace=False)
            (norm): Identity()
            (fc2): Linear(in_features=1536, out_features=768, bias=False)
            (drop2): Dropout(p=0, inplace=False)
          )
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-15): 16 x ResidualAttentionBlock(
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): GELU(approximate='none')
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 768)
      (ln_final): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=768, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 768)
)
[09/08 20:41:52] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_2000_19/model_final.pth ...
[09/08 20:41:52] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_2000_19/model_final.pth ...
[09/08 20:41:52] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_2000_19/model_final.pth ...
[09/08 20:41:52] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_2000_19/model_final.pth ...
[09/08 20:42:33] d2.utils.events INFO:  eta: 0:54:29  iter: 19  total_loss: 40.09  m1_loss_ce: 0.4504  m1_loss_mask: 0.1456  m1_loss_dice: 1.108  m1_loss_ce_0: 0.4916  m1_loss_mask_0: 0.1668  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.5478  m1_loss_mask_1: 0.1491  m1_loss_dice_1: 1.275  m1_loss_ce_2: 0.5034  m1_loss_mask_2: 0.1462  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.5072  m1_loss_mask_3: 0.1449  m1_loss_dice_3: 1.188  m1_loss_ce_4: 0.4276  m1_loss_mask_4: 0.1446  m1_loss_dice_4: 1.122  m1_loss_ce_5: 0.4082  m1_loss_mask_5: 0.1463  m1_loss_dice_5: 1.145  m1_loss_ce_6: 0.4527  m1_loss_mask_6: 0.1444  m1_loss_dice_6: 1.139  m1_loss_ce_7: 0.4407  m1_loss_mask_7: 0.142  m1_loss_dice_7: 1.142  m1_loss_ce_8: 0.4303  m1_loss_mask_8: 0.1456  m1_loss_dice_8: 1.138  m2_loss_ce: 0.4023  m2_loss_mask: 0.1486  m2_loss_dice: 1.136  m2_loss_ce_0: 0.5163  m2_loss_mask_0: 0.173  m2_loss_dice_0: 1.353  m2_loss_ce_1: 0.5884  m2_loss_mask_1: 0.1645  m2_loss_dice_1: 1.28  m2_loss_ce_2: 0.5199  m2_loss_mask_2: 0.1542  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.4749  m2_loss_mask_3: 0.1534  m2_loss_dice_3: 1.176  m2_loss_ce_4: 0.4148  m2_loss_mask_4: 0.1503  m2_loss_dice_4: 1.157  m2_loss_ce_5: 0.4127  m2_loss_mask_5: 0.1506  m2_loss_dice_5: 1.152  m2_loss_ce_6: 0.4078  m2_loss_mask_6: 0.1506  m2_loss_dice_6: 1.162  m2_loss_ce_7: 0.43  m2_loss_mask_7: 0.1478  m2_loss_dice_7: 1.103  m2_loss_ce_8: 0.4273  m2_loss_mask_8: 0.1483  m2_loss_dice_8: 1.137  com_loss_ce: 1.774  com_loss_mask: 0.6927  com_loss_dice: 0.9745    time: 1.6639  last_time: 1.6616  data_time: 0.2614  last_data_time: 0.0439   lr: 0.0001  max_mem: 36272M
[09/08 20:43:07] d2.utils.events INFO:  eta: 0:53:49  iter: 39  total_loss: 37.13  m1_loss_ce: 0.3911  m1_loss_mask: 0.1488  m1_loss_dice: 1.065  m1_loss_ce_0: 0.4588  m1_loss_mask_0: 0.1813  m1_loss_dice_0: 1.273  m1_loss_ce_1: 0.5623  m1_loss_mask_1: 0.1661  m1_loss_dice_1: 1.177  m1_loss_ce_2: 0.484  m1_loss_mask_2: 0.1584  m1_loss_dice_2: 1.134  m1_loss_ce_3: 0.4396  m1_loss_mask_3: 0.1531  m1_loss_dice_3: 1.078  m1_loss_ce_4: 0.3962  m1_loss_mask_4: 0.151  m1_loss_dice_4: 1.102  m1_loss_ce_5: 0.4145  m1_loss_mask_5: 0.1497  m1_loss_dice_5: 1.089  m1_loss_ce_6: 0.363  m1_loss_mask_6: 0.1493  m1_loss_dice_6: 1.07  m1_loss_ce_7: 0.3825  m1_loss_mask_7: 0.15  m1_loss_dice_7: 1.099  m1_loss_ce_8: 0.4153  m1_loss_mask_8: 0.1504  m1_loss_dice_8: 1.072  m2_loss_ce: 0.3774  m2_loss_mask: 0.1582  m2_loss_dice: 1.07  m2_loss_ce_0: 0.5241  m2_loss_mask_0: 0.1738  m2_loss_dice_0: 1.238  m2_loss_ce_1: 0.5357  m2_loss_mask_1: 0.1652  m2_loss_dice_1: 1.192  m2_loss_ce_2: 0.4887  m2_loss_mask_2: 0.159  m2_loss_dice_2: 1.138  m2_loss_ce_3: 0.4297  m2_loss_mask_3: 0.1586  m2_loss_dice_3: 1.104  m2_loss_ce_4: 0.3975  m2_loss_mask_4: 0.1576  m2_loss_dice_4: 1.081  m2_loss_ce_5: 0.4013  m2_loss_mask_5: 0.1563  m2_loss_dice_5: 1.084  m2_loss_ce_6: 0.382  m2_loss_mask_6: 0.1551  m2_loss_dice_6: 1.075  m2_loss_ce_7: 0.4031  m2_loss_mask_7: 0.1547  m2_loss_dice_7: 1.079  m2_loss_ce_8: 0.3727  m2_loss_mask_8: 0.1542  m2_loss_dice_8: 1.049  com_loss_ce: 1.736  com_loss_mask: 0.6927  com_loss_dice: 0.9711    time: 1.6603  last_time: 1.6407  data_time: 0.0479  last_data_time: 0.0312   lr: 0.0001  max_mem: 36272M
[09/08 20:43:40] d2.utils.events INFO:  eta: 0:53:20  iter: 59  total_loss: 37.85  m1_loss_ce: 0.4026  m1_loss_mask: 0.1461  m1_loss_dice: 1.105  m1_loss_ce_0: 0.5199  m1_loss_mask_0: 0.175  m1_loss_dice_0: 1.307  m1_loss_ce_1: 0.5738  m1_loss_mask_1: 0.1558  m1_loss_dice_1: 1.269  m1_loss_ce_2: 0.4991  m1_loss_mask_2: 0.1499  m1_loss_dice_2: 1.166  m1_loss_ce_3: 0.4324  m1_loss_mask_3: 0.1471  m1_loss_dice_3: 1.145  m1_loss_ce_4: 0.4288  m1_loss_mask_4: 0.147  m1_loss_dice_4: 1.137  m1_loss_ce_5: 0.4057  m1_loss_mask_5: 0.1475  m1_loss_dice_5: 1.132  m1_loss_ce_6: 0.3903  m1_loss_mask_6: 0.1474  m1_loss_dice_6: 1.097  m1_loss_ce_7: 0.4113  m1_loss_mask_7: 0.1475  m1_loss_dice_7: 1.087  m1_loss_ce_8: 0.3847  m1_loss_mask_8: 0.1459  m1_loss_dice_8: 1.117  m2_loss_ce: 0.3807  m2_loss_mask: 0.1456  m2_loss_dice: 1.089  m2_loss_ce_0: 0.5395  m2_loss_mask_0: 0.1667  m2_loss_dice_0: 1.283  m2_loss_ce_1: 0.5852  m2_loss_mask_1: 0.1548  m2_loss_dice_1: 1.201  m2_loss_ce_2: 0.5012  m2_loss_mask_2: 0.1492  m2_loss_dice_2: 1.16  m2_loss_ce_3: 0.4723  m2_loss_mask_3: 0.1465  m2_loss_dice_3: 1.151  m2_loss_ce_4: 0.4535  m2_loss_mask_4: 0.1461  m2_loss_dice_4: 1.119  m2_loss_ce_5: 0.4133  m2_loss_mask_5: 0.1449  m2_loss_dice_5: 1.113  m2_loss_ce_6: 0.4021  m2_loss_mask_6: 0.1468  m2_loss_dice_6: 1.12  m2_loss_ce_7: 0.3934  m2_loss_mask_7: 0.146  m2_loss_dice_7: 1.069  m2_loss_ce_8: 0.3984  m2_loss_mask_8: 0.1449  m2_loss_dice_8: 1.102  com_loss_ce: 1.75  com_loss_mask: 0.6927  com_loss_dice: 0.9713    time: 1.6604  last_time: 1.6336  data_time: 0.0449  last_data_time: 0.0396   lr: 0.0001  max_mem: 36272M
[09/08 20:44:14] d2.utils.events INFO:  eta: 0:53:05  iter: 79  total_loss: 38.9  m1_loss_ce: 0.4103  m1_loss_mask: 0.1398  m1_loss_dice: 1.137  m1_loss_ce_0: 0.516  m1_loss_mask_0: 0.1702  m1_loss_dice_0: 1.296  m1_loss_ce_1: 0.5584  m1_loss_mask_1: 0.1555  m1_loss_dice_1: 1.184  m1_loss_ce_2: 0.4569  m1_loss_mask_2: 0.1546  m1_loss_dice_2: 1.19  m1_loss_ce_3: 0.4117  m1_loss_mask_3: 0.1505  m1_loss_dice_3: 1.114  m1_loss_ce_4: 0.3875  m1_loss_mask_4: 0.1453  m1_loss_dice_4: 1.107  m1_loss_ce_5: 0.3831  m1_loss_mask_5: 0.1467  m1_loss_dice_5: 1.11  m1_loss_ce_6: 0.3706  m1_loss_mask_6: 0.1418  m1_loss_dice_6: 1.079  m1_loss_ce_7: 0.3471  m1_loss_mask_7: 0.14  m1_loss_dice_7: 1.066  m1_loss_ce_8: 0.3783  m1_loss_mask_8: 0.1409  m1_loss_dice_8: 1.075  m2_loss_ce: 0.4216  m2_loss_mask: 0.1487  m2_loss_dice: 1.078  m2_loss_ce_0: 0.5273  m2_loss_mask_0: 0.1712  m2_loss_dice_0: 1.315  m2_loss_ce_1: 0.5607  m2_loss_mask_1: 0.1595  m2_loss_dice_1: 1.214  m2_loss_ce_2: 0.4984  m2_loss_mask_2: 0.1546  m2_loss_dice_2: 1.182  m2_loss_ce_3: 0.4547  m2_loss_mask_3: 0.1546  m2_loss_dice_3: 1.152  m2_loss_ce_4: 0.4221  m2_loss_mask_4: 0.154  m2_loss_dice_4: 1.104  m2_loss_ce_5: 0.4276  m2_loss_mask_5: 0.1462  m2_loss_dice_5: 1.111  m2_loss_ce_6: 0.4046  m2_loss_mask_6: 0.1496  m2_loss_dice_6: 1.082  m2_loss_ce_7: 0.4044  m2_loss_mask_7: 0.1462  m2_loss_dice_7: 1.086  m2_loss_ce_8: 0.4073  m2_loss_mask_8: 0.1461  m2_loss_dice_8: 1.075  com_loss_ce: 1.709  com_loss_mask: 0.6926  com_loss_dice: 0.9735    time: 1.6663  last_time: 1.6795  data_time: 0.0485  last_data_time: 0.0421   lr: 0.0001  max_mem: 36367M
[09/08 20:44:48] d2.utils.events INFO:  eta: 0:52:40  iter: 99  total_loss: 37.78  m1_loss_ce: 0.4018  m1_loss_mask: 0.1465  m1_loss_dice: 1.06  m1_loss_ce_0: 0.5114  m1_loss_mask_0: 0.1744  m1_loss_dice_0: 1.273  m1_loss_ce_1: 0.5675  m1_loss_mask_1: 0.1546  m1_loss_dice_1: 1.174  m1_loss_ce_2: 0.4656  m1_loss_mask_2: 0.1542  m1_loss_dice_2: 1.122  m1_loss_ce_3: 0.4344  m1_loss_mask_3: 0.1539  m1_loss_dice_3: 1.062  m1_loss_ce_4: 0.4242  m1_loss_mask_4: 0.1517  m1_loss_dice_4: 1.084  m1_loss_ce_5: 0.4281  m1_loss_mask_5: 0.1484  m1_loss_dice_5: 1.076  m1_loss_ce_6: 0.4  m1_loss_mask_6: 0.1482  m1_loss_dice_6: 1.046  m1_loss_ce_7: 0.3964  m1_loss_mask_7: 0.1466  m1_loss_dice_7: 1.069  m1_loss_ce_8: 0.3932  m1_loss_mask_8: 0.145  m1_loss_dice_8: 1.066  m2_loss_ce: 0.3822  m2_loss_mask: 0.1445  m2_loss_dice: 1.061  m2_loss_ce_0: 0.5063  m2_loss_mask_0: 0.1664  m2_loss_dice_0: 1.274  m2_loss_ce_1: 0.5514  m2_loss_mask_1: 0.1596  m2_loss_dice_1: 1.184  m2_loss_ce_2: 0.497  m2_loss_mask_2: 0.1483  m2_loss_dice_2: 1.133  m2_loss_ce_3: 0.4399  m2_loss_mask_3: 0.1479  m2_loss_dice_3: 1.109  m2_loss_ce_4: 0.3994  m2_loss_mask_4: 0.1445  m2_loss_dice_4: 1.072  m2_loss_ce_5: 0.3876  m2_loss_mask_5: 0.1461  m2_loss_dice_5: 1.062  m2_loss_ce_6: 0.3941  m2_loss_mask_6: 0.1483  m2_loss_dice_6: 1.087  m2_loss_ce_7: 0.3878  m2_loss_mask_7: 0.1465  m2_loss_dice_7: 1.07  m2_loss_ce_8: 0.3656  m2_loss_mask_8: 0.1463  m2_loss_dice_8: 1.093  com_loss_ce: 1.704  com_loss_mask: 0.6927  com_loss_dice: 0.9718    time: 1.6683  last_time: 1.6631  data_time: 0.0497  last_data_time: 0.0556   lr: 0.0001  max_mem: 36367M
[09/08 20:45:22] d2.utils.events INFO:  eta: 0:52:11  iter: 119  total_loss: 37.7  m1_loss_ce: 0.3852  m1_loss_mask: 0.1471  m1_loss_dice: 1.092  m1_loss_ce_0: 0.4853  m1_loss_mask_0: 0.1702  m1_loss_dice_0: 1.264  m1_loss_ce_1: 0.5586  m1_loss_mask_1: 0.1617  m1_loss_dice_1: 1.202  m1_loss_ce_2: 0.5143  m1_loss_mask_2: 0.1562  m1_loss_dice_2: 1.16  m1_loss_ce_3: 0.4341  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.111  m1_loss_ce_4: 0.4291  m1_loss_mask_4: 0.1538  m1_loss_dice_4: 1.102  m1_loss_ce_5: 0.3946  m1_loss_mask_5: 0.1544  m1_loss_dice_5: 1.065  m1_loss_ce_6: 0.3709  m1_loss_mask_6: 0.1515  m1_loss_dice_6: 1.042  m1_loss_ce_7: 0.3935  m1_loss_mask_7: 0.1489  m1_loss_dice_7: 1.112  m1_loss_ce_8: 0.3963  m1_loss_mask_8: 0.1495  m1_loss_dice_8: 1.11  m2_loss_ce: 0.385  m2_loss_mask: 0.1458  m2_loss_dice: 1.044  m2_loss_ce_0: 0.5393  m2_loss_mask_0: 0.1655  m2_loss_dice_0: 1.227  m2_loss_ce_1: 0.5657  m2_loss_mask_1: 0.1643  m2_loss_dice_1: 1.2  m2_loss_ce_2: 0.5208  m2_loss_mask_2: 0.1566  m2_loss_dice_2: 1.179  m2_loss_ce_3: 0.4666  m2_loss_mask_3: 0.1518  m2_loss_dice_3: 1.082  m2_loss_ce_4: 0.4319  m2_loss_mask_4: 0.1475  m2_loss_dice_4: 1.095  m2_loss_ce_5: 0.4055  m2_loss_mask_5: 0.1463  m2_loss_dice_5: 1.089  m2_loss_ce_6: 0.3991  m2_loss_mask_6: 0.1466  m2_loss_dice_6: 1.068  m2_loss_ce_7: 0.4019  m2_loss_mask_7: 0.1445  m2_loss_dice_7: 1.059  m2_loss_ce_8: 0.4051  m2_loss_mask_8: 0.1464  m2_loss_dice_8: 1.087  com_loss_ce: 1.702  com_loss_mask: 0.6926  com_loss_dice: 0.9716    time: 1.6714  last_time: 1.7377  data_time: 0.0520  last_data_time: 0.0747   lr: 0.0001  max_mem: 36367M
[09/08 20:45:56] d2.utils.events INFO:  eta: 0:51:45  iter: 139  total_loss: 40.78  m1_loss_ce: 0.3889  m1_loss_mask: 0.1447  m1_loss_dice: 1.151  m1_loss_ce_0: 0.5002  m1_loss_mask_0: 0.1714  m1_loss_dice_0: 1.311  m1_loss_ce_1: 0.5519  m1_loss_mask_1: 0.1608  m1_loss_dice_1: 1.261  m1_loss_ce_2: 0.4913  m1_loss_mask_2: 0.1539  m1_loss_dice_2: 1.214  m1_loss_ce_3: 0.4236  m1_loss_mask_3: 0.1497  m1_loss_dice_3: 1.156  m1_loss_ce_4: 0.3894  m1_loss_mask_4: 0.1478  m1_loss_dice_4: 1.146  m1_loss_ce_5: 0.399  m1_loss_mask_5: 0.1443  m1_loss_dice_5: 1.155  m1_loss_ce_6: 0.3822  m1_loss_mask_6: 0.1447  m1_loss_dice_6: 1.12  m1_loss_ce_7: 0.3957  m1_loss_mask_7: 0.1459  m1_loss_dice_7: 1.129  m1_loss_ce_8: 0.3591  m1_loss_mask_8: 0.1472  m1_loss_dice_8: 1.136  m2_loss_ce: 0.4376  m2_loss_mask: 0.1469  m2_loss_dice: 1.149  m2_loss_ce_0: 0.516  m2_loss_mask_0: 0.1682  m2_loss_dice_0: 1.326  m2_loss_ce_1: 0.5749  m2_loss_mask_1: 0.1536  m2_loss_dice_1: 1.279  m2_loss_ce_2: 0.5133  m2_loss_mask_2: 0.1495  m2_loss_dice_2: 1.261  m2_loss_ce_3: 0.4318  m2_loss_mask_3: 0.1486  m2_loss_dice_3: 1.144  m2_loss_ce_4: 0.4244  m2_loss_mask_4: 0.147  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.4416  m2_loss_mask_5: 0.1452  m2_loss_dice_5: 1.147  m2_loss_ce_6: 0.407  m2_loss_mask_6: 0.1466  m2_loss_dice_6: 1.163  m2_loss_ce_7: 0.432  m2_loss_mask_7: 0.1459  m2_loss_dice_7: 1.159  m2_loss_ce_8: 0.4384  m2_loss_mask_8: 0.146  m2_loss_dice_8: 1.181  com_loss_ce: 1.731  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.6771  last_time: 1.6213  data_time: 0.0602  last_data_time: 0.0427   lr: 0.0001  max_mem: 36367M
[09/08 20:46:30] d2.utils.events INFO:  eta: 0:51:19  iter: 159  total_loss: 40.79  m1_loss_ce: 0.4124  m1_loss_mask: 0.152  m1_loss_dice: 1.158  m1_loss_ce_0: 0.5063  m1_loss_mask_0: 0.1775  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.5617  m1_loss_mask_1: 0.1602  m1_loss_dice_1: 1.299  m1_loss_ce_2: 0.5046  m1_loss_mask_2: 0.1559  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.4704  m1_loss_mask_3: 0.1533  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.4248  m1_loss_mask_4: 0.1526  m1_loss_dice_4: 1.137  m1_loss_ce_5: 0.4389  m1_loss_mask_5: 0.1528  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.418  m1_loss_mask_6: 0.1548  m1_loss_dice_6: 1.176  m1_loss_ce_7: 0.4251  m1_loss_mask_7: 0.1545  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.4422  m1_loss_mask_8: 0.1524  m1_loss_dice_8: 1.17  m2_loss_ce: 0.464  m2_loss_mask: 0.1562  m2_loss_dice: 1.123  m2_loss_ce_0: 0.5514  m2_loss_mask_0: 0.1743  m2_loss_dice_0: 1.309  m2_loss_ce_1: 0.5928  m2_loss_mask_1: 0.1629  m2_loss_dice_1: 1.29  m2_loss_ce_2: 0.5365  m2_loss_mask_2: 0.161  m2_loss_dice_2: 1.219  m2_loss_ce_3: 0.4692  m2_loss_mask_3: 0.1583  m2_loss_dice_3: 1.162  m2_loss_ce_4: 0.4531  m2_loss_mask_4: 0.1569  m2_loss_dice_4: 1.164  m2_loss_ce_5: 0.4159  m2_loss_mask_5: 0.1569  m2_loss_dice_5: 1.149  m2_loss_ce_6: 0.4285  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.165  m2_loss_ce_7: 0.4491  m2_loss_mask_7: 0.1535  m2_loss_dice_7: 1.137  m2_loss_ce_8: 0.449  m2_loss_mask_8: 0.1544  m2_loss_dice_8: 1.129  com_loss_ce: 1.732  com_loss_mask: 0.6926  com_loss_dice: 0.9718    time: 1.6804  last_time: 1.7704  data_time: 0.0482  last_data_time: 0.0449   lr: 0.0001  max_mem: 36408M
[09/08 20:47:04] d2.utils.events INFO:  eta: 0:50:46  iter: 179  total_loss: 39.57  m1_loss_ce: 0.4135  m1_loss_mask: 0.1647  m1_loss_dice: 1.099  m1_loss_ce_0: 0.502  m1_loss_mask_0: 0.1856  m1_loss_dice_0: 1.261  m1_loss_ce_1: 0.5328  m1_loss_mask_1: 0.1716  m1_loss_dice_1: 1.206  m1_loss_ce_2: 0.5079  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.172  m1_loss_ce_3: 0.4554  m1_loss_mask_3: 0.1651  m1_loss_dice_3: 1.115  m1_loss_ce_4: 0.4338  m1_loss_mask_4: 0.1632  m1_loss_dice_4: 1.108  m1_loss_ce_5: 0.4331  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.103  m1_loss_ce_6: 0.4016  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.075  m1_loss_ce_7: 0.4376  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.096  m1_loss_ce_8: 0.4025  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.107  m2_loss_ce: 0.4127  m2_loss_mask: 0.1594  m2_loss_dice: 1.094  m2_loss_ce_0: 0.5169  m2_loss_mask_0: 0.181  m2_loss_dice_0: 1.268  m2_loss_ce_1: 0.5466  m2_loss_mask_1: 0.1746  m2_loss_dice_1: 1.182  m2_loss_ce_2: 0.5113  m2_loss_mask_2: 0.1658  m2_loss_dice_2: 1.171  m2_loss_ce_3: 0.4488  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.116  m2_loss_ce_4: 0.4472  m2_loss_mask_4: 0.1639  m2_loss_dice_4: 1.109  m2_loss_ce_5: 0.408  m2_loss_mask_5: 0.1604  m2_loss_dice_5: 1.097  m2_loss_ce_6: 0.4265  m2_loss_mask_6: 0.1612  m2_loss_dice_6: 1.063  m2_loss_ce_7: 0.4095  m2_loss_mask_7: 0.1601  m2_loss_dice_7: 1.096  m2_loss_ce_8: 0.4155  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.081  com_loss_ce: 1.714  com_loss_mask: 0.6927  com_loss_dice: 0.9737    time: 1.6800  last_time: 1.6743  data_time: 0.0464  last_data_time: 0.0432   lr: 0.0001  max_mem: 36408M
[09/08 20:47:38] d2.utils.events INFO:  eta: 0:50:14  iter: 199  total_loss: 39.38  m1_loss_ce: 0.4314  m1_loss_mask: 0.1449  m1_loss_dice: 1.149  m1_loss_ce_0: 0.5425  m1_loss_mask_0: 0.167  m1_loss_dice_0: 1.36  m1_loss_ce_1: 0.5633  m1_loss_mask_1: 0.1578  m1_loss_dice_1: 1.264  m1_loss_ce_2: 0.4946  m1_loss_mask_2: 0.1497  m1_loss_dice_2: 1.216  m1_loss_ce_3: 0.4406  m1_loss_mask_3: 0.1478  m1_loss_dice_3: 1.164  m1_loss_ce_4: 0.4409  m1_loss_mask_4: 0.1482  m1_loss_dice_4: 1.153  m1_loss_ce_5: 0.4404  m1_loss_mask_5: 0.1478  m1_loss_dice_5: 1.153  m1_loss_ce_6: 0.4036  m1_loss_mask_6: 0.1477  m1_loss_dice_6: 1.128  m1_loss_ce_7: 0.4134  m1_loss_mask_7: 0.1468  m1_loss_dice_7: 1.134  m1_loss_ce_8: 0.4379  m1_loss_mask_8: 0.1446  m1_loss_dice_8: 1.128  m2_loss_ce: 0.3902  m2_loss_mask: 0.1466  m2_loss_dice: 1.126  m2_loss_ce_0: 0.5285  m2_loss_mask_0: 0.1676  m2_loss_dice_0: 1.28  m2_loss_ce_1: 0.5699  m2_loss_mask_1: 0.1578  m2_loss_dice_1: 1.256  m2_loss_ce_2: 0.5231  m2_loss_mask_2: 0.152  m2_loss_dice_2: 1.222  m2_loss_ce_3: 0.4594  m2_loss_mask_3: 0.1495  m2_loss_dice_3: 1.167  m2_loss_ce_4: 0.4469  m2_loss_mask_4: 0.1482  m2_loss_dice_4: 1.158  m2_loss_ce_5: 0.424  m2_loss_mask_5: 0.1491  m2_loss_dice_5: 1.132  m2_loss_ce_6: 0.4247  m2_loss_mask_6: 0.1523  m2_loss_dice_6: 1.128  m2_loss_ce_7: 0.4192  m2_loss_mask_7: 0.1464  m2_loss_dice_7: 1.12  m2_loss_ce_8: 0.4088  m2_loss_mask_8: 0.1471  m2_loss_dice_8: 1.154  com_loss_ce: 1.727  com_loss_mask: 0.6926  com_loss_dice: 0.9721    time: 1.6830  last_time: 1.7233  data_time: 0.0532  last_data_time: 0.0636   lr: 0.0001  max_mem: 36408M
[09/08 20:48:13] d2.utils.events INFO:  eta: 0:49:43  iter: 219  total_loss: 39.87  m1_loss_ce: 0.4503  m1_loss_mask: 0.1533  m1_loss_dice: 1.133  m1_loss_ce_0: 0.5432  m1_loss_mask_0: 0.1743  m1_loss_dice_0: 1.27  m1_loss_ce_1: 0.5616  m1_loss_mask_1: 0.1593  m1_loss_dice_1: 1.246  m1_loss_ce_2: 0.5064  m1_loss_mask_2: 0.1506  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.5051  m1_loss_mask_3: 0.1531  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.4576  m1_loss_mask_4: 0.1522  m1_loss_dice_4: 1.158  m1_loss_ce_5: 0.4423  m1_loss_mask_5: 0.1558  m1_loss_dice_5: 1.112  m1_loss_ce_6: 0.4277  m1_loss_mask_6: 0.1537  m1_loss_dice_6: 1.14  m1_loss_ce_7: 0.4281  m1_loss_mask_7: 0.154  m1_loss_dice_7: 1.148  m1_loss_ce_8: 0.4102  m1_loss_mask_8: 0.1542  m1_loss_dice_8: 1.135  m2_loss_ce: 0.4373  m2_loss_mask: 0.1597  m2_loss_dice: 1.131  m2_loss_ce_0: 0.5563  m2_loss_mask_0: 0.178  m2_loss_dice_0: 1.308  m2_loss_ce_1: 0.5964  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.232  m2_loss_ce_2: 0.5378  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.202  m2_loss_ce_3: 0.464  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.17  m2_loss_ce_4: 0.4468  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.145  m2_loss_ce_5: 0.4173  m2_loss_mask_5: 0.1609  m2_loss_dice_5: 1.17  m2_loss_ce_6: 0.4242  m2_loss_mask_6: 0.1612  m2_loss_dice_6: 1.149  m2_loss_ce_7: 0.4359  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.162  m2_loss_ce_8: 0.4319  m2_loss_mask_8: 0.1594  m2_loss_dice_8: 1.147  com_loss_ce: 1.721  com_loss_mask: 0.6927  com_loss_dice: 0.9734    time: 1.6850  last_time: 1.6621  data_time: 0.0531  last_data_time: 0.0369   lr: 0.0001  max_mem: 36470M
[09/08 20:48:47] d2.utils.events INFO:  eta: 0:49:14  iter: 239  total_loss: 41.5  m1_loss_ce: 0.3611  m1_loss_mask: 0.1504  m1_loss_dice: 1.218  m1_loss_ce_0: 0.4892  m1_loss_mask_0: 0.1681  m1_loss_dice_0: 1.326  m1_loss_ce_1: 0.5309  m1_loss_mask_1: 0.1583  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.4574  m1_loss_mask_2: 0.1518  m1_loss_dice_2: 1.284  m1_loss_ce_3: 0.467  m1_loss_mask_3: 0.149  m1_loss_dice_3: 1.3  m1_loss_ce_4: 0.4038  m1_loss_mask_4: 0.1498  m1_loss_dice_4: 1.197  m1_loss_ce_5: 0.3906  m1_loss_mask_5: 0.1511  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.3911  m1_loss_mask_6: 0.1484  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.3727  m1_loss_mask_7: 0.1506  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.3812  m1_loss_mask_8: 0.149  m1_loss_dice_8: 1.207  m2_loss_ce: 0.4241  m2_loss_mask: 0.1429  m2_loss_dice: 1.152  m2_loss_ce_0: 0.5465  m2_loss_mask_0: 0.164  m2_loss_dice_0: 1.39  m2_loss_ce_1: 0.5687  m2_loss_mask_1: 0.1569  m2_loss_dice_1: 1.279  m2_loss_ce_2: 0.532  m2_loss_mask_2: 0.1456  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.4789  m2_loss_mask_3: 0.1418  m2_loss_dice_3: 1.201  m2_loss_ce_4: 0.4678  m2_loss_mask_4: 0.1413  m2_loss_dice_4: 1.223  m2_loss_ce_5: 0.4591  m2_loss_mask_5: 0.1441  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.4391  m2_loss_mask_6: 0.1425  m2_loss_dice_6: 1.155  m2_loss_ce_7: 0.452  m2_loss_mask_7: 0.1425  m2_loss_dice_7: 1.181  m2_loss_ce_8: 0.4509  m2_loss_mask_8: 0.1424  m2_loss_dice_8: 1.142  com_loss_ce: 1.74  com_loss_mask: 0.6926  com_loss_dice: 0.973    time: 1.6872  last_time: 1.7749  data_time: 0.0528  last_data_time: 0.0945   lr: 0.0001  max_mem: 36697M
[09/08 20:49:21] d2.utils.events INFO:  eta: 0:48:42  iter: 259  total_loss: 38.14  m1_loss_ce: 0.4146  m1_loss_mask: 0.1365  m1_loss_dice: 1.104  m1_loss_ce_0: 0.5036  m1_loss_mask_0: 0.1578  m1_loss_dice_0: 1.26  m1_loss_ce_1: 0.5131  m1_loss_mask_1: 0.1505  m1_loss_dice_1: 1.226  m1_loss_ce_2: 0.4691  m1_loss_mask_2: 0.1393  m1_loss_dice_2: 1.163  m1_loss_ce_3: 0.4245  m1_loss_mask_3: 0.1406  m1_loss_dice_3: 1.112  m1_loss_ce_4: 0.3834  m1_loss_mask_4: 0.1392  m1_loss_dice_4: 1.122  m1_loss_ce_5: 0.396  m1_loss_mask_5: 0.1392  m1_loss_dice_5: 1.113  m1_loss_ce_6: 0.3829  m1_loss_mask_6: 0.1385  m1_loss_dice_6: 1.097  m1_loss_ce_7: 0.368  m1_loss_mask_7: 0.1387  m1_loss_dice_7: 1.107  m1_loss_ce_8: 0.3752  m1_loss_mask_8: 0.139  m1_loss_dice_8: 1.098  m2_loss_ce: 0.369  m2_loss_mask: 0.1388  m2_loss_dice: 1.094  m2_loss_ce_0: 0.5138  m2_loss_mask_0: 0.1663  m2_loss_dice_0: 1.265  m2_loss_ce_1: 0.5313  m2_loss_mask_1: 0.1519  m2_loss_dice_1: 1.239  m2_loss_ce_2: 0.4896  m2_loss_mask_2: 0.1422  m2_loss_dice_2: 1.177  m2_loss_ce_3: 0.4292  m2_loss_mask_3: 0.1446  m2_loss_dice_3: 1.128  m2_loss_ce_4: 0.3888  m2_loss_mask_4: 0.141  m2_loss_dice_4: 1.097  m2_loss_ce_5: 0.3991  m2_loss_mask_5: 0.1391  m2_loss_dice_5: 1.073  m2_loss_ce_6: 0.385  m2_loss_mask_6: 0.1403  m2_loss_dice_6: 1.075  m2_loss_ce_7: 0.4161  m2_loss_mask_7: 0.1409  m2_loss_dice_7: 1.093  m2_loss_ce_8: 0.381  m2_loss_mask_8: 0.1404  m2_loss_dice_8: 1.061  com_loss_ce: 1.721  com_loss_mask: 0.6927  com_loss_dice: 0.9721    time: 1.6886  last_time: 1.7007  data_time: 0.0506  last_data_time: 0.0528   lr: 0.0001  max_mem: 36976M
[09/08 20:49:56] d2.utils.events INFO:  eta: 0:48:12  iter: 279  total_loss: 41.12  m1_loss_ce: 0.4192  m1_loss_mask: 0.1418  m1_loss_dice: 1.159  m1_loss_ce_0: 0.5239  m1_loss_mask_0: 0.1619  m1_loss_dice_0: 1.321  m1_loss_ce_1: 0.5632  m1_loss_mask_1: 0.1546  m1_loss_dice_1: 1.27  m1_loss_ce_2: 0.5286  m1_loss_mask_2: 0.1433  m1_loss_dice_2: 1.231  m1_loss_ce_3: 0.4703  m1_loss_mask_3: 0.1476  m1_loss_dice_3: 1.186  m1_loss_ce_4: 0.4536  m1_loss_mask_4: 0.1462  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.4387  m1_loss_mask_5: 0.1445  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.4321  m1_loss_mask_6: 0.143  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.4205  m1_loss_mask_7: 0.1429  m1_loss_dice_7: 1.111  m1_loss_ce_8: 0.4196  m1_loss_mask_8: 0.146  m1_loss_dice_8: 1.128  m2_loss_ce: 0.4248  m2_loss_mask: 0.1416  m2_loss_dice: 1.166  m2_loss_ce_0: 0.5206  m2_loss_mask_0: 0.1587  m2_loss_dice_0: 1.341  m2_loss_ce_1: 0.5722  m2_loss_mask_1: 0.1493  m2_loss_dice_1: 1.253  m2_loss_ce_2: 0.526  m2_loss_mask_2: 0.1439  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.4739  m2_loss_mask_3: 0.1438  m2_loss_dice_3: 1.181  m2_loss_ce_4: 0.4481  m2_loss_mask_4: 0.1412  m2_loss_dice_4: 1.179  m2_loss_ce_5: 0.4641  m2_loss_mask_5: 0.1439  m2_loss_dice_5: 1.175  m2_loss_ce_6: 0.4582  m2_loss_mask_6: 0.1421  m2_loss_dice_6: 1.155  m2_loss_ce_7: 0.4359  m2_loss_mask_7: 0.1418  m2_loss_dice_7: 1.176  m2_loss_ce_8: 0.4327  m2_loss_mask_8: 0.1401  m2_loss_dice_8: 1.176  com_loss_ce: 1.732  com_loss_mask: 0.6926  com_loss_dice: 0.9751    time: 1.6915  last_time: 1.7517  data_time: 0.0542  last_data_time: 0.0476   lr: 0.0001  max_mem: 36976M
[09/08 20:50:31] d2.utils.events INFO:  eta: 0:47:41  iter: 299  total_loss: 39.9  m1_loss_ce: 0.3857  m1_loss_mask: 0.1499  m1_loss_dice: 1.253  m1_loss_ce_0: 0.491  m1_loss_mask_0: 0.1682  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.56  m1_loss_mask_1: 0.164  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.4823  m1_loss_mask_2: 0.1516  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.4374  m1_loss_mask_3: 0.151  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.4116  m1_loss_mask_4: 0.1512  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.3855  m1_loss_mask_5: 0.1489  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.3891  m1_loss_mask_6: 0.1508  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.3708  m1_loss_mask_7: 0.1503  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.3767  m1_loss_mask_8: 0.1509  m1_loss_dice_8: 1.235  m2_loss_ce: 0.3892  m2_loss_mask: 0.1502  m2_loss_dice: 1.208  m2_loss_ce_0: 0.5481  m2_loss_mask_0: 0.1703  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.5827  m2_loss_mask_1: 0.1619  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.5125  m2_loss_mask_2: 0.155  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.4818  m2_loss_mask_3: 0.1529  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.4287  m2_loss_mask_4: 0.1604  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.4198  m2_loss_mask_5: 0.1485  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.4093  m2_loss_mask_6: 0.1511  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.4184  m2_loss_mask_7: 0.1476  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.4036  m2_loss_mask_8: 0.1509  m2_loss_dice_8: 1.221  com_loss_ce: 1.748  com_loss_mask: 0.6926  com_loss_dice: 0.9764    time: 1.6938  last_time: 1.7362  data_time: 0.0518  last_data_time: 0.0506   lr: 0.0001  max_mem: 36976M
[09/08 20:51:05] d2.utils.events INFO:  eta: 0:47:07  iter: 319  total_loss: 37.37  m1_loss_ce: 0.3832  m1_loss_mask: 0.1507  m1_loss_dice: 1.083  m1_loss_ce_0: 0.5042  m1_loss_mask_0: 0.1692  m1_loss_dice_0: 1.217  m1_loss_ce_1: 0.5246  m1_loss_mask_1: 0.1645  m1_loss_dice_1: 1.187  m1_loss_ce_2: 0.4436  m1_loss_mask_2: 0.1583  m1_loss_dice_2: 1.116  m1_loss_ce_3: 0.4331  m1_loss_mask_3: 0.1554  m1_loss_dice_3: 1.09  m1_loss_ce_4: 0.411  m1_loss_mask_4: 0.1542  m1_loss_dice_4: 1.075  m1_loss_ce_5: 0.392  m1_loss_mask_5: 0.151  m1_loss_dice_5: 1.097  m1_loss_ce_6: 0.3798  m1_loss_mask_6: 0.1509  m1_loss_dice_6: 1.085  m1_loss_ce_7: 0.3752  m1_loss_mask_7: 0.1514  m1_loss_dice_7: 1.088  m1_loss_ce_8: 0.3888  m1_loss_mask_8: 0.1519  m1_loss_dice_8: 1.061  m2_loss_ce: 0.3864  m2_loss_mask: 0.1479  m2_loss_dice: 1.082  m2_loss_ce_0: 0.5098  m2_loss_mask_0: 0.1702  m2_loss_dice_0: 1.235  m2_loss_ce_1: 0.548  m2_loss_mask_1: 0.1549  m2_loss_dice_1: 1.185  m2_loss_ce_2: 0.4667  m2_loss_mask_2: 0.1507  m2_loss_dice_2: 1.152  m2_loss_ce_3: 0.414  m2_loss_mask_3: 0.1467  m2_loss_dice_3: 1.091  m2_loss_ce_4: 0.4154  m2_loss_mask_4: 0.1477  m2_loss_dice_4: 1.101  m2_loss_ce_5: 0.3957  m2_loss_mask_5: 0.1478  m2_loss_dice_5: 1.086  m2_loss_ce_6: 0.3708  m2_loss_mask_6: 0.1484  m2_loss_dice_6: 1.082  m2_loss_ce_7: 0.3977  m2_loss_mask_7: 0.1473  m2_loss_dice_7: 1.084  m2_loss_ce_8: 0.3754  m2_loss_mask_8: 0.1494  m2_loss_dice_8: 1.07  com_loss_ce: 1.702  com_loss_mask: 0.6926  com_loss_dice: 0.9719    time: 1.6937  last_time: 1.6719  data_time: 0.0478  last_data_time: 0.0357   lr: 0.0001  max_mem: 36976M
[09/08 20:51:39] d2.utils.events INFO:  eta: 0:46:39  iter: 339  total_loss: 39.08  m1_loss_ce: 0.4045  m1_loss_mask: 0.1419  m1_loss_dice: 1.137  m1_loss_ce_0: 0.4984  m1_loss_mask_0: 0.1633  m1_loss_dice_0: 1.3  m1_loss_ce_1: 0.5016  m1_loss_mask_1: 0.1518  m1_loss_dice_1: 1.216  m1_loss_ce_2: 0.4623  m1_loss_mask_2: 0.1507  m1_loss_dice_2: 1.203  m1_loss_ce_3: 0.4117  m1_loss_mask_3: 0.1488  m1_loss_dice_3: 1.158  m1_loss_ce_4: 0.3777  m1_loss_mask_4: 0.1458  m1_loss_dice_4: 1.139  m1_loss_ce_5: 0.3804  m1_loss_mask_5: 0.1433  m1_loss_dice_5: 1.116  m1_loss_ce_6: 0.3687  m1_loss_mask_6: 0.1429  m1_loss_dice_6: 1.124  m1_loss_ce_7: 0.3731  m1_loss_mask_7: 0.1401  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.3709  m1_loss_mask_8: 0.1434  m1_loss_dice_8: 1.13  m2_loss_ce: 0.3987  m2_loss_mask: 0.1413  m2_loss_dice: 1.139  m2_loss_ce_0: 0.5068  m2_loss_mask_0: 0.1641  m2_loss_dice_0: 1.336  m2_loss_ce_1: 0.5418  m2_loss_mask_1: 0.1518  m2_loss_dice_1: 1.231  m2_loss_ce_2: 0.4925  m2_loss_mask_2: 0.1509  m2_loss_dice_2: 1.207  m2_loss_ce_3: 0.448  m2_loss_mask_3: 0.1416  m2_loss_dice_3: 1.151  m2_loss_ce_4: 0.4128  m2_loss_mask_4: 0.1419  m2_loss_dice_4: 1.172  m2_loss_ce_5: 0.4158  m2_loss_mask_5: 0.141  m2_loss_dice_5: 1.13  m2_loss_ce_6: 0.3672  m2_loss_mask_6: 0.1409  m2_loss_dice_6: 1.112  m2_loss_ce_7: 0.366  m2_loss_mask_7: 0.1406  m2_loss_dice_7: 1.106  m2_loss_ce_8: 0.3834  m2_loss_mask_8: 0.1398  m2_loss_dice_8: 1.113  com_loss_ce: 1.709  com_loss_mask: 0.6926  com_loss_dice: 0.9738    time: 1.6955  last_time: 1.6949  data_time: 0.0547  last_data_time: 0.0636   lr: 0.0001  max_mem: 36976M
[09/08 20:52:13] d2.utils.events INFO:  eta: 0:46:07  iter: 359  total_loss: 39.19  m1_loss_ce: 0.4108  m1_loss_mask: 0.164  m1_loss_dice: 1.142  m1_loss_ce_0: 0.5016  m1_loss_mask_0: 0.1807  m1_loss_dice_0: 1.259  m1_loss_ce_1: 0.5295  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.244  m1_loss_ce_2: 0.5188  m1_loss_mask_2: 0.1607  m1_loss_dice_2: 1.227  m1_loss_ce_3: 0.4387  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.128  m1_loss_ce_4: 0.4328  m1_loss_mask_4: 0.165  m1_loss_dice_4: 1.13  m1_loss_ce_5: 0.3968  m1_loss_mask_5: 0.1614  m1_loss_dice_5: 1.155  m1_loss_ce_6: 0.3819  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.099  m1_loss_ce_7: 0.3994  m1_loss_mask_7: 0.1594  m1_loss_dice_7: 1.105  m1_loss_ce_8: 0.3952  m1_loss_mask_8: 0.1608  m1_loss_dice_8: 1.134  m2_loss_ce: 0.4125  m2_loss_mask: 0.1671  m2_loss_dice: 1.157  m2_loss_ce_0: 0.5169  m2_loss_mask_0: 0.1866  m2_loss_dice_0: 1.293  m2_loss_ce_1: 0.5517  m2_loss_mask_1: 0.1756  m2_loss_dice_1: 1.229  m2_loss_ce_2: 0.4792  m2_loss_mask_2: 0.1672  m2_loss_dice_2: 1.166  m2_loss_ce_3: 0.4347  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.161  m2_loss_ce_4: 0.406  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.15  m2_loss_ce_5: 0.3933  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.3984  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.122  m2_loss_ce_7: 0.4198  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.097  m2_loss_ce_8: 0.3931  m2_loss_mask_8: 0.1648  m2_loss_dice_8: 1.136  com_loss_ce: 1.71  com_loss_mask: 0.6926  com_loss_dice: 0.9733    time: 1.6958  last_time: 1.6921  data_time: 0.0486  last_data_time: 0.0361   lr: 0.0001  max_mem: 36976M
[09/08 20:52:47] d2.utils.events INFO:  eta: 0:45:33  iter: 379  total_loss: 37.08  m1_loss_ce: 0.3605  m1_loss_mask: 0.1487  m1_loss_dice: 1.066  m1_loss_ce_0: 0.4701  m1_loss_mask_0: 0.1756  m1_loss_dice_0: 1.32  m1_loss_ce_1: 0.56  m1_loss_mask_1: 0.1542  m1_loss_dice_1: 1.193  m1_loss_ce_2: 0.4657  m1_loss_mask_2: 0.1485  m1_loss_dice_2: 1.146  m1_loss_ce_3: 0.4048  m1_loss_mask_3: 0.1479  m1_loss_dice_3: 1.104  m1_loss_ce_4: 0.4075  m1_loss_mask_4: 0.1493  m1_loss_dice_4: 1.084  m1_loss_ce_5: 0.3638  m1_loss_mask_5: 0.1449  m1_loss_dice_5: 1.083  m1_loss_ce_6: 0.3839  m1_loss_mask_6: 0.1492  m1_loss_dice_6: 1.076  m1_loss_ce_7: 0.3796  m1_loss_mask_7: 0.1461  m1_loss_dice_7: 1.059  m1_loss_ce_8: 0.38  m1_loss_mask_8: 0.1469  m1_loss_dice_8: 1.065  m2_loss_ce: 0.3897  m2_loss_mask: 0.1468  m2_loss_dice: 1.097  m2_loss_ce_0: 0.522  m2_loss_mask_0: 0.1696  m2_loss_dice_0: 1.258  m2_loss_ce_1: 0.5341  m2_loss_mask_1: 0.1572  m2_loss_dice_1: 1.175  m2_loss_ce_2: 0.4765  m2_loss_mask_2: 0.1516  m2_loss_dice_2: 1.128  m2_loss_ce_3: 0.4389  m2_loss_mask_3: 0.1512  m2_loss_dice_3: 1.096  m2_loss_ce_4: 0.4148  m2_loss_mask_4: 0.1489  m2_loss_dice_4: 1.074  m2_loss_ce_5: 0.3841  m2_loss_mask_5: 0.148  m2_loss_dice_5: 1.096  m2_loss_ce_6: 0.3806  m2_loss_mask_6: 0.146  m2_loss_dice_6: 1.067  m2_loss_ce_7: 0.3951  m2_loss_mask_7: 0.1483  m2_loss_dice_7: 1.073  m2_loss_ce_8: 0.3762  m2_loss_mask_8: 0.1477  m2_loss_dice_8: 1.092  com_loss_ce: 1.732  com_loss_mask: 0.6926  com_loss_dice: 0.9722    time: 1.6957  last_time: 1.6655  data_time: 0.0464  last_data_time: 0.0460   lr: 0.0001  max_mem: 36976M
[09/08 20:53:22] d2.utils.events INFO:  eta: 0:45:01  iter: 399  total_loss: 36.66  m1_loss_ce: 0.4053  m1_loss_mask: 0.1572  m1_loss_dice: 1.049  m1_loss_ce_0: 0.5037  m1_loss_mask_0: 0.1783  m1_loss_dice_0: 1.188  m1_loss_ce_1: 0.5291  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.136  m1_loss_ce_2: 0.4772  m1_loss_mask_2: 0.1593  m1_loss_dice_2: 1.053  m1_loss_ce_3: 0.4373  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.04  m1_loss_ce_4: 0.4013  m1_loss_mask_4: 0.1575  m1_loss_dice_4: 1.039  m1_loss_ce_5: 0.3894  m1_loss_mask_5: 0.1585  m1_loss_dice_5: 1.038  m1_loss_ce_6: 0.3849  m1_loss_mask_6: 0.1598  m1_loss_dice_6: 1.018  m1_loss_ce_7: 0.4006  m1_loss_mask_7: 0.1574  m1_loss_dice_7: 1.006  m1_loss_ce_8: 0.3867  m1_loss_mask_8: 0.1581  m1_loss_dice_8: 1.01  m2_loss_ce: 0.3731  m2_loss_mask: 0.1511  m2_loss_dice: 0.9995  m2_loss_ce_0: 0.5007  m2_loss_mask_0: 0.1726  m2_loss_dice_0: 1.222  m2_loss_ce_1: 0.5463  m2_loss_mask_1: 0.1655  m2_loss_dice_1: 1.137  m2_loss_ce_2: 0.4786  m2_loss_mask_2: 0.1601  m2_loss_dice_2: 1.12  m2_loss_ce_3: 0.4134  m2_loss_mask_3: 0.1532  m2_loss_dice_3: 1.075  m2_loss_ce_4: 0.3892  m2_loss_mask_4: 0.1534  m2_loss_dice_4: 1.037  m2_loss_ce_5: 0.3911  m2_loss_mask_5: 0.1517  m2_loss_dice_5: 1.06  m2_loss_ce_6: 0.3695  m2_loss_mask_6: 0.1509  m2_loss_dice_6: 1.001  m2_loss_ce_7: 0.3681  m2_loss_mask_7: 0.1506  m2_loss_dice_7: 1.031  m2_loss_ce_8: 0.3658  m2_loss_mask_8: 0.1533  m2_loss_dice_8: 1.003  com_loss_ce: 1.723  com_loss_mask: 0.6927  com_loss_dice: 0.9702    time: 1.6962  last_time: 1.6726  data_time: 0.0521  last_data_time: 0.0348   lr: 0.0001  max_mem: 36976M
[09/08 20:53:56] d2.utils.events INFO:  eta: 0:44:28  iter: 419  total_loss: 38.5  m1_loss_ce: 0.3573  m1_loss_mask: 0.144  m1_loss_dice: 1.096  m1_loss_ce_0: 0.4865  m1_loss_mask_0: 0.1686  m1_loss_dice_0: 1.323  m1_loss_ce_1: 0.5064  m1_loss_mask_1: 0.1564  m1_loss_dice_1: 1.23  m1_loss_ce_2: 0.4779  m1_loss_mask_2: 0.149  m1_loss_dice_2: 1.175  m1_loss_ce_3: 0.4282  m1_loss_mask_3: 0.1466  m1_loss_dice_3: 1.13  m1_loss_ce_4: 0.3655  m1_loss_mask_4: 0.1492  m1_loss_dice_4: 1.115  m1_loss_ce_5: 0.3664  m1_loss_mask_5: 0.1433  m1_loss_dice_5: 1.123  m1_loss_ce_6: 0.3996  m1_loss_mask_6: 0.1453  m1_loss_dice_6: 1.086  m1_loss_ce_7: 0.3943  m1_loss_mask_7: 0.1427  m1_loss_dice_7: 1.091  m1_loss_ce_8: 0.352  m1_loss_mask_8: 0.1438  m1_loss_dice_8: 1.113  m2_loss_ce: 0.4119  m2_loss_mask: 0.1516  m2_loss_dice: 1.117  m2_loss_ce_0: 0.5159  m2_loss_mask_0: 0.168  m2_loss_dice_0: 1.313  m2_loss_ce_1: 0.553  m2_loss_mask_1: 0.1619  m2_loss_dice_1: 1.206  m2_loss_ce_2: 0.5153  m2_loss_mask_2: 0.1521  m2_loss_dice_2: 1.182  m2_loss_ce_3: 0.4653  m2_loss_mask_3: 0.1532  m2_loss_dice_3: 1.115  m2_loss_ce_4: 0.4314  m2_loss_mask_4: 0.1515  m2_loss_dice_4: 1.133  m2_loss_ce_5: 0.453  m2_loss_mask_5: 0.1499  m2_loss_dice_5: 1.127  m2_loss_ce_6: 0.3692  m2_loss_mask_6: 0.1518  m2_loss_dice_6: 1.126  m2_loss_ce_7: 0.4156  m2_loss_mask_7: 0.1509  m2_loss_dice_7: 1.093  m2_loss_ce_8: 0.4102  m2_loss_mask_8: 0.1509  m2_loss_dice_8: 1.118  com_loss_ce: 1.71  com_loss_mask: 0.6926  com_loss_dice: 0.9731    time: 1.6971  last_time: 1.7001  data_time: 0.0529  last_data_time: 0.0390   lr: 0.0001  max_mem: 36976M
[09/08 20:54:30] d2.utils.events INFO:  eta: 0:43:57  iter: 439  total_loss: 39.19  m1_loss_ce: 0.3784  m1_loss_mask: 0.1477  m1_loss_dice: 1.149  m1_loss_ce_0: 0.4658  m1_loss_mask_0: 0.173  m1_loss_dice_0: 1.351  m1_loss_ce_1: 0.5867  m1_loss_mask_1: 0.1633  m1_loss_dice_1: 1.263  m1_loss_ce_2: 0.5037  m1_loss_mask_2: 0.1516  m1_loss_dice_2: 1.206  m1_loss_ce_3: 0.4449  m1_loss_mask_3: 0.1533  m1_loss_dice_3: 1.166  m1_loss_ce_4: 0.4144  m1_loss_mask_4: 0.1493  m1_loss_dice_4: 1.171  m1_loss_ce_5: 0.4269  m1_loss_mask_5: 0.1483  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.4048  m1_loss_mask_6: 0.1493  m1_loss_dice_6: 1.176  m1_loss_ce_7: 0.4062  m1_loss_mask_7: 0.1481  m1_loss_dice_7: 1.143  m1_loss_ce_8: 0.3905  m1_loss_mask_8: 0.1479  m1_loss_dice_8: 1.141  m2_loss_ce: 0.3928  m2_loss_mask: 0.1535  m2_loss_dice: 1.149  m2_loss_ce_0: 0.5337  m2_loss_mask_0: 0.1774  m2_loss_dice_0: 1.303  m2_loss_ce_1: 0.5722  m2_loss_mask_1: 0.1604  m2_loss_dice_1: 1.241  m2_loss_ce_2: 0.4899  m2_loss_mask_2: 0.1573  m2_loss_dice_2: 1.183  m2_loss_ce_3: 0.4588  m2_loss_mask_3: 0.1542  m2_loss_dice_3: 1.191  m2_loss_ce_4: 0.4037  m2_loss_mask_4: 0.1525  m2_loss_dice_4: 1.169  m2_loss_ce_5: 0.3918  m2_loss_mask_5: 0.1515  m2_loss_dice_5: 1.166  m2_loss_ce_6: 0.3802  m2_loss_mask_6: 0.1542  m2_loss_dice_6: 1.173  m2_loss_ce_7: 0.4042  m2_loss_mask_7: 0.1538  m2_loss_dice_7: 1.16  m2_loss_ce_8: 0.3876  m2_loss_mask_8: 0.155  m2_loss_dice_8: 1.149  com_loss_ce: 1.729  com_loss_mask: 0.6926  com_loss_dice: 0.9738    time: 1.6976  last_time: 1.6693  data_time: 0.0507  last_data_time: 0.0388   lr: 0.0001  max_mem: 36976M
[09/08 20:55:05] d2.utils.events INFO:  eta: 0:43:24  iter: 459  total_loss: 36.43  m1_loss_ce: 0.4193  m1_loss_mask: 0.1451  m1_loss_dice: 1.057  m1_loss_ce_0: 0.4827  m1_loss_mask_0: 0.1763  m1_loss_dice_0: 1.176  m1_loss_ce_1: 0.559  m1_loss_mask_1: 0.1611  m1_loss_dice_1: 1.167  m1_loss_ce_2: 0.4877  m1_loss_mask_2: 0.1491  m1_loss_dice_2: 1.097  m1_loss_ce_3: 0.4351  m1_loss_mask_3: 0.1518  m1_loss_dice_3: 1.082  m1_loss_ce_4: 0.4235  m1_loss_mask_4: 0.1488  m1_loss_dice_4: 1.092  m1_loss_ce_5: 0.3846  m1_loss_mask_5: 0.1463  m1_loss_dice_5: 1.057  m1_loss_ce_6: 0.4018  m1_loss_mask_6: 0.1481  m1_loss_dice_6: 1.075  m1_loss_ce_7: 0.4077  m1_loss_mask_7: 0.1491  m1_loss_dice_7: 1.051  m1_loss_ce_8: 0.3923  m1_loss_mask_8: 0.1482  m1_loss_dice_8: 1.016  m2_loss_ce: 0.3914  m2_loss_mask: 0.1523  m2_loss_dice: 1.047  m2_loss_ce_0: 0.5253  m2_loss_mask_0: 0.1822  m2_loss_dice_0: 1.192  m2_loss_ce_1: 0.5659  m2_loss_mask_1: 0.1714  m2_loss_dice_1: 1.146  m2_loss_ce_2: 0.5042  m2_loss_mask_2: 0.16  m2_loss_dice_2: 1.118  m2_loss_ce_3: 0.4694  m2_loss_mask_3: 0.1588  m2_loss_dice_3: 1.076  m2_loss_ce_4: 0.425  m2_loss_mask_4: 0.155  m2_loss_dice_4: 1.09  m2_loss_ce_5: 0.4211  m2_loss_mask_5: 0.153  m2_loss_dice_5: 1.079  m2_loss_ce_6: 0.4103  m2_loss_mask_6: 0.1547  m2_loss_dice_6: 1.057  m2_loss_ce_7: 0.4159  m2_loss_mask_7: 0.1518  m2_loss_dice_7: 1.068  m2_loss_ce_8: 0.4325  m2_loss_mask_8: 0.153  m2_loss_dice_8: 1.033  com_loss_ce: 1.709  com_loss_mask: 0.6926  com_loss_dice: 0.9703    time: 1.6981  last_time: 1.6599  data_time: 0.0520  last_data_time: 0.0391   lr: 0.0001  max_mem: 36976M
[09/08 20:55:39] d2.utils.events INFO:  eta: 0:42:50  iter: 479  total_loss: 38.37  m1_loss_ce: 0.3652  m1_loss_mask: 0.1457  m1_loss_dice: 1.122  m1_loss_ce_0: 0.4426  m1_loss_mask_0: 0.1674  m1_loss_dice_0: 1.283  m1_loss_ce_1: 0.5423  m1_loss_mask_1: 0.156  m1_loss_dice_1: 1.186  m1_loss_ce_2: 0.4767  m1_loss_mask_2: 0.1504  m1_loss_dice_2: 1.186  m1_loss_ce_3: 0.4242  m1_loss_mask_3: 0.1532  m1_loss_dice_3: 1.137  m1_loss_ce_4: 0.382  m1_loss_mask_4: 0.1501  m1_loss_dice_4: 1.159  m1_loss_ce_5: 0.392  m1_loss_mask_5: 0.1497  m1_loss_dice_5: 1.101  m1_loss_ce_6: 0.3735  m1_loss_mask_6: 0.1479  m1_loss_dice_6: 1.107  m1_loss_ce_7: 0.3604  m1_loss_mask_7: 0.1471  m1_loss_dice_7: 1.128  m1_loss_ce_8: 0.37  m1_loss_mask_8: 0.1449  m1_loss_dice_8: 1.116  m2_loss_ce: 0.403  m2_loss_mask: 0.1536  m2_loss_dice: 1.126  m2_loss_ce_0: 0.5089  m2_loss_mask_0: 0.1659  m2_loss_dice_0: 1.276  m2_loss_ce_1: 0.5673  m2_loss_mask_1: 0.1643  m2_loss_dice_1: 1.241  m2_loss_ce_2: 0.4874  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.192  m2_loss_ce_3: 0.4484  m2_loss_mask_3: 0.1599  m2_loss_dice_3: 1.118  m2_loss_ce_4: 0.4129  m2_loss_mask_4: 0.157  m2_loss_dice_4: 1.128  m2_loss_ce_5: 0.4207  m2_loss_mask_5: 0.1551  m2_loss_dice_5: 1.172  m2_loss_ce_6: 0.4299  m2_loss_mask_6: 0.1533  m2_loss_dice_6: 1.095  m2_loss_ce_7: 0.4138  m2_loss_mask_7: 0.1533  m2_loss_dice_7: 1.13  m2_loss_ce_8: 0.4253  m2_loss_mask_8: 0.1511  m2_loss_dice_8: 1.117  com_loss_ce: 1.724  com_loss_mask: 0.6926  com_loss_dice: 0.9734    time: 1.6981  last_time: 1.6900  data_time: 0.0447  last_data_time: 0.0415   lr: 0.0001  max_mem: 36976M
[09/08 20:56:13] d2.utils.events INFO:  eta: 0:42:18  iter: 499  total_loss: 37.78  m1_loss_ce: 0.3858  m1_loss_mask: 0.1396  m1_loss_dice: 1.087  m1_loss_ce_0: 0.4885  m1_loss_mask_0: 0.1615  m1_loss_dice_0: 1.282  m1_loss_ce_1: 0.509  m1_loss_mask_1: 0.1533  m1_loss_dice_1: 1.248  m1_loss_ce_2: 0.426  m1_loss_mask_2: 0.1475  m1_loss_dice_2: 1.198  m1_loss_ce_3: 0.3907  m1_loss_mask_3: 0.1445  m1_loss_dice_3: 1.16  m1_loss_ce_4: 0.362  m1_loss_mask_4: 0.1411  m1_loss_dice_4: 1.154  m1_loss_ce_5: 0.3626  m1_loss_mask_5: 0.14  m1_loss_dice_5: 1.115  m1_loss_ce_6: 0.3537  m1_loss_mask_6: 0.1419  m1_loss_dice_6: 1.085  m1_loss_ce_7: 0.3516  m1_loss_mask_7: 0.1405  m1_loss_dice_7: 1.126  m1_loss_ce_8: 0.3682  m1_loss_mask_8: 0.1396  m1_loss_dice_8: 1.154  m2_loss_ce: 0.3651  m2_loss_mask: 0.1447  m2_loss_dice: 1.134  m2_loss_ce_0: 0.5355  m2_loss_mask_0: 0.1645  m2_loss_dice_0: 1.315  m2_loss_ce_1: 0.5181  m2_loss_mask_1: 0.1567  m2_loss_dice_1: 1.258  m2_loss_ce_2: 0.4772  m2_loss_mask_2: 0.1527  m2_loss_dice_2: 1.217  m2_loss_ce_3: 0.4059  m2_loss_mask_3: 0.147  m2_loss_dice_3: 1.167  m2_loss_ce_4: 0.3626  m2_loss_mask_4: 0.1493  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.3832  m2_loss_mask_5: 0.1466  m2_loss_dice_5: 1.136  m2_loss_ce_6: 0.3693  m2_loss_mask_6: 0.1489  m2_loss_dice_6: 1.149  m2_loss_ce_7: 0.3393  m2_loss_mask_7: 0.1469  m2_loss_dice_7: 1.155  m2_loss_ce_8: 0.3523  m2_loss_mask_8: 0.1465  m2_loss_dice_8: 1.153  com_loss_ce: 1.712  com_loss_mask: 0.6926  com_loss_dice: 0.9742    time: 1.6992  last_time: 1.7083  data_time: 0.0578  last_data_time: 0.0420   lr: 0.0001  max_mem: 36976M
[09/08 20:56:48] d2.utils.events INFO:  eta: 0:41:48  iter: 519  total_loss: 39.41  m1_loss_ce: 0.3849  m1_loss_mask: 0.1274  m1_loss_dice: 1.153  m1_loss_ce_0: 0.4951  m1_loss_mask_0: 0.1477  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.537  m1_loss_mask_1: 0.1361  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.4782  m1_loss_mask_2: 0.1299  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.4227  m1_loss_mask_3: 0.1266  m1_loss_dice_3: 1.177  m1_loss_ce_4: 0.3844  m1_loss_mask_4: 0.1281  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4004  m1_loss_mask_5: 0.1259  m1_loss_dice_5: 1.175  m1_loss_ce_6: 0.366  m1_loss_mask_6: 0.1285  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.3716  m1_loss_mask_7: 0.1257  m1_loss_dice_7: 1.184  m1_loss_ce_8: 0.3822  m1_loss_mask_8: 0.1264  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4111  m2_loss_mask: 0.1316  m2_loss_dice: 1.178  m2_loss_ce_0: 0.5221  m2_loss_mask_0: 0.15  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.5701  m2_loss_mask_1: 0.1429  m2_loss_dice_1: 1.306  m2_loss_ce_2: 0.4944  m2_loss_mask_2: 0.1339  m2_loss_dice_2: 1.255  m2_loss_ce_3: 0.4683  m2_loss_mask_3: 0.1323  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.4409  m2_loss_mask_4: 0.131  m2_loss_dice_4: 1.206  m2_loss_ce_5: 0.4254  m2_loss_mask_5: 0.1293  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.4148  m2_loss_mask_6: 0.1318  m2_loss_dice_6: 1.172  m2_loss_ce_7: 0.3914  m2_loss_mask_7: 0.1304  m2_loss_dice_7: 1.153  m2_loss_ce_8: 0.4261  m2_loss_mask_8: 0.1296  m2_loss_dice_8: 1.18  com_loss_ce: 1.731  com_loss_mask: 0.6926  com_loss_dice: 0.9767    time: 1.7009  last_time: 1.7465  data_time: 0.0553  last_data_time: 0.0453   lr: 0.0001  max_mem: 36976M
[09/08 20:57:23] d2.utils.events INFO:  eta: 0:41:15  iter: 539  total_loss: 39.41  m1_loss_ce: 0.3882  m1_loss_mask: 0.1534  m1_loss_dice: 1.144  m1_loss_ce_0: 0.4834  m1_loss_mask_0: 0.1736  m1_loss_dice_0: 1.319  m1_loss_ce_1: 0.5536  m1_loss_mask_1: 0.1587  m1_loss_dice_1: 1.249  m1_loss_ce_2: 0.4984  m1_loss_mask_2: 0.1582  m1_loss_dice_2: 1.217  m1_loss_ce_3: 0.4302  m1_loss_mask_3: 0.1557  m1_loss_dice_3: 1.145  m1_loss_ce_4: 0.4066  m1_loss_mask_4: 0.1464  m1_loss_dice_4: 1.142  m1_loss_ce_5: 0.3918  m1_loss_mask_5: 0.1451  m1_loss_dice_5: 1.13  m1_loss_ce_6: 0.3833  m1_loss_mask_6: 0.1555  m1_loss_dice_6: 1.125  m1_loss_ce_7: 0.3584  m1_loss_mask_7: 0.1554  m1_loss_dice_7: 1.096  m1_loss_ce_8: 0.3904  m1_loss_mask_8: 0.1535  m1_loss_dice_8: 1.134  m2_loss_ce: 0.3998  m2_loss_mask: 0.1497  m2_loss_dice: 1.111  m2_loss_ce_0: 0.533  m2_loss_mask_0: 0.1733  m2_loss_dice_0: 1.314  m2_loss_ce_1: 0.5667  m2_loss_mask_1: 0.1615  m2_loss_dice_1: 1.231  m2_loss_ce_2: 0.496  m2_loss_mask_2: 0.1561  m2_loss_dice_2: 1.221  m2_loss_ce_3: 0.4736  m2_loss_mask_3: 0.1486  m2_loss_dice_3: 1.145  m2_loss_ce_4: 0.419  m2_loss_mask_4: 0.1485  m2_loss_dice_4: 1.161  m2_loss_ce_5: 0.4173  m2_loss_mask_5: 0.1503  m2_loss_dice_5: 1.176  m2_loss_ce_6: 0.4119  m2_loss_mask_6: 0.1522  m2_loss_dice_6: 1.143  m2_loss_ce_7: 0.4242  m2_loss_mask_7: 0.1474  m2_loss_dice_7: 1.159  m2_loss_ce_8: 0.4168  m2_loss_mask_8: 0.1461  m2_loss_dice_8: 1.146  com_loss_ce: 1.715  com_loss_mask: 0.6926  com_loss_dice: 0.9748    time: 1.7014  last_time: 1.6903  data_time: 0.0526  last_data_time: 0.0445   lr: 0.0001  max_mem: 36976M
[09/08 20:57:58] d2.utils.events INFO:  eta: 0:40:44  iter: 559  total_loss: 40.44  m1_loss_ce: 0.4061  m1_loss_mask: 0.1373  m1_loss_dice: 1.175  m1_loss_ce_0: 0.5005  m1_loss_mask_0: 0.168  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.5556  m1_loss_mask_1: 0.1538  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.5207  m1_loss_mask_2: 0.143  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.4596  m1_loss_mask_3: 0.1416  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4095  m1_loss_mask_4: 0.1403  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4183  m1_loss_mask_5: 0.1385  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.4034  m1_loss_mask_6: 0.139  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4092  m1_loss_mask_7: 0.1388  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4176  m1_loss_mask_8: 0.139  m1_loss_dice_8: 1.204  m2_loss_ce: 0.4113  m2_loss_mask: 0.1419  m2_loss_dice: 1.182  m2_loss_ce_0: 0.5417  m2_loss_mask_0: 0.1729  m2_loss_dice_0: 1.364  m2_loss_ce_1: 0.5653  m2_loss_mask_1: 0.1576  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.5412  m2_loss_mask_2: 0.1448  m2_loss_dice_2: 1.262  m2_loss_ce_3: 0.4397  m2_loss_mask_3: 0.1426  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.408  m2_loss_mask_4: 0.1413  m2_loss_dice_4: 1.205  m2_loss_ce_5: 0.4356  m2_loss_mask_5: 0.1414  m2_loss_dice_5: 1.207  m2_loss_ce_6: 0.4275  m2_loss_mask_6: 0.1416  m2_loss_dice_6: 1.166  m2_loss_ce_7: 0.4141  m2_loss_mask_7: 0.1403  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.415  m2_loss_mask_8: 0.1398  m2_loss_dice_8: 1.196  com_loss_ce: 1.744  com_loss_mask: 0.6926  com_loss_dice: 0.9737    time: 1.7028  last_time: 1.7225  data_time: 0.0551  last_data_time: 0.0857   lr: 0.0001  max_mem: 36976M
[09/08 20:58:32] d2.utils.events INFO:  eta: 0:40:10  iter: 579  total_loss: 40.42  m1_loss_ce: 0.4238  m1_loss_mask: 0.1471  m1_loss_dice: 1.157  m1_loss_ce_0: 0.5256  m1_loss_mask_0: 0.1771  m1_loss_dice_0: 1.31  m1_loss_ce_1: 0.546  m1_loss_mask_1: 0.1575  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.5186  m1_loss_mask_2: 0.1478  m1_loss_dice_2: 1.235  m1_loss_ce_3: 0.4623  m1_loss_mask_3: 0.1488  m1_loss_dice_3: 1.192  m1_loss_ce_4: 0.4174  m1_loss_mask_4: 0.1463  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.4144  m1_loss_mask_5: 0.1424  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.4065  m1_loss_mask_6: 0.1442  m1_loss_dice_6: 1.123  m1_loss_ce_7: 0.4047  m1_loss_mask_7: 0.1447  m1_loss_dice_7: 1.16  m1_loss_ce_8: 0.4282  m1_loss_mask_8: 0.1436  m1_loss_dice_8: 1.142  m2_loss_ce: 0.4195  m2_loss_mask: 0.1491  m2_loss_dice: 1.183  m2_loss_ce_0: 0.5477  m2_loss_mask_0: 0.1738  m2_loss_dice_0: 1.324  m2_loss_ce_1: 0.5902  m2_loss_mask_1: 0.1608  m2_loss_dice_1: 1.302  m2_loss_ce_2: 0.5354  m2_loss_mask_2: 0.1543  m2_loss_dice_2: 1.259  m2_loss_ce_3: 0.4807  m2_loss_mask_3: 0.1533  m2_loss_dice_3: 1.149  m2_loss_ce_4: 0.4525  m2_loss_mask_4: 0.1527  m2_loss_dice_4: 1.179  m2_loss_ce_5: 0.4438  m2_loss_mask_5: 0.1507  m2_loss_dice_5: 1.17  m2_loss_ce_6: 0.4203  m2_loss_mask_6: 0.1504  m2_loss_dice_6: 1.155  m2_loss_ce_7: 0.4541  m2_loss_mask_7: 0.1491  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.4459  m2_loss_mask_8: 0.1508  m2_loss_dice_8: 1.186  com_loss_ce: 1.735  com_loss_mask: 0.6927  com_loss_dice: 0.9732    time: 1.7029  last_time: 1.6827  data_time: 0.0497  last_data_time: 0.0461   lr: 0.0001  max_mem: 36976M
[09/08 20:59:06] d2.utils.events INFO:  eta: 0:39:36  iter: 599  total_loss: 37.45  m1_loss_ce: 0.4104  m1_loss_mask: 0.1448  m1_loss_dice: 1.051  m1_loss_ce_0: 0.5139  m1_loss_mask_0: 0.1661  m1_loss_dice_0: 1.202  m1_loss_ce_1: 0.5483  m1_loss_mask_1: 0.1574  m1_loss_dice_1: 1.187  m1_loss_ce_2: 0.4601  m1_loss_mask_2: 0.1467  m1_loss_dice_2: 1.091  m1_loss_ce_3: 0.4465  m1_loss_mask_3: 0.147  m1_loss_dice_3: 1.075  m1_loss_ce_4: 0.3702  m1_loss_mask_4: 0.1483  m1_loss_dice_4: 1.069  m1_loss_ce_5: 0.3834  m1_loss_mask_5: 0.1447  m1_loss_dice_5: 1.037  m1_loss_ce_6: 0.3664  m1_loss_mask_6: 0.1456  m1_loss_dice_6: 1.06  m1_loss_ce_7: 0.3653  m1_loss_mask_7: 0.1451  m1_loss_dice_7: 1.041  m1_loss_ce_8: 0.3674  m1_loss_mask_8: 0.145  m1_loss_dice_8: 1.043  m2_loss_ce: 0.4148  m2_loss_mask: 0.142  m2_loss_dice: 1.113  m2_loss_ce_0: 0.5311  m2_loss_mask_0: 0.1639  m2_loss_dice_0: 1.189  m2_loss_ce_1: 0.5538  m2_loss_mask_1: 0.1529  m2_loss_dice_1: 1.134  m2_loss_ce_2: 0.4892  m2_loss_mask_2: 0.1464  m2_loss_dice_2: 1.072  m2_loss_ce_3: 0.4293  m2_loss_mask_3: 0.1434  m2_loss_dice_3: 1.092  m2_loss_ce_4: 0.4192  m2_loss_mask_4: 0.1458  m2_loss_dice_4: 1.085  m2_loss_ce_5: 0.4375  m2_loss_mask_5: 0.1431  m2_loss_dice_5: 1.027  m2_loss_ce_6: 0.4285  m2_loss_mask_6: 0.1446  m2_loss_dice_6: 1.098  m2_loss_ce_7: 0.4028  m2_loss_mask_7: 0.1436  m2_loss_dice_7: 1.095  m2_loss_ce_8: 0.4057  m2_loss_mask_8: 0.1435  m2_loss_dice_8: 1.037  com_loss_ce: 1.719  com_loss_mask: 0.6926  com_loss_dice: 0.9714    time: 1.7029  last_time: 1.6829  data_time: 0.0487  last_data_time: 0.0531   lr: 0.0001  max_mem: 36976M
[09/08 20:59:41] d2.utils.events INFO:  eta: 0:39:04  iter: 619  total_loss: 40.77  m1_loss_ce: 0.4354  m1_loss_mask: 0.1419  m1_loss_dice: 1.203  m1_loss_ce_0: 0.533  m1_loss_mask_0: 0.1728  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.5484  m1_loss_mask_1: 0.1583  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.4869  m1_loss_mask_2: 0.1471  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.4406  m1_loss_mask_3: 0.1477  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.4135  m1_loss_mask_4: 0.1475  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.3887  m1_loss_mask_5: 0.1464  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.4006  m1_loss_mask_6: 0.1446  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.4103  m1_loss_mask_7: 0.1427  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4119  m1_loss_mask_8: 0.1425  m1_loss_dice_8: 1.199  m2_loss_ce: 0.4326  m2_loss_mask: 0.151  m2_loss_dice: 1.188  m2_loss_ce_0: 0.5321  m2_loss_mask_0: 0.1781  m2_loss_dice_0: 1.396  m2_loss_ce_1: 0.5713  m2_loss_mask_1: 0.1682  m2_loss_dice_1: 1.329  m2_loss_ce_2: 0.5214  m2_loss_mask_2: 0.1592  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.4693  m2_loss_mask_3: 0.1577  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.437  m2_loss_mask_4: 0.1559  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.4312  m2_loss_mask_5: 0.1537  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.4047  m2_loss_mask_6: 0.1535  m2_loss_dice_6: 1.188  m2_loss_ce_7: 0.4107  m2_loss_mask_7: 0.1527  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.387  m2_loss_mask_8: 0.1533  m2_loss_dice_8: 1.223  com_loss_ce: 1.729  com_loss_mask: 0.6927  com_loss_dice: 0.976    time: 1.7039  last_time: 1.6962  data_time: 0.0593  last_data_time: 0.0382   lr: 0.0001  max_mem: 36976M
[09/08 21:00:16] d2.utils.events INFO:  eta: 0:38:30  iter: 639  total_loss: 37.35  m1_loss_ce: 0.3879  m1_loss_mask: 0.1421  m1_loss_dice: 1.091  m1_loss_ce_0: 0.4745  m1_loss_mask_0: 0.1604  m1_loss_dice_0: 1.286  m1_loss_ce_1: 0.5125  m1_loss_mask_1: 0.1614  m1_loss_dice_1: 1.171  m1_loss_ce_2: 0.4489  m1_loss_mask_2: 0.156  m1_loss_dice_2: 1.167  m1_loss_ce_3: 0.407  m1_loss_mask_3: 0.1545  m1_loss_dice_3: 1.105  m1_loss_ce_4: 0.3956  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.109  m1_loss_ce_5: 0.3879  m1_loss_mask_5: 0.1499  m1_loss_dice_5: 1.113  m1_loss_ce_6: 0.3694  m1_loss_mask_6: 0.1447  m1_loss_dice_6: 1.104  m1_loss_ce_7: 0.3564  m1_loss_mask_7: 0.1461  m1_loss_dice_7: 1.098  m1_loss_ce_8: 0.3571  m1_loss_mask_8: 0.1466  m1_loss_dice_8: 1.095  m2_loss_ce: 0.3741  m2_loss_mask: 0.149  m2_loss_dice: 1.089  m2_loss_ce_0: 0.5011  m2_loss_mask_0: 0.1657  m2_loss_dice_0: 1.289  m2_loss_ce_1: 0.5223  m2_loss_mask_1: 0.1569  m2_loss_dice_1: 1.23  m2_loss_ce_2: 0.4743  m2_loss_mask_2: 0.1564  m2_loss_dice_2: 1.188  m2_loss_ce_3: 0.4319  m2_loss_mask_3: 0.1497  m2_loss_dice_3: 1.13  m2_loss_ce_4: 0.4263  m2_loss_mask_4: 0.1485  m2_loss_dice_4: 1.114  m2_loss_ce_5: 0.3798  m2_loss_mask_5: 0.1498  m2_loss_dice_5: 1.074  m2_loss_ce_6: 0.4063  m2_loss_mask_6: 0.1507  m2_loss_dice_6: 1.116  m2_loss_ce_7: 0.398  m2_loss_mask_7: 0.1493  m2_loss_dice_7: 1.077  m2_loss_ce_8: 0.3567  m2_loss_mask_8: 0.1515  m2_loss_dice_8: 1.078  com_loss_ce: 1.72  com_loss_mask: 0.6927  com_loss_dice: 0.9737    time: 1.7048  last_time: 1.6603  data_time: 0.0558  last_data_time: 0.0507   lr: 0.0001  max_mem: 37406M
[09/08 21:00:50] d2.utils.events INFO:  eta: 0:37:57  iter: 659  total_loss: 38.61  m1_loss_ce: 0.4073  m1_loss_mask: 0.1478  m1_loss_dice: 1.128  m1_loss_ce_0: 0.5197  m1_loss_mask_0: 0.1678  m1_loss_dice_0: 1.303  m1_loss_ce_1: 0.5593  m1_loss_mask_1: 0.155  m1_loss_dice_1: 1.27  m1_loss_ce_2: 0.46  m1_loss_mask_2: 0.1523  m1_loss_dice_2: 1.191  m1_loss_ce_3: 0.4467  m1_loss_mask_3: 0.1539  m1_loss_dice_3: 1.148  m1_loss_ce_4: 0.4286  m1_loss_mask_4: 0.1536  m1_loss_dice_4: 1.115  m1_loss_ce_5: 0.4043  m1_loss_mask_5: 0.1479  m1_loss_dice_5: 1.162  m1_loss_ce_6: 0.4097  m1_loss_mask_6: 0.1486  m1_loss_dice_6: 1.111  m1_loss_ce_7: 0.4016  m1_loss_mask_7: 0.1481  m1_loss_dice_7: 1.147  m1_loss_ce_8: 0.3774  m1_loss_mask_8: 0.1498  m1_loss_dice_8: 1.113  m2_loss_ce: 0.4126  m2_loss_mask: 0.1512  m2_loss_dice: 1.101  m2_loss_ce_0: 0.5453  m2_loss_mask_0: 0.172  m2_loss_dice_0: 1.288  m2_loss_ce_1: 0.5803  m2_loss_mask_1: 0.1647  m2_loss_dice_1: 1.226  m2_loss_ce_2: 0.5303  m2_loss_mask_2: 0.1597  m2_loss_dice_2: 1.192  m2_loss_ce_3: 0.4717  m2_loss_mask_3: 0.1537  m2_loss_dice_3: 1.149  m2_loss_ce_4: 0.4265  m2_loss_mask_4: 0.1504  m2_loss_dice_4: 1.154  m2_loss_ce_5: 0.4416  m2_loss_mask_5: 0.1533  m2_loss_dice_5: 1.114  m2_loss_ce_6: 0.4138  m2_loss_mask_6: 0.1557  m2_loss_dice_6: 1.139  m2_loss_ce_7: 0.4067  m2_loss_mask_7: 0.1539  m2_loss_dice_7: 1.118  m2_loss_ce_8: 0.4268  m2_loss_mask_8: 0.154  m2_loss_dice_8: 1.152  com_loss_ce: 1.716  com_loss_mask: 0.6927  com_loss_dice: 0.9742    time: 1.7052  last_time: 1.6970  data_time: 0.0520  last_data_time: 0.0390   lr: 0.0001  max_mem: 37406M
[09/08 21:01:25] d2.utils.events INFO:  eta: 0:37:22  iter: 679  total_loss: 39.31  m1_loss_ce: 0.4128  m1_loss_mask: 0.1565  m1_loss_dice: 1.148  m1_loss_ce_0: 0.4766  m1_loss_mask_0: 0.1839  m1_loss_dice_0: 1.294  m1_loss_ce_1: 0.5272  m1_loss_mask_1: 0.1729  m1_loss_dice_1: 1.263  m1_loss_ce_2: 0.4652  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.191  m1_loss_ce_3: 0.3993  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.135  m1_loss_ce_4: 0.4044  m1_loss_mask_4: 0.1634  m1_loss_dice_4: 1.133  m1_loss_ce_5: 0.3652  m1_loss_mask_5: 0.1629  m1_loss_dice_5: 1.119  m1_loss_ce_6: 0.3923  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.092  m1_loss_ce_7: 0.3718  m1_loss_mask_7: 0.1551  m1_loss_dice_7: 1.093  m1_loss_ce_8: 0.374  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.127  m2_loss_ce: 0.3877  m2_loss_mask: 0.1617  m2_loss_dice: 1.104  m2_loss_ce_0: 0.5096  m2_loss_mask_0: 0.1807  m2_loss_dice_0: 1.249  m2_loss_ce_1: 0.5446  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.224  m2_loss_ce_2: 0.4898  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.187  m2_loss_ce_3: 0.4439  m2_loss_mask_3: 0.1641  m2_loss_dice_3: 1.105  m2_loss_ce_4: 0.3979  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.134  m2_loss_ce_5: 0.4045  m2_loss_mask_5: 0.1622  m2_loss_dice_5: 1.12  m2_loss_ce_6: 0.4114  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.099  m2_loss_ce_7: 0.3873  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.09  m2_loss_ce_8: 0.4133  m2_loss_mask_8: 0.1623  m2_loss_dice_8: 1.091  com_loss_ce: 1.722  com_loss_mask: 0.6926  com_loss_dice: 0.9715    time: 1.7051  last_time: 1.6706  data_time: 0.0525  last_data_time: 0.0375   lr: 0.0001  max_mem: 37406M
[09/08 21:01:59] d2.utils.events INFO:  eta: 0:36:48  iter: 699  total_loss: 37.51  m1_loss_ce: 0.4014  m1_loss_mask: 0.1456  m1_loss_dice: 1.077  m1_loss_ce_0: 0.5253  m1_loss_mask_0: 0.171  m1_loss_dice_0: 1.221  m1_loss_ce_1: 0.5452  m1_loss_mask_1: 0.161  m1_loss_dice_1: 1.152  m1_loss_ce_2: 0.4826  m1_loss_mask_2: 0.1522  m1_loss_dice_2: 1.124  m1_loss_ce_3: 0.4272  m1_loss_mask_3: 0.1512  m1_loss_dice_3: 1.097  m1_loss_ce_4: 0.3915  m1_loss_mask_4: 0.1507  m1_loss_dice_4: 1.084  m1_loss_ce_5: 0.385  m1_loss_mask_5: 0.1458  m1_loss_dice_5: 1.091  m1_loss_ce_6: 0.3825  m1_loss_mask_6: 0.1476  m1_loss_dice_6: 1.1  m1_loss_ce_7: 0.3849  m1_loss_mask_7: 0.1482  m1_loss_dice_7: 1.046  m1_loss_ce_8: 0.3844  m1_loss_mask_8: 0.1457  m1_loss_dice_8: 1.078  m2_loss_ce: 0.4138  m2_loss_mask: 0.1473  m2_loss_dice: 1.083  m2_loss_ce_0: 0.5431  m2_loss_mask_0: 0.1712  m2_loss_dice_0: 1.263  m2_loss_ce_1: 0.5896  m2_loss_mask_1: 0.1571  m2_loss_dice_1: 1.21  m2_loss_ce_2: 0.5153  m2_loss_mask_2: 0.1503  m2_loss_dice_2: 1.139  m2_loss_ce_3: 0.4671  m2_loss_mask_3: 0.1473  m2_loss_dice_3: 1.105  m2_loss_ce_4: 0.4505  m2_loss_mask_4: 0.1482  m2_loss_dice_4: 1.077  m2_loss_ce_5: 0.4137  m2_loss_mask_5: 0.1446  m2_loss_dice_5: 1.087  m2_loss_ce_6: 0.401  m2_loss_mask_6: 0.1469  m2_loss_dice_6: 1.045  m2_loss_ce_7: 0.3999  m2_loss_mask_7: 0.148  m2_loss_dice_7: 1.095  m2_loss_ce_8: 0.4089  m2_loss_mask_8: 0.1479  m2_loss_dice_8: 1.081  com_loss_ce: 1.711  com_loss_mask: 0.6927  com_loss_dice: 0.9724    time: 1.7052  last_time: 1.6788  data_time: 0.0531  last_data_time: 0.0457   lr: 0.0001  max_mem: 37406M
[09/08 21:02:34] d2.utils.events INFO:  eta: 0:36:16  iter: 719  total_loss: 40.25  m1_loss_ce: 0.4432  m1_loss_mask: 0.1455  m1_loss_dice: 1.149  m1_loss_ce_0: 0.5244  m1_loss_mask_0: 0.1702  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.5815  m1_loss_mask_1: 0.1586  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.5206  m1_loss_mask_2: 0.1499  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.4684  m1_loss_mask_3: 0.1547  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4764  m1_loss_mask_4: 0.1523  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.4177  m1_loss_mask_5: 0.1485  m1_loss_dice_5: 1.133  m1_loss_ce_6: 0.4157  m1_loss_mask_6: 0.1462  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4171  m1_loss_mask_7: 0.145  m1_loss_dice_7: 1.143  m1_loss_ce_8: 0.4029  m1_loss_mask_8: 0.1445  m1_loss_dice_8: 1.183  m2_loss_ce: 0.426  m2_loss_mask: 0.1483  m2_loss_dice: 1.13  m2_loss_ce_0: 0.5535  m2_loss_mask_0: 0.1723  m2_loss_dice_0: 1.317  m2_loss_ce_1: 0.6213  m2_loss_mask_1: 0.1565  m2_loss_dice_1: 1.276  m2_loss_ce_2: 0.5389  m2_loss_mask_2: 0.1525  m2_loss_dice_2: 1.257  m2_loss_ce_3: 0.5054  m2_loss_mask_3: 0.1512  m2_loss_dice_3: 1.187  m2_loss_ce_4: 0.4596  m2_loss_mask_4: 0.1502  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.4539  m2_loss_mask_5: 0.1483  m2_loss_dice_5: 1.152  m2_loss_ce_6: 0.3991  m2_loss_mask_6: 0.1496  m2_loss_dice_6: 1.157  m2_loss_ce_7: 0.4096  m2_loss_mask_7: 0.1495  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.4215  m2_loss_mask_8: 0.1482  m2_loss_dice_8: 1.127  com_loss_ce: 1.742  com_loss_mask: 0.6926  com_loss_dice: 0.976    time: 1.7060  last_time: 1.6995  data_time: 0.0572  last_data_time: 0.0404   lr: 0.0001  max_mem: 37406M
[09/08 21:03:08] d2.utils.events INFO:  eta: 0:35:43  iter: 739  total_loss: 38.62  m1_loss_ce: 0.4072  m1_loss_mask: 0.1388  m1_loss_dice: 1.14  m1_loss_ce_0: 0.515  m1_loss_mask_0: 0.1628  m1_loss_dice_0: 1.339  m1_loss_ce_1: 0.5567  m1_loss_mask_1: 0.1477  m1_loss_dice_1: 1.261  m1_loss_ce_2: 0.4913  m1_loss_mask_2: 0.1421  m1_loss_dice_2: 1.206  m1_loss_ce_3: 0.4588  m1_loss_mask_3: 0.1405  m1_loss_dice_3: 1.117  m1_loss_ce_4: 0.3999  m1_loss_mask_4: 0.1413  m1_loss_dice_4: 1.145  m1_loss_ce_5: 0.4039  m1_loss_mask_5: 0.1407  m1_loss_dice_5: 1.154  m1_loss_ce_6: 0.3728  m1_loss_mask_6: 0.1403  m1_loss_dice_6: 1.132  m1_loss_ce_7: 0.4031  m1_loss_mask_7: 0.1382  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.3904  m1_loss_mask_8: 0.1383  m1_loss_dice_8: 1.141  m2_loss_ce: 0.3934  m2_loss_mask: 0.143  m2_loss_dice: 1.109  m2_loss_ce_0: 0.5275  m2_loss_mask_0: 0.1619  m2_loss_dice_0: 1.362  m2_loss_ce_1: 0.5744  m2_loss_mask_1: 0.1514  m2_loss_dice_1: 1.252  m2_loss_ce_2: 0.5069  m2_loss_mask_2: 0.1479  m2_loss_dice_2: 1.21  m2_loss_ce_3: 0.4667  m2_loss_mask_3: 0.1473  m2_loss_dice_3: 1.148  m2_loss_ce_4: 0.4328  m2_loss_mask_4: 0.1437  m2_loss_dice_4: 1.174  m2_loss_ce_5: 0.4209  m2_loss_mask_5: 0.1418  m2_loss_dice_5: 1.153  m2_loss_ce_6: 0.3968  m2_loss_mask_6: 0.1428  m2_loss_dice_6: 1.127  m2_loss_ce_7: 0.3831  m2_loss_mask_7: 0.1424  m2_loss_dice_7: 1.157  m2_loss_ce_8: 0.3652  m2_loss_mask_8: 0.1425  m2_loss_dice_8: 1.12  com_loss_ce: 1.725  com_loss_mask: 0.6926  com_loss_dice: 0.9733    time: 1.7067  last_time: 1.7729  data_time: 0.0570  last_data_time: 0.0555   lr: 0.0001  max_mem: 37406M
[09/08 21:03:43] d2.utils.events INFO:  eta: 0:35:10  iter: 759  total_loss: 38.25  m1_loss_ce: 0.3866  m1_loss_mask: 0.1454  m1_loss_dice: 1.085  m1_loss_ce_0: 0.4821  m1_loss_mask_0: 0.1614  m1_loss_dice_0: 1.337  m1_loss_ce_1: 0.5584  m1_loss_mask_1: 0.1608  m1_loss_dice_1: 1.261  m1_loss_ce_2: 0.4889  m1_loss_mask_2: 0.1535  m1_loss_dice_2: 1.178  m1_loss_ce_3: 0.4562  m1_loss_mask_3: 0.1534  m1_loss_dice_3: 1.132  m1_loss_ce_4: 0.4047  m1_loss_mask_4: 0.1509  m1_loss_dice_4: 1.151  m1_loss_ce_5: 0.3858  m1_loss_mask_5: 0.1469  m1_loss_dice_5: 1.115  m1_loss_ce_6: 0.3708  m1_loss_mask_6: 0.1488  m1_loss_dice_6: 1.093  m1_loss_ce_7: 0.3751  m1_loss_mask_7: 0.147  m1_loss_dice_7: 1.098  m1_loss_ce_8: 0.3783  m1_loss_mask_8: 0.1457  m1_loss_dice_8: 1.119  m2_loss_ce: 0.394  m2_loss_mask: 0.1538  m2_loss_dice: 1.161  m2_loss_ce_0: 0.5297  m2_loss_mask_0: 0.1656  m2_loss_dice_0: 1.314  m2_loss_ce_1: 0.5832  m2_loss_mask_1: 0.1657  m2_loss_dice_1: 1.254  m2_loss_ce_2: 0.491  m2_loss_mask_2: 0.158  m2_loss_dice_2: 1.186  m2_loss_ce_3: 0.4428  m2_loss_mask_3: 0.1609  m2_loss_dice_3: 1.158  m2_loss_ce_4: 0.3954  m2_loss_mask_4: 0.1579  m2_loss_dice_4: 1.096  m2_loss_ce_5: 0.4309  m2_loss_mask_5: 0.1551  m2_loss_dice_5: 1.127  m2_loss_ce_6: 0.4029  m2_loss_mask_6: 0.1567  m2_loss_dice_6: 1.114  m2_loss_ce_7: 0.4145  m2_loss_mask_7: 0.1559  m2_loss_dice_7: 1.104  m2_loss_ce_8: 0.4191  m2_loss_mask_8: 0.1552  m2_loss_dice_8: 1.099  com_loss_ce: 1.727  com_loss_mask: 0.6927  com_loss_dice: 0.9729    time: 1.7071  last_time: 1.7358  data_time: 0.0540  last_data_time: 0.0542   lr: 0.0001  max_mem: 37406M
[09/08 21:04:17] d2.utils.events INFO:  eta: 0:34:36  iter: 779  total_loss: 37.97  m1_loss_ce: 0.358  m1_loss_mask: 0.1451  m1_loss_dice: 1.111  m1_loss_ce_0: 0.4336  m1_loss_mask_0: 0.1611  m1_loss_dice_0: 1.305  m1_loss_ce_1: 0.5031  m1_loss_mask_1: 0.1505  m1_loss_dice_1: 1.228  m1_loss_ce_2: 0.4325  m1_loss_mask_2: 0.1459  m1_loss_dice_2: 1.178  m1_loss_ce_3: 0.404  m1_loss_mask_3: 0.1472  m1_loss_dice_3: 1.113  m1_loss_ce_4: 0.3607  m1_loss_mask_4: 0.1487  m1_loss_dice_4: 1.122  m1_loss_ce_5: 0.3576  m1_loss_mask_5: 0.1439  m1_loss_dice_5: 1.135  m1_loss_ce_6: 0.3507  m1_loss_mask_6: 0.1449  m1_loss_dice_6: 1.133  m1_loss_ce_7: 0.335  m1_loss_mask_7: 0.145  m1_loss_dice_7: 1.111  m1_loss_ce_8: 0.3517  m1_loss_mask_8: 0.1445  m1_loss_dice_8: 1.106  m2_loss_ce: 0.3958  m2_loss_mask: 0.1505  m2_loss_dice: 1.118  m2_loss_ce_0: 0.5002  m2_loss_mask_0: 0.1684  m2_loss_dice_0: 1.291  m2_loss_ce_1: 0.5326  m2_loss_mask_1: 0.1648  m2_loss_dice_1: 1.233  m2_loss_ce_2: 0.4969  m2_loss_mask_2: 0.1538  m2_loss_dice_2: 1.211  m2_loss_ce_3: 0.4248  m2_loss_mask_3: 0.1538  m2_loss_dice_3: 1.156  m2_loss_ce_4: 0.4019  m2_loss_mask_4: 0.151  m2_loss_dice_4: 1.149  m2_loss_ce_5: 0.3951  m2_loss_mask_5: 0.1495  m2_loss_dice_5: 1.14  m2_loss_ce_6: 0.3885  m2_loss_mask_6: 0.1518  m2_loss_dice_6: 1.104  m2_loss_ce_7: 0.4054  m2_loss_mask_7: 0.1501  m2_loss_dice_7: 1.143  m2_loss_ce_8: 0.3992  m2_loss_mask_8: 0.1505  m2_loss_dice_8: 1.131  com_loss_ce: 1.714  com_loss_mask: 0.6926  com_loss_dice: 0.9755    time: 1.7073  last_time: 1.7087  data_time: 0.0511  last_data_time: 0.0478   lr: 0.0001  max_mem: 37406M
[09/08 21:04:52] d2.utils.events INFO:  eta: 0:34:03  iter: 799  total_loss: 39.84  m1_loss_ce: 0.3774  m1_loss_mask: 0.1443  m1_loss_dice: 1.165  m1_loss_ce_0: 0.5195  m1_loss_mask_0: 0.1625  m1_loss_dice_0: 1.317  m1_loss_ce_1: 0.543  m1_loss_mask_1: 0.1524  m1_loss_dice_1: 1.259  m1_loss_ce_2: 0.4939  m1_loss_mask_2: 0.1442  m1_loss_dice_2: 1.234  m1_loss_ce_3: 0.4436  m1_loss_mask_3: 0.1465  m1_loss_dice_3: 1.14  m1_loss_ce_4: 0.3932  m1_loss_mask_4: 0.1424  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.3874  m1_loss_mask_5: 0.1405  m1_loss_dice_5: 1.176  m1_loss_ce_6: 0.3789  m1_loss_mask_6: 0.1443  m1_loss_dice_6: 1.141  m1_loss_ce_7: 0.361  m1_loss_mask_7: 0.1432  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.3994  m1_loss_mask_8: 0.1436  m1_loss_dice_8: 1.139  m2_loss_ce: 0.4396  m2_loss_mask: 0.1458  m2_loss_dice: 1.154  m2_loss_ce_0: 0.5227  m2_loss_mask_0: 0.1704  m2_loss_dice_0: 1.345  m2_loss_ce_1: 0.6206  m2_loss_mask_1: 0.1566  m2_loss_dice_1: 1.314  m2_loss_ce_2: 0.5477  m2_loss_mask_2: 0.1535  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.4874  m2_loss_mask_3: 0.1528  m2_loss_dice_3: 1.177  m2_loss_ce_4: 0.4404  m2_loss_mask_4: 0.1478  m2_loss_dice_4: 1.175  m2_loss_ce_5: 0.4145  m2_loss_mask_5: 0.1455  m2_loss_dice_5: 1.176  m2_loss_ce_6: 0.4182  m2_loss_mask_6: 0.149  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.4261  m2_loss_mask_7: 0.147  m2_loss_dice_7: 1.142  m2_loss_ce_8: 0.4333  m2_loss_mask_8: 0.1471  m2_loss_dice_8: 1.156  com_loss_ce: 1.718  com_loss_mask: 0.6926  com_loss_dice: 0.9742    time: 1.7077  last_time: 1.7083  data_time: 0.0529  last_data_time: 0.0377   lr: 0.0001  max_mem: 37406M
[09/08 21:05:26] d2.utils.events INFO:  eta: 0:33:29  iter: 819  total_loss: 37.21  m1_loss_ce: 0.3951  m1_loss_mask: 0.1395  m1_loss_dice: 1.08  m1_loss_ce_0: 0.449  m1_loss_mask_0: 0.157  m1_loss_dice_0: 1.248  m1_loss_ce_1: 0.5121  m1_loss_mask_1: 0.1519  m1_loss_dice_1: 1.152  m1_loss_ce_2: 0.481  m1_loss_mask_2: 0.1443  m1_loss_dice_2: 1.136  m1_loss_ce_3: 0.4103  m1_loss_mask_3: 0.1431  m1_loss_dice_3: 1.097  m1_loss_ce_4: 0.3945  m1_loss_mask_4: 0.1415  m1_loss_dice_4: 1.072  m1_loss_ce_5: 0.3664  m1_loss_mask_5: 0.1404  m1_loss_dice_5: 1.083  m1_loss_ce_6: 0.3697  m1_loss_mask_6: 0.1395  m1_loss_dice_6: 1.029  m1_loss_ce_7: 0.3814  m1_loss_mask_7: 0.1399  m1_loss_dice_7: 1.044  m1_loss_ce_8: 0.3581  m1_loss_mask_8: 0.1415  m1_loss_dice_8: 1.052  m2_loss_ce: 0.3814  m2_loss_mask: 0.1384  m2_loss_dice: 1.072  m2_loss_ce_0: 0.4836  m2_loss_mask_0: 0.1659  m2_loss_dice_0: 1.222  m2_loss_ce_1: 0.5211  m2_loss_mask_1: 0.1468  m2_loss_dice_1: 1.165  m2_loss_ce_2: 0.4818  m2_loss_mask_2: 0.1441  m2_loss_dice_2: 1.137  m2_loss_ce_3: 0.445  m2_loss_mask_3: 0.1434  m2_loss_dice_3: 1.082  m2_loss_ce_4: 0.3889  m2_loss_mask_4: 0.1416  m2_loss_dice_4: 1.064  m2_loss_ce_5: 0.4  m2_loss_mask_5: 0.1416  m2_loss_dice_5: 1.056  m2_loss_ce_6: 0.3999  m2_loss_mask_6: 0.1429  m2_loss_dice_6: 1.078  m2_loss_ce_7: 0.3722  m2_loss_mask_7: 0.1415  m2_loss_dice_7: 1.082  m2_loss_ce_8: 0.3707  m2_loss_mask_8: 0.1388  m2_loss_dice_8: 1.089  com_loss_ce: 1.713  com_loss_mask: 0.6926  com_loss_dice: 0.9722    time: 1.7079  last_time: 1.7110  data_time: 0.0531  last_data_time: 0.0666   lr: 0.0001  max_mem: 37406M
[09/08 21:06:01] d2.utils.events INFO:  eta: 0:32:55  iter: 839  total_loss: 38.39  m1_loss_ce: 0.4225  m1_loss_mask: 0.1571  m1_loss_dice: 1.129  m1_loss_ce_0: 0.5006  m1_loss_mask_0: 0.1765  m1_loss_dice_0: 1.276  m1_loss_ce_1: 0.5335  m1_loss_mask_1: 0.1711  m1_loss_dice_1: 1.221  m1_loss_ce_2: 0.483  m1_loss_mask_2: 0.1668  m1_loss_dice_2: 1.177  m1_loss_ce_3: 0.464  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.134  m1_loss_ce_4: 0.3999  m1_loss_mask_4: 0.1625  m1_loss_dice_4: 1.149  m1_loss_ce_5: 0.4049  m1_loss_mask_5: 0.1602  m1_loss_dice_5: 1.152  m1_loss_ce_6: 0.3713  m1_loss_mask_6: 0.1584  m1_loss_dice_6: 1.106  m1_loss_ce_7: 0.3767  m1_loss_mask_7: 0.1591  m1_loss_dice_7: 1.084  m1_loss_ce_8: 0.3637  m1_loss_mask_8: 0.1584  m1_loss_dice_8: 1.12  m2_loss_ce: 0.4069  m2_loss_mask: 0.1569  m2_loss_dice: 1.088  m2_loss_ce_0: 0.5305  m2_loss_mask_0: 0.1759  m2_loss_dice_0: 1.273  m2_loss_ce_1: 0.5767  m2_loss_mask_1: 0.1666  m2_loss_dice_1: 1.259  m2_loss_ce_2: 0.4923  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.188  m2_loss_ce_3: 0.4734  m2_loss_mask_3: 0.1615  m2_loss_dice_3: 1.139  m2_loss_ce_4: 0.4341  m2_loss_mask_4: 0.1598  m2_loss_dice_4: 1.129  m2_loss_ce_5: 0.4027  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.131  m2_loss_ce_6: 0.396  m2_loss_mask_6: 0.1608  m2_loss_dice_6: 1.096  m2_loss_ce_7: 0.4095  m2_loss_mask_7: 0.1589  m2_loss_dice_7: 1.126  m2_loss_ce_8: 0.3993  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.094  com_loss_ce: 1.726  com_loss_mask: 0.6926  com_loss_dice: 0.9724    time: 1.7083  last_time: 1.7228  data_time: 0.0579  last_data_time: 0.0614   lr: 0.0001  max_mem: 37406M
[09/08 21:06:36] d2.utils.events INFO:  eta: 0:32:21  iter: 859  total_loss: 37.52  m1_loss_ce: 0.4096  m1_loss_mask: 0.1485  m1_loss_dice: 1.089  m1_loss_ce_0: 0.4907  m1_loss_mask_0: 0.1703  m1_loss_dice_0: 1.243  m1_loss_ce_1: 0.5394  m1_loss_mask_1: 0.1601  m1_loss_dice_1: 1.194  m1_loss_ce_2: 0.4588  m1_loss_mask_2: 0.1514  m1_loss_dice_2: 1.112  m1_loss_ce_3: 0.4272  m1_loss_mask_3: 0.1544  m1_loss_dice_3: 1.082  m1_loss_ce_4: 0.3928  m1_loss_mask_4: 0.152  m1_loss_dice_4: 1.085  m1_loss_ce_5: 0.4088  m1_loss_mask_5: 0.1496  m1_loss_dice_5: 1.124  m1_loss_ce_6: 0.406  m1_loss_mask_6: 0.1489  m1_loss_dice_6: 1.072  m1_loss_ce_7: 0.3515  m1_loss_mask_7: 0.1481  m1_loss_dice_7: 1.05  m1_loss_ce_8: 0.3664  m1_loss_mask_8: 0.1488  m1_loss_dice_8: 1.094  m2_loss_ce: 0.4097  m2_loss_mask: 0.156  m2_loss_dice: 1.055  m2_loss_ce_0: 0.5426  m2_loss_mask_0: 0.1769  m2_loss_dice_0: 1.24  m2_loss_ce_1: 0.5508  m2_loss_mask_1: 0.1648  m2_loss_dice_1: 1.226  m2_loss_ce_2: 0.5126  m2_loss_mask_2: 0.1593  m2_loss_dice_2: 1.138  m2_loss_ce_3: 0.4503  m2_loss_mask_3: 0.1607  m2_loss_dice_3: 1.085  m2_loss_ce_4: 0.4257  m2_loss_mask_4: 0.1593  m2_loss_dice_4: 1.102  m2_loss_ce_5: 0.4167  m2_loss_mask_5: 0.1566  m2_loss_dice_5: 1.038  m2_loss_ce_6: 0.4169  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.103  m2_loss_ce_7: 0.4208  m2_loss_mask_7: 0.1567  m2_loss_dice_7: 1.04  m2_loss_ce_8: 0.4375  m2_loss_mask_8: 0.1568  m2_loss_dice_8: 1.063  com_loss_ce: 1.708  com_loss_mask: 0.6926  com_loss_dice: 0.9708    time: 1.7086  last_time: 1.7948  data_time: 0.0554  last_data_time: 0.0767   lr: 0.0001  max_mem: 37406M
[09/08 21:07:10] d2.utils.events INFO:  eta: 0:31:47  iter: 879  total_loss: 38.91  m1_loss_ce: 0.4068  m1_loss_mask: 0.1429  m1_loss_dice: 1.084  m1_loss_ce_0: 0.5274  m1_loss_mask_0: 0.1617  m1_loss_dice_0: 1.277  m1_loss_ce_1: 0.5757  m1_loss_mask_1: 0.1559  m1_loss_dice_1: 1.209  m1_loss_ce_2: 0.5046  m1_loss_mask_2: 0.1468  m1_loss_dice_2: 1.173  m1_loss_ce_3: 0.4659  m1_loss_mask_3: 0.1469  m1_loss_dice_3: 1.151  m1_loss_ce_4: 0.4077  m1_loss_mask_4: 0.1479  m1_loss_dice_4: 1.121  m1_loss_ce_5: 0.4119  m1_loss_mask_5: 0.1472  m1_loss_dice_5: 1.136  m1_loss_ce_6: 0.3976  m1_loss_mask_6: 0.1471  m1_loss_dice_6: 1.156  m1_loss_ce_7: 0.401  m1_loss_mask_7: 0.1472  m1_loss_dice_7: 1.072  m1_loss_ce_8: 0.375  m1_loss_mask_8: 0.1448  m1_loss_dice_8: 1.142  m2_loss_ce: 0.3919  m2_loss_mask: 0.1445  m2_loss_dice: 1.137  m2_loss_ce_0: 0.545  m2_loss_mask_0: 0.1618  m2_loss_dice_0: 1.3  m2_loss_ce_1: 0.5738  m2_loss_mask_1: 0.1522  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.5036  m2_loss_mask_2: 0.1469  m2_loss_dice_2: 1.242  m2_loss_ce_3: 0.4599  m2_loss_mask_3: 0.1475  m2_loss_dice_3: 1.171  m2_loss_ce_4: 0.4312  m2_loss_mask_4: 0.1426  m2_loss_dice_4: 1.156  m2_loss_ce_5: 0.4151  m2_loss_mask_5: 0.1417  m2_loss_dice_5: 1.18  m2_loss_ce_6: 0.4151  m2_loss_mask_6: 0.1418  m2_loss_dice_6: 1.151  m2_loss_ce_7: 0.4211  m2_loss_mask_7: 0.1414  m2_loss_dice_7: 1.133  m2_loss_ce_8: 0.4102  m2_loss_mask_8: 0.1415  m2_loss_dice_8: 1.146  com_loss_ce: 1.735  com_loss_mask: 0.6926  com_loss_dice: 0.9736    time: 1.7087  last_time: 1.6958  data_time: 0.0494  last_data_time: 0.0398   lr: 0.0001  max_mem: 37406M
[09/08 21:07:44] d2.utils.events INFO:  eta: 0:31:13  iter: 899  total_loss: 38.6  m1_loss_ce: 0.3754  m1_loss_mask: 0.1378  m1_loss_dice: 1.105  m1_loss_ce_0: 0.4868  m1_loss_mask_0: 0.1613  m1_loss_dice_0: 1.279  m1_loss_ce_1: 0.5138  m1_loss_mask_1: 0.1534  m1_loss_dice_1: 1.186  m1_loss_ce_2: 0.4615  m1_loss_mask_2: 0.1437  m1_loss_dice_2: 1.161  m1_loss_ce_3: 0.4299  m1_loss_mask_3: 0.1444  m1_loss_dice_3: 1.11  m1_loss_ce_4: 0.3954  m1_loss_mask_4: 0.1417  m1_loss_dice_4: 1.108  m1_loss_ce_5: 0.3911  m1_loss_mask_5: 0.1365  m1_loss_dice_5: 1.125  m1_loss_ce_6: 0.3975  m1_loss_mask_6: 0.1428  m1_loss_dice_6: 1.088  m1_loss_ce_7: 0.3887  m1_loss_mask_7: 0.1386  m1_loss_dice_7: 1.098  m1_loss_ce_8: 0.3931  m1_loss_mask_8: 0.1378  m1_loss_dice_8: 1.125  m2_loss_ce: 0.4086  m2_loss_mask: 0.1445  m2_loss_dice: 1.133  m2_loss_ce_0: 0.5536  m2_loss_mask_0: 0.1642  m2_loss_dice_0: 1.301  m2_loss_ce_1: 0.5562  m2_loss_mask_1: 0.1539  m2_loss_dice_1: 1.193  m2_loss_ce_2: 0.5277  m2_loss_mask_2: 0.15  m2_loss_dice_2: 1.185  m2_loss_ce_3: 0.4492  m2_loss_mask_3: 0.1483  m2_loss_dice_3: 1.136  m2_loss_ce_4: 0.4147  m2_loss_mask_4: 0.1444  m2_loss_dice_4: 1.123  m2_loss_ce_5: 0.4244  m2_loss_mask_5: 0.1417  m2_loss_dice_5: 1.127  m2_loss_ce_6: 0.4419  m2_loss_mask_6: 0.1456  m2_loss_dice_6: 1.121  m2_loss_ce_7: 0.4317  m2_loss_mask_7: 0.1442  m2_loss_dice_7: 1.118  m2_loss_ce_8: 0.4157  m2_loss_mask_8: 0.1445  m2_loss_dice_8: 1.102  com_loss_ce: 1.726  com_loss_mask: 0.6926  com_loss_dice: 0.9735    time: 1.7086  last_time: 1.6923  data_time: 0.0474  last_data_time: 0.0401   lr: 0.0001  max_mem: 37406M
[09/08 21:08:18] d2.utils.events INFO:  eta: 0:30:39  iter: 919  total_loss: 38.94  m1_loss_ce: 0.3828  m1_loss_mask: 0.1351  m1_loss_dice: 1.123  m1_loss_ce_0: 0.4987  m1_loss_mask_0: 0.1583  m1_loss_dice_0: 1.32  m1_loss_ce_1: 0.5756  m1_loss_mask_1: 0.1445  m1_loss_dice_1: 1.258  m1_loss_ce_2: 0.4851  m1_loss_mask_2: 0.1368  m1_loss_dice_2: 1.194  m1_loss_ce_3: 0.456  m1_loss_mask_3: 0.137  m1_loss_dice_3: 1.143  m1_loss_ce_4: 0.4101  m1_loss_mask_4: 0.1378  m1_loss_dice_4: 1.147  m1_loss_ce_5: 0.3868  m1_loss_mask_5: 0.1377  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.3961  m1_loss_mask_6: 0.1342  m1_loss_dice_6: 1.138  m1_loss_ce_7: 0.371  m1_loss_mask_7: 0.1358  m1_loss_dice_7: 1.127  m1_loss_ce_8: 0.3782  m1_loss_mask_8: 0.1355  m1_loss_dice_8: 1.136  m2_loss_ce: 0.4036  m2_loss_mask: 0.139  m2_loss_dice: 1.121  m2_loss_ce_0: 0.5183  m2_loss_mask_0: 0.16  m2_loss_dice_0: 1.338  m2_loss_ce_1: 0.6007  m2_loss_mask_1: 0.1463  m2_loss_dice_1: 1.274  m2_loss_ce_2: 0.5258  m2_loss_mask_2: 0.15  m2_loss_dice_2: 1.214  m2_loss_ce_3: 0.5005  m2_loss_mask_3: 0.1417  m2_loss_dice_3: 1.164  m2_loss_ce_4: 0.4384  m2_loss_mask_4: 0.1384  m2_loss_dice_4: 1.182  m2_loss_ce_5: 0.4461  m2_loss_mask_5: 0.1385  m2_loss_dice_5: 1.149  m2_loss_ce_6: 0.428  m2_loss_mask_6: 0.1386  m2_loss_dice_6: 1.122  m2_loss_ce_7: 0.397  m2_loss_mask_7: 0.1387  m2_loss_dice_7: 1.161  m2_loss_ce_8: 0.3968  m2_loss_mask_8: 0.1402  m2_loss_dice_8: 1.131  com_loss_ce: 1.763  com_loss_mask: 0.6927  com_loss_dice: 0.9741    time: 1.7086  last_time: 1.6901  data_time: 0.0543  last_data_time: 0.0536   lr: 0.0001  max_mem: 37406M
[09/08 21:08:53] d2.utils.events INFO:  eta: 0:30:05  iter: 939  total_loss: 36.81  m1_loss_ce: 0.417  m1_loss_mask: 0.1476  m1_loss_dice: 1.042  m1_loss_ce_0: 0.4986  m1_loss_mask_0: 0.1745  m1_loss_dice_0: 1.224  m1_loss_ce_1: 0.5113  m1_loss_mask_1: 0.1541  m1_loss_dice_1: 1.137  m1_loss_ce_2: 0.4585  m1_loss_mask_2: 0.1519  m1_loss_dice_2: 1.089  m1_loss_ce_3: 0.4256  m1_loss_mask_3: 0.1545  m1_loss_dice_3: 1.061  m1_loss_ce_4: 0.3995  m1_loss_mask_4: 0.1502  m1_loss_dice_4: 1.064  m1_loss_ce_5: 0.4143  m1_loss_mask_5: 0.1479  m1_loss_dice_5: 1.051  m1_loss_ce_6: 0.3669  m1_loss_mask_6: 0.1491  m1_loss_dice_6: 1.029  m1_loss_ce_7: 0.374  m1_loss_mask_7: 0.1492  m1_loss_dice_7: 1.046  m1_loss_ce_8: 0.3725  m1_loss_mask_8: 0.1476  m1_loss_dice_8: 1.046  m2_loss_ce: 0.4014  m2_loss_mask: 0.1539  m2_loss_dice: 1.069  m2_loss_ce_0: 0.5004  m2_loss_mask_0: 0.1781  m2_loss_dice_0: 1.203  m2_loss_ce_1: 0.5779  m2_loss_mask_1: 0.1664  m2_loss_dice_1: 1.185  m2_loss_ce_2: 0.4909  m2_loss_mask_2: 0.1585  m2_loss_dice_2: 1.142  m2_loss_ce_3: 0.4535  m2_loss_mask_3: 0.1613  m2_loss_dice_3: 1.068  m2_loss_ce_4: 0.4257  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.094  m2_loss_ce_5: 0.3954  m2_loss_mask_5: 0.1542  m2_loss_dice_5: 1.034  m2_loss_ce_6: 0.3875  m2_loss_mask_6: 0.1549  m2_loss_dice_6: 1.056  m2_loss_ce_7: 0.4104  m2_loss_mask_7: 0.1551  m2_loss_dice_7: 1.069  m2_loss_ce_8: 0.3968  m2_loss_mask_8: 0.1554  m2_loss_dice_8: 1.048  com_loss_ce: 1.735  com_loss_mask: 0.6926  com_loss_dice: 0.9712    time: 1.7087  last_time: 1.7046  data_time: 0.0585  last_data_time: 0.0443   lr: 0.0001  max_mem: 37406M
[09/08 21:09:27] d2.utils.events INFO:  eta: 0:29:30  iter: 959  total_loss: 38.97  m1_loss_ce: 0.3645  m1_loss_mask: 0.1388  m1_loss_dice: 1.163  m1_loss_ce_0: 0.4844  m1_loss_mask_0: 0.1633  m1_loss_dice_0: 1.337  m1_loss_ce_1: 0.5146  m1_loss_mask_1: 0.1492  m1_loss_dice_1: 1.24  m1_loss_ce_2: 0.4691  m1_loss_mask_2: 0.1428  m1_loss_dice_2: 1.232  m1_loss_ce_3: 0.4045  m1_loss_mask_3: 0.1477  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.3815  m1_loss_mask_4: 0.147  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.3891  m1_loss_mask_5: 0.139  m1_loss_dice_5: 1.156  m1_loss_ce_6: 0.3805  m1_loss_mask_6: 0.1395  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.3406  m1_loss_mask_7: 0.1395  m1_loss_dice_7: 1.166  m1_loss_ce_8: 0.3652  m1_loss_mask_8: 0.1388  m1_loss_dice_8: 1.171  m2_loss_ce: 0.3811  m2_loss_mask: 0.1461  m2_loss_dice: 1.189  m2_loss_ce_0: 0.5133  m2_loss_mask_0: 0.1652  m2_loss_dice_0: 1.311  m2_loss_ce_1: 0.5425  m2_loss_mask_1: 0.1571  m2_loss_dice_1: 1.29  m2_loss_ce_2: 0.4749  m2_loss_mask_2: 0.1517  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.4279  m2_loss_mask_3: 0.149  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.4127  m2_loss_mask_4: 0.1481  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.3722  m2_loss_mask_5: 0.1451  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.3587  m2_loss_mask_6: 0.1422  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.3772  m2_loss_mask_7: 0.1461  m2_loss_dice_7: 1.15  m2_loss_ce_8: 0.3816  m2_loss_mask_8: 0.1432  m2_loss_dice_8: 1.198  com_loss_ce: 1.716  com_loss_mask: 0.6926  com_loss_dice: 0.9728    time: 1.7086  last_time: 1.7016  data_time: 0.0502  last_data_time: 0.0404   lr: 0.0001  max_mem: 37406M
[09/08 21:10:01] d2.utils.events INFO:  eta: 0:28:56  iter: 979  total_loss: 38.05  m1_loss_ce: 0.3986  m1_loss_mask: 0.1421  m1_loss_dice: 1.102  m1_loss_ce_0: 0.5272  m1_loss_mask_0: 0.1678  m1_loss_dice_0: 1.267  m1_loss_ce_1: 0.5409  m1_loss_mask_1: 0.1525  m1_loss_dice_1: 1.218  m1_loss_ce_2: 0.4817  m1_loss_mask_2: 0.1503  m1_loss_dice_2: 1.159  m1_loss_ce_3: 0.4222  m1_loss_mask_3: 0.148  m1_loss_dice_3: 1.123  m1_loss_ce_4: 0.3975  m1_loss_mask_4: 0.1463  m1_loss_dice_4: 1.109  m1_loss_ce_5: 0.3636  m1_loss_mask_5: 0.1434  m1_loss_dice_5: 1.088  m1_loss_ce_6: 0.3729  m1_loss_mask_6: 0.145  m1_loss_dice_6: 1.085  m1_loss_ce_7: 0.3718  m1_loss_mask_7: 0.1449  m1_loss_dice_7: 1.095  m1_loss_ce_8: 0.4015  m1_loss_mask_8: 0.142  m1_loss_dice_8: 1.069  m2_loss_ce: 0.4469  m2_loss_mask: 0.1501  m2_loss_dice: 1.097  m2_loss_ce_0: 0.5245  m2_loss_mask_0: 0.167  m2_loss_dice_0: 1.277  m2_loss_ce_1: 0.5671  m2_loss_mask_1: 0.1616  m2_loss_dice_1: 1.207  m2_loss_ce_2: 0.5313  m2_loss_mask_2: 0.1547  m2_loss_dice_2: 1.196  m2_loss_ce_3: 0.4355  m2_loss_mask_3: 0.1542  m2_loss_dice_3: 1.141  m2_loss_ce_4: 0.4033  m2_loss_mask_4: 0.1512  m2_loss_dice_4: 1.134  m2_loss_ce_5: 0.4323  m2_loss_mask_5: 0.1501  m2_loss_dice_5: 1.116  m2_loss_ce_6: 0.4141  m2_loss_mask_6: 0.1517  m2_loss_dice_6: 1.136  m2_loss_ce_7: 0.4147  m2_loss_mask_7: 0.1519  m2_loss_dice_7: 1.112  m2_loss_ce_8: 0.4206  m2_loss_mask_8: 0.1489  m2_loss_dice_8: 1.122  com_loss_ce: 1.724  com_loss_mask: 0.6927  com_loss_dice: 0.9729    time: 1.7084  last_time: 1.7034  data_time: 0.0481  last_data_time: 0.0462   lr: 0.0001  max_mem: 37406M
[09/08 21:10:35] d2.utils.events INFO:  eta: 0:28:22  iter: 999  total_loss: 38.62  m1_loss_ce: 0.3816  m1_loss_mask: 0.1437  m1_loss_dice: 1.134  m1_loss_ce_0: 0.4709  m1_loss_mask_0: 0.1677  m1_loss_dice_0: 1.336  m1_loss_ce_1: 0.5024  m1_loss_mask_1: 0.1521  m1_loss_dice_1: 1.264  m1_loss_ce_2: 0.4851  m1_loss_mask_2: 0.1483  m1_loss_dice_2: 1.213  m1_loss_ce_3: 0.4482  m1_loss_mask_3: 0.1479  m1_loss_dice_3: 1.16  m1_loss_ce_4: 0.3967  m1_loss_mask_4: 0.1462  m1_loss_dice_4: 1.191  m1_loss_ce_5: 0.3968  m1_loss_mask_5: 0.1429  m1_loss_dice_5: 1.162  m1_loss_ce_6: 0.3868  m1_loss_mask_6: 0.1445  m1_loss_dice_6: 1.137  m1_loss_ce_7: 0.3694  m1_loss_mask_7: 0.1437  m1_loss_dice_7: 1.113  m1_loss_ce_8: 0.3816  m1_loss_mask_8: 0.1444  m1_loss_dice_8: 1.135  m2_loss_ce: 0.408  m2_loss_mask: 0.1503  m2_loss_dice: 1.125  m2_loss_ce_0: 0.5147  m2_loss_mask_0: 0.1695  m2_loss_dice_0: 1.294  m2_loss_ce_1: 0.5775  m2_loss_mask_1: 0.1579  m2_loss_dice_1: 1.256  m2_loss_ce_2: 0.5241  m2_loss_mask_2: 0.1545  m2_loss_dice_2: 1.251  m2_loss_ce_3: 0.4798  m2_loss_mask_3: 0.1491  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.4341  m2_loss_mask_4: 0.1514  m2_loss_dice_4: 1.196  m2_loss_ce_5: 0.425  m2_loss_mask_5: 0.1477  m2_loss_dice_5: 1.155  m2_loss_ce_6: 0.4491  m2_loss_mask_6: 0.1492  m2_loss_dice_6: 1.16  m2_loss_ce_7: 0.4421  m2_loss_mask_7: 0.149  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.4205  m2_loss_mask_8: 0.1492  m2_loss_dice_8: 1.167  com_loss_ce: 1.714  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.7083  last_time: 1.6989  data_time: 0.0497  last_data_time: 0.0432   lr: 0.0001  max_mem: 37406M
[09/08 21:11:10] d2.utils.events INFO:  eta: 0:27:48  iter: 1019  total_loss: 37.09  m1_loss_ce: 0.373  m1_loss_mask: 0.145  m1_loss_dice: 1.065  m1_loss_ce_0: 0.4527  m1_loss_mask_0: 0.1713  m1_loss_dice_0: 1.266  m1_loss_ce_1: 0.5071  m1_loss_mask_1: 0.152  m1_loss_dice_1: 1.186  m1_loss_ce_2: 0.465  m1_loss_mask_2: 0.151  m1_loss_dice_2: 1.122  m1_loss_ce_3: 0.3839  m1_loss_mask_3: 0.1507  m1_loss_dice_3: 1.083  m1_loss_ce_4: 0.3667  m1_loss_mask_4: 0.1512  m1_loss_dice_4: 1.073  m1_loss_ce_5: 0.3673  m1_loss_mask_5: 0.1495  m1_loss_dice_5: 1.062  m1_loss_ce_6: 0.3538  m1_loss_mask_6: 0.1492  m1_loss_dice_6: 1.018  m1_loss_ce_7: 0.3463  m1_loss_mask_7: 0.1486  m1_loss_dice_7: 1.073  m1_loss_ce_8: 0.3516  m1_loss_mask_8: 0.1451  m1_loss_dice_8: 1.052  m2_loss_ce: 0.374  m2_loss_mask: 0.1469  m2_loss_dice: 1.103  m2_loss_ce_0: 0.5001  m2_loss_mask_0: 0.1649  m2_loss_dice_0: 1.279  m2_loss_ce_1: 0.5586  m2_loss_mask_1: 0.1548  m2_loss_dice_1: 1.196  m2_loss_ce_2: 0.4932  m2_loss_mask_2: 0.1493  m2_loss_dice_2: 1.187  m2_loss_ce_3: 0.4558  m2_loss_mask_3: 0.1474  m2_loss_dice_3: 1.131  m2_loss_ce_4: 0.404  m2_loss_mask_4: 0.1468  m2_loss_dice_4: 1.129  m2_loss_ce_5: 0.3944  m2_loss_mask_5: 0.1459  m2_loss_dice_5: 1.113  m2_loss_ce_6: 0.3836  m2_loss_mask_6: 0.1457  m2_loss_dice_6: 1.079  m2_loss_ce_7: 0.3829  m2_loss_mask_7: 0.146  m2_loss_dice_7: 1.074  m2_loss_ce_8: 0.3959  m2_loss_mask_8: 0.1476  m2_loss_dice_8: 1.074  com_loss_ce: 1.709  com_loss_mask: 0.6927  com_loss_dice: 0.9752    time: 1.7081  last_time: 1.6822  data_time: 0.0491  last_data_time: 0.0487   lr: 0.0001  max_mem: 37406M
[09/08 21:11:44] d2.utils.events INFO:  eta: 0:27:15  iter: 1039  total_loss: 37.77  m1_loss_ce: 0.3807  m1_loss_mask: 0.1511  m1_loss_dice: 1.092  m1_loss_ce_0: 0.4629  m1_loss_mask_0: 0.1754  m1_loss_dice_0: 1.311  m1_loss_ce_1: 0.5524  m1_loss_mask_1: 0.1601  m1_loss_dice_1: 1.201  m1_loss_ce_2: 0.4805  m1_loss_mask_2: 0.1578  m1_loss_dice_2: 1.109  m1_loss_ce_3: 0.4016  m1_loss_mask_3: 0.1561  m1_loss_dice_3: 1.116  m1_loss_ce_4: 0.3743  m1_loss_mask_4: 0.1567  m1_loss_dice_4: 1.112  m1_loss_ce_5: 0.3768  m1_loss_mask_5: 0.155  m1_loss_dice_5: 1.124  m1_loss_ce_6: 0.3459  m1_loss_mask_6: 0.1524  m1_loss_dice_6: 1.096  m1_loss_ce_7: 0.3599  m1_loss_mask_7: 0.1518  m1_loss_dice_7: 1.066  m1_loss_ce_8: 0.3647  m1_loss_mask_8: 0.1514  m1_loss_dice_8: 1.088  m2_loss_ce: 0.3966  m2_loss_mask: 0.1601  m2_loss_dice: 1.11  m2_loss_ce_0: 0.5091  m2_loss_mask_0: 0.1821  m2_loss_dice_0: 1.309  m2_loss_ce_1: 0.5777  m2_loss_mask_1: 0.1722  m2_loss_dice_1: 1.228  m2_loss_ce_2: 0.517  m2_loss_mask_2: 0.1628  m2_loss_dice_2: 1.176  m2_loss_ce_3: 0.4299  m2_loss_mask_3: 0.1612  m2_loss_dice_3: 1.163  m2_loss_ce_4: 0.4269  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.155  m2_loss_ce_5: 0.4287  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.3973  m2_loss_mask_6: 0.1596  m2_loss_dice_6: 1.091  m2_loss_ce_7: 0.4166  m2_loss_mask_7: 0.1585  m2_loss_dice_7: 1.084  m2_loss_ce_8: 0.4107  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.117  com_loss_ce: 1.723  com_loss_mask: 0.6927  com_loss_dice: 0.9723    time: 1.7080  last_time: 1.7186  data_time: 0.0521  last_data_time: 0.0662   lr: 0.0001  max_mem: 37406M
[09/08 21:12:18] d2.utils.events INFO:  eta: 0:26:42  iter: 1059  total_loss: 40.07  m1_loss_ce: 0.4049  m1_loss_mask: 0.1505  m1_loss_dice: 1.13  m1_loss_ce_0: 0.5069  m1_loss_mask_0: 0.1782  m1_loss_dice_0: 1.34  m1_loss_ce_1: 0.5593  m1_loss_mask_1: 0.1649  m1_loss_dice_1: 1.249  m1_loss_ce_2: 0.4881  m1_loss_mask_2: 0.1591  m1_loss_dice_2: 1.234  m1_loss_ce_3: 0.4474  m1_loss_mask_3: 0.1555  m1_loss_dice_3: 1.175  m1_loss_ce_4: 0.4149  m1_loss_mask_4: 0.1537  m1_loss_dice_4: 1.154  m1_loss_ce_5: 0.399  m1_loss_mask_5: 0.1551  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.3993  m1_loss_mask_6: 0.1542  m1_loss_dice_6: 1.151  m1_loss_ce_7: 0.379  m1_loss_mask_7: 0.1545  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.396  m1_loss_mask_8: 0.1518  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4097  m2_loss_mask: 0.1539  m2_loss_dice: 1.154  m2_loss_ce_0: 0.5322  m2_loss_mask_0: 0.175  m2_loss_dice_0: 1.344  m2_loss_ce_1: 0.5606  m2_loss_mask_1: 0.179  m2_loss_dice_1: 1.268  m2_loss_ce_2: 0.507  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.248  m2_loss_ce_3: 0.4717  m2_loss_mask_3: 0.1594  m2_loss_dice_3: 1.199  m2_loss_ce_4: 0.4813  m2_loss_mask_4: 0.1565  m2_loss_dice_4: 1.18  m2_loss_ce_5: 0.4272  m2_loss_mask_5: 0.1535  m2_loss_dice_5: 1.176  m2_loss_ce_6: 0.4442  m2_loss_mask_6: 0.1548  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.4252  m2_loss_mask_7: 0.1544  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.3883  m2_loss_mask_8: 0.153  m2_loss_dice_8: 1.182  com_loss_ce: 1.728  com_loss_mask: 0.6927  com_loss_dice: 0.9738    time: 1.7083  last_time: 1.7288  data_time: 0.0580  last_data_time: 0.0647   lr: 0.0001  max_mem: 37406M
[09/08 21:12:53] d2.utils.events INFO:  eta: 0:26:08  iter: 1079  total_loss: 37.43  m1_loss_ce: 0.3639  m1_loss_mask: 0.1383  m1_loss_dice: 1.064  m1_loss_ce_0: 0.4818  m1_loss_mask_0: 0.1559  m1_loss_dice_0: 1.254  m1_loss_ce_1: 0.5214  m1_loss_mask_1: 0.1466  m1_loss_dice_1: 1.143  m1_loss_ce_2: 0.4656  m1_loss_mask_2: 0.146  m1_loss_dice_2: 1.136  m1_loss_ce_3: 0.4101  m1_loss_mask_3: 0.1423  m1_loss_dice_3: 1.051  m1_loss_ce_4: 0.3723  m1_loss_mask_4: 0.1441  m1_loss_dice_4: 1.072  m1_loss_ce_5: 0.3733  m1_loss_mask_5: 0.1387  m1_loss_dice_5: 1.091  m1_loss_ce_6: 0.3437  m1_loss_mask_6: 0.1382  m1_loss_dice_6: 1.092  m1_loss_ce_7: 0.3479  m1_loss_mask_7: 0.1376  m1_loss_dice_7: 1.071  m1_loss_ce_8: 0.3533  m1_loss_mask_8: 0.1389  m1_loss_dice_8: 1.081  m2_loss_ce: 0.3826  m2_loss_mask: 0.1448  m2_loss_dice: 1.101  m2_loss_ce_0: 0.5276  m2_loss_mask_0: 0.1594  m2_loss_dice_0: 1.249  m2_loss_ce_1: 0.5803  m2_loss_mask_1: 0.1555  m2_loss_dice_1: 1.221  m2_loss_ce_2: 0.4872  m2_loss_mask_2: 0.1509  m2_loss_dice_2: 1.135  m2_loss_ce_3: 0.4301  m2_loss_mask_3: 0.1469  m2_loss_dice_3: 1.12  m2_loss_ce_4: 0.4008  m2_loss_mask_4: 0.1452  m2_loss_dice_4: 1.089  m2_loss_ce_5: 0.3863  m2_loss_mask_5: 0.1456  m2_loss_dice_5: 1.105  m2_loss_ce_6: 0.4103  m2_loss_mask_6: 0.1468  m2_loss_dice_6: 1.113  m2_loss_ce_7: 0.4035  m2_loss_mask_7: 0.1463  m2_loss_dice_7: 1.14  m2_loss_ce_8: 0.3952  m2_loss_mask_8: 0.1438  m2_loss_dice_8: 1.106  com_loss_ce: 1.703  com_loss_mask: 0.6926  com_loss_dice: 0.9727    time: 1.7085  last_time: 1.6655  data_time: 0.0558  last_data_time: 0.0529   lr: 0.0001  max_mem: 37406M
[09/08 21:13:27] d2.utils.events INFO:  eta: 0:25:34  iter: 1099  total_loss: 39.52  m1_loss_ce: 0.4136  m1_loss_mask: 0.1382  m1_loss_dice: 1.136  m1_loss_ce_0: 0.4887  m1_loss_mask_0: 0.1612  m1_loss_dice_0: 1.345  m1_loss_ce_1: 0.5479  m1_loss_mask_1: 0.1507  m1_loss_dice_1: 1.245  m1_loss_ce_2: 0.5037  m1_loss_mask_2: 0.1408  m1_loss_dice_2: 1.2  m1_loss_ce_3: 0.4391  m1_loss_mask_3: 0.1404  m1_loss_dice_3: 1.135  m1_loss_ce_4: 0.3951  m1_loss_mask_4: 0.1384  m1_loss_dice_4: 1.137  m1_loss_ce_5: 0.4121  m1_loss_mask_5: 0.1379  m1_loss_dice_5: 1.148  m1_loss_ce_6: 0.3959  m1_loss_mask_6: 0.1377  m1_loss_dice_6: 1.103  m1_loss_ce_7: 0.3862  m1_loss_mask_7: 0.1373  m1_loss_dice_7: 1.124  m1_loss_ce_8: 0.381  m1_loss_mask_8: 0.1409  m1_loss_dice_8: 1.111  m2_loss_ce: 0.4345  m2_loss_mask: 0.1406  m2_loss_dice: 1.133  m2_loss_ce_0: 0.5428  m2_loss_mask_0: 0.1659  m2_loss_dice_0: 1.313  m2_loss_ce_1: 0.5931  m2_loss_mask_1: 0.153  m2_loss_dice_1: 1.27  m2_loss_ce_2: 0.5305  m2_loss_mask_2: 0.1455  m2_loss_dice_2: 1.248  m2_loss_ce_3: 0.4862  m2_loss_mask_3: 0.1427  m2_loss_dice_3: 1.159  m2_loss_ce_4: 0.4733  m2_loss_mask_4: 0.1417  m2_loss_dice_4: 1.155  m2_loss_ce_5: 0.4505  m2_loss_mask_5: 0.1405  m2_loss_dice_5: 1.16  m2_loss_ce_6: 0.4399  m2_loss_mask_6: 0.142  m2_loss_dice_6: 1.167  m2_loss_ce_7: 0.4431  m2_loss_mask_7: 0.1403  m2_loss_dice_7: 1.121  m2_loss_ce_8: 0.4242  m2_loss_mask_8: 0.1413  m2_loss_dice_8: 1.12  com_loss_ce: 1.719  com_loss_mask: 0.6926  com_loss_dice: 0.9731    time: 1.7084  last_time: 1.6695  data_time: 0.0482  last_data_time: 0.0442   lr: 0.0001  max_mem: 37406M
[09/08 21:14:02] d2.utils.events INFO:  eta: 0:25:00  iter: 1119  total_loss: 38.07  m1_loss_ce: 0.3352  m1_loss_mask: 0.1522  m1_loss_dice: 1.08  m1_loss_ce_0: 0.459  m1_loss_mask_0: 0.1772  m1_loss_dice_0: 1.241  m1_loss_ce_1: 0.4733  m1_loss_mask_1: 0.1618  m1_loss_dice_1: 1.177  m1_loss_ce_2: 0.4443  m1_loss_mask_2: 0.1529  m1_loss_dice_2: 1.125  m1_loss_ce_3: 0.37  m1_loss_mask_3: 0.157  m1_loss_dice_3: 1.09  m1_loss_ce_4: 0.3646  m1_loss_mask_4: 0.1565  m1_loss_dice_4: 1.11  m1_loss_ce_5: 0.3734  m1_loss_mask_5: 0.1529  m1_loss_dice_5: 1.084  m1_loss_ce_6: 0.359  m1_loss_mask_6: 0.1509  m1_loss_dice_6: 1.049  m1_loss_ce_7: 0.3512  m1_loss_mask_7: 0.1529  m1_loss_dice_7: 1.064  m1_loss_ce_8: 0.3439  m1_loss_mask_8: 0.1527  m1_loss_dice_8: 1.055  m2_loss_ce: 0.3633  m2_loss_mask: 0.1602  m2_loss_dice: 1.09  m2_loss_ce_0: 0.5042  m2_loss_mask_0: 0.1788  m2_loss_dice_0: 1.297  m2_loss_ce_1: 0.5304  m2_loss_mask_1: 0.1665  m2_loss_dice_1: 1.18  m2_loss_ce_2: 0.4723  m2_loss_mask_2: 0.1625  m2_loss_dice_2: 1.15  m2_loss_ce_3: 0.4313  m2_loss_mask_3: 0.1597  m2_loss_dice_3: 1.155  m2_loss_ce_4: 0.3526  m2_loss_mask_4: 0.1578  m2_loss_dice_4: 1.105  m2_loss_ce_5: 0.3918  m2_loss_mask_5: 0.1578  m2_loss_dice_5: 1.102  m2_loss_ce_6: 0.3839  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.076  m2_loss_ce_7: 0.3487  m2_loss_mask_7: 0.1592  m2_loss_dice_7: 1.12  m2_loss_ce_8: 0.3698  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.103  com_loss_ce: 1.697  com_loss_mask: 0.6927  com_loss_dice: 0.9705    time: 1.7083  last_time: 1.6761  data_time: 0.0499  last_data_time: 0.0437   lr: 0.0001  max_mem: 37406M
[09/08 21:14:36] d2.utils.events INFO:  eta: 0:24:26  iter: 1139  total_loss: 37.59  m1_loss_ce: 0.3831  m1_loss_mask: 0.1497  m1_loss_dice: 1.103  m1_loss_ce_0: 0.4675  m1_loss_mask_0: 0.1653  m1_loss_dice_0: 1.267  m1_loss_ce_1: 0.5092  m1_loss_mask_1: 0.1601  m1_loss_dice_1: 1.195  m1_loss_ce_2: 0.4555  m1_loss_mask_2: 0.1528  m1_loss_dice_2: 1.156  m1_loss_ce_3: 0.4175  m1_loss_mask_3: 0.1542  m1_loss_dice_3: 1.105  m1_loss_ce_4: 0.3803  m1_loss_mask_4: 0.1527  m1_loss_dice_4: 1.092  m1_loss_ce_5: 0.3614  m1_loss_mask_5: 0.1486  m1_loss_dice_5: 1.111  m1_loss_ce_6: 0.3514  m1_loss_mask_6: 0.1503  m1_loss_dice_6: 1.093  m1_loss_ce_7: 0.3456  m1_loss_mask_7: 0.1485  m1_loss_dice_7: 1.094  m1_loss_ce_8: 0.3619  m1_loss_mask_8: 0.1443  m1_loss_dice_8: 1.089  m2_loss_ce: 0.3937  m2_loss_mask: 0.155  m2_loss_dice: 1.107  m2_loss_ce_0: 0.5255  m2_loss_mask_0: 0.1773  m2_loss_dice_0: 1.242  m2_loss_ce_1: 0.5803  m2_loss_mask_1: 0.164  m2_loss_dice_1: 1.213  m2_loss_ce_2: 0.4988  m2_loss_mask_2: 0.1577  m2_loss_dice_2: 1.182  m2_loss_ce_3: 0.4323  m2_loss_mask_3: 0.1551  m2_loss_dice_3: 1.129  m2_loss_ce_4: 0.4354  m2_loss_mask_4: 0.1535  m2_loss_dice_4: 1.116  m2_loss_ce_5: 0.4058  m2_loss_mask_5: 0.1513  m2_loss_dice_5: 1.112  m2_loss_ce_6: 0.4176  m2_loss_mask_6: 0.155  m2_loss_dice_6: 1.091  m2_loss_ce_7: 0.4104  m2_loss_mask_7: 0.1557  m2_loss_dice_7: 1.13  m2_loss_ce_8: 0.3715  m2_loss_mask_8: 0.155  m2_loss_dice_8: 1.107  com_loss_ce: 1.699  com_loss_mask: 0.6927  com_loss_dice: 0.9734    time: 1.7084  last_time: 1.8385  data_time: 0.0548  last_data_time: 0.0922   lr: 0.0001  max_mem: 37406M
[09/08 21:15:11] d2.utils.events INFO:  eta: 0:23:53  iter: 1159  total_loss: 38.54  m1_loss_ce: 0.4046  m1_loss_mask: 0.1257  m1_loss_dice: 1.104  m1_loss_ce_0: 0.476  m1_loss_mask_0: 0.1522  m1_loss_dice_0: 1.282  m1_loss_ce_1: 0.5314  m1_loss_mask_1: 0.1425  m1_loss_dice_1: 1.191  m1_loss_ce_2: 0.4561  m1_loss_mask_2: 0.132  m1_loss_dice_2: 1.163  m1_loss_ce_3: 0.4376  m1_loss_mask_3: 0.1316  m1_loss_dice_3: 1.148  m1_loss_ce_4: 0.3789  m1_loss_mask_4: 0.1287  m1_loss_dice_4: 1.122  m1_loss_ce_5: 0.3512  m1_loss_mask_5: 0.1263  m1_loss_dice_5: 1.147  m1_loss_ce_6: 0.3815  m1_loss_mask_6: 0.1251  m1_loss_dice_6: 1.135  m1_loss_ce_7: 0.3537  m1_loss_mask_7: 0.1247  m1_loss_dice_7: 1.13  m1_loss_ce_8: 0.3781  m1_loss_mask_8: 0.1252  m1_loss_dice_8: 1.086  m2_loss_ce: 0.4204  m2_loss_mask: 0.1292  m2_loss_dice: 1.106  m2_loss_ce_0: 0.5498  m2_loss_mask_0: 0.1542  m2_loss_dice_0: 1.316  m2_loss_ce_1: 0.5603  m2_loss_mask_1: 0.1469  m2_loss_dice_1: 1.314  m2_loss_ce_2: 0.5065  m2_loss_mask_2: 0.136  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.481  m2_loss_mask_3: 0.1345  m2_loss_dice_3: 1.15  m2_loss_ce_4: 0.4199  m2_loss_mask_4: 0.134  m2_loss_dice_4: 1.183  m2_loss_ce_5: 0.4338  m2_loss_mask_5: 0.1319  m2_loss_dice_5: 1.138  m2_loss_ce_6: 0.401  m2_loss_mask_6: 0.1335  m2_loss_dice_6: 1.137  m2_loss_ce_7: 0.3967  m2_loss_mask_7: 0.1325  m2_loss_dice_7: 1.133  m2_loss_ce_8: 0.4285  m2_loss_mask_8: 0.1298  m2_loss_dice_8: 1.121  com_loss_ce: 1.715  com_loss_mask: 0.6927  com_loss_dice: 0.9744    time: 1.7087  last_time: 1.6949  data_time: 0.0549  last_data_time: 0.0416   lr: 0.0001  max_mem: 37589M
[09/08 21:15:45] d2.utils.events INFO:  eta: 0:23:20  iter: 1179  total_loss: 40.31  m1_loss_ce: 0.3605  m1_loss_mask: 0.1469  m1_loss_dice: 1.139  m1_loss_ce_0: 0.4525  m1_loss_mask_0: 0.1653  m1_loss_dice_0: 1.359  m1_loss_ce_1: 0.5252  m1_loss_mask_1: 0.1585  m1_loss_dice_1: 1.222  m1_loss_ce_2: 0.4655  m1_loss_mask_2: 0.1523  m1_loss_dice_2: 1.183  m1_loss_ce_3: 0.4011  m1_loss_mask_3: 0.1501  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.3792  m1_loss_mask_4: 0.1484  m1_loss_dice_4: 1.133  m1_loss_ce_5: 0.3749  m1_loss_mask_5: 0.1479  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.3696  m1_loss_mask_6: 0.145  m1_loss_dice_6: 1.123  m1_loss_ce_7: 0.3467  m1_loss_mask_7: 0.1465  m1_loss_dice_7: 1.15  m1_loss_ce_8: 0.3502  m1_loss_mask_8: 0.1471  m1_loss_dice_8: 1.153  m2_loss_ce: 0.4199  m2_loss_mask: 0.1481  m2_loss_dice: 1.168  m2_loss_ce_0: 0.5418  m2_loss_mask_0: 0.1701  m2_loss_dice_0: 1.355  m2_loss_ce_1: 0.5619  m2_loss_mask_1: 0.1631  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.4984  m2_loss_mask_2: 0.1533  m2_loss_dice_2: 1.29  m2_loss_ce_3: 0.4347  m2_loss_mask_3: 0.1511  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.4365  m2_loss_mask_4: 0.1515  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.4393  m2_loss_mask_5: 0.1508  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.4008  m2_loss_mask_6: 0.1493  m2_loss_dice_6: 1.165  m2_loss_ce_7: 0.4201  m2_loss_mask_7: 0.1505  m2_loss_dice_7: 1.16  m2_loss_ce_8: 0.4283  m2_loss_mask_8: 0.1495  m2_loss_dice_8: 1.144  com_loss_ce: 1.734  com_loss_mask: 0.6926  com_loss_dice: 0.9749    time: 1.7091  last_time: 1.7193  data_time: 0.0595  last_data_time: 0.0625   lr: 0.0001  max_mem: 37589M
[09/08 21:16:20] d2.utils.events INFO:  eta: 0:22:46  iter: 1199  total_loss: 37.43  m1_loss_ce: 0.3444  m1_loss_mask: 0.1397  m1_loss_dice: 1.069  m1_loss_ce_0: 0.4378  m1_loss_mask_0: 0.1629  m1_loss_dice_0: 1.254  m1_loss_ce_1: 0.5167  m1_loss_mask_1: 0.1508  m1_loss_dice_1: 1.159  m1_loss_ce_2: 0.4569  m1_loss_mask_2: 0.1419  m1_loss_dice_2: 1.105  m1_loss_ce_3: 0.3792  m1_loss_mask_3: 0.141  m1_loss_dice_3: 1.085  m1_loss_ce_4: 0.3696  m1_loss_mask_4: 0.1391  m1_loss_dice_4: 1.088  m1_loss_ce_5: 0.3594  m1_loss_mask_5: 0.1395  m1_loss_dice_5: 1.044  m1_loss_ce_6: 0.3547  m1_loss_mask_6: 0.1402  m1_loss_dice_6: 1.059  m1_loss_ce_7: 0.3669  m1_loss_mask_7: 0.1399  m1_loss_dice_7: 1.052  m1_loss_ce_8: 0.3459  m1_loss_mask_8: 0.138  m1_loss_dice_8: 1.039  m2_loss_ce: 0.4173  m2_loss_mask: 0.1523  m2_loss_dice: 1.089  m2_loss_ce_0: 0.5248  m2_loss_mask_0: 0.1727  m2_loss_dice_0: 1.261  m2_loss_ce_1: 0.5726  m2_loss_mask_1: 0.1603  m2_loss_dice_1: 1.206  m2_loss_ce_2: 0.5048  m2_loss_mask_2: 0.1581  m2_loss_dice_2: 1.149  m2_loss_ce_3: 0.4553  m2_loss_mask_3: 0.1573  m2_loss_dice_3: 1.105  m2_loss_ce_4: 0.4372  m2_loss_mask_4: 0.1525  m2_loss_dice_4: 1.081  m2_loss_ce_5: 0.4055  m2_loss_mask_5: 0.1509  m2_loss_dice_5: 1.096  m2_loss_ce_6: 0.3745  m2_loss_mask_6: 0.1512  m2_loss_dice_6: 1.077  m2_loss_ce_7: 0.3987  m2_loss_mask_7: 0.1523  m2_loss_dice_7: 1.11  m2_loss_ce_8: 0.4058  m2_loss_mask_8: 0.1525  m2_loss_dice_8: 1.107  com_loss_ce: 1.725  com_loss_mask: 0.6927  com_loss_dice: 0.9729    time: 1.7092  last_time: 1.6501  data_time: 0.0536  last_data_time: 0.0393   lr: 0.0001  max_mem: 37589M
[09/08 21:16:54] d2.utils.events INFO:  eta: 0:22:12  iter: 1219  total_loss: 36.35  m1_loss_ce: 0.3846  m1_loss_mask: 0.1325  m1_loss_dice: 1.045  m1_loss_ce_0: 0.4929  m1_loss_mask_0: 0.1573  m1_loss_dice_0: 1.207  m1_loss_ce_1: 0.5386  m1_loss_mask_1: 0.1402  m1_loss_dice_1: 1.167  m1_loss_ce_2: 0.4602  m1_loss_mask_2: 0.1347  m1_loss_dice_2: 1.112  m1_loss_ce_3: 0.4088  m1_loss_mask_3: 0.1306  m1_loss_dice_3: 1.042  m1_loss_ce_4: 0.3822  m1_loss_mask_4: 0.1317  m1_loss_dice_4: 1.092  m1_loss_ce_5: 0.366  m1_loss_mask_5: 0.1305  m1_loss_dice_5: 1.039  m1_loss_ce_6: 0.3576  m1_loss_mask_6: 0.1339  m1_loss_dice_6: 1.05  m1_loss_ce_7: 0.3536  m1_loss_mask_7: 0.1356  m1_loss_dice_7: 1.002  m1_loss_ce_8: 0.3709  m1_loss_mask_8: 0.1329  m1_loss_dice_8: 1.037  m2_loss_ce: 0.3939  m2_loss_mask: 0.1416  m2_loss_dice: 1.096  m2_loss_ce_0: 0.5216  m2_loss_mask_0: 0.1586  m2_loss_dice_0: 1.27  m2_loss_ce_1: 0.5766  m2_loss_mask_1: 0.1554  m2_loss_dice_1: 1.168  m2_loss_ce_2: 0.5225  m2_loss_mask_2: 0.1454  m2_loss_dice_2: 1.141  m2_loss_ce_3: 0.4543  m2_loss_mask_3: 0.1416  m2_loss_dice_3: 1.098  m2_loss_ce_4: 0.4348  m2_loss_mask_4: 0.1419  m2_loss_dice_4: 1.073  m2_loss_ce_5: 0.4056  m2_loss_mask_5: 0.1413  m2_loss_dice_5: 1.088  m2_loss_ce_6: 0.3753  m2_loss_mask_6: 0.14  m2_loss_dice_6: 1.094  m2_loss_ce_7: 0.4164  m2_loss_mask_7: 0.1395  m2_loss_dice_7: 1.067  m2_loss_ce_8: 0.3978  m2_loss_mask_8: 0.1393  m2_loss_dice_8: 1.087  com_loss_ce: 1.725  com_loss_mask: 0.6927  com_loss_dice: 0.9709    time: 1.7091  last_time: 1.6660  data_time: 0.0496  last_data_time: 0.0373   lr: 0.0001  max_mem: 37589M
[09/08 21:17:28] d2.utils.events INFO:  eta: 0:21:38  iter: 1239  total_loss: 36.58  m1_loss_ce: 0.3774  m1_loss_mask: 0.1432  m1_loss_dice: 1.048  m1_loss_ce_0: 0.4616  m1_loss_mask_0: 0.1644  m1_loss_dice_0: 1.222  m1_loss_ce_1: 0.5154  m1_loss_mask_1: 0.1546  m1_loss_dice_1: 1.181  m1_loss_ce_2: 0.4416  m1_loss_mask_2: 0.1497  m1_loss_dice_2: 1.118  m1_loss_ce_3: 0.4058  m1_loss_mask_3: 0.1428  m1_loss_dice_3: 1.094  m1_loss_ce_4: 0.3723  m1_loss_mask_4: 0.1444  m1_loss_dice_4: 1.075  m1_loss_ce_5: 0.3497  m1_loss_mask_5: 0.1433  m1_loss_dice_5: 1.051  m1_loss_ce_6: 0.3613  m1_loss_mask_6: 0.1447  m1_loss_dice_6: 1.056  m1_loss_ce_7: 0.3632  m1_loss_mask_7: 0.1457  m1_loss_dice_7: 1.043  m1_loss_ce_8: 0.3796  m1_loss_mask_8: 0.1461  m1_loss_dice_8: 1.068  m2_loss_ce: 0.374  m2_loss_mask: 0.1484  m2_loss_dice: 1.087  m2_loss_ce_0: 0.5152  m2_loss_mask_0: 0.166  m2_loss_dice_0: 1.25  m2_loss_ce_1: 0.5531  m2_loss_mask_1: 0.1571  m2_loss_dice_1: 1.226  m2_loss_ce_2: 0.4912  m2_loss_mask_2: 0.1509  m2_loss_dice_2: 1.165  m2_loss_ce_3: 0.4311  m2_loss_mask_3: 0.1497  m2_loss_dice_3: 1.127  m2_loss_ce_4: 0.3828  m2_loss_mask_4: 0.1482  m2_loss_dice_4: 1.104  m2_loss_ce_5: 0.4068  m2_loss_mask_5: 0.1448  m2_loss_dice_5: 1.091  m2_loss_ce_6: 0.3748  m2_loss_mask_6: 0.1486  m2_loss_dice_6: 1.077  m2_loss_ce_7: 0.3995  m2_loss_mask_7: 0.1473  m2_loss_dice_7: 1.09  m2_loss_ce_8: 0.4096  m2_loss_mask_8: 0.1478  m2_loss_dice_8: 1.084  com_loss_ce: 1.707  com_loss_mask: 0.6927  com_loss_dice: 0.9731    time: 1.7092  last_time: 1.6955  data_time: 0.0504  last_data_time: 0.0669   lr: 0.0001  max_mem: 37589M
[09/08 21:18:03] d2.utils.events INFO:  eta: 0:21:04  iter: 1259  total_loss: 39.73  m1_loss_ce: 0.4139  m1_loss_mask: 0.1509  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5034  m1_loss_mask_0: 0.1681  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.548  m1_loss_mask_1: 0.1566  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.5057  m1_loss_mask_2: 0.1524  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.4211  m1_loss_mask_3: 0.1482  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.4034  m1_loss_mask_4: 0.1526  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.3953  m1_loss_mask_5: 0.1531  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.3941  m1_loss_mask_6: 0.1544  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4053  m1_loss_mask_7: 0.1532  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.408  m1_loss_mask_8: 0.152  m1_loss_dice_8: 1.197  m2_loss_ce: 0.439  m2_loss_mask: 0.1542  m2_loss_dice: 1.256  m2_loss_ce_0: 0.5347  m2_loss_mask_0: 0.1739  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.5649  m2_loss_mask_1: 0.1637  m2_loss_dice_1: 1.337  m2_loss_ce_2: 0.5119  m2_loss_mask_2: 0.1568  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.4596  m2_loss_mask_3: 0.1533  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.4457  m2_loss_mask_4: 0.1546  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.4629  m2_loss_mask_5: 0.1528  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.4568  m2_loss_mask_6: 0.1543  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4283  m2_loss_mask_7: 0.1554  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4717  m2_loss_mask_8: 0.1547  m2_loss_dice_8: 1.236  com_loss_ce: 1.716  com_loss_mask: 0.6926  com_loss_dice: 0.9731    time: 1.7093  last_time: 1.7559  data_time: 0.0533  last_data_time: 0.0500   lr: 0.0001  max_mem: 37589M
[09/08 21:18:37] d2.utils.events INFO:  eta: 0:20:29  iter: 1279  total_loss: 39.19  m1_loss_ce: 0.3949  m1_loss_mask: 0.1455  m1_loss_dice: 1.049  m1_loss_ce_0: 0.4749  m1_loss_mask_0: 0.1777  m1_loss_dice_0: 1.275  m1_loss_ce_1: 0.5422  m1_loss_mask_1: 0.1622  m1_loss_dice_1: 1.195  m1_loss_ce_2: 0.4876  m1_loss_mask_2: 0.1536  m1_loss_dice_2: 1.142  m1_loss_ce_3: 0.427  m1_loss_mask_3: 0.1542  m1_loss_dice_3: 1.079  m1_loss_ce_4: 0.39  m1_loss_mask_4: 0.1513  m1_loss_dice_4: 1.096  m1_loss_ce_5: 0.3837  m1_loss_mask_5: 0.1482  m1_loss_dice_5: 1.088  m1_loss_ce_6: 0.3743  m1_loss_mask_6: 0.1494  m1_loss_dice_6: 1.086  m1_loss_ce_7: 0.3603  m1_loss_mask_7: 0.1483  m1_loss_dice_7: 1.069  m1_loss_ce_8: 0.3816  m1_loss_mask_8: 0.1477  m1_loss_dice_8: 1.057  m2_loss_ce: 0.4569  m2_loss_mask: 0.155  m2_loss_dice: 1.093  m2_loss_ce_0: 0.5268  m2_loss_mask_0: 0.1744  m2_loss_dice_0: 1.314  m2_loss_ce_1: 0.5923  m2_loss_mask_1: 0.164  m2_loss_dice_1: 1.238  m2_loss_ce_2: 0.5263  m2_loss_mask_2: 0.1584  m2_loss_dice_2: 1.193  m2_loss_ce_3: 0.4773  m2_loss_mask_3: 0.1587  m2_loss_dice_3: 1.151  m2_loss_ce_4: 0.4678  m2_loss_mask_4: 0.1571  m2_loss_dice_4: 1.122  m2_loss_ce_5: 0.4814  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.109  m2_loss_ce_6: 0.4056  m2_loss_mask_6: 0.1593  m2_loss_dice_6: 1.146  m2_loss_ce_7: 0.4029  m2_loss_mask_7: 0.1561  m2_loss_dice_7: 1.124  m2_loss_ce_8: 0.4032  m2_loss_mask_8: 0.1545  m2_loss_dice_8: 1.097  com_loss_ce: 1.722  com_loss_mask: 0.6927  com_loss_dice: 0.9708    time: 1.7092  last_time: 1.7081  data_time: 0.0465  last_data_time: 0.0306   lr: 0.0001  max_mem: 37589M
[09/08 21:19:11] d2.utils.events INFO:  eta: 0:19:55  iter: 1299  total_loss: 38.99  m1_loss_ce: 0.3632  m1_loss_mask: 0.1367  m1_loss_dice: 1.135  m1_loss_ce_0: 0.4686  m1_loss_mask_0: 0.1514  m1_loss_dice_0: 1.27  m1_loss_ce_1: 0.4879  m1_loss_mask_1: 0.1471  m1_loss_dice_1: 1.246  m1_loss_ce_2: 0.4301  m1_loss_mask_2: 0.1358  m1_loss_dice_2: 1.179  m1_loss_ce_3: 0.3844  m1_loss_mask_3: 0.1382  m1_loss_dice_3: 1.144  m1_loss_ce_4: 0.3731  m1_loss_mask_4: 0.1371  m1_loss_dice_4: 1.131  m1_loss_ce_5: 0.3483  m1_loss_mask_5: 0.1357  m1_loss_dice_5: 1.155  m1_loss_ce_6: 0.3364  m1_loss_mask_6: 0.1358  m1_loss_dice_6: 1.124  m1_loss_ce_7: 0.3506  m1_loss_mask_7: 0.1382  m1_loss_dice_7: 1.12  m1_loss_ce_8: 0.3322  m1_loss_mask_8: 0.1366  m1_loss_dice_8: 1.117  m2_loss_ce: 0.3911  m2_loss_mask: 0.1494  m2_loss_dice: 1.139  m2_loss_ce_0: 0.5385  m2_loss_mask_0: 0.1642  m2_loss_dice_0: 1.307  m2_loss_ce_1: 0.5942  m2_loss_mask_1: 0.1559  m2_loss_dice_1: 1.291  m2_loss_ce_2: 0.513  m2_loss_mask_2: 0.1521  m2_loss_dice_2: 1.255  m2_loss_ce_3: 0.449  m2_loss_mask_3: 0.1511  m2_loss_dice_3: 1.161  m2_loss_ce_4: 0.4226  m2_loss_mask_4: 0.1497  m2_loss_dice_4: 1.186  m2_loss_ce_5: 0.4286  m2_loss_mask_5: 0.1486  m2_loss_dice_5: 1.166  m2_loss_ce_6: 0.4263  m2_loss_mask_6: 0.1499  m2_loss_dice_6: 1.139  m2_loss_ce_7: 0.4291  m2_loss_mask_7: 0.1514  m2_loss_dice_7: 1.142  m2_loss_ce_8: 0.3996  m2_loss_mask_8: 0.1516  m2_loss_dice_8: 1.131  com_loss_ce: 1.709  com_loss_mask: 0.6926  com_loss_dice: 0.9743    time: 1.7093  last_time: 1.7220  data_time: 0.0525  last_data_time: 0.0475   lr: 0.0001  max_mem: 37589M
[09/08 21:19:45] d2.utils.events INFO:  eta: 0:19:21  iter: 1319  total_loss: 37.54  m1_loss_ce: 0.3851  m1_loss_mask: 0.1521  m1_loss_dice: 1.096  m1_loss_ce_0: 0.4663  m1_loss_mask_0: 0.171  m1_loss_dice_0: 1.175  m1_loss_ce_1: 0.4971  m1_loss_mask_1: 0.1583  m1_loss_dice_1: 1.12  m1_loss_ce_2: 0.448  m1_loss_mask_2: 0.1547  m1_loss_dice_2: 1.078  m1_loss_ce_3: 0.4004  m1_loss_mask_3: 0.1559  m1_loss_dice_3: 1.056  m1_loss_ce_4: 0.3731  m1_loss_mask_4: 0.1529  m1_loss_dice_4: 1.096  m1_loss_ce_5: 0.3795  m1_loss_mask_5: 0.1526  m1_loss_dice_5: 1.069  m1_loss_ce_6: 0.3703  m1_loss_mask_6: 0.1543  m1_loss_dice_6: 1.049  m1_loss_ce_7: 0.3679  m1_loss_mask_7: 0.1515  m1_loss_dice_7: 1.088  m1_loss_ce_8: 0.3576  m1_loss_mask_8: 0.1508  m1_loss_dice_8: 1.042  m2_loss_ce: 0.4289  m2_loss_mask: 0.1567  m2_loss_dice: 1.092  m2_loss_ce_0: 0.5062  m2_loss_mask_0: 0.1729  m2_loss_dice_0: 1.251  m2_loss_ce_1: 0.5274  m2_loss_mask_1: 0.1658  m2_loss_dice_1: 1.16  m2_loss_ce_2: 0.4868  m2_loss_mask_2: 0.1635  m2_loss_dice_2: 1.113  m2_loss_ce_3: 0.4438  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.136  m2_loss_ce_4: 0.4575  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.115  m2_loss_ce_5: 0.4119  m2_loss_mask_5: 0.1574  m2_loss_dice_5: 1.098  m2_loss_ce_6: 0.4116  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.067  m2_loss_ce_7: 0.4054  m2_loss_mask_7: 0.1583  m2_loss_dice_7: 1.096  m2_loss_ce_8: 0.3974  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.085  com_loss_ce: 1.698  com_loss_mask: 0.6926  com_loss_dice: 0.9705    time: 1.7091  last_time: 1.6716  data_time: 0.0487  last_data_time: 0.0615   lr: 0.0001  max_mem: 37589M
[09/08 21:20:20] d2.utils.events INFO:  eta: 0:18:47  iter: 1339  total_loss: 39.57  m1_loss_ce: 0.4321  m1_loss_mask: 0.1424  m1_loss_dice: 1.143  m1_loss_ce_0: 0.4687  m1_loss_mask_0: 0.1652  m1_loss_dice_0: 1.341  m1_loss_ce_1: 0.5418  m1_loss_mask_1: 0.1522  m1_loss_dice_1: 1.248  m1_loss_ce_2: 0.4462  m1_loss_mask_2: 0.1477  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.4227  m1_loss_mask_3: 0.1464  m1_loss_dice_3: 1.165  m1_loss_ce_4: 0.3876  m1_loss_mask_4: 0.1456  m1_loss_dice_4: 1.16  m1_loss_ce_5: 0.41  m1_loss_mask_5: 0.1442  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.3725  m1_loss_mask_6: 0.1452  m1_loss_dice_6: 1.144  m1_loss_ce_7: 0.3639  m1_loss_mask_7: 0.1417  m1_loss_dice_7: 1.138  m1_loss_ce_8: 0.3938  m1_loss_mask_8: 0.1433  m1_loss_dice_8: 1.16  m2_loss_ce: 0.4125  m2_loss_mask: 0.1582  m2_loss_dice: 1.191  m2_loss_ce_0: 0.5409  m2_loss_mask_0: 0.1796  m2_loss_dice_0: 1.374  m2_loss_ce_1: 0.5773  m2_loss_mask_1: 0.1684  m2_loss_dice_1: 1.289  m2_loss_ce_2: 0.4979  m2_loss_mask_2: 0.1627  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.4828  m2_loss_mask_3: 0.1615  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.4319  m2_loss_mask_4: 0.1571  m2_loss_dice_4: 1.193  m2_loss_ce_5: 0.422  m2_loss_mask_5: 0.1562  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.4139  m2_loss_mask_6: 0.1583  m2_loss_dice_6: 1.145  m2_loss_ce_7: 0.4041  m2_loss_mask_7: 0.1576  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.4267  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.19  com_loss_ce: 1.718  com_loss_mask: 0.6927  com_loss_dice: 0.9739    time: 1.7093  last_time: 1.7380  data_time: 0.0549  last_data_time: 0.0582   lr: 0.0001  max_mem: 37589M
[09/08 21:20:54] d2.utils.events INFO:  eta: 0:18:13  iter: 1359  total_loss: 37.44  m1_loss_ce: 0.3617  m1_loss_mask: 0.1489  m1_loss_dice: 1.049  m1_loss_ce_0: 0.4557  m1_loss_mask_0: 0.1736  m1_loss_dice_0: 1.197  m1_loss_ce_1: 0.5223  m1_loss_mask_1: 0.1623  m1_loss_dice_1: 1.162  m1_loss_ce_2: 0.4534  m1_loss_mask_2: 0.1572  m1_loss_dice_2: 1.115  m1_loss_ce_3: 0.3953  m1_loss_mask_3: 0.1523  m1_loss_dice_3: 1.062  m1_loss_ce_4: 0.3729  m1_loss_mask_4: 0.1556  m1_loss_dice_4: 1.084  m1_loss_ce_5: 0.3429  m1_loss_mask_5: 0.152  m1_loss_dice_5: 1.075  m1_loss_ce_6: 0.3682  m1_loss_mask_6: 0.1538  m1_loss_dice_6: 1.063  m1_loss_ce_7: 0.3689  m1_loss_mask_7: 0.1513  m1_loss_dice_7: 1.04  m1_loss_ce_8: 0.3484  m1_loss_mask_8: 0.1503  m1_loss_dice_8: 1.067  m2_loss_ce: 0.388  m2_loss_mask: 0.1569  m2_loss_dice: 1.083  m2_loss_ce_0: 0.4941  m2_loss_mask_0: 0.1806  m2_loss_dice_0: 1.238  m2_loss_ce_1: 0.5463  m2_loss_mask_1: 0.1661  m2_loss_dice_1: 1.189  m2_loss_ce_2: 0.4517  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.155  m2_loss_ce_3: 0.416  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.124  m2_loss_ce_4: 0.4034  m2_loss_mask_4: 0.1599  m2_loss_dice_4: 1.124  m2_loss_ce_5: 0.4133  m2_loss_mask_5: 0.155  m2_loss_dice_5: 1.095  m2_loss_ce_6: 0.3758  m2_loss_mask_6: 0.1568  m2_loss_dice_6: 1.074  m2_loss_ce_7: 0.3691  m2_loss_mask_7: 0.1561  m2_loss_dice_7: 1.07  m2_loss_ce_8: 0.3815  m2_loss_mask_8: 0.1559  m2_loss_dice_8: 1.059  com_loss_ce: 1.72  com_loss_mask: 0.6927  com_loss_dice: 0.9726    time: 1.7093  last_time: 1.7195  data_time: 0.0509  last_data_time: 0.0403   lr: 0.0001  max_mem: 37589M
[09/08 21:21:29] d2.utils.events INFO:  eta: 0:17:39  iter: 1379  total_loss: 39.46  m1_loss_ce: 0.3547  m1_loss_mask: 0.1373  m1_loss_dice: 1.153  m1_loss_ce_0: 0.4682  m1_loss_mask_0: 0.161  m1_loss_dice_0: 1.326  m1_loss_ce_1: 0.515  m1_loss_mask_1: 0.1442  m1_loss_dice_1: 1.244  m1_loss_ce_2: 0.4506  m1_loss_mask_2: 0.1431  m1_loss_dice_2: 1.214  m1_loss_ce_3: 0.3845  m1_loss_mask_3: 0.1396  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.3642  m1_loss_mask_4: 0.1417  m1_loss_dice_4: 1.168  m1_loss_ce_5: 0.3479  m1_loss_mask_5: 0.1377  m1_loss_dice_5: 1.183  m1_loss_ce_6: 0.3431  m1_loss_mask_6: 0.1382  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.3547  m1_loss_mask_7: 0.1386  m1_loss_dice_7: 1.14  m1_loss_ce_8: 0.3588  m1_loss_mask_8: 0.1401  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4082  m2_loss_mask: 0.1448  m2_loss_dice: 1.15  m2_loss_ce_0: 0.5135  m2_loss_mask_0: 0.1617  m2_loss_dice_0: 1.361  m2_loss_ce_1: 0.5671  m2_loss_mask_1: 0.1517  m2_loss_dice_1: 1.239  m2_loss_ce_2: 0.4885  m2_loss_mask_2: 0.1507  m2_loss_dice_2: 1.232  m2_loss_ce_3: 0.4528  m2_loss_mask_3: 0.1486  m2_loss_dice_3: 1.158  m2_loss_ce_4: 0.413  m2_loss_mask_4: 0.1488  m2_loss_dice_4: 1.175  m2_loss_ce_5: 0.4113  m2_loss_mask_5: 0.1449  m2_loss_dice_5: 1.189  m2_loss_ce_6: 0.3831  m2_loss_mask_6: 0.1445  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.4126  m2_loss_mask_7: 0.146  m2_loss_dice_7: 1.152  m2_loss_ce_8: 0.3863  m2_loss_mask_8: 0.145  m2_loss_dice_8: 1.164  com_loss_ce: 1.721  com_loss_mask: 0.6927  com_loss_dice: 0.9743    time: 1.7095  last_time: 1.7381  data_time: 0.0527  last_data_time: 0.0705   lr: 0.0001  max_mem: 37589M
[09/08 21:22:04] d2.utils.events INFO:  eta: 0:17:05  iter: 1399  total_loss: 38.76  m1_loss_ce: 0.4048  m1_loss_mask: 0.1348  m1_loss_dice: 1.108  m1_loss_ce_0: 0.497  m1_loss_mask_0: 0.1537  m1_loss_dice_0: 1.339  m1_loss_ce_1: 0.5763  m1_loss_mask_1: 0.1452  m1_loss_dice_1: 1.208  m1_loss_ce_2: 0.5035  m1_loss_mask_2: 0.1382  m1_loss_dice_2: 1.161  m1_loss_ce_3: 0.4341  m1_loss_mask_3: 0.1394  m1_loss_dice_3: 1.134  m1_loss_ce_4: 0.3687  m1_loss_mask_4: 0.1376  m1_loss_dice_4: 1.134  m1_loss_ce_5: 0.3856  m1_loss_mask_5: 0.1363  m1_loss_dice_5: 1.127  m1_loss_ce_6: 0.4241  m1_loss_mask_6: 0.1372  m1_loss_dice_6: 1.119  m1_loss_ce_7: 0.4116  m1_loss_mask_7: 0.1366  m1_loss_dice_7: 1.114  m1_loss_ce_8: 0.4029  m1_loss_mask_8: 0.1337  m1_loss_dice_8: 1.123  m2_loss_ce: 0.3928  m2_loss_mask: 0.141  m2_loss_dice: 1.144  m2_loss_ce_0: 0.497  m2_loss_mask_0: 0.1601  m2_loss_dice_0: 1.329  m2_loss_ce_1: 0.5527  m2_loss_mask_1: 0.1543  m2_loss_dice_1: 1.224  m2_loss_ce_2: 0.5248  m2_loss_mask_2: 0.1462  m2_loss_dice_2: 1.214  m2_loss_ce_3: 0.4678  m2_loss_mask_3: 0.1429  m2_loss_dice_3: 1.121  m2_loss_ce_4: 0.3981  m2_loss_mask_4: 0.1407  m2_loss_dice_4: 1.136  m2_loss_ce_5: 0.4115  m2_loss_mask_5: 0.1407  m2_loss_dice_5: 1.122  m2_loss_ce_6: 0.4338  m2_loss_mask_6: 0.1401  m2_loss_dice_6: 1.112  m2_loss_ce_7: 0.409  m2_loss_mask_7: 0.1416  m2_loss_dice_7: 1.151  m2_loss_ce_8: 0.3964  m2_loss_mask_8: 0.1389  m2_loss_dice_8: 1.121  com_loss_ce: 1.732  com_loss_mask: 0.6926  com_loss_dice: 0.9732    time: 1.7098  last_time: 1.7020  data_time: 0.0525  last_data_time: 0.0436   lr: 0.0001  max_mem: 37589M
[09/08 21:22:38] d2.utils.events INFO:  eta: 0:16:31  iter: 1419  total_loss: 36.47  m1_loss_ce: 0.3549  m1_loss_mask: 0.1486  m1_loss_dice: 1.037  m1_loss_ce_0: 0.4506  m1_loss_mask_0: 0.1656  m1_loss_dice_0: 1.183  m1_loss_ce_1: 0.5126  m1_loss_mask_1: 0.1587  m1_loss_dice_1: 1.176  m1_loss_ce_2: 0.431  m1_loss_mask_2: 0.1488  m1_loss_dice_2: 1.123  m1_loss_ce_3: 0.3812  m1_loss_mask_3: 0.1487  m1_loss_dice_3: 1.049  m1_loss_ce_4: 0.3481  m1_loss_mask_4: 0.1467  m1_loss_dice_4: 1.083  m1_loss_ce_5: 0.3415  m1_loss_mask_5: 0.1466  m1_loss_dice_5: 1.053  m1_loss_ce_6: 0.3209  m1_loss_mask_6: 0.1518  m1_loss_dice_6: 1.037  m1_loss_ce_7: 0.3132  m1_loss_mask_7: 0.1487  m1_loss_dice_7: 1.021  m1_loss_ce_8: 0.3378  m1_loss_mask_8: 0.1505  m1_loss_dice_8: 1.058  m2_loss_ce: 0.3749  m2_loss_mask: 0.149  m2_loss_dice: 1.038  m2_loss_ce_0: 0.4755  m2_loss_mask_0: 0.177  m2_loss_dice_0: 1.252  m2_loss_ce_1: 0.543  m2_loss_mask_1: 0.1635  m2_loss_dice_1: 1.19  m2_loss_ce_2: 0.4513  m2_loss_mask_2: 0.1582  m2_loss_dice_2: 1.167  m2_loss_ce_3: 0.4294  m2_loss_mask_3: 0.1576  m2_loss_dice_3: 1.093  m2_loss_ce_4: 0.372  m2_loss_mask_4: 0.1526  m2_loss_dice_4: 1.035  m2_loss_ce_5: 0.362  m2_loss_mask_5: 0.1519  m2_loss_dice_5: 1.107  m2_loss_ce_6: 0.3713  m2_loss_mask_6: 0.1495  m2_loss_dice_6: 1.07  m2_loss_ce_7: 0.3648  m2_loss_mask_7: 0.1509  m2_loss_dice_7: 1.08  m2_loss_ce_8: 0.3625  m2_loss_mask_8: 0.1522  m2_loss_dice_8: 1.061  com_loss_ce: 1.694  com_loss_mask: 0.6927  com_loss_dice: 0.9707    time: 1.7099  last_time: 1.7075  data_time: 0.0560  last_data_time: 0.0481   lr: 0.0001  max_mem: 37589M
[09/08 21:23:13] d2.utils.events INFO:  eta: 0:15:57  iter: 1439  total_loss: 39.14  m1_loss_ce: 0.4298  m1_loss_mask: 0.1343  m1_loss_dice: 1.106  m1_loss_ce_0: 0.4854  m1_loss_mask_0: 0.1562  m1_loss_dice_0: 1.292  m1_loss_ce_1: 0.5449  m1_loss_mask_1: 0.1453  m1_loss_dice_1: 1.197  m1_loss_ce_2: 0.5004  m1_loss_mask_2: 0.1421  m1_loss_dice_2: 1.142  m1_loss_ce_3: 0.4116  m1_loss_mask_3: 0.1372  m1_loss_dice_3: 1.112  m1_loss_ce_4: 0.406  m1_loss_mask_4: 0.1367  m1_loss_dice_4: 1.13  m1_loss_ce_5: 0.3793  m1_loss_mask_5: 0.1365  m1_loss_dice_5: 1.1  m1_loss_ce_6: 0.4066  m1_loss_mask_6: 0.137  m1_loss_dice_6: 1.104  m1_loss_ce_7: 0.3755  m1_loss_mask_7: 0.1375  m1_loss_dice_7: 1.102  m1_loss_ce_8: 0.3847  m1_loss_mask_8: 0.1348  m1_loss_dice_8: 1.087  m2_loss_ce: 0.405  m2_loss_mask: 0.1414  m2_loss_dice: 1.121  m2_loss_ce_0: 0.5251  m2_loss_mask_0: 0.1576  m2_loss_dice_0: 1.33  m2_loss_ce_1: 0.5898  m2_loss_mask_1: 0.1502  m2_loss_dice_1: 1.272  m2_loss_ce_2: 0.5032  m2_loss_mask_2: 0.1443  m2_loss_dice_2: 1.232  m2_loss_ce_3: 0.5091  m2_loss_mask_3: 0.1442  m2_loss_dice_3: 1.187  m2_loss_ce_4: 0.4493  m2_loss_mask_4: 0.1412  m2_loss_dice_4: 1.143  m2_loss_ce_5: 0.4295  m2_loss_mask_5: 0.1402  m2_loss_dice_5: 1.148  m2_loss_ce_6: 0.4261  m2_loss_mask_6: 0.1421  m2_loss_dice_6: 1.133  m2_loss_ce_7: 0.4372  m2_loss_mask_7: 0.1416  m2_loss_dice_7: 1.125  m2_loss_ce_8: 0.4225  m2_loss_mask_8: 0.1421  m2_loss_dice_8: 1.139  com_loss_ce: 1.739  com_loss_mask: 0.6926  com_loss_dice: 0.9741    time: 1.7099  last_time: 1.7637  data_time: 0.0473  last_data_time: 0.0431   lr: 0.0001  max_mem: 37589M
[09/08 21:23:47] d2.utils.events INFO:  eta: 0:15:23  iter: 1459  total_loss: 40.35  m1_loss_ce: 0.4303  m1_loss_mask: 0.1372  m1_loss_dice: 1.163  m1_loss_ce_0: 0.4813  m1_loss_mask_0: 0.1552  m1_loss_dice_0: 1.333  m1_loss_ce_1: 0.5621  m1_loss_mask_1: 0.153  m1_loss_dice_1: 1.271  m1_loss_ce_2: 0.4959  m1_loss_mask_2: 0.144  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4382  m1_loss_mask_3: 0.1448  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.4475  m1_loss_mask_4: 0.1433  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.4064  m1_loss_mask_5: 0.1377  m1_loss_dice_5: 1.178  m1_loss_ce_6: 0.3823  m1_loss_mask_6: 0.1378  m1_loss_dice_6: 1.153  m1_loss_ce_7: 0.4109  m1_loss_mask_7: 0.1377  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.3793  m1_loss_mask_8: 0.1367  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4329  m2_loss_mask: 0.1423  m2_loss_dice: 1.204  m2_loss_ce_0: 0.5516  m2_loss_mask_0: 0.1613  m2_loss_dice_0: 1.385  m2_loss_ce_1: 0.5941  m2_loss_mask_1: 0.1519  m2_loss_dice_1: 1.314  m2_loss_ce_2: 0.5557  m2_loss_mask_2: 0.1455  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.491  m2_loss_mask_3: 0.1458  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.4751  m2_loss_mask_4: 0.1446  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.4576  m2_loss_mask_5: 0.1441  m2_loss_dice_5: 1.184  m2_loss_ce_6: 0.4587  m2_loss_mask_6: 0.145  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.4417  m2_loss_mask_7: 0.1438  m2_loss_dice_7: 1.162  m2_loss_ce_8: 0.4668  m2_loss_mask_8: 0.1457  m2_loss_dice_8: 1.165  com_loss_ce: 1.723  com_loss_mask: 0.6926  com_loss_dice: 0.9742    time: 1.7099  last_time: 1.6585  data_time: 0.0547  last_data_time: 0.0546   lr: 0.0001  max_mem: 37589M
[09/08 21:24:21] d2.utils.events INFO:  eta: 0:14:49  iter: 1479  total_loss: 38.46  m1_loss_ce: 0.3511  m1_loss_mask: 0.1391  m1_loss_dice: 1.117  m1_loss_ce_0: 0.4754  m1_loss_mask_0: 0.1595  m1_loss_dice_0: 1.287  m1_loss_ce_1: 0.5393  m1_loss_mask_1: 0.1508  m1_loss_dice_1: 1.203  m1_loss_ce_2: 0.454  m1_loss_mask_2: 0.1423  m1_loss_dice_2: 1.163  m1_loss_ce_3: 0.3808  m1_loss_mask_3: 0.1433  m1_loss_dice_3: 1.126  m1_loss_ce_4: 0.3714  m1_loss_mask_4: 0.1389  m1_loss_dice_4: 1.134  m1_loss_ce_5: 0.356  m1_loss_mask_5: 0.1379  m1_loss_dice_5: 1.151  m1_loss_ce_6: 0.3529  m1_loss_mask_6: 0.1396  m1_loss_dice_6: 1.104  m1_loss_ce_7: 0.3714  m1_loss_mask_7: 0.1399  m1_loss_dice_7: 1.128  m1_loss_ce_8: 0.3522  m1_loss_mask_8: 0.1371  m1_loss_dice_8: 1.085  m2_loss_ce: 0.4085  m2_loss_mask: 0.1492  m2_loss_dice: 1.133  m2_loss_ce_0: 0.5088  m2_loss_mask_0: 0.1677  m2_loss_dice_0: 1.305  m2_loss_ce_1: 0.5537  m2_loss_mask_1: 0.1554  m2_loss_dice_1: 1.235  m2_loss_ce_2: 0.5214  m2_loss_mask_2: 0.1512  m2_loss_dice_2: 1.236  m2_loss_ce_3: 0.4694  m2_loss_mask_3: 0.1504  m2_loss_dice_3: 1.188  m2_loss_ce_4: 0.4409  m2_loss_mask_4: 0.1506  m2_loss_dice_4: 1.162  m2_loss_ce_5: 0.4352  m2_loss_mask_5: 0.1482  m2_loss_dice_5: 1.167  m2_loss_ce_6: 0.4149  m2_loss_mask_6: 0.1524  m2_loss_dice_6: 1.148  m2_loss_ce_7: 0.4109  m2_loss_mask_7: 0.1493  m2_loss_dice_7: 1.16  m2_loss_ce_8: 0.4381  m2_loss_mask_8: 0.1509  m2_loss_dice_8: 1.156  com_loss_ce: 1.714  com_loss_mask: 0.6927  com_loss_dice: 0.9737    time: 1.7100  last_time: 1.6584  data_time: 0.0592  last_data_time: 0.0435   lr: 0.0001  max_mem: 37589M
[09/08 21:24:55] d2.utils.events INFO:  eta: 0:14:14  iter: 1499  total_loss: 38.77  m1_loss_ce: 0.3864  m1_loss_mask: 0.1433  m1_loss_dice: 1.102  m1_loss_ce_0: 0.452  m1_loss_mask_0: 0.1621  m1_loss_dice_0: 1.303  m1_loss_ce_1: 0.5411  m1_loss_mask_1: 0.1506  m1_loss_dice_1: 1.198  m1_loss_ce_2: 0.4926  m1_loss_mask_2: 0.1466  m1_loss_dice_2: 1.174  m1_loss_ce_3: 0.441  m1_loss_mask_3: 0.1463  m1_loss_dice_3: 1.094  m1_loss_ce_4: 0.4087  m1_loss_mask_4: 0.1464  m1_loss_dice_4: 1.139  m1_loss_ce_5: 0.3969  m1_loss_mask_5: 0.1463  m1_loss_dice_5: 1.115  m1_loss_ce_6: 0.3843  m1_loss_mask_6: 0.1446  m1_loss_dice_6: 1.079  m1_loss_ce_7: 0.3669  m1_loss_mask_7: 0.1449  m1_loss_dice_7: 1.086  m1_loss_ce_8: 0.3888  m1_loss_mask_8: 0.1449  m1_loss_dice_8: 1.113  m2_loss_ce: 0.4288  m2_loss_mask: 0.1535  m2_loss_dice: 1.104  m2_loss_ce_0: 0.537  m2_loss_mask_0: 0.1762  m2_loss_dice_0: 1.341  m2_loss_ce_1: 0.5769  m2_loss_mask_1: 0.1638  m2_loss_dice_1: 1.246  m2_loss_ce_2: 0.4988  m2_loss_mask_2: 0.1576  m2_loss_dice_2: 1.198  m2_loss_ce_3: 0.4912  m2_loss_mask_3: 0.1557  m2_loss_dice_3: 1.169  m2_loss_ce_4: 0.4571  m2_loss_mask_4: 0.1557  m2_loss_dice_4: 1.15  m2_loss_ce_5: 0.4397  m2_loss_mask_5: 0.1562  m2_loss_dice_5: 1.162  m2_loss_ce_6: 0.3959  m2_loss_mask_6: 0.1551  m2_loss_dice_6: 1.125  m2_loss_ce_7: 0.4348  m2_loss_mask_7: 0.155  m2_loss_dice_7: 1.119  m2_loss_ce_8: 0.4138  m2_loss_mask_8: 0.1562  m2_loss_dice_8: 1.127  com_loss_ce: 1.713  com_loss_mask: 0.6926  com_loss_dice: 0.9726    time: 1.7099  last_time: 1.6925  data_time: 0.0532  last_data_time: 0.0655   lr: 0.0001  max_mem: 37589M
[09/08 21:25:30] d2.utils.events INFO:  eta: 0:13:40  iter: 1519  total_loss: 37.86  m1_loss_ce: 0.366  m1_loss_mask: 0.1348  m1_loss_dice: 1.074  m1_loss_ce_0: 0.4633  m1_loss_mask_0: 0.1576  m1_loss_dice_0: 1.257  m1_loss_ce_1: 0.5328  m1_loss_mask_1: 0.146  m1_loss_dice_1: 1.209  m1_loss_ce_2: 0.4471  m1_loss_mask_2: 0.1423  m1_loss_dice_2: 1.19  m1_loss_ce_3: 0.4087  m1_loss_mask_3: 0.1357  m1_loss_dice_3: 1.139  m1_loss_ce_4: 0.3666  m1_loss_mask_4: 0.1412  m1_loss_dice_4: 1.11  m1_loss_ce_5: 0.3541  m1_loss_mask_5: 0.139  m1_loss_dice_5: 1.097  m1_loss_ce_6: 0.3744  m1_loss_mask_6: 0.1379  m1_loss_dice_6: 1.075  m1_loss_ce_7: 0.3358  m1_loss_mask_7: 0.1355  m1_loss_dice_7: 1.074  m1_loss_ce_8: 0.3673  m1_loss_mask_8: 0.1357  m1_loss_dice_8: 1.098  m2_loss_ce: 0.431  m2_loss_mask: 0.148  m2_loss_dice: 1.089  m2_loss_ce_0: 0.5383  m2_loss_mask_0: 0.1672  m2_loss_dice_0: 1.289  m2_loss_ce_1: 0.534  m2_loss_mask_1: 0.1549  m2_loss_dice_1: 1.244  m2_loss_ce_2: 0.5037  m2_loss_mask_2: 0.1486  m2_loss_dice_2: 1.222  m2_loss_ce_3: 0.4644  m2_loss_mask_3: 0.1513  m2_loss_dice_3: 1.126  m2_loss_ce_4: 0.4094  m2_loss_mask_4: 0.1492  m2_loss_dice_4: 1.136  m2_loss_ce_5: 0.4078  m2_loss_mask_5: 0.1466  m2_loss_dice_5: 1.123  m2_loss_ce_6: 0.4123  m2_loss_mask_6: 0.1479  m2_loss_dice_6: 1.116  m2_loss_ce_7: 0.4078  m2_loss_mask_7: 0.1483  m2_loss_dice_7: 1.132  m2_loss_ce_8: 0.406  m2_loss_mask_8: 0.1474  m2_loss_dice_8: 1.124  com_loss_ce: 1.725  com_loss_mask: 0.6926  com_loss_dice: 0.9723    time: 1.7100  last_time: 1.7281  data_time: 0.0515  last_data_time: 0.1117   lr: 0.0001  max_mem: 37589M
[09/08 21:26:05] d2.utils.events INFO:  eta: 0:13:06  iter: 1539  total_loss: 37.1  m1_loss_ce: 0.3565  m1_loss_mask: 0.1435  m1_loss_dice: 1.07  m1_loss_ce_0: 0.4874  m1_loss_mask_0: 0.1705  m1_loss_dice_0: 1.247  m1_loss_ce_1: 0.5124  m1_loss_mask_1: 0.1519  m1_loss_dice_1: 1.197  m1_loss_ce_2: 0.4763  m1_loss_mask_2: 0.1452  m1_loss_dice_2: 1.128  m1_loss_ce_3: 0.4058  m1_loss_mask_3: 0.1461  m1_loss_dice_3: 1.085  m1_loss_ce_4: 0.3855  m1_loss_mask_4: 0.14  m1_loss_dice_4: 1.065  m1_loss_ce_5: 0.3524  m1_loss_mask_5: 0.1435  m1_loss_dice_5: 1.068  m1_loss_ce_6: 0.3365  m1_loss_mask_6: 0.1416  m1_loss_dice_6: 1.055  m1_loss_ce_7: 0.3382  m1_loss_mask_7: 0.1415  m1_loss_dice_7: 1.039  m1_loss_ce_8: 0.3377  m1_loss_mask_8: 0.1428  m1_loss_dice_8: 1.072  m2_loss_ce: 0.3915  m2_loss_mask: 0.154  m2_loss_dice: 1.104  m2_loss_ce_0: 0.5243  m2_loss_mask_0: 0.173  m2_loss_dice_0: 1.26  m2_loss_ce_1: 0.5355  m2_loss_mask_1: 0.1641  m2_loss_dice_1: 1.206  m2_loss_ce_2: 0.5098  m2_loss_mask_2: 0.1562  m2_loss_dice_2: 1.181  m2_loss_ce_3: 0.4389  m2_loss_mask_3: 0.1553  m2_loss_dice_3: 1.118  m2_loss_ce_4: 0.4194  m2_loss_mask_4: 0.1523  m2_loss_dice_4: 1.123  m2_loss_ce_5: 0.3902  m2_loss_mask_5: 0.1515  m2_loss_dice_5: 1.125  m2_loss_ce_6: 0.3983  m2_loss_mask_6: 0.1505  m2_loss_dice_6: 1.104  m2_loss_ce_7: 0.3988  m2_loss_mask_7: 0.1492  m2_loss_dice_7: 1.103  m2_loss_ce_8: 0.4002  m2_loss_mask_8: 0.1511  m2_loss_dice_8: 1.062  com_loss_ce: 1.71  com_loss_mask: 0.6926  com_loss_dice: 0.972    time: 1.7099  last_time: 1.7121  data_time: 0.0527  last_data_time: 0.0492   lr: 0.0001  max_mem: 37589M
[09/08 21:26:39] d2.utils.events INFO:  eta: 0:12:31  iter: 1559  total_loss: 38.58  m1_loss_ce: 0.3359  m1_loss_mask: 0.1326  m1_loss_dice: 1.075  m1_loss_ce_0: 0.4872  m1_loss_mask_0: 0.1604  m1_loss_dice_0: 1.293  m1_loss_ce_1: 0.5235  m1_loss_mask_1: 0.1496  m1_loss_dice_1: 1.226  m1_loss_ce_2: 0.4564  m1_loss_mask_2: 0.1407  m1_loss_dice_2: 1.202  m1_loss_ce_3: 0.401  m1_loss_mask_3: 0.1391  m1_loss_dice_3: 1.102  m1_loss_ce_4: 0.3708  m1_loss_mask_4: 0.1378  m1_loss_dice_4: 1.131  m1_loss_ce_5: 0.3497  m1_loss_mask_5: 0.1372  m1_loss_dice_5: 1.155  m1_loss_ce_6: 0.3459  m1_loss_mask_6: 0.137  m1_loss_dice_6: 1.127  m1_loss_ce_7: 0.3793  m1_loss_mask_7: 0.1337  m1_loss_dice_7: 1.057  m1_loss_ce_8: 0.3492  m1_loss_mask_8: 0.1346  m1_loss_dice_8: 1.106  m2_loss_ce: 0.4216  m2_loss_mask: 0.146  m2_loss_dice: 1.102  m2_loss_ce_0: 0.5301  m2_loss_mask_0: 0.1707  m2_loss_dice_0: 1.364  m2_loss_ce_1: 0.5632  m2_loss_mask_1: 0.155  m2_loss_dice_1: 1.271  m2_loss_ce_2: 0.5181  m2_loss_mask_2: 0.151  m2_loss_dice_2: 1.216  m2_loss_ce_3: 0.4884  m2_loss_mask_3: 0.1513  m2_loss_dice_3: 1.195  m2_loss_ce_4: 0.4634  m2_loss_mask_4: 0.1493  m2_loss_dice_4: 1.131  m2_loss_ce_5: 0.4429  m2_loss_mask_5: 0.1469  m2_loss_dice_5: 1.151  m2_loss_ce_6: 0.4153  m2_loss_mask_6: 0.1496  m2_loss_dice_6: 1.148  m2_loss_ce_7: 0.433  m2_loss_mask_7: 0.1466  m2_loss_dice_7: 1.137  m2_loss_ce_8: 0.3946  m2_loss_mask_8: 0.1496  m2_loss_dice_8: 1.107  com_loss_ce: 1.745  com_loss_mask: 0.6926  com_loss_dice: 0.9761    time: 1.7102  last_time: 1.7459  data_time: 0.0525  last_data_time: 0.0555   lr: 0.0001  max_mem: 37589M
[09/08 21:27:14] d2.utils.events INFO:  eta: 0:11:57  iter: 1579  total_loss: 38.2  m1_loss_ce: 0.3724  m1_loss_mask: 0.1406  m1_loss_dice: 1.081  m1_loss_ce_0: 0.4904  m1_loss_mask_0: 0.1578  m1_loss_dice_0: 1.266  m1_loss_ce_1: 0.5351  m1_loss_mask_1: 0.1556  m1_loss_dice_1: 1.173  m1_loss_ce_2: 0.4604  m1_loss_mask_2: 0.1435  m1_loss_dice_2: 1.179  m1_loss_ce_3: 0.4156  m1_loss_mask_3: 0.1459  m1_loss_dice_3: 1.118  m1_loss_ce_4: 0.3803  m1_loss_mask_4: 0.1442  m1_loss_dice_4: 1.124  m1_loss_ce_5: 0.3573  m1_loss_mask_5: 0.1424  m1_loss_dice_5: 1.086  m1_loss_ce_6: 0.3626  m1_loss_mask_6: 0.1416  m1_loss_dice_6: 1.061  m1_loss_ce_7: 0.3759  m1_loss_mask_7: 0.1407  m1_loss_dice_7: 1.046  m1_loss_ce_8: 0.3804  m1_loss_mask_8: 0.1396  m1_loss_dice_8: 1.058  m2_loss_ce: 0.4151  m2_loss_mask: 0.1542  m2_loss_dice: 1.085  m2_loss_ce_0: 0.5234  m2_loss_mask_0: 0.1661  m2_loss_dice_0: 1.289  m2_loss_ce_1: 0.5647  m2_loss_mask_1: 0.1631  m2_loss_dice_1: 1.184  m2_loss_ce_2: 0.5195  m2_loss_mask_2: 0.1582  m2_loss_dice_2: 1.175  m2_loss_ce_3: 0.4232  m2_loss_mask_3: 0.1563  m2_loss_dice_3: 1.105  m2_loss_ce_4: 0.4219  m2_loss_mask_4: 0.1514  m2_loss_dice_4: 1.095  m2_loss_ce_5: 0.3929  m2_loss_mask_5: 0.1522  m2_loss_dice_5: 1.098  m2_loss_ce_6: 0.4162  m2_loss_mask_6: 0.1555  m2_loss_dice_6: 1.098  m2_loss_ce_7: 0.3992  m2_loss_mask_7: 0.1564  m2_loss_dice_7: 1.101  m2_loss_ce_8: 0.4005  m2_loss_mask_8: 0.1541  m2_loss_dice_8: 1.069  com_loss_ce: 1.735  com_loss_mask: 0.6927  com_loss_dice: 0.9728    time: 1.7102  last_time: 1.7106  data_time: 0.0551  last_data_time: 0.0445   lr: 0.0001  max_mem: 37589M
[09/08 21:27:48] d2.utils.events INFO:  eta: 0:11:23  iter: 1599  total_loss: 38.16  m1_loss_ce: 0.3772  m1_loss_mask: 0.1406  m1_loss_dice: 1.089  m1_loss_ce_0: 0.5119  m1_loss_mask_0: 0.1635  m1_loss_dice_0: 1.206  m1_loss_ce_1: 0.5098  m1_loss_mask_1: 0.1554  m1_loss_dice_1: 1.202  m1_loss_ce_2: 0.4595  m1_loss_mask_2: 0.1445  m1_loss_dice_2: 1.154  m1_loss_ce_3: 0.4095  m1_loss_mask_3: 0.1474  m1_loss_dice_3: 1.089  m1_loss_ce_4: 0.3786  m1_loss_mask_4: 0.1454  m1_loss_dice_4: 1.068  m1_loss_ce_5: 0.3742  m1_loss_mask_5: 0.1425  m1_loss_dice_5: 1.07  m1_loss_ce_6: 0.3822  m1_loss_mask_6: 0.1427  m1_loss_dice_6: 1.072  m1_loss_ce_7: 0.3732  m1_loss_mask_7: 0.1423  m1_loss_dice_7: 1.042  m1_loss_ce_8: 0.3909  m1_loss_mask_8: 0.1405  m1_loss_dice_8: 1.076  m2_loss_ce: 0.4284  m2_loss_mask: 0.1489  m2_loss_dice: 1.108  m2_loss_ce_0: 0.5392  m2_loss_mask_0: 0.1693  m2_loss_dice_0: 1.29  m2_loss_ce_1: 0.5598  m2_loss_mask_1: 0.1601  m2_loss_dice_1: 1.268  m2_loss_ce_2: 0.5345  m2_loss_mask_2: 0.1534  m2_loss_dice_2: 1.155  m2_loss_ce_3: 0.4671  m2_loss_mask_3: 0.1507  m2_loss_dice_3: 1.136  m2_loss_ce_4: 0.4316  m2_loss_mask_4: 0.15  m2_loss_dice_4: 1.17  m2_loss_ce_5: 0.4422  m2_loss_mask_5: 0.1471  m2_loss_dice_5: 1.119  m2_loss_ce_6: 0.4251  m2_loss_mask_6: 0.1463  m2_loss_dice_6: 1.144  m2_loss_ce_7: 0.4234  m2_loss_mask_7: 0.1464  m2_loss_dice_7: 1.097  m2_loss_ce_8: 0.4246  m2_loss_mask_8: 0.1458  m2_loss_dice_8: 1.119  com_loss_ce: 1.723  com_loss_mask: 0.6927  com_loss_dice: 0.9722    time: 1.7103  last_time: 1.7516  data_time: 0.0533  last_data_time: 0.0547   lr: 0.0001  max_mem: 37589M
[09/08 21:28:22] d2.utils.events INFO:  eta: 0:10:49  iter: 1619  total_loss: 37.88  m1_loss_ce: 0.3794  m1_loss_mask: 0.1466  m1_loss_dice: 1.113  m1_loss_ce_0: 0.4821  m1_loss_mask_0: 0.1725  m1_loss_dice_0: 1.325  m1_loss_ce_1: 0.4908  m1_loss_mask_1: 0.1612  m1_loss_dice_1: 1.221  m1_loss_ce_2: 0.4369  m1_loss_mask_2: 0.1555  m1_loss_dice_2: 1.181  m1_loss_ce_3: 0.3934  m1_loss_mask_3: 0.1508  m1_loss_dice_3: 1.12  m1_loss_ce_4: 0.3606  m1_loss_mask_4: 0.1494  m1_loss_dice_4: 1.15  m1_loss_ce_5: 0.3654  m1_loss_mask_5: 0.1461  m1_loss_dice_5: 1.133  m1_loss_ce_6: 0.3591  m1_loss_mask_6: 0.1483  m1_loss_dice_6: 1.091  m1_loss_ce_7: 0.3516  m1_loss_mask_7: 0.1478  m1_loss_dice_7: 1.096  m1_loss_ce_8: 0.3673  m1_loss_mask_8: 0.1478  m1_loss_dice_8: 1.104  m2_loss_ce: 0.3865  m2_loss_mask: 0.1633  m2_loss_dice: 1.133  m2_loss_ce_0: 0.535  m2_loss_mask_0: 0.1742  m2_loss_dice_0: 1.331  m2_loss_ce_1: 0.5448  m2_loss_mask_1: 0.1699  m2_loss_dice_1: 1.257  m2_loss_ce_2: 0.4905  m2_loss_mask_2: 0.1609  m2_loss_dice_2: 1.221  m2_loss_ce_3: 0.4362  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.142  m2_loss_ce_4: 0.4134  m2_loss_mask_4: 0.1609  m2_loss_dice_4: 1.168  m2_loss_ce_5: 0.3781  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.153  m2_loss_ce_6: 0.3721  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.159  m2_loss_ce_7: 0.385  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.125  m2_loss_ce_8: 0.3858  m2_loss_mask_8: 0.1615  m2_loss_dice_8: 1.14  com_loss_ce: 1.711  com_loss_mask: 0.6927  com_loss_dice: 0.9744    time: 1.7102  last_time: 1.7398  data_time: 0.0474  last_data_time: 0.0435   lr: 0.0001  max_mem: 37589M
[09/08 21:28:57] d2.utils.events INFO:  eta: 0:10:14  iter: 1639  total_loss: 37.37  m1_loss_ce: 0.3583  m1_loss_mask: 0.1374  m1_loss_dice: 1.07  m1_loss_ce_0: 0.4666  m1_loss_mask_0: 0.1632  m1_loss_dice_0: 1.235  m1_loss_ce_1: 0.5316  m1_loss_mask_1: 0.15  m1_loss_dice_1: 1.172  m1_loss_ce_2: 0.4713  m1_loss_mask_2: 0.1411  m1_loss_dice_2: 1.081  m1_loss_ce_3: 0.3999  m1_loss_mask_3: 0.1452  m1_loss_dice_3: 1.059  m1_loss_ce_4: 0.345  m1_loss_mask_4: 0.1404  m1_loss_dice_4: 1.078  m1_loss_ce_5: 0.3586  m1_loss_mask_5: 0.1373  m1_loss_dice_5: 1.076  m1_loss_ce_6: 0.3539  m1_loss_mask_6: 0.1377  m1_loss_dice_6: 1.052  m1_loss_ce_7: 0.3468  m1_loss_mask_7: 0.1402  m1_loss_dice_7: 1.032  m1_loss_ce_8: 0.3503  m1_loss_mask_8: 0.1365  m1_loss_dice_8: 1.08  m2_loss_ce: 0.3644  m2_loss_mask: 0.1515  m2_loss_dice: 1.084  m2_loss_ce_0: 0.4938  m2_loss_mask_0: 0.17  m2_loss_dice_0: 1.251  m2_loss_ce_1: 0.5329  m2_loss_mask_1: 0.1586  m2_loss_dice_1: 1.199  m2_loss_ce_2: 0.4713  m2_loss_mask_2: 0.1509  m2_loss_dice_2: 1.168  m2_loss_ce_3: 0.3758  m2_loss_mask_3: 0.1519  m2_loss_dice_3: 1.113  m2_loss_ce_4: 0.391  m2_loss_mask_4: 0.1492  m2_loss_dice_4: 1.097  m2_loss_ce_5: 0.3747  m2_loss_mask_5: 0.15  m2_loss_dice_5: 1.117  m2_loss_ce_6: 0.3846  m2_loss_mask_6: 0.1507  m2_loss_dice_6: 1.074  m2_loss_ce_7: 0.3811  m2_loss_mask_7: 0.1496  m2_loss_dice_7: 1.098  m2_loss_ce_8: 0.3743  m2_loss_mask_8: 0.1511  m2_loss_dice_8: 1.101  com_loss_ce: 1.707  com_loss_mask: 0.6927  com_loss_dice: 0.9734    time: 1.7101  last_time: 1.7349  data_time: 0.0519  last_data_time: 0.0695   lr: 0.0001  max_mem: 37589M
[09/08 21:29:31] d2.utils.events INFO:  eta: 0:09:40  iter: 1659  total_loss: 37.75  m1_loss_ce: 0.3856  m1_loss_mask: 0.141  m1_loss_dice: 1.052  m1_loss_ce_0: 0.4664  m1_loss_mask_0: 0.1693  m1_loss_dice_0: 1.217  m1_loss_ce_1: 0.5242  m1_loss_mask_1: 0.1548  m1_loss_dice_1: 1.192  m1_loss_ce_2: 0.4701  m1_loss_mask_2: 0.1513  m1_loss_dice_2: 1.161  m1_loss_ce_3: 0.413  m1_loss_mask_3: 0.1455  m1_loss_dice_3: 1.085  m1_loss_ce_4: 0.3649  m1_loss_mask_4: 0.1427  m1_loss_dice_4: 1.079  m1_loss_ce_5: 0.3719  m1_loss_mask_5: 0.1412  m1_loss_dice_5: 1.081  m1_loss_ce_6: 0.3645  m1_loss_mask_6: 0.1415  m1_loss_dice_6: 1.084  m1_loss_ce_7: 0.3513  m1_loss_mask_7: 0.1411  m1_loss_dice_7: 1.047  m1_loss_ce_8: 0.3509  m1_loss_mask_8: 0.1417  m1_loss_dice_8: 1.069  m2_loss_ce: 0.3996  m2_loss_mask: 0.1531  m2_loss_dice: 1.097  m2_loss_ce_0: 0.5055  m2_loss_mask_0: 0.1728  m2_loss_dice_0: 1.287  m2_loss_ce_1: 0.5705  m2_loss_mask_1: 0.1602  m2_loss_dice_1: 1.226  m2_loss_ce_2: 0.5026  m2_loss_mask_2: 0.1529  m2_loss_dice_2: 1.172  m2_loss_ce_3: 0.4653  m2_loss_mask_3: 0.1539  m2_loss_dice_3: 1.14  m2_loss_ce_4: 0.3985  m2_loss_mask_4: 0.148  m2_loss_dice_4: 1.138  m2_loss_ce_5: 0.406  m2_loss_mask_5: 0.1531  m2_loss_dice_5: 1.104  m2_loss_ce_6: 0.4254  m2_loss_mask_6: 0.1539  m2_loss_dice_6: 1.089  m2_loss_ce_7: 0.4013  m2_loss_mask_7: 0.1526  m2_loss_dice_7: 1.084  m2_loss_ce_8: 0.4102  m2_loss_mask_8: 0.1539  m2_loss_dice_8: 1.108  com_loss_ce: 1.715  com_loss_mask: 0.6927  com_loss_dice: 0.9729    time: 1.7101  last_time: 1.7088  data_time: 0.0518  last_data_time: 0.0511   lr: 0.0001  max_mem: 37589M
[09/08 21:30:06] d2.utils.events INFO:  eta: 0:09:06  iter: 1679  total_loss: 38.37  m1_loss_ce: 0.3239  m1_loss_mask: 0.1335  m1_loss_dice: 1.081  m1_loss_ce_0: 0.4783  m1_loss_mask_0: 0.1546  m1_loss_dice_0: 1.278  m1_loss_ce_1: 0.5014  m1_loss_mask_1: 0.1492  m1_loss_dice_1: 1.209  m1_loss_ce_2: 0.449  m1_loss_mask_2: 0.1396  m1_loss_dice_2: 1.143  m1_loss_ce_3: 0.4014  m1_loss_mask_3: 0.1366  m1_loss_dice_3: 1.098  m1_loss_ce_4: 0.3781  m1_loss_mask_4: 0.1338  m1_loss_dice_4: 1.104  m1_loss_ce_5: 0.361  m1_loss_mask_5: 0.1345  m1_loss_dice_5: 1.127  m1_loss_ce_6: 0.3415  m1_loss_mask_6: 0.1335  m1_loss_dice_6: 1.084  m1_loss_ce_7: 0.334  m1_loss_mask_7: 0.1342  m1_loss_dice_7: 1.067  m1_loss_ce_8: 0.3547  m1_loss_mask_8: 0.133  m1_loss_dice_8: 1.102  m2_loss_ce: 0.3871  m2_loss_mask: 0.1465  m2_loss_dice: 1.12  m2_loss_ce_0: 0.5327  m2_loss_mask_0: 0.1627  m2_loss_dice_0: 1.301  m2_loss_ce_1: 0.5735  m2_loss_mask_1: 0.1562  m2_loss_dice_1: 1.263  m2_loss_ce_2: 0.4763  m2_loss_mask_2: 0.1496  m2_loss_dice_2: 1.226  m2_loss_ce_3: 0.4636  m2_loss_mask_3: 0.1464  m2_loss_dice_3: 1.157  m2_loss_ce_4: 0.4326  m2_loss_mask_4: 0.1454  m2_loss_dice_4: 1.133  m2_loss_ce_5: 0.436  m2_loss_mask_5: 0.1451  m2_loss_dice_5: 1.136  m2_loss_ce_6: 0.3745  m2_loss_mask_6: 0.1468  m2_loss_dice_6: 1.108  m2_loss_ce_7: 0.3935  m2_loss_mask_7: 0.1457  m2_loss_dice_7: 1.143  m2_loss_ce_8: 0.3796  m2_loss_mask_8: 0.145  m2_loss_dice_8: 1.092  com_loss_ce: 1.722  com_loss_mask: 0.6926  com_loss_dice: 0.9741    time: 1.7105  last_time: 1.7238  data_time: 0.0586  last_data_time: 0.0510   lr: 0.0001  max_mem: 37589M
[09/08 21:30:40] d2.utils.events INFO:  eta: 0:08:32  iter: 1699  total_loss: 39.11  m1_loss_ce: 0.3839  m1_loss_mask: 0.1409  m1_loss_dice: 1.122  m1_loss_ce_0: 0.4854  m1_loss_mask_0: 0.1662  m1_loss_dice_0: 1.333  m1_loss_ce_1: 0.5481  m1_loss_mask_1: 0.152  m1_loss_dice_1: 1.263  m1_loss_ce_2: 0.4993  m1_loss_mask_2: 0.1431  m1_loss_dice_2: 1.228  m1_loss_ce_3: 0.4098  m1_loss_mask_3: 0.1486  m1_loss_dice_3: 1.186  m1_loss_ce_4: 0.4119  m1_loss_mask_4: 0.1439  m1_loss_dice_4: 1.174  m1_loss_ce_5: 0.3685  m1_loss_mask_5: 0.1408  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.3904  m1_loss_mask_6: 0.1455  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.3495  m1_loss_mask_7: 0.1435  m1_loss_dice_7: 1.162  m1_loss_ce_8: 0.3709  m1_loss_mask_8: 0.1403  m1_loss_dice_8: 1.155  m2_loss_ce: 0.4229  m2_loss_mask: 0.1484  m2_loss_dice: 1.163  m2_loss_ce_0: 0.5472  m2_loss_mask_0: 0.1684  m2_loss_dice_0: 1.319  m2_loss_ce_1: 0.584  m2_loss_mask_1: 0.1591  m2_loss_dice_1: 1.304  m2_loss_ce_2: 0.5159  m2_loss_mask_2: 0.1508  m2_loss_dice_2: 1.245  m2_loss_ce_3: 0.471  m2_loss_mask_3: 0.1513  m2_loss_dice_3: 1.165  m2_loss_ce_4: 0.4319  m2_loss_mask_4: 0.1502  m2_loss_dice_4: 1.199  m2_loss_ce_5: 0.4068  m2_loss_mask_5: 0.1486  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.4369  m2_loss_mask_6: 0.1501  m2_loss_dice_6: 1.153  m2_loss_ce_7: 0.4398  m2_loss_mask_7: 0.149  m2_loss_dice_7: 1.144  m2_loss_ce_8: 0.4186  m2_loss_mask_8: 0.1513  m2_loss_dice_8: 1.166  com_loss_ce: 1.738  com_loss_mask: 0.6926  com_loss_dice: 0.9745    time: 1.7106  last_time: 1.6791  data_time: 0.0496  last_data_time: 0.0458   lr: 0.0001  max_mem: 37589M
[09/08 21:31:15] d2.utils.events INFO:  eta: 0:07:58  iter: 1719  total_loss: 37.65  m1_loss_ce: 0.348  m1_loss_mask: 0.1335  m1_loss_dice: 1.096  m1_loss_ce_0: 0.481  m1_loss_mask_0: 0.1576  m1_loss_dice_0: 1.282  m1_loss_ce_1: 0.5044  m1_loss_mask_1: 0.1403  m1_loss_dice_1: 1.208  m1_loss_ce_2: 0.4596  m1_loss_mask_2: 0.134  m1_loss_dice_2: 1.182  m1_loss_ce_3: 0.4057  m1_loss_mask_3: 0.1366  m1_loss_dice_3: 1.116  m1_loss_ce_4: 0.3845  m1_loss_mask_4: 0.135  m1_loss_dice_4: 1.123  m1_loss_ce_5: 0.3789  m1_loss_mask_5: 0.1347  m1_loss_dice_5: 1.089  m1_loss_ce_6: 0.3617  m1_loss_mask_6: 0.1343  m1_loss_dice_6: 1.061  m1_loss_ce_7: 0.3466  m1_loss_mask_7: 0.1345  m1_loss_dice_7: 1.079  m1_loss_ce_8: 0.3411  m1_loss_mask_8: 0.1326  m1_loss_dice_8: 1.104  m2_loss_ce: 0.4234  m2_loss_mask: 0.1471  m2_loss_dice: 1.147  m2_loss_ce_0: 0.5255  m2_loss_mask_0: 0.1657  m2_loss_dice_0: 1.32  m2_loss_ce_1: 0.568  m2_loss_mask_1: 0.1602  m2_loss_dice_1: 1.228  m2_loss_ce_2: 0.4861  m2_loss_mask_2: 0.1528  m2_loss_dice_2: 1.208  m2_loss_ce_3: 0.4537  m2_loss_mask_3: 0.1483  m2_loss_dice_3: 1.15  m2_loss_ce_4: 0.442  m2_loss_mask_4: 0.1481  m2_loss_dice_4: 1.167  m2_loss_ce_5: 0.4225  m2_loss_mask_5: 0.1462  m2_loss_dice_5: 1.114  m2_loss_ce_6: 0.3849  m2_loss_mask_6: 0.1473  m2_loss_dice_6: 1.117  m2_loss_ce_7: 0.408  m2_loss_mask_7: 0.1448  m2_loss_dice_7: 1.122  m2_loss_ce_8: 0.4013  m2_loss_mask_8: 0.1472  m2_loss_dice_8: 1.124  com_loss_ce: 1.726  com_loss_mask: 0.6927  com_loss_dice: 0.9741    time: 1.7108  last_time: 1.7297  data_time: 0.0541  last_data_time: 0.0571   lr: 0.0001  max_mem: 37589M
[09/08 21:31:50] d2.utils.events INFO:  eta: 0:07:24  iter: 1739  total_loss: 37.93  m1_loss_ce: 0.3642  m1_loss_mask: 0.1362  m1_loss_dice: 1.123  m1_loss_ce_0: 0.4492  m1_loss_mask_0: 0.1634  m1_loss_dice_0: 1.243  m1_loss_ce_1: 0.5276  m1_loss_mask_1: 0.1537  m1_loss_dice_1: 1.163  m1_loss_ce_2: 0.4389  m1_loss_mask_2: 0.1423  m1_loss_dice_2: 1.14  m1_loss_ce_3: 0.3922  m1_loss_mask_3: 0.141  m1_loss_dice_3: 1.096  m1_loss_ce_4: 0.3589  m1_loss_mask_4: 0.1408  m1_loss_dice_4: 1.071  m1_loss_ce_5: 0.3504  m1_loss_mask_5: 0.1359  m1_loss_dice_5: 1.101  m1_loss_ce_6: 0.342  m1_loss_mask_6: 0.1394  m1_loss_dice_6: 1.092  m1_loss_ce_7: 0.3578  m1_loss_mask_7: 0.1359  m1_loss_dice_7: 1.069  m1_loss_ce_8: 0.3643  m1_loss_mask_8: 0.1354  m1_loss_dice_8: 1.078  m2_loss_ce: 0.4164  m2_loss_mask: 0.1551  m2_loss_dice: 1.093  m2_loss_ce_0: 0.5306  m2_loss_mask_0: 0.1679  m2_loss_dice_0: 1.281  m2_loss_ce_1: 0.5803  m2_loss_mask_1: 0.1615  m2_loss_dice_1: 1.221  m2_loss_ce_2: 0.4973  m2_loss_mask_2: 0.1562  m2_loss_dice_2: 1.207  m2_loss_ce_3: 0.4402  m2_loss_mask_3: 0.1559  m2_loss_dice_3: 1.16  m2_loss_ce_4: 0.4252  m2_loss_mask_4: 0.1532  m2_loss_dice_4: 1.126  m2_loss_ce_5: 0.4321  m2_loss_mask_5: 0.1527  m2_loss_dice_5: 1.155  m2_loss_ce_6: 0.4165  m2_loss_mask_6: 0.1551  m2_loss_dice_6: 1.115  m2_loss_ce_7: 0.4098  m2_loss_mask_7: 0.1542  m2_loss_dice_7: 1.101  m2_loss_ce_8: 0.4128  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.075  com_loss_ce: 1.708  com_loss_mask: 0.6926  com_loss_dice: 0.9728    time: 1.7109  last_time: 1.7075  data_time: 0.0593  last_data_time: 0.0383   lr: 0.0001  max_mem: 37589M
[09/08 21:32:24] d2.utils.events INFO:  eta: 0:06:50  iter: 1759  total_loss: 39.62  m1_loss_ce: 0.3653  m1_loss_mask: 0.1271  m1_loss_dice: 1.121  m1_loss_ce_0: 0.4985  m1_loss_mask_0: 0.1525  m1_loss_dice_0: 1.296  m1_loss_ce_1: 0.5889  m1_loss_mask_1: 0.1419  m1_loss_dice_1: 1.247  m1_loss_ce_2: 0.4924  m1_loss_mask_2: 0.1335  m1_loss_dice_2: 1.216  m1_loss_ce_3: 0.4583  m1_loss_mask_3: 0.1326  m1_loss_dice_3: 1.168  m1_loss_ce_4: 0.4036  m1_loss_mask_4: 0.1291  m1_loss_dice_4: 1.112  m1_loss_ce_5: 0.3805  m1_loss_mask_5: 0.1281  m1_loss_dice_5: 1.159  m1_loss_ce_6: 0.3648  m1_loss_mask_6: 0.1281  m1_loss_dice_6: 1.106  m1_loss_ce_7: 0.3922  m1_loss_mask_7: 0.1284  m1_loss_dice_7: 1.131  m1_loss_ce_8: 0.3585  m1_loss_mask_8: 0.1272  m1_loss_dice_8: 1.123  m2_loss_ce: 0.4384  m2_loss_mask: 0.1433  m2_loss_dice: 1.151  m2_loss_ce_0: 0.5319  m2_loss_mask_0: 0.1582  m2_loss_dice_0: 1.346  m2_loss_ce_1: 0.6091  m2_loss_mask_1: 0.1497  m2_loss_dice_1: 1.272  m2_loss_ce_2: 0.5111  m2_loss_mask_2: 0.1453  m2_loss_dice_2: 1.205  m2_loss_ce_3: 0.4548  m2_loss_mask_3: 0.1439  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.4152  m2_loss_mask_4: 0.1401  m2_loss_dice_4: 1.174  m2_loss_ce_5: 0.4298  m2_loss_mask_5: 0.1431  m2_loss_dice_5: 1.15  m2_loss_ce_6: 0.4076  m2_loss_mask_6: 0.1462  m2_loss_dice_6: 1.139  m2_loss_ce_7: 0.3685  m2_loss_mask_7: 0.1441  m2_loss_dice_7: 1.148  m2_loss_ce_8: 0.4196  m2_loss_mask_8: 0.1442  m2_loss_dice_8: 1.134  com_loss_ce: 1.731  com_loss_mask: 0.6927  com_loss_dice: 0.9745    time: 1.7111  last_time: 1.7205  data_time: 0.0581  last_data_time: 0.0537   lr: 0.0001  max_mem: 37589M
[09/08 21:32:59] d2.utils.events INFO:  eta: 0:06:16  iter: 1779  total_loss: 38.06  m1_loss_ce: 0.34  m1_loss_mask: 0.139  m1_loss_dice: 1.096  m1_loss_ce_0: 0.4535  m1_loss_mask_0: 0.1615  m1_loss_dice_0: 1.277  m1_loss_ce_1: 0.5059  m1_loss_mask_1: 0.1533  m1_loss_dice_1: 1.211  m1_loss_ce_2: 0.4202  m1_loss_mask_2: 0.1424  m1_loss_dice_2: 1.156  m1_loss_ce_3: 0.3839  m1_loss_mask_3: 0.1419  m1_loss_dice_3: 1.113  m1_loss_ce_4: 0.3407  m1_loss_mask_4: 0.1412  m1_loss_dice_4: 1.081  m1_loss_ce_5: 0.3426  m1_loss_mask_5: 0.1394  m1_loss_dice_5: 1.098  m1_loss_ce_6: 0.3397  m1_loss_mask_6: 0.1395  m1_loss_dice_6: 1.11  m1_loss_ce_7: 0.3495  m1_loss_mask_7: 0.1373  m1_loss_dice_7: 1.095  m1_loss_ce_8: 0.3164  m1_loss_mask_8: 0.1399  m1_loss_dice_8: 1.094  m2_loss_ce: 0.3976  m2_loss_mask: 0.1536  m2_loss_dice: 1.133  m2_loss_ce_0: 0.4868  m2_loss_mask_0: 0.1706  m2_loss_dice_0: 1.299  m2_loss_ce_1: 0.5634  m2_loss_mask_1: 0.167  m2_loss_dice_1: 1.276  m2_loss_ce_2: 0.5008  m2_loss_mask_2: 0.159  m2_loss_dice_2: 1.211  m2_loss_ce_3: 0.4411  m2_loss_mask_3: 0.1566  m2_loss_dice_3: 1.158  m2_loss_ce_4: 0.4265  m2_loss_mask_4: 0.1543  m2_loss_dice_4: 1.14  m2_loss_ce_5: 0.4206  m2_loss_mask_5: 0.1525  m2_loss_dice_5: 1.142  m2_loss_ce_6: 0.3988  m2_loss_mask_6: 0.1533  m2_loss_dice_6: 1.108  m2_loss_ce_7: 0.4215  m2_loss_mask_7: 0.151  m2_loss_dice_7: 1.099  m2_loss_ce_8: 0.3925  m2_loss_mask_8: 0.1514  m2_loss_dice_8: 1.108  com_loss_ce: 1.731  com_loss_mask: 0.6927  com_loss_dice: 0.9729    time: 1.7112  last_time: 1.6372  data_time: 0.0594  last_data_time: 0.0382   lr: 0.0001  max_mem: 37589M
[09/08 21:33:33] d2.utils.events INFO:  eta: 0:05:41  iter: 1799  total_loss: 38.08  m1_loss_ce: 0.3775  m1_loss_mask: 0.1403  m1_loss_dice: 1.088  m1_loss_ce_0: 0.496  m1_loss_mask_0: 0.1638  m1_loss_dice_0: 1.279  m1_loss_ce_1: 0.5457  m1_loss_mask_1: 0.1553  m1_loss_dice_1: 1.209  m1_loss_ce_2: 0.4531  m1_loss_mask_2: 0.148  m1_loss_dice_2: 1.169  m1_loss_ce_3: 0.4033  m1_loss_mask_3: 0.1441  m1_loss_dice_3: 1.12  m1_loss_ce_4: 0.3983  m1_loss_mask_4: 0.1428  m1_loss_dice_4: 1.129  m1_loss_ce_5: 0.3793  m1_loss_mask_5: 0.1425  m1_loss_dice_5: 1.108  m1_loss_ce_6: 0.351  m1_loss_mask_6: 0.1406  m1_loss_dice_6: 1.101  m1_loss_ce_7: 0.3592  m1_loss_mask_7: 0.1415  m1_loss_dice_7: 1.112  m1_loss_ce_8: 0.3377  m1_loss_mask_8: 0.1418  m1_loss_dice_8: 1.1  m2_loss_ce: 0.392  m2_loss_mask: 0.1523  m2_loss_dice: 1.156  m2_loss_ce_0: 0.5161  m2_loss_mask_0: 0.1724  m2_loss_dice_0: 1.313  m2_loss_ce_1: 0.5681  m2_loss_mask_1: 0.1638  m2_loss_dice_1: 1.281  m2_loss_ce_2: 0.4888  m2_loss_mask_2: 0.1565  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.4526  m2_loss_mask_3: 0.1531  m2_loss_dice_3: 1.162  m2_loss_ce_4: 0.4168  m2_loss_mask_4: 0.1517  m2_loss_dice_4: 1.163  m2_loss_ce_5: 0.4137  m2_loss_mask_5: 0.1493  m2_loss_dice_5: 1.152  m2_loss_ce_6: 0.401  m2_loss_mask_6: 0.152  m2_loss_dice_6: 1.157  m2_loss_ce_7: 0.3885  m2_loss_mask_7: 0.1516  m2_loss_dice_7: 1.14  m2_loss_ce_8: 0.3878  m2_loss_mask_8: 0.1512  m2_loss_dice_8: 1.143  com_loss_ce: 1.72  com_loss_mask: 0.6926  com_loss_dice: 0.9724    time: 1.7110  last_time: 1.6911  data_time: 0.0457  last_data_time: 0.0333   lr: 0.0001  max_mem: 37589M
[09/08 21:34:07] d2.utils.events INFO:  eta: 0:05:07  iter: 1819  total_loss: 37.14  m1_loss_ce: 0.36  m1_loss_mask: 0.137  m1_loss_dice: 1.083  m1_loss_ce_0: 0.4791  m1_loss_mask_0: 0.1527  m1_loss_dice_0: 1.268  m1_loss_ce_1: 0.4735  m1_loss_mask_1: 0.1459  m1_loss_dice_1: 1.168  m1_loss_ce_2: 0.4516  m1_loss_mask_2: 0.1419  m1_loss_dice_2: 1.146  m1_loss_ce_3: 0.3821  m1_loss_mask_3: 0.1425  m1_loss_dice_3: 1.095  m1_loss_ce_4: 0.3652  m1_loss_mask_4: 0.1429  m1_loss_dice_4: 1.085  m1_loss_ce_5: 0.3681  m1_loss_mask_5: 0.1403  m1_loss_dice_5: 1.097  m1_loss_ce_6: 0.3191  m1_loss_mask_6: 0.1405  m1_loss_dice_6: 1.099  m1_loss_ce_7: 0.3456  m1_loss_mask_7: 0.1399  m1_loss_dice_7: 1.071  m1_loss_ce_8: 0.3356  m1_loss_mask_8: 0.1386  m1_loss_dice_8: 1.059  m2_loss_ce: 0.4039  m2_loss_mask: 0.1492  m2_loss_dice: 1.104  m2_loss_ce_0: 0.5426  m2_loss_mask_0: 0.1658  m2_loss_dice_0: 1.271  m2_loss_ce_1: 0.5517  m2_loss_mask_1: 0.1603  m2_loss_dice_1: 1.203  m2_loss_ce_2: 0.5174  m2_loss_mask_2: 0.1499  m2_loss_dice_2: 1.18  m2_loss_ce_3: 0.4682  m2_loss_mask_3: 0.1466  m2_loss_dice_3: 1.14  m2_loss_ce_4: 0.4513  m2_loss_mask_4: 0.1466  m2_loss_dice_4: 1.139  m2_loss_ce_5: 0.4241  m2_loss_mask_5: 0.1476  m2_loss_dice_5: 1.123  m2_loss_ce_6: 0.4333  m2_loss_mask_6: 0.1516  m2_loss_dice_6: 1.084  m2_loss_ce_7: 0.4212  m2_loss_mask_7: 0.1482  m2_loss_dice_7: 1.102  m2_loss_ce_8: 0.4205  m2_loss_mask_8: 0.1484  m2_loss_dice_8: 1.099  com_loss_ce: 1.706  com_loss_mask: 0.6926  com_loss_dice: 0.9728    time: 1.7110  last_time: 1.7243  data_time: 0.0578  last_data_time: 0.0384   lr: 0.0001  max_mem: 37589M
[09/08 21:34:41] d2.utils.events INFO:  eta: 0:04:33  iter: 1839  total_loss: 37.51  m1_loss_ce: 0.3226  m1_loss_mask: 0.1457  m1_loss_dice: 1.113  m1_loss_ce_0: 0.4531  m1_loss_mask_0: 0.1715  m1_loss_dice_0: 1.291  m1_loss_ce_1: 0.4993  m1_loss_mask_1: 0.1572  m1_loss_dice_1: 1.236  m1_loss_ce_2: 0.4584  m1_loss_mask_2: 0.1514  m1_loss_dice_2: 1.189  m1_loss_ce_3: 0.4058  m1_loss_mask_3: 0.1494  m1_loss_dice_3: 1.118  m1_loss_ce_4: 0.3842  m1_loss_mask_4: 0.1493  m1_loss_dice_4: 1.103  m1_loss_ce_5: 0.3634  m1_loss_mask_5: 0.1488  m1_loss_dice_5: 1.127  m1_loss_ce_6: 0.3611  m1_loss_mask_6: 0.1506  m1_loss_dice_6: 1.109  m1_loss_ce_7: 0.3318  m1_loss_mask_7: 0.1486  m1_loss_dice_7: 1.099  m1_loss_ce_8: 0.3454  m1_loss_mask_8: 0.1463  m1_loss_dice_8: 1.096  m2_loss_ce: 0.4308  m2_loss_mask: 0.1558  m2_loss_dice: 1.134  m2_loss_ce_0: 0.5464  m2_loss_mask_0: 0.1771  m2_loss_dice_0: 1.292  m2_loss_ce_1: 0.579  m2_loss_mask_1: 0.1675  m2_loss_dice_1: 1.242  m2_loss_ce_2: 0.4974  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.197  m2_loss_ce_3: 0.4533  m2_loss_mask_3: 0.1607  m2_loss_dice_3: 1.167  m2_loss_ce_4: 0.4589  m2_loss_mask_4: 0.1556  m2_loss_dice_4: 1.142  m2_loss_ce_5: 0.4244  m2_loss_mask_5: 0.1558  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.4119  m2_loss_mask_6: 0.1562  m2_loss_dice_6: 1.144  m2_loss_ce_7: 0.4187  m2_loss_mask_7: 0.1553  m2_loss_dice_7: 1.104  m2_loss_ce_8: 0.4294  m2_loss_mask_8: 0.1567  m2_loss_dice_8: 1.112  com_loss_ce: 1.709  com_loss_mask: 0.6926  com_loss_dice: 0.9721    time: 1.7108  last_time: 1.6743  data_time: 0.0453  last_data_time: 0.0444   lr: 0.0001  max_mem: 37589M
[09/08 21:35:15] d2.utils.events INFO:  eta: 0:03:59  iter: 1859  total_loss: 37.61  m1_loss_ce: 0.3588  m1_loss_mask: 0.1575  m1_loss_dice: 1.055  m1_loss_ce_0: 0.4877  m1_loss_mask_0: 0.1779  m1_loss_dice_0: 1.226  m1_loss_ce_1: 0.4979  m1_loss_mask_1: 0.1685  m1_loss_dice_1: 1.154  m1_loss_ce_2: 0.4475  m1_loss_mask_2: 0.1624  m1_loss_dice_2: 1.112  m1_loss_ce_3: 0.3944  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.095  m1_loss_ce_4: 0.3729  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.084  m1_loss_ce_5: 0.3423  m1_loss_mask_5: 0.1591  m1_loss_dice_5: 1.077  m1_loss_ce_6: 0.3504  m1_loss_mask_6: 0.1604  m1_loss_dice_6: 1.038  m1_loss_ce_7: 0.33  m1_loss_mask_7: 0.1591  m1_loss_dice_7: 1.077  m1_loss_ce_8: 0.3528  m1_loss_mask_8: 0.1595  m1_loss_dice_8: 1.054  m2_loss_ce: 0.4196  m2_loss_mask: 0.1696  m2_loss_dice: 1.117  m2_loss_ce_0: 0.5149  m2_loss_mask_0: 0.1883  m2_loss_dice_0: 1.244  m2_loss_ce_1: 0.5417  m2_loss_mask_1: 0.1818  m2_loss_dice_1: 1.178  m2_loss_ce_2: 0.5227  m2_loss_mask_2: 0.1692  m2_loss_dice_2: 1.175  m2_loss_ce_3: 0.4641  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.125  m2_loss_ce_4: 0.4528  m2_loss_mask_4: 0.1663  m2_loss_dice_4: 1.125  m2_loss_ce_5: 0.4108  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.113  m2_loss_ce_6: 0.3862  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.072  m2_loss_ce_7: 0.4043  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.112  m2_loss_ce_8: 0.4086  m2_loss_mask_8: 0.1709  m2_loss_dice_8: 1.088  com_loss_ce: 1.709  com_loss_mask: 0.6926  com_loss_dice: 0.9714    time: 1.7106  last_time: 1.6754  data_time: 0.0500  last_data_time: 0.0562   lr: 0.0001  max_mem: 37589M
[09/08 21:35:49] d2.utils.events INFO:  eta: 0:03:24  iter: 1879  total_loss: 35.88  m1_loss_ce: 0.3375  m1_loss_mask: 0.136  m1_loss_dice: 1.009  m1_loss_ce_0: 0.453  m1_loss_mask_0: 0.1571  m1_loss_dice_0: 1.177  m1_loss_ce_1: 0.4649  m1_loss_mask_1: 0.144  m1_loss_dice_1: 1.124  m1_loss_ce_2: 0.428  m1_loss_mask_2: 0.1366  m1_loss_dice_2: 1.081  m1_loss_ce_3: 0.3974  m1_loss_mask_3: 0.1393  m1_loss_dice_3: 1.022  m1_loss_ce_4: 0.3509  m1_loss_mask_4: 0.1385  m1_loss_dice_4: 1.041  m1_loss_ce_5: 0.3348  m1_loss_mask_5: 0.1365  m1_loss_dice_5: 1.02  m1_loss_ce_6: 0.3196  m1_loss_mask_6: 0.1352  m1_loss_dice_6: 0.9952  m1_loss_ce_7: 0.3072  m1_loss_mask_7: 0.1371  m1_loss_dice_7: 1.029  m1_loss_ce_8: 0.3339  m1_loss_mask_8: 0.1342  m1_loss_dice_8: 0.9988  m2_loss_ce: 0.4146  m2_loss_mask: 0.1516  m2_loss_dice: 1.021  m2_loss_ce_0: 0.4924  m2_loss_mask_0: 0.1664  m2_loss_dice_0: 1.226  m2_loss_ce_1: 0.5269  m2_loss_mask_1: 0.1557  m2_loss_dice_1: 1.172  m2_loss_ce_2: 0.5026  m2_loss_mask_2: 0.152  m2_loss_dice_2: 1.095  m2_loss_ce_3: 0.4488  m2_loss_mask_3: 0.1516  m2_loss_dice_3: 1.072  m2_loss_ce_4: 0.4321  m2_loss_mask_4: 0.15  m2_loss_dice_4: 1.058  m2_loss_ce_5: 0.3925  m2_loss_mask_5: 0.1493  m2_loss_dice_5: 1.066  m2_loss_ce_6: 0.3904  m2_loss_mask_6: 0.151  m2_loss_dice_6: 1.049  m2_loss_ce_7: 0.3969  m2_loss_mask_7: 0.1502  m2_loss_dice_7: 1.047  m2_loss_ce_8: 0.3889  m2_loss_mask_8: 0.1498  m2_loss_dice_8: 1.042  com_loss_ce: 1.71  com_loss_mask: 0.6926  com_loss_dice: 0.9712    time: 1.7104  last_time: 1.7107  data_time: 0.0490  last_data_time: 0.0664   lr: 0.0001  max_mem: 37589M
[09/08 21:36:23] d2.utils.events INFO:  eta: 0:02:50  iter: 1899  total_loss: 38.64  m1_loss_ce: 0.3596  m1_loss_mask: 0.133  m1_loss_dice: 1.106  m1_loss_ce_0: 0.4835  m1_loss_mask_0: 0.1535  m1_loss_dice_0: 1.28  m1_loss_ce_1: 0.4906  m1_loss_mask_1: 0.1449  m1_loss_dice_1: 1.222  m1_loss_ce_2: 0.4281  m1_loss_mask_2: 0.1349  m1_loss_dice_2: 1.213  m1_loss_ce_3: 0.3947  m1_loss_mask_3: 0.1366  m1_loss_dice_3: 1.125  m1_loss_ce_4: 0.3808  m1_loss_mask_4: 0.1325  m1_loss_dice_4: 1.107  m1_loss_ce_5: 0.377  m1_loss_mask_5: 0.1299  m1_loss_dice_5: 1.121  m1_loss_ce_6: 0.3354  m1_loss_mask_6: 0.1339  m1_loss_dice_6: 1.09  m1_loss_ce_7: 0.3661  m1_loss_mask_7: 0.1352  m1_loss_dice_7: 1.117  m1_loss_ce_8: 0.3519  m1_loss_mask_8: 0.136  m1_loss_dice_8: 1.136  m2_loss_ce: 0.4411  m2_loss_mask: 0.1429  m2_loss_dice: 1.165  m2_loss_ce_0: 0.5202  m2_loss_mask_0: 0.1634  m2_loss_dice_0: 1.342  m2_loss_ce_1: 0.5484  m2_loss_mask_1: 0.158  m2_loss_dice_1: 1.276  m2_loss_ce_2: 0.4986  m2_loss_mask_2: 0.1531  m2_loss_dice_2: 1.226  m2_loss_ce_3: 0.4557  m2_loss_mask_3: 0.1488  m2_loss_dice_3: 1.166  m2_loss_ce_4: 0.4425  m2_loss_mask_4: 0.148  m2_loss_dice_4: 1.172  m2_loss_ce_5: 0.4265  m2_loss_mask_5: 0.1456  m2_loss_dice_5: 1.177  m2_loss_ce_6: 0.4124  m2_loss_mask_6: 0.1483  m2_loss_dice_6: 1.138  m2_loss_ce_7: 0.4228  m2_loss_mask_7: 0.1457  m2_loss_dice_7: 1.151  m2_loss_ce_8: 0.4262  m2_loss_mask_8: 0.142  m2_loss_dice_8: 1.143  com_loss_ce: 1.737  com_loss_mask: 0.6926  com_loss_dice: 0.9754    time: 1.7104  last_time: 1.7021  data_time: 0.0584  last_data_time: 0.0467   lr: 0.0001  max_mem: 37589M
[09/08 21:36:57] d2.utils.events INFO:  eta: 0:02:16  iter: 1919  total_loss: 37.55  m1_loss_ce: 0.3595  m1_loss_mask: 0.133  m1_loss_dice: 1.091  m1_loss_ce_0: 0.4883  m1_loss_mask_0: 0.1559  m1_loss_dice_0: 1.265  m1_loss_ce_1: 0.5039  m1_loss_mask_1: 0.1414  m1_loss_dice_1: 1.2  m1_loss_ce_2: 0.4426  m1_loss_mask_2: 0.1349  m1_loss_dice_2: 1.16  m1_loss_ce_3: 0.39  m1_loss_mask_3: 0.1327  m1_loss_dice_3: 1.109  m1_loss_ce_4: 0.3553  m1_loss_mask_4: 0.1313  m1_loss_dice_4: 1.099  m1_loss_ce_5: 0.3512  m1_loss_mask_5: 0.1318  m1_loss_dice_5: 1.119  m1_loss_ce_6: 0.3337  m1_loss_mask_6: 0.1348  m1_loss_dice_6: 1.063  m1_loss_ce_7: 0.349  m1_loss_mask_7: 0.1337  m1_loss_dice_7: 1.079  m1_loss_ce_8: 0.3532  m1_loss_mask_8: 0.1342  m1_loss_dice_8: 1.072  m2_loss_ce: 0.428  m2_loss_mask: 0.1448  m2_loss_dice: 1.127  m2_loss_ce_0: 0.566  m2_loss_mask_0: 0.1618  m2_loss_dice_0: 1.336  m2_loss_ce_1: 0.5836  m2_loss_mask_1: 0.1527  m2_loss_dice_1: 1.258  m2_loss_ce_2: 0.5176  m2_loss_mask_2: 0.1435  m2_loss_dice_2: 1.191  m2_loss_ce_3: 0.4988  m2_loss_mask_3: 0.1469  m2_loss_dice_3: 1.144  m2_loss_ce_4: 0.4541  m2_loss_mask_4: 0.1456  m2_loss_dice_4: 1.126  m2_loss_ce_5: 0.4334  m2_loss_mask_5: 0.1452  m2_loss_dice_5: 1.102  m2_loss_ce_6: 0.4047  m2_loss_mask_6: 0.1459  m2_loss_dice_6: 1.108  m2_loss_ce_7: 0.4219  m2_loss_mask_7: 0.1447  m2_loss_dice_7: 1.076  m2_loss_ce_8: 0.4082  m2_loss_mask_8: 0.1439  m2_loss_dice_8: 1.103  com_loss_ce: 1.713  com_loss_mask: 0.6926  com_loss_dice: 0.9745    time: 1.7103  last_time: 1.7005  data_time: 0.0518  last_data_time: 0.0373   lr: 0.0001  max_mem: 37589M
[09/08 21:37:32] d2.utils.events INFO:  eta: 0:01:42  iter: 1939  total_loss: 36.77  m1_loss_ce: 0.3257  m1_loss_mask: 0.1537  m1_loss_dice: 1.051  m1_loss_ce_0: 0.3768  m1_loss_mask_0: 0.173  m1_loss_dice_0: 1.245  m1_loss_ce_1: 0.4414  m1_loss_mask_1: 0.1581  m1_loss_dice_1: 1.168  m1_loss_ce_2: 0.3989  m1_loss_mask_2: 0.155  m1_loss_dice_2: 1.121  m1_loss_ce_3: 0.3642  m1_loss_mask_3: 0.1551  m1_loss_dice_3: 1.079  m1_loss_ce_4: 0.325  m1_loss_mask_4: 0.154  m1_loss_dice_4: 1.091  m1_loss_ce_5: 0.3297  m1_loss_mask_5: 0.1519  m1_loss_dice_5: 1.08  m1_loss_ce_6: 0.3112  m1_loss_mask_6: 0.1546  m1_loss_dice_6: 1.058  m1_loss_ce_7: 0.3145  m1_loss_mask_7: 0.1513  m1_loss_dice_7: 1.068  m1_loss_ce_8: 0.3204  m1_loss_mask_8: 0.1521  m1_loss_dice_8: 1.072  m2_loss_ce: 0.3546  m2_loss_mask: 0.1535  m2_loss_dice: 1.099  m2_loss_ce_0: 0.4526  m2_loss_mask_0: 0.1823  m2_loss_dice_0: 1.245  m2_loss_ce_1: 0.5147  m2_loss_mask_1: 0.168  m2_loss_dice_1: 1.207  m2_loss_ce_2: 0.4592  m2_loss_mask_2: 0.1628  m2_loss_dice_2: 1.172  m2_loss_ce_3: 0.4343  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.134  m2_loss_ce_4: 0.3695  m2_loss_mask_4: 0.1591  m2_loss_dice_4: 1.154  m2_loss_ce_5: 0.3554  m2_loss_mask_5: 0.1556  m2_loss_dice_5: 1.126  m2_loss_ce_6: 0.3539  m2_loss_mask_6: 0.1572  m2_loss_dice_6: 1.117  m2_loss_ce_7: 0.3545  m2_loss_mask_7: 0.1555  m2_loss_dice_7: 1.105  m2_loss_ce_8: 0.3805  m2_loss_mask_8: 0.1533  m2_loss_dice_8: 1.109  com_loss_ce: 1.705  com_loss_mask: 0.6927  com_loss_dice: 0.9719    time: 1.7102  last_time: 1.6860  data_time: 0.0479  last_data_time: 0.0469   lr: 0.0001  max_mem: 37589M
[09/08 21:38:06] d2.utils.events INFO:  eta: 0:01:08  iter: 1959  total_loss: 38.06  m1_loss_ce: 0.3895  m1_loss_mask: 0.1359  m1_loss_dice: 1.048  m1_loss_ce_0: 0.5134  m1_loss_mask_0: 0.1613  m1_loss_dice_0: 1.26  m1_loss_ce_1: 0.5092  m1_loss_mask_1: 0.1484  m1_loss_dice_1: 1.188  m1_loss_ce_2: 0.4464  m1_loss_mask_2: 0.1405  m1_loss_dice_2: 1.169  m1_loss_ce_3: 0.4187  m1_loss_mask_3: 0.1404  m1_loss_dice_3: 1.094  m1_loss_ce_4: 0.4014  m1_loss_mask_4: 0.1422  m1_loss_dice_4: 1.092  m1_loss_ce_5: 0.4099  m1_loss_mask_5: 0.138  m1_loss_dice_5: 1.08  m1_loss_ce_6: 0.3641  m1_loss_mask_6: 0.1387  m1_loss_dice_6: 1.025  m1_loss_ce_7: 0.3627  m1_loss_mask_7: 0.1375  m1_loss_dice_7: 1.074  m1_loss_ce_8: 0.4027  m1_loss_mask_8: 0.1375  m1_loss_dice_8: 1.074  m2_loss_ce: 0.4387  m2_loss_mask: 0.1464  m2_loss_dice: 1.102  m2_loss_ce_0: 0.5229  m2_loss_mask_0: 0.1599  m2_loss_dice_0: 1.317  m2_loss_ce_1: 0.5895  m2_loss_mask_1: 0.154  m2_loss_dice_1: 1.25  m2_loss_ce_2: 0.5142  m2_loss_mask_2: 0.1497  m2_loss_dice_2: 1.193  m2_loss_ce_3: 0.4689  m2_loss_mask_3: 0.1475  m2_loss_dice_3: 1.171  m2_loss_ce_4: 0.4384  m2_loss_mask_4: 0.1475  m2_loss_dice_4: 1.168  m2_loss_ce_5: 0.431  m2_loss_mask_5: 0.1463  m2_loss_dice_5: 1.15  m2_loss_ce_6: 0.4238  m2_loss_mask_6: 0.1486  m2_loss_dice_6: 1.113  m2_loss_ce_7: 0.4096  m2_loss_mask_7: 0.1496  m2_loss_dice_7: 1.15  m2_loss_ce_8: 0.4054  m2_loss_mask_8: 0.1473  m2_loss_dice_8: 1.149  com_loss_ce: 1.734  com_loss_mask: 0.6927  com_loss_dice: 0.9748    time: 1.7102  last_time: 1.6613  data_time: 0.0477  last_data_time: 0.0442   lr: 0.0001  max_mem: 37589M
[09/08 21:38:40] d2.utils.events INFO:  eta: 0:00:34  iter: 1979  total_loss: 35.29  m1_loss_ce: 0.3701  m1_loss_mask: 0.137  m1_loss_dice: 1.007  m1_loss_ce_0: 0.4523  m1_loss_mask_0: 0.1542  m1_loss_dice_0: 1.17  m1_loss_ce_1: 0.4804  m1_loss_mask_1: 0.1414  m1_loss_dice_1: 1.066  m1_loss_ce_2: 0.4255  m1_loss_mask_2: 0.1387  m1_loss_dice_2: 1.06  m1_loss_ce_3: 0.397  m1_loss_mask_3: 0.1388  m1_loss_dice_3: 1.046  m1_loss_ce_4: 0.3356  m1_loss_mask_4: 0.1362  m1_loss_dice_4: 1.031  m1_loss_ce_5: 0.3611  m1_loss_mask_5: 0.137  m1_loss_dice_5: 1.027  m1_loss_ce_6: 0.333  m1_loss_mask_6: 0.1355  m1_loss_dice_6: 1.008  m1_loss_ce_7: 0.3392  m1_loss_mask_7: 0.135  m1_loss_dice_7: 0.9359  m1_loss_ce_8: 0.3238  m1_loss_mask_8: 0.1368  m1_loss_dice_8: 1.033  m2_loss_ce: 0.3831  m2_loss_mask: 0.1443  m2_loss_dice: 1.048  m2_loss_ce_0: 0.4741  m2_loss_mask_0: 0.1591  m2_loss_dice_0: 1.201  m2_loss_ce_1: 0.549  m2_loss_mask_1: 0.1547  m2_loss_dice_1: 1.144  m2_loss_ce_2: 0.4864  m2_loss_mask_2: 0.147  m2_loss_dice_2: 1.124  m2_loss_ce_3: 0.4402  m2_loss_mask_3: 0.1475  m2_loss_dice_3: 1.044  m2_loss_ce_4: 0.4003  m2_loss_mask_4: 0.1458  m2_loss_dice_4: 1.059  m2_loss_ce_5: 0.3953  m2_loss_mask_5: 0.1442  m2_loss_dice_5: 1.049  m2_loss_ce_6: 0.3868  m2_loss_mask_6: 0.1448  m2_loss_dice_6: 1.003  m2_loss_ce_7: 0.387  m2_loss_mask_7: 0.1446  m2_loss_dice_7: 1.026  m2_loss_ce_8: 0.4107  m2_loss_mask_8: 0.1441  m2_loss_dice_8: 1.032  com_loss_ce: 1.706  com_loss_mask: 0.6927  com_loss_dice: 0.9717    time: 1.7100  last_time: 1.6540  data_time: 0.0432  last_data_time: 0.0415   lr: 0.0001  max_mem: 37589M
[09/08 21:39:14] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_2000_2_softmax_entropy_2000_1000/model_final.pth
[09/08 21:39:20] d2.utils.events INFO:  eta: 0:00:00  iter: 1999  total_loss: 39.94  m1_loss_ce: 0.3783  m1_loss_mask: 0.134  m1_loss_dice: 1.155  m1_loss_ce_0: 0.486  m1_loss_mask_0: 0.1577  m1_loss_dice_0: 1.356  m1_loss_ce_1: 0.5133  m1_loss_mask_1: 0.1456  m1_loss_dice_1: 1.276  m1_loss_ce_2: 0.4811  m1_loss_mask_2: 0.1405  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.3899  m1_loss_mask_3: 0.1369  m1_loss_dice_3: 1.161  m1_loss_ce_4: 0.3802  m1_loss_mask_4: 0.1389  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.3639  m1_loss_mask_5: 0.1346  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.3659  m1_loss_mask_6: 0.1339  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.3551  m1_loss_mask_7: 0.1353  m1_loss_dice_7: 1.16  m1_loss_ce_8: 0.3432  m1_loss_mask_8: 0.1352  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4547  m2_loss_mask: 0.1457  m2_loss_dice: 1.19  m2_loss_ce_0: 0.5436  m2_loss_mask_0: 0.1603  m2_loss_dice_0: 1.366  m2_loss_ce_1: 0.5763  m2_loss_mask_1: 0.1612  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.528  m2_loss_mask_2: 0.1519  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.4812  m2_loss_mask_3: 0.1454  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.4826  m2_loss_mask_4: 0.1455  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.4616  m2_loss_mask_5: 0.1453  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4547  m2_loss_mask_6: 0.1431  m2_loss_dice_6: 1.174  m2_loss_ce_7: 0.4662  m2_loss_mask_7: 0.1415  m2_loss_dice_7: 1.196  m2_loss_ce_8: 0.4392  m2_loss_mask_8: 0.1451  m2_loss_dice_8: 1.211  com_loss_ce: 1.728  com_loss_mask: 0.6927  com_loss_dice: 0.9743    time: 1.7100  last_time: 1.6668  data_time: 0.0526  last_data_time: 0.0466   lr: 0.0001  max_mem: 37589M
[09/08 21:39:20] d2.engine.hooks INFO: Overall training speed: 1998 iterations in 0:56:56 (1.7100 s / it)
[09/08 21:39:20] d2.engine.hooks INFO: Total training time: 0:57:16 (0:00:19 on hooks)
[09/08 21:39:20] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/08 21:39:20] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/08 21:39:20] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/08 21:39:20] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/08 21:39:20] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/08 21:41:02] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalpwqpa5i2 ...
[09/08 21:42:06] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 61.283 | 81.568 | 74.280 |      19       |
| Things | 52.397 | 80.748 | 64.816 |       8       |
| Stuff  | 67.745 | 82.165 | 81.163 |      11       |
[09/08 21:42:06] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.398 | 97.803 | 99.586 |     Stuff     |
| class_8  | 76.200 | 84.594 | 90.076 |     Stuff     |
| class_11 | 88.397 | 90.523 | 97.651 |     Stuff     |
| class_12 | 47.612 | 79.980 | 59.530 |     Stuff     |
| class_13 | 41.533 | 76.023 | 54.632 |     Stuff     |
| class_17 | 53.486 | 65.679 | 81.436 |     Stuff     |
| class_19 | 52.883 | 71.000 | 74.483 |     Stuff     |
| class_20 | 69.808 | 78.913 | 88.462 |     Stuff     |
| class_21 | 89.872 | 90.898 | 98.872 |     Stuff     |
| class_22 | 39.807 | 76.636 | 51.943 |     Stuff     |
| class_23 | 88.201 | 91.762 | 96.119 |     Stuff     |
| class_24 | 55.415 | 77.537 | 71.468 |    Things     |
| class_25 | 49.819 | 73.573 | 67.713 |    Things     |
| class_26 | 66.694 | 83.059 | 80.297 |    Things     |
| class_27 | 51.645 | 86.981 | 59.375 |    Things     |
| class_28 | 65.534 | 89.999 | 72.816 |    Things     |
| class_31 | 45.566 | 86.070 | 52.941 |    Things     |
| class_32 | 39.283 | 76.436 | 51.393 |    Things     |
| class_33 | 45.222 | 72.329 | 62.522 |    Things     |
[09/08 21:42:06] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/08 21:42:06] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/08 21:42:06] d2.evaluation.testing INFO: copypaste: 61.2827,81.5682,74.2797,52.3972,80.7482,64.8158,67.7449,82.1645,81.1626,97.3978,97.8027,99.5859,76.1995,84.5944,90.0763,88.3965,90.5232,97.6507,47.6120,79.9798,59.5300,41.5326,76.0227,54.6318,53.4859,65.6786,81.4359,52.8825,70.9997,74.4828,69.8080,78.9134,88.4615,89.8722,90.8977,98.8718,39.8066,76.6356,51.9427,88.2006,91.7621,96.1187,55.4147,77.5375,71.4682,49.8191,73.5735,67.7134,66.6941,83.0592,80.2971,51.6449,86.9809,59.3750,65.5336,89.9995,72.8155,45.5665,86.0700,52.9412,39.2829,76.4361,51.3932,45.2219,72.3292,62.5224
