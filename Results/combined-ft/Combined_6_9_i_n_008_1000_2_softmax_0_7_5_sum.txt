[08/18 23:59:52] detectron2 INFO: Rank of current process: 0. World size: 2
[08/18 23:59:53] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/18 23:59:53] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_0_7_5_sum.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/18 23:59:53] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_0_7_5_sum.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_5_sum
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/18 23:59:53] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_5_sum
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/18 23:59:53] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_5_sum/config.yaml
[08/18 23:59:53] d2.utils.env INFO: Using a generated random seed 55896367
[08/18 23:59:57] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/18 23:59:57] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/18 23:59:58] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/18 23:59:58] d2.data.build INFO: Using training sampler TrainingSampler
[08/18 23:59:59] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/18 23:59:59] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/18 23:59:59] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/18 23:59:59] d2.data.build INFO: Making batched data loader with batch_size=4
[08/18 23:59:59] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/19 00:00:02] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 00:00:02] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 00:00:02] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 00:00:03] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 00:00:03] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 00:00:39] d2.utils.events INFO:  eta: 0:23:51  iter: 19  total_loss: 45.02  m1_loss_ce: 0.5709  m1_loss_mask: 0.1613  m1_loss_dice: 1.225  m1_loss_ce_0: 0.6716  m1_loss_mask_0: 0.1931  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6869  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.6555  m1_loss_mask_2: 0.1621  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.6087  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.587  m1_loss_mask_4: 0.1626  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.5926  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.27  m1_loss_ce_6: 0.561  m1_loss_mask_6: 0.1611  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.5771  m1_loss_mask_7: 0.1619  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.5507  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.255  m2_loss_ce: 0.5629  m2_loss_mask: 0.1572  m2_loss_dice: 1.19  m2_loss_ce_0: 0.6495  m2_loss_mask_0: 0.1854  m2_loss_dice_0: 1.476  m2_loss_ce_1: 0.677  m2_loss_mask_1: 0.1683  m2_loss_dice_1: 1.35  m2_loss_ce_2: 0.6411  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.611  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5668  m2_loss_mask_4: 0.1573  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5916  m2_loss_mask_5: 0.1576  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5454  m2_loss_mask_6: 0.1572  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.544  m2_loss_mask_7: 0.1573  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.5347  m2_loss_mask_8: 0.1547  m2_loss_dice_8: 1.215  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9799    time: 1.4740  last_time: 1.4562  data_time: 0.2227  last_data_time: 0.0433   lr: 0.0001  max_mem: 34761M
[08/19 00:01:08] d2.utils.events INFO:  eta: 0:23:19  iter: 39  total_loss: 46.2  m1_loss_ce: 0.6115  m1_loss_mask: 0.1658  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6685  m1_loss_mask_0: 0.1922  m1_loss_dice_0: 1.495  m1_loss_ce_1: 0.7618  m1_loss_mask_1: 0.1716  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.692  m1_loss_mask_2: 0.1694  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.6332  m1_loss_mask_3: 0.1723  m1_loss_dice_3: 1.29  m1_loss_ce_4: 0.6211  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.5979  m1_loss_mask_5: 0.1696  m1_loss_dice_5: 1.302  m1_loss_ce_6: 0.5984  m1_loss_mask_6: 0.1674  m1_loss_dice_6: 1.259  m1_loss_ce_7: 0.5951  m1_loss_mask_7: 0.165  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.5835  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.272  m2_loss_ce: 0.5768  m2_loss_mask: 0.1587  m2_loss_dice: 1.28  m2_loss_ce_0: 0.6454  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.484  m2_loss_ce_1: 0.7318  m2_loss_mask_1: 0.1733  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.6693  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.6171  m2_loss_mask_3: 0.1585  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.5884  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5725  m2_loss_mask_5: 0.162  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.5255  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.5485  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.5587  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.275  com_loss_ce: 2.152  com_loss_mask: 0.6936  com_loss_dice: 0.9809    time: 1.4629  last_time: 1.4833  data_time: 0.0424  last_data_time: 0.0532   lr: 0.0001  max_mem: 34761M
[08/19 00:01:38] d2.utils.events INFO:  eta: 0:22:49  iter: 59  total_loss: 43.46  m1_loss_ce: 0.4968  m1_loss_mask: 0.1766  m1_loss_dice: 1.21  m1_loss_ce_0: 0.6053  m1_loss_mask_0: 0.2042  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.6484  m1_loss_mask_1: 0.1885  m1_loss_dice_1: 1.383  m1_loss_ce_2: 0.5902  m1_loss_mask_2: 0.1823  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.5571  m1_loss_mask_3: 0.1809  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5267  m1_loss_mask_4: 0.177  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.5256  m1_loss_mask_5: 0.1763  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5192  m1_loss_mask_6: 0.1766  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.5315  m1_loss_mask_7: 0.1758  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.5121  m1_loss_mask_8: 0.1765  m1_loss_dice_8: 1.244  m2_loss_ce: 0.5034  m2_loss_mask: 0.1811  m2_loss_dice: 1.188  m2_loss_ce_0: 0.5856  m2_loss_mask_0: 0.2046  m2_loss_dice_0: 1.42  m2_loss_ce_1: 0.6612  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.5902  m2_loss_mask_2: 0.181  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.5275  m2_loss_mask_3: 0.1839  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5226  m2_loss_mask_4: 0.1817  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.4732  m2_loss_mask_5: 0.181  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4891  m2_loss_mask_6: 0.1801  m2_loss_dice_6: 1.201  m2_loss_ce_7: 0.4745  m2_loss_mask_7: 0.1795  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4836  m2_loss_mask_8: 0.1815  m2_loss_dice_8: 1.214  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.9786    time: 1.4605  last_time: 1.4681  data_time: 0.0433  last_data_time: 0.0441   lr: 0.0001  max_mem: 34761M
[08/19 00:02:07] d2.utils.events INFO:  eta: 0:22:21  iter: 79  total_loss: 41.35  m1_loss_ce: 0.5077  m1_loss_mask: 0.1686  m1_loss_dice: 1.125  m1_loss_ce_0: 0.595  m1_loss_mask_0: 0.1983  m1_loss_dice_0: 1.335  m1_loss_ce_1: 0.6865  m1_loss_mask_1: 0.1752  m1_loss_dice_1: 1.25  m1_loss_ce_2: 0.6019  m1_loss_mask_2: 0.1783  m1_loss_dice_2: 1.224  m1_loss_ce_3: 0.5581  m1_loss_mask_3: 0.1782  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.5227  m1_loss_mask_4: 0.1747  m1_loss_dice_4: 1.167  m1_loss_ce_5: 0.5374  m1_loss_mask_5: 0.1706  m1_loss_dice_5: 1.147  m1_loss_ce_6: 0.5211  m1_loss_mask_6: 0.1688  m1_loss_dice_6: 1.124  m1_loss_ce_7: 0.503  m1_loss_mask_7: 0.1665  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.5074  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.138  m2_loss_ce: 0.4431  m2_loss_mask: 0.1675  m2_loss_dice: 1.149  m2_loss_ce_0: 0.6027  m2_loss_mask_0: 0.1909  m2_loss_dice_0: 1.358  m2_loss_ce_1: 0.6261  m2_loss_mask_1: 0.1761  m2_loss_dice_1: 1.269  m2_loss_ce_2: 0.563  m2_loss_mask_2: 0.1706  m2_loss_dice_2: 1.165  m2_loss_ce_3: 0.501  m2_loss_mask_3: 0.167  m2_loss_dice_3: 1.161  m2_loss_ce_4: 0.4825  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.137  m2_loss_ce_5: 0.4937  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.131  m2_loss_ce_6: 0.4717  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.102  m2_loss_ce_7: 0.483  m2_loss_mask_7: 0.17  m2_loss_dice_7: 1.145  m2_loss_ce_8: 0.4498  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.135  com_loss_ce: 2.14  com_loss_mask: 0.6935  com_loss_dice: 0.9793    time: 1.4606  last_time: 1.5031  data_time: 0.0416  last_data_time: 0.0399   lr: 0.0001  max_mem: 35104M
[08/19 00:02:36] d2.utils.events INFO:  eta: 0:21:52  iter: 99  total_loss: 43.99  m1_loss_ce: 0.602  m1_loss_mask: 0.1759  m1_loss_dice: 1.169  m1_loss_ce_0: 0.6998  m1_loss_mask_0: 0.1918  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.7258  m1_loss_mask_1: 0.1838  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.7095  m1_loss_mask_2: 0.1762  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5914  m1_loss_mask_3: 0.1772  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.6107  m1_loss_mask_4: 0.1738  m1_loss_dice_4: 1.173  m1_loss_ce_5: 0.5705  m1_loss_mask_5: 0.1744  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.5724  m1_loss_mask_6: 0.1753  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.5729  m1_loss_mask_7: 0.1756  m1_loss_dice_7: 1.177  m1_loss_ce_8: 0.5726  m1_loss_mask_8: 0.1739  m1_loss_dice_8: 1.215  m2_loss_ce: 0.5391  m2_loss_mask: 0.1663  m2_loss_dice: 1.2  m2_loss_ce_0: 0.6635  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.383  m2_loss_ce_1: 0.7037  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6611  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.277  m2_loss_ce_3: 0.6178  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.5762  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.5688  m2_loss_mask_5: 0.1657  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.5282  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5148  m2_loss_mask_7: 0.1643  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.5142  m2_loss_mask_8: 0.1664  m2_loss_dice_8: 1.187  com_loss_ce: 2.149  com_loss_mask: 0.6936  com_loss_dice: 0.9795    time: 1.4602  last_time: 1.4757  data_time: 0.0404  last_data_time: 0.0467   lr: 0.0001  max_mem: 35104M
[08/19 00:03:05] d2.utils.events INFO:  eta: 0:21:19  iter: 119  total_loss: 44.01  m1_loss_ce: 0.5427  m1_loss_mask: 0.1639  m1_loss_dice: 1.24  m1_loss_ce_0: 0.6071  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.456  m1_loss_ce_1: 0.6644  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.6399  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.5738  m1_loss_mask_3: 0.1655  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5601  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5587  m1_loss_mask_5: 0.1644  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.5231  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.5332  m1_loss_mask_7: 0.1618  m1_loss_dice_7: 1.234  m1_loss_ce_8: 0.5273  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.221  m2_loss_ce: 0.5269  m2_loss_mask: 0.1591  m2_loss_dice: 1.214  m2_loss_ce_0: 0.5962  m2_loss_mask_0: 0.188  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6566  m2_loss_mask_1: 0.1703  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.6135  m2_loss_mask_2: 0.1619  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.5789  m2_loss_mask_3: 0.1561  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5391  m2_loss_mask_4: 0.1605  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5307  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.544  m2_loss_mask_6: 0.1583  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.514  m2_loss_mask_7: 0.1604  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.5171  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.231  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9795    time: 1.4543  last_time: 1.4490  data_time: 0.0411  last_data_time: 0.0430   lr: 0.0001  max_mem: 35104M
[08/19 00:03:34] d2.utils.events INFO:  eta: 0:20:48  iter: 139  total_loss: 44.94  m1_loss_ce: 0.5706  m1_loss_mask: 0.1677  m1_loss_dice: 1.205  m1_loss_ce_0: 0.6551  m1_loss_mask_0: 0.1948  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.7013  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.635  m1_loss_mask_2: 0.1686  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.6232  m1_loss_mask_3: 0.1686  m1_loss_dice_3: 1.268  m1_loss_ce_4: 0.576  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5854  m1_loss_mask_5: 0.1672  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.5875  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.5622  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.5663  m1_loss_mask_8: 0.1696  m1_loss_dice_8: 1.199  m2_loss_ce: 0.5269  m2_loss_mask: 0.1629  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6039  m2_loss_mask_0: 0.1927  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.686  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.6146  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5664  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5635  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5483  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.5409  m2_loss_mask_6: 0.1611  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.5416  m2_loss_mask_7: 0.1622  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.5377  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.234  com_loss_ce: 2.15  com_loss_mask: 0.6936  com_loss_dice: 0.9805    time: 1.4534  last_time: 1.4510  data_time: 0.0472  last_data_time: 0.0519   lr: 0.0001  max_mem: 35104M
[08/19 00:04:03] d2.utils.events INFO:  eta: 0:20:19  iter: 159  total_loss: 43.42  m1_loss_ce: 0.5682  m1_loss_mask: 0.1566  m1_loss_dice: 1.181  m1_loss_ce_0: 0.6727  m1_loss_mask_0: 0.1859  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.7579  m1_loss_mask_1: 0.1679  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.6834  m1_loss_mask_2: 0.161  m1_loss_dice_2: 1.239  m1_loss_ce_3: 0.598  m1_loss_mask_3: 0.1574  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.6272  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.5648  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.6024  m1_loss_mask_6: 0.1579  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.5633  m1_loss_mask_7: 0.1583  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.5617  m1_loss_mask_8: 0.1569  m1_loss_dice_8: 1.193  m2_loss_ce: 0.5854  m2_loss_mask: 0.1536  m2_loss_dice: 1.162  m2_loss_ce_0: 0.6349  m2_loss_mask_0: 0.1832  m2_loss_dice_0: 1.38  m2_loss_ce_1: 0.7059  m2_loss_mask_1: 0.1708  m2_loss_dice_1: 1.311  m2_loss_ce_2: 0.6588  m2_loss_mask_2: 0.1619  m2_loss_dice_2: 1.255  m2_loss_ce_3: 0.6018  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.199  m2_loss_ce_4: 0.621  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.219  m2_loss_ce_5: 0.5783  m2_loss_mask_5: 0.1576  m2_loss_dice_5: 1.185  m2_loss_ce_6: 0.5645  m2_loss_mask_6: 0.1549  m2_loss_dice_6: 1.145  m2_loss_ce_7: 0.5614  m2_loss_mask_7: 0.1558  m2_loss_dice_7: 1.161  m2_loss_ce_8: 0.5507  m2_loss_mask_8: 0.1535  m2_loss_dice_8: 1.192  com_loss_ce: 2.149  com_loss_mask: 0.6936  com_loss_dice: 0.9797    time: 1.4545  last_time: 1.4388  data_time: 0.0470  last_data_time: 0.0449   lr: 0.0001  max_mem: 35104M
[08/19 00:04:33] d2.utils.events INFO:  eta: 0:19:50  iter: 179  total_loss: 47.34  m1_loss_ce: 0.5627  m1_loss_mask: 0.1744  m1_loss_dice: 1.373  m1_loss_ce_0: 0.6622  m1_loss_mask_0: 0.2037  m1_loss_dice_0: 1.555  m1_loss_ce_1: 0.7025  m1_loss_mask_1: 0.1897  m1_loss_dice_1: 1.53  m1_loss_ce_2: 0.6616  m1_loss_mask_2: 0.1782  m1_loss_dice_2: 1.406  m1_loss_ce_3: 0.5791  m1_loss_mask_3: 0.1755  m1_loss_dice_3: 1.371  m1_loss_ce_4: 0.6112  m1_loss_mask_4: 0.1765  m1_loss_dice_4: 1.381  m1_loss_ce_5: 0.5761  m1_loss_mask_5: 0.1756  m1_loss_dice_5: 1.367  m1_loss_ce_6: 0.552  m1_loss_mask_6: 0.1731  m1_loss_dice_6: 1.288  m1_loss_ce_7: 0.5456  m1_loss_mask_7: 0.1742  m1_loss_dice_7: 1.324  m1_loss_ce_8: 0.547  m1_loss_mask_8: 0.1702  m1_loss_dice_8: 1.34  m2_loss_ce: 0.5488  m2_loss_mask: 0.1704  m2_loss_dice: 1.349  m2_loss_ce_0: 0.6464  m2_loss_mask_0: 0.2054  m2_loss_dice_0: 1.577  m2_loss_ce_1: 0.7056  m2_loss_mask_1: 0.1838  m2_loss_dice_1: 1.493  m2_loss_ce_2: 0.6689  m2_loss_mask_2: 0.1738  m2_loss_dice_2: 1.408  m2_loss_ce_3: 0.5973  m2_loss_mask_3: 0.1726  m2_loss_dice_3: 1.327  m2_loss_ce_4: 0.594  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.359  m2_loss_ce_5: 0.5805  m2_loss_mask_5: 0.1707  m2_loss_dice_5: 1.352  m2_loss_ce_6: 0.542  m2_loss_mask_6: 0.1703  m2_loss_dice_6: 1.328  m2_loss_ce_7: 0.5686  m2_loss_mask_7: 0.1695  m2_loss_dice_7: 1.352  m2_loss_ce_8: 0.5471  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.305  com_loss_ce: 2.149  com_loss_mask: 0.6936  com_loss_dice: 0.9809    time: 1.4545  last_time: 1.4854  data_time: 0.0481  last_data_time: 0.0525   lr: 0.0001  max_mem: 35104M
[08/19 00:05:01] d2.utils.events INFO:  eta: 0:19:19  iter: 199  total_loss: 44.88  m1_loss_ce: 0.5609  m1_loss_mask: 0.1695  m1_loss_dice: 1.173  m1_loss_ce_0: 0.6683  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.7317  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.6664  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.6011  m1_loss_mask_3: 0.1738  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.5785  m1_loss_mask_4: 0.1747  m1_loss_dice_4: 1.226  m1_loss_ce_5: 0.5818  m1_loss_mask_5: 0.1699  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.5557  m1_loss_mask_6: 0.1691  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.5638  m1_loss_mask_7: 0.1695  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.5626  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.217  m2_loss_ce: 0.5922  m2_loss_mask: 0.167  m2_loss_dice: 1.199  m2_loss_ce_0: 0.668  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6922  m2_loss_mask_1: 0.1815  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.6491  m2_loss_mask_2: 0.1703  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.6328  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.6151  m2_loss_mask_4: 0.1715  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.5798  m2_loss_mask_5: 0.1717  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5803  m2_loss_mask_6: 0.168  m2_loss_dice_6: 1.159  m2_loss_ce_7: 0.5773  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.5674  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.182  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9798    time: 1.4527  last_time: 1.3784  data_time: 0.0454  last_data_time: 0.0413   lr: 0.0001  max_mem: 35104M
[08/19 00:05:30] d2.utils.events INFO:  eta: 0:18:47  iter: 219  total_loss: 45.69  m1_loss_ce: 0.5436  m1_loss_mask: 0.1717  m1_loss_dice: 1.259  m1_loss_ce_0: 0.6571  m1_loss_mask_0: 0.2036  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6738  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.6151  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.334  m1_loss_ce_3: 0.5831  m1_loss_mask_3: 0.1738  m1_loss_dice_3: 1.27  m1_loss_ce_4: 0.5744  m1_loss_mask_4: 0.1767  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5446  m1_loss_mask_5: 0.1741  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.6064  m1_loss_mask_6: 0.1728  m1_loss_dice_6: 1.283  m1_loss_ce_7: 0.549  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.5664  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.236  m2_loss_ce: 0.5453  m2_loss_mask: 0.1696  m2_loss_dice: 1.254  m2_loss_ce_0: 0.6401  m2_loss_mask_0: 0.2032  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6687  m2_loss_mask_1: 0.1836  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.6522  m2_loss_mask_2: 0.1739  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.5647  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5682  m2_loss_mask_4: 0.1744  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5689  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.276  m2_loss_ce_6: 0.5169  m2_loss_mask_6: 0.1726  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5242  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.5259  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.251  com_loss_ce: 2.146  com_loss_mask: 0.6936  com_loss_dice: 0.9793    time: 1.4507  last_time: 1.3669  data_time: 0.0472  last_data_time: 0.0393   lr: 0.0001  max_mem: 35104M
[08/19 00:05:59] d2.utils.events INFO:  eta: 0:18:16  iter: 239  total_loss: 46.33  m1_loss_ce: 0.5499  m1_loss_mask: 0.1638  m1_loss_dice: 1.252  m1_loss_ce_0: 0.668  m1_loss_mask_0: 0.1885  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.716  m1_loss_mask_1: 0.1738  m1_loss_dice_1: 1.405  m1_loss_ce_2: 0.7027  m1_loss_mask_2: 0.1649  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.6023  m1_loss_mask_3: 0.1668  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.5785  m1_loss_mask_4: 0.1648  m1_loss_dice_4: 1.293  m1_loss_ce_5: 0.5439  m1_loss_mask_5: 0.1644  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.5604  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.248  m1_loss_ce_7: 0.5633  m1_loss_mask_7: 0.1664  m1_loss_dice_7: 1.252  m1_loss_ce_8: 0.5578  m1_loss_mask_8: 0.1636  m1_loss_dice_8: 1.244  m2_loss_ce: 0.5225  m2_loss_mask: 0.1572  m2_loss_dice: 1.234  m2_loss_ce_0: 0.641  m2_loss_mask_0: 0.1915  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.701  m2_loss_mask_1: 0.1727  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.653  m2_loss_mask_2: 0.1636  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.6108  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5836  m2_loss_mask_4: 0.1635  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5708  m2_loss_mask_5: 0.1573  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.573  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.228  m2_loss_ce_7: 0.5454  m2_loss_mask_7: 0.161  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.539  m2_loss_mask_8: 0.1579  m2_loss_dice_8: 1.21  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9796    time: 1.4491  last_time: 1.4423  data_time: 0.0444  last_data_time: 0.0546   lr: 0.0001  max_mem: 35104M
[08/19 00:06:28] d2.utils.events INFO:  eta: 0:17:47  iter: 259  total_loss: 45.22  m1_loss_ce: 0.5295  m1_loss_mask: 0.1654  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6252  m1_loss_mask_0: 0.2002  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.7075  m1_loss_mask_1: 0.1936  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.6455  m1_loss_mask_2: 0.177  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.6142  m1_loss_mask_3: 0.1766  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.5637  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5564  m1_loss_mask_5: 0.1673  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5706  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.53  m1_loss_mask_7: 0.168  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.5217  m1_loss_mask_8: 0.1672  m1_loss_dice_8: 1.217  m2_loss_ce: 0.5266  m2_loss_mask: 0.1751  m2_loss_dice: 1.213  m2_loss_ce_0: 0.616  m2_loss_mask_0: 0.2043  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6563  m2_loss_mask_1: 0.1884  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.682  m2_loss_mask_2: 0.1837  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5911  m2_loss_mask_3: 0.1763  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.539  m2_loss_mask_4: 0.1757  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5591  m2_loss_mask_5: 0.1759  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.5179  m2_loss_mask_6: 0.1743  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5301  m2_loss_mask_7: 0.1733  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.5333  m2_loss_mask_8: 0.1733  m2_loss_dice_8: 1.233  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.979    time: 1.4485  last_time: 1.3932  data_time: 0.0414  last_data_time: 0.0379   lr: 0.0001  max_mem: 35104M
[08/19 00:06:57] d2.utils.events INFO:  eta: 0:17:19  iter: 279  total_loss: 45.17  m1_loss_ce: 0.5293  m1_loss_mask: 0.1604  m1_loss_dice: 1.279  m1_loss_ce_0: 0.6493  m1_loss_mask_0: 0.1807  m1_loss_dice_0: 1.494  m1_loss_ce_1: 0.6935  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.439  m1_loss_ce_2: 0.6538  m1_loss_mask_2: 0.1566  m1_loss_dice_2: 1.359  m1_loss_ce_3: 0.5907  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.31  m1_loss_ce_4: 0.5679  m1_loss_mask_4: 0.1547  m1_loss_dice_4: 1.31  m1_loss_ce_5: 0.551  m1_loss_mask_5: 0.1542  m1_loss_dice_5: 1.307  m1_loss_ce_6: 0.5482  m1_loss_mask_6: 0.1544  m1_loss_dice_6: 1.255  m1_loss_ce_7: 0.5414  m1_loss_mask_7: 0.1567  m1_loss_dice_7: 1.286  m1_loss_ce_8: 0.5761  m1_loss_mask_8: 0.1595  m1_loss_dice_8: 1.278  m2_loss_ce: 0.5393  m2_loss_mask: 0.1538  m2_loss_dice: 1.291  m2_loss_ce_0: 0.6482  m2_loss_mask_0: 0.1885  m2_loss_dice_0: 1.514  m2_loss_ce_1: 0.6789  m2_loss_mask_1: 0.1694  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.6395  m2_loss_mask_2: 0.1575  m2_loss_dice_2: 1.337  m2_loss_ce_3: 0.5882  m2_loss_mask_3: 0.1559  m2_loss_dice_3: 1.305  m2_loss_ce_4: 0.5732  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.5752  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.309  m2_loss_ce_6: 0.5532  m2_loss_mask_6: 0.1574  m2_loss_dice_6: 1.292  m2_loss_ce_7: 0.5433  m2_loss_mask_7: 0.1553  m2_loss_dice_7: 1.288  m2_loss_ce_8: 0.5376  m2_loss_mask_8: 0.1552  m2_loss_dice_8: 1.296  com_loss_ce: 2.148  com_loss_mask: 0.6936  com_loss_dice: 0.9809    time: 1.4495  last_time: 1.4979  data_time: 0.0472  last_data_time: 0.0362   lr: 0.0001  max_mem: 35104M
[08/19 00:07:26] d2.utils.events INFO:  eta: 0:16:50  iter: 299  total_loss: 47.43  m1_loss_ce: 0.5715  m1_loss_mask: 0.1743  m1_loss_dice: 1.314  m1_loss_ce_0: 0.6535  m1_loss_mask_0: 0.2048  m1_loss_dice_0: 1.543  m1_loss_ce_1: 0.7201  m1_loss_mask_1: 0.1929  m1_loss_dice_1: 1.437  m1_loss_ce_2: 0.7092  m1_loss_mask_2: 0.1822  m1_loss_dice_2: 1.373  m1_loss_ce_3: 0.6529  m1_loss_mask_3: 0.1791  m1_loss_dice_3: 1.321  m1_loss_ce_4: 0.6339  m1_loss_mask_4: 0.1759  m1_loss_dice_4: 1.333  m1_loss_ce_5: 0.621  m1_loss_mask_5: 0.177  m1_loss_dice_5: 1.323  m1_loss_ce_6: 0.6138  m1_loss_mask_6: 0.1771  m1_loss_dice_6: 1.302  m1_loss_ce_7: 0.6015  m1_loss_mask_7: 0.1719  m1_loss_dice_7: 1.33  m1_loss_ce_8: 0.5616  m1_loss_mask_8: 0.1742  m1_loss_dice_8: 1.323  m2_loss_ce: 0.5587  m2_loss_mask: 0.1745  m2_loss_dice: 1.307  m2_loss_ce_0: 0.6464  m2_loss_mask_0: 0.2132  m2_loss_dice_0: 1.608  m2_loss_ce_1: 0.6962  m2_loss_mask_1: 0.1921  m2_loss_dice_1: 1.48  m2_loss_ce_2: 0.6767  m2_loss_mask_2: 0.1846  m2_loss_dice_2: 1.423  m2_loss_ce_3: 0.6046  m2_loss_mask_3: 0.1793  m2_loss_dice_3: 1.332  m2_loss_ce_4: 0.6129  m2_loss_mask_4: 0.179  m2_loss_dice_4: 1.342  m2_loss_ce_5: 0.6016  m2_loss_mask_5: 0.1774  m2_loss_dice_5: 1.321  m2_loss_ce_6: 0.6065  m2_loss_mask_6: 0.1787  m2_loss_dice_6: 1.301  m2_loss_ce_7: 0.596  m2_loss_mask_7: 0.1779  m2_loss_dice_7: 1.324  m2_loss_ce_8: 0.5695  m2_loss_mask_8: 0.1746  m2_loss_dice_8: 1.28  com_loss_ce: 2.149  com_loss_mask: 0.6936  com_loss_dice: 0.9809    time: 1.4500  last_time: 1.4149  data_time: 0.0430  last_data_time: 0.0489   lr: 0.0001  max_mem: 35104M
[08/19 00:07:55] d2.utils.events INFO:  eta: 0:16:20  iter: 319  total_loss: 45.99  m1_loss_ce: 0.55  m1_loss_mask: 0.1804  m1_loss_dice: 1.236  m1_loss_ce_0: 0.6288  m1_loss_mask_0: 0.2034  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.7198  m1_loss_mask_1: 0.1918  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.6633  m1_loss_mask_2: 0.1802  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.6251  m1_loss_mask_3: 0.182  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.595  m1_loss_mask_4: 0.1771  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.5728  m1_loss_mask_5: 0.178  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.5736  m1_loss_mask_6: 0.1793  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.5594  m1_loss_mask_7: 0.1797  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.5389  m1_loss_mask_8: 0.1795  m1_loss_dice_8: 1.222  m2_loss_ce: 0.5515  m2_loss_mask: 0.1763  m2_loss_dice: 1.259  m2_loss_ce_0: 0.6344  m2_loss_mask_0: 0.2136  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.725  m2_loss_mask_1: 0.1881  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.6757  m2_loss_mask_2: 0.1788  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.599  m2_loss_mask_3: 0.1751  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.5878  m2_loss_mask_4: 0.1752  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.5721  m2_loss_mask_5: 0.1823  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5494  m2_loss_mask_6: 0.1752  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5457  m2_loss_mask_7: 0.1788  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.5253  m2_loss_mask_8: 0.1782  m2_loss_dice_8: 1.255  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9798    time: 1.4486  last_time: 1.4265  data_time: 0.0406  last_data_time: 0.0444   lr: 0.0001  max_mem: 35104M
[08/19 00:08:25] d2.utils.events INFO:  eta: 0:15:53  iter: 339  total_loss: 44.33  m1_loss_ce: 0.4846  m1_loss_mask: 0.1558  m1_loss_dice: 1.234  m1_loss_ce_0: 0.5786  m1_loss_mask_0: 0.1742  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.6723  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.622  m1_loss_mask_2: 0.1593  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5893  m1_loss_mask_3: 0.1569  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.5593  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.5491  m1_loss_mask_5: 0.1533  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.5339  m1_loss_mask_6: 0.1545  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.5202  m1_loss_mask_7: 0.1552  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4899  m1_loss_mask_8: 0.157  m1_loss_dice_8: 1.23  m2_loss_ce: 0.5148  m2_loss_mask: 0.1544  m2_loss_dice: 1.197  m2_loss_ce_0: 0.6222  m2_loss_mask_0: 0.1835  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.6553  m2_loss_mask_1: 0.1665  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.602  m2_loss_mask_2: 0.1597  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5745  m2_loss_mask_3: 0.1598  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5565  m2_loss_mask_4: 0.1579  m2_loss_dice_4: 1.223  m2_loss_ce_5: 0.5365  m2_loss_mask_5: 0.1568  m2_loss_dice_5: 1.233  m2_loss_ce_6: 0.5226  m2_loss_mask_6: 0.1553  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5208  m2_loss_mask_7: 0.1547  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.4977  m2_loss_mask_8: 0.1552  m2_loss_dice_8: 1.208  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9807    time: 1.4494  last_time: 1.4145  data_time: 0.0422  last_data_time: 0.0372   lr: 0.0001  max_mem: 35104M
[08/19 00:08:54] d2.utils.events INFO:  eta: 0:15:24  iter: 359  total_loss: 43.44  m1_loss_ce: 0.492  m1_loss_mask: 0.1641  m1_loss_dice: 1.193  m1_loss_ce_0: 0.6156  m1_loss_mask_0: 0.1977  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.6641  m1_loss_mask_1: 0.1886  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.6049  m1_loss_mask_2: 0.1729  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5858  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.5472  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.533  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5399  m1_loss_mask_6: 0.1629  m1_loss_dice_6: 1.16  m1_loss_ce_7: 0.5061  m1_loss_mask_7: 0.1637  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5007  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.204  m2_loss_ce: 0.4847  m2_loss_mask: 0.167  m2_loss_dice: 1.176  m2_loss_ce_0: 0.6137  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.409  m2_loss_ce_1: 0.6488  m2_loss_mask_1: 0.1785  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.6153  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.237  m2_loss_ce_3: 0.5598  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5475  m2_loss_mask_4: 0.1717  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.4917  m2_loss_mask_5: 0.1689  m2_loss_dice_5: 1.171  m2_loss_ce_6: 0.5088  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.4879  m2_loss_mask_7: 0.1669  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.4917  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.166  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9797    time: 1.4492  last_time: 1.4450  data_time: 0.0414  last_data_time: 0.0371   lr: 0.0001  max_mem: 35104M
[08/19 00:09:23] d2.utils.events INFO:  eta: 0:14:55  iter: 379  total_loss: 44.92  m1_loss_ce: 0.4736  m1_loss_mask: 0.1675  m1_loss_dice: 1.251  m1_loss_ce_0: 0.6143  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.6594  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5997  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5537  m1_loss_mask_3: 0.1693  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5405  m1_loss_mask_4: 0.1707  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.5473  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4989  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.503  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4903  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4967  m2_loss_mask: 0.1706  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6177  m2_loss_mask_0: 0.202  m2_loss_dice_0: 1.522  m2_loss_ce_1: 0.6587  m2_loss_mask_1: 0.177  m2_loss_dice_1: 1.338  m2_loss_ce_2: 0.6285  m2_loss_mask_2: 0.1739  m2_loss_dice_2: 1.286  m2_loss_ce_3: 0.5633  m2_loss_mask_3: 0.172  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.5429  m2_loss_mask_4: 0.1737  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5173  m2_loss_mask_5: 0.1717  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.5131  m2_loss_mask_6: 0.1706  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.5092  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.5087  m2_loss_mask_8: 0.1708  m2_loss_dice_8: 1.274  com_loss_ce: 2.141  com_loss_mask: 0.6936  com_loss_dice: 0.9778    time: 1.4495  last_time: 1.4870  data_time: 0.0399  last_data_time: 0.0348   lr: 0.0001  max_mem: 35104M
[08/19 00:09:52] d2.utils.events INFO:  eta: 0:14:27  iter: 399  total_loss: 44.48  m1_loss_ce: 0.527  m1_loss_mask: 0.1584  m1_loss_dice: 1.202  m1_loss_ce_0: 0.6414  m1_loss_mask_0: 0.1879  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.7034  m1_loss_mask_1: 0.1739  m1_loss_dice_1: 1.377  m1_loss_ce_2: 0.6177  m1_loss_mask_2: 0.1611  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.5822  m1_loss_mask_3: 0.1633  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5418  m1_loss_mask_4: 0.1613  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.569  m1_loss_mask_5: 0.1591  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5211  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.5408  m1_loss_mask_7: 0.1591  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.5376  m1_loss_mask_8: 0.1593  m1_loss_dice_8: 1.194  m2_loss_ce: 0.5411  m2_loss_mask: 0.1652  m2_loss_dice: 1.222  m2_loss_ce_0: 0.6529  m2_loss_mask_0: 0.1917  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6682  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.6321  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.591  m2_loss_mask_3: 0.1708  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.5638  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.5534  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5416  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5326  m2_loss_mask_7: 0.166  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.5738  m2_loss_mask_8: 0.1655  m2_loss_dice_8: 1.235  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9798    time: 1.4502  last_time: 1.4457  data_time: 0.0430  last_data_time: 0.0407   lr: 0.0001  max_mem: 35104M
[08/19 00:10:21] d2.utils.events INFO:  eta: 0:13:57  iter: 419  total_loss: 43.93  m1_loss_ce: 0.5313  m1_loss_mask: 0.1733  m1_loss_dice: 1.154  m1_loss_ce_0: 0.6053  m1_loss_mask_0: 0.207  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.6546  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.6095  m1_loss_mask_2: 0.174  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.5536  m1_loss_mask_3: 0.1741  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.5364  m1_loss_mask_4: 0.1757  m1_loss_dice_4: 1.156  m1_loss_ce_5: 0.5167  m1_loss_mask_5: 0.1726  m1_loss_dice_5: 1.17  m1_loss_ce_6: 0.5194  m1_loss_mask_6: 0.1757  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.5241  m1_loss_mask_7: 0.1744  m1_loss_dice_7: 1.156  m1_loss_ce_8: 0.501  m1_loss_mask_8: 0.1724  m1_loss_dice_8: 1.168  m2_loss_ce: 0.5229  m2_loss_mask: 0.1793  m2_loss_dice: 1.183  m2_loss_ce_0: 0.5874  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.405  m2_loss_ce_1: 0.667  m2_loss_mask_1: 0.1871  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.6283  m2_loss_mask_2: 0.181  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5611  m2_loss_mask_3: 0.1813  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5532  m2_loss_mask_4: 0.1826  m2_loss_dice_4: 1.18  m2_loss_ce_5: 0.5655  m2_loss_mask_5: 0.1825  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.5316  m2_loss_mask_6: 0.1822  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.5258  m2_loss_mask_7: 0.1789  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.5351  m2_loss_mask_8: 0.1815  m2_loss_dice_8: 1.166  com_loss_ce: 2.144  com_loss_mask: 0.6936  com_loss_dice: 0.979    time: 1.4489  last_time: 1.4184  data_time: 0.0405  last_data_time: 0.0436   lr: 0.0001  max_mem: 35104M
[08/19 00:10:49] d2.utils.events INFO:  eta: 0:13:28  iter: 439  total_loss: 44.97  m1_loss_ce: 0.5251  m1_loss_mask: 0.1697  m1_loss_dice: 1.247  m1_loss_ce_0: 0.6413  m1_loss_mask_0: 0.2132  m1_loss_dice_0: 1.45  m1_loss_ce_1: 0.6978  m1_loss_mask_1: 0.1886  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.6031  m1_loss_mask_2: 0.1774  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.5694  m1_loss_mask_3: 0.1767  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5714  m1_loss_mask_4: 0.1744  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.5123  m1_loss_mask_5: 0.1742  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.5305  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.5303  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.5304  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5275  m2_loss_mask: 0.1822  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6141  m2_loss_mask_0: 0.2142  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6813  m2_loss_mask_1: 0.2064  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6098  m2_loss_mask_2: 0.1864  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5611  m2_loss_mask_3: 0.1822  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.531  m2_loss_mask_4: 0.1863  m2_loss_dice_4: 1.308  m2_loss_ce_5: 0.5407  m2_loss_mask_5: 0.1834  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.5341  m2_loss_mask_6: 0.1799  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5024  m2_loss_mask_7: 0.183  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.5322  m2_loss_mask_8: 0.1843  m2_loss_dice_8: 1.242  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9792    time: 1.4472  last_time: 1.5364  data_time: 0.0381  last_data_time: 0.0360   lr: 0.0001  max_mem: 35104M
[08/19 00:11:18] d2.utils.events INFO:  eta: 0:12:59  iter: 459  total_loss: 44.31  m1_loss_ce: 0.5006  m1_loss_mask: 0.1653  m1_loss_dice: 1.192  m1_loss_ce_0: 0.577  m1_loss_mask_0: 0.1886  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.6142  m1_loss_mask_1: 0.1803  m1_loss_dice_1: 1.374  m1_loss_ce_2: 0.5761  m1_loss_mask_2: 0.1732  m1_loss_dice_2: 1.313  m1_loss_ce_3: 0.5359  m1_loss_mask_3: 0.1696  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5373  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.5055  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.5322  m1_loss_mask_6: 0.165  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.5083  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4972  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5155  m2_loss_mask: 0.1673  m2_loss_dice: 1.205  m2_loss_ce_0: 0.5861  m2_loss_mask_0: 0.212  m2_loss_dice_0: 1.486  m2_loss_ce_1: 0.6404  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.382  m2_loss_ce_2: 0.6178  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.558  m2_loss_mask_3: 0.1696  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5175  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.4947  m2_loss_mask_5: 0.1684  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.5303  m2_loss_mask_6: 0.1691  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.509  m2_loss_mask_7: 0.1681  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.5017  m2_loss_mask_8: 0.1663  m2_loss_dice_8: 1.203  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.98    time: 1.4469  last_time: 1.4541  data_time: 0.0417  last_data_time: 0.0377   lr: 0.0001  max_mem: 35104M
[08/19 00:11:47] d2.utils.events INFO:  eta: 0:12:30  iter: 479  total_loss: 43.74  m1_loss_ce: 0.4886  m1_loss_mask: 0.1668  m1_loss_dice: 1.172  m1_loss_ce_0: 0.5942  m1_loss_mask_0: 0.1949  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.6305  m1_loss_mask_1: 0.1817  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5985  m1_loss_mask_2: 0.1702  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.5441  m1_loss_mask_3: 0.1668  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.5089  m1_loss_mask_4: 0.1691  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.5201  m1_loss_mask_5: 0.1677  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.4988  m1_loss_mask_6: 0.1649  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.5049  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.5024  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.2  m2_loss_ce: 0.4693  m2_loss_mask: 0.1681  m2_loss_dice: 1.198  m2_loss_ce_0: 0.6144  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.629  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.5781  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5491  m2_loss_mask_3: 0.172  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.5486  m2_loss_mask_4: 0.1739  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.4951  m2_loss_mask_5: 0.1732  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.5333  m2_loss_mask_6: 0.1731  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.5304  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.173  m2_loss_ce_8: 0.4976  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.194  com_loss_ce: 2.139  com_loss_mask: 0.6936  com_loss_dice: 0.9801    time: 1.4474  last_time: 1.4280  data_time: 0.0405  last_data_time: 0.0372   lr: 0.0001  max_mem: 35104M
[08/19 00:12:16] d2.utils.events INFO:  eta: 0:12:02  iter: 499  total_loss: 45.38  m1_loss_ce: 0.5447  m1_loss_mask: 0.1634  m1_loss_dice: 1.238  m1_loss_ce_0: 0.6875  m1_loss_mask_0: 0.1869  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.7285  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.6648  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.6046  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.5886  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.5613  m1_loss_mask_5: 0.1653  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.5587  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.5343  m1_loss_mask_7: 0.1632  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.5531  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.247  m2_loss_ce: 0.5621  m2_loss_mask: 0.1664  m2_loss_dice: 1.283  m2_loss_ce_0: 0.674  m2_loss_mask_0: 0.1876  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.7044  m2_loss_mask_1: 0.1758  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.6818  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.6147  m2_loss_mask_3: 0.1636  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.5893  m2_loss_mask_4: 0.1657  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.5884  m2_loss_mask_5: 0.1659  m2_loss_dice_5: 1.311  m2_loss_ce_6: 0.5692  m2_loss_mask_6: 0.1645  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.5572  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.289  m2_loss_ce_8: 0.5678  m2_loss_mask_8: 0.1664  m2_loss_dice_8: 1.277  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9803    time: 1.4472  last_time: 1.4707  data_time: 0.0404  last_data_time: 0.0470   lr: 0.0001  max_mem: 35104M
[08/19 00:12:45] d2.utils.events INFO:  eta: 0:11:33  iter: 519  total_loss: 45.2  m1_loss_ce: 0.5398  m1_loss_mask: 0.1544  m1_loss_dice: 1.267  m1_loss_ce_0: 0.6287  m1_loss_mask_0: 0.1838  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6778  m1_loss_mask_1: 0.1775  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.6626  m1_loss_mask_2: 0.1589  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5948  m1_loss_mask_3: 0.1606  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.5635  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.288  m1_loss_ce_5: 0.568  m1_loss_mask_5: 0.157  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.5879  m1_loss_mask_6: 0.1539  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.5441  m1_loss_mask_7: 0.1533  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.5252  m1_loss_mask_8: 0.1539  m1_loss_dice_8: 1.252  m2_loss_ce: 0.5376  m2_loss_mask: 0.159  m2_loss_dice: 1.285  m2_loss_ce_0: 0.6212  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.675  m2_loss_mask_1: 0.1688  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.6422  m2_loss_mask_2: 0.1634  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5872  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.5741  m2_loss_mask_4: 0.1595  m2_loss_dice_4: 1.318  m2_loss_ce_5: 0.5552  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.5324  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.305  m2_loss_ce_7: 0.5167  m2_loss_mask_7: 0.1604  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.4977  m2_loss_mask_8: 0.1573  m2_loss_dice_8: 1.249  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.981    time: 1.4465  last_time: 1.4813  data_time: 0.0406  last_data_time: 0.0332   lr: 0.0001  max_mem: 35104M
[08/19 00:13:14] d2.utils.events INFO:  eta: 0:11:04  iter: 539  total_loss: 45.28  m1_loss_ce: 0.4824  m1_loss_mask: 0.1587  m1_loss_dice: 1.242  m1_loss_ce_0: 0.6134  m1_loss_mask_0: 0.1785  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.6418  m1_loss_mask_1: 0.1752  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.6139  m1_loss_mask_2: 0.1637  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5354  m1_loss_mask_3: 0.1623  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.5147  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.536  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4969  m1_loss_mask_6: 0.1601  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.5025  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.484  m1_loss_mask_8: 0.1588  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5318  m2_loss_mask: 0.1577  m2_loss_dice: 1.28  m2_loss_ce_0: 0.6175  m2_loss_mask_0: 0.1898  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.6448  m2_loss_mask_1: 0.1752  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.6081  m2_loss_mask_2: 0.1648  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5446  m2_loss_mask_3: 0.1641  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.5278  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.5414  m2_loss_mask_5: 0.1614  m2_loss_dice_5: 1.262  m2_loss_ce_6: 0.5033  m2_loss_mask_6: 0.1622  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.5063  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.514  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.276  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9792    time: 1.4469  last_time: 1.4240  data_time: 0.0419  last_data_time: 0.0411   lr: 0.0001  max_mem: 35104M
[08/19 00:13:43] d2.utils.events INFO:  eta: 0:10:35  iter: 559  total_loss: 43.88  m1_loss_ce: 0.5265  m1_loss_mask: 0.1698  m1_loss_dice: 1.211  m1_loss_ce_0: 0.646  m1_loss_mask_0: 0.1983  m1_loss_dice_0: 1.394  m1_loss_ce_1: 0.6652  m1_loss_mask_1: 0.1839  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.6323  m1_loss_mask_2: 0.1739  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.5818  m1_loss_mask_3: 0.1745  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.529  m1_loss_mask_4: 0.1709  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.5076  m1_loss_mask_5: 0.1717  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.5386  m1_loss_mask_6: 0.1683  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.5003  m1_loss_mask_7: 0.1666  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.4878  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.237  m2_loss_ce: 0.5009  m2_loss_mask: 0.1685  m2_loss_dice: 1.247  m2_loss_ce_0: 0.6085  m2_loss_mask_0: 0.2059  m2_loss_dice_0: 1.402  m2_loss_ce_1: 0.6679  m2_loss_mask_1: 0.1798  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5798  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5471  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5076  m2_loss_mask_4: 0.1749  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.5305  m2_loss_mask_5: 0.172  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5518  m2_loss_mask_6: 0.1697  m2_loss_dice_6: 1.25  m2_loss_ce_7: 0.5216  m2_loss_mask_7: 0.1709  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.5028  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.23  com_loss_ce: 2.139  com_loss_mask: 0.6936  com_loss_dice: 0.979    time: 1.4473  last_time: 1.4607  data_time: 0.0414  last_data_time: 0.0349   lr: 0.0001  max_mem: 35104M
[08/19 00:14:13] d2.utils.events INFO:  eta: 0:10:06  iter: 579  total_loss: 43.55  m1_loss_ce: 0.514  m1_loss_mask: 0.174  m1_loss_dice: 1.194  m1_loss_ce_0: 0.6227  m1_loss_mask_0: 0.1961  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.6873  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.301  m1_loss_ce_2: 0.6101  m1_loss_mask_2: 0.1739  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.5389  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.5481  m1_loss_mask_4: 0.171  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.5435  m1_loss_mask_5: 0.1709  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.5314  m1_loss_mask_6: 0.1737  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.5243  m1_loss_mask_7: 0.1732  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5423  m1_loss_mask_8: 0.173  m1_loss_dice_8: 1.18  m2_loss_ce: 0.526  m2_loss_mask: 0.1699  m2_loss_dice: 1.216  m2_loss_ce_0: 0.6016  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6931  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.6333  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.5754  m2_loss_mask_3: 0.1741  m2_loss_dice_3: 1.258  m2_loss_ce_4: 0.5666  m2_loss_mask_4: 0.1729  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.566  m2_loss_mask_5: 0.1733  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5437  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5263  m2_loss_mask_7: 0.1681  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.5265  m2_loss_mask_8: 0.1701  m2_loss_dice_8: 1.224  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9789    time: 1.4473  last_time: 1.5243  data_time: 0.0402  last_data_time: 0.0461   lr: 0.0001  max_mem: 35104M
[08/19 00:14:42] d2.utils.events INFO:  eta: 0:09:37  iter: 599  total_loss: 43.94  m1_loss_ce: 0.5213  m1_loss_mask: 0.1644  m1_loss_dice: 1.124  m1_loss_ce_0: 0.6181  m1_loss_mask_0: 0.1857  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6716  m1_loss_mask_1: 0.1737  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6043  m1_loss_mask_2: 0.1685  m1_loss_dice_2: 1.225  m1_loss_ce_3: 0.5738  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5453  m1_loss_mask_4: 0.1657  m1_loss_dice_4: 1.158  m1_loss_ce_5: 0.5174  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.173  m1_loss_ce_6: 0.51  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.5437  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.5198  m1_loss_mask_8: 0.1625  m1_loss_dice_8: 1.125  m2_loss_ce: 0.5212  m2_loss_mask: 0.1618  m2_loss_dice: 1.189  m2_loss_ce_0: 0.6489  m2_loss_mask_0: 0.1939  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6446  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.6385  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5789  m2_loss_mask_3: 0.1652  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.56  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5312  m2_loss_mask_5: 0.1662  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.5286  m2_loss_mask_6: 0.1612  m2_loss_dice_6: 1.189  m2_loss_ce_7: 0.5472  m2_loss_mask_7: 0.1631  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.5212  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.213  com_loss_ce: 2.144  com_loss_mask: 0.6936  com_loss_dice: 0.9802    time: 1.4476  last_time: 1.4559  data_time: 0.0414  last_data_time: 0.0402   lr: 0.0001  max_mem: 35104M
[08/19 00:15:10] d2.utils.events INFO:  eta: 0:09:08  iter: 619  total_loss: 45.22  m1_loss_ce: 0.5276  m1_loss_mask: 0.1692  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6791  m1_loss_mask_0: 0.1925  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6739  m1_loss_mask_1: 0.181  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.6252  m1_loss_mask_2: 0.1732  m1_loss_dice_2: 1.333  m1_loss_ce_3: 0.5971  m1_loss_mask_3: 0.1728  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5643  m1_loss_mask_4: 0.174  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5781  m1_loss_mask_5: 0.1696  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.5457  m1_loss_mask_6: 0.1688  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.5496  m1_loss_mask_7: 0.1703  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.527  m1_loss_mask_8: 0.169  m1_loss_dice_8: 1.243  m2_loss_ce: 0.5517  m2_loss_mask: 0.1662  m2_loss_dice: 1.223  m2_loss_ce_0: 0.6615  m2_loss_mask_0: 0.2012  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.7029  m2_loss_mask_1: 0.1772  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.6677  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.6129  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.5798  m2_loss_mask_4: 0.1683  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5804  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5539  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.529  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.5804  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.276  com_loss_ce: 2.148  com_loss_mask: 0.6936  com_loss_dice: 0.9793    time: 1.4469  last_time: 1.4441  data_time: 0.0410  last_data_time: 0.0413   lr: 0.0001  max_mem: 35104M
[08/19 00:15:39] d2.utils.events INFO:  eta: 0:08:39  iter: 639  total_loss: 43.13  m1_loss_ce: 0.5108  m1_loss_mask: 0.1567  m1_loss_dice: 1.17  m1_loss_ce_0: 0.6362  m1_loss_mask_0: 0.1798  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.6522  m1_loss_mask_1: 0.1689  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5963  m1_loss_mask_2: 0.1583  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.577  m1_loss_mask_3: 0.1568  m1_loss_dice_3: 1.226  m1_loss_ce_4: 0.5465  m1_loss_mask_4: 0.1585  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.5258  m1_loss_mask_5: 0.1526  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.5343  m1_loss_mask_6: 0.1574  m1_loss_dice_6: 1.159  m1_loss_ce_7: 0.5383  m1_loss_mask_7: 0.1561  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5181  m1_loss_mask_8: 0.1558  m1_loss_dice_8: 1.192  m2_loss_ce: 0.5424  m2_loss_mask: 0.1559  m2_loss_dice: 1.237  m2_loss_ce_0: 0.6292  m2_loss_mask_0: 0.1899  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6889  m2_loss_mask_1: 0.1754  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.641  m2_loss_mask_2: 0.1587  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.5969  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.206  m2_loss_ce_4: 0.5599  m2_loss_mask_4: 0.1573  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.5495  m2_loss_mask_5: 0.1576  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5149  m2_loss_mask_6: 0.1572  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5418  m2_loss_mask_7: 0.1548  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.5357  m2_loss_mask_8: 0.1549  m2_loss_dice_8: 1.236  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9804    time: 1.4462  last_time: 1.4776  data_time: 0.0393  last_data_time: 0.0388   lr: 0.0001  max_mem: 35104M
[08/19 00:16:08] d2.utils.events INFO:  eta: 0:08:10  iter: 659  total_loss: 46.07  m1_loss_ce: 0.5649  m1_loss_mask: 0.1626  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6667  m1_loss_mask_0: 0.1823  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6946  m1_loss_mask_1: 0.1701  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.6315  m1_loss_mask_2: 0.1635  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.6351  m1_loss_mask_3: 0.1617  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5561  m1_loss_mask_4: 0.1607  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.5787  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.5402  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.267  m1_loss_ce_7: 0.5216  m1_loss_mask_7: 0.1609  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.5081  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.246  m2_loss_ce: 0.5967  m2_loss_mask: 0.1586  m2_loss_dice: 1.297  m2_loss_ce_0: 0.647  m2_loss_mask_0: 0.1745  m2_loss_dice_0: 1.514  m2_loss_ce_1: 0.7178  m2_loss_mask_1: 0.1643  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.6872  m2_loss_mask_2: 0.1611  m2_loss_dice_2: 1.373  m2_loss_ce_3: 0.6196  m2_loss_mask_3: 0.1585  m2_loss_dice_3: 1.322  m2_loss_ce_4: 0.595  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5548  m2_loss_mask_5: 0.161  m2_loss_dice_5: 1.312  m2_loss_ce_6: 0.5725  m2_loss_mask_6: 0.159  m2_loss_dice_6: 1.268  m2_loss_ce_7: 0.5575  m2_loss_mask_7: 0.1568  m2_loss_dice_7: 1.291  m2_loss_ce_8: 0.5762  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.302  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9811    time: 1.4461  last_time: 1.4191  data_time: 0.0392  last_data_time: 0.0287   lr: 0.0001  max_mem: 35104M
[08/19 00:16:37] d2.utils.events INFO:  eta: 0:07:41  iter: 679  total_loss: 45.89  m1_loss_ce: 0.5815  m1_loss_mask: 0.1532  m1_loss_dice: 1.21  m1_loss_ce_0: 0.6715  m1_loss_mask_0: 0.1777  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.7807  m1_loss_mask_1: 0.1636  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.683  m1_loss_mask_2: 0.1595  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.6084  m1_loss_mask_3: 0.1589  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.6097  m1_loss_mask_4: 0.1561  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.5813  m1_loss_mask_5: 0.158  m1_loss_dice_5: 1.266  m1_loss_ce_6: 0.5735  m1_loss_mask_6: 0.1564  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.5949  m1_loss_mask_7: 0.1545  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.5623  m1_loss_mask_8: 0.1525  m1_loss_dice_8: 1.181  m2_loss_ce: 0.5916  m2_loss_mask: 0.158  m2_loss_dice: 1.243  m2_loss_ce_0: 0.6568  m2_loss_mask_0: 0.1847  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.7129  m2_loss_mask_1: 0.1651  m2_loss_dice_1: 1.454  m2_loss_ce_2: 0.6796  m2_loss_mask_2: 0.1631  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5965  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5755  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.5699  m2_loss_mask_5: 0.1609  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.5871  m2_loss_mask_6: 0.1581  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5802  m2_loss_mask_7: 0.1577  m2_loss_dice_7: 1.29  m2_loss_ce_8: 0.5871  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.275  com_loss_ce: 2.148  com_loss_mask: 0.6936  com_loss_dice: 0.9821    time: 1.4462  last_time: 1.4863  data_time: 0.0399  last_data_time: 0.0361   lr: 0.0001  max_mem: 35104M
[08/19 00:17:06] d2.utils.events INFO:  eta: 0:07:12  iter: 699  total_loss: 44.05  m1_loss_ce: 0.4985  m1_loss_mask: 0.1642  m1_loss_dice: 1.143  m1_loss_ce_0: 0.6458  m1_loss_mask_0: 0.1831  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.6709  m1_loss_mask_1: 0.1734  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.6236  m1_loss_mask_2: 0.163  m1_loss_dice_2: 1.207  m1_loss_ce_3: 0.5657  m1_loss_mask_3: 0.1666  m1_loss_dice_3: 1.172  m1_loss_ce_4: 0.5244  m1_loss_mask_4: 0.1632  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.5492  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.15  m1_loss_ce_6: 0.5478  m1_loss_mask_6: 0.163  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.5198  m1_loss_mask_7: 0.1627  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5079  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.183  m2_loss_ce: 0.5137  m2_loss_mask: 0.1635  m2_loss_dice: 1.217  m2_loss_ce_0: 0.642  m2_loss_mask_0: 0.1941  m2_loss_dice_0: 1.394  m2_loss_ce_1: 0.6879  m2_loss_mask_1: 0.1749  m2_loss_dice_1: 1.32  m2_loss_ce_2: 0.6159  m2_loss_mask_2: 0.1655  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.6008  m2_loss_mask_3: 0.1625  m2_loss_dice_3: 1.187  m2_loss_ce_4: 0.5495  m2_loss_mask_4: 0.1643  m2_loss_dice_4: 1.212  m2_loss_ce_5: 0.5575  m2_loss_mask_5: 0.163  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.532  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.5206  m2_loss_mask_7: 0.1637  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.5234  m2_loss_mask_8: 0.1632  m2_loss_dice_8: 1.191  com_loss_ce: 2.141  com_loss_mask: 0.6936  com_loss_dice: 0.9797    time: 1.4455  last_time: 1.4041  data_time: 0.0377  last_data_time: 0.0376   lr: 0.0001  max_mem: 35104M
[08/19 00:17:35] d2.utils.events INFO:  eta: 0:06:43  iter: 719  total_loss: 44.64  m1_loss_ce: 0.5858  m1_loss_mask: 0.1627  m1_loss_dice: 1.174  m1_loss_ce_0: 0.6393  m1_loss_mask_0: 0.1927  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.7404  m1_loss_mask_1: 0.1776  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.6516  m1_loss_mask_2: 0.1683  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.5666  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.5578  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.5648  m1_loss_mask_5: 0.1662  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5529  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.5844  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.5666  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.185  m2_loss_ce: 0.5793  m2_loss_mask: 0.1634  m2_loss_dice: 1.234  m2_loss_ce_0: 0.6819  m2_loss_mask_0: 0.2024  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.7275  m2_loss_mask_1: 0.1756  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.698  m2_loss_mask_2: 0.1652  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.6254  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.6211  m2_loss_mask_4: 0.1648  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5756  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.288  m2_loss_ce_6: 0.5886  m2_loss_mask_6: 0.1616  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.5842  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5808  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.238  com_loss_ce: 2.147  com_loss_mask: 0.6936  com_loss_dice: 0.9799    time: 1.4453  last_time: 1.4725  data_time: 0.0392  last_data_time: 0.0474   lr: 0.0001  max_mem: 35104M
[08/19 00:18:04] d2.utils.events INFO:  eta: 0:06:14  iter: 739  total_loss: 43.62  m1_loss_ce: 0.5012  m1_loss_mask: 0.1627  m1_loss_dice: 1.208  m1_loss_ce_0: 0.6305  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6366  m1_loss_mask_1: 0.1711  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5933  m1_loss_mask_2: 0.1601  m1_loss_dice_2: 1.255  m1_loss_ce_3: 0.5543  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.5233  m1_loss_mask_4: 0.1629  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.5038  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.5061  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.4939  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.5108  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.193  m2_loss_ce: 0.5231  m2_loss_mask: 0.1616  m2_loss_dice: 1.217  m2_loss_ce_0: 0.607  m2_loss_mask_0: 0.1888  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6642  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.381  m2_loss_ce_2: 0.5747  m2_loss_mask_2: 0.1656  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.5467  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.5119  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.4987  m2_loss_mask_5: 0.1644  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.5159  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.5123  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.5219  m2_loss_mask_8: 0.161  m2_loss_dice_8: 1.206  com_loss_ce: 2.14  com_loss_mask: 0.6936  com_loss_dice: 0.9797    time: 1.4453  last_time: 1.5014  data_time: 0.0386  last_data_time: 0.0371   lr: 0.0001  max_mem: 35104M
[08/19 00:18:33] d2.utils.events INFO:  eta: 0:05:46  iter: 759  total_loss: 46.42  m1_loss_ce: 0.585  m1_loss_mask: 0.1581  m1_loss_dice: 1.312  m1_loss_ce_0: 0.6868  m1_loss_mask_0: 0.1793  m1_loss_dice_0: 1.503  m1_loss_ce_1: 0.7407  m1_loss_mask_1: 0.1718  m1_loss_dice_1: 1.446  m1_loss_ce_2: 0.6876  m1_loss_mask_2: 0.1603  m1_loss_dice_2: 1.369  m1_loss_ce_3: 0.6191  m1_loss_mask_3: 0.1629  m1_loss_dice_3: 1.34  m1_loss_ce_4: 0.6077  m1_loss_mask_4: 0.1598  m1_loss_dice_4: 1.322  m1_loss_ce_5: 0.594  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.309  m1_loss_ce_6: 0.5932  m1_loss_mask_6: 0.1579  m1_loss_dice_6: 1.337  m1_loss_ce_7: 0.5907  m1_loss_mask_7: 0.1565  m1_loss_dice_7: 1.285  m1_loss_ce_8: 0.5549  m1_loss_mask_8: 0.1579  m1_loss_dice_8: 1.283  m2_loss_ce: 0.5886  m2_loss_mask: 0.1601  m2_loss_dice: 1.297  m2_loss_ce_0: 0.6338  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.568  m2_loss_ce_1: 0.7258  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.456  m2_loss_ce_2: 0.6544  m2_loss_mask_2: 0.1602  m2_loss_dice_2: 1.357  m2_loss_ce_3: 0.6452  m2_loss_mask_3: 0.1586  m2_loss_dice_3: 1.321  m2_loss_ce_4: 0.5881  m2_loss_mask_4: 0.1612  m2_loss_dice_4: 1.326  m2_loss_ce_5: 0.5763  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.316  m2_loss_ce_6: 0.582  m2_loss_mask_6: 0.1623  m2_loss_dice_6: 1.304  m2_loss_ce_7: 0.5952  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.314  m2_loss_ce_8: 0.5675  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.31  com_loss_ce: 2.149  com_loss_mask: 0.6936  com_loss_dice: 0.981    time: 1.4459  last_time: 1.4794  data_time: 0.0424  last_data_time: 0.0451   lr: 0.0001  max_mem: 35104M
[08/19 00:19:02] d2.utils.events INFO:  eta: 0:05:17  iter: 779  total_loss: 44.02  m1_loss_ce: 0.5197  m1_loss_mask: 0.1631  m1_loss_dice: 1.174  m1_loss_ce_0: 0.614  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.6648  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.6206  m1_loss_mask_2: 0.1745  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5646  m1_loss_mask_3: 0.1678  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.5396  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.5443  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.5147  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.5287  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.161  m1_loss_ce_8: 0.5227  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.168  m2_loss_ce: 0.5195  m2_loss_mask: 0.1713  m2_loss_dice: 1.208  m2_loss_ce_0: 0.6028  m2_loss_mask_0: 0.2009  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.644  m2_loss_mask_1: 0.1853  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.6105  m2_loss_mask_2: 0.1766  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5764  m2_loss_mask_3: 0.1728  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5298  m2_loss_mask_4: 0.1768  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5543  m2_loss_mask_5: 0.1742  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.539  m2_loss_mask_6: 0.1732  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.5117  m2_loss_mask_7: 0.176  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.5101  m2_loss_mask_8: 0.1728  m2_loss_dice_8: 1.235  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9803    time: 1.4456  last_time: 1.3950  data_time: 0.0392  last_data_time: 0.0355   lr: 0.0001  max_mem: 35104M
[08/19 00:19:31] d2.utils.events INFO:  eta: 0:04:48  iter: 799  total_loss: 42.23  m1_loss_ce: 0.4979  m1_loss_mask: 0.1466  m1_loss_dice: 1.154  m1_loss_ce_0: 0.5995  m1_loss_mask_0: 0.1688  m1_loss_dice_0: 1.343  m1_loss_ce_1: 0.6529  m1_loss_mask_1: 0.1604  m1_loss_dice_1: 1.262  m1_loss_ce_2: 0.5353  m1_loss_mask_2: 0.1503  m1_loss_dice_2: 1.225  m1_loss_ce_3: 0.5117  m1_loss_mask_3: 0.1483  m1_loss_dice_3: 1.158  m1_loss_ce_4: 0.5009  m1_loss_mask_4: 0.1491  m1_loss_dice_4: 1.173  m1_loss_ce_5: 0.4934  m1_loss_mask_5: 0.1481  m1_loss_dice_5: 1.158  m1_loss_ce_6: 0.4866  m1_loss_mask_6: 0.1474  m1_loss_dice_6: 1.137  m1_loss_ce_7: 0.4853  m1_loss_mask_7: 0.149  m1_loss_dice_7: 1.119  m1_loss_ce_8: 0.4737  m1_loss_mask_8: 0.1456  m1_loss_dice_8: 1.133  m2_loss_ce: 0.5037  m2_loss_mask: 0.1538  m2_loss_dice: 1.158  m2_loss_ce_0: 0.6227  m2_loss_mask_0: 0.1887  m2_loss_dice_0: 1.393  m2_loss_ce_1: 0.6475  m2_loss_mask_1: 0.1675  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.617  m2_loss_mask_2: 0.1572  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.5534  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.193  m2_loss_ce_4: 0.5475  m2_loss_mask_4: 0.1552  m2_loss_dice_4: 1.181  m2_loss_ce_5: 0.5288  m2_loss_mask_5: 0.155  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.5213  m2_loss_mask_6: 0.1545  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.5083  m2_loss_mask_7: 0.1531  m2_loss_dice_7: 1.156  m2_loss_ce_8: 0.4833  m2_loss_mask_8: 0.153  m2_loss_dice_8: 1.176  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.9802    time: 1.4460  last_time: 1.3621  data_time: 0.0405  last_data_time: 0.0330   lr: 0.0001  max_mem: 35104M
[08/19 00:20:00] d2.utils.events INFO:  eta: 0:04:19  iter: 819  total_loss: 43.61  m1_loss_ce: 0.4753  m1_loss_mask: 0.1611  m1_loss_dice: 1.156  m1_loss_ce_0: 0.6274  m1_loss_mask_0: 0.1829  m1_loss_dice_0: 1.357  m1_loss_ce_1: 0.7051  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.278  m1_loss_ce_2: 0.595  m1_loss_mask_2: 0.1586  m1_loss_dice_2: 1.226  m1_loss_ce_3: 0.5551  m1_loss_mask_3: 0.1628  m1_loss_dice_3: 1.133  m1_loss_ce_4: 0.5318  m1_loss_mask_4: 0.1582  m1_loss_dice_4: 1.171  m1_loss_ce_5: 0.5417  m1_loss_mask_5: 0.1595  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.5019  m1_loss_mask_6: 0.1581  m1_loss_dice_6: 1.157  m1_loss_ce_7: 0.4973  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.134  m1_loss_ce_8: 0.4854  m1_loss_mask_8: 0.1591  m1_loss_dice_8: 1.159  m2_loss_ce: 0.5318  m2_loss_mask: 0.1609  m2_loss_dice: 1.168  m2_loss_ce_0: 0.631  m2_loss_mask_0: 0.1895  m2_loss_dice_0: 1.42  m2_loss_ce_1: 0.6705  m2_loss_mask_1: 0.18  m2_loss_dice_1: 1.321  m2_loss_ce_2: 0.6427  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5738  m2_loss_mask_3: 0.1656  m2_loss_dice_3: 1.216  m2_loss_ce_4: 0.5929  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.194  m2_loss_ce_5: 0.5566  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.17  m2_loss_ce_6: 0.5504  m2_loss_mask_6: 0.1636  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.5174  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.154  m2_loss_ce_8: 0.5385  m2_loss_mask_8: 0.1594  m2_loss_dice_8: 1.163  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9801    time: 1.4459  last_time: 1.4155  data_time: 0.0403  last_data_time: 0.0445   lr: 0.0001  max_mem: 35104M
[08/19 00:20:29] d2.utils.events INFO:  eta: 0:03:50  iter: 839  total_loss: 43.38  m1_loss_ce: 0.5012  m1_loss_mask: 0.1655  m1_loss_dice: 1.169  m1_loss_ce_0: 0.6122  m1_loss_mask_0: 0.1983  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6507  m1_loss_mask_1: 0.1803  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.601  m1_loss_mask_2: 0.1689  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.5471  m1_loss_mask_3: 0.1737  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5417  m1_loss_mask_4: 0.1683  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.5042  m1_loss_mask_5: 0.1689  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.5472  m1_loss_mask_6: 0.1662  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.5106  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.4954  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.205  m2_loss_ce: 0.5278  m2_loss_mask: 0.1727  m2_loss_dice: 1.224  m2_loss_ce_0: 0.6458  m2_loss_mask_0: 0.205  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6739  m2_loss_mask_1: 0.187  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.6355  m2_loss_mask_2: 0.1771  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.5746  m2_loss_mask_3: 0.1768  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.5341  m2_loss_mask_4: 0.1769  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.5153  m2_loss_mask_5: 0.1787  m2_loss_dice_5: 1.214  m2_loss_ce_6: 0.5228  m2_loss_mask_6: 0.1737  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.5166  m2_loss_mask_7: 0.1732  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.5255  m2_loss_mask_8: 0.1737  m2_loss_dice_8: 1.212  com_loss_ce: 2.139  com_loss_mask: 0.6936  com_loss_dice: 0.9788    time: 1.4456  last_time: 1.4208  data_time: 0.0399  last_data_time: 0.0340   lr: 0.0001  max_mem: 35104M
[08/19 00:20:58] d2.utils.events INFO:  eta: 0:03:21  iter: 859  total_loss: 44.3  m1_loss_ce: 0.5042  m1_loss_mask: 0.1522  m1_loss_dice: 1.195  m1_loss_ce_0: 0.6051  m1_loss_mask_0: 0.1795  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.6752  m1_loss_mask_1: 0.1605  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.6204  m1_loss_mask_2: 0.1591  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5781  m1_loss_mask_3: 0.1559  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.512  m1_loss_mask_4: 0.1547  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4988  m1_loss_mask_5: 0.1542  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.4825  m1_loss_mask_6: 0.1536  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4762  m1_loss_mask_7: 0.1533  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.5059  m1_loss_mask_8: 0.1548  m1_loss_dice_8: 1.21  m2_loss_ce: 0.5424  m2_loss_mask: 0.1564  m2_loss_dice: 1.167  m2_loss_ce_0: 0.6635  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6871  m2_loss_mask_1: 0.1714  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.6793  m2_loss_mask_2: 0.1661  m2_loss_dice_2: 1.258  m2_loss_ce_3: 0.646  m2_loss_mask_3: 0.1651  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5647  m2_loss_mask_4: 0.1649  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5733  m2_loss_mask_5: 0.1641  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.5383  m2_loss_mask_6: 0.1618  m2_loss_dice_6: 1.192  m2_loss_ce_7: 0.5647  m2_loss_mask_7: 0.1583  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.5336  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.191  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.9796    time: 1.4454  last_time: 1.4738  data_time: 0.0391  last_data_time: 0.0425   lr: 0.0001  max_mem: 35104M
[08/19 00:21:26] d2.utils.events INFO:  eta: 0:02:52  iter: 879  total_loss: 44.22  m1_loss_ce: 0.5248  m1_loss_mask: 0.162  m1_loss_dice: 1.153  m1_loss_ce_0: 0.6261  m1_loss_mask_0: 0.1865  m1_loss_dice_0: 1.361  m1_loss_ce_1: 0.7076  m1_loss_mask_1: 0.1716  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.6331  m1_loss_mask_2: 0.1668  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5823  m1_loss_mask_3: 0.1629  m1_loss_dice_3: 1.161  m1_loss_ce_4: 0.5439  m1_loss_mask_4: 0.1625  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.5447  m1_loss_mask_5: 0.1614  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.5276  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.5167  m1_loss_mask_7: 0.1614  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.5254  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.165  m2_loss_ce: 0.5504  m2_loss_mask: 0.1659  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6359  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.379  m2_loss_ce_1: 0.6923  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6533  m2_loss_mask_2: 0.1683  m2_loss_dice_2: 1.285  m2_loss_ce_3: 0.5955  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.204  m2_loss_ce_4: 0.5576  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5478  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.199  m2_loss_ce_6: 0.5431  m2_loss_mask_6: 0.1648  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.5339  m2_loss_mask_7: 0.1639  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.527  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.211  com_loss_ce: 2.145  com_loss_mask: 0.6936  com_loss_dice: 0.9788    time: 1.4447  last_time: 1.3699  data_time: 0.0409  last_data_time: 0.0316   lr: 0.0001  max_mem: 35104M
[08/19 00:21:55] d2.utils.events INFO:  eta: 0:02:24  iter: 899  total_loss: 43.14  m1_loss_ce: 0.4988  m1_loss_mask: 0.163  m1_loss_dice: 1.164  m1_loss_ce_0: 0.6533  m1_loss_mask_0: 0.177  m1_loss_dice_0: 1.374  m1_loss_ce_1: 0.7074  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.281  m1_loss_ce_2: 0.6193  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.229  m1_loss_ce_3: 0.5639  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.5157  m1_loss_mask_4: 0.1666  m1_loss_dice_4: 1.191  m1_loss_ce_5: 0.5354  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.4792  m1_loss_mask_6: 0.1655  m1_loss_dice_6: 1.172  m1_loss_ce_7: 0.4885  m1_loss_mask_7: 0.1639  m1_loss_dice_7: 1.14  m1_loss_ce_8: 0.5067  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.161  m2_loss_ce: 0.5318  m2_loss_mask: 0.1618  m2_loss_dice: 1.265  m2_loss_ce_0: 0.6241  m2_loss_mask_0: 0.1912  m2_loss_dice_0: 1.401  m2_loss_ce_1: 0.6726  m2_loss_mask_1: 0.1751  m2_loss_dice_1: 1.34  m2_loss_ce_2: 0.6604  m2_loss_mask_2: 0.1626  m2_loss_dice_2: 1.259  m2_loss_ce_3: 0.571  m2_loss_mask_3: 0.1602  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5497  m2_loss_mask_4: 0.1604  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5768  m2_loss_mask_5: 0.163  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.5327  m2_loss_mask_6: 0.1608  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5563  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.5492  m2_loss_mask_8: 0.1615  m2_loss_dice_8: 1.229  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.9792    time: 1.4442  last_time: 1.3874  data_time: 0.0412  last_data_time: 0.0594   lr: 0.0001  max_mem: 35104M
[08/19 00:22:24] d2.utils.events INFO:  eta: 0:01:55  iter: 919  total_loss: 42.5  m1_loss_ce: 0.4471  m1_loss_mask: 0.1567  m1_loss_dice: 1.197  m1_loss_ce_0: 0.5823  m1_loss_mask_0: 0.1731  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.605  m1_loss_mask_1: 0.1669  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.5901  m1_loss_mask_2: 0.1587  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.5443  m1_loss_mask_3: 0.1546  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.5251  m1_loss_mask_4: 0.1547  m1_loss_dice_4: 1.186  m1_loss_ce_5: 0.4926  m1_loss_mask_5: 0.155  m1_loss_dice_5: 1.2  m1_loss_ce_6: 0.4594  m1_loss_mask_6: 0.1582  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4555  m1_loss_mask_7: 0.1597  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4465  m1_loss_mask_8: 0.1578  m1_loss_dice_8: 1.192  m2_loss_ce: 0.5578  m2_loss_mask: 0.1594  m2_loss_dice: 1.207  m2_loss_ce_0: 0.6468  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.397  m2_loss_ce_1: 0.6852  m2_loss_mask_1: 0.1668  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.6454  m2_loss_mask_2: 0.1627  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.5722  m2_loss_mask_3: 0.1656  m2_loss_dice_3: 1.202  m2_loss_ce_4: 0.5485  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.179  m2_loss_ce_5: 0.541  m2_loss_mask_5: 0.1641  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.5466  m2_loss_mask_6: 0.1628  m2_loss_dice_6: 1.197  m2_loss_ce_7: 0.5378  m2_loss_mask_7: 0.1617  m2_loss_dice_7: 1.185  m2_loss_ce_8: 0.5139  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.17  com_loss_ce: 2.141  com_loss_mask: 0.6936  com_loss_dice: 0.9798    time: 1.4437  last_time: 1.4234  data_time: 0.0388  last_data_time: 0.0354   lr: 0.0001  max_mem: 35104M
[08/19 00:22:52] d2.utils.events INFO:  eta: 0:01:26  iter: 939  total_loss: 43.39  m1_loss_ce: 0.5183  m1_loss_mask: 0.1646  m1_loss_dice: 1.16  m1_loss_ce_0: 0.6515  m1_loss_mask_0: 0.1922  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.6892  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.6143  m1_loss_mask_2: 0.1702  m1_loss_dice_2: 1.25  m1_loss_ce_3: 0.5631  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.5165  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.174  m1_loss_ce_5: 0.5324  m1_loss_mask_5: 0.1625  m1_loss_dice_5: 1.178  m1_loss_ce_6: 0.5158  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.5191  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.15  m1_loss_ce_8: 0.5017  m1_loss_mask_8: 0.1666  m1_loss_dice_8: 1.171  m2_loss_ce: 0.5122  m2_loss_mask: 0.166  m2_loss_dice: 1.193  m2_loss_ce_0: 0.6415  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6668  m2_loss_mask_1: 0.1776  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.6416  m2_loss_mask_2: 0.1695  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5852  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5639  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.56  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5244  m2_loss_mask_6: 0.1707  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.5247  m2_loss_mask_7: 0.1684  m2_loss_dice_7: 1.181  m2_loss_ce_8: 0.5272  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.166  com_loss_ce: 2.142  com_loss_mask: 0.6936  com_loss_dice: 0.979    time: 1.4429  last_time: 1.4250  data_time: 0.0400  last_data_time: 0.0363   lr: 0.0001  max_mem: 35104M
[08/19 00:23:20] d2.utils.events INFO:  eta: 0:00:57  iter: 959  total_loss: 42.35  m1_loss_ce: 0.4771  m1_loss_mask: 0.1576  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5993  m1_loss_mask_0: 0.181  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.6398  m1_loss_mask_1: 0.1719  m1_loss_dice_1: 1.281  m1_loss_ce_2: 0.5742  m1_loss_mask_2: 0.1629  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5074  m1_loss_mask_3: 0.1606  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4944  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.168  m1_loss_ce_5: 0.498  m1_loss_mask_5: 0.159  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4851  m1_loss_mask_6: 0.157  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.4759  m1_loss_mask_7: 0.1612  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.4769  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.187  m2_loss_ce: 0.473  m2_loss_mask: 0.1633  m2_loss_dice: 1.212  m2_loss_ce_0: 0.5915  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6355  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5594  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.302  m2_loss_ce_3: 0.5335  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.4966  m2_loss_mask_4: 0.1672  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.5071  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.221  m2_loss_ce_6: 0.4878  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.5051  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.4951  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.209  com_loss_ce: 2.139  com_loss_mask: 0.6936  com_loss_dice: 0.9799    time: 1.4419  last_time: 1.3641  data_time: 0.0393  last_data_time: 0.0342   lr: 0.0001  max_mem: 35104M
[08/19 00:23:49] d2.utils.events INFO:  eta: 0:00:28  iter: 979  total_loss: 44.42  m1_loss_ce: 0.5283  m1_loss_mask: 0.1521  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6226  m1_loss_mask_0: 0.1804  m1_loss_dice_0: 1.471  m1_loss_ce_1: 0.6814  m1_loss_mask_1: 0.1647  m1_loss_dice_1: 1.402  m1_loss_ce_2: 0.6151  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.328  m1_loss_ce_3: 0.5595  m1_loss_mask_3: 0.1599  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5396  m1_loss_mask_4: 0.1588  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.5274  m1_loss_mask_5: 0.1588  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.523  m1_loss_mask_6: 0.1552  m1_loss_dice_6: 1.255  m1_loss_ce_7: 0.5164  m1_loss_mask_7: 0.1557  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.5248  m1_loss_mask_8: 0.1535  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5459  m2_loss_mask: 0.1584  m2_loss_dice: 1.267  m2_loss_ce_0: 0.6527  m2_loss_mask_0: 0.1837  m2_loss_dice_0: 1.519  m2_loss_ce_1: 0.7121  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.425  m2_loss_ce_2: 0.6552  m2_loss_mask_2: 0.1594  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5995  m2_loss_mask_3: 0.1595  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.5688  m2_loss_mask_4: 0.1617  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.5602  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.309  m2_loss_ce_6: 0.5739  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.296  m2_loss_ce_7: 0.5398  m2_loss_mask_7: 0.1582  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.5437  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.281  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.9801    time: 1.4416  last_time: 1.4436  data_time: 0.0388  last_data_time: 0.0394   lr: 0.0001  max_mem: 35104M
[08/19 00:24:17] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_0_7_5_sum/model_final.pth
[08/19 00:24:20] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 44.52  m1_loss_ce: 0.5095  m1_loss_mask: 0.1596  m1_loss_dice: 1.236  m1_loss_ce_0: 0.6008  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.6639  m1_loss_mask_1: 0.1818  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.6151  m1_loss_mask_2: 0.1669  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5707  m1_loss_mask_3: 0.1615  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.533  m1_loss_mask_4: 0.1585  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.5323  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.5132  m1_loss_mask_6: 0.1589  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.5088  m1_loss_mask_7: 0.1591  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4966  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5636  m2_loss_mask: 0.159  m2_loss_dice: 1.266  m2_loss_ce_0: 0.598  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.7058  m2_loss_mask_1: 0.1749  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.6416  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5908  m2_loss_mask_3: 0.162  m2_loss_dice_3: 1.311  m2_loss_ce_4: 0.6022  m2_loss_mask_4: 0.1617  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5785  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5713  m2_loss_mask_6: 0.1575  m2_loss_dice_6: 1.303  m2_loss_ce_7: 0.5684  m2_loss_mask_7: 0.1584  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5388  m2_loss_mask_8: 0.1578  m2_loss_dice_8: 1.286  com_loss_ce: 2.143  com_loss_mask: 0.6936  com_loss_dice: 0.979    time: 1.4415  last_time: 1.4244  data_time: 0.0389  last_data_time: 0.0407   lr: 0.0001  max_mem: 35104M
[08/19 00:24:21] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:23:58 (1.4415 s / it)
[08/19 00:24:21] d2.engine.hooks INFO: Total training time: 0:24:08 (0:00:09 on hooks)
[08/19 00:24:21] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/19 00:24:21] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/19 00:24:21] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 00:24:21] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/19 00:24:21] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/19 00:25:48] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval3cdvrz5h ...
[08/19 00:26:06] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.527 | 81.398 | 69.744 |      19       |
| Things | 49.289 | 81.075 | 60.921 |       8       |
| Stuff  | 63.519 | 81.633 | 76.161 |      11       |
[08/19 00:26:06] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.067 | 97.572 | 99.482 |     Stuff     |
| class_8  | 70.222 | 84.012 | 83.585 |     Stuff     |
| class_11 | 87.208 | 89.120 | 97.855 |     Stuff     |
| class_12 | 35.315 | 80.930 | 43.636 |     Stuff     |
| class_13 | 38.192 | 76.384 | 50.000 |     Stuff     |
| class_17 | 42.297 | 64.506 | 65.570 |     Stuff     |
| class_19 | 46.713 | 69.274 | 67.433 |     Stuff     |
| class_20 | 65.850 | 77.352 | 85.129 |     Stuff     |
| class_21 | 88.956 | 90.251 | 98.566 |     Stuff     |
| class_22 | 39.104 | 76.638 | 51.025 |     Stuff     |
| class_23 | 87.785 | 91.930 | 95.491 |     Stuff     |
| class_24 | 49.801 | 76.145 | 65.403 |    Things     |
| class_25 | 47.213 | 73.596 | 64.151 |    Things     |
| class_26 | 66.263 | 83.618 | 79.245 |    Things     |
| class_27 | 44.108 | 88.216 | 50.000 |    Things     |
| class_28 | 61.413 | 90.072 | 68.182 |    Things     |
| class_31 | 42.165 | 89.600 | 47.059 |    Things     |
| class_32 | 38.855 | 75.138 | 51.711 |    Things     |
| class_33 | 44.493 | 72.211 | 61.616 |    Things     |
[08/19 00:26:06] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/19 00:26:06] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/19 00:26:06] d2.evaluation.testing INFO: copypaste: 57.5273,81.3981,69.7442,49.2888,81.0745,60.9208,63.5189,81.6334,76.1612,97.0667,97.5722,99.4819,70.2219,84.0122,83.5853,87.2080,89.1197,97.8550,35.3149,80.9300,43.6364,38.1918,76.3836,50.0000,42.2968,64.5059,65.5704,46.7132,69.2736,67.4330,65.8496,77.3525,85.1293,88.9560,90.2506,98.5656,39.1044,76.6376,51.0251,87.7848,91.9296,95.4913,49.8011,76.1452,65.4028,47.2127,73.5963,64.1509,66.2631,83.6181,79.2449,44.1078,88.2156,50.0000,61.4127,90.0719,68.1818,42.1649,89.6004,47.0588,38.8545,75.1378,51.7110,44.4934,72.2111,61.6157
