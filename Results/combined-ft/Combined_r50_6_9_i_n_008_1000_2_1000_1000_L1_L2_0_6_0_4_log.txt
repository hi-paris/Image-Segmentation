[10/03 00:11:38] detectron2 INFO: Rank of current process: 0. World size: 2
[10/03 00:11:39] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   535.183.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/03 00:11:39] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_6_0_4_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/03 00:11:39] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_6_0_4_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/03 00:11:39] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/03 00:11:39] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4/config.yaml
[10/03 00:11:39] d2.utils.env INFO: Using a generated random seed 40814452
[10/03 00:11:44] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/03 00:11:44] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/03 00:11:45] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/03 00:11:45] d2.data.build INFO: Using training sampler TrainingSampler
[10/03 00:11:45] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/03 00:11:45] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/03 00:11:45] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/03 00:11:45] d2.data.build INFO: Making batched data loader with batch_size=4
[10/03 00:11:45] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/03 00:11:50] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/03 00:11:50] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 00:11:50] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 00:12:03] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 00:12:03] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 00:12:52] d2.utils.events INFO:  eta: 0:30:38  iter: 19  total_loss: 41.56  m1_loss_ce: 0.5203  m1_loss_mask: 0.1728  m1_loss_dice: 1.31  m1_loss_ce_0: 0.5752  m1_loss_mask_0: 0.2021  m1_loss_dice_0: 1.569  m1_loss_ce_1: 0.6816  m1_loss_mask_1: 0.189  m1_loss_dice_1: 1.49  m1_loss_ce_2: 0.6103  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.394  m1_loss_ce_3: 0.5584  m1_loss_mask_3: 0.1758  m1_loss_dice_3: 1.353  m1_loss_ce_4: 0.5112  m1_loss_mask_4: 0.1748  m1_loss_dice_4: 1.333  m1_loss_ce_5: 0.5297  m1_loss_mask_5: 0.1708  m1_loss_dice_5: 1.312  m1_loss_ce_6: 0.4895  m1_loss_mask_6: 0.1694  m1_loss_dice_6: 1.304  m1_loss_ce_7: 0.5115  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.314  m1_loss_ce_8: 0.4782  m1_loss_mask_8: 0.1703  m1_loss_dice_8: 1.316  m2_loss_ce: 0.4766  m2_loss_mask: 0.168  m2_loss_dice: 1.321  m2_loss_ce_0: 0.5892  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.587  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.5  m2_loss_ce_2: 0.5931  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.397  m2_loss_ce_3: 0.4952  m2_loss_mask_3: 0.168  m2_loss_dice_3: 1.365  m2_loss_ce_4: 0.5078  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.352  m2_loss_ce_5: 0.5077  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.354  m2_loss_ce_6: 0.4689  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.34  m2_loss_ce_7: 0.4932  m2_loss_mask_7: 0.1707  m2_loss_dice_7: 1.365  m2_loss_ce_8: 0.494  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.335    time: 1.8796  last_time: 1.8380  data_time: 0.3893  last_data_time: 0.0567   lr: 0.0001  max_mem: 33794M
[10/03 00:13:29] d2.utils.events INFO:  eta: 0:29:26  iter: 39  total_loss: 40.59  m1_loss_ce: 0.4619  m1_loss_mask: 0.173  m1_loss_dice: 1.209  m1_loss_ce_0: 0.6093  m1_loss_mask_0: 0.2036  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.6833  m1_loss_mask_1: 0.1815  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5674  m1_loss_mask_2: 0.1762  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.5399  m1_loss_mask_3: 0.1745  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.4963  m1_loss_mask_4: 0.1724  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.5265  m1_loss_mask_5: 0.1724  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4747  m1_loss_mask_6: 0.1718  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4637  m1_loss_mask_7: 0.1727  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.4362  m1_loss_mask_8: 0.1711  m1_loss_dice_8: 1.235  m2_loss_ce: 0.4824  m2_loss_mask: 0.168  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6011  m2_loss_mask_0: 0.2015  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6822  m2_loss_mask_1: 0.1815  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.5902  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.5185  m2_loss_mask_3: 0.1695  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.481  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.243  m2_loss_ce_5: 0.4826  m2_loss_mask_5: 0.1673  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.4783  m2_loss_mask_6: 0.1685  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5224  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.4856  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.24    time: 1.8486  last_time: 1.7887  data_time: 0.0773  last_data_time: 0.0650   lr: 0.0001  max_mem: 33815M
[10/03 00:14:06] d2.utils.events INFO:  eta: 0:28:50  iter: 59  total_loss: 40.31  m1_loss_ce: 0.4333  m1_loss_mask: 0.162  m1_loss_dice: 1.228  m1_loss_ce_0: 0.547  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6135  m1_loss_mask_1: 0.1753  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5894  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.328  m1_loss_ce_3: 0.526  m1_loss_mask_3: 0.1693  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.4936  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.5101  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.4612  m1_loss_mask_6: 0.1655  m1_loss_dice_6: 1.242  m1_loss_ce_7: 0.4542  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.4656  m1_loss_mask_8: 0.1609  m1_loss_dice_8: 1.216  m2_loss_ce: 0.4878  m2_loss_mask: 0.1615  m2_loss_dice: 1.264  m2_loss_ce_0: 0.619  m2_loss_mask_0: 0.1891  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6646  m2_loss_mask_1: 0.1803  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.5634  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5425  m2_loss_mask_3: 0.1595  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.4768  m2_loss_mask_4: 0.1567  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5163  m2_loss_mask_5: 0.1545  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4751  m2_loss_mask_6: 0.1557  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.4613  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4818  m2_loss_mask_8: 0.1597  m2_loss_dice_8: 1.249    time: 1.8518  last_time: 1.9405  data_time: 0.0739  last_data_time: 0.0554   lr: 0.0001  max_mem: 34200M
[10/03 00:14:43] d2.utils.events INFO:  eta: 0:28:11  iter: 79  total_loss: 39.82  m1_loss_ce: 0.4675  m1_loss_mask: 0.1543  m1_loss_dice: 1.226  m1_loss_ce_0: 0.6052  m1_loss_mask_0: 0.1807  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.6615  m1_loss_mask_1: 0.1682  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.5865  m1_loss_mask_2: 0.1597  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.5267  m1_loss_mask_3: 0.1612  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5168  m1_loss_mask_4: 0.158  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.4944  m1_loss_mask_5: 0.1566  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.5059  m1_loss_mask_6: 0.1551  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.483  m1_loss_mask_7: 0.1566  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.498  m1_loss_mask_8: 0.1553  m1_loss_dice_8: 1.177  m2_loss_ce: 0.4855  m2_loss_mask: 0.1586  m2_loss_dice: 1.228  m2_loss_ce_0: 0.6304  m2_loss_mask_0: 0.1859  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.6801  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6064  m2_loss_mask_2: 0.1605  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.531  m2_loss_mask_3: 0.1612  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.5254  m2_loss_mask_4: 0.1597  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5338  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.4949  m2_loss_mask_6: 0.1591  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.479  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4907  m2_loss_mask_8: 0.159  m2_loss_dice_8: 1.262    time: 1.8471  last_time: 1.7634  data_time: 0.0760  last_data_time: 0.0577   lr: 0.0001  max_mem: 34200M
[10/03 00:15:20] d2.utils.events INFO:  eta: 0:27:32  iter: 99  total_loss: 39.66  m1_loss_ce: 0.4233  m1_loss_mask: 0.1745  m1_loss_dice: 1.253  m1_loss_ce_0: 0.5277  m1_loss_mask_0: 0.2059  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.6192  m1_loss_mask_1: 0.1947  m1_loss_dice_1: 1.375  m1_loss_ce_2: 0.5585  m1_loss_mask_2: 0.183  m1_loss_dice_2: 1.318  m1_loss_ce_3: 0.4898  m1_loss_mask_3: 0.1819  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.4592  m1_loss_mask_4: 0.1788  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.439  m1_loss_mask_5: 0.1789  m1_loss_dice_5: 1.264  m1_loss_ce_6: 0.4474  m1_loss_mask_6: 0.1784  m1_loss_dice_6: 1.258  m1_loss_ce_7: 0.4343  m1_loss_mask_7: 0.1759  m1_loss_dice_7: 1.258  m1_loss_ce_8: 0.439  m1_loss_mask_8: 0.1779  m1_loss_dice_8: 1.259  m2_loss_ce: 0.4722  m2_loss_mask: 0.1778  m2_loss_dice: 1.278  m2_loss_ce_0: 0.5996  m2_loss_mask_0: 0.2136  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6577  m2_loss_mask_1: 0.1958  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.5459  m2_loss_mask_2: 0.1798  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5091  m2_loss_mask_3: 0.1835  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5094  m2_loss_mask_4: 0.1749  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.4848  m2_loss_mask_5: 0.176  m2_loss_dice_5: 1.298  m2_loss_ce_6: 0.4638  m2_loss_mask_6: 0.1756  m2_loss_dice_6: 1.286  m2_loss_ce_7: 0.4591  m2_loss_mask_7: 0.176  m2_loss_dice_7: 1.27  m2_loss_ce_8: 0.4498  m2_loss_mask_8: 0.1758  m2_loss_dice_8: 1.271    time: 1.8453  last_time: 1.9047  data_time: 0.0992  last_data_time: 0.0850   lr: 0.0001  max_mem: 34313M
[10/03 00:15:57] d2.utils.events INFO:  eta: 0:26:54  iter: 119  total_loss: 41.11  m1_loss_ce: 0.4862  m1_loss_mask: 0.1871  m1_loss_dice: 1.235  m1_loss_ce_0: 0.5952  m1_loss_mask_0: 0.211  m1_loss_dice_0: 1.471  m1_loss_ce_1: 0.6692  m1_loss_mask_1: 0.1935  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.6139  m1_loss_mask_2: 0.1918  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.5421  m1_loss_mask_3: 0.1878  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5386  m1_loss_mask_4: 0.1877  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5321  m1_loss_mask_5: 0.1863  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.5059  m1_loss_mask_6: 0.1858  m1_loss_dice_6: 1.232  m1_loss_ce_7: 0.5357  m1_loss_mask_7: 0.186  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.5004  m1_loss_mask_8: 0.1867  m1_loss_dice_8: 1.244  m2_loss_ce: 0.5382  m2_loss_mask: 0.1856  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6113  m2_loss_mask_0: 0.2161  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6635  m2_loss_mask_1: 0.2034  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5871  m2_loss_mask_2: 0.1953  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5513  m2_loss_mask_3: 0.1926  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5468  m2_loss_mask_4: 0.1891  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5289  m2_loss_mask_5: 0.1877  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.5004  m2_loss_mask_6: 0.1852  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.5095  m2_loss_mask_7: 0.1849  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.5146  m2_loss_mask_8: 0.1841  m2_loss_dice_8: 1.222    time: 1.8425  last_time: 1.8641  data_time: 0.0721  last_data_time: 0.0649   lr: 0.0001  max_mem: 34313M
[10/03 00:16:34] d2.utils.events INFO:  eta: 0:26:22  iter: 139  total_loss: 37.68  m1_loss_ce: 0.4206  m1_loss_mask: 0.1823  m1_loss_dice: 1.168  m1_loss_ce_0: 0.5635  m1_loss_mask_0: 0.2056  m1_loss_dice_0: 1.363  m1_loss_ce_1: 0.6279  m1_loss_mask_1: 0.1955  m1_loss_dice_1: 1.302  m1_loss_ce_2: 0.5492  m1_loss_mask_2: 0.1867  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.4854  m1_loss_mask_3: 0.1844  m1_loss_dice_3: 1.193  m1_loss_ce_4: 0.4644  m1_loss_mask_4: 0.1775  m1_loss_dice_4: 1.181  m1_loss_ce_5: 0.4523  m1_loss_mask_5: 0.1811  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4342  m1_loss_mask_6: 0.1812  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.4336  m1_loss_mask_7: 0.1832  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.415  m1_loss_mask_8: 0.181  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4388  m2_loss_mask: 0.1759  m2_loss_dice: 1.203  m2_loss_ce_0: 0.5836  m2_loss_mask_0: 0.2067  m2_loss_dice_0: 1.364  m2_loss_ce_1: 0.6385  m2_loss_mask_1: 0.1951  m2_loss_dice_1: 1.32  m2_loss_ce_2: 0.5483  m2_loss_mask_2: 0.1831  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.5128  m2_loss_mask_3: 0.1803  m2_loss_dice_3: 1.195  m2_loss_ce_4: 0.469  m2_loss_mask_4: 0.1729  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.4546  m2_loss_mask_5: 0.1713  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.4546  m2_loss_mask_6: 0.1767  m2_loss_dice_6: 1.175  m2_loss_ce_7: 0.4534  m2_loss_mask_7: 0.1751  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.4332  m2_loss_mask_8: 0.1743  m2_loss_dice_8: 1.188    time: 1.8460  last_time: 1.7832  data_time: 0.0710  last_data_time: 0.0707   lr: 0.0001  max_mem: 34313M
[10/03 00:17:11] d2.utils.events INFO:  eta: 0:25:44  iter: 159  total_loss: 39.99  m1_loss_ce: 0.454  m1_loss_mask: 0.157  m1_loss_dice: 1.197  m1_loss_ce_0: 0.598  m1_loss_mask_0: 0.19  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.6808  m1_loss_mask_1: 0.1738  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.6439  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5442  m1_loss_mask_3: 0.1707  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.5215  m1_loss_mask_4: 0.163  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.5122  m1_loss_mask_5: 0.1618  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.4809  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4777  m1_loss_mask_7: 0.158  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4656  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.215  m2_loss_ce: 0.4637  m2_loss_mask: 0.1634  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6289  m2_loss_mask_0: 0.1871  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6681  m2_loss_mask_1: 0.1785  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.6187  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5112  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.5002  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.5063  m2_loss_mask_5: 0.1637  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4784  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.5041  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4664  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.228    time: 1.8446  last_time: 1.7300  data_time: 0.0783  last_data_time: 0.0609   lr: 0.0001  max_mem: 34313M
[10/03 00:17:46] d2.utils.events INFO:  eta: 0:25:00  iter: 179  total_loss: 39.88  m1_loss_ce: 0.4325  m1_loss_mask: 0.1526  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5369  m1_loss_mask_0: 0.1749  m1_loss_dice_0: 1.512  m1_loss_ce_1: 0.5802  m1_loss_mask_1: 0.1633  m1_loss_dice_1: 1.401  m1_loss_ce_2: 0.5663  m1_loss_mask_2: 0.1565  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5177  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5096  m1_loss_mask_4: 0.1582  m1_loss_dice_4: 1.28  m1_loss_ce_5: 0.4667  m1_loss_mask_5: 0.1542  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4503  m1_loss_mask_6: 0.155  m1_loss_dice_6: 1.256  m1_loss_ce_7: 0.4407  m1_loss_mask_7: 0.1531  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4343  m1_loss_mask_8: 0.154  m1_loss_dice_8: 1.269  m2_loss_ce: 0.4512  m2_loss_mask: 0.1578  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5651  m2_loss_mask_0: 0.1872  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6442  m2_loss_mask_1: 0.1743  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.5648  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5122  m2_loss_mask_3: 0.1575  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5093  m2_loss_mask_4: 0.1575  m2_loss_dice_4: 1.291  m2_loss_ce_5: 0.5013  m2_loss_mask_5: 0.1574  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.4615  m2_loss_mask_6: 0.1578  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.459  m2_loss_mask_7: 0.1563  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4428  m2_loss_mask_8: 0.1572  m2_loss_dice_8: 1.266    time: 1.8336  last_time: 1.8169  data_time: 0.0671  last_data_time: 0.0617   lr: 0.0001  max_mem: 34313M
[10/03 00:18:24] d2.utils.events INFO:  eta: 0:24:26  iter: 199  total_loss: 39.96  m1_loss_ce: 0.4483  m1_loss_mask: 0.1686  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5679  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6546  m1_loss_mask_1: 0.185  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5913  m1_loss_mask_2: 0.1751  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.497  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.4944  m1_loss_mask_4: 0.1714  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.5057  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.4597  m1_loss_mask_6: 0.1697  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.477  m1_loss_mask_7: 0.1692  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.449  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.233  m2_loss_ce: 0.4859  m2_loss_mask: 0.16  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6017  m2_loss_mask_0: 0.2046  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.6863  m2_loss_mask_1: 0.1927  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5987  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5432  m2_loss_mask_3: 0.1642  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5122  m2_loss_mask_4: 0.1604  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.521  m2_loss_mask_5: 0.1571  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.4957  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.4948  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4777  m2_loss_mask_8: 0.1589  m2_loss_dice_8: 1.231    time: 1.8357  last_time: 1.9585  data_time: 0.0713  last_data_time: 0.0738   lr: 0.0001  max_mem: 34313M
[10/03 00:19:02] d2.utils.events INFO:  eta: 0:23:50  iter: 219  total_loss: 41.18  m1_loss_ce: 0.4713  m1_loss_mask: 0.1717  m1_loss_dice: 1.314  m1_loss_ce_0: 0.5559  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6433  m1_loss_mask_1: 0.1762  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.578  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.345  m1_loss_ce_3: 0.5423  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.514  m1_loss_mask_4: 0.1715  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.5125  m1_loss_mask_5: 0.1722  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.474  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.287  m1_loss_ce_7: 0.4863  m1_loss_mask_7: 0.1721  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.4611  m1_loss_mask_8: 0.1716  m1_loss_dice_8: 1.252  m2_loss_ce: 0.4527  m2_loss_mask: 0.1727  m2_loss_dice: 1.304  m2_loss_ce_0: 0.6153  m2_loss_mask_0: 0.1936  m2_loss_dice_0: 1.514  m2_loss_ce_1: 0.6664  m2_loss_mask_1: 0.1849  m2_loss_dice_1: 1.425  m2_loss_ce_2: 0.621  m2_loss_mask_2: 0.175  m2_loss_dice_2: 1.373  m2_loss_ce_3: 0.551  m2_loss_mask_3: 0.1737  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.5066  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5313  m2_loss_mask_5: 0.1723  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.4953  m2_loss_mask_6: 0.1741  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.4938  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.4928  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.283    time: 1.8413  last_time: 2.1523  data_time: 0.0997  last_data_time: 0.0716   lr: 0.0001  max_mem: 35090M
[10/03 00:19:39] d2.utils.events INFO:  eta: 0:23:14  iter: 239  total_loss: 41.42  m1_loss_ce: 0.5091  m1_loss_mask: 0.1673  m1_loss_dice: 1.283  m1_loss_ce_0: 0.5964  m1_loss_mask_0: 0.1932  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.6871  m1_loss_mask_1: 0.1771  m1_loss_dice_1: 1.434  m1_loss_ce_2: 0.5975  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.389  m1_loss_ce_3: 0.5401  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.302  m1_loss_ce_4: 0.5453  m1_loss_mask_4: 0.1677  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.5208  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.301  m1_loss_ce_6: 0.5337  m1_loss_mask_6: 0.1679  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.4995  m1_loss_mask_7: 0.1671  m1_loss_dice_7: 1.282  m1_loss_ce_8: 0.4975  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.267  m2_loss_ce: 0.4866  m2_loss_mask: 0.167  m2_loss_dice: 1.29  m2_loss_ce_0: 0.6389  m2_loss_mask_0: 0.1929  m2_loss_dice_0: 1.513  m2_loss_ce_1: 0.7128  m2_loss_mask_1: 0.1912  m2_loss_dice_1: 1.456  m2_loss_ce_2: 0.5906  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.38  m2_loss_ce_3: 0.5768  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5405  m2_loss_mask_4: 0.164  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.4957  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.323  m2_loss_ce_6: 0.4971  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.5016  m2_loss_mask_7: 0.1678  m2_loss_dice_7: 1.283  m2_loss_ce_8: 0.4926  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.27    time: 1.8420  last_time: 1.9375  data_time: 0.0874  last_data_time: 0.0750   lr: 0.0001  max_mem: 35090M
[10/03 00:20:16] d2.utils.events INFO:  eta: 0:22:39  iter: 259  total_loss: 38.84  m1_loss_ce: 0.474  m1_loss_mask: 0.1735  m1_loss_dice: 1.196  m1_loss_ce_0: 0.5629  m1_loss_mask_0: 0.1866  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.6119  m1_loss_mask_1: 0.1814  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.5609  m1_loss_mask_2: 0.1767  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5234  m1_loss_mask_3: 0.1751  m1_loss_dice_3: 1.206  m1_loss_ce_4: 0.5228  m1_loss_mask_4: 0.1775  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.4902  m1_loss_mask_5: 0.1757  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.4874  m1_loss_mask_6: 0.1746  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4817  m1_loss_mask_7: 0.1754  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.487  m1_loss_mask_8: 0.1755  m1_loss_dice_8: 1.198  m2_loss_ce: 0.4394  m2_loss_mask: 0.177  m2_loss_dice: 1.241  m2_loss_ce_0: 0.5926  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.6514  m2_loss_mask_1: 0.1914  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.5718  m2_loss_mask_2: 0.1764  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.5052  m2_loss_mask_3: 0.1825  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5124  m2_loss_mask_4: 0.1691  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.4984  m2_loss_mask_5: 0.1756  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4651  m2_loss_mask_6: 0.1776  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4463  m2_loss_mask_7: 0.1785  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4593  m2_loss_mask_8: 0.1761  m2_loss_dice_8: 1.214    time: 1.8418  last_time: 1.7262  data_time: 0.0766  last_data_time: 0.0623   lr: 0.0001  max_mem: 35090M
[10/03 00:20:52] d2.utils.events INFO:  eta: 0:22:00  iter: 279  total_loss: 41.61  m1_loss_ce: 0.5145  m1_loss_mask: 0.1597  m1_loss_dice: 1.209  m1_loss_ce_0: 0.5935  m1_loss_mask_0: 0.1787  m1_loss_dice_0: 1.389  m1_loss_ce_1: 0.6244  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.5936  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.5566  m1_loss_mask_3: 0.1658  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5412  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5317  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.5625  m1_loss_mask_6: 0.1583  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.5277  m1_loss_mask_7: 0.1577  m1_loss_dice_7: 1.261  m1_loss_ce_8: 0.525  m1_loss_mask_8: 0.1603  m1_loss_dice_8: 1.216  m2_loss_ce: 0.5252  m2_loss_mask: 0.1614  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6739  m2_loss_mask_0: 0.1785  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.7245  m2_loss_mask_1: 0.1725  m2_loss_dice_1: 1.414  m2_loss_ce_2: 0.6318  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5766  m2_loss_mask_3: 0.1624  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.546  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.278  m2_loss_ce_5: 0.5504  m2_loss_mask_5: 0.1577  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5192  m2_loss_mask_6: 0.1553  m2_loss_dice_6: 1.25  m2_loss_ce_7: 0.533  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.5215  m2_loss_mask_8: 0.1583  m2_loss_dice_8: 1.261    time: 1.8391  last_time: 1.7297  data_time: 0.0775  last_data_time: 0.0616   lr: 0.0001  max_mem: 35090M
[10/03 00:21:28] d2.utils.events INFO:  eta: 0:21:19  iter: 299  total_loss: 40.55  m1_loss_ce: 0.4983  m1_loss_mask: 0.1714  m1_loss_dice: 1.239  m1_loss_ce_0: 0.576  m1_loss_mask_0: 0.202  m1_loss_dice_0: 1.475  m1_loss_ce_1: 0.6441  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.384  m1_loss_ce_2: 0.5789  m1_loss_mask_2: 0.1809  m1_loss_dice_2: 1.31  m1_loss_ce_3: 0.5313  m1_loss_mask_3: 0.1828  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.5209  m1_loss_mask_4: 0.1767  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.5102  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.4944  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.5013  m1_loss_mask_7: 0.1728  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.4947  m1_loss_mask_8: 0.1716  m1_loss_dice_8: 1.204  m2_loss_ce: 0.4456  m2_loss_mask: 0.1754  m2_loss_dice: 1.287  m2_loss_ce_0: 0.5998  m2_loss_mask_0: 0.2078  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.6733  m2_loss_mask_1: 0.1953  m2_loss_dice_1: 1.431  m2_loss_ce_2: 0.5576  m2_loss_mask_2: 0.1819  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5289  m2_loss_mask_3: 0.1724  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5216  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.307  m2_loss_ce_5: 0.4849  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.4767  m2_loss_mask_6: 0.1715  m2_loss_dice_6: 1.289  m2_loss_ce_7: 0.4535  m2_loss_mask_7: 0.1725  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4573  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.283    time: 1.8350  last_time: 1.9476  data_time: 0.0673  last_data_time: 0.0626   lr: 0.0001  max_mem: 35090M
[10/03 00:22:05] d2.utils.events INFO:  eta: 0:20:41  iter: 319  total_loss: 39.2  m1_loss_ce: 0.4438  m1_loss_mask: 0.1541  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5523  m1_loss_mask_0: 0.185  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6406  m1_loss_mask_1: 0.1684  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.5686  m1_loss_mask_2: 0.1644  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.5113  m1_loss_mask_3: 0.1607  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.4782  m1_loss_mask_4: 0.1581  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.4872  m1_loss_mask_5: 0.1572  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.4595  m1_loss_mask_6: 0.158  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4737  m1_loss_mask_7: 0.1553  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.4721  m1_loss_mask_8: 0.1548  m1_loss_dice_8: 1.223  m2_loss_ce: 0.4578  m2_loss_mask: 0.1539  m2_loss_dice: 1.23  m2_loss_ce_0: 0.5839  m2_loss_mask_0: 0.1828  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6419  m2_loss_mask_1: 0.1691  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.5654  m2_loss_mask_2: 0.1607  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5389  m2_loss_mask_3: 0.1583  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.4947  m2_loss_mask_4: 0.156  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.4933  m2_loss_mask_5: 0.1529  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.4882  m2_loss_mask_6: 0.1537  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.467  m2_loss_mask_7: 0.1521  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4701  m2_loss_mask_8: 0.1511  m2_loss_dice_8: 1.241    time: 1.8343  last_time: 1.7401  data_time: 0.0777  last_data_time: 0.0669   lr: 0.0001  max_mem: 35090M
[10/03 00:22:42] d2.utils.events INFO:  eta: 0:20:08  iter: 339  total_loss: 39.53  m1_loss_ce: 0.4926  m1_loss_mask: 0.1736  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5623  m1_loss_mask_0: 0.1965  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6211  m1_loss_mask_1: 0.1833  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.5981  m1_loss_mask_2: 0.1759  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5332  m1_loss_mask_3: 0.1721  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5026  m1_loss_mask_4: 0.1752  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.5009  m1_loss_mask_5: 0.1754  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.4935  m1_loss_mask_6: 0.1763  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.5101  m1_loss_mask_7: 0.1764  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4815  m1_loss_mask_8: 0.1745  m1_loss_dice_8: 1.212  m2_loss_ce: 0.5037  m2_loss_mask: 0.1726  m2_loss_dice: 1.235  m2_loss_ce_0: 0.6382  m2_loss_mask_0: 0.1904  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6633  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.326  m2_loss_ce_2: 0.6014  m2_loss_mask_2: 0.1766  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5538  m2_loss_mask_3: 0.173  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5332  m2_loss_mask_4: 0.1696  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5209  m2_loss_mask_5: 0.1747  m2_loss_dice_5: 1.212  m2_loss_ce_6: 0.5195  m2_loss_mask_6: 0.1741  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.5015  m2_loss_mask_7: 0.1744  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.4802  m2_loss_mask_8: 0.1718  m2_loss_dice_8: 1.207    time: 1.8357  last_time: 1.9210  data_time: 0.0709  last_data_time: 0.0629   lr: 0.0001  max_mem: 35090M
[10/03 00:23:21] d2.utils.events INFO:  eta: 0:19:33  iter: 359  total_loss: 42.89  m1_loss_ce: 0.4811  m1_loss_mask: 0.1725  m1_loss_dice: 1.364  m1_loss_ce_0: 0.5665  m1_loss_mask_0: 0.2104  m1_loss_dice_0: 1.566  m1_loss_ce_1: 0.6419  m1_loss_mask_1: 0.1874  m1_loss_dice_1: 1.467  m1_loss_ce_2: 0.587  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.423  m1_loss_ce_3: 0.5495  m1_loss_mask_3: 0.1786  m1_loss_dice_3: 1.381  m1_loss_ce_4: 0.537  m1_loss_mask_4: 0.1759  m1_loss_dice_4: 1.367  m1_loss_ce_5: 0.5311  m1_loss_mask_5: 0.1731  m1_loss_dice_5: 1.386  m1_loss_ce_6: 0.5121  m1_loss_mask_6: 0.1741  m1_loss_dice_6: 1.352  m1_loss_ce_7: 0.5088  m1_loss_mask_7: 0.1729  m1_loss_dice_7: 1.372  m1_loss_ce_8: 0.4805  m1_loss_mask_8: 0.1757  m1_loss_dice_8: 1.367  m2_loss_ce: 0.5039  m2_loss_mask: 0.1631  m2_loss_dice: 1.328  m2_loss_ce_0: 0.627  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.539  m2_loss_ce_1: 0.69  m2_loss_mask_1: 0.1872  m2_loss_dice_1: 1.487  m2_loss_ce_2: 0.6138  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.423  m2_loss_ce_3: 0.564  m2_loss_mask_3: 0.1727  m2_loss_dice_3: 1.369  m2_loss_ce_4: 0.5319  m2_loss_mask_4: 0.1677  m2_loss_dice_4: 1.32  m2_loss_ce_5: 0.5184  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.337  m2_loss_ce_6: 0.5394  m2_loss_mask_6: 0.1651  m2_loss_dice_6: 1.349  m2_loss_ce_7: 0.4824  m2_loss_mask_7: 0.1646  m2_loss_dice_7: 1.334  m2_loss_ce_8: 0.484  m2_loss_mask_8: 0.1628  m2_loss_dice_8: 1.329    time: 1.8391  last_time: 1.7267  data_time: 0.0775  last_data_time: 0.0852   lr: 0.0001  max_mem: 35090M
[10/03 00:23:59] d2.utils.events INFO:  eta: 0:19:00  iter: 379  total_loss: 39.17  m1_loss_ce: 0.424  m1_loss_mask: 0.1629  m1_loss_dice: 1.275  m1_loss_ce_0: 0.5296  m1_loss_mask_0: 0.1827  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.6101  m1_loss_mask_1: 0.1733  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.5655  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.4997  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.4704  m1_loss_mask_4: 0.1639  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.4613  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4354  m1_loss_mask_6: 0.1642  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.4101  m1_loss_mask_7: 0.1645  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4065  m1_loss_mask_8: 0.1638  m1_loss_dice_8: 1.246  m2_loss_ce: 0.4555  m2_loss_mask: 0.165  m2_loss_dice: 1.245  m2_loss_ce_0: 0.5916  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.6327  m2_loss_mask_1: 0.1772  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.5788  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5102  m2_loss_mask_3: 0.1667  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.5378  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5328  m2_loss_mask_5: 0.1636  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.484  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.4981  m2_loss_mask_7: 0.1655  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4942  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.224    time: 1.8421  last_time: 1.8741  data_time: 0.0749  last_data_time: 0.0621   lr: 0.0001  max_mem: 35090M
[10/03 00:24:36] d2.utils.events INFO:  eta: 0:18:24  iter: 399  total_loss: 39.2  m1_loss_ce: 0.4447  m1_loss_mask: 0.1647  m1_loss_dice: 1.231  m1_loss_ce_0: 0.544  m1_loss_mask_0: 0.1953  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.6257  m1_loss_mask_1: 0.1811  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.573  m1_loss_mask_2: 0.174  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5375  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.4923  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.4777  m1_loss_mask_5: 0.1697  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.4483  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.274  m1_loss_ce_7: 0.4505  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.448  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.221  m2_loss_ce: 0.4605  m2_loss_mask: 0.1663  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.492  m2_loss_ce_1: 0.7007  m2_loss_mask_1: 0.1821  m2_loss_dice_1: 1.35  m2_loss_ce_2: 0.5793  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5109  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.5169  m2_loss_mask_4: 0.1682  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5232  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4984  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.4715  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.4685  m2_loss_mask_8: 0.1648  m2_loss_dice_8: 1.27    time: 1.8429  last_time: 1.8565  data_time: 0.0858  last_data_time: 0.0678   lr: 0.0001  max_mem: 35090M
[10/03 00:25:14] d2.utils.events INFO:  eta: 0:17:49  iter: 419  total_loss: 37.97  m1_loss_ce: 0.4232  m1_loss_mask: 0.1712  m1_loss_dice: 1.132  m1_loss_ce_0: 0.5457  m1_loss_mask_0: 0.1949  m1_loss_dice_0: 1.349  m1_loss_ce_1: 0.5679  m1_loss_mask_1: 0.1809  m1_loss_dice_1: 1.265  m1_loss_ce_2: 0.5354  m1_loss_mask_2: 0.174  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.49  m1_loss_mask_3: 0.1752  m1_loss_dice_3: 1.134  m1_loss_ce_4: 0.4794  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.118  m1_loss_ce_5: 0.4449  m1_loss_mask_5: 0.1748  m1_loss_dice_5: 1.128  m1_loss_ce_6: 0.4376  m1_loss_mask_6: 0.1739  m1_loss_dice_6: 1.139  m1_loss_ce_7: 0.4273  m1_loss_mask_7: 0.1725  m1_loss_dice_7: 1.131  m1_loss_ce_8: 0.4206  m1_loss_mask_8: 0.1734  m1_loss_dice_8: 1.132  m2_loss_ce: 0.4471  m2_loss_mask: 0.1767  m2_loss_dice: 1.166  m2_loss_ce_0: 0.5567  m2_loss_mask_0: 0.2026  m2_loss_dice_0: 1.399  m2_loss_ce_1: 0.6483  m2_loss_mask_1: 0.1882  m2_loss_dice_1: 1.299  m2_loss_ce_2: 0.5659  m2_loss_mask_2: 0.1821  m2_loss_dice_2: 1.2  m2_loss_ce_3: 0.5371  m2_loss_mask_3: 0.1788  m2_loss_dice_3: 1.154  m2_loss_ce_4: 0.5018  m2_loss_mask_4: 0.1752  m2_loss_dice_4: 1.164  m2_loss_ce_5: 0.4865  m2_loss_mask_5: 0.1774  m2_loss_dice_5: 1.168  m2_loss_ce_6: 0.4734  m2_loss_mask_6: 0.1783  m2_loss_dice_6: 1.149  m2_loss_ce_7: 0.4636  m2_loss_mask_7: 0.1785  m2_loss_dice_7: 1.158  m2_loss_ce_8: 0.4757  m2_loss_mask_8: 0.1784  m2_loss_dice_8: 1.16    time: 1.8453  last_time: 1.9160  data_time: 0.0875  last_data_time: 0.0615   lr: 0.0001  max_mem: 35090M
[10/03 00:25:52] d2.utils.events INFO:  eta: 0:17:13  iter: 439  total_loss: 39.87  m1_loss_ce: 0.4613  m1_loss_mask: 0.1705  m1_loss_dice: 1.175  m1_loss_ce_0: 0.5379  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.5921  m1_loss_mask_1: 0.1872  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.5394  m1_loss_mask_2: 0.1781  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.5009  m1_loss_mask_3: 0.1769  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.4659  m1_loss_mask_4: 0.1769  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4587  m1_loss_mask_5: 0.1745  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.4604  m1_loss_mask_6: 0.1728  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4435  m1_loss_mask_7: 0.1713  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4163  m1_loss_mask_8: 0.1712  m1_loss_dice_8: 1.211  m2_loss_ce: 0.4768  m2_loss_mask: 0.1704  m2_loss_dice: 1.205  m2_loss_ce_0: 0.6304  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6789  m2_loss_mask_1: 0.1854  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.5715  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5359  m2_loss_mask_3: 0.176  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5308  m2_loss_mask_4: 0.1762  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5238  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4764  m2_loss_mask_6: 0.1742  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.4977  m2_loss_mask_7: 0.174  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4687  m2_loss_mask_8: 0.1707  m2_loss_dice_8: 1.248    time: 1.8465  last_time: 1.7435  data_time: 0.1021  last_data_time: 0.0637   lr: 0.0001  max_mem: 35090M
[10/03 00:26:29] d2.utils.events INFO:  eta: 0:16:36  iter: 459  total_loss: 39.72  m1_loss_ce: 0.4201  m1_loss_mask: 0.1754  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5586  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.595  m1_loss_mask_1: 0.1817  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.514  m1_loss_mask_2: 0.1792  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.4677  m1_loss_mask_3: 0.1733  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.4846  m1_loss_mask_4: 0.1729  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.4725  m1_loss_mask_5: 0.1749  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.4573  m1_loss_mask_6: 0.175  m1_loss_dice_6: 1.259  m1_loss_ce_7: 0.4437  m1_loss_mask_7: 0.175  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4304  m1_loss_mask_8: 0.1769  m1_loss_dice_8: 1.248  m2_loss_ce: 0.4799  m2_loss_mask: 0.1731  m2_loss_dice: 1.266  m2_loss_ce_0: 0.6041  m2_loss_mask_0: 0.2062  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6407  m2_loss_mask_1: 0.1902  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.5621  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.5207  m2_loss_mask_3: 0.1803  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5147  m2_loss_mask_4: 0.1725  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.51  m2_loss_mask_5: 0.1722  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.4941  m2_loss_mask_6: 0.1723  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5081  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.4945  m2_loss_mask_8: 0.1729  m2_loss_dice_8: 1.245    time: 1.8461  last_time: 1.8853  data_time: 0.0916  last_data_time: 0.0984   lr: 0.0001  max_mem: 35090M
[10/03 00:27:06] d2.utils.events INFO:  eta: 0:16:00  iter: 479  total_loss: 39.77  m1_loss_ce: 0.4464  m1_loss_mask: 0.1752  m1_loss_dice: 1.177  m1_loss_ce_0: 0.5302  m1_loss_mask_0: 0.2019  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.6002  m1_loss_mask_1: 0.1861  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5584  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.5034  m1_loss_mask_3: 0.1757  m1_loss_dice_3: 1.18  m1_loss_ce_4: 0.4999  m1_loss_mask_4: 0.1756  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.484  m1_loss_mask_5: 0.1748  m1_loss_dice_5: 1.153  m1_loss_ce_6: 0.4678  m1_loss_mask_6: 0.1771  m1_loss_dice_6: 1.162  m1_loss_ce_7: 0.4431  m1_loss_mask_7: 0.1768  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4459  m1_loss_mask_8: 0.1752  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4517  m2_loss_mask: 0.1795  m2_loss_dice: 1.229  m2_loss_ce_0: 0.5878  m2_loss_mask_0: 0.2173  m2_loss_dice_0: 1.43  m2_loss_ce_1: 0.6573  m2_loss_mask_1: 0.1988  m2_loss_dice_1: 1.326  m2_loss_ce_2: 0.5722  m2_loss_mask_2: 0.188  m2_loss_dice_2: 1.285  m2_loss_ce_3: 0.5088  m2_loss_mask_3: 0.1839  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5142  m2_loss_mask_4: 0.1799  m2_loss_dice_4: 1.209  m2_loss_ce_5: 0.5214  m2_loss_mask_5: 0.1788  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.4805  m2_loss_mask_6: 0.1792  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.4847  m2_loss_mask_7: 0.1806  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4831  m2_loss_mask_8: 0.1795  m2_loss_dice_8: 1.212    time: 1.8467  last_time: 1.9800  data_time: 0.0795  last_data_time: 0.1530   lr: 0.0001  max_mem: 35090M
[10/03 00:27:43] d2.utils.events INFO:  eta: 0:15:22  iter: 499  total_loss: 40.95  m1_loss_ce: 0.5198  m1_loss_mask: 0.1635  m1_loss_dice: 1.225  m1_loss_ce_0: 0.5904  m1_loss_mask_0: 0.1821  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.6505  m1_loss_mask_1: 0.1764  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.5978  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5599  m1_loss_mask_3: 0.1641  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.5335  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.5216  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5165  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.481  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.4885  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.217  m2_loss_ce: 0.4786  m2_loss_mask: 0.1547  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6456  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6586  m2_loss_mask_1: 0.1775  m2_loss_dice_1: 1.438  m2_loss_ce_2: 0.6123  m2_loss_mask_2: 0.1579  m2_loss_dice_2: 1.387  m2_loss_ce_3: 0.5442  m2_loss_mask_3: 0.1598  m2_loss_dice_3: 1.333  m2_loss_ce_4: 0.5807  m2_loss_mask_4: 0.156  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5122  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5303  m2_loss_mask_6: 0.1556  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5368  m2_loss_mask_7: 0.1558  m2_loss_dice_7: 1.286  m2_loss_ce_8: 0.5161  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.259    time: 1.8450  last_time: 2.0218  data_time: 0.0799  last_data_time: 0.1719   lr: 0.0001  max_mem: 35090M
[10/03 00:28:21] d2.utils.events INFO:  eta: 0:14:46  iter: 519  total_loss: 42.43  m1_loss_ce: 0.4971  m1_loss_mask: 0.1545  m1_loss_dice: 1.225  m1_loss_ce_0: 0.6159  m1_loss_mask_0: 0.181  m1_loss_dice_0: 1.517  m1_loss_ce_1: 0.6887  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.409  m1_loss_ce_2: 0.6165  m1_loss_mask_2: 0.1609  m1_loss_dice_2: 1.368  m1_loss_ce_3: 0.5371  m1_loss_mask_3: 0.1591  m1_loss_dice_3: 1.302  m1_loss_ce_4: 0.5254  m1_loss_mask_4: 0.1556  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.5306  m1_loss_mask_5: 0.1566  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.527  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.5175  m1_loss_mask_7: 0.1525  m1_loss_dice_7: 1.258  m1_loss_ce_8: 0.5207  m1_loss_mask_8: 0.1559  m1_loss_dice_8: 1.288  m2_loss_ce: 0.5208  m2_loss_mask: 0.1609  m2_loss_dice: 1.327  m2_loss_ce_0: 0.6234  m2_loss_mask_0: 0.1877  m2_loss_dice_0: 1.545  m2_loss_ce_1: 0.7062  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.498  m2_loss_ce_2: 0.6117  m2_loss_mask_2: 0.1564  m2_loss_dice_2: 1.398  m2_loss_ce_3: 0.5645  m2_loss_mask_3: 0.1615  m2_loss_dice_3: 1.317  m2_loss_ce_4: 0.5392  m2_loss_mask_4: 0.1599  m2_loss_dice_4: 1.352  m2_loss_ce_5: 0.5261  m2_loss_mask_5: 0.1599  m2_loss_dice_5: 1.323  m2_loss_ce_6: 0.5217  m2_loss_mask_6: 0.1578  m2_loss_dice_6: 1.33  m2_loss_ce_7: 0.5271  m2_loss_mask_7: 0.1589  m2_loss_dice_7: 1.306  m2_loss_ce_8: 0.5329  m2_loss_mask_8: 0.1582  m2_loss_dice_8: 1.301    time: 1.8471  last_time: 1.8107  data_time: 0.1018  last_data_time: 0.1231   lr: 0.0001  max_mem: 35090M
[10/03 00:28:59] d2.utils.events INFO:  eta: 0:14:11  iter: 539  total_loss: 37.96  m1_loss_ce: 0.447  m1_loss_mask: 0.1728  m1_loss_dice: 1.159  m1_loss_ce_0: 0.5306  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.5927  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.5357  m1_loss_mask_2: 0.1788  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.497  m1_loss_mask_3: 0.1784  m1_loss_dice_3: 1.224  m1_loss_ce_4: 0.4651  m1_loss_mask_4: 0.1766  m1_loss_dice_4: 1.173  m1_loss_ce_5: 0.4476  m1_loss_mask_5: 0.1755  m1_loss_dice_5: 1.169  m1_loss_ce_6: 0.4456  m1_loss_mask_6: 0.1752  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4525  m1_loss_mask_7: 0.1741  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4457  m1_loss_mask_8: 0.1741  m1_loss_dice_8: 1.158  m2_loss_ce: 0.4304  m2_loss_mask: 0.1747  m2_loss_dice: 1.221  m2_loss_ce_0: 0.5613  m2_loss_mask_0: 0.1958  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.652  m2_loss_mask_1: 0.1869  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.5354  m2_loss_mask_2: 0.1771  m2_loss_dice_2: 1.253  m2_loss_ce_3: 0.5225  m2_loss_mask_3: 0.1751  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.4769  m2_loss_mask_4: 0.1737  m2_loss_dice_4: 1.22  m2_loss_ce_5: 0.4729  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.2  m2_loss_ce_6: 0.4543  m2_loss_mask_6: 0.1722  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4611  m2_loss_mask_7: 0.1735  m2_loss_dice_7: 1.199  m2_loss_ce_8: 0.4639  m2_loss_mask_8: 0.1744  m2_loss_dice_8: 1.196    time: 1.8487  last_time: 1.8528  data_time: 0.0811  last_data_time: 0.0725   lr: 0.0001  max_mem: 35090M
[10/03 00:29:36] d2.utils.events INFO:  eta: 0:13:34  iter: 559  total_loss: 40.34  m1_loss_ce: 0.4955  m1_loss_mask: 0.1574  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5399  m1_loss_mask_0: 0.1833  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.6291  m1_loss_mask_1: 0.168  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.5912  m1_loss_mask_2: 0.1604  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5492  m1_loss_mask_3: 0.1618  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.5009  m1_loss_mask_4: 0.1579  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.5202  m1_loss_mask_5: 0.1581  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.51  m1_loss_mask_6: 0.1583  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.4844  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4909  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4865  m2_loss_mask: 0.165  m2_loss_dice: 1.273  m2_loss_ce_0: 0.6027  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6821  m2_loss_mask_1: 0.1755  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5858  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5653  m2_loss_mask_3: 0.1642  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.5431  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.5088  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.262  m2_loss_ce_6: 0.5053  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5054  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.295  m2_loss_ce_8: 0.4868  m2_loss_mask_8: 0.166  m2_loss_dice_8: 1.279    time: 1.8488  last_time: 2.0663  data_time: 0.0850  last_data_time: 0.1556   lr: 0.0001  max_mem: 35090M
[10/03 00:30:14] d2.utils.events INFO:  eta: 0:12:57  iter: 579  total_loss: 39.76  m1_loss_ce: 0.4655  m1_loss_mask: 0.1574  m1_loss_dice: 1.202  m1_loss_ce_0: 0.5358  m1_loss_mask_0: 0.1827  m1_loss_dice_0: 1.373  m1_loss_ce_1: 0.6104  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.5654  m1_loss_mask_2: 0.1653  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.5242  m1_loss_mask_3: 0.1633  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.4843  m1_loss_mask_4: 0.1636  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.4943  m1_loss_mask_5: 0.1627  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.483  m1_loss_mask_6: 0.1597  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4593  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4824  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.194  m2_loss_ce: 0.4784  m2_loss_mask: 0.1631  m2_loss_dice: 1.209  m2_loss_ce_0: 0.6279  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.6541  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.5695  m2_loss_mask_2: 0.1658  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.561  m2_loss_mask_3: 0.165  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5347  m2_loss_mask_4: 0.1616  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.5555  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5202  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5083  m2_loss_mask_7: 0.164  m2_loss_dice_7: 1.188  m2_loss_ce_8: 0.4875  m2_loss_mask_8: 0.1628  m2_loss_dice_8: 1.243    time: 1.8497  last_time: 1.9395  data_time: 0.1028  last_data_time: 0.0624   lr: 0.0001  max_mem: 35090M
[10/03 00:30:52] d2.utils.events INFO:  eta: 0:12:21  iter: 599  total_loss: 39.49  m1_loss_ce: 0.457  m1_loss_mask: 0.1642  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5807  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.659  m1_loss_mask_1: 0.1815  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.571  m1_loss_mask_2: 0.1717  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5475  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.5049  m1_loss_mask_4: 0.1683  m1_loss_dice_4: 1.181  m1_loss_ce_5: 0.4814  m1_loss_mask_5: 0.1687  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4752  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4681  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4834  m1_loss_mask_8: 0.1625  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4777  m2_loss_mask: 0.171  m2_loss_dice: 1.287  m2_loss_ce_0: 0.6044  m2_loss_mask_0: 0.2127  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.6735  m2_loss_mask_1: 0.1968  m2_loss_dice_1: 1.414  m2_loss_ce_2: 0.5859  m2_loss_mask_2: 0.1804  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5733  m2_loss_mask_3: 0.1743  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5346  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5294  m2_loss_mask_5: 0.1711  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.4857  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.4867  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.5012  m2_loss_mask_8: 0.1704  m2_loss_dice_8: 1.262    time: 1.8507  last_time: 1.8462  data_time: 0.0950  last_data_time: 0.0793   lr: 0.0001  max_mem: 35090M
[10/03 00:31:30] d2.utils.events INFO:  eta: 0:11:44  iter: 619  total_loss: 40.32  m1_loss_ce: 0.4817  m1_loss_mask: 0.1504  m1_loss_dice: 1.249  m1_loss_ce_0: 0.5621  m1_loss_mask_0: 0.1819  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6398  m1_loss_mask_1: 0.1655  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.5948  m1_loss_mask_2: 0.1538  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.4903  m1_loss_mask_3: 0.1548  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5193  m1_loss_mask_4: 0.1516  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.5028  m1_loss_mask_5: 0.1511  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.5043  m1_loss_mask_6: 0.1506  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.4973  m1_loss_mask_7: 0.1503  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.4989  m1_loss_mask_8: 0.1499  m1_loss_dice_8: 1.219  m2_loss_ce: 0.5051  m2_loss_mask: 0.154  m2_loss_dice: 1.291  m2_loss_ce_0: 0.6296  m2_loss_mask_0: 0.1834  m2_loss_dice_0: 1.51  m2_loss_ce_1: 0.6769  m2_loss_mask_1: 0.1665  m2_loss_dice_1: 1.449  m2_loss_ce_2: 0.5988  m2_loss_mask_2: 0.1547  m2_loss_dice_2: 1.354  m2_loss_ce_3: 0.5495  m2_loss_mask_3: 0.1546  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5449  m2_loss_mask_4: 0.1549  m2_loss_dice_4: 1.291  m2_loss_ce_5: 0.5285  m2_loss_mask_5: 0.15  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.508  m2_loss_mask_6: 0.1521  m2_loss_dice_6: 1.325  m2_loss_ce_7: 0.5076  m2_loss_mask_7: 0.1526  m2_loss_dice_7: 1.279  m2_loss_ce_8: 0.4934  m2_loss_mask_8: 0.1511  m2_loss_dice_8: 1.287    time: 1.8518  last_time: 1.9768  data_time: 0.0894  last_data_time: 0.0650   lr: 0.0001  max_mem: 35090M
[10/03 00:32:07] d2.utils.events INFO:  eta: 0:11:07  iter: 639  total_loss: 39.24  m1_loss_ce: 0.4484  m1_loss_mask: 0.1547  m1_loss_dice: 1.194  m1_loss_ce_0: 0.5345  m1_loss_mask_0: 0.1786  m1_loss_dice_0: 1.395  m1_loss_ce_1: 0.5662  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5333  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.4792  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.467  m1_loss_mask_4: 0.1592  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.4637  m1_loss_mask_5: 0.1555  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.4419  m1_loss_mask_6: 0.1553  m1_loss_dice_6: 1.151  m1_loss_ce_7: 0.4394  m1_loss_mask_7: 0.158  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.45  m1_loss_mask_8: 0.1541  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4417  m2_loss_mask: 0.1646  m2_loss_dice: 1.237  m2_loss_ce_0: 0.5657  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6259  m2_loss_mask_1: 0.1867  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.556  m2_loss_mask_2: 0.1729  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.4979  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.4777  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.4768  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.276  m2_loss_ce_6: 0.4744  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4707  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.4615  m2_loss_mask_8: 0.1647  m2_loss_dice_8: 1.222    time: 1.8522  last_time: 1.7795  data_time: 0.0791  last_data_time: 0.0936   lr: 0.0001  max_mem: 35090M
[10/03 00:32:44] d2.utils.events INFO:  eta: 0:10:30  iter: 659  total_loss: 41.27  m1_loss_ce: 0.4545  m1_loss_mask: 0.1561  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5643  m1_loss_mask_0: 0.1787  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.5818  m1_loss_mask_1: 0.1688  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.5812  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.353  m1_loss_ce_3: 0.481  m1_loss_mask_3: 0.1616  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.4869  m1_loss_mask_4: 0.162  m1_loss_dice_4: 1.29  m1_loss_ce_5: 0.4572  m1_loss_mask_5: 0.1608  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.4939  m1_loss_mask_6: 0.1559  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4393  m1_loss_mask_7: 0.1547  m1_loss_dice_7: 1.264  m1_loss_ce_8: 0.4599  m1_loss_mask_8: 0.1558  m1_loss_dice_8: 1.232  m2_loss_ce: 0.459  m2_loss_mask: 0.1592  m2_loss_dice: 1.321  m2_loss_ce_0: 0.5916  m2_loss_mask_0: 0.1925  m2_loss_dice_0: 1.525  m2_loss_ce_1: 0.6925  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.5952  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.372  m2_loss_ce_3: 0.5359  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.361  m2_loss_ce_4: 0.5251  m2_loss_mask_4: 0.1649  m2_loss_dice_4: 1.319  m2_loss_ce_5: 0.529  m2_loss_mask_5: 0.1614  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.5051  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.313  m2_loss_ce_7: 0.5207  m2_loss_mask_7: 0.1622  m2_loss_dice_7: 1.31  m2_loss_ce_8: 0.4533  m2_loss_mask_8: 0.1633  m2_loss_dice_8: 1.308    time: 1.8519  last_time: 1.9240  data_time: 0.0947  last_data_time: 0.1517   lr: 0.0001  max_mem: 35090M
[10/03 00:33:22] d2.utils.events INFO:  eta: 0:09:53  iter: 679  total_loss: 39.15  m1_loss_ce: 0.4019  m1_loss_mask: 0.1706  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5247  m1_loss_mask_0: 0.1947  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.5769  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.5447  m1_loss_mask_2: 0.1697  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.4825  m1_loss_mask_3: 0.1724  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.4559  m1_loss_mask_4: 0.1699  m1_loss_dice_4: 1.202  m1_loss_ce_5: 0.4432  m1_loss_mask_5: 0.1666  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.4193  m1_loss_mask_6: 0.1687  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.4133  m1_loss_mask_7: 0.1675  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.4163  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.185  m2_loss_ce: 0.4715  m2_loss_mask: 0.1725  m2_loss_dice: 1.219  m2_loss_ce_0: 0.5865  m2_loss_mask_0: 0.1941  m2_loss_dice_0: 1.405  m2_loss_ce_1: 0.6297  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5779  m2_loss_mask_2: 0.1762  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5293  m2_loss_mask_3: 0.1752  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5038  m2_loss_mask_4: 0.1742  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.4946  m2_loss_mask_5: 0.171  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.4787  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.185  m2_loss_ce_7: 0.4767  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.4703  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.204    time: 1.8521  last_time: 1.8475  data_time: 0.0944  last_data_time: 0.1056   lr: 0.0001  max_mem: 35090M
[10/03 00:33:59] d2.utils.events INFO:  eta: 0:09:16  iter: 699  total_loss: 39.26  m1_loss_ce: 0.4724  m1_loss_mask: 0.1553  m1_loss_dice: 1.256  m1_loss_ce_0: 0.5431  m1_loss_mask_0: 0.1792  m1_loss_dice_0: 1.486  m1_loss_ce_1: 0.6061  m1_loss_mask_1: 0.1621  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5488  m1_loss_mask_2: 0.1567  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5197  m1_loss_mask_3: 0.1557  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.467  m1_loss_mask_4: 0.1563  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.4663  m1_loss_mask_5: 0.1559  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.4571  m1_loss_mask_6: 0.1541  m1_loss_dice_6: 1.262  m1_loss_ce_7: 0.4571  m1_loss_mask_7: 0.1537  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4561  m1_loss_mask_8: 0.1522  m1_loss_dice_8: 1.238  m2_loss_ce: 0.4761  m2_loss_mask: 0.1561  m2_loss_dice: 1.239  m2_loss_ce_0: 0.5907  m2_loss_mask_0: 0.1799  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6774  m2_loss_mask_1: 0.1706  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.6036  m2_loss_mask_2: 0.1591  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5493  m2_loss_mask_3: 0.1558  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.532  m2_loss_mask_4: 0.1551  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.4834  m2_loss_mask_5: 0.155  m2_loss_dice_5: 1.222  m2_loss_ce_6: 0.4704  m2_loss_mask_6: 0.1582  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.4999  m2_loss_mask_7: 0.1562  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.4893  m2_loss_mask_8: 0.1567  m2_loss_dice_8: 1.252    time: 1.8529  last_time: 1.8003  data_time: 0.0945  last_data_time: 0.0759   lr: 0.0001  max_mem: 35090M
[10/03 00:34:36] d2.utils.events INFO:  eta: 0:08:38  iter: 719  total_loss: 40.43  m1_loss_ce: 0.4541  m1_loss_mask: 0.1634  m1_loss_dice: 1.247  m1_loss_ce_0: 0.6124  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.624  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.424  m1_loss_ce_2: 0.5564  m1_loss_mask_2: 0.1658  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.5073  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.4923  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.289  m1_loss_ce_5: 0.4874  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.27  m1_loss_ce_6: 0.4717  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.4471  m1_loss_mask_7: 0.1641  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.418  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.236  m2_loss_ce: 0.475  m2_loss_mask: 0.169  m2_loss_dice: 1.297  m2_loss_ce_0: 0.6513  m2_loss_mask_0: 0.1927  m2_loss_dice_0: 1.439  m2_loss_ce_1: 0.6772  m2_loss_mask_1: 0.1847  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.5856  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.5353  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.5006  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.317  m2_loss_ce_5: 0.501  m2_loss_mask_5: 0.1649  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.4652  m2_loss_mask_6: 0.169  m2_loss_dice_6: 1.308  m2_loss_ce_7: 0.5041  m2_loss_mask_7: 0.169  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.4825  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.319    time: 1.8518  last_time: 1.8924  data_time: 0.0831  last_data_time: 0.0806   lr: 0.0001  max_mem: 35090M
[10/03 00:35:13] d2.utils.events INFO:  eta: 0:08:01  iter: 739  total_loss: 39.41  m1_loss_ce: 0.422  m1_loss_mask: 0.1669  m1_loss_dice: 1.203  m1_loss_ce_0: 0.557  m1_loss_mask_0: 0.1949  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.6026  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.5467  m1_loss_mask_2: 0.1688  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.4779  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.4372  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.4553  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.434  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4608  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4577  m1_loss_mask_8: 0.1667  m1_loss_dice_8: 1.22  m2_loss_ce: 0.4471  m2_loss_mask: 0.1694  m2_loss_dice: 1.239  m2_loss_ce_0: 0.5802  m2_loss_mask_0: 0.2026  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6435  m2_loss_mask_1: 0.1892  m2_loss_dice_1: 1.357  m2_loss_ce_2: 0.5598  m2_loss_mask_2: 0.1759  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.5039  m2_loss_mask_3: 0.1742  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.4843  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.4854  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.4649  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.4591  m2_loss_mask_7: 0.1707  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.4551  m2_loss_mask_8: 0.1686  m2_loss_dice_8: 1.249    time: 1.8521  last_time: 1.7881  data_time: 0.1005  last_data_time: 0.0603   lr: 0.0001  max_mem: 35090M
[10/03 00:35:51] d2.utils.events INFO:  eta: 0:07:25  iter: 759  total_loss: 37.34  m1_loss_ce: 0.3755  m1_loss_mask: 0.1754  m1_loss_dice: 1.172  m1_loss_ce_0: 0.5265  m1_loss_mask_0: 0.206  m1_loss_dice_0: 1.374  m1_loss_ce_1: 0.5798  m1_loss_mask_1: 0.1917  m1_loss_dice_1: 1.298  m1_loss_ce_2: 0.5088  m1_loss_mask_2: 0.184  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.4456  m1_loss_mask_3: 0.1858  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.4273  m1_loss_mask_4: 0.1853  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.4055  m1_loss_mask_5: 0.1797  m1_loss_dice_5: 1.152  m1_loss_ce_6: 0.4213  m1_loss_mask_6: 0.1792  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.3973  m1_loss_mask_7: 0.1783  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.4089  m1_loss_mask_8: 0.1768  m1_loss_dice_8: 1.165  m2_loss_ce: 0.4488  m2_loss_mask: 0.1788  m2_loss_dice: 1.224  m2_loss_ce_0: 0.5559  m2_loss_mask_0: 0.2151  m2_loss_dice_0: 1.374  m2_loss_ce_1: 0.6131  m2_loss_mask_1: 0.2028  m2_loss_dice_1: 1.298  m2_loss_ce_2: 0.5269  m2_loss_mask_2: 0.1891  m2_loss_dice_2: 1.236  m2_loss_ce_3: 0.4921  m2_loss_mask_3: 0.1882  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.4693  m2_loss_mask_4: 0.1847  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.4813  m2_loss_mask_5: 0.1796  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.4649  m2_loss_mask_6: 0.1782  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4343  m2_loss_mask_7: 0.178  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.4277  m2_loss_mask_8: 0.1769  m2_loss_dice_8: 1.215    time: 1.8532  last_time: 1.8482  data_time: 0.1058  last_data_time: 0.0812   lr: 0.0001  max_mem: 35090M
[10/03 00:36:29] d2.utils.events INFO:  eta: 0:06:48  iter: 779  total_loss: 40.75  m1_loss_ce: 0.4525  m1_loss_mask: 0.1613  m1_loss_dice: 1.245  m1_loss_ce_0: 0.5856  m1_loss_mask_0: 0.1884  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6192  m1_loss_mask_1: 0.1724  m1_loss_dice_1: 1.406  m1_loss_ce_2: 0.5358  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.523  m1_loss_mask_3: 0.1629  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.4619  m1_loss_mask_4: 0.1627  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4927  m1_loss_mask_5: 0.1608  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4782  m1_loss_mask_6: 0.1645  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4549  m1_loss_mask_7: 0.1614  m1_loss_dice_7: 1.229  m1_loss_ce_8: 0.4301  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4405  m2_loss_mask: 0.1745  m2_loss_dice: 1.304  m2_loss_ce_0: 0.632  m2_loss_mask_0: 0.2038  m2_loss_dice_0: 1.602  m2_loss_ce_1: 0.6777  m2_loss_mask_1: 0.19  m2_loss_dice_1: 1.458  m2_loss_ce_2: 0.5841  m2_loss_mask_2: 0.1795  m2_loss_dice_2: 1.437  m2_loss_ce_3: 0.5538  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.327  m2_loss_ce_4: 0.5368  m2_loss_mask_4: 0.1725  m2_loss_dice_4: 1.332  m2_loss_ce_5: 0.5472  m2_loss_mask_5: 0.1722  m2_loss_dice_5: 1.331  m2_loss_ce_6: 0.4997  m2_loss_mask_6: 0.1761  m2_loss_dice_6: 1.311  m2_loss_ce_7: 0.4671  m2_loss_mask_7: 0.1755  m2_loss_dice_7: 1.321  m2_loss_ce_8: 0.4799  m2_loss_mask_8: 0.1734  m2_loss_dice_8: 1.326    time: 1.8546  last_time: 1.9727  data_time: 0.0972  last_data_time: 0.1703   lr: 0.0001  max_mem: 35090M
[10/03 00:37:07] d2.utils.events INFO:  eta: 0:06:11  iter: 799  total_loss: 39.98  m1_loss_ce: 0.4406  m1_loss_mask: 0.1624  m1_loss_dice: 1.188  m1_loss_ce_0: 0.542  m1_loss_mask_0: 0.1852  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.603  m1_loss_mask_1: 0.1705  m1_loss_dice_1: 1.283  m1_loss_ce_2: 0.5843  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.533  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4942  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.4795  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.4844  m1_loss_mask_6: 0.1671  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.466  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4724  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.203  m2_loss_ce: 0.5135  m2_loss_mask: 0.1614  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6363  m2_loss_mask_0: 0.186  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.7002  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.6225  m2_loss_mask_2: 0.1617  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5741  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5358  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5296  m2_loss_mask_5: 0.1634  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.5115  m2_loss_mask_6: 0.1634  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.5106  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.5182  m2_loss_mask_8: 0.1611  m2_loss_dice_8: 1.271    time: 1.8546  last_time: 1.8494  data_time: 0.0789  last_data_time: 0.0729   lr: 0.0001  max_mem: 35090M
[10/03 00:37:45] d2.utils.events INFO:  eta: 0:05:34  iter: 819  total_loss: 40.43  m1_loss_ce: 0.4051  m1_loss_mask: 0.1673  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5727  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.477  m1_loss_ce_1: 0.5638  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.377  m1_loss_ce_2: 0.5199  m1_loss_mask_2: 0.1747  m1_loss_dice_2: 1.34  m1_loss_ce_3: 0.4495  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.4457  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.28  m1_loss_ce_5: 0.4673  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.4203  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.277  m1_loss_ce_7: 0.4372  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.434  m1_loss_mask_8: 0.1685  m1_loss_dice_8: 1.251  m2_loss_ce: 0.4882  m2_loss_mask: 0.1691  m2_loss_dice: 1.292  m2_loss_ce_0: 0.6455  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.543  m2_loss_ce_1: 0.652  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.5881  m2_loss_mask_2: 0.1757  m2_loss_dice_2: 1.388  m2_loss_ce_3: 0.5419  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.313  m2_loss_ce_4: 0.511  m2_loss_mask_4: 0.1743  m2_loss_dice_4: 1.337  m2_loss_ce_5: 0.5131  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.5025  m2_loss_mask_6: 0.174  m2_loss_dice_6: 1.29  m2_loss_ce_7: 0.4977  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.4709  m2_loss_mask_8: 0.1656  m2_loss_dice_8: 1.299    time: 1.8556  last_time: 1.9608  data_time: 0.1029  last_data_time: 0.1885   lr: 0.0001  max_mem: 35090M
[10/03 00:38:23] d2.utils.events INFO:  eta: 0:04:57  iter: 839  total_loss: 39.34  m1_loss_ce: 0.4138  m1_loss_mask: 0.1535  m1_loss_dice: 1.212  m1_loss_ce_0: 0.5539  m1_loss_mask_0: 0.1753  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.5817  m1_loss_mask_1: 0.1618  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.5455  m1_loss_mask_2: 0.1584  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.4906  m1_loss_mask_3: 0.1577  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.4376  m1_loss_mask_4: 0.1559  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4546  m1_loss_mask_5: 0.1555  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4478  m1_loss_mask_6: 0.1567  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.4303  m1_loss_mask_7: 0.1561  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.4124  m1_loss_mask_8: 0.1536  m1_loss_dice_8: 1.188  m2_loss_ce: 0.4901  m2_loss_mask: 0.1605  m2_loss_dice: 1.27  m2_loss_ce_0: 0.6022  m2_loss_mask_0: 0.182  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.638  m2_loss_mask_1: 0.1737  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.5785  m2_loss_mask_2: 0.1616  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5441  m2_loss_mask_3: 0.1621  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5082  m2_loss_mask_4: 0.1597  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5106  m2_loss_mask_5: 0.1584  m2_loss_dice_5: 1.276  m2_loss_ce_6: 0.5013  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.481  m2_loss_mask_7: 0.1584  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.483  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.266    time: 1.8563  last_time: 1.7601  data_time: 0.1011  last_data_time: 0.0553   lr: 0.0001  max_mem: 35090M
[10/03 00:39:00] d2.utils.events INFO:  eta: 0:04:20  iter: 859  total_loss: 38.95  m1_loss_ce: 0.4693  m1_loss_mask: 0.1625  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5674  m1_loss_mask_0: 0.182  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.5622  m1_loss_mask_1: 0.1725  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.5652  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.4989  m1_loss_mask_3: 0.164  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4611  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4714  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.4416  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4359  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4276  m1_loss_mask_8: 0.1637  m1_loss_dice_8: 1.184  m2_loss_ce: 0.4688  m2_loss_mask: 0.1569  m2_loss_dice: 1.285  m2_loss_ce_0: 0.6023  m2_loss_mask_0: 0.1871  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6721  m2_loss_mask_1: 0.1711  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5647  m2_loss_mask_2: 0.1594  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5135  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5007  m2_loss_mask_4: 0.1582  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.4777  m2_loss_mask_5: 0.1568  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.4781  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.49  m2_loss_mask_7: 0.1564  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.4609  m2_loss_mask_8: 0.1577  m2_loss_dice_8: 1.267    time: 1.8568  last_time: 1.7943  data_time: 0.0861  last_data_time: 0.0657   lr: 0.0001  max_mem: 35090M
[10/03 00:39:38] d2.utils.events INFO:  eta: 0:03:43  iter: 879  total_loss: 38.34  m1_loss_ce: 0.4432  m1_loss_mask: 0.1625  m1_loss_dice: 1.161  m1_loss_ce_0: 0.5786  m1_loss_mask_0: 0.194  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.6024  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.298  m1_loss_ce_2: 0.5413  m1_loss_mask_2: 0.1715  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.4893  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.4581  m1_loss_mask_4: 0.1667  m1_loss_dice_4: 1.202  m1_loss_ce_5: 0.4511  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.4193  m1_loss_mask_6: 0.1656  m1_loss_dice_6: 1.16  m1_loss_ce_7: 0.4393  m1_loss_mask_7: 0.1633  m1_loss_dice_7: 1.154  m1_loss_ce_8: 0.4343  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.162  m2_loss_ce: 0.4703  m2_loss_mask: 0.1712  m2_loss_dice: 1.204  m2_loss_ce_0: 0.6165  m2_loss_mask_0: 0.2045  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6541  m2_loss_mask_1: 0.1861  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5899  m2_loss_mask_2: 0.178  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5505  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.517  m2_loss_mask_4: 0.1731  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.5082  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4839  m2_loss_mask_6: 0.1768  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.4802  m2_loss_mask_7: 0.1748  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.5141  m2_loss_mask_8: 0.1728  m2_loss_dice_8: 1.204    time: 1.8576  last_time: 2.0304  data_time: 0.0995  last_data_time: 0.2334   lr: 0.0001  max_mem: 35090M
[10/03 00:40:15] d2.utils.events INFO:  eta: 0:03:05  iter: 899  total_loss: 39.89  m1_loss_ce: 0.4483  m1_loss_mask: 0.1692  m1_loss_dice: 1.223  m1_loss_ce_0: 0.5299  m1_loss_mask_0: 0.2039  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6253  m1_loss_mask_1: 0.1869  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.571  m1_loss_mask_2: 0.1789  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.4992  m1_loss_mask_3: 0.1749  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.4605  m1_loss_mask_4: 0.1744  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.4623  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4601  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.43  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.214  m1_loss_ce_8: 0.4279  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.247  m2_loss_ce: 0.4772  m2_loss_mask: 0.1711  m2_loss_dice: 1.253  m2_loss_ce_0: 0.603  m2_loss_mask_0: 0.1985  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.6378  m2_loss_mask_1: 0.1882  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.5496  m2_loss_mask_2: 0.1775  m2_loss_dice_2: 1.356  m2_loss_ce_3: 0.5331  m2_loss_mask_3: 0.1744  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5138  m2_loss_mask_4: 0.1728  m2_loss_dice_4: 1.271  m2_loss_ce_5: 0.506  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.4956  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.5051  m2_loss_mask_7: 0.1721  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4856  m2_loss_mask_8: 0.17  m2_loss_dice_8: 1.256    time: 1.8568  last_time: 1.8162  data_time: 0.0896  last_data_time: 0.0922   lr: 0.0001  max_mem: 35090M
[10/03 00:40:53] d2.utils.events INFO:  eta: 0:02:28  iter: 919  total_loss: 39.52  m1_loss_ce: 0.4497  m1_loss_mask: 0.1624  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5268  m1_loss_mask_0: 0.1914  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.6224  m1_loss_mask_1: 0.1712  m1_loss_dice_1: 1.314  m1_loss_ce_2: 0.5849  m1_loss_mask_2: 0.1605  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.4601  m1_loss_mask_3: 0.161  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.4652  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.4749  m1_loss_mask_5: 0.1617  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4727  m1_loss_mask_6: 0.1628  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.4593  m1_loss_mask_7: 0.1598  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4541  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4648  m2_loss_mask: 0.1674  m2_loss_dice: 1.236  m2_loss_ce_0: 0.5847  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6858  m2_loss_mask_1: 0.182  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.5923  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.5363  m2_loss_mask_3: 0.1677  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5112  m2_loss_mask_4: 0.1636  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.5102  m2_loss_mask_5: 0.1644  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.4984  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4935  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4634  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.237    time: 1.8574  last_time: 1.8894  data_time: 0.0816  last_data_time: 0.1422   lr: 0.0001  max_mem: 35090M
[10/03 00:41:31] d2.utils.events INFO:  eta: 0:01:51  iter: 939  total_loss: 41.83  m1_loss_ce: 0.4116  m1_loss_mask: 0.1673  m1_loss_dice: 1.29  m1_loss_ce_0: 0.5371  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.536  m1_loss_ce_1: 0.6046  m1_loss_mask_1: 0.1771  m1_loss_dice_1: 1.43  m1_loss_ce_2: 0.5591  m1_loss_mask_2: 0.1749  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5199  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.326  m1_loss_ce_4: 0.4429  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.322  m1_loss_ce_5: 0.4686  m1_loss_mask_5: 0.1696  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.4318  m1_loss_mask_6: 0.1675  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.4458  m1_loss_mask_7: 0.167  m1_loss_dice_7: 1.327  m1_loss_ce_8: 0.427  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.335  m2_loss_ce: 0.4665  m2_loss_mask: 0.1737  m2_loss_dice: 1.389  m2_loss_ce_0: 0.5921  m2_loss_mask_0: 0.2033  m2_loss_dice_0: 1.55  m2_loss_ce_1: 0.6248  m2_loss_mask_1: 0.1868  m2_loss_dice_1: 1.48  m2_loss_ce_2: 0.5688  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.435  m2_loss_ce_3: 0.5332  m2_loss_mask_3: 0.1759  m2_loss_dice_3: 1.36  m2_loss_ce_4: 0.5297  m2_loss_mask_4: 0.1745  m2_loss_dice_4: 1.36  m2_loss_ce_5: 0.5166  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.35  m2_loss_ce_6: 0.4926  m2_loss_mask_6: 0.1754  m2_loss_dice_6: 1.357  m2_loss_ce_7: 0.5156  m2_loss_mask_7: 0.1749  m2_loss_dice_7: 1.316  m2_loss_ce_8: 0.4698  m2_loss_mask_8: 0.174  m2_loss_dice_8: 1.35    time: 1.8580  last_time: 1.8927  data_time: 0.0882  last_data_time: 0.0601   lr: 0.0001  max_mem: 35090M
[10/03 00:42:08] d2.utils.events INFO:  eta: 0:01:14  iter: 959  total_loss: 39.55  m1_loss_ce: 0.3923  m1_loss_mask: 0.1592  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5484  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.5844  m1_loss_mask_1: 0.1723  m1_loss_dice_1: 1.36  m1_loss_ce_2: 0.53  m1_loss_mask_2: 0.1659  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.4671  m1_loss_mask_3: 0.1662  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.4329  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.4317  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4306  m1_loss_mask_6: 0.1622  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.426  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4305  m1_loss_mask_8: 0.1608  m1_loss_dice_8: 1.218  m2_loss_ce: 0.4387  m2_loss_mask: 0.1622  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6012  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.6479  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.5785  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5048  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.4902  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.4879  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.296  m2_loss_ce_6: 0.4704  m2_loss_mask_6: 0.1656  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4752  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.4577  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.246    time: 1.8579  last_time: 1.8211  data_time: 0.0943  last_data_time: 0.0684   lr: 0.0001  max_mem: 35090M
[10/03 00:42:45] d2.utils.events INFO:  eta: 0:00:37  iter: 979  total_loss: 40.02  m1_loss_ce: 0.476  m1_loss_mask: 0.168  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5418  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.5989  m1_loss_mask_1: 0.1847  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.5141  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.4714  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4658  m1_loss_mask_4: 0.1744  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.4493  m1_loss_mask_5: 0.1696  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.4549  m1_loss_mask_6: 0.17  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.4374  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.4349  m1_loss_mask_8: 0.1693  m1_loss_dice_8: 1.288  m2_loss_ce: 0.4975  m2_loss_mask: 0.1759  m2_loss_dice: 1.299  m2_loss_ce_0: 0.602  m2_loss_mask_0: 0.2029  m2_loss_dice_0: 1.519  m2_loss_ce_1: 0.6924  m2_loss_mask_1: 0.198  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.5776  m2_loss_mask_2: 0.1815  m2_loss_dice_2: 1.384  m2_loss_ce_3: 0.5216  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.337  m2_loss_ce_4: 0.5184  m2_loss_mask_4: 0.1736  m2_loss_dice_4: 1.313  m2_loss_ce_5: 0.5009  m2_loss_mask_5: 0.1721  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.4973  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.293  m2_loss_ce_7: 0.4997  m2_loss_mask_7: 0.1734  m2_loss_dice_7: 1.279  m2_loss_ce_8: 0.5245  m2_loss_mask_8: 0.1742  m2_loss_dice_8: 1.249    time: 1.8583  last_time: 1.8722  data_time: 0.0942  last_data_time: 0.0829   lr: 0.0001  max_mem: 35090M
[10/03 00:43:23] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4/model_final.pth
[10/03 00:43:26] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 40.35  m1_loss_ce: 0.4589  m1_loss_mask: 0.1606  m1_loss_dice: 1.226  m1_loss_ce_0: 0.536  m1_loss_mask_0: 0.1883  m1_loss_dice_0: 1.477  m1_loss_ce_1: 0.6257  m1_loss_mask_1: 0.1775  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.5772  m1_loss_mask_2: 0.1669  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5229  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.5012  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.5213  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.4876  m1_loss_mask_6: 0.1612  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.478  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4651  m1_loss_mask_8: 0.1619  m1_loss_dice_8: 1.258  m2_loss_ce: 0.4741  m2_loss_mask: 0.1672  m2_loss_dice: 1.335  m2_loss_ce_0: 0.6099  m2_loss_mask_0: 0.1965  m2_loss_dice_0: 1.554  m2_loss_ce_1: 0.6468  m2_loss_mask_1: 0.1825  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.5943  m2_loss_mask_2: 0.1726  m2_loss_dice_2: 1.374  m2_loss_ce_3: 0.5418  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5321  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.504  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.4744  m2_loss_mask_6: 0.1729  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4717  m2_loss_mask_7: 0.1691  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.4949  m2_loss_mask_8: 0.1672  m2_loss_dice_8: 1.291    time: 1.8590  last_time: 1.8363  data_time: 0.0922  last_data_time: 0.0619   lr: 0.0001  max_mem: 35090M
[10/03 00:43:26] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:30:55 (1.8590 s / it)
[10/03 00:43:26] d2.engine.hooks INFO: Total training time: 0:31:08 (0:00:12 on hooks)
[10/03 00:43:26] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/03 00:43:26] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/03 00:43:26] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/03 00:43:26] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/03 00:43:26] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/03 00:45:17] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalqnnamd3a ...
[10/03 00:46:07] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 58.089 | 81.064 | 70.606 |      19       |
| Things | 49.749 | 80.804 | 61.556 |       8       |
| Stuff  | 64.154 | 81.253 | 77.187 |      11       |
[10/03 00:46:07] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.390 | 97.795 | 99.586 |     Stuff     |
| class_8  | 73.894 | 84.292 | 87.665 |     Stuff     |
| class_11 | 87.551 | 89.375 | 97.959 |     Stuff     |
| class_12 | 41.791 | 78.914 | 52.958 |     Stuff     |
| class_13 | 39.272 | 75.708 | 51.873 |     Stuff     |
| class_17 | 42.675 | 64.078 | 66.598 |     Stuff     |
| class_19 | 48.342 | 69.314 | 69.744 |     Stuff     |
| class_20 | 64.478 | 76.928 | 83.816 |     Stuff     |
| class_21 | 89.154 | 89.983 | 99.079 |     Stuff     |
| class_22 | 33.601 | 75.525 | 44.490 |     Stuff     |
| class_23 | 87.549 | 91.873 | 95.293 |     Stuff     |
| class_24 | 51.921 | 76.976 | 67.451 |    Things     |
| class_25 | 47.047 | 74.640 | 63.032 |    Things     |
| class_26 | 65.840 | 83.441 | 78.906 |    Things     |
| class_27 | 49.806 | 88.485 | 56.287 |    Things     |
| class_28 | 59.588 | 88.894 | 67.033 |    Things     |
| class_31 | 42.261 | 87.163 | 48.485 |    Things     |
| class_32 | 39.111 | 75.391 | 51.877 |    Things     |
| class_33 | 42.421 | 71.442 | 59.378 |    Things     |
[10/03 00:46:07] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/03 00:46:07] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/03 00:46:07] d2.evaluation.testing INFO: copypaste: 58.0890,81.0641,70.6057,49.7493,80.8041,61.5561,64.1542,81.2531,77.1873,97.3901,97.7951,99.5859,73.8945,84.2917,87.6652,87.5507,89.3747,97.9592,41.7909,78.9136,52.9577,39.2721,75.7079,51.8732,42.6750,64.0784,66.5982,48.3422,69.3141,69.7436,64.4779,76.9283,83.8156,89.1540,89.9829,99.0788,33.6007,75.5245,44.4898,87.5486,91.8733,95.2928,51.9214,76.9765,67.4510,47.0469,74.6402,63.0316,65.8398,83.4409,78.9060,49.8059,88.4850,56.2874,59.5883,88.8941,67.0330,42.2608,87.1628,48.4848,39.1107,75.3910,51.8771,42.4209,71.4421,59.3779
[10/04 21:26:37] detectron2 INFO: Rank of current process: 0. World size: 2
[10/04 21:26:38] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/04 21:26:38] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_6_0_4_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/04 21:26:38] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_6_0_4_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/04 21:26:38] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/04 21:26:38] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4/config.yaml
[10/04 21:26:38] d2.utils.env INFO: Using a generated random seed 40502953
[10/04 21:26:41] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/04 21:26:41] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/04 21:26:42] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/04 21:26:42] d2.data.build INFO: Using training sampler TrainingSampler
[10/04 21:26:42] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/04 21:26:42] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/04 21:26:42] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/04 21:26:42] d2.data.build INFO: Making batched data loader with batch_size=4
[10/04 21:26:42] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/04 21:26:45] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/04 21:26:45] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 21:26:45] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 21:26:46] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 21:26:46] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/04 21:27:20] d2.utils.events INFO:  eta: 0:22:35  iter: 19  total_loss: 39.2  m1_loss_ce: 0.4815  m1_loss_mask: 0.1691  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5882  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.6647  m1_loss_mask_1: 0.1864  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.601  m1_loss_mask_2: 0.1736  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.5382  m1_loss_mask_3: 0.1713  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5274  m1_loss_mask_4: 0.1696  m1_loss_dice_4: 1.19  m1_loss_ce_5: 0.5203  m1_loss_mask_5: 0.1707  m1_loss_dice_5: 1.19  m1_loss_ce_6: 0.4853  m1_loss_mask_6: 0.1706  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.5044  m1_loss_mask_7: 0.1717  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.4994  m1_loss_mask_8: 0.1703  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4293  m2_loss_mask: 0.1658  m2_loss_dice: 1.234  m2_loss_ce_0: 0.5768  m2_loss_mask_0: 0.1964  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.6306  m2_loss_mask_1: 0.1819  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.583  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.5354  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.5111  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.206  m2_loss_ce_5: 0.4882  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4646  m2_loss_mask_6: 0.165  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.4813  m2_loss_mask_7: 0.166  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.4417  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.208    time: 1.3913  last_time: 1.4581  data_time: 0.2582  last_data_time: 0.0642   lr: 0.0001  max_mem: 33803M
[10/04 21:27:47] d2.utils.events INFO:  eta: 0:22:01  iter: 39  total_loss: 40.17  m1_loss_ce: 0.4444  m1_loss_mask: 0.1781  m1_loss_dice: 1.243  m1_loss_ce_0: 0.5881  m1_loss_mask_0: 0.1999  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6372  m1_loss_mask_1: 0.1869  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.5771  m1_loss_mask_2: 0.1772  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5369  m1_loss_mask_3: 0.1804  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.4811  m1_loss_mask_4: 0.1776  m1_loss_dice_4: 1.246  m1_loss_ce_5: 0.5008  m1_loss_mask_5: 0.1762  m1_loss_dice_5: 1.286  m1_loss_ce_6: 0.4606  m1_loss_mask_6: 0.1772  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.4854  m1_loss_mask_7: 0.1747  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4773  m1_loss_mask_8: 0.1782  m1_loss_dice_8: 1.218  m2_loss_ce: 0.4635  m2_loss_mask: 0.1701  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6015  m2_loss_mask_0: 0.1995  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6636  m2_loss_mask_1: 0.1872  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.5966  m2_loss_mask_2: 0.1741  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5139  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.4914  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.4828  m2_loss_mask_5: 0.1703  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.4768  m2_loss_mask_6: 0.1695  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.4904  m2_loss_mask_7: 0.1709  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.4643  m2_loss_mask_8: 0.1701  m2_loss_dice_8: 1.213    time: 1.3774  last_time: 1.3937  data_time: 0.0450  last_data_time: 0.0483   lr: 0.0001  max_mem: 33831M
[10/04 21:28:15] d2.utils.events INFO:  eta: 0:21:38  iter: 59  total_loss: 42.91  m1_loss_ce: 0.536  m1_loss_mask: 0.1632  m1_loss_dice: 1.265  m1_loss_ce_0: 0.6385  m1_loss_mask_0: 0.187  m1_loss_dice_0: 1.508  m1_loss_ce_1: 0.7029  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.434  m1_loss_ce_2: 0.6547  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.36  m1_loss_ce_3: 0.6201  m1_loss_mask_3: 0.1626  m1_loss_dice_3: 1.307  m1_loss_ce_4: 0.5961  m1_loss_mask_4: 0.1609  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.5676  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.266  m1_loss_ce_6: 0.567  m1_loss_mask_6: 0.1616  m1_loss_dice_6: 1.286  m1_loss_ce_7: 0.569  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.5574  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.276  m2_loss_ce: 0.5219  m2_loss_mask: 0.1547  m2_loss_dice: 1.354  m2_loss_ce_0: 0.6299  m2_loss_mask_0: 0.1877  m2_loss_dice_0: 1.585  m2_loss_ce_1: 0.7448  m2_loss_mask_1: 0.1724  m2_loss_dice_1: 1.507  m2_loss_ce_2: 0.6789  m2_loss_mask_2: 0.1555  m2_loss_dice_2: 1.426  m2_loss_ce_3: 0.6015  m2_loss_mask_3: 0.1565  m2_loss_dice_3: 1.352  m2_loss_ce_4: 0.5824  m2_loss_mask_4: 0.1533  m2_loss_dice_4: 1.351  m2_loss_ce_5: 0.5797  m2_loss_mask_5: 0.1546  m2_loss_dice_5: 1.362  m2_loss_ce_6: 0.5455  m2_loss_mask_6: 0.1573  m2_loss_dice_6: 1.378  m2_loss_ce_7: 0.5569  m2_loss_mask_7: 0.1556  m2_loss_dice_7: 1.382  m2_loss_ce_8: 0.5403  m2_loss_mask_8: 0.1564  m2_loss_dice_8: 1.392    time: 1.3769  last_time: 1.3606  data_time: 0.0489  last_data_time: 0.0535   lr: 0.0001  max_mem: 33883M
[10/04 21:28:43] d2.utils.events INFO:  eta: 0:21:05  iter: 79  total_loss: 40.19  m1_loss_ce: 0.4673  m1_loss_mask: 0.1634  m1_loss_dice: 1.228  m1_loss_ce_0: 0.6262  m1_loss_mask_0: 0.1937  m1_loss_dice_0: 1.456  m1_loss_ce_1: 0.682  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5863  m1_loss_mask_2: 0.1688  m1_loss_dice_2: 1.313  m1_loss_ce_3: 0.5226  m1_loss_mask_3: 0.165  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.5177  m1_loss_mask_4: 0.1623  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.519  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5077  m1_loss_mask_6: 0.1629  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.5104  m1_loss_mask_7: 0.1612  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4965  m1_loss_mask_8: 0.1622  m1_loss_dice_8: 1.214  m2_loss_ce: 0.471  m2_loss_mask: 0.1543  m2_loss_dice: 1.225  m2_loss_ce_0: 0.619  m2_loss_mask_0: 0.1831  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6805  m2_loss_mask_1: 0.1745  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.5798  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.5292  m2_loss_mask_3: 0.1577  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.4825  m2_loss_mask_4: 0.1602  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.5107  m2_loss_mask_5: 0.1565  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.4931  m2_loss_mask_6: 0.1553  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5003  m2_loss_mask_7: 0.1556  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4817  m2_loss_mask_8: 0.1547  m2_loss_dice_8: 1.243    time: 1.3736  last_time: 1.4127  data_time: 0.0469  last_data_time: 0.0666   lr: 0.0001  max_mem: 33883M
[10/04 21:29:10] d2.utils.events INFO:  eta: 0:20:32  iter: 99  total_loss: 39.02  m1_loss_ce: 0.4955  m1_loss_mask: 0.1601  m1_loss_dice: 1.186  m1_loss_ce_0: 0.5803  m1_loss_mask_0: 0.1853  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.6427  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.5742  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.5363  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5141  m1_loss_mask_4: 0.1601  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.5043  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.504  m1_loss_mask_6: 0.16  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4867  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.4537  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.183  m2_loss_ce: 0.4779  m2_loss_mask: 0.1583  m2_loss_dice: 1.19  m2_loss_ce_0: 0.6346  m2_loss_mask_0: 0.1925  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6533  m2_loss_mask_1: 0.1736  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.6068  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5344  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.4978  m2_loss_mask_4: 0.1607  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5222  m2_loss_mask_5: 0.1571  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.4856  m2_loss_mask_6: 0.1597  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.4871  m2_loss_mask_7: 0.1585  m2_loss_dice_7: 1.218  m2_loss_ce_8: 0.4879  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.228    time: 1.3685  last_time: 1.3678  data_time: 0.0445  last_data_time: 0.0390   lr: 0.0001  max_mem: 33883M
[10/04 21:29:37] d2.utils.events INFO:  eta: 0:20:05  iter: 119  total_loss: 39.06  m1_loss_ce: 0.4265  m1_loss_mask: 0.1629  m1_loss_dice: 1.225  m1_loss_ce_0: 0.5748  m1_loss_mask_0: 0.1854  m1_loss_dice_0: 1.356  m1_loss_ce_1: 0.6454  m1_loss_mask_1: 0.1753  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5685  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.5186  m1_loss_mask_3: 0.1656  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4937  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4838  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4713  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.157  m1_loss_ce_7: 0.4563  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.166  m1_loss_ce_8: 0.465  m1_loss_mask_8: 0.1644  m1_loss_dice_8: 1.184  m2_loss_ce: 0.4617  m2_loss_mask: 0.1619  m2_loss_dice: 1.234  m2_loss_ce_0: 0.6073  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6376  m2_loss_mask_1: 0.181  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.5693  m2_loss_mask_2: 0.164  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5042  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.4891  m2_loss_mask_4: 0.1618  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.4808  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.186  m2_loss_ce_6: 0.463  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.4756  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.4357  m2_loss_mask_8: 0.1639  m2_loss_dice_8: 1.21    time: 1.3686  last_time: 1.3965  data_time: 0.0482  last_data_time: 0.0404   lr: 0.0001  max_mem: 33883M
[10/04 21:30:04] d2.utils.events INFO:  eta: 0:19:35  iter: 139  total_loss: 40.75  m1_loss_ce: 0.4462  m1_loss_mask: 0.1745  m1_loss_dice: 1.214  m1_loss_ce_0: 0.5391  m1_loss_mask_0: 0.2032  m1_loss_dice_0: 1.457  m1_loss_ce_1: 0.6408  m1_loss_mask_1: 0.1874  m1_loss_dice_1: 1.394  m1_loss_ce_2: 0.582  m1_loss_mask_2: 0.1783  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.5458  m1_loss_mask_3: 0.1762  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.4902  m1_loss_mask_4: 0.174  m1_loss_dice_4: 1.28  m1_loss_ce_5: 0.5241  m1_loss_mask_5: 0.1754  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4802  m1_loss_mask_6: 0.1749  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.4855  m1_loss_mask_7: 0.1755  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.4974  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4993  m2_loss_mask: 0.1705  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6186  m2_loss_mask_0: 0.1976  m2_loss_dice_0: 1.486  m2_loss_ce_1: 0.6867  m2_loss_mask_1: 0.1839  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.6048  m2_loss_mask_2: 0.1733  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5599  m2_loss_mask_3: 0.1727  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5286  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5346  m2_loss_mask_5: 0.1673  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.498  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5005  m2_loss_mask_7: 0.1717  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.508  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.253    time: 1.3662  last_time: 1.3608  data_time: 0.0454  last_data_time: 0.0401   lr: 0.0001  max_mem: 33883M
[10/04 21:30:31] d2.utils.events INFO:  eta: 0:19:05  iter: 159  total_loss: 41.2  m1_loss_ce: 0.4932  m1_loss_mask: 0.1644  m1_loss_dice: 1.221  m1_loss_ce_0: 0.6162  m1_loss_mask_0: 0.193  m1_loss_dice_0: 1.442  m1_loss_ce_1: 0.6651  m1_loss_mask_1: 0.1803  m1_loss_dice_1: 1.399  m1_loss_ce_2: 0.6282  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5751  m1_loss_mask_3: 0.1674  m1_loss_dice_3: 1.271  m1_loss_ce_4: 0.5188  m1_loss_mask_4: 0.1656  m1_loss_dice_4: 1.318  m1_loss_ce_5: 0.5249  m1_loss_mask_5: 0.1669  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.5284  m1_loss_mask_6: 0.1649  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.5052  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.5321  m1_loss_mask_8: 0.1676  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4873  m2_loss_mask: 0.1625  m2_loss_dice: 1.276  m2_loss_ce_0: 0.6288  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.6971  m2_loss_mask_1: 0.1805  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6285  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.374  m2_loss_ce_3: 0.5864  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.5427  m2_loss_mask_4: 0.1677  m2_loss_dice_4: 1.297  m2_loss_ce_5: 0.5188  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.316  m2_loss_ce_6: 0.5227  m2_loss_mask_6: 0.1652  m2_loss_dice_6: 1.272  m2_loss_ce_7: 0.5032  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.315  m2_loss_ce_8: 0.5106  m2_loss_mask_8: 0.162  m2_loss_dice_8: 1.273    time: 1.3640  last_time: 1.2975  data_time: 0.0471  last_data_time: 0.0365   lr: 0.0001  max_mem: 33883M
[10/04 21:30:59] d2.utils.events INFO:  eta: 0:18:38  iter: 179  total_loss: 39.54  m1_loss_ce: 0.4365  m1_loss_mask: 0.163  m1_loss_dice: 1.198  m1_loss_ce_0: 0.5605  m1_loss_mask_0: 0.1922  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.5862  m1_loss_mask_1: 0.1857  m1_loss_dice_1: 1.291  m1_loss_ce_2: 0.5471  m1_loss_mask_2: 0.1722  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.5484  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.4594  m1_loss_mask_4: 0.1673  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.471  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.4485  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.213  m1_loss_ce_7: 0.4253  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4322  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.172  m2_loss_ce: 0.4338  m2_loss_mask: 0.1642  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5877  m2_loss_mask_0: 0.196  m2_loss_dice_0: 1.402  m2_loss_ce_1: 0.6437  m2_loss_mask_1: 0.184  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5759  m2_loss_mask_2: 0.1664  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.4969  m2_loss_mask_3: 0.1651  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.4525  m2_loss_mask_4: 0.1646  m2_loss_dice_4: 1.217  m2_loss_ce_5: 0.4844  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.208  m2_loss_ce_6: 0.4577  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.4566  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.199  m2_loss_ce_8: 0.4553  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.194    time: 1.3645  last_time: 1.3605  data_time: 0.0514  last_data_time: 0.0427   lr: 0.0001  max_mem: 33883M
[10/04 21:31:26] d2.utils.events INFO:  eta: 0:18:11  iter: 199  total_loss: 40.94  m1_loss_ce: 0.4895  m1_loss_mask: 0.1745  m1_loss_dice: 1.225  m1_loss_ce_0: 0.5735  m1_loss_mask_0: 0.2133  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.6401  m1_loss_mask_1: 0.1918  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.5947  m1_loss_mask_2: 0.1799  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5467  m1_loss_mask_3: 0.1752  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.5332  m1_loss_mask_4: 0.1749  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.5032  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.4794  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.4655  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.266  m1_loss_ce_8: 0.5044  m1_loss_mask_8: 0.1723  m1_loss_dice_8: 1.244  m2_loss_ce: 0.4731  m2_loss_mask: 0.1752  m2_loss_dice: 1.276  m2_loss_ce_0: 0.5624  m2_loss_mask_0: 0.2143  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6365  m2_loss_mask_1: 0.202  m2_loss_dice_1: 1.382  m2_loss_ce_2: 0.5386  m2_loss_mask_2: 0.1838  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5081  m2_loss_mask_3: 0.1789  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5013  m2_loss_mask_4: 0.1742  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4956  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.4568  m2_loss_mask_6: 0.1748  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.4913  m2_loss_mask_7: 0.176  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.4797  m2_loss_mask_8: 0.1738  m2_loss_dice_8: 1.231    time: 1.3649  last_time: 1.3032  data_time: 0.0538  last_data_time: 0.0436   lr: 0.0001  max_mem: 33921M
[10/04 21:31:54] d2.utils.events INFO:  eta: 0:17:43  iter: 219  total_loss: 40.22  m1_loss_ce: 0.4548  m1_loss_mask: 0.1786  m1_loss_dice: 1.251  m1_loss_ce_0: 0.5187  m1_loss_mask_0: 0.2122  m1_loss_dice_0: 1.557  m1_loss_ce_1: 0.6165  m1_loss_mask_1: 0.1964  m1_loss_dice_1: 1.433  m1_loss_ce_2: 0.5717  m1_loss_mask_2: 0.1823  m1_loss_dice_2: 1.356  m1_loss_ce_3: 0.5531  m1_loss_mask_3: 0.1817  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.5  m1_loss_mask_4: 0.1794  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.484  m1_loss_mask_5: 0.1787  m1_loss_dice_5: 1.288  m1_loss_ce_6: 0.4852  m1_loss_mask_6: 0.1804  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4944  m1_loss_mask_7: 0.1794  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.4887  m1_loss_mask_8: 0.1763  m1_loss_dice_8: 1.28  m2_loss_ce: 0.4476  m2_loss_mask: 0.1764  m2_loss_dice: 1.27  m2_loss_ce_0: 0.5725  m2_loss_mask_0: 0.2098  m2_loss_dice_0: 1.55  m2_loss_ce_1: 0.5897  m2_loss_mask_1: 0.1948  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.5543  m2_loss_mask_2: 0.1759  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.4815  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.4741  m2_loss_mask_4: 0.1722  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.4725  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.4623  m2_loss_mask_6: 0.1793  m2_loss_dice_6: 1.268  m2_loss_ce_7: 0.4483  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4726  m2_loss_mask_8: 0.1769  m2_loss_dice_8: 1.265    time: 1.3659  last_time: 1.3744  data_time: 0.0523  last_data_time: 0.0486   lr: 0.0001  max_mem: 33921M
[10/04 21:32:21] d2.utils.events INFO:  eta: 0:17:17  iter: 239  total_loss: 38.8  m1_loss_ce: 0.4484  m1_loss_mask: 0.1782  m1_loss_dice: 1.151  m1_loss_ce_0: 0.5744  m1_loss_mask_0: 0.2045  m1_loss_dice_0: 1.35  m1_loss_ce_1: 0.6248  m1_loss_mask_1: 0.1899  m1_loss_dice_1: 1.279  m1_loss_ce_2: 0.5776  m1_loss_mask_2: 0.1811  m1_loss_dice_2: 1.215  m1_loss_ce_3: 0.5265  m1_loss_mask_3: 0.1817  m1_loss_dice_3: 1.186  m1_loss_ce_4: 0.5216  m1_loss_mask_4: 0.1796  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.5034  m1_loss_mask_5: 0.1776  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.4726  m1_loss_mask_6: 0.1762  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.4827  m1_loss_mask_7: 0.1782  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.4946  m1_loss_mask_8: 0.1769  m1_loss_dice_8: 1.145  m2_loss_ce: 0.4596  m2_loss_mask: 0.1796  m2_loss_dice: 1.148  m2_loss_ce_0: 0.5957  m2_loss_mask_0: 0.2036  m2_loss_dice_0: 1.329  m2_loss_ce_1: 0.646  m2_loss_mask_1: 0.1939  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.5819  m2_loss_mask_2: 0.1798  m2_loss_dice_2: 1.244  m2_loss_ce_3: 0.5381  m2_loss_mask_3: 0.1796  m2_loss_dice_3: 1.19  m2_loss_ce_4: 0.4919  m2_loss_mask_4: 0.1811  m2_loss_dice_4: 1.171  m2_loss_ce_5: 0.4675  m2_loss_mask_5: 0.1787  m2_loss_dice_5: 1.211  m2_loss_ce_6: 0.4807  m2_loss_mask_6: 0.1817  m2_loss_dice_6: 1.175  m2_loss_ce_7: 0.472  m2_loss_mask_7: 0.1828  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.461  m2_loss_mask_8: 0.1813  m2_loss_dice_8: 1.161    time: 1.3653  last_time: 1.3813  data_time: 0.0482  last_data_time: 0.0423   lr: 0.0001  max_mem: 33921M
[10/04 21:32:48] d2.utils.events INFO:  eta: 0:16:49  iter: 259  total_loss: 39.26  m1_loss_ce: 0.4559  m1_loss_mask: 0.1728  m1_loss_dice: 1.193  m1_loss_ce_0: 0.5839  m1_loss_mask_0: 0.2035  m1_loss_dice_0: 1.393  m1_loss_ce_1: 0.6217  m1_loss_mask_1: 0.1861  m1_loss_dice_1: 1.299  m1_loss_ce_2: 0.6003  m1_loss_mask_2: 0.175  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.5065  m1_loss_mask_3: 0.1761  m1_loss_dice_3: 1.188  m1_loss_ce_4: 0.4923  m1_loss_mask_4: 0.1754  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.4694  m1_loss_mask_5: 0.1751  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.4725  m1_loss_mask_6: 0.1736  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4572  m1_loss_mask_7: 0.174  m1_loss_dice_7: 1.161  m1_loss_ce_8: 0.4685  m1_loss_mask_8: 0.1733  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4864  m2_loss_mask: 0.1733  m2_loss_dice: 1.209  m2_loss_ce_0: 0.5646  m2_loss_mask_0: 0.2031  m2_loss_dice_0: 1.431  m2_loss_ce_1: 0.6375  m2_loss_mask_1: 0.1906  m2_loss_dice_1: 1.329  m2_loss_ce_2: 0.5663  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5351  m2_loss_mask_3: 0.1777  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.5027  m2_loss_mask_4: 0.1731  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.4909  m2_loss_mask_5: 0.1776  m2_loss_dice_5: 1.212  m2_loss_ce_6: 0.49  m2_loss_mask_6: 0.1747  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.5126  m2_loss_mask_7: 0.172  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.4813  m2_loss_mask_8: 0.1729  m2_loss_dice_8: 1.205    time: 1.3651  last_time: 1.3453  data_time: 0.0434  last_data_time: 0.0640   lr: 0.0001  max_mem: 33921M
[10/04 21:33:16] d2.utils.events INFO:  eta: 0:16:21  iter: 279  total_loss: 40.49  m1_loss_ce: 0.4468  m1_loss_mask: 0.1747  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5748  m1_loss_mask_0: 0.2093  m1_loss_dice_0: 1.494  m1_loss_ce_1: 0.6263  m1_loss_mask_1: 0.1924  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.5863  m1_loss_mask_2: 0.1824  m1_loss_dice_2: 1.326  m1_loss_ce_3: 0.5432  m1_loss_mask_3: 0.1848  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5194  m1_loss_mask_4: 0.1833  m1_loss_dice_4: 1.315  m1_loss_ce_5: 0.4884  m1_loss_mask_5: 0.1805  m1_loss_dice_5: 1.277  m1_loss_ce_6: 0.4462  m1_loss_mask_6: 0.179  m1_loss_dice_6: 1.265  m1_loss_ce_7: 0.4646  m1_loss_mask_7: 0.1789  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.458  m1_loss_mask_8: 0.1761  m1_loss_dice_8: 1.266  m2_loss_ce: 0.4526  m2_loss_mask: 0.1814  m2_loss_dice: 1.321  m2_loss_ce_0: 0.5875  m2_loss_mask_0: 0.2123  m2_loss_dice_0: 1.486  m2_loss_ce_1: 0.6382  m2_loss_mask_1: 0.1984  m2_loss_dice_1: 1.456  m2_loss_ce_2: 0.6016  m2_loss_mask_2: 0.1876  m2_loss_dice_2: 1.365  m2_loss_ce_3: 0.5407  m2_loss_mask_3: 0.1855  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5106  m2_loss_mask_4: 0.1819  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.5023  m2_loss_mask_5: 0.1826  m2_loss_dice_5: 1.308  m2_loss_ce_6: 0.4663  m2_loss_mask_6: 0.1835  m2_loss_dice_6: 1.29  m2_loss_ce_7: 0.4857  m2_loss_mask_7: 0.1846  m2_loss_dice_7: 1.297  m2_loss_ce_8: 0.4447  m2_loss_mask_8: 0.1816  m2_loss_dice_8: 1.297    time: 1.3642  last_time: 1.3047  data_time: 0.0453  last_data_time: 0.0329   lr: 0.0001  max_mem: 34377M
[10/04 21:33:44] d2.utils.events INFO:  eta: 0:15:55  iter: 299  total_loss: 42.59  m1_loss_ce: 0.4864  m1_loss_mask: 0.1592  m1_loss_dice: 1.292  m1_loss_ce_0: 0.6387  m1_loss_mask_0: 0.1833  m1_loss_dice_0: 1.487  m1_loss_ce_1: 0.6631  m1_loss_mask_1: 0.1732  m1_loss_dice_1: 1.42  m1_loss_ce_2: 0.6117  m1_loss_mask_2: 0.1657  m1_loss_dice_2: 1.364  m1_loss_ce_3: 0.5595  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.318  m1_loss_ce_4: 0.534  m1_loss_mask_4: 0.1664  m1_loss_dice_4: 1.31  m1_loss_ce_5: 0.5442  m1_loss_mask_5: 0.1625  m1_loss_dice_5: 1.332  m1_loss_ce_6: 0.5184  m1_loss_mask_6: 0.1637  m1_loss_dice_6: 1.305  m1_loss_ce_7: 0.4935  m1_loss_mask_7: 0.1613  m1_loss_dice_7: 1.308  m1_loss_ce_8: 0.4877  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.29  m2_loss_ce: 0.4995  m2_loss_mask: 0.163  m2_loss_dice: 1.307  m2_loss_ce_0: 0.6233  m2_loss_mask_0: 0.1895  m2_loss_dice_0: 1.566  m2_loss_ce_1: 0.6719  m2_loss_mask_1: 0.1865  m2_loss_dice_1: 1.48  m2_loss_ce_2: 0.613  m2_loss_mask_2: 0.1716  m2_loss_dice_2: 1.442  m2_loss_ce_3: 0.5754  m2_loss_mask_3: 0.1688  m2_loss_dice_3: 1.369  m2_loss_ce_4: 0.519  m2_loss_mask_4: 0.1662  m2_loss_dice_4: 1.357  m2_loss_ce_5: 0.5143  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.353  m2_loss_ce_6: 0.5371  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.325  m2_loss_ce_7: 0.4734  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.355  m2_loss_ce_8: 0.4682  m2_loss_mask_8: 0.1633  m2_loss_dice_8: 1.348    time: 1.3661  last_time: 1.4736  data_time: 0.0560  last_data_time: 0.0730   lr: 0.0001  max_mem: 34688M
[10/04 21:34:11] d2.utils.events INFO:  eta: 0:15:28  iter: 319  total_loss: 40.28  m1_loss_ce: 0.4411  m1_loss_mask: 0.1671  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5713  m1_loss_mask_0: 0.1884  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.6479  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.326  m1_loss_ce_2: 0.5846  m1_loss_mask_2: 0.1701  m1_loss_dice_2: 1.318  m1_loss_ce_3: 0.5251  m1_loss_mask_3: 0.1698  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.4758  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.4705  m1_loss_mask_5: 0.1672  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4825  m1_loss_mask_6: 0.1665  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4561  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.4507  m1_loss_mask_8: 0.1658  m1_loss_dice_8: 1.243  m2_loss_ce: 0.4596  m2_loss_mask: 0.166  m2_loss_dice: 1.268  m2_loss_ce_0: 0.5917  m2_loss_mask_0: 0.1911  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.6556  m2_loss_mask_1: 0.1799  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5906  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5504  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5005  m2_loss_mask_4: 0.1657  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.4878  m2_loss_mask_5: 0.1676  m2_loss_dice_5: 1.31  m2_loss_ce_6: 0.4692  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.4536  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.27  m2_loss_ce_8: 0.4627  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.263    time: 1.3674  last_time: 1.3297  data_time: 0.0515  last_data_time: 0.0372   lr: 0.0001  max_mem: 34688M
[10/04 21:34:39] d2.utils.events INFO:  eta: 0:15:00  iter: 339  total_loss: 41.92  m1_loss_ce: 0.4595  m1_loss_mask: 0.1564  m1_loss_dice: 1.221  m1_loss_ce_0: 0.593  m1_loss_mask_0: 0.1958  m1_loss_dice_0: 1.506  m1_loss_ce_1: 0.6426  m1_loss_mask_1: 0.1765  m1_loss_dice_1: 1.384  m1_loss_ce_2: 0.5816  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.313  m1_loss_ce_3: 0.5192  m1_loss_mask_3: 0.1681  m1_loss_dice_3: 1.298  m1_loss_ce_4: 0.5176  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.296  m1_loss_ce_5: 0.4925  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.4744  m1_loss_mask_6: 0.1596  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.4859  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4659  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4667  m2_loss_mask: 0.1667  m2_loss_dice: 1.308  m2_loss_ce_0: 0.6368  m2_loss_mask_0: 0.1994  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6795  m2_loss_mask_1: 0.1838  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.5952  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5375  m2_loss_mask_3: 0.1703  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.5372  m2_loss_mask_4: 0.1679  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.5301  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.4857  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4932  m2_loss_mask_7: 0.1676  m2_loss_dice_7: 1.285  m2_loss_ce_8: 0.485  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.281    time: 1.3668  last_time: 1.4148  data_time: 0.0464  last_data_time: 0.0411   lr: 0.0001  max_mem: 34688M
[10/04 21:35:06] d2.utils.events INFO:  eta: 0:14:33  iter: 359  total_loss: 42.23  m1_loss_ce: 0.4852  m1_loss_mask: 0.1721  m1_loss_dice: 1.271  m1_loss_ce_0: 0.6101  m1_loss_mask_0: 0.2017  m1_loss_dice_0: 1.49  m1_loss_ce_1: 0.6793  m1_loss_mask_1: 0.189  m1_loss_dice_1: 1.473  m1_loss_ce_2: 0.5985  m1_loss_mask_2: 0.1806  m1_loss_dice_2: 1.393  m1_loss_ce_3: 0.5448  m1_loss_mask_3: 0.1747  m1_loss_dice_3: 1.341  m1_loss_ce_4: 0.5346  m1_loss_mask_4: 0.1738  m1_loss_dice_4: 1.289  m1_loss_ce_5: 0.5133  m1_loss_mask_5: 0.1709  m1_loss_dice_5: 1.274  m1_loss_ce_6: 0.4912  m1_loss_mask_6: 0.1733  m1_loss_dice_6: 1.286  m1_loss_ce_7: 0.5029  m1_loss_mask_7: 0.1729  m1_loss_dice_7: 1.315  m1_loss_ce_8: 0.5101  m1_loss_mask_8: 0.1735  m1_loss_dice_8: 1.32  m2_loss_ce: 0.4754  m2_loss_mask: 0.1664  m2_loss_dice: 1.28  m2_loss_ce_0: 0.6422  m2_loss_mask_0: 0.1982  m2_loss_dice_0: 1.527  m2_loss_ce_1: 0.6763  m2_loss_mask_1: 0.1886  m2_loss_dice_1: 1.462  m2_loss_ce_2: 0.6219  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.413  m2_loss_ce_3: 0.5359  m2_loss_mask_3: 0.1738  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.523  m2_loss_mask_4: 0.1727  m2_loss_dice_4: 1.336  m2_loss_ce_5: 0.5322  m2_loss_mask_5: 0.1723  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5079  m2_loss_mask_6: 0.1733  m2_loss_dice_6: 1.294  m2_loss_ce_7: 0.4797  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.279  m2_loss_ce_8: 0.4999  m2_loss_mask_8: 0.1663  m2_loss_dice_8: 1.29    time: 1.3672  last_time: 1.4247  data_time: 0.0505  last_data_time: 0.0637   lr: 0.0001  max_mem: 34688M
[10/04 21:35:34] d2.utils.events INFO:  eta: 0:14:07  iter: 379  total_loss: 42.15  m1_loss_ce: 0.5425  m1_loss_mask: 0.1589  m1_loss_dice: 1.276  m1_loss_ce_0: 0.6252  m1_loss_mask_0: 0.1802  m1_loss_dice_0: 1.527  m1_loss_ce_1: 0.6818  m1_loss_mask_1: 0.1701  m1_loss_dice_1: 1.44  m1_loss_ce_2: 0.6494  m1_loss_mask_2: 0.1661  m1_loss_dice_2: 1.365  m1_loss_ce_3: 0.6003  m1_loss_mask_3: 0.1684  m1_loss_dice_3: 1.334  m1_loss_ce_4: 0.5764  m1_loss_mask_4: 0.163  m1_loss_dice_4: 1.297  m1_loss_ce_5: 0.5809  m1_loss_mask_5: 0.1624  m1_loss_dice_5: 1.335  m1_loss_ce_6: 0.5142  m1_loss_mask_6: 0.1607  m1_loss_dice_6: 1.297  m1_loss_ce_7: 0.5504  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.299  m1_loss_ce_8: 0.5634  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.285  m2_loss_ce: 0.5482  m2_loss_mask: 0.1555  m2_loss_dice: 1.282  m2_loss_ce_0: 0.6603  m2_loss_mask_0: 0.1833  m2_loss_dice_0: 1.515  m2_loss_ce_1: 0.7249  m2_loss_mask_1: 0.1693  m2_loss_dice_1: 1.44  m2_loss_ce_2: 0.6108  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.421  m2_loss_ce_3: 0.6003  m2_loss_mask_3: 0.1596  m2_loss_dice_3: 1.346  m2_loss_ce_4: 0.5812  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.325  m2_loss_ce_5: 0.5572  m2_loss_mask_5: 0.159  m2_loss_dice_5: 1.346  m2_loss_ce_6: 0.5399  m2_loss_mask_6: 0.1562  m2_loss_dice_6: 1.303  m2_loss_ce_7: 0.5577  m2_loss_mask_7: 0.1573  m2_loss_dice_7: 1.293  m2_loss_ce_8: 0.5624  m2_loss_mask_8: 0.1553  m2_loss_dice_8: 1.307    time: 1.3685  last_time: 1.4535  data_time: 0.0554  last_data_time: 0.1102   lr: 0.0001  max_mem: 34688M
[10/04 21:36:02] d2.utils.events INFO:  eta: 0:13:39  iter: 399  total_loss: 39.66  m1_loss_ce: 0.4219  m1_loss_mask: 0.1728  m1_loss_dice: 1.258  m1_loss_ce_0: 0.5579  m1_loss_mask_0: 0.1923  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.6053  m1_loss_mask_1: 0.1755  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5325  m1_loss_mask_2: 0.1715  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.4882  m1_loss_mask_3: 0.1723  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.4464  m1_loss_mask_4: 0.1715  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4451  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.4439  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.4304  m1_loss_mask_7: 0.1692  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.4476  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.251  m2_loss_ce: 0.476  m2_loss_mask: 0.1736  m2_loss_dice: 1.295  m2_loss_ce_0: 0.5949  m2_loss_mask_0: 0.2016  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6492  m2_loss_mask_1: 0.182  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.5599  m2_loss_mask_2: 0.1728  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5048  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.4864  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.311  m2_loss_ce_5: 0.4771  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.4647  m2_loss_mask_6: 0.1715  m2_loss_dice_6: 1.275  m2_loss_ce_7: 0.4726  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.4847  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.316    time: 1.3692  last_time: 1.3080  data_time: 0.0525  last_data_time: 0.0409   lr: 0.0001  max_mem: 34688M
[10/04 21:36:29] d2.utils.events INFO:  eta: 0:13:12  iter: 419  total_loss: 41.3  m1_loss_ce: 0.4784  m1_loss_mask: 0.1678  m1_loss_dice: 1.283  m1_loss_ce_0: 0.577  m1_loss_mask_0: 0.2008  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.6729  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.425  m1_loss_ce_2: 0.5352  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.342  m1_loss_ce_3: 0.5111  m1_loss_mask_3: 0.1705  m1_loss_dice_3: 1.285  m1_loss_ce_4: 0.4912  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.4846  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.4925  m1_loss_mask_6: 0.1689  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.4666  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.47  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.234  m2_loss_ce: 0.4978  m2_loss_mask: 0.1655  m2_loss_dice: 1.302  m2_loss_ce_0: 0.6048  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.516  m2_loss_ce_1: 0.7039  m2_loss_mask_1: 0.1811  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.5893  m2_loss_mask_2: 0.1693  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.5511  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.334  m2_loss_ce_4: 0.523  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.5184  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.4965  m2_loss_mask_6: 0.165  m2_loss_dice_6: 1.251  m2_loss_ce_7: 0.4924  m2_loss_mask_7: 0.1658  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.4796  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.279    time: 1.3689  last_time: 1.3870  data_time: 0.0491  last_data_time: 0.0417   lr: 0.0001  max_mem: 34688M
[10/04 21:36:57] d2.utils.events INFO:  eta: 0:12:45  iter: 439  total_loss: 37.91  m1_loss_ce: 0.4273  m1_loss_mask: 0.1507  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5312  m1_loss_mask_0: 0.177  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.5944  m1_loss_mask_1: 0.1625  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.5436  m1_loss_mask_2: 0.1562  m1_loss_dice_2: 1.228  m1_loss_ce_3: 0.4983  m1_loss_mask_3: 0.1531  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4611  m1_loss_mask_4: 0.1545  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.4624  m1_loss_mask_5: 0.1513  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.4596  m1_loss_mask_6: 0.1514  m1_loss_dice_6: 1.19  m1_loss_ce_7: 0.4426  m1_loss_mask_7: 0.1523  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4356  m1_loss_mask_8: 0.1498  m1_loss_dice_8: 1.174  m2_loss_ce: 0.4942  m2_loss_mask: 0.1547  m2_loss_dice: 1.187  m2_loss_ce_0: 0.6133  m2_loss_mask_0: 0.189  m2_loss_dice_0: 1.397  m2_loss_ce_1: 0.6769  m2_loss_mask_1: 0.1739  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.581  m2_loss_mask_2: 0.1584  m2_loss_dice_2: 1.27  m2_loss_ce_3: 0.5392  m2_loss_mask_3: 0.1567  m2_loss_dice_3: 1.228  m2_loss_ce_4: 0.518  m2_loss_mask_4: 0.1547  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.5046  m2_loss_mask_5: 0.1539  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4803  m2_loss_mask_6: 0.1574  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4791  m2_loss_mask_7: 0.1552  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.4901  m2_loss_mask_8: 0.156  m2_loss_dice_8: 1.224    time: 1.3700  last_time: 1.4362  data_time: 0.0441  last_data_time: 0.0661   lr: 0.0001  max_mem: 34688M
[10/04 21:37:25] d2.utils.events INFO:  eta: 0:12:18  iter: 459  total_loss: 39.38  m1_loss_ce: 0.4653  m1_loss_mask: 0.1747  m1_loss_dice: 1.182  m1_loss_ce_0: 0.5336  m1_loss_mask_0: 0.1923  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6252  m1_loss_mask_1: 0.1892  m1_loss_dice_1: 1.287  m1_loss_ce_2: 0.5425  m1_loss_mask_2: 0.1816  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5134  m1_loss_mask_3: 0.1786  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.4787  m1_loss_mask_4: 0.1781  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.4651  m1_loss_mask_5: 0.1769  m1_loss_dice_5: 1.181  m1_loss_ce_6: 0.4866  m1_loss_mask_6: 0.1758  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.4659  m1_loss_mask_7: 0.1752  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4519  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.196  m2_loss_ce: 0.4727  m2_loss_mask: 0.166  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6156  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6799  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6012  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5218  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.5002  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.4992  m2_loss_mask_5: 0.1636  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4695  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4739  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4824  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.203    time: 1.3703  last_time: 1.3855  data_time: 0.0529  last_data_time: 0.0622   lr: 0.0001  max_mem: 34688M
[10/04 21:37:52] d2.utils.events INFO:  eta: 0:11:51  iter: 479  total_loss: 40.07  m1_loss_ce: 0.4571  m1_loss_mask: 0.1686  m1_loss_dice: 1.214  m1_loss_ce_0: 0.5653  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.438  m1_loss_ce_1: 0.607  m1_loss_mask_1: 0.1857  m1_loss_dice_1: 1.377  m1_loss_ce_2: 0.5419  m1_loss_mask_2: 0.1736  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.4898  m1_loss_mask_3: 0.174  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.4627  m1_loss_mask_4: 0.1692  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.4885  m1_loss_mask_5: 0.1697  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.463  m1_loss_mask_6: 0.1762  m1_loss_dice_6: 1.208  m1_loss_ce_7: 0.4224  m1_loss_mask_7: 0.1703  m1_loss_dice_7: 1.241  m1_loss_ce_8: 0.4706  m1_loss_mask_8: 0.1705  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5039  m2_loss_mask: 0.1732  m2_loss_dice: 1.232  m2_loss_ce_0: 0.6206  m2_loss_mask_0: 0.2105  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6776  m2_loss_mask_1: 0.1946  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.5997  m2_loss_mask_2: 0.1795  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5383  m2_loss_mask_3: 0.1758  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.5048  m2_loss_mask_4: 0.1747  m2_loss_dice_4: 1.312  m2_loss_ce_5: 0.5021  m2_loss_mask_5: 0.174  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.4794  m2_loss_mask_6: 0.1755  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.4838  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4906  m2_loss_mask_8: 0.1744  m2_loss_dice_8: 1.261    time: 1.3699  last_time: 1.3550  data_time: 0.0456  last_data_time: 0.0493   lr: 0.0001  max_mem: 34688M
[10/04 21:38:20] d2.utils.events INFO:  eta: 0:11:24  iter: 499  total_loss: 38  m1_loss_ce: 0.4139  m1_loss_mask: 0.1589  m1_loss_dice: 1.177  m1_loss_ce_0: 0.5438  m1_loss_mask_0: 0.1758  m1_loss_dice_0: 1.37  m1_loss_ce_1: 0.5728  m1_loss_mask_1: 0.1671  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.5764  m1_loss_mask_2: 0.1537  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.4847  m1_loss_mask_3: 0.1543  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.4362  m1_loss_mask_4: 0.1572  m1_loss_dice_4: 1.188  m1_loss_ce_5: 0.4726  m1_loss_mask_5: 0.1554  m1_loss_dice_5: 1.2  m1_loss_ce_6: 0.4576  m1_loss_mask_6: 0.1596  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.4406  m1_loss_mask_7: 0.1575  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.4346  m1_loss_mask_8: 0.1586  m1_loss_dice_8: 1.185  m2_loss_ce: 0.4603  m2_loss_mask: 0.1566  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5798  m2_loss_mask_0: 0.183  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6507  m2_loss_mask_1: 0.1738  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.5655  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.5273  m2_loss_mask_3: 0.1584  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.4944  m2_loss_mask_4: 0.1587  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.4743  m2_loss_mask_5: 0.1561  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4622  m2_loss_mask_6: 0.1557  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4541  m2_loss_mask_7: 0.1561  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4632  m2_loss_mask_8: 0.1563  m2_loss_dice_8: 1.218    time: 1.3701  last_time: 1.3824  data_time: 0.0541  last_data_time: 0.0398   lr: 0.0001  max_mem: 34688M
[10/04 21:38:48] d2.utils.events INFO:  eta: 0:10:57  iter: 519  total_loss: 39.04  m1_loss_ce: 0.4293  m1_loss_mask: 0.1771  m1_loss_dice: 1.179  m1_loss_ce_0: 0.5211  m1_loss_mask_0: 0.2025  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.5931  m1_loss_mask_1: 0.1958  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.531  m1_loss_mask_2: 0.1807  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.4824  m1_loss_mask_3: 0.1841  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4648  m1_loss_mask_4: 0.1795  m1_loss_dice_4: 1.179  m1_loss_ce_5: 0.4625  m1_loss_mask_5: 0.1775  m1_loss_dice_5: 1.203  m1_loss_ce_6: 0.4528  m1_loss_mask_6: 0.1764  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4499  m1_loss_mask_7: 0.1778  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.4363  m1_loss_mask_8: 0.1771  m1_loss_dice_8: 1.177  m2_loss_ce: 0.4753  m2_loss_mask: 0.178  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6126  m2_loss_mask_0: 0.2097  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6867  m2_loss_mask_1: 0.1968  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5916  m2_loss_mask_2: 0.1839  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.527  m2_loss_mask_3: 0.184  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.529  m2_loss_mask_4: 0.1842  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.5245  m2_loss_mask_5: 0.182  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.5221  m2_loss_mask_6: 0.1875  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5022  m2_loss_mask_7: 0.187  m2_loss_dice_7: 1.223  m2_loss_ce_8: 0.496  m2_loss_mask_8: 0.1721  m2_loss_dice_8: 1.206    time: 1.3707  last_time: 1.3421  data_time: 0.0531  last_data_time: 0.0448   lr: 0.0001  max_mem: 34688M
[10/04 21:39:15] d2.utils.events INFO:  eta: 0:10:29  iter: 539  total_loss: 40.01  m1_loss_ce: 0.4481  m1_loss_mask: 0.1642  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5521  m1_loss_mask_0: 0.1949  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6031  m1_loss_mask_1: 0.1794  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5651  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.5171  m1_loss_mask_3: 0.1713  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.479  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.226  m1_loss_ce_5: 0.4895  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.461  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4614  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4697  m1_loss_mask_8: 0.1661  m1_loss_dice_8: 1.203  m2_loss_ce: 0.4722  m2_loss_mask: 0.1626  m2_loss_dice: 1.212  m2_loss_ce_0: 0.5979  m2_loss_mask_0: 0.193  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6554  m2_loss_mask_1: 0.1819  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.6022  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5204  m2_loss_mask_3: 0.1618  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.5028  m2_loss_mask_4: 0.1621  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.4805  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.4774  m2_loss_mask_6: 0.1672  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.4519  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.491  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.235    time: 1.3708  last_time: 1.3955  data_time: 0.0571  last_data_time: 0.0437   lr: 0.0001  max_mem: 34688M
[10/04 21:39:43] d2.utils.events INFO:  eta: 0:10:02  iter: 559  total_loss: 41.94  m1_loss_ce: 0.47  m1_loss_mask: 0.162  m1_loss_dice: 1.303  m1_loss_ce_0: 0.6178  m1_loss_mask_0: 0.1915  m1_loss_dice_0: 1.482  m1_loss_ce_1: 0.6259  m1_loss_mask_1: 0.1804  m1_loss_dice_1: 1.391  m1_loss_ce_2: 0.5799  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.364  m1_loss_ce_3: 0.5131  m1_loss_mask_3: 0.1651  m1_loss_dice_3: 1.295  m1_loss_ce_4: 0.5128  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.354  m1_loss_ce_5: 0.5043  m1_loss_mask_5: 0.1623  m1_loss_dice_5: 1.281  m1_loss_ce_6: 0.4758  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.316  m1_loss_ce_7: 0.495  m1_loss_mask_7: 0.1637  m1_loss_dice_7: 1.328  m1_loss_ce_8: 0.47  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.28  m2_loss_ce: 0.481  m2_loss_mask: 0.1648  m2_loss_dice: 1.301  m2_loss_ce_0: 0.6429  m2_loss_mask_0: 0.1906  m2_loss_dice_0: 1.55  m2_loss_ce_1: 0.6737  m2_loss_mask_1: 0.1836  m2_loss_dice_1: 1.444  m2_loss_ce_2: 0.6283  m2_loss_mask_2: 0.1692  m2_loss_dice_2: 1.434  m2_loss_ce_3: 0.5276  m2_loss_mask_3: 0.1684  m2_loss_dice_3: 1.349  m2_loss_ce_4: 0.542  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.324  m2_loss_ce_5: 0.5177  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.347  m2_loss_ce_6: 0.4865  m2_loss_mask_6: 0.1625  m2_loss_dice_6: 1.336  m2_loss_ce_7: 0.4937  m2_loss_mask_7: 0.1679  m2_loss_dice_7: 1.313  m2_loss_ce_8: 0.4835  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.324    time: 1.3714  last_time: 1.3926  data_time: 0.0527  last_data_time: 0.0377   lr: 0.0001  max_mem: 34688M
[10/04 21:40:11] d2.utils.events INFO:  eta: 0:09:35  iter: 579  total_loss: 40  m1_loss_ce: 0.4615  m1_loss_mask: 0.1728  m1_loss_dice: 1.224  m1_loss_ce_0: 0.5602  m1_loss_mask_0: 0.1957  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.5828  m1_loss_mask_1: 0.1853  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.5185  m1_loss_mask_2: 0.1744  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.4811  m1_loss_mask_3: 0.1757  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.433  m1_loss_mask_4: 0.1741  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.4463  m1_loss_mask_5: 0.1736  m1_loss_dice_5: 1.256  m1_loss_ce_6: 0.4611  m1_loss_mask_6: 0.1751  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4482  m1_loss_mask_7: 0.1731  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.4485  m1_loss_mask_8: 0.1726  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4232  m2_loss_mask: 0.1696  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5922  m2_loss_mask_0: 0.1989  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6746  m2_loss_mask_1: 0.194  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.5834  m2_loss_mask_2: 0.1707  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5158  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.4977  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.4995  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4799  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.4601  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.4787  m2_loss_mask_8: 0.1673  m2_loss_dice_8: 1.226    time: 1.3723  last_time: 1.4870  data_time: 0.0519  last_data_time: 0.0525   lr: 0.0001  max_mem: 34688M
[10/04 21:40:39] d2.utils.events INFO:  eta: 0:09:08  iter: 599  total_loss: 40.78  m1_loss_ce: 0.3962  m1_loss_mask: 0.1588  m1_loss_dice: 1.304  m1_loss_ce_0: 0.4991  m1_loss_mask_0: 0.1841  m1_loss_dice_0: 1.525  m1_loss_ce_1: 0.5704  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.44  m1_loss_ce_2: 0.5099  m1_loss_mask_2: 0.1591  m1_loss_dice_2: 1.387  m1_loss_ce_3: 0.4549  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.361  m1_loss_ce_4: 0.4528  m1_loss_mask_4: 0.1603  m1_loss_dice_4: 1.313  m1_loss_ce_5: 0.4392  m1_loss_mask_5: 0.1593  m1_loss_dice_5: 1.307  m1_loss_ce_6: 0.4059  m1_loss_mask_6: 0.161  m1_loss_dice_6: 1.326  m1_loss_ce_7: 0.4589  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.312  m1_loss_ce_8: 0.4113  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.335  m2_loss_ce: 0.4785  m2_loss_mask: 0.1633  m2_loss_dice: 1.346  m2_loss_ce_0: 0.6055  m2_loss_mask_0: 0.1874  m2_loss_dice_0: 1.538  m2_loss_ce_1: 0.6791  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.474  m2_loss_ce_2: 0.5836  m2_loss_mask_2: 0.1649  m2_loss_dice_2: 1.387  m2_loss_ce_3: 0.5298  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.363  m2_loss_ce_4: 0.5164  m2_loss_mask_4: 0.1642  m2_loss_dice_4: 1.407  m2_loss_ce_5: 0.4815  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.321  m2_loss_ce_6: 0.508  m2_loss_mask_6: 0.1639  m2_loss_dice_6: 1.358  m2_loss_ce_7: 0.5158  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.337  m2_loss_ce_8: 0.4767  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.343    time: 1.3728  last_time: 1.3636  data_time: 0.0508  last_data_time: 0.0383   lr: 0.0001  max_mem: 34688M
[10/04 21:41:06] d2.utils.events INFO:  eta: 0:08:40  iter: 619  total_loss: 38.36  m1_loss_ce: 0.4442  m1_loss_mask: 0.1807  m1_loss_dice: 1.121  m1_loss_ce_0: 0.5489  m1_loss_mask_0: 0.2116  m1_loss_dice_0: 1.345  m1_loss_ce_1: 0.5915  m1_loss_mask_1: 0.1935  m1_loss_dice_1: 1.253  m1_loss_ce_2: 0.527  m1_loss_mask_2: 0.1913  m1_loss_dice_2: 1.221  m1_loss_ce_3: 0.4682  m1_loss_mask_3: 0.1914  m1_loss_dice_3: 1.163  m1_loss_ce_4: 0.44  m1_loss_mask_4: 0.1877  m1_loss_dice_4: 1.152  m1_loss_ce_5: 0.4597  m1_loss_mask_5: 0.185  m1_loss_dice_5: 1.136  m1_loss_ce_6: 0.3912  m1_loss_mask_6: 0.1843  m1_loss_dice_6: 1.127  m1_loss_ce_7: 0.4147  m1_loss_mask_7: 0.1825  m1_loss_dice_7: 1.154  m1_loss_ce_8: 0.4051  m1_loss_mask_8: 0.1826  m1_loss_dice_8: 1.137  m2_loss_ce: 0.4231  m2_loss_mask: 0.1805  m2_loss_dice: 1.162  m2_loss_ce_0: 0.552  m2_loss_mask_0: 0.2163  m2_loss_dice_0: 1.377  m2_loss_ce_1: 0.5938  m2_loss_mask_1: 0.2035  m2_loss_dice_1: 1.276  m2_loss_ce_2: 0.5485  m2_loss_mask_2: 0.1885  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.4975  m2_loss_mask_3: 0.1866  m2_loss_dice_3: 1.178  m2_loss_ce_4: 0.4643  m2_loss_mask_4: 0.1804  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.4709  m2_loss_mask_5: 0.1792  m2_loss_dice_5: 1.192  m2_loss_ce_6: 0.415  m2_loss_mask_6: 0.1826  m2_loss_dice_6: 1.147  m2_loss_ce_7: 0.4246  m2_loss_mask_7: 0.1829  m2_loss_dice_7: 1.154  m2_loss_ce_8: 0.4402  m2_loss_mask_8: 0.1809  m2_loss_dice_8: 1.163    time: 1.3724  last_time: 1.3144  data_time: 0.0522  last_data_time: 0.0357   lr: 0.0001  max_mem: 34688M
[10/04 21:41:34] d2.utils.events INFO:  eta: 0:08:13  iter: 639  total_loss: 39.44  m1_loss_ce: 0.4247  m1_loss_mask: 0.1729  m1_loss_dice: 1.122  m1_loss_ce_0: 0.5916  m1_loss_mask_0: 0.1953  m1_loss_dice_0: 1.323  m1_loss_ce_1: 0.6079  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.259  m1_loss_ce_2: 0.554  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.194  m1_loss_ce_3: 0.4926  m1_loss_mask_3: 0.1736  m1_loss_dice_3: 1.149  m1_loss_ce_4: 0.4692  m1_loss_mask_4: 0.176  m1_loss_dice_4: 1.165  m1_loss_ce_5: 0.4401  m1_loss_mask_5: 0.1727  m1_loss_dice_5: 1.14  m1_loss_ce_6: 0.4505  m1_loss_mask_6: 0.1723  m1_loss_dice_6: 1.136  m1_loss_ce_7: 0.4436  m1_loss_mask_7: 0.1759  m1_loss_dice_7: 1.117  m1_loss_ce_8: 0.4521  m1_loss_mask_8: 0.176  m1_loss_dice_8: 1.13  m2_loss_ce: 0.4728  m2_loss_mask: 0.176  m2_loss_dice: 1.18  m2_loss_ce_0: 0.5788  m2_loss_mask_0: 0.209  m2_loss_dice_0: 1.389  m2_loss_ce_1: 0.6674  m2_loss_mask_1: 0.1957  m2_loss_dice_1: 1.31  m2_loss_ce_2: 0.5658  m2_loss_mask_2: 0.1863  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5357  m2_loss_mask_3: 0.1813  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.533  m2_loss_mask_4: 0.1772  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.5063  m2_loss_mask_5: 0.1773  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.4963  m2_loss_mask_6: 0.1773  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.497  m2_loss_mask_7: 0.1776  m2_loss_dice_7: 1.156  m2_loss_ce_8: 0.4565  m2_loss_mask_8: 0.176  m2_loss_dice_8: 1.2    time: 1.3726  last_time: 1.3888  data_time: 0.0528  last_data_time: 0.0429   lr: 0.0001  max_mem: 34688M
[10/04 21:42:02] d2.utils.events INFO:  eta: 0:07:46  iter: 659  total_loss: 40.06  m1_loss_ce: 0.4186  m1_loss_mask: 0.1625  m1_loss_dice: 1.209  m1_loss_ce_0: 0.5314  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6034  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.338  m1_loss_ce_2: 0.5427  m1_loss_mask_2: 0.1665  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.526  m1_loss_mask_3: 0.1635  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.49  m1_loss_mask_4: 0.1622  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.4697  m1_loss_mask_5: 0.1671  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.4667  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4251  m1_loss_mask_7: 0.166  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.4463  m1_loss_mask_8: 0.164  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4694  m2_loss_mask: 0.168  m2_loss_dice: 1.228  m2_loss_ce_0: 0.5853  m2_loss_mask_0: 0.197  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6871  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5703  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5217  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5144  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.5063  m2_loss_mask_5: 0.1626  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4887  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.4762  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.503  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.224    time: 1.3728  last_time: 1.4691  data_time: 0.0486  last_data_time: 0.0451   lr: 0.0001  max_mem: 34688M
[10/04 21:42:30] d2.utils.events INFO:  eta: 0:07:18  iter: 679  total_loss: 38.54  m1_loss_ce: 0.4342  m1_loss_mask: 0.1589  m1_loss_dice: 1.194  m1_loss_ce_0: 0.5444  m1_loss_mask_0: 0.1839  m1_loss_dice_0: 1.357  m1_loss_ce_1: 0.6125  m1_loss_mask_1: 0.1658  m1_loss_dice_1: 1.266  m1_loss_ce_2: 0.5228  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.222  m1_loss_ce_3: 0.5264  m1_loss_mask_3: 0.1614  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.4609  m1_loss_mask_4: 0.1597  m1_loss_dice_4: 1.196  m1_loss_ce_5: 0.4917  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.462  m1_loss_mask_6: 0.1584  m1_loss_dice_6: 1.157  m1_loss_ce_7: 0.4556  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.4673  m1_loss_mask_8: 0.1579  m1_loss_dice_8: 1.176  m2_loss_ce: 0.4653  m2_loss_mask: 0.1581  m2_loss_dice: 1.201  m2_loss_ce_0: 0.594  m2_loss_mask_0: 0.1905  m2_loss_dice_0: 1.412  m2_loss_ce_1: 0.6605  m2_loss_mask_1: 0.1717  m2_loss_dice_1: 1.328  m2_loss_ce_2: 0.5837  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5456  m2_loss_mask_3: 0.1595  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5206  m2_loss_mask_4: 0.1555  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.5177  m2_loss_mask_5: 0.1565  m2_loss_dice_5: 1.222  m2_loss_ce_6: 0.4893  m2_loss_mask_6: 0.1558  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4752  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.185  m2_loss_ce_8: 0.4891  m2_loss_mask_8: 0.1598  m2_loss_dice_8: 1.198    time: 1.3736  last_time: 1.3556  data_time: 0.0576  last_data_time: 0.0913   lr: 0.0001  max_mem: 34688M
[10/04 21:42:58] d2.utils.events INFO:  eta: 0:06:51  iter: 699  total_loss: 41.21  m1_loss_ce: 0.4583  m1_loss_mask: 0.1471  m1_loss_dice: 1.267  m1_loss_ce_0: 0.5689  m1_loss_mask_0: 0.1695  m1_loss_dice_0: 1.525  m1_loss_ce_1: 0.6616  m1_loss_mask_1: 0.156  m1_loss_dice_1: 1.421  m1_loss_ce_2: 0.5971  m1_loss_mask_2: 0.1512  m1_loss_dice_2: 1.336  m1_loss_ce_3: 0.5254  m1_loss_mask_3: 0.1553  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5013  m1_loss_mask_4: 0.1524  m1_loss_dice_4: 1.292  m1_loss_ce_5: 0.4914  m1_loss_mask_5: 0.1514  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.4732  m1_loss_mask_6: 0.1507  m1_loss_dice_6: 1.322  m1_loss_ce_7: 0.4586  m1_loss_mask_7: 0.1502  m1_loss_dice_7: 1.296  m1_loss_ce_8: 0.4858  m1_loss_mask_8: 0.1475  m1_loss_dice_8: 1.296  m2_loss_ce: 0.4875  m2_loss_mask: 0.1523  m2_loss_dice: 1.323  m2_loss_ce_0: 0.6379  m2_loss_mask_0: 0.1715  m2_loss_dice_0: 1.54  m2_loss_ce_1: 0.6842  m2_loss_mask_1: 0.1641  m2_loss_dice_1: 1.464  m2_loss_ce_2: 0.5841  m2_loss_mask_2: 0.1529  m2_loss_dice_2: 1.398  m2_loss_ce_3: 0.5718  m2_loss_mask_3: 0.1527  m2_loss_dice_3: 1.364  m2_loss_ce_4: 0.5413  m2_loss_mask_4: 0.1511  m2_loss_dice_4: 1.313  m2_loss_ce_5: 0.545  m2_loss_mask_5: 0.151  m2_loss_dice_5: 1.338  m2_loss_ce_6: 0.5054  m2_loss_mask_6: 0.1542  m2_loss_dice_6: 1.322  m2_loss_ce_7: 0.4864  m2_loss_mask_7: 0.1527  m2_loss_dice_7: 1.336  m2_loss_ce_8: 0.4715  m2_loss_mask_8: 0.1546  m2_loss_dice_8: 1.336    time: 1.3743  last_time: 1.4368  data_time: 0.0506  last_data_time: 0.0531   lr: 0.0001  max_mem: 34766M
[10/04 21:43:26] d2.utils.events INFO:  eta: 0:06:24  iter: 719  total_loss: 39.44  m1_loss_ce: 0.4754  m1_loss_mask: 0.1742  m1_loss_dice: 1.223  m1_loss_ce_0: 0.5879  m1_loss_mask_0: 0.2029  m1_loss_dice_0: 1.481  m1_loss_ce_1: 0.6026  m1_loss_mask_1: 0.1904  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.557  m1_loss_mask_2: 0.1773  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5187  m1_loss_mask_3: 0.1789  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5447  m1_loss_mask_4: 0.1753  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.5031  m1_loss_mask_5: 0.1754  m1_loss_dice_5: 1.223  m1_loss_ce_6: 0.4938  m1_loss_mask_6: 0.1745  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4524  m1_loss_mask_7: 0.1752  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.4739  m1_loss_mask_8: 0.1731  m1_loss_dice_8: 1.204  m2_loss_ce: 0.4957  m2_loss_mask: 0.1668  m2_loss_dice: 1.252  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.649  m2_loss_mask_1: 0.1823  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.5931  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5635  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5178  m2_loss_mask_4: 0.167  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.499  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.494  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5099  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.26  m2_loss_ce_8: 0.4965  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.261    time: 1.3745  last_time: 1.3618  data_time: 0.0500  last_data_time: 0.0391   lr: 0.0001  max_mem: 34766M
[10/04 21:43:53] d2.utils.events INFO:  eta: 0:05:56  iter: 739  total_loss: 39.17  m1_loss_ce: 0.4459  m1_loss_mask: 0.1723  m1_loss_dice: 1.174  m1_loss_ce_0: 0.501  m1_loss_mask_0: 0.1998  m1_loss_dice_0: 1.375  m1_loss_ce_1: 0.5814  m1_loss_mask_1: 0.1897  m1_loss_dice_1: 1.348  m1_loss_ce_2: 0.536  m1_loss_mask_2: 0.1784  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.4756  m1_loss_mask_3: 0.1796  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4723  m1_loss_mask_4: 0.1802  m1_loss_dice_4: 1.2  m1_loss_ce_5: 0.4525  m1_loss_mask_5: 0.1811  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.4401  m1_loss_mask_6: 0.175  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4481  m1_loss_mask_7: 0.1757  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4576  m1_loss_mask_8: 0.1728  m1_loss_dice_8: 1.182  m2_loss_ce: 0.438  m2_loss_mask: 0.1772  m2_loss_dice: 1.223  m2_loss_ce_0: 0.5747  m2_loss_mask_0: 0.208  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6112  m2_loss_mask_1: 0.1917  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5654  m2_loss_mask_2: 0.1855  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5223  m2_loss_mask_3: 0.179  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5034  m2_loss_mask_4: 0.1756  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.4707  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.4443  m2_loss_mask_6: 0.176  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.4493  m2_loss_mask_7: 0.1771  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4696  m2_loss_mask_8: 0.1787  m2_loss_dice_8: 1.254    time: 1.3743  last_time: 1.3092  data_time: 0.0554  last_data_time: 0.0389   lr: 0.0001  max_mem: 34766M
[10/04 21:44:21] d2.utils.events INFO:  eta: 0:05:29  iter: 759  total_loss: 39.56  m1_loss_ce: 0.434  m1_loss_mask: 0.1671  m1_loss_dice: 1.186  m1_loss_ce_0: 0.5615  m1_loss_mask_0: 0.1931  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6139  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.293  m1_loss_ce_2: 0.5326  m1_loss_mask_2: 0.1762  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5006  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.4703  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.4692  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4289  m1_loss_mask_6: 0.1673  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4328  m1_loss_mask_7: 0.169  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4469  m1_loss_mask_8: 0.1667  m1_loss_dice_8: 1.238  m2_loss_ce: 0.4789  m2_loss_mask: 0.171  m2_loss_dice: 1.265  m2_loss_ce_0: 0.5761  m2_loss_mask_0: 0.196  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6669  m2_loss_mask_1: 0.1818  m2_loss_dice_1: 1.382  m2_loss_ce_2: 0.5586  m2_loss_mask_2: 0.1697  m2_loss_dice_2: 1.332  m2_loss_ce_3: 0.5199  m2_loss_mask_3: 0.1721  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5237  m2_loss_mask_4: 0.1719  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.5242  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4686  m2_loss_mask_6: 0.1708  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5017  m2_loss_mask_7: 0.1699  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4704  m2_loss_mask_8: 0.1705  m2_loss_dice_8: 1.243    time: 1.3746  last_time: 1.4676  data_time: 0.0544  last_data_time: 0.0487   lr: 0.0001  max_mem: 34766M
[10/04 21:44:49] d2.utils.events INFO:  eta: 0:05:01  iter: 779  total_loss: 38.63  m1_loss_ce: 0.456  m1_loss_mask: 0.1661  m1_loss_dice: 1.176  m1_loss_ce_0: 0.5577  m1_loss_mask_0: 0.2006  m1_loss_dice_0: 1.398  m1_loss_ce_1: 0.6081  m1_loss_mask_1: 0.1824  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5246  m1_loss_mask_2: 0.1755  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.4992  m1_loss_mask_3: 0.1713  m1_loss_dice_3: 1.182  m1_loss_ce_4: 0.442  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.4486  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.4276  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.4032  m1_loss_mask_7: 0.1654  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4223  m1_loss_mask_8: 0.1658  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4702  m2_loss_mask: 0.174  m2_loss_dice: 1.232  m2_loss_ce_0: 0.6165  m2_loss_mask_0: 0.2117  m2_loss_dice_0: 1.404  m2_loss_ce_1: 0.6329  m2_loss_mask_1: 0.1939  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6066  m2_loss_mask_2: 0.1842  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5139  m2_loss_mask_3: 0.1803  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5052  m2_loss_mask_4: 0.1769  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.4882  m2_loss_mask_5: 0.1751  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.4683  m2_loss_mask_6: 0.1722  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.4755  m2_loss_mask_7: 0.1741  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.4594  m2_loss_mask_8: 0.1713  m2_loss_dice_8: 1.24    time: 1.3746  last_time: 1.3507  data_time: 0.0484  last_data_time: 0.0390   lr: 0.0001  max_mem: 34766M
[10/04 21:45:16] d2.utils.events INFO:  eta: 0:04:34  iter: 799  total_loss: 40.07  m1_loss_ce: 0.4015  m1_loss_mask: 0.1501  m1_loss_dice: 1.204  m1_loss_ce_0: 0.5341  m1_loss_mask_0: 0.1868  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.617  m1_loss_mask_1: 0.1701  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5555  m1_loss_mask_2: 0.1575  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.4948  m1_loss_mask_3: 0.154  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.4738  m1_loss_mask_4: 0.1527  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.4423  m1_loss_mask_5: 0.1555  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.4252  m1_loss_mask_6: 0.1532  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4191  m1_loss_mask_7: 0.1557  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4139  m1_loss_mask_8: 0.1505  m1_loss_dice_8: 1.237  m2_loss_ce: 0.4677  m2_loss_mask: 0.1549  m2_loss_dice: 1.286  m2_loss_ce_0: 0.6432  m2_loss_mask_0: 0.1899  m2_loss_dice_0: 1.461  m2_loss_ce_1: 0.6858  m2_loss_mask_1: 0.1825  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.6013  m2_loss_mask_2: 0.1596  m2_loss_dice_2: 1.356  m2_loss_ce_3: 0.5269  m2_loss_mask_3: 0.1562  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.538  m2_loss_mask_4: 0.1549  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5266  m2_loss_mask_5: 0.153  m2_loss_dice_5: 1.302  m2_loss_ce_6: 0.4911  m2_loss_mask_6: 0.1528  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.4864  m2_loss_mask_7: 0.1534  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4666  m2_loss_mask_8: 0.1525  m2_loss_dice_8: 1.285    time: 1.3748  last_time: 1.4619  data_time: 0.0471  last_data_time: 0.0420   lr: 0.0001  max_mem: 34766M
[10/04 21:45:44] d2.utils.events INFO:  eta: 0:04:06  iter: 819  total_loss: 38.32  m1_loss_ce: 0.4062  m1_loss_mask: 0.1599  m1_loss_dice: 1.187  m1_loss_ce_0: 0.4866  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.37  m1_loss_ce_1: 0.5617  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.296  m1_loss_ce_2: 0.51  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.278  m1_loss_ce_3: 0.4734  m1_loss_mask_3: 0.1674  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.4202  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4326  m1_loss_mask_5: 0.1618  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4168  m1_loss_mask_6: 0.1603  m1_loss_dice_6: 1.176  m1_loss_ce_7: 0.4051  m1_loss_mask_7: 0.161  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.3983  m1_loss_mask_8: 0.1603  m1_loss_dice_8: 1.154  m2_loss_ce: 0.4441  m2_loss_mask: 0.1719  m2_loss_dice: 1.232  m2_loss_ce_0: 0.5736  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.635  m2_loss_mask_1: 0.1863  m2_loss_dice_1: 1.359  m2_loss_ce_2: 0.5584  m2_loss_mask_2: 0.1716  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5414  m2_loss_mask_3: 0.1748  m2_loss_dice_3: 1.251  m2_loss_ce_4: 0.5051  m2_loss_mask_4: 0.1733  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.4872  m2_loss_mask_5: 0.1698  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4624  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.4698  m2_loss_mask_7: 0.1726  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4558  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.235    time: 1.3750  last_time: 1.4080  data_time: 0.0524  last_data_time: 0.1005   lr: 0.0001  max_mem: 34766M
[10/04 21:46:12] d2.utils.events INFO:  eta: 0:03:39  iter: 839  total_loss: 40.12  m1_loss_ce: 0.4703  m1_loss_mask: 0.16  m1_loss_dice: 1.212  m1_loss_ce_0: 0.5721  m1_loss_mask_0: 0.179  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6091  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.5688  m1_loss_mask_2: 0.1686  m1_loss_dice_2: 1.31  m1_loss_ce_3: 0.5597  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.4964  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.5019  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4721  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4624  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4858  m1_loss_mask_8: 0.1609  m1_loss_dice_8: 1.207  m2_loss_ce: 0.4863  m2_loss_mask: 0.1681  m2_loss_dice: 1.276  m2_loss_ce_0: 0.6312  m2_loss_mask_0: 0.1959  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.6564  m2_loss_mask_1: 0.1811  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.6053  m2_loss_mask_2: 0.1729  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.5344  m2_loss_mask_3: 0.172  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.5219  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5179  m2_loss_mask_5: 0.1646  m2_loss_dice_5: 1.302  m2_loss_ce_6: 0.5126  m2_loss_mask_6: 0.1632  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.4876  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.292  m2_loss_ce_8: 0.4595  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.242    time: 1.3756  last_time: 1.4094  data_time: 0.0583  last_data_time: 0.0895   lr: 0.0001  max_mem: 35140M
[10/04 21:46:40] d2.utils.events INFO:  eta: 0:03:11  iter: 859  total_loss: 38.5  m1_loss_ce: 0.446  m1_loss_mask: 0.1589  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5242  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.5895  m1_loss_mask_1: 0.1747  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.5461  m1_loss_mask_2: 0.1679  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.4922  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.236  m1_loss_ce_4: 0.4758  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.198  m1_loss_ce_5: 0.4334  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.186  m1_loss_ce_6: 0.44  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.4407  m1_loss_mask_7: 0.1605  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.4318  m1_loss_mask_8: 0.1608  m1_loss_dice_8: 1.204  m2_loss_ce: 0.4537  m2_loss_mask: 0.1678  m2_loss_dice: 1.263  m2_loss_ce_0: 0.5801  m2_loss_mask_0: 0.2006  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6452  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.5874  m2_loss_mask_2: 0.1735  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5317  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.536  m2_loss_mask_4: 0.1687  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.4782  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.4484  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.278  m2_loss_ce_7: 0.4864  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.4467  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.237    time: 1.3755  last_time: 1.3577  data_time: 0.0530  last_data_time: 0.0420   lr: 0.0001  max_mem: 35140M
[10/04 21:47:07] d2.utils.events INFO:  eta: 0:02:44  iter: 879  total_loss: 37.42  m1_loss_ce: 0.4279  m1_loss_mask: 0.1583  m1_loss_dice: 1.117  m1_loss_ce_0: 0.532  m1_loss_mask_0: 0.1841  m1_loss_dice_0: 1.337  m1_loss_ce_1: 0.603  m1_loss_mask_1: 0.1695  m1_loss_dice_1: 1.259  m1_loss_ce_2: 0.5359  m1_loss_mask_2: 0.1559  m1_loss_dice_2: 1.212  m1_loss_ce_3: 0.4861  m1_loss_mask_3: 0.1595  m1_loss_dice_3: 1.153  m1_loss_ce_4: 0.4629  m1_loss_mask_4: 0.1573  m1_loss_dice_4: 1.108  m1_loss_ce_5: 0.4673  m1_loss_mask_5: 0.1541  m1_loss_dice_5: 1.155  m1_loss_ce_6: 0.4236  m1_loss_mask_6: 0.1571  m1_loss_dice_6: 1.137  m1_loss_ce_7: 0.4331  m1_loss_mask_7: 0.1567  m1_loss_dice_7: 1.136  m1_loss_ce_8: 0.4364  m1_loss_mask_8: 0.1556  m1_loss_dice_8: 1.1  m2_loss_ce: 0.4727  m2_loss_mask: 0.158  m2_loss_dice: 1.192  m2_loss_ce_0: 0.6107  m2_loss_mask_0: 0.1898  m2_loss_dice_0: 1.339  m2_loss_ce_1: 0.6608  m2_loss_mask_1: 0.1727  m2_loss_dice_1: 1.264  m2_loss_ce_2: 0.5572  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.229  m2_loss_ce_3: 0.5242  m2_loss_mask_3: 0.1616  m2_loss_dice_3: 1.194  m2_loss_ce_4: 0.4992  m2_loss_mask_4: 0.1595  m2_loss_dice_4: 1.205  m2_loss_ce_5: 0.4812  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.5025  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.469  m2_loss_mask_7: 0.1613  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.4737  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.22    time: 1.3752  last_time: 1.4063  data_time: 0.0515  last_data_time: 0.0422   lr: 0.0001  max_mem: 35140M
[10/04 21:47:35] d2.utils.events INFO:  eta: 0:02:17  iter: 899  total_loss: 40.59  m1_loss_ce: 0.4801  m1_loss_mask: 0.1707  m1_loss_dice: 1.254  m1_loss_ce_0: 0.5972  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.639  m1_loss_mask_1: 0.1808  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.5694  m1_loss_mask_2: 0.1732  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5424  m1_loss_mask_3: 0.1749  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.47  m1_loss_mask_4: 0.1753  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4992  m1_loss_mask_5: 0.169  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4801  m1_loss_mask_6: 0.1712  m1_loss_dice_6: 1.243  m1_loss_ce_7: 0.4608  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.4827  m1_loss_mask_8: 0.1679  m1_loss_dice_8: 1.241  m2_loss_ce: 0.4862  m2_loss_mask: 0.168  m2_loss_dice: 1.298  m2_loss_ce_0: 0.6576  m2_loss_mask_0: 0.1985  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.663  m2_loss_mask_1: 0.1921  m2_loss_dice_1: 1.462  m2_loss_ce_2: 0.6076  m2_loss_mask_2: 0.1753  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.6056  m2_loss_mask_3: 0.1753  m2_loss_dice_3: 1.307  m2_loss_ce_4: 0.5487  m2_loss_mask_4: 0.1691  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.5149  m2_loss_mask_5: 0.1695  m2_loss_dice_5: 1.293  m2_loss_ce_6: 0.5211  m2_loss_mask_6: 0.1731  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.5123  m2_loss_mask_7: 0.1688  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.4776  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.302    time: 1.3755  last_time: 1.3415  data_time: 0.0498  last_data_time: 0.0394   lr: 0.0001  max_mem: 35140M
[10/04 21:48:03] d2.utils.events INFO:  eta: 0:01:49  iter: 919  total_loss: 39.37  m1_loss_ce: 0.4132  m1_loss_mask: 0.1616  m1_loss_dice: 1.219  m1_loss_ce_0: 0.5194  m1_loss_mask_0: 0.1907  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.5772  m1_loss_mask_1: 0.1819  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.5388  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.4953  m1_loss_mask_3: 0.1654  m1_loss_dice_3: 1.186  m1_loss_ce_4: 0.4542  m1_loss_mask_4: 0.1648  m1_loss_dice_4: 1.181  m1_loss_ce_5: 0.4614  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.177  m1_loss_ce_6: 0.4243  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.4139  m1_loss_mask_7: 0.1651  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4064  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4664  m2_loss_mask: 0.1703  m2_loss_dice: 1.244  m2_loss_ce_0: 0.5924  m2_loss_mask_0: 0.203  m2_loss_dice_0: 1.404  m2_loss_ce_1: 0.6615  m2_loss_mask_1: 0.1825  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.5966  m2_loss_mask_2: 0.1786  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5347  m2_loss_mask_3: 0.1734  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.517  m2_loss_mask_4: 0.17  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5008  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.4933  m2_loss_mask_6: 0.1673  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.4966  m2_loss_mask_7: 0.1694  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4852  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.221    time: 1.3760  last_time: 1.4789  data_time: 0.0513  last_data_time: 0.0351   lr: 0.0001  max_mem: 35140M
[10/04 21:48:31] d2.utils.events INFO:  eta: 0:01:22  iter: 939  total_loss: 41.7  m1_loss_ce: 0.4789  m1_loss_mask: 0.1711  m1_loss_dice: 1.225  m1_loss_ce_0: 0.6059  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.6358  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.5766  m1_loss_mask_2: 0.1837  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5383  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.5196  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.248  m1_loss_ce_5: 0.5208  m1_loss_mask_5: 0.169  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4835  m1_loss_mask_6: 0.1707  m1_loss_dice_6: 1.251  m1_loss_ce_7: 0.4877  m1_loss_mask_7: 0.1711  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.5024  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.24  m2_loss_ce: 0.4924  m2_loss_mask: 0.1771  m2_loss_dice: 1.312  m2_loss_ce_0: 0.6233  m2_loss_mask_0: 0.2059  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.6728  m2_loss_mask_1: 0.1914  m2_loss_dice_1: 1.438  m2_loss_ce_2: 0.6284  m2_loss_mask_2: 0.1813  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.5546  m2_loss_mask_3: 0.1823  m2_loss_dice_3: 1.326  m2_loss_ce_4: 0.5912  m2_loss_mask_4: 0.1753  m2_loss_dice_4: 1.323  m2_loss_ce_5: 0.5359  m2_loss_mask_5: 0.1765  m2_loss_dice_5: 1.332  m2_loss_ce_6: 0.547  m2_loss_mask_6: 0.1781  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.5189  m2_loss_mask_7: 0.1761  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.5135  m2_loss_mask_8: 0.177  m2_loss_dice_8: 1.279    time: 1.3761  last_time: 1.4711  data_time: 0.0509  last_data_time: 0.0369   lr: 0.0001  max_mem: 35140M
[10/04 21:48:58] d2.utils.events INFO:  eta: 0:00:54  iter: 959  total_loss: 39.45  m1_loss_ce: 0.4175  m1_loss_mask: 0.1579  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5238  m1_loss_mask_0: 0.1867  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.5636  m1_loss_mask_1: 0.1712  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5442  m1_loss_mask_2: 0.1663  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.4745  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4565  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.4528  m1_loss_mask_5: 0.1623  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4482  m1_loss_mask_6: 0.1597  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4535  m1_loss_mask_7: 0.161  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4278  m1_loss_mask_8: 0.1604  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4658  m2_loss_mask: 0.1676  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5757  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6671  m2_loss_mask_1: 0.182  m2_loss_dice_1: 1.383  m2_loss_ce_2: 0.5838  m2_loss_mask_2: 0.1751  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5542  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.5246  m2_loss_mask_4: 0.1676  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5067  m2_loss_mask_5: 0.1646  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.5123  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.4914  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.5014  m2_loss_mask_8: 0.1653  m2_loss_dice_8: 1.236    time: 1.3762  last_time: 1.2817  data_time: 0.0555  last_data_time: 0.0508   lr: 0.0001  max_mem: 35140M
[10/04 21:49:26] d2.utils.events INFO:  eta: 0:00:27  iter: 979  total_loss: 39.47  m1_loss_ce: 0.4093  m1_loss_mask: 0.1609  m1_loss_dice: 1.19  m1_loss_ce_0: 0.572  m1_loss_mask_0: 0.1908  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.601  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.36  m1_loss_ce_2: 0.5462  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.4776  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.446  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.4586  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.4453  m1_loss_mask_6: 0.1624  m1_loss_dice_6: 1.251  m1_loss_ce_7: 0.4455  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4325  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4866  m2_loss_mask: 0.1669  m2_loss_dice: 1.254  m2_loss_ce_0: 0.5798  m2_loss_mask_0: 0.1939  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.6799  m2_loss_mask_1: 0.184  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.5553  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.332  m2_loss_ce_3: 0.5274  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.4595  m2_loss_mask_4: 0.1678  m2_loss_dice_4: 1.327  m2_loss_ce_5: 0.5086  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.4412  m2_loss_mask_6: 0.169  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.4576  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.292  m2_loss_ce_8: 0.4573  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.283    time: 1.3763  last_time: 1.4099  data_time: 0.0485  last_data_time: 0.0425   lr: 0.0001  max_mem: 35140M
[10/04 21:49:54] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_6_0_4/model_final.pth
[10/04 21:49:56] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 37.45  m1_loss_ce: 0.4245  m1_loss_mask: 0.173  m1_loss_dice: 1.147  m1_loss_ce_0: 0.5463  m1_loss_mask_0: 0.2109  m1_loss_dice_0: 1.341  m1_loss_ce_1: 0.589  m1_loss_mask_1: 0.1971  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.5306  m1_loss_mask_2: 0.1866  m1_loss_dice_2: 1.221  m1_loss_ce_3: 0.4778  m1_loss_mask_3: 0.1822  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.4363  m1_loss_mask_4: 0.182  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.4351  m1_loss_mask_5: 0.177  m1_loss_dice_5: 1.146  m1_loss_ce_6: 0.4186  m1_loss_mask_6: 0.1751  m1_loss_dice_6: 1.142  m1_loss_ce_7: 0.4022  m1_loss_mask_7: 0.1745  m1_loss_dice_7: 1.14  m1_loss_ce_8: 0.4049  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.19  m2_loss_ce: 0.4665  m2_loss_mask: 0.1805  m2_loss_dice: 1.183  m2_loss_ce_0: 0.5937  m2_loss_mask_0: 0.2129  m2_loss_dice_0: 1.395  m2_loss_ce_1: 0.6533  m2_loss_mask_1: 0.201  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.6081  m2_loss_mask_2: 0.1825  m2_loss_dice_2: 1.244  m2_loss_ce_3: 0.5636  m2_loss_mask_3: 0.1797  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5031  m2_loss_mask_4: 0.1778  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.518  m2_loss_mask_5: 0.1769  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.5005  m2_loss_mask_6: 0.1821  m2_loss_dice_6: 1.184  m2_loss_ce_7: 0.5083  m2_loss_mask_7: 0.1803  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4867  m2_loss_mask_8: 0.1811  m2_loss_dice_8: 1.192    time: 1.3761  last_time: 1.3414  data_time: 0.0493  last_data_time: 0.0469   lr: 0.0001  max_mem: 35140M
[10/04 21:49:56] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:22:53 (1.3761 s / it)
[10/04 21:49:56] d2.engine.hooks INFO: Total training time: 0:23:00 (0:00:07 on hooks)
[10/04 21:49:56] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/04 21:49:56] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/04 21:49:56] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/04 21:49:56] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/04 21:49:56] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/04 21:51:21] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval365wq65a ...
[10/04 21:52:25] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.680 | 81.043 | 70.262 |      19       |
| Things | 48.453 | 80.747 | 60.140 |       8       |
| Stuff  | 64.391 | 81.259 | 77.623 |      11       |
[10/04 21:52:25] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.239 | 97.542 | 99.690 |     Stuff     |
| class_8  | 74.317 | 84.183 | 88.280 |     Stuff     |
| class_11 | 87.398 | 89.501 | 97.651 |     Stuff     |
| class_12 | 43.511 | 78.601 | 55.357 |     Stuff     |
| class_13 | 37.381 | 75.422 | 49.563 |     Stuff     |
| class_17 | 46.229 | 64.935 | 71.193 |     Stuff     |
| class_19 | 49.219 | 69.472 | 70.847 |     Stuff     |
| class_20 | 62.315 | 76.254 | 81.720 |     Stuff     |
| class_21 | 88.575 | 89.677 | 98.770 |     Stuff     |
| class_22 | 35.676 | 76.380 | 46.709 |     Stuff     |
| class_23 | 86.436 | 91.879 | 94.077 |     Stuff     |
| class_24 | 50.967 | 76.727 | 66.427 |    Things     |
| class_25 | 47.932 | 73.018 | 65.644 |    Things     |
| class_26 | 66.301 | 83.511 | 79.391 |    Things     |
| class_27 | 44.017 | 86.236 | 51.042 |    Things     |
| class_28 | 59.935 | 89.367 | 67.066 |    Things     |
| class_31 | 39.661 | 90.655 | 43.750 |    Things     |
| class_32 | 35.132 | 74.266 | 47.305 |    Things     |
| class_33 | 43.678 | 72.197 | 60.498 |    Things     |
[10/04 21:52:25] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/04 21:52:25] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/04 21:52:25] d2.evaluation.testing INFO: copypaste: 57.6800,81.0433,70.2622,48.4527,80.7471,60.1404,64.3907,81.2587,77.6235,97.2389,97.5415,99.6898,74.3171,84.1830,88.2804,87.3982,89.5009,97.6507,43.5115,78.6014,55.3571,37.3813,75.4223,49.5627,46.2292,64.9347,71.1934,49.2190,69.4718,70.8475,62.3150,76.2538,81.7204,88.5748,89.6774,98.7705,35.6764,76.3799,46.7091,86.4365,91.8788,94.0767,50.9674,76.7270,66.4269,47.9319,73.0177,65.6442,66.3006,83.5110,79.3914,44.0165,86.2364,51.0417,59.9345,89.3666,67.0659,39.6614,90.6547,43.7500,35.1319,74.2661,47.3054,43.6778,72.1973,60.4979
