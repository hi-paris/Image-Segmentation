[10/06 11:24:59] detectron2 INFO: Rank of current process: 0. World size: 2
[10/06 11:25:01] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/06 11:25:01] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_harmonic.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/06 11:25:01] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_harmonic.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/06 11:25:01] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/06 11:25:01] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic/config.yaml
[10/06 11:25:01] d2.utils.env INFO: Using a generated random seed 3356438
[10/06 11:25:04] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 11:25:04] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/06 11:25:04] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/06 11:25:04] d2.data.build INFO: Using training sampler TrainingSampler
[10/06 11:25:05] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/06 11:25:05] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/06 11:25:05] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/06 11:25:05] d2.data.build INFO: Making batched data loader with batch_size=4
[10/06 11:25:05] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/06 11:25:09] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 11:25:09] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:25:09] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:25:22] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:25:22] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:25:58] d2.utils.events INFO:  eta: 0:24:18  iter: 19  total_loss: 39.65  m1_loss_ce: 0.464  m1_loss_mask: 0.168  m1_loss_dice: 1.256  m1_loss_ce_0: 0.6136  m1_loss_mask_0: 0.202  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.6643  m1_loss_mask_1: 0.1846  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.5988  m1_loss_mask_2: 0.1742  m1_loss_dice_2: 1.332  m1_loss_ce_3: 0.5272  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.5291  m1_loss_mask_4: 0.1747  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.492  m1_loss_mask_5: 0.1669  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.48  m1_loss_mask_6: 0.1695  m1_loss_dice_6: 1.284  m1_loss_ce_7: 0.4621  m1_loss_mask_7: 0.1679  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.4589  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.258  m2_loss_ce: 0.4805  m2_loss_mask: 0.1652  m2_loss_dice: 1.228  m2_loss_ce_0: 0.6174  m2_loss_mask_0: 0.2052  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.6215  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.596  m2_loss_mask_2: 0.1744  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.506  m2_loss_mask_3: 0.1726  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.5053  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.49  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.287  m2_loss_ce_6: 0.4777  m2_loss_mask_6: 0.1697  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4719  m2_loss_mask_7: 0.1669  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.4455  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.231    time: 1.4741  last_time: 1.5131  data_time: 0.2652  last_data_time: 0.1231   lr: 0.0001  max_mem: 34051M
[10/06 11:26:27] d2.utils.events INFO:  eta: 0:23:37  iter: 39  total_loss: 38.95  m1_loss_ce: 0.503  m1_loss_mask: 0.1652  m1_loss_dice: 1.203  m1_loss_ce_0: 0.6115  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.6398  m1_loss_mask_1: 0.1695  m1_loss_dice_1: 1.36  m1_loss_ce_2: 0.6113  m1_loss_mask_2: 0.1621  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5366  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.5099  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.5069  m1_loss_mask_5: 0.1637  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4902  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4955  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.5027  m1_loss_mask_8: 0.1659  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4747  m2_loss_mask: 0.1584  m2_loss_dice: 1.208  m2_loss_ce_0: 0.559  m2_loss_mask_0: 0.1879  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6099  m2_loss_mask_1: 0.1693  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.5889  m2_loss_mask_2: 0.1604  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.5303  m2_loss_mask_3: 0.1599  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5033  m2_loss_mask_4: 0.1621  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.4952  m2_loss_mask_5: 0.1608  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.4847  m2_loss_mask_6: 0.1596  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.4765  m2_loss_mask_7: 0.1595  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.4656  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.203    time: 1.4692  last_time: 1.3047  data_time: 0.0540  last_data_time: 0.0387   lr: 0.0001  max_mem: 34051M
[10/06 11:26:57] d2.utils.events INFO:  eta: 0:23:07  iter: 59  total_loss: 42.55  m1_loss_ce: 0.4777  m1_loss_mask: 0.1673  m1_loss_dice: 1.348  m1_loss_ce_0: 0.5815  m1_loss_mask_0: 0.2038  m1_loss_dice_0: 1.568  m1_loss_ce_1: 0.6448  m1_loss_mask_1: 0.1773  m1_loss_dice_1: 1.47  m1_loss_ce_2: 0.6106  m1_loss_mask_2: 0.1677  m1_loss_dice_2: 1.392  m1_loss_ce_3: 0.5356  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.364  m1_loss_ce_4: 0.5073  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.348  m1_loss_ce_5: 0.5276  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.347  m1_loss_ce_6: 0.5115  m1_loss_mask_6: 0.1668  m1_loss_dice_6: 1.318  m1_loss_ce_7: 0.4922  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.335  m1_loss_ce_8: 0.4934  m1_loss_mask_8: 0.1621  m1_loss_dice_8: 1.347  m2_loss_ce: 0.4779  m2_loss_mask: 0.1568  m2_loss_dice: 1.348  m2_loss_ce_0: 0.625  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.529  m2_loss_ce_1: 0.6389  m2_loss_mask_1: 0.1718  m2_loss_dice_1: 1.488  m2_loss_ce_2: 0.5887  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.388  m2_loss_ce_3: 0.5341  m2_loss_mask_3: 0.1621  m2_loss_dice_3: 1.363  m2_loss_ce_4: 0.5317  m2_loss_mask_4: 0.1618  m2_loss_dice_4: 1.36  m2_loss_ce_5: 0.5296  m2_loss_mask_5: 0.159  m2_loss_dice_5: 1.348  m2_loss_ce_6: 0.4959  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.312  m2_loss_ce_7: 0.49  m2_loss_mask_7: 0.1567  m2_loss_dice_7: 1.316  m2_loss_ce_8: 0.4999  m2_loss_mask_8: 0.1588  m2_loss_dice_8: 1.314    time: 1.4704  last_time: 1.4393  data_time: 0.0538  last_data_time: 0.0606   lr: 0.0001  max_mem: 34051M
[10/06 11:27:26] d2.utils.events INFO:  eta: 0:22:37  iter: 79  total_loss: 39.79  m1_loss_ce: 0.4791  m1_loss_mask: 0.1666  m1_loss_dice: 1.169  m1_loss_ce_0: 0.5803  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6356  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.609  m1_loss_mask_2: 0.1651  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5431  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.23  m1_loss_ce_4: 0.5272  m1_loss_mask_4: 0.174  m1_loss_dice_4: 1.191  m1_loss_ce_5: 0.4946  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.5006  m1_loss_mask_6: 0.1673  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.4698  m1_loss_mask_7: 0.1684  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.4932  m1_loss_mask_8: 0.1679  m1_loss_dice_8: 1.224  m2_loss_ce: 0.4842  m2_loss_mask: 0.1648  m2_loss_dice: 1.173  m2_loss_ce_0: 0.5979  m2_loss_mask_0: 0.1882  m2_loss_dice_0: 1.376  m2_loss_ce_1: 0.6188  m2_loss_mask_1: 0.1748  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.6074  m2_loss_mask_2: 0.1644  m2_loss_dice_2: 1.259  m2_loss_ce_3: 0.5214  m2_loss_mask_3: 0.1628  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.5247  m2_loss_mask_4: 0.1639  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.5271  m2_loss_mask_5: 0.1641  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4998  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.181  m2_loss_ce_7: 0.4783  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.159  m2_loss_ce_8: 0.5029  m2_loss_mask_8: 0.1638  m2_loss_dice_8: 1.179    time: 1.4641  last_time: 1.3863  data_time: 0.0609  last_data_time: 0.0375   lr: 0.0001  max_mem: 34051M
[10/06 11:27:55] d2.utils.events INFO:  eta: 0:22:07  iter: 99  total_loss: 41.96  m1_loss_ce: 0.5131  m1_loss_mask: 0.1717  m1_loss_dice: 1.315  m1_loss_ce_0: 0.5676  m1_loss_mask_0: 0.1966  m1_loss_dice_0: 1.512  m1_loss_ce_1: 0.6293  m1_loss_mask_1: 0.1813  m1_loss_dice_1: 1.453  m1_loss_ce_2: 0.556  m1_loss_mask_2: 0.1777  m1_loss_dice_2: 1.409  m1_loss_ce_3: 0.5459  m1_loss_mask_3: 0.1787  m1_loss_dice_3: 1.357  m1_loss_ce_4: 0.5284  m1_loss_mask_4: 0.1789  m1_loss_dice_4: 1.347  m1_loss_ce_5: 0.5072  m1_loss_mask_5: 0.1745  m1_loss_dice_5: 1.329  m1_loss_ce_6: 0.4892  m1_loss_mask_6: 0.1758  m1_loss_dice_6: 1.329  m1_loss_ce_7: 0.4977  m1_loss_mask_7: 0.1723  m1_loss_dice_7: 1.326  m1_loss_ce_8: 0.4565  m1_loss_mask_8: 0.1734  m1_loss_dice_8: 1.335  m2_loss_ce: 0.5007  m2_loss_mask: 0.1651  m2_loss_dice: 1.292  m2_loss_ce_0: 0.5941  m2_loss_mask_0: 0.1945  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6553  m2_loss_mask_1: 0.1777  m2_loss_dice_1: 1.44  m2_loss_ce_2: 0.6034  m2_loss_mask_2: 0.1714  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5646  m2_loss_mask_3: 0.1705  m2_loss_dice_3: 1.329  m2_loss_ce_4: 0.547  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.296  m2_loss_ce_5: 0.5348  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.5112  m2_loss_mask_6: 0.168  m2_loss_dice_6: 1.305  m2_loss_ce_7: 0.5202  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.5108  m2_loss_mask_8: 0.1686  m2_loss_dice_8: 1.284    time: 1.4617  last_time: 1.3234  data_time: 0.0519  last_data_time: 0.0497   lr: 0.0001  max_mem: 34051M
[10/06 11:28:25] d2.utils.events INFO:  eta: 0:21:37  iter: 119  total_loss: 41.48  m1_loss_ce: 0.5215  m1_loss_mask: 0.1732  m1_loss_dice: 1.254  m1_loss_ce_0: 0.6008  m1_loss_mask_0: 0.2043  m1_loss_dice_0: 1.461  m1_loss_ce_1: 0.6616  m1_loss_mask_1: 0.1805  m1_loss_dice_1: 1.444  m1_loss_ce_2: 0.6078  m1_loss_mask_2: 0.1748  m1_loss_dice_2: 1.321  m1_loss_ce_3: 0.5546  m1_loss_mask_3: 0.1771  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.5529  m1_loss_mask_4: 0.1736  m1_loss_dice_4: 1.288  m1_loss_ce_5: 0.5185  m1_loss_mask_5: 0.1729  m1_loss_dice_5: 1.297  m1_loss_ce_6: 0.5371  m1_loss_mask_6: 0.1732  m1_loss_dice_6: 1.262  m1_loss_ce_7: 0.5207  m1_loss_mask_7: 0.1728  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.5244  m1_loss_mask_8: 0.1717  m1_loss_dice_8: 1.256  m2_loss_ce: 0.5014  m2_loss_mask: 0.1738  m2_loss_dice: 1.267  m2_loss_ce_0: 0.6316  m2_loss_mask_0: 0.2078  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6389  m2_loss_mask_1: 0.1825  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6152  m2_loss_mask_2: 0.1751  m2_loss_dice_2: 1.355  m2_loss_ce_3: 0.5637  m2_loss_mask_3: 0.1771  m2_loss_dice_3: 1.335  m2_loss_ce_4: 0.545  m2_loss_mask_4: 0.1756  m2_loss_dice_4: 1.311  m2_loss_ce_5: 0.5264  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.5185  m2_loss_mask_6: 0.1743  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.533  m2_loss_mask_7: 0.1757  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.5275  m2_loss_mask_8: 0.174  m2_loss_dice_8: 1.264    time: 1.4628  last_time: 1.6318  data_time: 0.0596  last_data_time: 0.1622   lr: 0.0001  max_mem: 34051M
[10/06 11:28:55] d2.utils.events INFO:  eta: 0:21:11  iter: 139  total_loss: 40.1  m1_loss_ce: 0.4734  m1_loss_mask: 0.1626  m1_loss_dice: 1.286  m1_loss_ce_0: 0.557  m1_loss_mask_0: 0.1837  m1_loss_dice_0: 1.476  m1_loss_ce_1: 0.6438  m1_loss_mask_1: 0.1726  m1_loss_dice_1: 1.396  m1_loss_ce_2: 0.5951  m1_loss_mask_2: 0.1625  m1_loss_dice_2: 1.343  m1_loss_ce_3: 0.5026  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.31  m1_loss_ce_4: 0.506  m1_loss_mask_4: 0.1629  m1_loss_dice_4: 1.285  m1_loss_ce_5: 0.4795  m1_loss_mask_5: 0.162  m1_loss_dice_5: 1.279  m1_loss_ce_6: 0.4806  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.266  m1_loss_ce_7: 0.4393  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.266  m1_loss_ce_8: 0.4604  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.277  m2_loss_ce: 0.484  m2_loss_mask: 0.1566  m2_loss_dice: 1.266  m2_loss_ce_0: 0.5995  m2_loss_mask_0: 0.1806  m2_loss_dice_0: 1.531  m2_loss_ce_1: 0.627  m2_loss_mask_1: 0.1666  m2_loss_dice_1: 1.442  m2_loss_ce_2: 0.5822  m2_loss_mask_2: 0.1605  m2_loss_dice_2: 1.362  m2_loss_ce_3: 0.5551  m2_loss_mask_3: 0.1591  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5001  m2_loss_mask_4: 0.1601  m2_loss_dice_4: 1.287  m2_loss_ce_5: 0.5305  m2_loss_mask_5: 0.159  m2_loss_dice_5: 1.308  m2_loss_ce_6: 0.4901  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.4891  m2_loss_mask_7: 0.1582  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.4954  m2_loss_mask_8: 0.1588  m2_loss_dice_8: 1.265    time: 1.4707  last_time: 1.5332  data_time: 0.0530  last_data_time: 0.0461   lr: 0.0001  max_mem: 34618M
[10/06 11:29:24] d2.utils.events INFO:  eta: 0:20:39  iter: 159  total_loss: 38.89  m1_loss_ce: 0.4542  m1_loss_mask: 0.1785  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5658  m1_loss_mask_0: 0.2116  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6061  m1_loss_mask_1: 0.1953  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.5785  m1_loss_mask_2: 0.1912  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.4981  m1_loss_mask_3: 0.188  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4827  m1_loss_mask_4: 0.183  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.4734  m1_loss_mask_5: 0.1801  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.4601  m1_loss_mask_6: 0.1813  m1_loss_dice_6: 1.19  m1_loss_ce_7: 0.4691  m1_loss_mask_7: 0.1818  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.449  m1_loss_mask_8: 0.1816  m1_loss_dice_8: 1.183  m2_loss_ce: 0.4676  m2_loss_mask: 0.1747  m2_loss_dice: 1.194  m2_loss_ce_0: 0.5674  m2_loss_mask_0: 0.2091  m2_loss_dice_0: 1.447  m2_loss_ce_1: 0.6209  m2_loss_mask_1: 0.1931  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6006  m2_loss_mask_2: 0.1815  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.5011  m2_loss_mask_3: 0.175  m2_loss_dice_3: 1.229  m2_loss_ce_4: 0.5046  m2_loss_mask_4: 0.1787  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.4777  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4913  m2_loss_mask_6: 0.1735  m2_loss_dice_6: 1.207  m2_loss_ce_7: 0.4637  m2_loss_mask_7: 0.1752  m2_loss_dice_7: 1.207  m2_loss_ce_8: 0.4586  m2_loss_mask_8: 0.1757  m2_loss_dice_8: 1.19    time: 1.4640  last_time: 1.5214  data_time: 0.0613  last_data_time: 0.0945   lr: 0.0001  max_mem: 34618M
[10/06 11:29:53] d2.utils.events INFO:  eta: 0:20:10  iter: 179  total_loss: 38.23  m1_loss_ce: 0.4366  m1_loss_mask: 0.1583  m1_loss_dice: 1.183  m1_loss_ce_0: 0.6001  m1_loss_mask_0: 0.1852  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.5995  m1_loss_mask_1: 0.174  m1_loss_dice_1: 1.253  m1_loss_ce_2: 0.553  m1_loss_mask_2: 0.1641  m1_loss_dice_2: 1.251  m1_loss_ce_3: 0.5065  m1_loss_mask_3: 0.16  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.4831  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4633  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.4593  m1_loss_mask_6: 0.1598  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.436  m1_loss_mask_7: 0.1563  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.4418  m1_loss_mask_8: 0.1562  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4703  m2_loss_mask: 0.1668  m2_loss_dice: 1.169  m2_loss_ce_0: 0.5979  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.398  m2_loss_ce_1: 0.6196  m2_loss_mask_1: 0.1713  m2_loss_dice_1: 1.278  m2_loss_ce_2: 0.5767  m2_loss_mask_2: 0.161  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.4964  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.195  m2_loss_ce_4: 0.5247  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.201  m2_loss_ce_5: 0.4582  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.188  m2_loss_ce_6: 0.4981  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.158  m2_loss_ce_7: 0.483  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.161  m2_loss_ce_8: 0.4628  m2_loss_mask_8: 0.1664  m2_loss_dice_8: 1.193    time: 1.4651  last_time: 1.3854  data_time: 0.0531  last_data_time: 0.0384   lr: 0.0001  max_mem: 34618M
[10/06 11:30:23] d2.utils.events INFO:  eta: 0:19:41  iter: 199  total_loss: 40.64  m1_loss_ce: 0.4951  m1_loss_mask: 0.1795  m1_loss_dice: 1.222  m1_loss_ce_0: 0.5914  m1_loss_mask_0: 0.206  m1_loss_dice_0: 1.508  m1_loss_ce_1: 0.5979  m1_loss_mask_1: 0.1887  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.5755  m1_loss_mask_2: 0.1823  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.4937  m1_loss_mask_3: 0.1802  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.4983  m1_loss_mask_4: 0.1785  m1_loss_dice_4: 1.307  m1_loss_ce_5: 0.4883  m1_loss_mask_5: 0.1771  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4822  m1_loss_mask_6: 0.1773  m1_loss_dice_6: 1.298  m1_loss_ce_7: 0.4824  m1_loss_mask_7: 0.1819  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.4875  m1_loss_mask_8: 0.1796  m1_loss_dice_8: 1.283  m2_loss_ce: 0.487  m2_loss_mask: 0.1806  m2_loss_dice: 1.242  m2_loss_ce_0: 0.5663  m2_loss_mask_0: 0.2092  m2_loss_dice_0: 1.51  m2_loss_ce_1: 0.5959  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.436  m2_loss_ce_2: 0.5779  m2_loss_mask_2: 0.1828  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.5166  m2_loss_mask_3: 0.1799  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.4919  m2_loss_mask_4: 0.1831  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.4843  m2_loss_mask_5: 0.1825  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4703  m2_loss_mask_6: 0.1819  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.4832  m2_loss_mask_7: 0.1786  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.4757  m2_loss_mask_8: 0.1799  m2_loss_dice_8: 1.218    time: 1.4662  last_time: 1.5487  data_time: 0.0568  last_data_time: 0.0438   lr: 0.0001  max_mem: 34618M
[10/06 11:30:52] d2.utils.events INFO:  eta: 0:19:12  iter: 219  total_loss: 38.42  m1_loss_ce: 0.4869  m1_loss_mask: 0.1765  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5991  m1_loss_mask_0: 0.2028  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.6194  m1_loss_mask_1: 0.1819  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5822  m1_loss_mask_2: 0.1754  m1_loss_dice_2: 1.259  m1_loss_ce_3: 0.5405  m1_loss_mask_3: 0.1747  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.5237  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.4842  m1_loss_mask_5: 0.1725  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4803  m1_loss_mask_6: 0.1736  m1_loss_dice_6: 1.193  m1_loss_ce_7: 0.4568  m1_loss_mask_7: 0.1744  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4952  m1_loss_mask_8: 0.1749  m1_loss_dice_8: 1.2  m2_loss_ce: 0.4838  m2_loss_mask: 0.1696  m2_loss_dice: 1.191  m2_loss_ce_0: 0.558  m2_loss_mask_0: 0.2077  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6234  m2_loss_mask_1: 0.1837  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.5889  m2_loss_mask_2: 0.1764  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5443  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5149  m2_loss_mask_4: 0.1712  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.5153  m2_loss_mask_5: 0.1711  m2_loss_dice_5: 1.206  m2_loss_ce_6: 0.4896  m2_loss_mask_6: 0.1718  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.4998  m2_loss_mask_7: 0.1708  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.4836  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.195    time: 1.4669  last_time: 1.5603  data_time: 0.0532  last_data_time: 0.0461   lr: 0.0001  max_mem: 34618M
[10/06 11:31:22] d2.utils.events INFO:  eta: 0:18:44  iter: 239  total_loss: 40.09  m1_loss_ce: 0.4947  m1_loss_mask: 0.1794  m1_loss_dice: 1.223  m1_loss_ce_0: 0.5967  m1_loss_mask_0: 0.2049  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.6509  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.5856  m1_loss_mask_2: 0.1787  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.5714  m1_loss_mask_3: 0.1795  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5005  m1_loss_mask_4: 0.1794  m1_loss_dice_4: 1.263  m1_loss_ce_5: 0.5224  m1_loss_mask_5: 0.177  m1_loss_dice_5: 1.246  m1_loss_ce_6: 0.5134  m1_loss_mask_6: 0.1789  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.512  m1_loss_mask_7: 0.18  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4992  m1_loss_mask_8: 0.1793  m1_loss_dice_8: 1.186  m2_loss_ce: 0.5043  m2_loss_mask: 0.1736  m2_loss_dice: 1.203  m2_loss_ce_0: 0.6175  m2_loss_mask_0: 0.2045  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6706  m2_loss_mask_1: 0.1865  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6311  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5587  m2_loss_mask_3: 0.1715  m2_loss_dice_3: 1.208  m2_loss_ce_4: 0.5451  m2_loss_mask_4: 0.1736  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.5453  m2_loss_mask_5: 0.1733  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5474  m2_loss_mask_6: 0.1687  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.5284  m2_loss_mask_7: 0.1739  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.5283  m2_loss_mask_8: 0.1685  m2_loss_dice_8: 1.179    time: 1.4683  last_time: 1.5694  data_time: 0.0533  last_data_time: 0.0409   lr: 0.0001  max_mem: 34618M
[10/06 11:31:52] d2.utils.events INFO:  eta: 0:18:14  iter: 259  total_loss: 41.63  m1_loss_ce: 0.5465  m1_loss_mask: 0.1695  m1_loss_dice: 1.303  m1_loss_ce_0: 0.5887  m1_loss_mask_0: 0.1958  m1_loss_dice_0: 1.56  m1_loss_ce_1: 0.6576  m1_loss_mask_1: 0.1764  m1_loss_dice_1: 1.447  m1_loss_ce_2: 0.5981  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.418  m1_loss_ce_3: 0.5717  m1_loss_mask_3: 0.1739  m1_loss_dice_3: 1.337  m1_loss_ce_4: 0.5449  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.339  m1_loss_ce_5: 0.5456  m1_loss_mask_5: 0.1687  m1_loss_dice_5: 1.319  m1_loss_ce_6: 0.5299  m1_loss_mask_6: 0.1697  m1_loss_dice_6: 1.333  m1_loss_ce_7: 0.4871  m1_loss_mask_7: 0.1682  m1_loss_dice_7: 1.308  m1_loss_ce_8: 0.5205  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.289  m2_loss_ce: 0.5163  m2_loss_mask: 0.1634  m2_loss_dice: 1.269  m2_loss_ce_0: 0.583  m2_loss_mask_0: 0.1906  m2_loss_dice_0: 1.591  m2_loss_ce_1: 0.6908  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.449  m2_loss_ce_2: 0.6282  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.361  m2_loss_ce_3: 0.5699  m2_loss_mask_3: 0.1685  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5558  m2_loss_mask_4: 0.166  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.5432  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.312  m2_loss_ce_6: 0.5096  m2_loss_mask_6: 0.1641  m2_loss_dice_6: 1.316  m2_loss_ce_7: 0.512  m2_loss_mask_7: 0.1641  m2_loss_dice_7: 1.27  m2_loss_ce_8: 0.4847  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.289    time: 1.4684  last_time: 1.4783  data_time: 0.0625  last_data_time: 0.0653   lr: 0.0001  max_mem: 34618M
[10/06 11:32:21] d2.utils.events INFO:  eta: 0:17:45  iter: 279  total_loss: 40.48  m1_loss_ce: 0.4929  m1_loss_mask: 0.1682  m1_loss_dice: 1.279  m1_loss_ce_0: 0.56  m1_loss_mask_0: 0.1982  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.628  m1_loss_mask_1: 0.187  m1_loss_dice_1: 1.417  m1_loss_ce_2: 0.5693  m1_loss_mask_2: 0.1745  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5006  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.4965  m1_loss_mask_4: 0.1698  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5088  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.5001  m1_loss_mask_6: 0.165  m1_loss_dice_6: 1.279  m1_loss_ce_7: 0.4706  m1_loss_mask_7: 0.1664  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4539  m1_loss_mask_8: 0.1681  m1_loss_dice_8: 1.253  m2_loss_ce: 0.4831  m2_loss_mask: 0.1613  m2_loss_dice: 1.274  m2_loss_ce_0: 0.5882  m2_loss_mask_0: 0.193  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6582  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.423  m2_loss_ce_2: 0.6303  m2_loss_mask_2: 0.1658  m2_loss_dice_2: 1.302  m2_loss_ce_3: 0.5494  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.5317  m2_loss_mask_4: 0.1669  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.5206  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.303  m2_loss_ce_6: 0.4958  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.4741  m2_loss_mask_7: 0.1644  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.5009  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.234    time: 1.4697  last_time: 1.5513  data_time: 0.0533  last_data_time: 0.0488   lr: 0.0001  max_mem: 34618M
[10/06 11:32:51] d2.utils.events INFO:  eta: 0:17:16  iter: 299  total_loss: 38.9  m1_loss_ce: 0.4723  m1_loss_mask: 0.1865  m1_loss_dice: 1.216  m1_loss_ce_0: 0.6069  m1_loss_mask_0: 0.2154  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.6441  m1_loss_mask_1: 0.2022  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.5667  m1_loss_mask_2: 0.1874  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.5438  m1_loss_mask_3: 0.1861  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.5326  m1_loss_mask_4: 0.1869  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.523  m1_loss_mask_5: 0.1839  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4837  m1_loss_mask_6: 0.1846  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.4634  m1_loss_mask_7: 0.1853  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.5042  m1_loss_mask_8: 0.184  m1_loss_dice_8: 1.194  m2_loss_ce: 0.5164  m2_loss_mask: 0.1747  m2_loss_dice: 1.186  m2_loss_ce_0: 0.6202  m2_loss_mask_0: 0.2115  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6485  m2_loss_mask_1: 0.1832  m2_loss_dice_1: 1.311  m2_loss_ce_2: 0.597  m2_loss_mask_2: 0.1784  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5408  m2_loss_mask_3: 0.1765  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5223  m2_loss_mask_4: 0.1797  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.5159  m2_loss_mask_5: 0.1772  m2_loss_dice_5: 1.219  m2_loss_ce_6: 0.4991  m2_loss_mask_6: 0.1773  m2_loss_dice_6: 1.192  m2_loss_ce_7: 0.4887  m2_loss_mask_7: 0.1733  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.4945  m2_loss_mask_8: 0.1737  m2_loss_dice_8: 1.213    time: 1.4707  last_time: 1.5357  data_time: 0.0618  last_data_time: 0.0557   lr: 0.0001  max_mem: 34736M
[10/06 11:33:20] d2.utils.events INFO:  eta: 0:16:45  iter: 319  total_loss: 39.59  m1_loss_ce: 0.455  m1_loss_mask: 0.1678  m1_loss_dice: 1.249  m1_loss_ce_0: 0.5531  m1_loss_mask_0: 0.1983  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.6209  m1_loss_mask_1: 0.1824  m1_loss_dice_1: 1.366  m1_loss_ce_2: 0.5801  m1_loss_mask_2: 0.1734  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.5214  m1_loss_mask_3: 0.1755  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.4751  m1_loss_mask_4: 0.1716  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5059  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.4692  m1_loss_mask_6: 0.1696  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4757  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.4417  m1_loss_mask_8: 0.1666  m1_loss_dice_8: 1.233  m2_loss_ce: 0.4898  m2_loss_mask: 0.1694  m2_loss_dice: 1.207  m2_loss_ce_0: 0.5969  m2_loss_mask_0: 0.1945  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6261  m2_loss_mask_1: 0.1748  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5863  m2_loss_mask_2: 0.1672  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5452  m2_loss_mask_3: 0.1676  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5222  m2_loss_mask_4: 0.1714  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.5047  m2_loss_mask_5: 0.1718  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5047  m2_loss_mask_6: 0.1702  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4719  m2_loss_mask_7: 0.172  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4852  m2_loss_mask_8: 0.1691  m2_loss_dice_8: 1.252    time: 1.4686  last_time: 1.2960  data_time: 0.0679  last_data_time: 0.0457   lr: 0.0001  max_mem: 34736M
[10/06 11:33:49] d2.utils.events INFO:  eta: 0:16:15  iter: 339  total_loss: 41.98  m1_loss_ce: 0.4981  m1_loss_mask: 0.1682  m1_loss_dice: 1.283  m1_loss_ce_0: 0.5924  m1_loss_mask_0: 0.2066  m1_loss_dice_0: 1.539  m1_loss_ce_1: 0.6558  m1_loss_mask_1: 0.1905  m1_loss_dice_1: 1.419  m1_loss_ce_2: 0.6215  m1_loss_mask_2: 0.1752  m1_loss_dice_2: 1.381  m1_loss_ce_3: 0.5747  m1_loss_mask_3: 0.1724  m1_loss_dice_3: 1.312  m1_loss_ce_4: 0.5485  m1_loss_mask_4: 0.1703  m1_loss_dice_4: 1.32  m1_loss_ce_5: 0.5655  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.323  m1_loss_ce_6: 0.4958  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.312  m1_loss_ce_7: 0.5103  m1_loss_mask_7: 0.1687  m1_loss_dice_7: 1.305  m1_loss_ce_8: 0.4875  m1_loss_mask_8: 0.1687  m1_loss_dice_8: 1.316  m2_loss_ce: 0.5301  m2_loss_mask: 0.1694  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6482  m2_loss_mask_0: 0.2056  m2_loss_dice_0: 1.554  m2_loss_ce_1: 0.6772  m2_loss_mask_1: 0.1879  m2_loss_dice_1: 1.476  m2_loss_ce_2: 0.6146  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.397  m2_loss_ce_3: 0.5824  m2_loss_mask_3: 0.1729  m2_loss_dice_3: 1.342  m2_loss_ce_4: 0.5559  m2_loss_mask_4: 0.1747  m2_loss_dice_4: 1.314  m2_loss_ce_5: 0.5426  m2_loss_mask_5: 0.174  m2_loss_dice_5: 1.317  m2_loss_ce_6: 0.5401  m2_loss_mask_6: 0.171  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5439  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.299  m2_loss_ce_8: 0.5408  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.304    time: 1.4683  last_time: 1.3445  data_time: 0.0607  last_data_time: 0.0374   lr: 0.0001  max_mem: 34736M
[10/06 11:34:19] d2.utils.events INFO:  eta: 0:15:46  iter: 359  total_loss: 38.26  m1_loss_ce: 0.4522  m1_loss_mask: 0.1617  m1_loss_dice: 1.217  m1_loss_ce_0: 0.5591  m1_loss_mask_0: 0.1893  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.5867  m1_loss_mask_1: 0.1723  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.5872  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.4884  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4695  m1_loss_mask_4: 0.1652  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.4987  m1_loss_mask_5: 0.1634  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.4671  m1_loss_mask_6: 0.1664  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.4548  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.4475  m1_loss_mask_8: 0.1637  m1_loss_dice_8: 1.19  m2_loss_ce: 0.4644  m2_loss_mask: 0.1609  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5664  m2_loss_mask_0: 0.1895  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6305  m2_loss_mask_1: 0.1743  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.5823  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.26  m2_loss_ce_3: 0.4883  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.228  m2_loss_ce_4: 0.4844  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.4905  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.204  m2_loss_ce_6: 0.4769  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4505  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.478  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.186    time: 1.4691  last_time: 1.5502  data_time: 0.0645  last_data_time: 0.0990   lr: 0.0001  max_mem: 34736M
[10/06 11:34:49] d2.utils.events INFO:  eta: 0:15:16  iter: 379  total_loss: 38.23  m1_loss_ce: 0.4469  m1_loss_mask: 0.172  m1_loss_dice: 1.154  m1_loss_ce_0: 0.5696  m1_loss_mask_0: 0.2032  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.638  m1_loss_mask_1: 0.1848  m1_loss_dice_1: 1.286  m1_loss_ce_2: 0.5912  m1_loss_mask_2: 0.1805  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.5033  m1_loss_mask_3: 0.1767  m1_loss_dice_3: 1.173  m1_loss_ce_4: 0.4926  m1_loss_mask_4: 0.1745  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.5041  m1_loss_mask_5: 0.1739  m1_loss_dice_5: 1.183  m1_loss_ce_6: 0.4516  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4294  m1_loss_mask_7: 0.1755  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.4569  m1_loss_mask_8: 0.1717  m1_loss_dice_8: 1.178  m2_loss_ce: 0.4746  m2_loss_mask: 0.1683  m2_loss_dice: 1.212  m2_loss_ce_0: 0.5928  m2_loss_mask_0: 0.2065  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.6533  m2_loss_mask_1: 0.1839  m2_loss_dice_1: 1.328  m2_loss_ce_2: 0.577  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.5307  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.198  m2_loss_ce_4: 0.5136  m2_loss_mask_4: 0.178  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.5141  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.4998  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.167  m2_loss_ce_7: 0.4834  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.4819  m2_loss_mask_8: 0.169  m2_loss_dice_8: 1.13    time: 1.4696  last_time: 1.3955  data_time: 0.0533  last_data_time: 0.0702   lr: 0.0001  max_mem: 34736M
[10/06 11:35:18] d2.utils.events INFO:  eta: 0:14:47  iter: 399  total_loss: 39.75  m1_loss_ce: 0.4442  m1_loss_mask: 0.16  m1_loss_dice: 1.204  m1_loss_ce_0: 0.5629  m1_loss_mask_0: 0.1887  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6261  m1_loss_mask_1: 0.1709  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5906  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.5225  m1_loss_mask_3: 0.1632  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.4613  m1_loss_mask_4: 0.1645  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.463  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4578  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.4266  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4414  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.2  m2_loss_ce: 0.4934  m2_loss_mask: 0.1596  m2_loss_dice: 1.23  m2_loss_ce_0: 0.5967  m2_loss_mask_0: 0.1879  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6621  m2_loss_mask_1: 0.1663  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5877  m2_loss_mask_2: 0.1609  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5132  m2_loss_mask_3: 0.1618  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.5072  m2_loss_mask_4: 0.1621  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5345  m2_loss_mask_5: 0.1627  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.4576  m2_loss_mask_6: 0.1597  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.4824  m2_loss_mask_7: 0.1589  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4773  m2_loss_mask_8: 0.1578  m2_loss_dice_8: 1.225    time: 1.4698  last_time: 1.5909  data_time: 0.0514  last_data_time: 0.1231   lr: 0.0001  max_mem: 34736M
[10/06 11:35:49] d2.utils.events INFO:  eta: 0:14:18  iter: 419  total_loss: 39.49  m1_loss_ce: 0.4349  m1_loss_mask: 0.1621  m1_loss_dice: 1.254  m1_loss_ce_0: 0.551  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.625  m1_loss_mask_1: 0.1721  m1_loss_dice_1: 1.383  m1_loss_ce_2: 0.5883  m1_loss_mask_2: 0.1625  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.5176  m1_loss_mask_3: 0.1611  m1_loss_dice_3: 1.265  m1_loss_ce_4: 0.4984  m1_loss_mask_4: 0.1592  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.488  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4794  m1_loss_mask_6: 0.1611  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.4581  m1_loss_mask_7: 0.1609  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.438  m1_loss_mask_8: 0.1607  m1_loss_dice_8: 1.273  m2_loss_ce: 0.5159  m2_loss_mask: 0.1592  m2_loss_dice: 1.227  m2_loss_ce_0: 0.603  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6794  m2_loss_mask_1: 0.1753  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.5931  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5549  m2_loss_mask_3: 0.1629  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5125  m2_loss_mask_4: 0.1649  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.5237  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4915  m2_loss_mask_6: 0.1611  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.4873  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.5057  m2_loss_mask_8: 0.1582  m2_loss_dice_8: 1.24    time: 1.4713  last_time: 1.3897  data_time: 0.0558  last_data_time: 0.0454   lr: 0.0001  max_mem: 34736M
[10/06 11:36:18] d2.utils.events INFO:  eta: 0:13:49  iter: 439  total_loss: 39.16  m1_loss_ce: 0.4067  m1_loss_mask: 0.1647  m1_loss_dice: 1.179  m1_loss_ce_0: 0.5132  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.6076  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.305  m1_loss_ce_2: 0.568  m1_loss_mask_2: 0.1674  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.4743  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4917  m1_loss_mask_4: 0.1627  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.4442  m1_loss_mask_5: 0.1623  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.4166  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.407  m1_loss_mask_7: 0.1581  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4237  m1_loss_mask_8: 0.1589  m1_loss_dice_8: 1.182  m2_loss_ce: 0.5026  m2_loss_mask: 0.1712  m2_loss_dice: 1.207  m2_loss_ce_0: 0.5997  m2_loss_mask_0: 0.2046  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6502  m2_loss_mask_1: 0.1842  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.5758  m2_loss_mask_2: 0.1759  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.5197  m2_loss_mask_3: 0.1751  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.4998  m2_loss_mask_4: 0.1752  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.5047  m2_loss_mask_5: 0.1741  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.478  m2_loss_mask_6: 0.1732  m2_loss_dice_6: 1.219  m2_loss_ce_7: 0.467  m2_loss_mask_7: 0.1723  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4845  m2_loss_mask_8: 0.1707  m2_loss_dice_8: 1.211    time: 1.4721  last_time: 1.5063  data_time: 0.0526  last_data_time: 0.0431   lr: 0.0001  max_mem: 34736M
[10/06 11:36:48] d2.utils.events INFO:  eta: 0:13:19  iter: 459  total_loss: 40.06  m1_loss_ce: 0.4413  m1_loss_mask: 0.1643  m1_loss_dice: 1.262  m1_loss_ce_0: 0.5398  m1_loss_mask_0: 0.181  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.5852  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.5543  m1_loss_mask_2: 0.1674  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.4667  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.4838  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.289  m1_loss_ce_5: 0.4594  m1_loss_mask_5: 0.1668  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.4449  m1_loss_mask_6: 0.1648  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.4317  m1_loss_mask_7: 0.1641  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4215  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.226  m2_loss_ce: 0.5023  m2_loss_mask: 0.1642  m2_loss_dice: 1.236  m2_loss_ce_0: 0.5801  m2_loss_mask_0: 0.1904  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.6723  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.5917  m2_loss_mask_2: 0.1631  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.574  m2_loss_mask_3: 0.1674  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5235  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.522  m2_loss_mask_5: 0.1628  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.4915  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.5226  m2_loss_mask_7: 0.1626  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.4828  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.265    time: 1.4716  last_time: 1.4581  data_time: 0.0584  last_data_time: 0.0406   lr: 0.0001  max_mem: 34736M
[10/06 11:37:18] d2.utils.events INFO:  eta: 0:12:49  iter: 479  total_loss: 38.4  m1_loss_ce: 0.4078  m1_loss_mask: 0.1614  m1_loss_dice: 1.177  m1_loss_ce_0: 0.5209  m1_loss_mask_0: 0.1944  m1_loss_dice_0: 1.361  m1_loss_ce_1: 0.5785  m1_loss_mask_1: 0.1706  m1_loss_dice_1: 1.283  m1_loss_ce_2: 0.5157  m1_loss_mask_2: 0.1681  m1_loss_dice_2: 1.234  m1_loss_ce_3: 0.4695  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.188  m1_loss_ce_4: 0.4448  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.198  m1_loss_ce_5: 0.4451  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.19  m1_loss_ce_6: 0.4225  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.3991  m1_loss_mask_7: 0.1637  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.4339  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.171  m2_loss_ce: 0.4422  m2_loss_mask: 0.1671  m2_loss_dice: 1.198  m2_loss_ce_0: 0.5837  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.395  m2_loss_ce_1: 0.6059  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.5696  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.255  m2_loss_ce_3: 0.5035  m2_loss_mask_3: 0.1704  m2_loss_dice_3: 1.212  m2_loss_ce_4: 0.4852  m2_loss_mask_4: 0.1717  m2_loss_dice_4: 1.219  m2_loss_ce_5: 0.4737  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.5114  m2_loss_mask_6: 0.1673  m2_loss_dice_6: 1.18  m2_loss_ce_7: 0.4774  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.4619  m2_loss_mask_8: 0.1679  m2_loss_dice_8: 1.184    time: 1.4725  last_time: 1.5260  data_time: 0.0631  last_data_time: 0.0797   lr: 0.0001  max_mem: 34736M
[10/06 11:37:48] d2.utils.events INFO:  eta: 0:12:20  iter: 499  total_loss: 40.34  m1_loss_ce: 0.4524  m1_loss_mask: 0.1622  m1_loss_dice: 1.223  m1_loss_ce_0: 0.578  m1_loss_mask_0: 0.1771  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.6303  m1_loss_mask_1: 0.1688  m1_loss_dice_1: 1.381  m1_loss_ce_2: 0.556  m1_loss_mask_2: 0.1619  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5154  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.4875  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4875  m1_loss_mask_5: 0.1613  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4741  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4584  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4562  m1_loss_mask_8: 0.1571  m1_loss_dice_8: 1.223  m2_loss_ce: 0.5064  m2_loss_mask: 0.1592  m2_loss_dice: 1.203  m2_loss_ce_0: 0.6032  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.6576  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.5732  m2_loss_mask_2: 0.1655  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.5498  m2_loss_mask_3: 0.1609  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5294  m2_loss_mask_4: 0.1621  m2_loss_dice_4: 1.253  m2_loss_ce_5: 0.5058  m2_loss_mask_5: 0.1602  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.5021  m2_loss_mask_6: 0.1612  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5271  m2_loss_mask_7: 0.1596  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4788  m2_loss_mask_8: 0.1588  m2_loss_dice_8: 1.238    time: 1.4732  last_time: 1.5203  data_time: 0.0527  last_data_time: 0.0554   lr: 0.0001  max_mem: 34736M
[10/06 11:38:17] d2.utils.events INFO:  eta: 0:11:50  iter: 519  total_loss: 40.03  m1_loss_ce: 0.4865  m1_loss_mask: 0.1611  m1_loss_dice: 1.204  m1_loss_ce_0: 0.5745  m1_loss_mask_0: 0.1845  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6343  m1_loss_mask_1: 0.1691  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5614  m1_loss_mask_2: 0.1609  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.5399  m1_loss_mask_3: 0.1617  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.4925  m1_loss_mask_4: 0.1588  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.5236  m1_loss_mask_5: 0.1593  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.4799  m1_loss_mask_6: 0.1577  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.4949  m1_loss_mask_7: 0.1582  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.484  m1_loss_mask_8: 0.1592  m1_loss_dice_8: 1.175  m2_loss_ce: 0.5258  m2_loss_mask: 0.1573  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6177  m2_loss_mask_0: 0.1896  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6377  m2_loss_mask_1: 0.1657  m2_loss_dice_1: 1.315  m2_loss_ce_2: 0.6031  m2_loss_mask_2: 0.1596  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.5521  m2_loss_mask_3: 0.1574  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5538  m2_loss_mask_4: 0.1605  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5462  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5133  m2_loss_mask_6: 0.1583  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5192  m2_loss_mask_7: 0.1579  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.5026  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.189    time: 1.4725  last_time: 1.4153  data_time: 0.0553  last_data_time: 0.0832   lr: 0.0001  max_mem: 34736M
[10/06 11:38:47] d2.utils.events INFO:  eta: 0:11:21  iter: 539  total_loss: 39.93  m1_loss_ce: 0.4524  m1_loss_mask: 0.1777  m1_loss_dice: 1.234  m1_loss_ce_0: 0.5449  m1_loss_mask_0: 0.2014  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.5697  m1_loss_mask_1: 0.1909  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.5425  m1_loss_mask_2: 0.1787  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.4996  m1_loss_mask_3: 0.179  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5075  m1_loss_mask_4: 0.1795  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.4804  m1_loss_mask_5: 0.1783  m1_loss_dice_5: 1.264  m1_loss_ce_6: 0.4542  m1_loss_mask_6: 0.1749  m1_loss_dice_6: 1.245  m1_loss_ce_7: 0.4605  m1_loss_mask_7: 0.1801  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.4654  m1_loss_mask_8: 0.1761  m1_loss_dice_8: 1.245  m2_loss_ce: 0.4855  m2_loss_mask: 0.1698  m2_loss_dice: 1.266  m2_loss_ce_0: 0.6222  m2_loss_mask_0: 0.2019  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6346  m2_loss_mask_1: 0.1944  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.5747  m2_loss_mask_2: 0.1758  m2_loss_dice_2: 1.359  m2_loss_ce_3: 0.5556  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.539  m2_loss_mask_4: 0.1752  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.52  m2_loss_mask_5: 0.1766  m2_loss_dice_5: 1.317  m2_loss_ce_6: 0.4976  m2_loss_mask_6: 0.1746  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4832  m2_loss_mask_7: 0.173  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.4737  m2_loss_mask_8: 0.1722  m2_loss_dice_8: 1.288    time: 1.4731  last_time: 1.3876  data_time: 0.0563  last_data_time: 0.0517   lr: 0.0001  max_mem: 34736M
[10/06 11:39:16] d2.utils.events INFO:  eta: 0:10:51  iter: 559  total_loss: 39.64  m1_loss_ce: 0.4198  m1_loss_mask: 0.1645  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5602  m1_loss_mask_0: 0.1887  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.612  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.5407  m1_loss_mask_2: 0.1682  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5149  m1_loss_mask_3: 0.169  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.485  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.4361  m1_loss_mask_5: 0.1688  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.426  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.4475  m1_loss_mask_7: 0.1634  m1_loss_dice_7: 1.239  m1_loss_ce_8: 0.4485  m1_loss_mask_8: 0.1659  m1_loss_dice_8: 1.274  m2_loss_ce: 0.4801  m2_loss_mask: 0.1701  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6206  m2_loss_mask_0: 0.1936  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6219  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.5951  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.321  m2_loss_ce_3: 0.531  m2_loss_mask_3: 0.1718  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5355  m2_loss_mask_4: 0.1763  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5136  m2_loss_mask_5: 0.1703  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5163  m2_loss_mask_6: 0.1706  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4851  m2_loss_mask_7: 0.1694  m2_loss_dice_7: 1.265  m2_loss_ce_8: 0.4866  m2_loss_mask_8: 0.171  m2_loss_dice_8: 1.24    time: 1.4729  last_time: 1.4756  data_time: 0.0683  last_data_time: 0.0451   lr: 0.0001  max_mem: 34736M
[10/06 11:39:46] d2.utils.events INFO:  eta: 0:10:22  iter: 579  total_loss: 40.25  m1_loss_ce: 0.5164  m1_loss_mask: 0.1566  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5865  m1_loss_mask_0: 0.1859  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.6637  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.366  m1_loss_ce_2: 0.5793  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5645  m1_loss_mask_3: 0.1613  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5254  m1_loss_mask_4: 0.1636  m1_loss_dice_4: 1.317  m1_loss_ce_5: 0.5136  m1_loss_mask_5: 0.1602  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.501  m1_loss_mask_6: 0.1576  m1_loss_dice_6: 1.266  m1_loss_ce_7: 0.4997  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4835  m1_loss_mask_8: 0.1566  m1_loss_dice_8: 1.253  m2_loss_ce: 0.5294  m2_loss_mask: 0.1592  m2_loss_dice: 1.266  m2_loss_ce_0: 0.6443  m2_loss_mask_0: 0.1973  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6561  m2_loss_mask_1: 0.1732  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.6636  m2_loss_mask_2: 0.1639  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5388  m2_loss_mask_3: 0.1621  m2_loss_dice_3: 1.323  m2_loss_ce_4: 0.5273  m2_loss_mask_4: 0.1606  m2_loss_dice_4: 1.302  m2_loss_ce_5: 0.5423  m2_loss_mask_5: 0.1602  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.547  m2_loss_mask_6: 0.1581  m2_loss_dice_6: 1.292  m2_loss_ce_7: 0.5292  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.29  m2_loss_ce_8: 0.5326  m2_loss_mask_8: 0.162  m2_loss_dice_8: 1.267    time: 1.4739  last_time: 1.4510  data_time: 0.0545  last_data_time: 0.0466   lr: 0.0001  max_mem: 34736M
[10/06 11:40:16] d2.utils.events INFO:  eta: 0:09:52  iter: 599  total_loss: 41.02  m1_loss_ce: 0.4781  m1_loss_mask: 0.1619  m1_loss_dice: 1.259  m1_loss_ce_0: 0.5911  m1_loss_mask_0: 0.1842  m1_loss_dice_0: 1.473  m1_loss_ce_1: 0.657  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.41  m1_loss_ce_2: 0.5907  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5677  m1_loss_mask_3: 0.1594  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.5151  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.519  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.5027  m1_loss_mask_6: 0.1674  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.4947  m1_loss_mask_7: 0.1615  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.4905  m1_loss_mask_8: 0.1622  m1_loss_dice_8: 1.284  m2_loss_ce: 0.5014  m2_loss_mask: 0.1604  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6013  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.523  m2_loss_ce_1: 0.6893  m2_loss_mask_1: 0.1716  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.6338  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.347  m2_loss_ce_3: 0.5728  m2_loss_mask_3: 0.164  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5654  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.33  m2_loss_ce_5: 0.5283  m2_loss_mask_5: 0.1619  m2_loss_dice_5: 1.305  m2_loss_ce_6: 0.5245  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5098  m2_loss_mask_7: 0.1596  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.5211  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.275    time: 1.4740  last_time: 1.5106  data_time: 0.0531  last_data_time: 0.0429   lr: 0.0001  max_mem: 34736M
[10/06 11:40:46] d2.utils.events INFO:  eta: 0:09:23  iter: 619  total_loss: 39.19  m1_loss_ce: 0.4736  m1_loss_mask: 0.1625  m1_loss_dice: 1.206  m1_loss_ce_0: 0.6014  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.6102  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.5875  m1_loss_mask_2: 0.1685  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5362  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.5366  m1_loss_mask_4: 0.1648  m1_loss_dice_4: 1.202  m1_loss_ce_5: 0.4851  m1_loss_mask_5: 0.1601  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4878  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.16  m1_loss_ce_7: 0.4868  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.4672  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4944  m2_loss_mask: 0.164  m2_loss_dice: 1.237  m2_loss_ce_0: 0.5936  m2_loss_mask_0: 0.1959  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.6408  m2_loss_mask_1: 0.1834  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.6211  m2_loss_mask_2: 0.1734  m2_loss_dice_2: 1.298  m2_loss_ce_3: 0.5584  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5202  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5162  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.5208  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.5005  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.476  m2_loss_mask_8: 0.1645  m2_loss_dice_8: 1.197    time: 1.4741  last_time: 1.4542  data_time: 0.0718  last_data_time: 0.0422   lr: 0.0001  max_mem: 34736M
[10/06 11:41:16] d2.utils.events INFO:  eta: 0:08:53  iter: 639  total_loss: 40.02  m1_loss_ce: 0.4673  m1_loss_mask: 0.1653  m1_loss_dice: 1.202  m1_loss_ce_0: 0.5396  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.5889  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5414  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.4863  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.465  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4752  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.4742  m1_loss_mask_6: 0.1666  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.476  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.4332  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.27  m2_loss_ce: 0.5023  m2_loss_mask: 0.1727  m2_loss_dice: 1.234  m2_loss_ce_0: 0.5985  m2_loss_mask_0: 0.1957  m2_loss_dice_0: 1.486  m2_loss_ce_1: 0.6371  m2_loss_mask_1: 0.182  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.6176  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5347  m2_loss_mask_3: 0.1711  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5124  m2_loss_mask_4: 0.1756  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.5375  m2_loss_mask_5: 0.176  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5128  m2_loss_mask_6: 0.1722  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.503  m2_loss_mask_7: 0.1706  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4928  m2_loss_mask_8: 0.1713  m2_loss_dice_8: 1.254    time: 1.4747  last_time: 1.5384  data_time: 0.0538  last_data_time: 0.0403   lr: 0.0001  max_mem: 34736M
[10/06 11:41:46] d2.utils.events INFO:  eta: 0:08:24  iter: 659  total_loss: 39.34  m1_loss_ce: 0.4764  m1_loss_mask: 0.177  m1_loss_dice: 1.198  m1_loss_ce_0: 0.5753  m1_loss_mask_0: 0.2073  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6354  m1_loss_mask_1: 0.193  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5365  m1_loss_mask_2: 0.1874  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.5  m1_loss_mask_3: 0.1861  m1_loss_dice_3: 1.221  m1_loss_ce_4: 0.4835  m1_loss_mask_4: 0.1811  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.4773  m1_loss_mask_5: 0.1785  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.4824  m1_loss_mask_6: 0.1798  m1_loss_dice_6: 1.175  m1_loss_ce_7: 0.4491  m1_loss_mask_7: 0.179  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.4646  m1_loss_mask_8: 0.177  m1_loss_dice_8: 1.186  m2_loss_ce: 0.5173  m2_loss_mask: 0.179  m2_loss_dice: 1.219  m2_loss_ce_0: 0.5695  m2_loss_mask_0: 0.2094  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.6587  m2_loss_mask_1: 0.189  m2_loss_dice_1: 1.357  m2_loss_ce_2: 0.5892  m2_loss_mask_2: 0.1819  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5821  m2_loss_mask_3: 0.1801  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5421  m2_loss_mask_4: 0.1831  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.521  m2_loss_mask_5: 0.1822  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.5162  m2_loss_mask_6: 0.1797  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.5137  m2_loss_mask_7: 0.1794  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.4971  m2_loss_mask_8: 0.1788  m2_loss_dice_8: 1.234    time: 1.4752  last_time: 1.4375  data_time: 0.0595  last_data_time: 0.0440   lr: 0.0001  max_mem: 34736M
[10/06 11:42:15] d2.utils.events INFO:  eta: 0:07:54  iter: 679  total_loss: 39.21  m1_loss_ce: 0.4374  m1_loss_mask: 0.1735  m1_loss_dice: 1.153  m1_loss_ce_0: 0.5474  m1_loss_mask_0: 0.2044  m1_loss_dice_0: 1.345  m1_loss_ce_1: 0.6212  m1_loss_mask_1: 0.1875  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.5906  m1_loss_mask_2: 0.1809  m1_loss_dice_2: 1.227  m1_loss_ce_3: 0.5388  m1_loss_mask_3: 0.179  m1_loss_dice_3: 1.219  m1_loss_ce_4: 0.4798  m1_loss_mask_4: 0.1735  m1_loss_dice_4: 1.164  m1_loss_ce_5: 0.5073  m1_loss_mask_5: 0.1756  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4631  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.4691  m1_loss_mask_7: 0.1715  m1_loss_dice_7: 1.148  m1_loss_ce_8: 0.4532  m1_loss_mask_8: 0.173  m1_loss_dice_8: 1.161  m2_loss_ce: 0.4824  m2_loss_mask: 0.1784  m2_loss_dice: 1.189  m2_loss_ce_0: 0.5627  m2_loss_mask_0: 0.2101  m2_loss_dice_0: 1.415  m2_loss_ce_1: 0.6318  m2_loss_mask_1: 0.191  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6059  m2_loss_mask_2: 0.1808  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5423  m2_loss_mask_3: 0.1806  m2_loss_dice_3: 1.199  m2_loss_ce_4: 0.5111  m2_loss_mask_4: 0.1831  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.5122  m2_loss_mask_5: 0.1817  m2_loss_dice_5: 1.206  m2_loss_ce_6: 0.5173  m2_loss_mask_6: 0.1793  m2_loss_dice_6: 1.194  m2_loss_ce_7: 0.4858  m2_loss_mask_7: 0.1799  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.4872  m2_loss_mask_8: 0.1785  m2_loss_dice_8: 1.215    time: 1.4752  last_time: 1.4497  data_time: 0.0642  last_data_time: 0.0409   lr: 0.0001  max_mem: 34736M
[10/06 11:42:45] d2.utils.events INFO:  eta: 0:07:24  iter: 699  total_loss: 40.3  m1_loss_ce: 0.4675  m1_loss_mask: 0.1647  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5805  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.492  m1_loss_ce_1: 0.617  m1_loss_mask_1: 0.176  m1_loss_dice_1: 1.431  m1_loss_ce_2: 0.5412  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.362  m1_loss_ce_3: 0.5015  m1_loss_mask_3: 0.1655  m1_loss_dice_3: 1.29  m1_loss_ce_4: 0.4668  m1_loss_mask_4: 0.1666  m1_loss_dice_4: 1.293  m1_loss_ce_5: 0.4802  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.466  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4456  m1_loss_mask_7: 0.1632  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4676  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5117  m2_loss_mask: 0.1643  m2_loss_dice: 1.235  m2_loss_ce_0: 0.6154  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.6272  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.39  m2_loss_ce_2: 0.6043  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.302  m2_loss_ce_3: 0.5695  m2_loss_mask_3: 0.167  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.5492  m2_loss_mask_4: 0.1696  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5463  m2_loss_mask_5: 0.1663  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5268  m2_loss_mask_6: 0.1639  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5573  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.5099  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.241    time: 1.4749  last_time: 1.5838  data_time: 0.0608  last_data_time: 0.1737   lr: 0.0001  max_mem: 34736M
[10/06 11:43:15] d2.utils.events INFO:  eta: 0:06:55  iter: 719  total_loss: 40.26  m1_loss_ce: 0.4761  m1_loss_mask: 0.1564  m1_loss_dice: 1.242  m1_loss_ce_0: 0.6081  m1_loss_mask_0: 0.1864  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.6588  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.408  m1_loss_ce_2: 0.6224  m1_loss_mask_2: 0.1585  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.5212  m1_loss_mask_3: 0.1556  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.4965  m1_loss_mask_4: 0.1583  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.4926  m1_loss_mask_5: 0.1568  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4597  m1_loss_mask_6: 0.1577  m1_loss_dice_6: 1.258  m1_loss_ce_7: 0.4603  m1_loss_mask_7: 0.1551  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4579  m1_loss_mask_8: 0.1563  m1_loss_dice_8: 1.239  m2_loss_ce: 0.5063  m2_loss_mask: 0.1523  m2_loss_dice: 1.299  m2_loss_ce_0: 0.6029  m2_loss_mask_0: 0.179  m2_loss_dice_0: 1.506  m2_loss_ce_1: 0.6432  m2_loss_mask_1: 0.1662  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.5795  m2_loss_mask_2: 0.156  m2_loss_dice_2: 1.361  m2_loss_ce_3: 0.5454  m2_loss_mask_3: 0.1555  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.5376  m2_loss_mask_4: 0.1541  m2_loss_dice_4: 1.305  m2_loss_ce_5: 0.5203  m2_loss_mask_5: 0.1529  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.4764  m2_loss_mask_6: 0.1507  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.4932  m2_loss_mask_7: 0.1514  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.4701  m2_loss_mask_8: 0.1493  m2_loss_dice_8: 1.248    time: 1.4760  last_time: 1.5545  data_time: 0.0681  last_data_time: 0.1101   lr: 0.0001  max_mem: 34736M
[10/06 11:43:44] d2.utils.events INFO:  eta: 0:06:25  iter: 739  total_loss: 38.63  m1_loss_ce: 0.4308  m1_loss_mask: 0.1608  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5127  m1_loss_mask_0: 0.1894  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.5538  m1_loss_mask_1: 0.1707  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.541  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.4692  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4382  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.4516  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4347  m1_loss_mask_6: 0.1626  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.4248  m1_loss_mask_7: 0.1602  m1_loss_dice_7: 1.218  m1_loss_ce_8: 0.44  m1_loss_mask_8: 0.1595  m1_loss_dice_8: 1.207  m2_loss_ce: 0.4472  m2_loss_mask: 0.1654  m2_loss_dice: 1.211  m2_loss_ce_0: 0.537  m2_loss_mask_0: 0.1876  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.5938  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5427  m2_loss_mask_2: 0.1678  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5023  m2_loss_mask_3: 0.1661  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.4681  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.291  m2_loss_ce_5: 0.4655  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.4782  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.4393  m2_loss_mask_7: 0.1651  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.4554  m2_loss_mask_8: 0.1655  m2_loss_dice_8: 1.199    time: 1.4755  last_time: 1.4806  data_time: 0.0484  last_data_time: 0.0403   lr: 0.0001  max_mem: 34736M
[10/06 11:44:14] d2.utils.events INFO:  eta: 0:05:56  iter: 759  total_loss: 39.2  m1_loss_ce: 0.495  m1_loss_mask: 0.1519  m1_loss_dice: 1.165  m1_loss_ce_0: 0.5774  m1_loss_mask_0: 0.1808  m1_loss_dice_0: 1.464  m1_loss_ce_1: 0.6117  m1_loss_mask_1: 0.1668  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5597  m1_loss_mask_2: 0.1527  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5091  m1_loss_mask_3: 0.1537  m1_loss_dice_3: 1.213  m1_loss_ce_4: 0.4794  m1_loss_mask_4: 0.1543  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4712  m1_loss_mask_5: 0.1519  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.4408  m1_loss_mask_6: 0.1497  m1_loss_dice_6: 1.19  m1_loss_ce_7: 0.4776  m1_loss_mask_7: 0.1513  m1_loss_dice_7: 1.184  m1_loss_ce_8: 0.4775  m1_loss_mask_8: 0.153  m1_loss_dice_8: 1.164  m2_loss_ce: 0.4571  m2_loss_mask: 0.1579  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5741  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6351  m2_loss_mask_1: 0.1696  m2_loss_dice_1: 1.409  m2_loss_ce_2: 0.574  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.546  m2_loss_mask_3: 0.16  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.5243  m2_loss_mask_4: 0.1596  m2_loss_dice_4: 1.271  m2_loss_ce_5: 0.5074  m2_loss_mask_5: 0.1575  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.468  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5086  m2_loss_mask_7: 0.1584  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.5043  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.234    time: 1.4753  last_time: 1.5162  data_time: 0.0565  last_data_time: 0.0448   lr: 0.0001  max_mem: 34736M
[10/06 11:44:25] d2.engine.hooks INFO: Overall training speed: 765 iterations in 0:18:49 (1.4768 s / it)
[10/06 11:44:25] d2.engine.hooks INFO: Total training time: 0:18:53 (0:00:04 on hooks)
[10/06 11:44:25] d2.utils.events INFO:  eta: 0:05:44  iter: 767  total_loss: 38.76  m1_loss_ce: 0.4619  m1_loss_mask: 0.1601  m1_loss_dice: 1.172  m1_loss_ce_0: 0.5653  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.5869  m1_loss_mask_1: 0.1719  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.5451  m1_loss_mask_2: 0.1611  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.4953  m1_loss_mask_3: 0.1613  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.4737  m1_loss_mask_4: 0.1605  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.4649  m1_loss_mask_5: 0.1613  m1_loss_dice_5: 1.267  m1_loss_ce_6: 0.4336  m1_loss_mask_6: 0.1591  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.4611  m1_loss_mask_7: 0.1601  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.4616  m1_loss_mask_8: 0.1592  m1_loss_dice_8: 1.185  m2_loss_ce: 0.4488  m2_loss_mask: 0.1593  m2_loss_dice: 1.245  m2_loss_ce_0: 0.5671  m2_loss_mask_0: 0.1917  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.6028  m2_loss_mask_1: 0.1758  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.5713  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.5363  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5002  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.4895  m2_loss_mask_5: 0.1602  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.4626  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4881  m2_loss_mask_7: 0.1617  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4872  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.236    time: 1.4748  last_time: 1.5202  data_time: 0.0577  last_data_time: 0.0456   lr: 0.0001  max_mem: 34736M
[10/06 11:45:07] detectron2 INFO: Rank of current process: 0. World size: 2
[10/06 11:45:07] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/06 11:45:07] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_harmonic.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/06 11:45:07] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_harmonic.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/06 11:45:07] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/06 11:45:07] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic/config.yaml
[10/06 11:45:07] d2.utils.env INFO: Using a generated random seed 10099252
[10/06 11:45:11] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 11:45:11] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/06 11:45:12] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/06 11:45:12] d2.data.build INFO: Using training sampler TrainingSampler
[10/06 11:45:12] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/06 11:45:12] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/06 11:45:12] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/06 11:45:12] d2.data.build INFO: Making batched data loader with batch_size=4
[10/06 11:45:12] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/06 11:45:15] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 11:45:15] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:45:15] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:45:15] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:45:15] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 11:45:52] d2.utils.events INFO:  eta: 0:24:16  iter: 19  total_loss: 39.43  m1_loss_ce: 0.4938  m1_loss_mask: 0.1704  m1_loss_dice: 1.186  m1_loss_ce_0: 0.6157  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.7073  m1_loss_mask_1: 0.1811  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.6368  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5431  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.4929  m1_loss_mask_4: 0.1718  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5122  m1_loss_mask_5: 0.1747  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.5017  m1_loss_mask_6: 0.1722  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.5001  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.4935  m1_loss_mask_8: 0.1719  m1_loss_dice_8: 1.211  m2_loss_ce: 0.4907  m2_loss_mask: 0.1679  m2_loss_dice: 1.206  m2_loss_ce_0: 0.5998  m2_loss_mask_0: 0.1911  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6408  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.5824  m2_loss_mask_2: 0.1736  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5332  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.5004  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.4974  m2_loss_mask_5: 0.172  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4883  m2_loss_mask_6: 0.1698  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.4786  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4883  m2_loss_mask_8: 0.1701  m2_loss_dice_8: 1.228    time: 1.4845  last_time: 1.4592  data_time: 0.2395  last_data_time: 0.0487   lr: 0.0001  max_mem: 33852M
[10/06 11:46:22] d2.utils.events INFO:  eta: 0:23:39  iter: 39  total_loss: 40.92  m1_loss_ce: 0.5034  m1_loss_mask: 0.1708  m1_loss_dice: 1.277  m1_loss_ce_0: 0.6047  m1_loss_mask_0: 0.1959  m1_loss_dice_0: 1.48  m1_loss_ce_1: 0.6554  m1_loss_mask_1: 0.1893  m1_loss_dice_1: 1.436  m1_loss_ce_2: 0.6044  m1_loss_mask_2: 0.1771  m1_loss_dice_2: 1.346  m1_loss_ce_3: 0.5301  m1_loss_mask_3: 0.1753  m1_loss_dice_3: 1.292  m1_loss_ce_4: 0.5135  m1_loss_mask_4: 0.1707  m1_loss_dice_4: 1.301  m1_loss_ce_5: 0.5019  m1_loss_mask_5: 0.1644  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.5133  m1_loss_mask_6: 0.1712  m1_loss_dice_6: 1.31  m1_loss_ce_7: 0.4781  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.272  m1_loss_ce_8: 0.4706  m1_loss_mask_8: 0.1691  m1_loss_dice_8: 1.271  m2_loss_ce: 0.4799  m2_loss_mask: 0.1627  m2_loss_dice: 1.274  m2_loss_ce_0: 0.5698  m2_loss_mask_0: 0.1934  m2_loss_dice_0: 1.5  m2_loss_ce_1: 0.6514  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.433  m2_loss_ce_2: 0.5846  m2_loss_mask_2: 0.1703  m2_loss_dice_2: 1.378  m2_loss_ce_3: 0.5414  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5069  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.297  m2_loss_ce_5: 0.5048  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.333  m2_loss_ce_6: 0.4828  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.4794  m2_loss_mask_7: 0.1637  m2_loss_dice_7: 1.292  m2_loss_ce_8: 0.483  m2_loss_mask_8: 0.1626  m2_loss_dice_8: 1.242    time: 1.4757  last_time: 1.3945  data_time: 0.0763  last_data_time: 0.0423   lr: 0.0001  max_mem: 34451M
[10/06 11:46:52] d2.utils.events INFO:  eta: 0:23:16  iter: 59  total_loss: 39.48  m1_loss_ce: 0.4957  m1_loss_mask: 0.1695  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5912  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.6433  m1_loss_mask_1: 0.1755  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.6003  m1_loss_mask_2: 0.1733  m1_loss_dice_2: 1.291  m1_loss_ce_3: 0.5515  m1_loss_mask_3: 0.1691  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.5276  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.497  m1_loss_mask_5: 0.1722  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4978  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.5091  m1_loss_mask_7: 0.1678  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.5102  m1_loss_mask_8: 0.1641  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4981  m2_loss_mask: 0.1628  m2_loss_dice: 1.212  m2_loss_ce_0: 0.5827  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6355  m2_loss_mask_1: 0.1746  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.5777  m2_loss_mask_2: 0.1651  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5166  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.4998  m2_loss_mask_4: 0.1641  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.4989  m2_loss_mask_5: 0.1626  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.4708  m2_loss_mask_6: 0.1593  m2_loss_dice_6: 1.175  m2_loss_ce_7: 0.4935  m2_loss_mask_7: 0.1617  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4793  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.194    time: 1.4832  last_time: 1.4108  data_time: 0.0521  last_data_time: 0.1102   lr: 0.0001  max_mem: 34881M
[10/06 11:47:21] d2.utils.events INFO:  eta: 0:22:42  iter: 79  total_loss: 40.27  m1_loss_ce: 0.5058  m1_loss_mask: 0.1746  m1_loss_dice: 1.265  m1_loss_ce_0: 0.5645  m1_loss_mask_0: 0.2167  m1_loss_dice_0: 1.46  m1_loss_ce_1: 0.6621  m1_loss_mask_1: 0.1924  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.6202  m1_loss_mask_2: 0.188  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5506  m1_loss_mask_3: 0.1803  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.52  m1_loss_mask_4: 0.1797  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5045  m1_loss_mask_5: 0.1814  m1_loss_dice_5: 1.268  m1_loss_ce_6: 0.5177  m1_loss_mask_6: 0.1723  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.4988  m1_loss_mask_7: 0.1735  m1_loss_dice_7: 1.265  m1_loss_ce_8: 0.501  m1_loss_mask_8: 0.1746  m1_loss_dice_8: 1.261  m2_loss_ce: 0.5233  m2_loss_mask: 0.1783  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6245  m2_loss_mask_0: 0.2087  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6542  m2_loss_mask_1: 0.1901  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6237  m2_loss_mask_2: 0.1822  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5441  m2_loss_mask_3: 0.1814  m2_loss_dice_3: 1.251  m2_loss_ce_4: 0.535  m2_loss_mask_4: 0.1844  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.5175  m2_loss_mask_5: 0.1795  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.5112  m2_loss_mask_6: 0.1813  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.506  m2_loss_mask_7: 0.1809  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.5044  m2_loss_mask_8: 0.1789  m2_loss_dice_8: 1.224    time: 1.4791  last_time: 1.4667  data_time: 0.0513  last_data_time: 0.0499   lr: 0.0001  max_mem: 34881M
[10/06 11:47:51] d2.utils.events INFO:  eta: 0:22:11  iter: 99  total_loss: 40.7  m1_loss_ce: 0.493  m1_loss_mask: 0.1658  m1_loss_dice: 1.264  m1_loss_ce_0: 0.5818  m1_loss_mask_0: 0.1956  m1_loss_dice_0: 1.488  m1_loss_ce_1: 0.6135  m1_loss_mask_1: 0.1823  m1_loss_dice_1: 1.407  m1_loss_ce_2: 0.55  m1_loss_mask_2: 0.1741  m1_loss_dice_2: 1.359  m1_loss_ce_3: 0.506  m1_loss_mask_3: 0.1711  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.4984  m1_loss_mask_4: 0.1686  m1_loss_dice_4: 1.305  m1_loss_ce_5: 0.4838  m1_loss_mask_5: 0.1666  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.4563  m1_loss_mask_6: 0.1686  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.4751  m1_loss_mask_7: 0.1657  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.4514  m1_loss_mask_8: 0.1667  m1_loss_dice_8: 1.258  m2_loss_ce: 0.4917  m2_loss_mask: 0.1611  m2_loss_dice: 1.261  m2_loss_ce_0: 0.6115  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6471  m2_loss_mask_1: 0.177  m2_loss_dice_1: 1.389  m2_loss_ce_2: 0.5933  m2_loss_mask_2: 0.165  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5531  m2_loss_mask_3: 0.1628  m2_loss_dice_3: 1.297  m2_loss_ce_4: 0.5283  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.327  m2_loss_ce_5: 0.5107  m2_loss_mask_5: 0.1636  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.4888  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.4711  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.4663  m2_loss_mask_8: 0.1609  m2_loss_dice_8: 1.26    time: 1.4817  last_time: 1.6513  data_time: 0.0731  last_data_time: 0.2240   lr: 0.0001  max_mem: 35276M
[10/06 11:48:21] d2.utils.events INFO:  eta: 0:21:42  iter: 119  total_loss: 39.96  m1_loss_ce: 0.5212  m1_loss_mask: 0.1643  m1_loss_dice: 1.224  m1_loss_ce_0: 0.6188  m1_loss_mask_0: 0.179  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6646  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.6109  m1_loss_mask_2: 0.1616  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.5662  m1_loss_mask_3: 0.1602  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.5265  m1_loss_mask_4: 0.1625  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5301  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.5078  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4935  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4963  m1_loss_mask_8: 0.1666  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5389  m2_loss_mask: 0.1584  m2_loss_dice: 1.224  m2_loss_ce_0: 0.623  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.6744  m2_loss_mask_1: 0.1723  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6418  m2_loss_mask_2: 0.163  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5722  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5561  m2_loss_mask_4: 0.1603  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.5555  m2_loss_mask_5: 0.1595  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.5285  m2_loss_mask_6: 0.1586  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.5249  m2_loss_mask_7: 0.1581  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.5386  m2_loss_mask_8: 0.1597  m2_loss_dice_8: 1.256    time: 1.4830  last_time: 1.4539  data_time: 0.0606  last_data_time: 0.0488   lr: 0.0001  max_mem: 35276M
[10/06 11:48:51] d2.utils.events INFO:  eta: 0:21:12  iter: 139  total_loss: 37.84  m1_loss_ce: 0.4549  m1_loss_mask: 0.1801  m1_loss_dice: 1.178  m1_loss_ce_0: 0.591  m1_loss_mask_0: 0.2057  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.6051  m1_loss_mask_1: 0.1929  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5626  m1_loss_mask_2: 0.1828  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.4976  m1_loss_mask_3: 0.1821  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4804  m1_loss_mask_4: 0.1848  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4813  m1_loss_mask_5: 0.1858  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.464  m1_loss_mask_6: 0.1842  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.4236  m1_loss_mask_7: 0.1817  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.4431  m1_loss_mask_8: 0.1818  m1_loss_dice_8: 1.144  m2_loss_ce: 0.4477  m2_loss_mask: 0.1718  m2_loss_dice: 1.183  m2_loss_ce_0: 0.5237  m2_loss_mask_0: 0.2036  m2_loss_dice_0: 1.386  m2_loss_ce_1: 0.5914  m2_loss_mask_1: 0.1853  m2_loss_dice_1: 1.312  m2_loss_ce_2: 0.5409  m2_loss_mask_2: 0.179  m2_loss_dice_2: 1.25  m2_loss_ce_3: 0.4767  m2_loss_mask_3: 0.1797  m2_loss_dice_3: 1.188  m2_loss_ce_4: 0.4673  m2_loss_mask_4: 0.1779  m2_loss_dice_4: 1.209  m2_loss_ce_5: 0.4826  m2_loss_mask_5: 0.1814  m2_loss_dice_5: 1.208  m2_loss_ce_6: 0.4571  m2_loss_mask_6: 0.1739  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4534  m2_loss_mask_7: 0.1736  m2_loss_dice_7: 1.171  m2_loss_ce_8: 0.443  m2_loss_mask_8: 0.1726  m2_loss_dice_8: 1.186    time: 1.4827  last_time: 1.4305  data_time: 0.0528  last_data_time: 0.0431   lr: 0.0001  max_mem: 35276M
[10/06 11:49:21] d2.utils.events INFO:  eta: 0:20:43  iter: 159  total_loss: 40.43  m1_loss_ce: 0.4846  m1_loss_mask: 0.159  m1_loss_dice: 1.262  m1_loss_ce_0: 0.5706  m1_loss_mask_0: 0.1857  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.5903  m1_loss_mask_1: 0.1726  m1_loss_dice_1: 1.425  m1_loss_ce_2: 0.5669  m1_loss_mask_2: 0.1651  m1_loss_dice_2: 1.344  m1_loss_ce_3: 0.5526  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.335  m1_loss_ce_4: 0.5045  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.292  m1_loss_ce_5: 0.5048  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.279  m1_loss_ce_6: 0.4951  m1_loss_mask_6: 0.1626  m1_loss_dice_6: 1.287  m1_loss_ce_7: 0.4495  m1_loss_mask_7: 0.1628  m1_loss_dice_7: 1.305  m1_loss_ce_8: 0.4744  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.279  m2_loss_ce: 0.4907  m2_loss_mask: 0.1667  m2_loss_dice: 1.265  m2_loss_ce_0: 0.5884  m2_loss_mask_0: 0.1922  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.6331  m2_loss_mask_1: 0.1744  m2_loss_dice_1: 1.442  m2_loss_ce_2: 0.5812  m2_loss_mask_2: 0.167  m2_loss_dice_2: 1.379  m2_loss_ce_3: 0.5538  m2_loss_mask_3: 0.1675  m2_loss_dice_3: 1.308  m2_loss_ce_4: 0.5339  m2_loss_mask_4: 0.1698  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5063  m2_loss_mask_5: 0.1683  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.4954  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4967  m2_loss_mask_7: 0.1666  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.4756  m2_loss_mask_8: 0.1656  m2_loss_dice_8: 1.275    time: 1.4841  last_time: 1.4844  data_time: 0.0630  last_data_time: 0.1075   lr: 0.0001  max_mem: 35276M
[10/06 11:49:50] d2.utils.events INFO:  eta: 0:20:12  iter: 179  total_loss: 39.31  m1_loss_ce: 0.463  m1_loss_mask: 0.1746  m1_loss_dice: 1.242  m1_loss_ce_0: 0.5966  m1_loss_mask_0: 0.2092  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6043  m1_loss_mask_1: 0.1893  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.5828  m1_loss_mask_2: 0.1722  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.4677  m1_loss_mask_3: 0.1763  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4837  m1_loss_mask_4: 0.1789  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.4953  m1_loss_mask_5: 0.1685  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.4773  m1_loss_mask_6: 0.1711  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.4772  m1_loss_mask_7: 0.1703  m1_loss_dice_7: 1.284  m1_loss_ce_8: 0.4731  m1_loss_mask_8: 0.1744  m1_loss_dice_8: 1.253  m2_loss_ce: 0.4702  m2_loss_mask: 0.1659  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5808  m2_loss_mask_0: 0.2094  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6057  m2_loss_mask_1: 0.1823  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.5838  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5519  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.5178  m2_loss_mask_4: 0.1715  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.5139  m2_loss_mask_5: 0.1698  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4602  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4884  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4754  m2_loss_mask_8: 0.1661  m2_loss_dice_8: 1.217    time: 1.4821  last_time: 1.4766  data_time: 0.0547  last_data_time: 0.0417   lr: 0.0001  max_mem: 35276M
[10/06 11:50:20] d2.utils.events INFO:  eta: 0:19:42  iter: 199  total_loss: 39.19  m1_loss_ce: 0.4878  m1_loss_mask: 0.1727  m1_loss_dice: 1.17  m1_loss_ce_0: 0.5291  m1_loss_mask_0: 0.2033  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.613  m1_loss_mask_1: 0.1827  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.5984  m1_loss_mask_2: 0.1812  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.5124  m1_loss_mask_3: 0.1806  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4645  m1_loss_mask_4: 0.1787  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4729  m1_loss_mask_5: 0.1789  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4515  m1_loss_mask_6: 0.1751  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.4386  m1_loss_mask_7: 0.176  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4667  m1_loss_mask_8: 0.1759  m1_loss_dice_8: 1.155  m2_loss_ce: 0.4877  m2_loss_mask: 0.1714  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6258  m2_loss_mask_0: 0.2024  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6319  m2_loss_mask_1: 0.1835  m2_loss_dice_1: 1.304  m2_loss_ce_2: 0.5558  m2_loss_mask_2: 0.1763  m2_loss_dice_2: 1.234  m2_loss_ce_3: 0.5299  m2_loss_mask_3: 0.1788  m2_loss_dice_3: 1.179  m2_loss_ce_4: 0.5047  m2_loss_mask_4: 0.1774  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.5265  m2_loss_mask_5: 0.1705  m2_loss_dice_5: 1.192  m2_loss_ce_6: 0.4922  m2_loss_mask_6: 0.1717  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.4897  m2_loss_mask_7: 0.1719  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.5011  m2_loss_mask_8: 0.1691  m2_loss_dice_8: 1.147    time: 1.4820  last_time: 1.6126  data_time: 0.0536  last_data_time: 0.0683   lr: 0.0001  max_mem: 35276M
[10/06 11:50:50] d2.utils.events INFO:  eta: 0:19:12  iter: 219  total_loss: 41.64  m1_loss_ce: 0.5111  m1_loss_mask: 0.1666  m1_loss_dice: 1.281  m1_loss_ce_0: 0.6145  m1_loss_mask_0: 0.1916  m1_loss_dice_0: 1.434  m1_loss_ce_1: 0.7048  m1_loss_mask_1: 0.179  m1_loss_dice_1: 1.418  m1_loss_ce_2: 0.626  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.354  m1_loss_ce_3: 0.5391  m1_loss_mask_3: 0.1725  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5077  m1_loss_mask_4: 0.1716  m1_loss_dice_4: 1.302  m1_loss_ce_5: 0.5365  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.499  m1_loss_mask_6: 0.1674  m1_loss_dice_6: 1.279  m1_loss_ce_7: 0.4875  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.252  m1_loss_ce_8: 0.4913  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.282  m2_loss_ce: 0.5266  m2_loss_mask: 0.1546  m2_loss_dice: 1.254  m2_loss_ce_0: 0.6317  m2_loss_mask_0: 0.1868  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.6794  m2_loss_mask_1: 0.1718  m2_loss_dice_1: 1.459  m2_loss_ce_2: 0.6757  m2_loss_mask_2: 0.1601  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.5953  m2_loss_mask_3: 0.1583  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5784  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.308  m2_loss_ce_5: 0.581  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.288  m2_loss_ce_6: 0.5679  m2_loss_mask_6: 0.1585  m2_loss_dice_6: 1.217  m2_loss_ce_7: 0.5944  m2_loss_mask_7: 0.1532  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.5483  m2_loss_mask_8: 0.154  m2_loss_dice_8: 1.258    time: 1.4816  last_time: 1.4250  data_time: 0.0566  last_data_time: 0.0415   lr: 0.0001  max_mem: 35276M
[10/06 11:51:19] d2.utils.events INFO:  eta: 0:18:43  iter: 239  total_loss: 39.31  m1_loss_ce: 0.4922  m1_loss_mask: 0.1653  m1_loss_dice: 1.214  m1_loss_ce_0: 0.5877  m1_loss_mask_0: 0.198  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6353  m1_loss_mask_1: 0.1793  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.6014  m1_loss_mask_2: 0.1743  m1_loss_dice_2: 1.33  m1_loss_ce_3: 0.5459  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.5292  m1_loss_mask_4: 0.172  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5421  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4806  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.4942  m1_loss_mask_7: 0.1695  m1_loss_dice_7: 1.259  m1_loss_ce_8: 0.5099  m1_loss_mask_8: 0.1677  m1_loss_dice_8: 1.248  m2_loss_ce: 0.5105  m2_loss_mask: 0.1651  m2_loss_dice: 1.252  m2_loss_ce_0: 0.6128  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6529  m2_loss_mask_1: 0.1803  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5918  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.332  m2_loss_ce_3: 0.5465  m2_loss_mask_3: 0.1652  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5203  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5379  m2_loss_mask_5: 0.166  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5322  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5022  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4883  m2_loss_mask_8: 0.1672  m2_loss_dice_8: 1.278    time: 1.4812  last_time: 1.5111  data_time: 0.0551  last_data_time: 0.0333   lr: 0.0001  max_mem: 35276M
[10/06 11:51:49] d2.utils.events INFO:  eta: 0:18:14  iter: 259  total_loss: 38.97  m1_loss_ce: 0.4582  m1_loss_mask: 0.1858  m1_loss_dice: 1.169  m1_loss_ce_0: 0.5572  m1_loss_mask_0: 0.2043  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.6058  m1_loss_mask_1: 0.1986  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.5894  m1_loss_mask_2: 0.1899  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5181  m1_loss_mask_3: 0.185  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.5164  m1_loss_mask_4: 0.1842  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.5104  m1_loss_mask_5: 0.1872  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.4891  m1_loss_mask_6: 0.1825  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.4688  m1_loss_mask_7: 0.1837  m1_loss_dice_7: 1.218  m1_loss_ce_8: 0.4596  m1_loss_mask_8: 0.186  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4586  m2_loss_mask: 0.1765  m2_loss_dice: 1.198  m2_loss_ce_0: 0.566  m2_loss_mask_0: 0.2093  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6096  m2_loss_mask_1: 0.1938  m2_loss_dice_1: 1.38  m2_loss_ce_2: 0.5762  m2_loss_mask_2: 0.1812  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.5181  m2_loss_mask_3: 0.1802  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.4912  m2_loss_mask_4: 0.1757  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.4909  m2_loss_mask_5: 0.1763  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.4547  m2_loss_mask_6: 0.1801  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.4763  m2_loss_mask_7: 0.1767  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4685  m2_loss_mask_8: 0.1807  m2_loss_dice_8: 1.193    time: 1.4809  last_time: 1.4793  data_time: 0.0491  last_data_time: 0.0458   lr: 0.0001  max_mem: 35276M
[10/06 11:52:18] d2.utils.events INFO:  eta: 0:17:44  iter: 279  total_loss: 40.16  m1_loss_ce: 0.5008  m1_loss_mask: 0.1672  m1_loss_dice: 1.235  m1_loss_ce_0: 0.5622  m1_loss_mask_0: 0.1938  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.6564  m1_loss_mask_1: 0.1846  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.5929  m1_loss_mask_2: 0.1754  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5343  m1_loss_mask_3: 0.1719  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.5192  m1_loss_mask_4: 0.1711  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.545  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.292  m1_loss_ce_6: 0.5072  m1_loss_mask_6: 0.1675  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.4624  m1_loss_mask_7: 0.1682  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4686  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.273  m2_loss_ce: 0.5027  m2_loss_mask: 0.1638  m2_loss_dice: 1.231  m2_loss_ce_0: 0.5766  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.6363  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.6123  m2_loss_mask_2: 0.1712  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5485  m2_loss_mask_3: 0.1667  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5421  m2_loss_mask_4: 0.1682  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.4876  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.4712  m2_loss_mask_6: 0.1642  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.4848  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.484  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.25    time: 1.4802  last_time: 1.5099  data_time: 0.0561  last_data_time: 0.0824   lr: 0.0001  max_mem: 35276M
[10/06 11:52:48] d2.utils.events INFO:  eta: 0:17:15  iter: 299  total_loss: 40.88  m1_loss_ce: 0.5051  m1_loss_mask: 0.163  m1_loss_dice: 1.301  m1_loss_ce_0: 0.5897  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.496  m1_loss_ce_1: 0.6373  m1_loss_mask_1: 0.1779  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.5607  m1_loss_mask_2: 0.1664  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5203  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.331  m1_loss_ce_4: 0.514  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5069  m1_loss_mask_5: 0.1624  m1_loss_dice_5: 1.302  m1_loss_ce_6: 0.4622  m1_loss_mask_6: 0.1628  m1_loss_dice_6: 1.298  m1_loss_ce_7: 0.4557  m1_loss_mask_7: 0.1645  m1_loss_dice_7: 1.279  m1_loss_ce_8: 0.481  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.299  m2_loss_ce: 0.4848  m2_loss_mask: 0.1559  m2_loss_dice: 1.287  m2_loss_ce_0: 0.6029  m2_loss_mask_0: 0.1854  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.5975  m2_loss_mask_1: 0.1658  m2_loss_dice_1: 1.433  m2_loss_ce_2: 0.5665  m2_loss_mask_2: 0.1599  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5262  m2_loss_mask_3: 0.1585  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.4935  m2_loss_mask_4: 0.1583  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5058  m2_loss_mask_5: 0.16  m2_loss_dice_5: 1.301  m2_loss_ce_6: 0.4729  m2_loss_mask_6: 0.1572  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.5023  m2_loss_mask_7: 0.1583  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.4861  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.301    time: 1.4813  last_time: 1.5765  data_time: 0.0668  last_data_time: 0.0744   lr: 0.0001  max_mem: 35276M
[10/06 11:53:18] d2.utils.events INFO:  eta: 0:16:45  iter: 319  total_loss: 40.5  m1_loss_ce: 0.4949  m1_loss_mask: 0.1634  m1_loss_dice: 1.253  m1_loss_ce_0: 0.5929  m1_loss_mask_0: 0.1886  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6658  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.5918  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.341  m1_loss_ce_3: 0.5589  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.5152  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.292  m1_loss_ce_5: 0.5138  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.307  m1_loss_ce_6: 0.476  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.274  m1_loss_ce_7: 0.4955  m1_loss_mask_7: 0.1608  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.5032  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.26  m2_loss_ce: 0.5134  m2_loss_mask: 0.1616  m2_loss_dice: 1.211  m2_loss_ce_0: 0.595  m2_loss_mask_0: 0.193  m2_loss_dice_0: 1.515  m2_loss_ce_1: 0.6579  m2_loss_mask_1: 0.1751  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.6115  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.5483  m2_loss_mask_3: 0.1622  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5322  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.523  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5037  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.498  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.5014  m2_loss_mask_8: 0.1628  m2_loss_dice_8: 1.246    time: 1.4808  last_time: 1.4475  data_time: 0.0615  last_data_time: 0.0778   lr: 0.0001  max_mem: 35276M
[10/06 11:53:48] d2.utils.events INFO:  eta: 0:16:16  iter: 339  total_loss: 38.94  m1_loss_ce: 0.4784  m1_loss_mask: 0.1726  m1_loss_dice: 1.192  m1_loss_ce_0: 0.6175  m1_loss_mask_0: 0.2018  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6536  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.605  m1_loss_mask_2: 0.1739  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.5327  m1_loss_mask_3: 0.1771  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.5166  m1_loss_mask_4: 0.1713  m1_loss_dice_4: 1.202  m1_loss_ce_5: 0.4955  m1_loss_mask_5: 0.1723  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.4883  m1_loss_mask_6: 0.1718  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4718  m1_loss_mask_7: 0.1699  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.4883  m1_loss_mask_8: 0.1732  m1_loss_dice_8: 1.191  m2_loss_ce: 0.5026  m2_loss_mask: 0.1737  m2_loss_dice: 1.147  m2_loss_ce_0: 0.6214  m2_loss_mask_0: 0.1987  m2_loss_dice_0: 1.391  m2_loss_ce_1: 0.6606  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.6033  m2_loss_mask_2: 0.1744  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.5342  m2_loss_mask_3: 0.1748  m2_loss_dice_3: 1.204  m2_loss_ce_4: 0.5313  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.154  m2_loss_ce_5: 0.5247  m2_loss_mask_5: 0.1745  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.4839  m2_loss_mask_6: 0.1743  m2_loss_dice_6: 1.159  m2_loss_ce_7: 0.4863  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.164  m2_loss_ce_8: 0.4897  m2_loss_mask_8: 0.1721  m2_loss_dice_8: 1.173    time: 1.4815  last_time: 1.4533  data_time: 0.0615  last_data_time: 0.0554   lr: 0.0001  max_mem: 35276M
[10/06 11:54:17] d2.utils.events INFO:  eta: 0:15:46  iter: 359  total_loss: 40.71  m1_loss_ce: 0.4761  m1_loss_mask: 0.1658  m1_loss_dice: 1.309  m1_loss_ce_0: 0.5738  m1_loss_mask_0: 0.1917  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.6297  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.5595  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.374  m1_loss_ce_3: 0.5015  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.332  m1_loss_ce_4: 0.4927  m1_loss_mask_4: 0.1664  m1_loss_dice_4: 1.35  m1_loss_ce_5: 0.5052  m1_loss_mask_5: 0.1675  m1_loss_dice_5: 1.34  m1_loss_ce_6: 0.4301  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.314  m1_loss_ce_7: 0.4674  m1_loss_mask_7: 0.1672  m1_loss_dice_7: 1.336  m1_loss_ce_8: 0.4802  m1_loss_mask_8: 0.164  m1_loss_dice_8: 1.307  m2_loss_ce: 0.519  m2_loss_mask: 0.1596  m2_loss_dice: 1.286  m2_loss_ce_0: 0.5986  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.508  m2_loss_ce_1: 0.6137  m2_loss_mask_1: 0.1732  m2_loss_dice_1: 1.473  m2_loss_ce_2: 0.6055  m2_loss_mask_2: 0.1593  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5452  m2_loss_mask_3: 0.163  m2_loss_dice_3: 1.331  m2_loss_ce_4: 0.5243  m2_loss_mask_4: 0.1607  m2_loss_dice_4: 1.328  m2_loss_ce_5: 0.5174  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.326  m2_loss_ce_6: 0.5164  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.296  m2_loss_ce_7: 0.4844  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.323  m2_loss_ce_8: 0.4796  m2_loss_mask_8: 0.1569  m2_loss_dice_8: 1.297    time: 1.4809  last_time: 1.4749  data_time: 0.0604  last_data_time: 0.0672   lr: 0.0001  max_mem: 35276M
[10/06 11:54:46] d2.utils.events INFO:  eta: 0:15:15  iter: 379  total_loss: 38.03  m1_loss_ce: 0.4699  m1_loss_mask: 0.1739  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5436  m1_loss_mask_0: 0.1994  m1_loss_dice_0: 1.35  m1_loss_ce_1: 0.6061  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.291  m1_loss_ce_2: 0.5419  m1_loss_mask_2: 0.1751  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.4768  m1_loss_mask_3: 0.1741  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.4822  m1_loss_mask_4: 0.1753  m1_loss_dice_4: 1.18  m1_loss_ce_5: 0.4552  m1_loss_mask_5: 0.1735  m1_loss_dice_5: 1.169  m1_loss_ce_6: 0.4515  m1_loss_mask_6: 0.1736  m1_loss_dice_6: 1.172  m1_loss_ce_7: 0.4561  m1_loss_mask_7: 0.1747  m1_loss_dice_7: 1.151  m1_loss_ce_8: 0.459  m1_loss_mask_8: 0.1725  m1_loss_dice_8: 1.168  m2_loss_ce: 0.4771  m2_loss_mask: 0.1698  m2_loss_dice: 1.156  m2_loss_ce_0: 0.5799  m2_loss_mask_0: 0.2113  m2_loss_dice_0: 1.386  m2_loss_ce_1: 0.6151  m2_loss_mask_1: 0.1907  m2_loss_dice_1: 1.315  m2_loss_ce_2: 0.5789  m2_loss_mask_2: 0.1753  m2_loss_dice_2: 1.219  m2_loss_ce_3: 0.5299  m2_loss_mask_3: 0.1789  m2_loss_dice_3: 1.205  m2_loss_ce_4: 0.4985  m2_loss_mask_4: 0.1792  m2_loss_dice_4: 1.209  m2_loss_ce_5: 0.5044  m2_loss_mask_5: 0.176  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.4596  m2_loss_mask_6: 0.1759  m2_loss_dice_6: 1.187  m2_loss_ce_7: 0.4876  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.4809  m2_loss_mask_8: 0.1741  m2_loss_dice_8: 1.159    time: 1.4778  last_time: 1.3715  data_time: 0.0512  last_data_time: 0.0403   lr: 0.0001  max_mem: 35276M
[10/06 11:55:16] d2.utils.events INFO:  eta: 0:14:45  iter: 399  total_loss: 40.01  m1_loss_ce: 0.4891  m1_loss_mask: 0.1633  m1_loss_dice: 1.246  m1_loss_ce_0: 0.5566  m1_loss_mask_0: 0.1862  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6258  m1_loss_mask_1: 0.1707  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.563  m1_loss_mask_2: 0.1671  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.5093  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.293  m1_loss_ce_4: 0.5049  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.5121  m1_loss_mask_5: 0.1629  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.4823  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.272  m1_loss_ce_7: 0.4687  m1_loss_mask_7: 0.1631  m1_loss_dice_7: 1.274  m1_loss_ce_8: 0.4597  m1_loss_mask_8: 0.1643  m1_loss_dice_8: 1.253  m2_loss_ce: 0.4982  m2_loss_mask: 0.1613  m2_loss_dice: 1.276  m2_loss_ce_0: 0.6055  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6478  m2_loss_mask_1: 0.1695  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.6013  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5392  m2_loss_mask_3: 0.1628  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.5492  m2_loss_mask_4: 0.1642  m2_loss_dice_4: 1.288  m2_loss_ce_5: 0.4987  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.5036  m2_loss_mask_6: 0.1597  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.5114  m2_loss_mask_7: 0.1619  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.5039  m2_loss_mask_8: 0.1623  m2_loss_dice_8: 1.245    time: 1.4772  last_time: 1.3638  data_time: 0.0534  last_data_time: 0.0755   lr: 0.0001  max_mem: 35276M
[10/06 11:55:45] d2.utils.events INFO:  eta: 0:14:15  iter: 419  total_loss: 37.94  m1_loss_ce: 0.443  m1_loss_mask: 0.1598  m1_loss_dice: 1.15  m1_loss_ce_0: 0.5543  m1_loss_mask_0: 0.1977  m1_loss_dice_0: 1.384  m1_loss_ce_1: 0.6081  m1_loss_mask_1: 0.1776  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5181  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.4542  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.4317  m1_loss_mask_4: 0.1657  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4306  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4421  m1_loss_mask_6: 0.1624  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.4179  m1_loss_mask_7: 0.1619  m1_loss_dice_7: 1.145  m1_loss_ce_8: 0.4136  m1_loss_mask_8: 0.1614  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4142  m2_loss_mask: 0.1628  m2_loss_dice: 1.176  m2_loss_ce_0: 0.5723  m2_loss_mask_0: 0.1916  m2_loss_dice_0: 1.358  m2_loss_ce_1: 0.6241  m2_loss_mask_1: 0.1755  m2_loss_dice_1: 1.297  m2_loss_ce_2: 0.5312  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.4976  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.4725  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.192  m2_loss_ce_5: 0.4485  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.4445  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.182  m2_loss_ce_7: 0.4349  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4331  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.192    time: 1.4762  last_time: 1.4378  data_time: 0.0650  last_data_time: 0.0711   lr: 0.0001  max_mem: 35276M
[10/06 11:56:14] d2.utils.events INFO:  eta: 0:13:46  iter: 439  total_loss: 38.87  m1_loss_ce: 0.4724  m1_loss_mask: 0.1733  m1_loss_dice: 1.222  m1_loss_ce_0: 0.529  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.5702  m1_loss_mask_1: 0.1872  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.5402  m1_loss_mask_2: 0.1769  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.4898  m1_loss_mask_3: 0.1801  m1_loss_dice_3: 1.283  m1_loss_ce_4: 0.4699  m1_loss_mask_4: 0.1786  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4402  m1_loss_mask_5: 0.1787  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.4451  m1_loss_mask_6: 0.1761  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.4479  m1_loss_mask_7: 0.1783  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.428  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.236  m2_loss_ce: 0.4816  m2_loss_mask: 0.178  m2_loss_dice: 1.255  m2_loss_ce_0: 0.568  m2_loss_mask_0: 0.2103  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6284  m2_loss_mask_1: 0.184  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.579  m2_loss_mask_2: 0.181  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5278  m2_loss_mask_3: 0.1802  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5174  m2_loss_mask_4: 0.1809  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.4942  m2_loss_mask_5: 0.1744  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.4924  m2_loss_mask_6: 0.1797  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.4746  m2_loss_mask_7: 0.1715  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4795  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.237    time: 1.4751  last_time: 1.4859  data_time: 0.0618  last_data_time: 0.0388   lr: 0.0001  max_mem: 35276M
[10/06 11:56:43] d2.utils.events INFO:  eta: 0:13:16  iter: 459  total_loss: 39.49  m1_loss_ce: 0.4385  m1_loss_mask: 0.1638  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5461  m1_loss_mask_0: 0.1855  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.5917  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.5474  m1_loss_mask_2: 0.1698  m1_loss_dice_2: 1.336  m1_loss_ce_3: 0.4889  m1_loss_mask_3: 0.1684  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.4581  m1_loss_mask_4: 0.166  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.4449  m1_loss_mask_5: 0.1644  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4501  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.4468  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.4427  m1_loss_mask_8: 0.1637  m1_loss_dice_8: 1.22  m2_loss_ce: 0.4695  m2_loss_mask: 0.1567  m2_loss_dice: 1.215  m2_loss_ce_0: 0.5805  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6351  m2_loss_mask_1: 0.1637  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5737  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5221  m2_loss_mask_3: 0.1589  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.4888  m2_loss_mask_4: 0.1582  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.4696  m2_loss_mask_5: 0.158  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4903  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.225  m2_loss_ce_7: 0.4471  m2_loss_mask_7: 0.1578  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.4672  m2_loss_mask_8: 0.158  m2_loss_dice_8: 1.248    time: 1.4748  last_time: 1.4599  data_time: 0.0558  last_data_time: 0.0399   lr: 0.0001  max_mem: 35276M
[10/06 11:57:13] d2.utils.events INFO:  eta: 0:12:46  iter: 479  total_loss: 39.31  m1_loss_ce: 0.4301  m1_loss_mask: 0.1637  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5209  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.5753  m1_loss_mask_1: 0.1808  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5415  m1_loss_mask_2: 0.1703  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.4729  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.4448  m1_loss_mask_4: 0.166  m1_loss_dice_4: 1.188  m1_loss_ce_5: 0.46  m1_loss_mask_5: 0.1653  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.4282  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4532  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.445  m1_loss_mask_8: 0.1649  m1_loss_dice_8: 1.183  m2_loss_ce: 0.46  m2_loss_mask: 0.1715  m2_loss_dice: 1.242  m2_loss_ce_0: 0.5882  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.63  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.6067  m2_loss_mask_2: 0.1745  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5175  m2_loss_mask_3: 0.1745  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.4974  m2_loss_mask_4: 0.1795  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.4909  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.256  m2_loss_ce_6: 0.4966  m2_loss_mask_6: 0.1717  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.4801  m2_loss_mask_7: 0.1713  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4547  m2_loss_mask_8: 0.1699  m2_loss_dice_8: 1.233    time: 1.4741  last_time: 1.3155  data_time: 0.0608  last_data_time: 0.0376   lr: 0.0001  max_mem: 35276M
[10/06 11:57:42] d2.utils.events INFO:  eta: 0:12:17  iter: 499  total_loss: 40.87  m1_loss_ce: 0.4945  m1_loss_mask: 0.1599  m1_loss_dice: 1.256  m1_loss_ce_0: 0.5704  m1_loss_mask_0: 0.1872  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.6149  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.5657  m1_loss_mask_2: 0.1719  m1_loss_dice_2: 1.341  m1_loss_ce_3: 0.4681  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.291  m1_loss_ce_4: 0.4943  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.288  m1_loss_ce_5: 0.4765  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.298  m1_loss_ce_6: 0.4772  m1_loss_mask_6: 0.1629  m1_loss_dice_6: 1.271  m1_loss_ce_7: 0.4707  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.278  m1_loss_ce_8: 0.4791  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.263  m2_loss_ce: 0.505  m2_loss_mask: 0.1697  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6225  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6462  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.448  m2_loss_ce_2: 0.6123  m2_loss_mask_2: 0.172  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5421  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.308  m2_loss_ce_4: 0.5614  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5392  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.5199  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.324  m2_loss_ce_7: 0.5199  m2_loss_mask_7: 0.17  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.5234  m2_loss_mask_8: 0.1704  m2_loss_dice_8: 1.284    time: 1.4743  last_time: 1.4718  data_time: 0.0573  last_data_time: 0.0944   lr: 0.0001  max_mem: 35276M
[10/06 11:58:12] d2.utils.events INFO:  eta: 0:11:48  iter: 519  total_loss: 38.68  m1_loss_ce: 0.4944  m1_loss_mask: 0.1587  m1_loss_dice: 1.199  m1_loss_ce_0: 0.609  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.6466  m1_loss_mask_1: 0.1705  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.6039  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5092  m1_loss_mask_3: 0.16  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4716  m1_loss_mask_4: 0.1568  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4889  m1_loss_mask_5: 0.1585  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.462  m1_loss_mask_6: 0.1581  m1_loss_dice_6: 1.186  m1_loss_ce_7: 0.494  m1_loss_mask_7: 0.1566  m1_loss_dice_7: 1.148  m1_loss_ce_8: 0.4722  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.201  m2_loss_ce: 0.4751  m2_loss_mask: 0.1673  m2_loss_dice: 1.191  m2_loss_ce_0: 0.6169  m2_loss_mask_0: 0.1939  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6638  m2_loss_mask_1: 0.1741  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.607  m2_loss_mask_2: 0.1715  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5561  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5353  m2_loss_mask_4: 0.166  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5166  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.512  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.4901  m2_loss_mask_7: 0.1667  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.5047  m2_loss_mask_8: 0.1655  m2_loss_dice_8: 1.173    time: 1.4752  last_time: 1.4758  data_time: 0.0621  last_data_time: 0.0382   lr: 0.0001  max_mem: 35276M
[10/06 11:58:42] d2.utils.events INFO:  eta: 0:11:18  iter: 539  total_loss: 41.43  m1_loss_ce: 0.4759  m1_loss_mask: 0.1681  m1_loss_dice: 1.295  m1_loss_ce_0: 0.6053  m1_loss_mask_0: 0.1955  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.6035  m1_loss_mask_1: 0.1762  m1_loss_dice_1: 1.433  m1_loss_ce_2: 0.5754  m1_loss_mask_2: 0.1702  m1_loss_dice_2: 1.331  m1_loss_ce_3: 0.5241  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.335  m1_loss_ce_4: 0.4793  m1_loss_mask_4: 0.1687  m1_loss_dice_4: 1.29  m1_loss_ce_5: 0.5078  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.336  m1_loss_ce_6: 0.496  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.272  m1_loss_ce_7: 0.4709  m1_loss_mask_7: 0.1704  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.4857  m1_loss_mask_8: 0.1684  m1_loss_dice_8: 1.292  m2_loss_ce: 0.5091  m2_loss_mask: 0.1712  m2_loss_dice: 1.31  m2_loss_ce_0: 0.5765  m2_loss_mask_0: 0.1948  m2_loss_dice_0: 1.486  m2_loss_ce_1: 0.6261  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.439  m2_loss_ce_2: 0.6381  m2_loss_mask_2: 0.1771  m2_loss_dice_2: 1.398  m2_loss_ce_3: 0.5557  m2_loss_mask_3: 0.1732  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5266  m2_loss_mask_4: 0.1739  m2_loss_dice_4: 1.341  m2_loss_ce_5: 0.4848  m2_loss_mask_5: 0.1764  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.4984  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.304  m2_loss_ce_7: 0.4818  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.292  m2_loss_ce_8: 0.4973  m2_loss_mask_8: 0.1719  m2_loss_dice_8: 1.299    time: 1.4756  last_time: 1.4748  data_time: 0.0522  last_data_time: 0.0425   lr: 0.0001  max_mem: 35276M
[10/06 11:59:11] d2.utils.events INFO:  eta: 0:10:49  iter: 559  total_loss: 38.8  m1_loss_ce: 0.5073  m1_loss_mask: 0.1607  m1_loss_dice: 1.188  m1_loss_ce_0: 0.6254  m1_loss_mask_0: 0.1853  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.6508  m1_loss_mask_1: 0.1772  m1_loss_dice_1: 1.281  m1_loss_ce_2: 0.6038  m1_loss_mask_2: 0.1651  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5346  m1_loss_mask_3: 0.1595  m1_loss_dice_3: 1.202  m1_loss_ce_4: 0.5263  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.181  m1_loss_ce_5: 0.5202  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.183  m1_loss_ce_6: 0.5104  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.5052  m1_loss_mask_7: 0.1604  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4876  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.174  m2_loss_ce: 0.5258  m2_loss_mask: 0.162  m2_loss_dice: 1.216  m2_loss_ce_0: 0.5756  m2_loss_mask_0: 0.1954  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6235  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.359  m2_loss_ce_2: 0.591  m2_loss_mask_2: 0.1723  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.581  m2_loss_mask_3: 0.1696  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5293  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.5323  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.251  m2_loss_ce_6: 0.5126  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.197  m2_loss_ce_7: 0.4939  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.191  m2_loss_ce_8: 0.5029  m2_loss_mask_8: 0.1623  m2_loss_dice_8: 1.234    time: 1.4750  last_time: 1.2963  data_time: 0.0539  last_data_time: 0.0343   lr: 0.0001  max_mem: 35276M
[10/06 11:59:41] d2.utils.events INFO:  eta: 0:10:19  iter: 579  total_loss: 40  m1_loss_ce: 0.4656  m1_loss_mask: 0.1661  m1_loss_dice: 1.157  m1_loss_ce_0: 0.5808  m1_loss_mask_0: 0.1817  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.6089  m1_loss_mask_1: 0.1727  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.5997  m1_loss_mask_2: 0.1673  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.5083  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.4993  m1_loss_mask_4: 0.1706  m1_loss_dice_4: 1.22  m1_loss_ce_5: 0.4496  m1_loss_mask_5: 0.1667  m1_loss_dice_5: 1.164  m1_loss_ce_6: 0.4718  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4673  m1_loss_mask_7: 0.1676  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.4433  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4995  m2_loss_mask: 0.1677  m2_loss_dice: 1.166  m2_loss_ce_0: 0.5905  m2_loss_mask_0: 0.1875  m2_loss_dice_0: 1.396  m2_loss_ce_1: 0.6589  m2_loss_mask_1: 0.1733  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5987  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5221  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.5225  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.196  m2_loss_ce_5: 0.5302  m2_loss_mask_5: 0.1702  m2_loss_dice_5: 1.19  m2_loss_ce_6: 0.5183  m2_loss_mask_6: 0.1681  m2_loss_dice_6: 1.168  m2_loss_ce_7: 0.4972  m2_loss_mask_7: 0.1694  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.5151  m2_loss_mask_8: 0.1689  m2_loss_dice_8: 1.19    time: 1.4747  last_time: 1.5227  data_time: 0.0546  last_data_time: 0.0632   lr: 0.0001  max_mem: 35276M
[10/06 12:00:11] d2.utils.events INFO:  eta: 0:09:50  iter: 599  total_loss: 39.75  m1_loss_ce: 0.4797  m1_loss_mask: 0.1541  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5931  m1_loss_mask_0: 0.1781  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.6459  m1_loss_mask_1: 0.1727  m1_loss_dice_1: 1.348  m1_loss_ce_2: 0.5724  m1_loss_mask_2: 0.158  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.5144  m1_loss_mask_3: 0.1626  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.4904  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.215  m1_loss_ce_5: 0.4645  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.461  m1_loss_mask_6: 0.1569  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.4483  m1_loss_mask_7: 0.156  m1_loss_dice_7: 1.195  m1_loss_ce_8: 0.4617  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.196  m2_loss_ce: 0.4793  m2_loss_mask: 0.1569  m2_loss_dice: 1.219  m2_loss_ce_0: 0.5756  m2_loss_mask_0: 0.1928  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6745  m2_loss_mask_1: 0.1725  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.6272  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.292  m2_loss_ce_3: 0.5514  m2_loss_mask_3: 0.1592  m2_loss_dice_3: 1.252  m2_loss_ce_4: 0.5409  m2_loss_mask_4: 0.1568  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.4977  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.5094  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.518  m2_loss_mask_7: 0.1579  m2_loss_dice_7: 1.188  m2_loss_ce_8: 0.505  m2_loss_mask_8: 0.1578  m2_loss_dice_8: 1.21    time: 1.4749  last_time: 1.4311  data_time: 0.0591  last_data_time: 0.0459   lr: 0.0001  max_mem: 35276M
[10/06 12:00:40] d2.utils.events INFO:  eta: 0:09:21  iter: 619  total_loss: 39.39  m1_loss_ce: 0.4342  m1_loss_mask: 0.1666  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5597  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.5987  m1_loss_mask_1: 0.1801  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.5486  m1_loss_mask_2: 0.1701  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.4753  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.4737  m1_loss_mask_4: 0.1672  m1_loss_dice_4: 1.238  m1_loss_ce_5: 0.435  m1_loss_mask_5: 0.1643  m1_loss_dice_5: 1.268  m1_loss_ce_6: 0.4454  m1_loss_mask_6: 0.1673  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.4411  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.4261  m1_loss_mask_8: 0.1671  m1_loss_dice_8: 1.24  m2_loss_ce: 0.485  m2_loss_mask: 0.1658  m2_loss_dice: 1.252  m2_loss_ce_0: 0.5964  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6264  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.581  m2_loss_mask_2: 0.1762  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5369  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5048  m2_loss_mask_4: 0.175  m2_loss_dice_4: 1.271  m2_loss_ce_5: 0.5105  m2_loss_mask_5: 0.1726  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.4949  m2_loss_mask_6: 0.1689  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.4942  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.4944  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.245    time: 1.4751  last_time: 1.5155  data_time: 0.0556  last_data_time: 0.0491   lr: 0.0001  max_mem: 35276M
[10/06 12:01:10] d2.utils.events INFO:  eta: 0:08:51  iter: 639  total_loss: 41.3  m1_loss_ce: 0.4722  m1_loss_mask: 0.1622  m1_loss_dice: 1.269  m1_loss_ce_0: 0.5851  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.481  m1_loss_ce_1: 0.6033  m1_loss_mask_1: 0.1774  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.5748  m1_loss_mask_2: 0.1694  m1_loss_dice_2: 1.362  m1_loss_ce_3: 0.5197  m1_loss_mask_3: 0.1701  m1_loss_dice_3: 1.287  m1_loss_ce_4: 0.5141  m1_loss_mask_4: 0.1688  m1_loss_dice_4: 1.298  m1_loss_ce_5: 0.5065  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.31  m1_loss_ce_6: 0.4785  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.272  m1_loss_ce_7: 0.4852  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.4681  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5298  m2_loss_mask: 0.1611  m2_loss_dice: 1.309  m2_loss_ce_0: 0.6326  m2_loss_mask_0: 0.1857  m2_loss_dice_0: 1.543  m2_loss_ce_1: 0.6598  m2_loss_mask_1: 0.1722  m2_loss_dice_1: 1.472  m2_loss_ce_2: 0.6102  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.38  m2_loss_ce_3: 0.5665  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.347  m2_loss_ce_4: 0.5507  m2_loss_mask_4: 0.1613  m2_loss_dice_4: 1.328  m2_loss_ce_5: 0.5378  m2_loss_mask_5: 0.1595  m2_loss_dice_5: 1.29  m2_loss_ce_6: 0.5353  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.312  m2_loss_ce_7: 0.5464  m2_loss_mask_7: 0.1645  m2_loss_dice_7: 1.313  m2_loss_ce_8: 0.5155  m2_loss_mask_8: 0.1648  m2_loss_dice_8: 1.316    time: 1.4746  last_time: 1.4245  data_time: 0.0538  last_data_time: 0.0621   lr: 0.0001  max_mem: 35276M
[10/06 12:01:39] d2.utils.events INFO:  eta: 0:08:22  iter: 659  total_loss: 38.96  m1_loss_ce: 0.4445  m1_loss_mask: 0.1757  m1_loss_dice: 1.199  m1_loss_ce_0: 0.5678  m1_loss_mask_0: 0.2059  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.6225  m1_loss_mask_1: 0.187  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.5402  m1_loss_mask_2: 0.1842  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.4672  m1_loss_mask_3: 0.1801  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.4432  m1_loss_mask_4: 0.1804  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.459  m1_loss_mask_5: 0.1776  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.4393  m1_loss_mask_6: 0.1763  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.4107  m1_loss_mask_7: 0.1784  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.442  m1_loss_mask_8: 0.1778  m1_loss_dice_8: 1.261  m2_loss_ce: 0.4566  m2_loss_mask: 0.1772  m2_loss_dice: 1.247  m2_loss_ce_0: 0.5719  m2_loss_mask_0: 0.2079  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.6208  m2_loss_mask_1: 0.1976  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.5878  m2_loss_mask_2: 0.1845  m2_loss_dice_2: 1.316  m2_loss_ce_3: 0.5286  m2_loss_mask_3: 0.18  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5191  m2_loss_mask_4: 0.1828  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.4951  m2_loss_mask_5: 0.1824  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.4976  m2_loss_mask_6: 0.1798  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4565  m2_loss_mask_7: 0.176  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4505  m2_loss_mask_8: 0.1791  m2_loss_dice_8: 1.265    time: 1.4749  last_time: 1.4984  data_time: 0.0547  last_data_time: 0.0446   lr: 0.0001  max_mem: 35276M
[10/06 12:02:09] d2.utils.events INFO:  eta: 0:07:53  iter: 679  total_loss: 36.61  m1_loss_ce: 0.4494  m1_loss_mask: 0.1597  m1_loss_dice: 1.097  m1_loss_ce_0: 0.5579  m1_loss_mask_0: 0.1788  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.5922  m1_loss_mask_1: 0.1725  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.4944  m1_loss_mask_2: 0.1641  m1_loss_dice_2: 1.211  m1_loss_ce_3: 0.4514  m1_loss_mask_3: 0.1616  m1_loss_dice_3: 1.141  m1_loss_ce_4: 0.4322  m1_loss_mask_4: 0.1606  m1_loss_dice_4: 1.182  m1_loss_ce_5: 0.4713  m1_loss_mask_5: 0.1609  m1_loss_dice_5: 1.142  m1_loss_ce_6: 0.4282  m1_loss_mask_6: 0.1613  m1_loss_dice_6: 1.123  m1_loss_ce_7: 0.4399  m1_loss_mask_7: 0.1613  m1_loss_dice_7: 1.161  m1_loss_ce_8: 0.4506  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4514  m2_loss_mask: 0.1579  m2_loss_dice: 1.11  m2_loss_ce_0: 0.5597  m2_loss_mask_0: 0.1904  m2_loss_dice_0: 1.359  m2_loss_ce_1: 0.5585  m2_loss_mask_1: 0.172  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.54  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.5036  m2_loss_mask_3: 0.1603  m2_loss_dice_3: 1.167  m2_loss_ce_4: 0.4407  m2_loss_mask_4: 0.1618  m2_loss_dice_4: 1.187  m2_loss_ce_5: 0.4619  m2_loss_mask_5: 0.1604  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.4577  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.133  m2_loss_ce_7: 0.4192  m2_loss_mask_7: 0.1587  m2_loss_dice_7: 1.124  m2_loss_ce_8: 0.4542  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.154    time: 1.4749  last_time: 1.4784  data_time: 0.0598  last_data_time: 0.0543   lr: 0.0001  max_mem: 35276M
[10/06 12:02:39] d2.utils.events INFO:  eta: 0:07:23  iter: 699  total_loss: 40.24  m1_loss_ce: 0.4453  m1_loss_mask: 0.1661  m1_loss_dice: 1.196  m1_loss_ce_0: 0.5592  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6126  m1_loss_mask_1: 0.1724  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5707  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.4866  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.268  m1_loss_ce_4: 0.4674  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.4647  m1_loss_mask_5: 0.1647  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4531  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.229  m1_loss_ce_7: 0.4326  m1_loss_mask_7: 0.1655  m1_loss_dice_7: 1.211  m1_loss_ce_8: 0.4616  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4935  m2_loss_mask: 0.1671  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6136  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.495  m2_loss_ce_1: 0.6471  m2_loss_mask_1: 0.1779  m2_loss_dice_1: 1.442  m2_loss_ce_2: 0.6124  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.5366  m2_loss_mask_3: 0.1652  m2_loss_dice_3: 1.321  m2_loss_ce_4: 0.5125  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.5185  m2_loss_mask_5: 0.1651  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.5272  m2_loss_mask_6: 0.1694  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4865  m2_loss_mask_7: 0.1686  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.4865  m2_loss_mask_8: 0.1672  m2_loss_dice_8: 1.257    time: 1.4757  last_time: 1.4081  data_time: 0.0695  last_data_time: 0.0535   lr: 0.0001  max_mem: 35276M
[10/06 12:03:09] d2.utils.events INFO:  eta: 0:06:54  iter: 719  total_loss: 39.62  m1_loss_ce: 0.4626  m1_loss_mask: 0.1672  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5206  m1_loss_mask_0: 0.2048  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.5752  m1_loss_mask_1: 0.1868  m1_loss_dice_1: 1.364  m1_loss_ce_2: 0.532  m1_loss_mask_2: 0.1747  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.4915  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.4558  m1_loss_mask_4: 0.1694  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4527  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.4605  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4545  m1_loss_mask_7: 0.1678  m1_loss_dice_7: 1.25  m1_loss_ce_8: 0.4386  m1_loss_mask_8: 0.1663  m1_loss_dice_8: 1.213  m2_loss_ce: 0.4721  m2_loss_mask: 0.1685  m2_loss_dice: 1.269  m2_loss_ce_0: 0.5682  m2_loss_mask_0: 0.2061  m2_loss_dice_0: 1.427  m2_loss_ce_1: 0.6291  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.405  m2_loss_ce_2: 0.591  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5257  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5266  m2_loss_mask_4: 0.1733  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.508  m2_loss_mask_5: 0.1705  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5071  m2_loss_mask_6: 0.168  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4908  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.29  m2_loss_ce_8: 0.4811  m2_loss_mask_8: 0.1687  m2_loss_dice_8: 1.28    time: 1.4761  last_time: 1.3815  data_time: 0.0557  last_data_time: 0.0913   lr: 0.0001  max_mem: 35276M
[10/06 12:03:39] d2.utils.events INFO:  eta: 0:06:24  iter: 739  total_loss: 40.44  m1_loss_ce: 0.4361  m1_loss_mask: 0.1701  m1_loss_dice: 1.278  m1_loss_ce_0: 0.5867  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.475  m1_loss_ce_1: 0.6496  m1_loss_mask_1: 0.1801  m1_loss_dice_1: 1.438  m1_loss_ce_2: 0.5605  m1_loss_mask_2: 0.1716  m1_loss_dice_2: 1.334  m1_loss_ce_3: 0.4715  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.307  m1_loss_ce_4: 0.4926  m1_loss_mask_4: 0.1723  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.5048  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.29  m1_loss_ce_6: 0.4547  m1_loss_mask_6: 0.1702  m1_loss_dice_6: 1.276  m1_loss_ce_7: 0.451  m1_loss_mask_7: 0.1692  m1_loss_dice_7: 1.282  m1_loss_ce_8: 0.4581  m1_loss_mask_8: 0.1698  m1_loss_dice_8: 1.28  m2_loss_ce: 0.5092  m2_loss_mask: 0.1623  m2_loss_dice: 1.275  m2_loss_ce_0: 0.5884  m2_loss_mask_0: 0.1892  m2_loss_dice_0: 1.521  m2_loss_ce_1: 0.6417  m2_loss_mask_1: 0.1741  m2_loss_dice_1: 1.446  m2_loss_ce_2: 0.5863  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5647  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.313  m2_loss_ce_4: 0.5201  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.5379  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.4729  m2_loss_mask_6: 0.1616  m2_loss_dice_6: 1.302  m2_loss_ce_7: 0.5308  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.29  m2_loss_ce_8: 0.4787  m2_loss_mask_8: 0.1619  m2_loss_dice_8: 1.285    time: 1.4764  last_time: 1.5279  data_time: 0.0803  last_data_time: 0.0550   lr: 0.0001  max_mem: 35276M
[10/06 12:04:09] d2.utils.events INFO:  eta: 0:05:55  iter: 759  total_loss: 38.25  m1_loss_ce: 0.4141  m1_loss_mask: 0.1684  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5512  m1_loss_mask_0: 0.1899  m1_loss_dice_0: 1.342  m1_loss_ce_1: 0.5485  m1_loss_mask_1: 0.1819  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.4962  m1_loss_mask_2: 0.172  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.4119  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.202  m1_loss_ce_4: 0.4078  m1_loss_mask_4: 0.1701  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.4207  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.3977  m1_loss_mask_6: 0.1662  m1_loss_dice_6: 1.243  m1_loss_ce_7: 0.4054  m1_loss_mask_7: 0.1671  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.3946  m1_loss_mask_8: 0.1722  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4461  m2_loss_mask: 0.1716  m2_loss_dice: 1.219  m2_loss_ce_0: 0.5712  m2_loss_mask_0: 0.1983  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6082  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.5836  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5415  m2_loss_mask_3: 0.1715  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5  m2_loss_mask_4: 0.172  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.4886  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.475  m2_loss_mask_6: 0.1707  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4714  m2_loss_mask_7: 0.1705  m2_loss_dice_7: 1.189  m2_loss_ce_8: 0.4664  m2_loss_mask_8: 0.1714  m2_loss_dice_8: 1.173    time: 1.4766  last_time: 1.5567  data_time: 0.0548  last_data_time: 0.0478   lr: 0.0001  max_mem: 35276M
[10/06 12:04:38] d2.utils.events INFO:  eta: 0:05:25  iter: 779  total_loss: 40.28  m1_loss_ce: 0.4306  m1_loss_mask: 0.1641  m1_loss_dice: 1.195  m1_loss_ce_0: 0.5752  m1_loss_mask_0: 0.1937  m1_loss_dice_0: 1.411  m1_loss_ce_1: 0.64  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5462  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.5113  m1_loss_mask_3: 0.1678  m1_loss_dice_3: 1.256  m1_loss_ce_4: 0.4694  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.4871  m1_loss_mask_5: 0.1682  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.4669  m1_loss_mask_6: 0.1639  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.5004  m1_loss_mask_7: 0.1646  m1_loss_dice_7: 1.184  m1_loss_ce_8: 0.4418  m1_loss_mask_8: 0.1689  m1_loss_dice_8: 1.223  m2_loss_ce: 0.529  m2_loss_mask: 0.176  m2_loss_dice: 1.246  m2_loss_ce_0: 0.6019  m2_loss_mask_0: 0.2057  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6271  m2_loss_mask_1: 0.1839  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.5818  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5552  m2_loss_mask_3: 0.1725  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.5273  m2_loss_mask_4: 0.175  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.5546  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5049  m2_loss_mask_6: 0.1741  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5092  m2_loss_mask_7: 0.1746  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.5156  m2_loss_mask_8: 0.1766  m2_loss_dice_8: 1.297    time: 1.4765  last_time: 1.4752  data_time: 0.0561  last_data_time: 0.0637   lr: 0.0001  max_mem: 35276M
[10/06 12:05:08] d2.utils.events INFO:  eta: 0:04:55  iter: 799  total_loss: 39.98  m1_loss_ce: 0.445  m1_loss_mask: 0.1517  m1_loss_dice: 1.261  m1_loss_ce_0: 0.5435  m1_loss_mask_0: 0.1694  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.5977  m1_loss_mask_1: 0.1646  m1_loss_dice_1: 1.406  m1_loss_ce_2: 0.5344  m1_loss_mask_2: 0.1581  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.4878  m1_loss_mask_3: 0.1546  m1_loss_dice_3: 1.292  m1_loss_ce_4: 0.4615  m1_loss_mask_4: 0.1525  m1_loss_dice_4: 1.306  m1_loss_ce_5: 0.4465  m1_loss_mask_5: 0.1504  m1_loss_dice_5: 1.3  m1_loss_ce_6: 0.4262  m1_loss_mask_6: 0.1527  m1_loss_dice_6: 1.272  m1_loss_ce_7: 0.4316  m1_loss_mask_7: 0.1542  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.3975  m1_loss_mask_8: 0.1522  m1_loss_dice_8: 1.269  m2_loss_ce: 0.4993  m2_loss_mask: 0.1602  m2_loss_dice: 1.268  m2_loss_ce_0: 0.593  m2_loss_mask_0: 0.1823  m2_loss_dice_0: 1.509  m2_loss_ce_1: 0.617  m2_loss_mask_1: 0.1689  m2_loss_dice_1: 1.437  m2_loss_ce_2: 0.5907  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.537  m2_loss_mask_3: 0.1586  m2_loss_dice_3: 1.331  m2_loss_ce_4: 0.5197  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.327  m2_loss_ce_5: 0.5161  m2_loss_mask_5: 0.1583  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.4832  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.4925  m2_loss_mask_7: 0.157  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.4905  m2_loss_mask_8: 0.1563  m2_loss_dice_8: 1.287    time: 1.4770  last_time: 1.3911  data_time: 0.0578  last_data_time: 0.0579   lr: 0.0001  max_mem: 35276M
[10/06 12:05:38] d2.utils.events INFO:  eta: 0:04:26  iter: 819  total_loss: 40.5  m1_loss_ce: 0.4907  m1_loss_mask: 0.1507  m1_loss_dice: 1.223  m1_loss_ce_0: 0.5822  m1_loss_mask_0: 0.1774  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.669  m1_loss_mask_1: 0.166  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.5997  m1_loss_mask_2: 0.1572  m1_loss_dice_2: 1.338  m1_loss_ce_3: 0.5478  m1_loss_mask_3: 0.1505  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.51  m1_loss_mask_4: 0.1534  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.5038  m1_loss_mask_5: 0.1514  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.5081  m1_loss_mask_6: 0.1526  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.473  m1_loss_mask_7: 0.1531  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4829  m1_loss_mask_8: 0.1518  m1_loss_dice_8: 1.229  m2_loss_ce: 0.5393  m2_loss_mask: 0.151  m2_loss_dice: 1.263  m2_loss_ce_0: 0.6351  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.555  m2_loss_ce_1: 0.6844  m2_loss_mask_1: 0.1707  m2_loss_dice_1: 1.471  m2_loss_ce_2: 0.6385  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.386  m2_loss_ce_3: 0.6094  m2_loss_mask_3: 0.16  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5687  m2_loss_mask_4: 0.1595  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.54  m2_loss_mask_5: 0.1574  m2_loss_dice_5: 1.31  m2_loss_ce_6: 0.5265  m2_loss_mask_6: 0.1559  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.537  m2_loss_mask_7: 0.1502  m2_loss_dice_7: 1.293  m2_loss_ce_8: 0.5451  m2_loss_mask_8: 0.1506  m2_loss_dice_8: 1.269    time: 1.4774  last_time: 1.3208  data_time: 0.0583  last_data_time: 0.0553   lr: 0.0001  max_mem: 35276M
[10/06 12:06:08] d2.utils.events INFO:  eta: 0:03:56  iter: 839  total_loss: 40.17  m1_loss_ce: 0.4619  m1_loss_mask: 0.1614  m1_loss_dice: 1.215  m1_loss_ce_0: 0.566  m1_loss_mask_0: 0.1817  m1_loss_dice_0: 1.454  m1_loss_ce_1: 0.6267  m1_loss_mask_1: 0.1694  m1_loss_dice_1: 1.374  m1_loss_ce_2: 0.5583  m1_loss_mask_2: 0.1633  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.4714  m1_loss_mask_3: 0.1587  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.4605  m1_loss_mask_4: 0.1599  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.4351  m1_loss_mask_5: 0.1601  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.4318  m1_loss_mask_6: 0.1609  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4399  m1_loss_mask_7: 0.1585  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4394  m1_loss_mask_8: 0.1616  m1_loss_dice_8: 1.201  m2_loss_ce: 0.5251  m2_loss_mask: 0.163  m2_loss_dice: 1.2  m2_loss_ce_0: 0.6108  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.6836  m2_loss_mask_1: 0.1758  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.6221  m2_loss_mask_2: 0.1675  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.5628  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5451  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.5229  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.5281  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.531  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.5232  m2_loss_mask_8: 0.1646  m2_loss_dice_8: 1.226    time: 1.4772  last_time: 1.4518  data_time: 0.0490  last_data_time: 0.0898   lr: 0.0001  max_mem: 35276M
[10/06 12:06:38] d2.utils.events INFO:  eta: 0:03:27  iter: 859  total_loss: 37.98  m1_loss_ce: 0.3695  m1_loss_mask: 0.1656  m1_loss_dice: 1.133  m1_loss_ce_0: 0.5199  m1_loss_mask_0: 0.1986  m1_loss_dice_0: 1.307  m1_loss_ce_1: 0.5584  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.289  m1_loss_ce_2: 0.4962  m1_loss_mask_2: 0.1688  m1_loss_dice_2: 1.201  m1_loss_ce_3: 0.4529  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.4016  m1_loss_mask_4: 0.1693  m1_loss_dice_4: 1.179  m1_loss_ce_5: 0.393  m1_loss_mask_5: 0.1674  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.3956  m1_loss_mask_6: 0.1672  m1_loss_dice_6: 1.121  m1_loss_ce_7: 0.3944  m1_loss_mask_7: 0.1673  m1_loss_dice_7: 1.12  m1_loss_ce_8: 0.405  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.143  m2_loss_ce: 0.4627  m2_loss_mask: 0.1738  m2_loss_dice: 1.178  m2_loss_ce_0: 0.5453  m2_loss_mask_0: 0.2168  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6345  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.5546  m2_loss_mask_2: 0.1756  m2_loss_dice_2: 1.247  m2_loss_ce_3: 0.485  m2_loss_mask_3: 0.1744  m2_loss_dice_3: 1.22  m2_loss_ce_4: 0.4715  m2_loss_mask_4: 0.1762  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.4709  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.188  m2_loss_ce_6: 0.4699  m2_loss_mask_6: 0.1756  m2_loss_dice_6: 1.189  m2_loss_ce_7: 0.4751  m2_loss_mask_7: 0.1752  m2_loss_dice_7: 1.159  m2_loss_ce_8: 0.4577  m2_loss_mask_8: 0.1754  m2_loss_dice_8: 1.181    time: 1.4778  last_time: 1.5762  data_time: 0.0519  last_data_time: 0.0412   lr: 0.0001  max_mem: 35276M
[10/06 12:07:07] d2.utils.events INFO:  eta: 0:02:57  iter: 879  total_loss: 40.62  m1_loss_ce: 0.4769  m1_loss_mask: 0.163  m1_loss_dice: 1.245  m1_loss_ce_0: 0.5895  m1_loss_mask_0: 0.1981  m1_loss_dice_0: 1.499  m1_loss_ce_1: 0.6146  m1_loss_mask_1: 0.1721  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.5797  m1_loss_mask_2: 0.1653  m1_loss_dice_2: 1.337  m1_loss_ce_3: 0.5242  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5053  m1_loss_mask_4: 0.1641  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.4868  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.4685  m1_loss_mask_6: 0.1666  m1_loss_dice_6: 1.261  m1_loss_ce_7: 0.4557  m1_loss_mask_7: 0.1646  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4724  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.22  m2_loss_ce: 0.5054  m2_loss_mask: 0.1625  m2_loss_dice: 1.259  m2_loss_ce_0: 0.6434  m2_loss_mask_0: 0.1903  m2_loss_dice_0: 1.532  m2_loss_ce_1: 0.6713  m2_loss_mask_1: 0.169  m2_loss_dice_1: 1.427  m2_loss_ce_2: 0.6042  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5789  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.326  m2_loss_ce_4: 0.5416  m2_loss_mask_4: 0.1627  m2_loss_dice_4: 1.296  m2_loss_ce_5: 0.5636  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.31  m2_loss_ce_6: 0.5231  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.5324  m2_loss_mask_7: 0.1632  m2_loss_dice_7: 1.292  m2_loss_ce_8: 0.515  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.285    time: 1.4776  last_time: 1.5334  data_time: 0.0640  last_data_time: 0.0648   lr: 0.0001  max_mem: 35276M
[10/06 12:07:38] d2.utils.events INFO:  eta: 0:02:28  iter: 899  total_loss: 38.17  m1_loss_ce: 0.4479  m1_loss_mask: 0.1517  m1_loss_dice: 1.165  m1_loss_ce_0: 0.5461  m1_loss_mask_0: 0.1758  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.5996  m1_loss_mask_1: 0.1639  m1_loss_dice_1: 1.28  m1_loss_ce_2: 0.4893  m1_loss_mask_2: 0.1594  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.4631  m1_loss_mask_3: 0.1552  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.4544  m1_loss_mask_4: 0.1549  m1_loss_dice_4: 1.167  m1_loss_ce_5: 0.4372  m1_loss_mask_5: 0.1533  m1_loss_dice_5: 1.138  m1_loss_ce_6: 0.445  m1_loss_mask_6: 0.1522  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.4243  m1_loss_mask_7: 0.1517  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.4316  m1_loss_mask_8: 0.1532  m1_loss_dice_8: 1.163  m2_loss_ce: 0.4753  m2_loss_mask: 0.156  m2_loss_dice: 1.216  m2_loss_ce_0: 0.5547  m2_loss_mask_0: 0.1881  m2_loss_dice_0: 1.381  m2_loss_ce_1: 0.6337  m2_loss_mask_1: 0.1685  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.5649  m2_loss_mask_2: 0.1608  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.5039  m2_loss_mask_3: 0.1572  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.4739  m2_loss_mask_4: 0.158  m2_loss_dice_4: 1.199  m2_loss_ce_5: 0.465  m2_loss_mask_5: 0.1563  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.4722  m2_loss_mask_6: 0.1563  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.4864  m2_loss_mask_7: 0.1554  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.4765  m2_loss_mask_8: 0.1546  m2_loss_dice_8: 1.219    time: 1.4782  last_time: 1.4463  data_time: 0.0540  last_data_time: 0.0472   lr: 0.0001  max_mem: 35276M
[10/06 12:08:07] d2.utils.events INFO:  eta: 0:01:58  iter: 919  total_loss: 38.3  m1_loss_ce: 0.459  m1_loss_mask: 0.167  m1_loss_dice: 1.16  m1_loss_ce_0: 0.5536  m1_loss_mask_0: 0.1895  m1_loss_dice_0: 1.357  m1_loss_ce_1: 0.611  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.288  m1_loss_ce_2: 0.5177  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.239  m1_loss_ce_3: 0.4739  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.217  m1_loss_ce_4: 0.4651  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.4442  m1_loss_mask_5: 0.1682  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.4457  m1_loss_mask_6: 0.1661  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.4733  m1_loss_mask_7: 0.1675  m1_loss_dice_7: 1.178  m1_loss_ce_8: 0.4491  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.169  m2_loss_ce: 0.4749  m2_loss_mask: 0.1636  m2_loss_dice: 1.206  m2_loss_ce_0: 0.5712  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.416  m2_loss_ce_1: 0.6687  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.5691  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.5038  m2_loss_mask_3: 0.167  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5163  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.4958  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.476  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.4925  m2_loss_mask_7: 0.1645  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.4794  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.205    time: 1.4783  last_time: 1.5201  data_time: 0.0458  last_data_time: 0.0536   lr: 0.0001  max_mem: 35276M
[10/06 12:08:37] d2.utils.events INFO:  eta: 0:01:28  iter: 939  total_loss: 38.93  m1_loss_ce: 0.4531  m1_loss_mask: 0.1583  m1_loss_dice: 1.202  m1_loss_ce_0: 0.5131  m1_loss_mask_0: 0.1762  m1_loss_dice_0: 1.378  m1_loss_ce_1: 0.5903  m1_loss_mask_1: 0.1675  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.5516  m1_loss_mask_2: 0.1627  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5051  m1_loss_mask_3: 0.16  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.4568  m1_loss_mask_4: 0.159  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.4429  m1_loss_mask_5: 0.1578  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4629  m1_loss_mask_6: 0.1584  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.4573  m1_loss_mask_7: 0.1572  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4569  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.18  m2_loss_ce: 0.5005  m2_loss_mask: 0.1626  m2_loss_dice: 1.199  m2_loss_ce_0: 0.6177  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.642  m2_loss_mask_1: 0.1753  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.6124  m2_loss_mask_2: 0.1701  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5321  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.538  m2_loss_mask_4: 0.1664  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.5099  m2_loss_mask_5: 0.1653  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.509  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4962  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.4698  m2_loss_mask_8: 0.1611  m2_loss_dice_8: 1.216    time: 1.4786  last_time: 1.5000  data_time: 0.0668  last_data_time: 0.0764   lr: 0.0001  max_mem: 35276M
[10/06 12:09:07] d2.utils.events INFO:  eta: 0:00:59  iter: 959  total_loss: 39.92  m1_loss_ce: 0.4891  m1_loss_mask: 0.1505  m1_loss_dice: 1.276  m1_loss_ce_0: 0.5551  m1_loss_mask_0: 0.1743  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.5937  m1_loss_mask_1: 0.1624  m1_loss_dice_1: 1.381  m1_loss_ce_2: 0.5492  m1_loss_mask_2: 0.1584  m1_loss_dice_2: 1.362  m1_loss_ce_3: 0.5161  m1_loss_mask_3: 0.1556  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.4981  m1_loss_mask_4: 0.1529  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.4782  m1_loss_mask_5: 0.1548  m1_loss_dice_5: 1.277  m1_loss_ce_6: 0.4838  m1_loss_mask_6: 0.1512  m1_loss_dice_6: 1.258  m1_loss_ce_7: 0.4795  m1_loss_mask_7: 0.1503  m1_loss_dice_7: 1.221  m1_loss_ce_8: 0.4867  m1_loss_mask_8: 0.1506  m1_loss_dice_8: 1.28  m2_loss_ce: 0.516  m2_loss_mask: 0.1597  m2_loss_dice: 1.316  m2_loss_ce_0: 0.65  m2_loss_mask_0: 0.1815  m2_loss_dice_0: 1.519  m2_loss_ce_1: 0.6676  m2_loss_mask_1: 0.1678  m2_loss_dice_1: 1.463  m2_loss_ce_2: 0.6338  m2_loss_mask_2: 0.1619  m2_loss_dice_2: 1.368  m2_loss_ce_3: 0.5642  m2_loss_mask_3: 0.1611  m2_loss_dice_3: 1.371  m2_loss_ce_4: 0.551  m2_loss_mask_4: 0.1612  m2_loss_dice_4: 1.329  m2_loss_ce_5: 0.5638  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.5037  m2_loss_mask_6: 0.1627  m2_loss_dice_6: 1.338  m2_loss_ce_7: 0.5409  m2_loss_mask_7: 0.1593  m2_loss_dice_7: 1.334  m2_loss_ce_8: 0.5199  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.298    time: 1.4785  last_time: 1.3421  data_time: 0.0561  last_data_time: 0.0874   lr: 0.0001  max_mem: 35276M
[10/06 12:09:37] d2.utils.events INFO:  eta: 0:00:29  iter: 979  total_loss: 37.74  m1_loss_ce: 0.4394  m1_loss_mask: 0.1699  m1_loss_dice: 1.154  m1_loss_ce_0: 0.5295  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.359  m1_loss_ce_1: 0.589  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.3  m1_loss_ce_2: 0.5469  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.238  m1_loss_ce_3: 0.4869  m1_loss_mask_3: 0.1708  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4654  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.17  m1_loss_ce_5: 0.4333  m1_loss_mask_5: 0.1719  m1_loss_dice_5: 1.17  m1_loss_ce_6: 0.4246  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.152  m1_loss_ce_7: 0.4155  m1_loss_mask_7: 0.1704  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4405  m1_loss_mask_8: 0.168  m1_loss_dice_8: 1.171  m2_loss_ce: 0.4601  m2_loss_mask: 0.1638  m2_loss_dice: 1.204  m2_loss_ce_0: 0.5698  m2_loss_mask_0: 0.2  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6805  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.5895  m2_loss_mask_2: 0.1659  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5255  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5311  m2_loss_mask_4: 0.1656  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.4979  m2_loss_mask_5: 0.164  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.486  m2_loss_mask_6: 0.1641  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.5007  m2_loss_mask_7: 0.1653  m2_loss_dice_7: 1.199  m2_loss_ce_8: 0.4575  m2_loss_mask_8: 0.1635  m2_loss_dice_8: 1.235    time: 1.4785  last_time: 1.4709  data_time: 0.0546  last_data_time: 0.1112   lr: 0.0001  max_mem: 35276M
[10/06 12:10:07] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic/model_final.pth
[10/06 12:10:09] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 39.67  m1_loss_ce: 0.443  m1_loss_mask: 0.1521  m1_loss_dice: 1.256  m1_loss_ce_0: 0.5755  m1_loss_mask_0: 0.1718  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6377  m1_loss_mask_1: 0.1614  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.5687  m1_loss_mask_2: 0.1549  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5055  m1_loss_mask_3: 0.1537  m1_loss_dice_3: 1.236  m1_loss_ce_4: 0.4428  m1_loss_mask_4: 0.1529  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.4699  m1_loss_mask_5: 0.1529  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4773  m1_loss_mask_6: 0.1538  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4853  m1_loss_mask_7: 0.1529  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.447  m1_loss_mask_8: 0.1527  m1_loss_dice_8: 1.237  m2_loss_ce: 0.4938  m2_loss_mask: 0.1535  m2_loss_dice: 1.241  m2_loss_ce_0: 0.5909  m2_loss_mask_0: 0.1788  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6626  m2_loss_mask_1: 0.1656  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.5945  m2_loss_mask_2: 0.1549  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5384  m2_loss_mask_3: 0.1534  m2_loss_dice_3: 1.332  m2_loss_ce_4: 0.5906  m2_loss_mask_4: 0.1559  m2_loss_dice_4: 1.328  m2_loss_ce_5: 0.5208  m2_loss_mask_5: 0.1536  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.5091  m2_loss_mask_6: 0.151  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.5076  m2_loss_mask_7: 0.152  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.4921  m2_loss_mask_8: 0.1532  m2_loss_dice_8: 1.27    time: 1.4790  last_time: 1.5436  data_time: 0.0612  last_data_time: 0.0427   lr: 0.0001  max_mem: 35276M
[10/06 12:10:09] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:24:36 (1.4790 s / it)
[10/06 12:10:09] d2.engine.hooks INFO: Total training time: 0:24:43 (0:00:07 on hooks)
[10/06 12:10:09] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/06 12:10:09] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/06 12:10:09] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/06 12:10:09] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/06 12:10:09] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/06 12:11:38] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval5nv7poqe ...
[10/06 12:12:41] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.154 | 80.750 | 68.405 |      19       |
| Things | 45.731 | 79.998 | 57.133 |       8       |
| Stuff  | 63.734 | 81.297 | 76.602 |      11       |
[10/06 12:12:41] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.251 | 97.554 | 99.690 |     Stuff     |
| class_8  | 72.542 | 84.263 | 86.090 |     Stuff     |
| class_11 | 87.285 | 89.573 | 97.446 |     Stuff     |
| class_12 | 38.901 | 78.488 | 49.563 |     Stuff     |
| class_13 | 34.390 | 75.695 | 45.432 |     Stuff     |
| class_17 | 39.956 | 63.264 | 63.158 |     Stuff     |
| class_19 | 49.994 | 68.921 | 72.539 |     Stuff     |
| class_20 | 67.364 | 78.005 | 86.359 |     Stuff     |
| class_21 | 89.010 | 89.841 | 99.075 |     Stuff     |
| class_22 | 36.759 | 76.845 | 47.835 |     Stuff     |
| class_23 | 87.624 | 91.816 | 95.434 |     Stuff     |
| class_24 | 51.624 | 77.332 | 66.756 |    Things     |
| class_25 | 48.321 | 74.033 | 65.270 |    Things     |
| class_26 | 63.614 | 82.586 | 77.027 |    Things     |
| class_27 | 52.117 | 87.600 | 59.494 |    Things     |
| class_28 | 59.040 | 89.862 | 65.700 |    Things     |
| class_31 | 16.154 | 83.465 | 19.355 |    Things     |
| class_32 | 35.304 | 73.633 | 47.945 |    Things     |
| class_33 | 39.678 | 71.469 | 55.518 |    Things     |
[10/06 12:12:42] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/06 12:12:42] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/06 12:12:42] d2.evaluation.testing INFO: copypaste: 56.1541,80.7498,68.4045,45.7314,79.9975,57.1332,63.7342,81.2968,76.6018,97.2513,97.5540,99.6898,72.5421,84.2632,86.0898,87.2852,89.5726,97.4464,38.9009,78.4882,49.5627,34.3898,75.6950,45.4321,39.9563,63.2641,63.1579,49.9945,68.9210,72.5389,67.3639,78.0047,86.3588,89.0097,89.8407,99.0750,36.7590,76.8453,47.8351,87.6237,91.8163,95.4338,51.6235,77.3317,66.7560,48.3213,74.0328,65.2701,63.6140,82.5865,77.0272,52.1167,87.6005,59.4937,59.0397,89.8618,65.7005,16.1545,83.4649,19.3548,35.3035,73.6331,47.9452,39.6782,71.4690,55.5181
[10/06 18:32:08] detectron2 INFO: Rank of current process: 0. World size: 2
[10/06 18:32:09] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/06 18:32:09] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_harmonic.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/06 18:32:09] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_harmonic.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/06 18:32:09] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/06 18:32:09] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic/config.yaml
[10/06 18:32:09] d2.utils.env INFO: Using a generated random seed 11877224
[10/06 18:32:13] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 18:32:13] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/06 18:32:13] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/06 18:32:13] d2.data.build INFO: Using training sampler TrainingSampler
[10/06 18:32:13] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/06 18:32:13] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/06 18:32:13] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/06 18:32:13] d2.data.build INFO: Making batched data loader with batch_size=4
[10/06 18:32:13] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/06 18:32:17] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 18:32:17] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 18:32:17] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 18:32:20] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 18:32:20] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[10/06 18:32:56] d2.utils.events INFO:  eta: 0:23:51  iter: 19  total_loss: 39.74  m1_loss_ce: 0.4797  m1_loss_mask: 0.171  m1_loss_dice: 1.198  m1_loss_ce_0: 0.5809  m1_loss_mask_0: 0.2108  m1_loss_dice_0: 1.488  m1_loss_ce_1: 0.6585  m1_loss_mask_1: 0.1958  m1_loss_dice_1: 1.382  m1_loss_ce_2: 0.5845  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.496  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5032  m1_loss_mask_4: 0.1707  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.5033  m1_loss_mask_5: 0.1707  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.4749  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.4847  m1_loss_mask_7: 0.17  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4693  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.229  m2_loss_ce: 0.5055  m2_loss_mask: 0.1571  m2_loss_dice: 1.14  m2_loss_ce_0: 0.5946  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.503  m2_loss_ce_1: 0.6427  m2_loss_mask_1: 0.1764  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.5748  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.477  m2_loss_mask_3: 0.1598  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.481  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.4642  m2_loss_mask_5: 0.1573  m2_loss_dice_5: 1.21  m2_loss_ce_6: 0.472  m2_loss_mask_6: 0.1571  m2_loss_dice_6: 1.171  m2_loss_ce_7: 0.4762  m2_loss_mask_7: 0.1556  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.4963  m2_loss_mask_8: 0.1552  m2_loss_dice_8: 1.175    time: 1.4582  last_time: 1.3697  data_time: 0.2489  last_data_time: 0.0431   lr: 0.0001  max_mem: 33831M
[10/06 18:33:25] d2.utils.events INFO:  eta: 0:23:27  iter: 39  total_loss: 39.87  m1_loss_ce: 0.4753  m1_loss_mask: 0.1736  m1_loss_dice: 1.209  m1_loss_ce_0: 0.591  m1_loss_mask_0: 0.2136  m1_loss_dice_0: 1.453  m1_loss_ce_1: 0.6076  m1_loss_mask_1: 0.1902  m1_loss_dice_1: 1.421  m1_loss_ce_2: 0.5908  m1_loss_mask_2: 0.1854  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.4832  m1_loss_mask_3: 0.1788  m1_loss_dice_3: 1.287  m1_loss_ce_4: 0.4748  m1_loss_mask_4: 0.175  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.501  m1_loss_mask_5: 0.1779  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.4892  m1_loss_mask_6: 0.1748  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4684  m1_loss_mask_7: 0.1751  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.4751  m1_loss_mask_8: 0.1773  m1_loss_dice_8: 1.253  m2_loss_ce: 0.4901  m2_loss_mask: 0.1685  m2_loss_dice: 1.214  m2_loss_ce_0: 0.593  m2_loss_mask_0: 0.2018  m2_loss_dice_0: 1.42  m2_loss_ce_1: 0.646  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.6196  m2_loss_mask_2: 0.1687  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5381  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5303  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.5342  m2_loss_mask_5: 0.1692  m2_loss_dice_5: 1.204  m2_loss_ce_6: 0.5315  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.185  m2_loss_ce_7: 0.4843  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.161  m2_loss_ce_8: 0.4864  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.199    time: 1.4651  last_time: 1.3916  data_time: 0.0618  last_data_time: 0.0348   lr: 0.0001  max_mem: 33831M
[10/06 18:33:55] d2.utils.events INFO:  eta: 0:22:56  iter: 59  total_loss: 39.84  m1_loss_ce: 0.4776  m1_loss_mask: 0.1705  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5712  m1_loss_mask_0: 0.1942  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6185  m1_loss_mask_1: 0.1737  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.5748  m1_loss_mask_2: 0.1749  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5111  m1_loss_mask_3: 0.1809  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.4872  m1_loss_mask_4: 0.1724  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.477  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4741  m1_loss_mask_6: 0.1657  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.4573  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.211  m1_loss_ce_8: 0.4511  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.207  m2_loss_ce: 0.4845  m2_loss_mask: 0.1581  m2_loss_dice: 1.203  m2_loss_ce_0: 0.596  m2_loss_mask_0: 0.1908  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.6754  m2_loss_mask_1: 0.1633  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.5433  m2_loss_mask_2: 0.1602  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.5018  m2_loss_mask_3: 0.1611  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.5146  m2_loss_mask_4: 0.1612  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.5186  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4943  m2_loss_mask_6: 0.1568  m2_loss_dice_6: 1.189  m2_loss_ce_7: 0.4895  m2_loss_mask_7: 0.1584  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.4652  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.215    time: 1.4626  last_time: 1.5434  data_time: 0.0484  last_data_time: 0.0370   lr: 0.0001  max_mem: 33831M
[10/06 18:34:24] d2.utils.events INFO:  eta: 0:22:28  iter: 79  total_loss: 39.37  m1_loss_ce: 0.4444  m1_loss_mask: 0.1607  m1_loss_dice: 1.234  m1_loss_ce_0: 0.5424  m1_loss_mask_0: 0.1881  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.6133  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.5425  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.4966  m1_loss_mask_3: 0.1667  m1_loss_dice_3: 1.224  m1_loss_ce_4: 0.4634  m1_loss_mask_4: 0.1637  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.4903  m1_loss_mask_5: 0.1617  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.4224  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.228  m1_loss_ce_7: 0.4335  m1_loss_mask_7: 0.1607  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.4344  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4803  m2_loss_mask: 0.1647  m2_loss_dice: 1.221  m2_loss_ce_0: 0.5442  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6131  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.5645  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.489  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.244  m2_loss_ce_4: 0.4911  m2_loss_mask_4: 0.1678  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.4748  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.4569  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.4571  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4551  m2_loss_mask_8: 0.166  m2_loss_dice_8: 1.215    time: 1.4641  last_time: 1.5430  data_time: 0.0499  last_data_time: 0.0432   lr: 0.0001  max_mem: 33831M
[10/06 18:34:53] d2.utils.events INFO:  eta: 0:21:57  iter: 99  total_loss: 40.99  m1_loss_ce: 0.4825  m1_loss_mask: 0.1862  m1_loss_dice: 1.199  m1_loss_ce_0: 0.6251  m1_loss_mask_0: 0.2081  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.6884  m1_loss_mask_1: 0.1958  m1_loss_dice_1: 1.395  m1_loss_ce_2: 0.6275  m1_loss_mask_2: 0.1887  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5461  m1_loss_mask_3: 0.1845  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.5288  m1_loss_mask_4: 0.1841  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.5329  m1_loss_mask_5: 0.1853  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.5152  m1_loss_mask_6: 0.1886  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.4981  m1_loss_mask_7: 0.1858  m1_loss_dice_7: 1.234  m1_loss_ce_8: 0.5185  m1_loss_mask_8: 0.1871  m1_loss_dice_8: 1.245  m2_loss_ce: 0.4962  m2_loss_mask: 0.1762  m2_loss_dice: 1.217  m2_loss_ce_0: 0.5982  m2_loss_mask_0: 0.2124  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6679  m2_loss_mask_1: 0.1885  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.5796  m2_loss_mask_2: 0.1843  m2_loss_dice_2: 1.304  m2_loss_ce_3: 0.5522  m2_loss_mask_3: 0.1813  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.5371  m2_loss_mask_4: 0.18  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.523  m2_loss_mask_5: 0.1801  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5168  m2_loss_mask_6: 0.1783  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5272  m2_loss_mask_7: 0.1795  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.5117  m2_loss_mask_8: 0.1783  m2_loss_dice_8: 1.231    time: 1.4616  last_time: 1.3310  data_time: 0.0625  last_data_time: 0.0847   lr: 0.0001  max_mem: 33831M
[10/06 18:35:23] d2.utils.events INFO:  eta: 0:21:30  iter: 119  total_loss: 41.05  m1_loss_ce: 0.4945  m1_loss_mask: 0.1691  m1_loss_dice: 1.3  m1_loss_ce_0: 0.5927  m1_loss_mask_0: 0.2079  m1_loss_dice_0: 1.503  m1_loss_ce_1: 0.6318  m1_loss_mask_1: 0.1859  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.5965  m1_loss_mask_2: 0.1775  m1_loss_dice_2: 1.387  m1_loss_ce_3: 0.5413  m1_loss_mask_3: 0.1714  m1_loss_dice_3: 1.303  m1_loss_ce_4: 0.5003  m1_loss_mask_4: 0.1699  m1_loss_dice_4: 1.329  m1_loss_ce_5: 0.5282  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.267  m1_loss_ce_6: 0.4891  m1_loss_mask_6: 0.1701  m1_loss_dice_6: 1.264  m1_loss_ce_7: 0.5221  m1_loss_mask_7: 0.1704  m1_loss_dice_7: 1.326  m1_loss_ce_8: 0.5084  m1_loss_mask_8: 0.1682  m1_loss_dice_8: 1.3  m2_loss_ce: 0.5129  m2_loss_mask: 0.1734  m2_loss_dice: 1.259  m2_loss_ce_0: 0.6181  m2_loss_mask_0: 0.2052  m2_loss_dice_0: 1.529  m2_loss_ce_1: 0.6538  m2_loss_mask_1: 0.1913  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.6277  m2_loss_mask_2: 0.18  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5897  m2_loss_mask_3: 0.1746  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5606  m2_loss_mask_4: 0.1787  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5098  m2_loss_mask_5: 0.1771  m2_loss_dice_5: 1.289  m2_loss_ce_6: 0.5026  m2_loss_mask_6: 0.1745  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.5265  m2_loss_mask_7: 0.1744  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.5306  m2_loss_mask_8: 0.173  m2_loss_dice_8: 1.288    time: 1.4636  last_time: 1.5092  data_time: 0.0543  last_data_time: 0.0549   lr: 0.0001  max_mem: 33985M
[10/06 18:35:52] d2.utils.events INFO:  eta: 0:20:59  iter: 139  total_loss: 41.86  m1_loss_ce: 0.4891  m1_loss_mask: 0.1633  m1_loss_dice: 1.31  m1_loss_ce_0: 0.6071  m1_loss_mask_0: 0.1995  m1_loss_dice_0: 1.513  m1_loss_ce_1: 0.6492  m1_loss_mask_1: 0.1821  m1_loss_dice_1: 1.436  m1_loss_ce_2: 0.5939  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.377  m1_loss_ce_3: 0.5562  m1_loss_mask_3: 0.1661  m1_loss_dice_3: 1.339  m1_loss_ce_4: 0.5277  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.34  m1_loss_ce_5: 0.522  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.31  m1_loss_ce_6: 0.4687  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.304  m1_loss_ce_7: 0.49  m1_loss_mask_7: 0.1643  m1_loss_dice_7: 1.302  m1_loss_ce_8: 0.5016  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.296  m2_loss_ce: 0.5389  m2_loss_mask: 0.1627  m2_loss_dice: 1.313  m2_loss_ce_0: 0.593  m2_loss_mask_0: 0.19  m2_loss_dice_0: 1.547  m2_loss_ce_1: 0.6727  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.454  m2_loss_ce_2: 0.619  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.406  m2_loss_ce_3: 0.5714  m2_loss_mask_3: 0.1622  m2_loss_dice_3: 1.351  m2_loss_ce_4: 0.547  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.339  m2_loss_ce_5: 0.5265  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.354  m2_loss_ce_6: 0.5068  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.333  m2_loss_ce_7: 0.5249  m2_loss_mask_7: 0.1641  m2_loss_dice_7: 1.315  m2_loss_ce_8: 0.5455  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.343    time: 1.4600  last_time: 1.3351  data_time: 0.0539  last_data_time: 0.0411   lr: 0.0001  max_mem: 34728M
[10/06 18:36:21] d2.utils.events INFO:  eta: 0:20:29  iter: 159  total_loss: 40.7  m1_loss_ce: 0.5042  m1_loss_mask: 0.1711  m1_loss_dice: 1.24  m1_loss_ce_0: 0.5978  m1_loss_mask_0: 0.1935  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6564  m1_loss_mask_1: 0.1775  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5975  m1_loss_mask_2: 0.1734  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5705  m1_loss_mask_3: 0.1698  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.5318  m1_loss_mask_4: 0.1731  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.5212  m1_loss_mask_5: 0.1713  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.512  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.477  m1_loss_mask_7: 0.1737  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4994  m1_loss_mask_8: 0.1707  m1_loss_dice_8: 1.227  m2_loss_ce: 0.513  m2_loss_mask: 0.1669  m2_loss_dice: 1.227  m2_loss_ce_0: 0.6644  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6891  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.6312  m2_loss_mask_2: 0.1679  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5406  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.5475  m2_loss_mask_4: 0.1681  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.5451  m2_loss_mask_5: 0.1706  m2_loss_dice_5: 1.222  m2_loss_ce_6: 0.5501  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.225  m2_loss_ce_7: 0.4993  m2_loss_mask_7: 0.1709  m2_loss_dice_7: 1.195  m2_loss_ce_8: 0.5027  m2_loss_mask_8: 0.1685  m2_loss_dice_8: 1.21    time: 1.4614  last_time: 1.4488  data_time: 0.0622  last_data_time: 0.0445   lr: 0.0001  max_mem: 34728M
[10/06 18:36:51] d2.utils.events INFO:  eta: 0:20:00  iter: 179  total_loss: 38.94  m1_loss_ce: 0.4608  m1_loss_mask: 0.1547  m1_loss_dice: 1.224  m1_loss_ce_0: 0.551  m1_loss_mask_0: 0.1839  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.6147  m1_loss_mask_1: 0.1652  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.5707  m1_loss_mask_2: 0.16  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5181  m1_loss_mask_3: 0.1587  m1_loss_dice_3: 1.268  m1_loss_ce_4: 0.4828  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.4631  m1_loss_mask_5: 0.1556  m1_loss_dice_5: 1.246  m1_loss_ce_6: 0.4623  m1_loss_mask_6: 0.1572  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.4485  m1_loss_mask_7: 0.1564  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4557  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.217  m2_loss_ce: 0.4719  m2_loss_mask: 0.1504  m2_loss_dice: 1.21  m2_loss_ce_0: 0.5709  m2_loss_mask_0: 0.1826  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6597  m2_loss_mask_1: 0.1628  m2_loss_dice_1: 1.381  m2_loss_ce_2: 0.5979  m2_loss_mask_2: 0.1548  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5311  m2_loss_mask_3: 0.1547  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5084  m2_loss_mask_4: 0.1525  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5098  m2_loss_mask_5: 0.1498  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.477  m2_loss_mask_6: 0.1514  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.4861  m2_loss_mask_7: 0.1515  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4848  m2_loss_mask_8: 0.1487  m2_loss_dice_8: 1.206    time: 1.4623  last_time: 1.4692  data_time: 0.0504  last_data_time: 0.0695   lr: 0.0001  max_mem: 34728M
[10/06 18:37:20] d2.utils.events INFO:  eta: 0:19:31  iter: 199  total_loss: 38.86  m1_loss_ce: 0.5282  m1_loss_mask: 0.1708  m1_loss_dice: 1.131  m1_loss_ce_0: 0.6045  m1_loss_mask_0: 0.2032  m1_loss_dice_0: 1.37  m1_loss_ce_1: 0.6738  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.588  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.5497  m1_loss_mask_3: 0.1719  m1_loss_dice_3: 1.182  m1_loss_ce_4: 0.5  m1_loss_mask_4: 0.1712  m1_loss_dice_4: 1.178  m1_loss_ce_5: 0.5197  m1_loss_mask_5: 0.1708  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4858  m1_loss_mask_6: 0.1708  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.4907  m1_loss_mask_7: 0.1718  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.5033  m1_loss_mask_8: 0.1709  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4932  m2_loss_mask: 0.1671  m2_loss_dice: 1.164  m2_loss_ce_0: 0.5781  m2_loss_mask_0: 0.2013  m2_loss_dice_0: 1.345  m2_loss_ce_1: 0.6684  m2_loss_mask_1: 0.1757  m2_loss_dice_1: 1.233  m2_loss_ce_2: 0.5912  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5451  m2_loss_mask_3: 0.1689  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.5133  m2_loss_mask_4: 0.1715  m2_loss_dice_4: 1.164  m2_loss_ce_5: 0.526  m2_loss_mask_5: 0.1685  m2_loss_dice_5: 1.172  m2_loss_ce_6: 0.4964  m2_loss_mask_6: 0.1702  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.4968  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.4867  m2_loss_mask_8: 0.1694  m2_loss_dice_8: 1.154    time: 1.4609  last_time: 1.3459  data_time: 0.0563  last_data_time: 0.0483   lr: 0.0001  max_mem: 34728M
[10/06 18:37:50] d2.utils.events INFO:  eta: 0:19:02  iter: 219  total_loss: 39.06  m1_loss_ce: 0.4761  m1_loss_mask: 0.1775  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5502  m1_loss_mask_0: 0.1988  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.64  m1_loss_mask_1: 0.1858  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.5389  m1_loss_mask_2: 0.182  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5075  m1_loss_mask_3: 0.1831  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4644  m1_loss_mask_4: 0.1807  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4791  m1_loss_mask_5: 0.1753  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.459  m1_loss_mask_6: 0.1759  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.437  m1_loss_mask_7: 0.1762  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.458  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.216  m2_loss_ce: 0.4765  m2_loss_mask: 0.1751  m2_loss_dice: 1.215  m2_loss_ce_0: 0.5197  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.6041  m2_loss_mask_1: 0.1837  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.5962  m2_loss_mask_2: 0.1777  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.5053  m2_loss_mask_3: 0.1774  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.492  m2_loss_mask_4: 0.18  m2_loss_dice_4: 1.226  m2_loss_ce_5: 0.4998  m2_loss_mask_5: 0.1771  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.4802  m2_loss_mask_6: 0.1765  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4623  m2_loss_mask_7: 0.1766  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.4706  m2_loss_mask_8: 0.1762  m2_loss_dice_8: 1.211    time: 1.4639  last_time: 1.5268  data_time: 0.0506  last_data_time: 0.0623   lr: 0.0001  max_mem: 34728M
[10/06 18:38:19] d2.utils.events INFO:  eta: 0:18:34  iter: 239  total_loss: 40.63  m1_loss_ce: 0.5099  m1_loss_mask: 0.1693  m1_loss_dice: 1.218  m1_loss_ce_0: 0.6146  m1_loss_mask_0: 0.1937  m1_loss_dice_0: 1.505  m1_loss_ce_1: 0.6558  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.6467  m1_loss_mask_2: 0.174  m1_loss_dice_2: 1.353  m1_loss_ce_3: 0.5693  m1_loss_mask_3: 0.1726  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.5431  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.5184  m1_loss_mask_5: 0.1723  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.5444  m1_loss_mask_6: 0.1717  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.5112  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.234  m1_loss_ce_8: 0.5437  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.252  m2_loss_ce: 0.5171  m2_loss_mask: 0.1657  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6395  m2_loss_mask_0: 0.1955  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.7056  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.633  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5614  m2_loss_mask_3: 0.171  m2_loss_dice_3: 1.307  m2_loss_ce_4: 0.5509  m2_loss_mask_4: 0.171  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5358  m2_loss_mask_5: 0.1692  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.5237  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.516  m2_loss_mask_7: 0.168  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.5248  m2_loss_mask_8: 0.168  m2_loss_dice_8: 1.229    time: 1.4646  last_time: 1.4495  data_time: 0.0670  last_data_time: 0.0649   lr: 0.0001  max_mem: 34728M
[10/06 18:38:49] d2.utils.events INFO:  eta: 0:18:06  iter: 259  total_loss: 38.27  m1_loss_ce: 0.4695  m1_loss_mask: 0.1771  m1_loss_dice: 1.176  m1_loss_ce_0: 0.5758  m1_loss_mask_0: 0.2089  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.5905  m1_loss_mask_1: 0.1835  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5383  m1_loss_mask_2: 0.1822  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.4736  m1_loss_mask_3: 0.1815  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.4617  m1_loss_mask_4: 0.1811  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.4739  m1_loss_mask_5: 0.1796  m1_loss_dice_5: 1.209  m1_loss_ce_6: 0.4668  m1_loss_mask_6: 0.1786  m1_loss_dice_6: 1.127  m1_loss_ce_7: 0.4601  m1_loss_mask_7: 0.1785  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.4629  m1_loss_mask_8: 0.1775  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4579  m2_loss_mask: 0.1736  m2_loss_dice: 1.203  m2_loss_ce_0: 0.5587  m2_loss_mask_0: 0.2012  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.5914  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.312  m2_loss_ce_2: 0.555  m2_loss_mask_2: 0.1788  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5252  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.5019  m2_loss_mask_4: 0.1763  m2_loss_dice_4: 1.211  m2_loss_ce_5: 0.4741  m2_loss_mask_5: 0.1768  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4746  m2_loss_mask_6: 0.1741  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.4544  m2_loss_mask_7: 0.1728  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4496  m2_loss_mask_8: 0.1735  m2_loss_dice_8: 1.233    time: 1.4653  last_time: 1.4688  data_time: 0.0590  last_data_time: 0.0461   lr: 0.0001  max_mem: 34728M
[10/06 18:39:18] d2.utils.events INFO:  eta: 0:17:38  iter: 279  total_loss: 41.02  m1_loss_ce: 0.5177  m1_loss_mask: 0.1517  m1_loss_dice: 1.289  m1_loss_ce_0: 0.6488  m1_loss_mask_0: 0.1751  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.6697  m1_loss_mask_1: 0.161  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.617  m1_loss_mask_2: 0.1551  m1_loss_dice_2: 1.347  m1_loss_ce_3: 0.5754  m1_loss_mask_3: 0.1529  m1_loss_dice_3: 1.292  m1_loss_ce_4: 0.5255  m1_loss_mask_4: 0.1528  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.5377  m1_loss_mask_5: 0.1538  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.5026  m1_loss_mask_6: 0.154  m1_loss_dice_6: 1.3  m1_loss_ce_7: 0.502  m1_loss_mask_7: 0.1516  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.4743  m1_loss_mask_8: 0.1504  m1_loss_dice_8: 1.252  m2_loss_ce: 0.5297  m2_loss_mask: 0.1497  m2_loss_dice: 1.288  m2_loss_ce_0: 0.6293  m2_loss_mask_0: 0.1832  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.6644  m2_loss_mask_1: 0.1675  m2_loss_dice_1: 1.464  m2_loss_ce_2: 0.6684  m2_loss_mask_2: 0.1534  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.5576  m2_loss_mask_3: 0.1536  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.5502  m2_loss_mask_4: 0.1562  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.5584  m2_loss_mask_5: 0.1511  m2_loss_dice_5: 1.302  m2_loss_ce_6: 0.5452  m2_loss_mask_6: 0.1516  m2_loss_dice_6: 1.299  m2_loss_ce_7: 0.5124  m2_loss_mask_7: 0.151  m2_loss_dice_7: 1.298  m2_loss_ce_8: 0.5432  m2_loss_mask_8: 0.1484  m2_loss_dice_8: 1.286    time: 1.4664  last_time: 1.5170  data_time: 0.0609  last_data_time: 0.0405   lr: 0.0001  max_mem: 34728M
[10/06 18:39:48] d2.utils.events INFO:  eta: 0:17:08  iter: 299  total_loss: 41.91  m1_loss_ce: 0.4856  m1_loss_mask: 0.1585  m1_loss_dice: 1.289  m1_loss_ce_0: 0.6016  m1_loss_mask_0: 0.1869  m1_loss_dice_0: 1.535  m1_loss_ce_1: 0.6529  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.457  m1_loss_ce_2: 0.5933  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.389  m1_loss_ce_3: 0.5525  m1_loss_mask_3: 0.1662  m1_loss_dice_3: 1.346  m1_loss_ce_4: 0.5459  m1_loss_mask_4: 0.165  m1_loss_dice_4: 1.344  m1_loss_ce_5: 0.5166  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.333  m1_loss_ce_6: 0.4682  m1_loss_mask_6: 0.1604  m1_loss_dice_6: 1.339  m1_loss_ce_7: 0.4859  m1_loss_mask_7: 0.158  m1_loss_dice_7: 1.329  m1_loss_ce_8: 0.482  m1_loss_mask_8: 0.1607  m1_loss_dice_8: 1.318  m2_loss_ce: 0.4949  m2_loss_mask: 0.1594  m2_loss_dice: 1.385  m2_loss_ce_0: 0.5939  m2_loss_mask_0: 0.1924  m2_loss_dice_0: 1.556  m2_loss_ce_1: 0.6734  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.436  m2_loss_ce_2: 0.6205  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.361  m2_loss_ce_3: 0.5729  m2_loss_mask_3: 0.1594  m2_loss_dice_3: 1.342  m2_loss_ce_4: 0.5678  m2_loss_mask_4: 0.1633  m2_loss_dice_4: 1.341  m2_loss_ce_5: 0.5418  m2_loss_mask_5: 0.1598  m2_loss_dice_5: 1.365  m2_loss_ce_6: 0.5306  m2_loss_mask_6: 0.1607  m2_loss_dice_6: 1.335  m2_loss_ce_7: 0.5287  m2_loss_mask_7: 0.1586  m2_loss_dice_7: 1.305  m2_loss_ce_8: 0.5213  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.337    time: 1.4662  last_time: 1.5286  data_time: 0.0613  last_data_time: 0.0395   lr: 0.0001  max_mem: 34728M
[10/06 18:40:17] d2.utils.events INFO:  eta: 0:16:39  iter: 319  total_loss: 40.01  m1_loss_ce: 0.4947  m1_loss_mask: 0.1754  m1_loss_dice: 1.231  m1_loss_ce_0: 0.5873  m1_loss_mask_0: 0.2005  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6009  m1_loss_mask_1: 0.1927  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.5555  m1_loss_mask_2: 0.1856  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.5077  m1_loss_mask_3: 0.1791  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4709  m1_loss_mask_4: 0.1791  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.4854  m1_loss_mask_5: 0.1735  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.4546  m1_loss_mask_6: 0.1742  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.4741  m1_loss_mask_7: 0.1756  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.4681  m1_loss_mask_8: 0.1734  m1_loss_dice_8: 1.21  m2_loss_ce: 0.5155  m2_loss_mask: 0.1676  m2_loss_dice: 1.201  m2_loss_ce_0: 0.5838  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.617  m2_loss_mask_1: 0.1842  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.5871  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.247  m2_loss_ce_3: 0.5441  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.5045  m2_loss_mask_4: 0.172  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.5014  m2_loss_mask_5: 0.1721  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.4958  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4969  m2_loss_mask_7: 0.1708  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.4682  m2_loss_mask_8: 0.1709  m2_loss_dice_8: 1.21    time: 1.4663  last_time: 1.4464  data_time: 0.0592  last_data_time: 0.0398   lr: 0.0001  max_mem: 35751M
[10/06 18:40:47] d2.utils.events INFO:  eta: 0:16:11  iter: 339  total_loss: 41.8  m1_loss_ce: 0.474  m1_loss_mask: 0.1666  m1_loss_dice: 1.265  m1_loss_ce_0: 0.5908  m1_loss_mask_0: 0.1944  m1_loss_dice_0: 1.48  m1_loss_ce_1: 0.6409  m1_loss_mask_1: 0.1836  m1_loss_dice_1: 1.421  m1_loss_ce_2: 0.575  m1_loss_mask_2: 0.1717  m1_loss_dice_2: 1.374  m1_loss_ce_3: 0.5348  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.295  m1_loss_ce_4: 0.5009  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.303  m1_loss_ce_5: 0.5092  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.314  m1_loss_ce_6: 0.5056  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.265  m1_loss_ce_7: 0.4695  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.273  m1_loss_ce_8: 0.4941  m1_loss_mask_8: 0.1676  m1_loss_dice_8: 1.281  m2_loss_ce: 0.4859  m2_loss_mask: 0.1649  m2_loss_dice: 1.272  m2_loss_ce_0: 0.6124  m2_loss_mask_0: 0.195  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.6953  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.453  m2_loss_ce_2: 0.6114  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.396  m2_loss_ce_3: 0.5419  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.339  m2_loss_ce_4: 0.5361  m2_loss_mask_4: 0.1672  m2_loss_dice_4: 1.332  m2_loss_ce_5: 0.539  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4928  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.5204  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.303  m2_loss_ce_8: 0.5054  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.306    time: 1.4665  last_time: 1.4926  data_time: 0.0628  last_data_time: 0.0475   lr: 0.0001  max_mem: 35751M
[10/06 18:41:16] d2.utils.events INFO:  eta: 0:15:40  iter: 359  total_loss: 40.65  m1_loss_ce: 0.5399  m1_loss_mask: 0.1669  m1_loss_dice: 1.226  m1_loss_ce_0: 0.5987  m1_loss_mask_0: 0.1896  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.669  m1_loss_mask_1: 0.1746  m1_loss_dice_1: 1.374  m1_loss_ce_2: 0.5795  m1_loss_mask_2: 0.1673  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5985  m1_loss_mask_3: 0.1674  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.5197  m1_loss_mask_4: 0.1672  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.5087  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.515  m1_loss_mask_6: 0.1662  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.5336  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.5316  m1_loss_mask_8: 0.1672  m1_loss_dice_8: 1.218  m2_loss_ce: 0.5276  m2_loss_mask: 0.1664  m2_loss_dice: 1.252  m2_loss_ce_0: 0.6254  m2_loss_mask_0: 0.1888  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.6392  m2_loss_mask_1: 0.1728  m2_loss_dice_1: 1.421  m2_loss_ce_2: 0.6124  m2_loss_mask_2: 0.1625  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5888  m2_loss_mask_3: 0.167  m2_loss_dice_3: 1.306  m2_loss_ce_4: 0.5619  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5113  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.5293  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.5223  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5247  m2_loss_mask_8: 0.1654  m2_loss_dice_8: 1.275    time: 1.4647  last_time: 1.4643  data_time: 0.0561  last_data_time: 0.0751   lr: 0.0001  max_mem: 35751M
[10/06 18:41:45] d2.utils.events INFO:  eta: 0:15:11  iter: 379  total_loss: 41.47  m1_loss_ce: 0.5187  m1_loss_mask: 0.155  m1_loss_dice: 1.283  m1_loss_ce_0: 0.5759  m1_loss_mask_0: 0.1816  m1_loss_dice_0: 1.499  m1_loss_ce_1: 0.6555  m1_loss_mask_1: 0.1683  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.6098  m1_loss_mask_2: 0.1616  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5505  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.29  m1_loss_ce_4: 0.5287  m1_loss_mask_4: 0.1573  m1_loss_dice_4: 1.298  m1_loss_ce_5: 0.5255  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.5092  m1_loss_mask_6: 0.1537  m1_loss_dice_6: 1.289  m1_loss_ce_7: 0.4676  m1_loss_mask_7: 0.1557  m1_loss_dice_7: 1.279  m1_loss_ce_8: 0.4967  m1_loss_mask_8: 0.1546  m1_loss_dice_8: 1.281  m2_loss_ce: 0.5067  m2_loss_mask: 0.1509  m2_loss_dice: 1.305  m2_loss_ce_0: 0.6321  m2_loss_mask_0: 0.1882  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6637  m2_loss_mask_1: 0.1583  m2_loss_dice_1: 1.453  m2_loss_ce_2: 0.6309  m2_loss_mask_2: 0.1519  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.5432  m2_loss_mask_3: 0.1525  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5472  m2_loss_mask_4: 0.1536  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.5364  m2_loss_mask_5: 0.1521  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.5015  m2_loss_mask_6: 0.1498  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5253  m2_loss_mask_7: 0.1505  m2_loss_dice_7: 1.281  m2_loss_ce_8: 0.5025  m2_loss_mask_8: 0.1514  m2_loss_dice_8: 1.302    time: 1.4655  last_time: 1.4001  data_time: 0.0589  last_data_time: 0.0515   lr: 0.0001  max_mem: 35751M
[10/06 18:42:16] d2.utils.events INFO:  eta: 0:14:43  iter: 399  total_loss: 40.52  m1_loss_ce: 0.4782  m1_loss_mask: 0.1568  m1_loss_dice: 1.232  m1_loss_ce_0: 0.5545  m1_loss_mask_0: 0.1862  m1_loss_dice_0: 1.506  m1_loss_ce_1: 0.6234  m1_loss_mask_1: 0.165  m1_loss_dice_1: 1.424  m1_loss_ce_2: 0.5968  m1_loss_mask_2: 0.1613  m1_loss_dice_2: 1.325  m1_loss_ce_3: 0.5212  m1_loss_mask_3: 0.1599  m1_loss_dice_3: 1.281  m1_loss_ce_4: 0.4843  m1_loss_mask_4: 0.1592  m1_loss_dice_4: 1.322  m1_loss_ce_5: 0.4668  m1_loss_mask_5: 0.1582  m1_loss_dice_5: 1.291  m1_loss_ce_6: 0.4955  m1_loss_mask_6: 0.1581  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.493  m1_loss_mask_7: 0.1562  m1_loss_dice_7: 1.266  m1_loss_ce_8: 0.4932  m1_loss_mask_8: 0.1566  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4935  m2_loss_mask: 0.1591  m2_loss_dice: 1.298  m2_loss_ce_0: 0.5999  m2_loss_mask_0: 0.1904  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.6116  m2_loss_mask_1: 0.1719  m2_loss_dice_1: 1.423  m2_loss_ce_2: 0.5906  m2_loss_mask_2: 0.1667  m2_loss_dice_2: 1.375  m2_loss_ce_3: 0.575  m2_loss_mask_3: 0.1653  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.531  m2_loss_mask_4: 0.1642  m2_loss_dice_4: 1.318  m2_loss_ce_5: 0.5448  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.307  m2_loss_ce_6: 0.4809  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5063  m2_loss_mask_7: 0.1601  m2_loss_dice_7: 1.305  m2_loss_ce_8: 0.5068  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.301    time: 1.4676  last_time: 1.4732  data_time: 0.0703  last_data_time: 0.0410   lr: 0.0001  max_mem: 35751M
[10/06 18:42:46] d2.utils.events INFO:  eta: 0:14:14  iter: 419  total_loss: 38.49  m1_loss_ce: 0.4545  m1_loss_mask: 0.1652  m1_loss_dice: 1.154  m1_loss_ce_0: 0.5884  m1_loss_mask_0: 0.1948  m1_loss_dice_0: 1.389  m1_loss_ce_1: 0.5957  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.284  m1_loss_ce_2: 0.5663  m1_loss_mask_2: 0.1672  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.4826  m1_loss_mask_3: 0.1654  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.4714  m1_loss_mask_4: 0.1662  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4599  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.4549  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.4344  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.162  m1_loss_ce_8: 0.451  m1_loss_mask_8: 0.1648  m1_loss_dice_8: 1.158  m2_loss_ce: 0.4746  m2_loss_mask: 0.1704  m2_loss_dice: 1.221  m2_loss_ce_0: 0.5772  m2_loss_mask_0: 0.1965  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6588  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.313  m2_loss_ce_2: 0.6051  m2_loss_mask_2: 0.1741  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.5206  m2_loss_mask_3: 0.174  m2_loss_dice_3: 1.204  m2_loss_ce_4: 0.487  m2_loss_mask_4: 0.1732  m2_loss_dice_4: 1.224  m2_loss_ce_5: 0.4963  m2_loss_mask_5: 0.1717  m2_loss_dice_5: 1.199  m2_loss_ce_6: 0.4877  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.198  m2_loss_ce_7: 0.4778  m2_loss_mask_7: 0.1682  m2_loss_dice_7: 1.185  m2_loss_ce_8: 0.4572  m2_loss_mask_8: 0.1707  m2_loss_dice_8: 1.192    time: 1.4687  last_time: 1.5226  data_time: 0.0645  last_data_time: 0.0666   lr: 0.0001  max_mem: 35751M
[10/06 18:43:15] d2.utils.events INFO:  eta: 0:13:46  iter: 439  total_loss: 39.41  m1_loss_ce: 0.4638  m1_loss_mask: 0.1514  m1_loss_dice: 1.238  m1_loss_ce_0: 0.5502  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.481  m1_loss_ce_1: 0.6097  m1_loss_mask_1: 0.1656  m1_loss_dice_1: 1.391  m1_loss_ce_2: 0.5418  m1_loss_mask_2: 0.1579  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.4849  m1_loss_mask_3: 0.1553  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.4855  m1_loss_mask_4: 0.1525  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4452  m1_loss_mask_5: 0.1534  m1_loss_dice_5: 1.25  m1_loss_ce_6: 0.4798  m1_loss_mask_6: 0.1537  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.4455  m1_loss_mask_7: 0.1512  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.4356  m1_loss_mask_8: 0.1501  m1_loss_dice_8: 1.216  m2_loss_ce: 0.458  m2_loss_mask: 0.1506  m2_loss_dice: 1.249  m2_loss_ce_0: 0.5676  m2_loss_mask_0: 0.1825  m2_loss_dice_0: 1.492  m2_loss_ce_1: 0.6332  m2_loss_mask_1: 0.1658  m2_loss_dice_1: 1.429  m2_loss_ce_2: 0.5813  m2_loss_mask_2: 0.1575  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.534  m2_loss_mask_3: 0.1568  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.4885  m2_loss_mask_4: 0.1545  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.484  m2_loss_mask_5: 0.154  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.4851  m2_loss_mask_6: 0.1547  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.4668  m2_loss_mask_7: 0.1553  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.4646  m2_loss_mask_8: 0.1548  m2_loss_dice_8: 1.257    time: 1.4696  last_time: 1.4919  data_time: 0.0517  last_data_time: 0.0385   lr: 0.0001  max_mem: 35751M
[10/06 18:43:45] d2.utils.events INFO:  eta: 0:13:16  iter: 459  total_loss: 39.65  m1_loss_ce: 0.4261  m1_loss_mask: 0.1635  m1_loss_dice: 1.218  m1_loss_ce_0: 0.5611  m1_loss_mask_0: 0.1861  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.5815  m1_loss_mask_1: 0.1718  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5231  m1_loss_mask_2: 0.1632  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.4943  m1_loss_mask_3: 0.1658  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4557  m1_loss_mask_4: 0.1651  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.4604  m1_loss_mask_5: 0.1615  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.4545  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.212  m1_loss_ce_7: 0.4604  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.4555  m1_loss_mask_8: 0.1629  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4749  m2_loss_mask: 0.1599  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6212  m2_loss_mask_0: 0.1811  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6602  m2_loss_mask_1: 0.1715  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.6123  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.337  m2_loss_ce_3: 0.5358  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.4972  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.322  m2_loss_ce_5: 0.5106  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4937  m2_loss_mask_6: 0.1619  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.4833  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.481  m2_loss_mask_8: 0.159  m2_loss_dice_8: 1.245    time: 1.4697  last_time: 1.3058  data_time: 0.0524  last_data_time: 0.0483   lr: 0.0001  max_mem: 35751M
[10/06 18:44:15] d2.utils.events INFO:  eta: 0:12:47  iter: 479  total_loss: 37.84  m1_loss_ce: 0.4203  m1_loss_mask: 0.1624  m1_loss_dice: 1.139  m1_loss_ce_0: 0.5346  m1_loss_mask_0: 0.1822  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.5816  m1_loss_mask_1: 0.1734  m1_loss_dice_1: 1.302  m1_loss_ce_2: 0.5232  m1_loss_mask_2: 0.1637  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.4756  m1_loss_mask_3: 0.1642  m1_loss_dice_3: 1.191  m1_loss_ce_4: 0.4196  m1_loss_mask_4: 0.1642  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4447  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.186  m1_loss_ce_6: 0.4299  m1_loss_mask_6: 0.164  m1_loss_dice_6: 1.153  m1_loss_ce_7: 0.4167  m1_loss_mask_7: 0.1622  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.4211  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.143  m2_loss_ce: 0.4803  m2_loss_mask: 0.1599  m2_loss_dice: 1.171  m2_loss_ce_0: 0.5695  m2_loss_mask_0: 0.1857  m2_loss_dice_0: 1.423  m2_loss_ce_1: 0.5886  m2_loss_mask_1: 0.1631  m2_loss_dice_1: 1.329  m2_loss_ce_2: 0.581  m2_loss_mask_2: 0.1614  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.4947  m2_loss_mask_3: 0.1625  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.5028  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.4976  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.195  m2_loss_ce_6: 0.4758  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.184  m2_loss_ce_7: 0.4885  m2_loss_mask_7: 0.1594  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.4805  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.166    time: 1.4711  last_time: 1.4365  data_time: 0.0597  last_data_time: 0.0426   lr: 0.0001  max_mem: 35751M
[10/06 18:44:45] d2.utils.events INFO:  eta: 0:12:18  iter: 499  total_loss: 40.79  m1_loss_ce: 0.4983  m1_loss_mask: 0.1721  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5808  m1_loss_mask_0: 0.2078  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.6614  m1_loss_mask_1: 0.1865  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5808  m1_loss_mask_2: 0.1802  m1_loss_dice_2: 1.268  m1_loss_ce_3: 0.5224  m1_loss_mask_3: 0.1745  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5187  m1_loss_mask_4: 0.1746  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5196  m1_loss_mask_5: 0.1711  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.4862  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4721  m1_loss_mask_7: 0.1705  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4806  m1_loss_mask_8: 0.1738  m1_loss_dice_8: 1.227  m2_loss_ce: 0.5162  m2_loss_mask: 0.1772  m2_loss_dice: 1.241  m2_loss_ce_0: 0.64  m2_loss_mask_0: 0.2092  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6639  m2_loss_mask_1: 0.1918  m2_loss_dice_1: 1.379  m2_loss_ce_2: 0.6174  m2_loss_mask_2: 0.1785  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5707  m2_loss_mask_3: 0.1761  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5417  m2_loss_mask_4: 0.1763  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5634  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.5404  m2_loss_mask_6: 0.1772  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.5429  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.5534  m2_loss_mask_8: 0.1757  m2_loss_dice_8: 1.241    time: 1.4715  last_time: 1.5314  data_time: 0.0511  last_data_time: 0.0396   lr: 0.0001  max_mem: 35751M
[10/06 18:45:14] d2.utils.events INFO:  eta: 0:11:48  iter: 519  total_loss: 40.79  m1_loss_ce: 0.4808  m1_loss_mask: 0.1706  m1_loss_dice: 1.242  m1_loss_ce_0: 0.5876  m1_loss_mask_0: 0.1926  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.6495  m1_loss_mask_1: 0.1845  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5803  m1_loss_mask_2: 0.1698  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.5017  m1_loss_mask_3: 0.1744  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.5003  m1_loss_mask_4: 0.1753  m1_loss_dice_4: 1.298  m1_loss_ce_5: 0.5036  m1_loss_mask_5: 0.1738  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.4875  m1_loss_mask_6: 0.1707  m1_loss_dice_6: 1.262  m1_loss_ce_7: 0.4935  m1_loss_mask_7: 0.1701  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.4958  m1_loss_mask_8: 0.1724  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4889  m2_loss_mask: 0.1688  m2_loss_dice: 1.245  m2_loss_ce_0: 0.6016  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.6535  m2_loss_mask_1: 0.1773  m2_loss_dice_1: 1.428  m2_loss_ce_2: 0.5931  m2_loss_mask_2: 0.1693  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5682  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.5217  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5461  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.5139  m2_loss_mask_6: 0.1696  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5243  m2_loss_mask_7: 0.1687  m2_loss_dice_7: 1.261  m2_loss_ce_8: 0.5047  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.248    time: 1.4710  last_time: 1.5219  data_time: 0.0580  last_data_time: 0.0423   lr: 0.0001  max_mem: 35751M
[10/06 18:45:44] d2.utils.events INFO:  eta: 0:11:19  iter: 539  total_loss: 39.21  m1_loss_ce: 0.479  m1_loss_mask: 0.1594  m1_loss_dice: 1.153  m1_loss_ce_0: 0.5611  m1_loss_mask_0: 0.1813  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.6197  m1_loss_mask_1: 0.1683  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.5743  m1_loss_mask_2: 0.1634  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5235  m1_loss_mask_3: 0.1595  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.5251  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.5028  m1_loss_mask_5: 0.1642  m1_loss_dice_5: 1.193  m1_loss_ce_6: 0.4818  m1_loss_mask_6: 0.1637  m1_loss_dice_6: 1.151  m1_loss_ce_7: 0.4974  m1_loss_mask_7: 0.158  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.4718  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.215  m2_loss_ce: 0.5014  m2_loss_mask: 0.1606  m2_loss_dice: 1.204  m2_loss_ce_0: 0.5725  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6524  m2_loss_mask_1: 0.1745  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.5973  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5681  m2_loss_mask_3: 0.163  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.566  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.191  m2_loss_ce_5: 0.5191  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.517  m2_loss_mask_6: 0.1642  m2_loss_dice_6: 1.181  m2_loss_ce_7: 0.5223  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.5242  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.232    time: 1.4720  last_time: 1.3873  data_time: 0.0686  last_data_time: 0.0420   lr: 0.0001  max_mem: 35751M
[10/06 18:46:14] d2.utils.events INFO:  eta: 0:10:50  iter: 559  total_loss: 40.12  m1_loss_ce: 0.47  m1_loss_mask: 0.1636  m1_loss_dice: 1.194  m1_loss_ce_0: 0.5593  m1_loss_mask_0: 0.192  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6463  m1_loss_mask_1: 0.1755  m1_loss_dice_1: 1.4  m1_loss_ce_2: 0.5793  m1_loss_mask_2: 0.1689  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5298  m1_loss_mask_3: 0.17  m1_loss_dice_3: 1.268  m1_loss_ce_4: 0.5021  m1_loss_mask_4: 0.1666  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4914  m1_loss_mask_5: 0.1625  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.4748  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4705  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.4563  m1_loss_mask_8: 0.1622  m1_loss_dice_8: 1.236  m2_loss_ce: 0.5097  m2_loss_mask: 0.1665  m2_loss_dice: 1.263  m2_loss_ce_0: 0.6199  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.535  m2_loss_ce_1: 0.6745  m2_loss_mask_1: 0.1833  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.6371  m2_loss_mask_2: 0.1694  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5442  m2_loss_mask_3: 0.1695  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5465  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.535  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.5249  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.5414  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.509  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.229    time: 1.4718  last_time: 1.4273  data_time: 0.0535  last_data_time: 0.0455   lr: 0.0001  max_mem: 35751M
[10/06 18:46:43] d2.utils.events INFO:  eta: 0:10:20  iter: 579  total_loss: 40.66  m1_loss_ce: 0.4821  m1_loss_mask: 0.1615  m1_loss_dice: 1.237  m1_loss_ce_0: 0.5759  m1_loss_mask_0: 0.1842  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.6408  m1_loss_mask_1: 0.1693  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.5855  m1_loss_mask_2: 0.1633  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.5392  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.219  m1_loss_ce_4: 0.5315  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.4688  m1_loss_mask_5: 0.1579  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.4759  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4649  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.4846  m1_loss_mask_8: 0.1594  m1_loss_dice_8: 1.232  m2_loss_ce: 0.5239  m2_loss_mask: 0.1558  m2_loss_dice: 1.245  m2_loss_ce_0: 0.6261  m2_loss_mask_0: 0.183  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.679  m2_loss_mask_1: 0.1722  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.622  m2_loss_mask_2: 0.1569  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5886  m2_loss_mask_3: 0.157  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.5529  m2_loss_mask_4: 0.1585  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5051  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.5272  m2_loss_mask_6: 0.1573  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.5402  m2_loss_mask_7: 0.1589  m2_loss_dice_7: 1.271  m2_loss_ce_8: 0.5172  m2_loss_mask_8: 0.1576  m2_loss_dice_8: 1.255    time: 1.4719  last_time: 1.4589  data_time: 0.0484  last_data_time: 0.0469   lr: 0.0001  max_mem: 35751M
[10/06 18:47:13] d2.utils.events INFO:  eta: 0:09:50  iter: 599  total_loss: 39.59  m1_loss_ce: 0.48  m1_loss_mask: 0.1689  m1_loss_dice: 1.142  m1_loss_ce_0: 0.5846  m1_loss_mask_0: 0.2048  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.6018  m1_loss_mask_1: 0.1822  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5685  m1_loss_mask_2: 0.174  m1_loss_dice_2: 1.235  m1_loss_ce_3: 0.5085  m1_loss_mask_3: 0.1717  m1_loss_dice_3: 1.205  m1_loss_ce_4: 0.4848  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.4739  m1_loss_mask_5: 0.1713  m1_loss_dice_5: 1.176  m1_loss_ce_6: 0.4266  m1_loss_mask_6: 0.1686  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4487  m1_loss_mask_7: 0.1681  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.4605  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.2  m2_loss_ce: 0.5014  m2_loss_mask: 0.1656  m2_loss_dice: 1.215  m2_loss_ce_0: 0.6178  m2_loss_mask_0: 0.2086  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6763  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.357  m2_loss_ce_2: 0.5995  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.288  m2_loss_ce_3: 0.5603  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.212  m2_loss_ce_4: 0.5336  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.4963  m2_loss_mask_5: 0.1691  m2_loss_dice_5: 1.225  m2_loss_ce_6: 0.5169  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.4843  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.196  m2_loss_ce_8: 0.4748  m2_loss_mask_8: 0.1677  m2_loss_dice_8: 1.208    time: 1.4715  last_time: 1.5607  data_time: 0.0554  last_data_time: 0.1943   lr: 0.0001  max_mem: 35751M
[10/06 18:47:42] d2.utils.events INFO:  eta: 0:09:21  iter: 619  total_loss: 42.07  m1_loss_ce: 0.4443  m1_loss_mask: 0.1607  m1_loss_dice: 1.337  m1_loss_ce_0: 0.5839  m1_loss_mask_0: 0.1839  m1_loss_dice_0: 1.528  m1_loss_ce_1: 0.5945  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.471  m1_loss_ce_2: 0.5562  m1_loss_mask_2: 0.1715  m1_loss_dice_2: 1.47  m1_loss_ce_3: 0.4894  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.364  m1_loss_ce_4: 0.4676  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.403  m1_loss_ce_5: 0.4707  m1_loss_mask_5: 0.1671  m1_loss_dice_5: 1.397  m1_loss_ce_6: 0.4368  m1_loss_mask_6: 0.1642  m1_loss_dice_6: 1.376  m1_loss_ce_7: 0.4574  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.405  m1_loss_ce_8: 0.4694  m1_loss_mask_8: 0.1597  m1_loss_dice_8: 1.33  m2_loss_ce: 0.5114  m2_loss_mask: 0.1615  m2_loss_dice: 1.39  m2_loss_ce_0: 0.6145  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.588  m2_loss_ce_1: 0.6454  m2_loss_mask_1: 0.1735  m2_loss_dice_1: 1.491  m2_loss_ce_2: 0.5808  m2_loss_mask_2: 0.1675  m2_loss_dice_2: 1.447  m2_loss_ce_3: 0.5409  m2_loss_mask_3: 0.1674  m2_loss_dice_3: 1.435  m2_loss_ce_4: 0.5349  m2_loss_mask_4: 0.1696  m2_loss_dice_4: 1.461  m2_loss_ce_5: 0.5342  m2_loss_mask_5: 0.1662  m2_loss_dice_5: 1.414  m2_loss_ce_6: 0.4857  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.403  m2_loss_ce_7: 0.5067  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.364  m2_loss_ce_8: 0.4852  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.353    time: 1.4718  last_time: 1.4081  data_time: 0.0575  last_data_time: 0.0378   lr: 0.0001  max_mem: 35751M
[10/06 18:48:12] d2.utils.events INFO:  eta: 0:08:51  iter: 639  total_loss: 39.51  m1_loss_ce: 0.4465  m1_loss_mask: 0.1669  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5816  m1_loss_mask_0: 0.21  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6155  m1_loss_mask_1: 0.1769  m1_loss_dice_1: 1.327  m1_loss_ce_2: 0.5821  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.284  m1_loss_ce_3: 0.4919  m1_loss_mask_3: 0.1759  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.4623  m1_loss_mask_4: 0.1712  m1_loss_dice_4: 1.268  m1_loss_ce_5: 0.4674  m1_loss_mask_5: 0.1703  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.4655  m1_loss_mask_6: 0.1706  m1_loss_dice_6: 1.232  m1_loss_ce_7: 0.4561  m1_loss_mask_7: 0.1693  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4502  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.233  m2_loss_ce: 0.4879  m2_loss_mask: 0.1614  m2_loss_dice: 1.226  m2_loss_ce_0: 0.6015  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.6198  m2_loss_mask_1: 0.1706  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.5788  m2_loss_mask_2: 0.1662  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5131  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5118  m2_loss_mask_4: 0.1683  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.5241  m2_loss_mask_5: 0.1633  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.4734  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.4944  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.208  m2_loss_ce_8: 0.4804  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.257    time: 1.4717  last_time: 1.4360  data_time: 0.0626  last_data_time: 0.0683   lr: 0.0001  max_mem: 35751M
[10/06 18:48:41] d2.utils.events INFO:  eta: 0:08:22  iter: 659  total_loss: 36.85  m1_loss_ce: 0.4125  m1_loss_mask: 0.1728  m1_loss_dice: 1.136  m1_loss_ce_0: 0.523  m1_loss_mask_0: 0.2098  m1_loss_dice_0: 1.334  m1_loss_ce_1: 0.5431  m1_loss_mask_1: 0.186  m1_loss_dice_1: 1.236  m1_loss_ce_2: 0.5416  m1_loss_mask_2: 0.182  m1_loss_dice_2: 1.205  m1_loss_ce_3: 0.4361  m1_loss_mask_3: 0.1813  m1_loss_dice_3: 1.192  m1_loss_ce_4: 0.4262  m1_loss_mask_4: 0.1769  m1_loss_dice_4: 1.151  m1_loss_ce_5: 0.4131  m1_loss_mask_5: 0.1751  m1_loss_dice_5: 1.16  m1_loss_ce_6: 0.4  m1_loss_mask_6: 0.175  m1_loss_dice_6: 1.143  m1_loss_ce_7: 0.407  m1_loss_mask_7: 0.1758  m1_loss_dice_7: 1.118  m1_loss_ce_8: 0.4161  m1_loss_mask_8: 0.1784  m1_loss_dice_8: 1.153  m2_loss_ce: 0.4046  m2_loss_mask: 0.1738  m2_loss_dice: 1.182  m2_loss_ce_0: 0.5503  m2_loss_mask_0: 0.2104  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.5534  m2_loss_mask_1: 0.1969  m2_loss_dice_1: 1.268  m2_loss_ce_2: 0.533  m2_loss_mask_2: 0.1851  m2_loss_dice_2: 1.245  m2_loss_ce_3: 0.4804  m2_loss_mask_3: 0.1887  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.4619  m2_loss_mask_4: 0.1823  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.4349  m2_loss_mask_5: 0.1793  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.439  m2_loss_mask_6: 0.1763  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.4469  m2_loss_mask_7: 0.1795  m2_loss_dice_7: 1.166  m2_loss_ce_8: 0.4118  m2_loss_mask_8: 0.1792  m2_loss_dice_8: 1.188    time: 1.4715  last_time: 1.5022  data_time: 0.0476  last_data_time: 0.0416   lr: 0.0001  max_mem: 35751M
[10/06 18:49:11] d2.utils.events INFO:  eta: 0:07:52  iter: 679  total_loss: 36.99  m1_loss_ce: 0.4191  m1_loss_mask: 0.1654  m1_loss_dice: 1.167  m1_loss_ce_0: 0.5329  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.326  m1_loss_ce_1: 0.5754  m1_loss_mask_1: 0.1762  m1_loss_dice_1: 1.241  m1_loss_ce_2: 0.5145  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.4609  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.17  m1_loss_ce_4: 0.4371  m1_loss_mask_4: 0.1673  m1_loss_dice_4: 1.183  m1_loss_ce_5: 0.4309  m1_loss_mask_5: 0.1655  m1_loss_dice_5: 1.151  m1_loss_ce_6: 0.451  m1_loss_mask_6: 0.1668  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.4308  m1_loss_mask_7: 0.1661  m1_loss_dice_7: 1.099  m1_loss_ce_8: 0.4253  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.126  m2_loss_ce: 0.4612  m2_loss_mask: 0.1718  m2_loss_dice: 1.143  m2_loss_ce_0: 0.5556  m2_loss_mask_0: 0.1947  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.6061  m2_loss_mask_1: 0.1802  m2_loss_dice_1: 1.302  m2_loss_ce_2: 0.5606  m2_loss_mask_2: 0.1726  m2_loss_dice_2: 1.246  m2_loss_ce_3: 0.5058  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.199  m2_loss_ce_4: 0.4709  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.4859  m2_loss_mask_5: 0.1699  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.4457  m2_loss_mask_6: 0.1722  m2_loss_dice_6: 1.201  m2_loss_ce_7: 0.4534  m2_loss_mask_7: 0.1736  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.4517  m2_loss_mask_8: 0.1725  m2_loss_dice_8: 1.185    time: 1.4720  last_time: 1.5294  data_time: 0.0652  last_data_time: 0.0608   lr: 0.0001  max_mem: 35751M
[10/06 18:49:41] d2.utils.events INFO:  eta: 0:07:23  iter: 699  total_loss: 40.1  m1_loss_ce: 0.4542  m1_loss_mask: 0.1709  m1_loss_dice: 1.255  m1_loss_ce_0: 0.5709  m1_loss_mask_0: 0.2006  m1_loss_dice_0: 1.452  m1_loss_ce_1: 0.6263  m1_loss_mask_1: 0.1823  m1_loss_dice_1: 1.379  m1_loss_ce_2: 0.5745  m1_loss_mask_2: 0.1797  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.4865  m1_loss_mask_3: 0.1733  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5047  m1_loss_mask_4: 0.1723  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.4727  m1_loss_mask_5: 0.1731  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4504  m1_loss_mask_6: 0.172  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.4639  m1_loss_mask_7: 0.1714  m1_loss_dice_7: 1.252  m1_loss_ce_8: 0.4768  m1_loss_mask_8: 0.173  m1_loss_dice_8: 1.234  m2_loss_ce: 0.5151  m2_loss_mask: 0.1683  m2_loss_dice: 1.252  m2_loss_ce_0: 0.5984  m2_loss_mask_0: 0.1985  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.6516  m2_loss_mask_1: 0.1833  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.5982  m2_loss_mask_2: 0.175  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.559  m2_loss_mask_3: 0.1683  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5472  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5367  m2_loss_mask_5: 0.1703  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.5389  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.5017  m2_loss_mask_7: 0.1696  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.5133  m2_loss_mask_8: 0.1706  m2_loss_dice_8: 1.259    time: 1.4725  last_time: 1.4260  data_time: 0.0484  last_data_time: 0.0462   lr: 0.0001  max_mem: 35751M
[10/06 18:50:11] d2.utils.events INFO:  eta: 0:06:54  iter: 719  total_loss: 40.02  m1_loss_ce: 0.4561  m1_loss_mask: 0.1755  m1_loss_dice: 1.21  m1_loss_ce_0: 0.5488  m1_loss_mask_0: 0.2  m1_loss_dice_0: 1.508  m1_loss_ce_1: 0.65  m1_loss_mask_1: 0.1874  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.5356  m1_loss_mask_2: 0.1838  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.483  m1_loss_mask_3: 0.1789  m1_loss_dice_3: 1.294  m1_loss_ce_4: 0.4473  m1_loss_mask_4: 0.1778  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.4573  m1_loss_mask_5: 0.1781  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.4418  m1_loss_mask_6: 0.1745  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.4714  m1_loss_mask_7: 0.1752  m1_loss_dice_7: 1.251  m1_loss_ce_8: 0.4416  m1_loss_mask_8: 0.1757  m1_loss_dice_8: 1.237  m2_loss_ce: 0.4457  m2_loss_mask: 0.1759  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5741  m2_loss_mask_0: 0.2044  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.6321  m2_loss_mask_1: 0.1913  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.588  m2_loss_mask_2: 0.1822  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5427  m2_loss_mask_3: 0.1787  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.495  m2_loss_mask_4: 0.1794  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5251  m2_loss_mask_5: 0.1799  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.4708  m2_loss_mask_6: 0.1778  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.4406  m2_loss_mask_7: 0.179  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.4571  m2_loss_mask_8: 0.1739  m2_loss_dice_8: 1.268    time: 1.4735  last_time: 1.3714  data_time: 0.0542  last_data_time: 0.0533   lr: 0.0001  max_mem: 35751M
[10/06 18:50:41] d2.utils.events INFO:  eta: 0:06:24  iter: 739  total_loss: 41.2  m1_loss_ce: 0.4952  m1_loss_mask: 0.1592  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5662  m1_loss_mask_0: 0.1862  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.6096  m1_loss_mask_1: 0.1714  m1_loss_dice_1: 1.416  m1_loss_ce_2: 0.6048  m1_loss_mask_2: 0.1603  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5086  m1_loss_mask_3: 0.1584  m1_loss_dice_3: 1.281  m1_loss_ce_4: 0.5336  m1_loss_mask_4: 0.1632  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.5203  m1_loss_mask_5: 0.1593  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.4969  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.27  m1_loss_ce_7: 0.4889  m1_loss_mask_7: 0.1574  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.4993  m1_loss_mask_8: 0.1562  m1_loss_dice_8: 1.197  m2_loss_ce: 0.5065  m2_loss_mask: 0.1593  m2_loss_dice: 1.26  m2_loss_ce_0: 0.6275  m2_loss_mask_0: 0.1907  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.661  m2_loss_mask_1: 0.1731  m2_loss_dice_1: 1.455  m2_loss_ce_2: 0.6077  m2_loss_mask_2: 0.1627  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5537  m2_loss_mask_3: 0.1607  m2_loss_dice_3: 1.287  m2_loss_ce_4: 0.5442  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.549  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.5297  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.281  m2_loss_ce_7: 0.5358  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.5157  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.244    time: 1.4741  last_time: 1.4847  data_time: 0.0521  last_data_time: 0.0452   lr: 0.0001  max_mem: 35751M
[10/06 18:51:11] d2.utils.events INFO:  eta: 0:05:55  iter: 759  total_loss: 40.47  m1_loss_ce: 0.471  m1_loss_mask: 0.1728  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5628  m1_loss_mask_0: 0.2077  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.5907  m1_loss_mask_1: 0.185  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.592  m1_loss_mask_2: 0.1797  m1_loss_dice_2: 1.278  m1_loss_ce_3: 0.4969  m1_loss_mask_3: 0.1804  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.49  m1_loss_mask_4: 0.1794  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4963  m1_loss_mask_5: 0.179  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.4556  m1_loss_mask_6: 0.1742  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.4538  m1_loss_mask_7: 0.1716  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.4544  m1_loss_mask_8: 0.1723  m1_loss_dice_8: 1.207  m2_loss_ce: 0.5262  m2_loss_mask: 0.189  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6186  m2_loss_mask_0: 0.2246  m2_loss_dice_0: 1.507  m2_loss_ce_1: 0.6444  m2_loss_mask_1: 0.2058  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.6036  m2_loss_mask_2: 0.1915  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5596  m2_loss_mask_3: 0.1893  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5225  m2_loss_mask_4: 0.1947  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.5451  m2_loss_mask_5: 0.1942  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.5261  m2_loss_mask_6: 0.1907  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.5331  m2_loss_mask_7: 0.1908  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4997  m2_loss_mask_8: 0.189  m2_loss_dice_8: 1.278    time: 1.4743  last_time: 1.4605  data_time: 0.0595  last_data_time: 0.0841   lr: 0.0001  max_mem: 35751M
[10/06 18:51:40] d2.utils.events INFO:  eta: 0:05:25  iter: 779  total_loss: 39.36  m1_loss_ce: 0.4266  m1_loss_mask: 0.1663  m1_loss_dice: 1.158  m1_loss_ce_0: 0.5542  m1_loss_mask_0: 0.1841  m1_loss_dice_0: 1.376  m1_loss_ce_1: 0.6521  m1_loss_mask_1: 0.179  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5581  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.198  m1_loss_ce_3: 0.4643  m1_loss_mask_3: 0.1653  m1_loss_dice_3: 1.17  m1_loss_ce_4: 0.5012  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.4918  m1_loss_mask_5: 0.1649  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.4477  m1_loss_mask_6: 0.1648  m1_loss_dice_6: 1.139  m1_loss_ce_7: 0.4413  m1_loss_mask_7: 0.1666  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.4207  m1_loss_mask_8: 0.1643  m1_loss_dice_8: 1.151  m2_loss_ce: 0.5062  m2_loss_mask: 0.1658  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5807  m2_loss_mask_0: 0.2  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6204  m2_loss_mask_1: 0.1756  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.5898  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5172  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.4996  m2_loss_mask_4: 0.1689  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5074  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.4916  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.4752  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.5053  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.216    time: 1.4738  last_time: 1.3975  data_time: 0.0602  last_data_time: 0.0458   lr: 0.0001  max_mem: 35751M
[10/06 18:52:11] d2.utils.events INFO:  eta: 0:04:56  iter: 799  total_loss: 41.61  m1_loss_ce: 0.5089  m1_loss_mask: 0.1549  m1_loss_dice: 1.252  m1_loss_ce_0: 0.6028  m1_loss_mask_0: 0.1769  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6673  m1_loss_mask_1: 0.1698  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.5886  m1_loss_mask_2: 0.1636  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5283  m1_loss_mask_3: 0.1557  m1_loss_dice_3: 1.327  m1_loss_ce_4: 0.5167  m1_loss_mask_4: 0.1568  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.538  m1_loss_mask_5: 0.1529  m1_loss_dice_5: 1.286  m1_loss_ce_6: 0.497  m1_loss_mask_6: 0.1549  m1_loss_dice_6: 1.249  m1_loss_ce_7: 0.5059  m1_loss_mask_7: 0.1558  m1_loss_dice_7: 1.263  m1_loss_ce_8: 0.5198  m1_loss_mask_8: 0.1529  m1_loss_dice_8: 1.27  m2_loss_ce: 0.5423  m2_loss_mask: 0.1622  m2_loss_dice: 1.29  m2_loss_ce_0: 0.6178  m2_loss_mask_0: 0.1861  m2_loss_dice_0: 1.504  m2_loss_ce_1: 0.653  m2_loss_mask_1: 0.1743  m2_loss_dice_1: 1.425  m2_loss_ce_2: 0.6293  m2_loss_mask_2: 0.1697  m2_loss_dice_2: 1.368  m2_loss_ce_3: 0.5847  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5771  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.286  m2_loss_ce_5: 0.5715  m2_loss_mask_5: 0.1653  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.5453  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.288  m2_loss_ce_7: 0.5451  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.5088  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.271    time: 1.4748  last_time: 1.4986  data_time: 0.0546  last_data_time: 0.0510   lr: 0.0001  max_mem: 35751M
[10/06 18:52:40] d2.utils.events INFO:  eta: 0:04:26  iter: 819  total_loss: 40.94  m1_loss_ce: 0.4486  m1_loss_mask: 0.1447  m1_loss_dice: 1.284  m1_loss_ce_0: 0.5728  m1_loss_mask_0: 0.1753  m1_loss_dice_0: 1.512  m1_loss_ce_1: 0.6344  m1_loss_mask_1: 0.1563  m1_loss_dice_1: 1.441  m1_loss_ce_2: 0.5036  m1_loss_mask_2: 0.1447  m1_loss_dice_2: 1.423  m1_loss_ce_3: 0.5001  m1_loss_mask_3: 0.1434  m1_loss_dice_3: 1.36  m1_loss_ce_4: 0.4636  m1_loss_mask_4: 0.1419  m1_loss_dice_4: 1.31  m1_loss_ce_5: 0.4522  m1_loss_mask_5: 0.1415  m1_loss_dice_5: 1.318  m1_loss_ce_6: 0.4362  m1_loss_mask_6: 0.1429  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.4504  m1_loss_mask_7: 0.1435  m1_loss_dice_7: 1.311  m1_loss_ce_8: 0.4658  m1_loss_mask_8: 0.1474  m1_loss_dice_8: 1.301  m2_loss_ce: 0.5285  m2_loss_mask: 0.1532  m2_loss_dice: 1.322  m2_loss_ce_0: 0.634  m2_loss_mask_0: 0.1861  m2_loss_dice_0: 1.573  m2_loss_ce_1: 0.6658  m2_loss_mask_1: 0.165  m2_loss_dice_1: 1.481  m2_loss_ce_2: 0.6372  m2_loss_mask_2: 0.1565  m2_loss_dice_2: 1.408  m2_loss_ce_3: 0.5886  m2_loss_mask_3: 0.1584  m2_loss_dice_3: 1.359  m2_loss_ce_4: 0.5552  m2_loss_mask_4: 0.1593  m2_loss_dice_4: 1.363  m2_loss_ce_5: 0.5438  m2_loss_mask_5: 0.1573  m2_loss_dice_5: 1.367  m2_loss_ce_6: 0.5221  m2_loss_mask_6: 0.1545  m2_loss_dice_6: 1.321  m2_loss_ce_7: 0.5319  m2_loss_mask_7: 0.1577  m2_loss_dice_7: 1.342  m2_loss_ce_8: 0.5272  m2_loss_mask_8: 0.1516  m2_loss_dice_8: 1.359    time: 1.4749  last_time: 1.3667  data_time: 0.0648  last_data_time: 0.0502   lr: 0.0001  max_mem: 35751M
[10/06 18:53:10] d2.utils.events INFO:  eta: 0:03:56  iter: 839  total_loss: 39.67  m1_loss_ce: 0.4407  m1_loss_mask: 0.1745  m1_loss_dice: 1.227  m1_loss_ce_0: 0.5611  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.4  m1_loss_ce_1: 0.5879  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.5101  m1_loss_mask_2: 0.1781  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.4697  m1_loss_mask_3: 0.1787  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.4545  m1_loss_mask_4: 0.1763  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.4554  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.4484  m1_loss_mask_6: 0.1754  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.4436  m1_loss_mask_7: 0.1725  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.4421  m1_loss_mask_8: 0.1736  m1_loss_dice_8: 1.228  m2_loss_ce: 0.4804  m2_loss_mask: 0.176  m2_loss_dice: 1.245  m2_loss_ce_0: 0.6509  m2_loss_mask_0: 0.2022  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.6407  m2_loss_mask_1: 0.1847  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5874  m2_loss_mask_2: 0.1782  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5735  m2_loss_mask_3: 0.1775  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5048  m2_loss_mask_4: 0.1812  m2_loss_dice_4: 1.286  m2_loss_ce_5: 0.5228  m2_loss_mask_5: 0.1787  m2_loss_dice_5: 1.287  m2_loss_ce_6: 0.4594  m2_loss_mask_6: 0.1782  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4686  m2_loss_mask_7: 0.1767  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.4525  m2_loss_mask_8: 0.1774  m2_loss_dice_8: 1.26    time: 1.4746  last_time: 1.5501  data_time: 0.0525  last_data_time: 0.0583   lr: 0.0001  max_mem: 35751M
[10/06 18:53:39] d2.utils.events INFO:  eta: 0:03:27  iter: 859  total_loss: 38.67  m1_loss_ce: 0.4153  m1_loss_mask: 0.1635  m1_loss_dice: 1.161  m1_loss_ce_0: 0.5423  m1_loss_mask_0: 0.1943  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.6302  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5707  m1_loss_mask_2: 0.1733  m1_loss_dice_2: 1.24  m1_loss_ce_3: 0.4575  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.224  m1_loss_ce_4: 0.4634  m1_loss_mask_4: 0.1722  m1_loss_dice_4: 1.198  m1_loss_ce_5: 0.4534  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.4107  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.4264  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.144  m1_loss_ce_8: 0.4148  m1_loss_mask_8: 0.1623  m1_loss_dice_8: 1.163  m2_loss_ce: 0.4811  m2_loss_mask: 0.1662  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5888  m2_loss_mask_0: 0.199  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6459  m2_loss_mask_1: 0.1904  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5893  m2_loss_mask_2: 0.1739  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5425  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.223  m2_loss_ce_4: 0.5146  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.495  m2_loss_mask_5: 0.1748  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5021  m2_loss_mask_6: 0.173  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.4775  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.196  m2_loss_ce_8: 0.4868  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.197    time: 1.4748  last_time: 1.4635  data_time: 0.0556  last_data_time: 0.0378   lr: 0.0001  max_mem: 35751M
[10/06 18:54:09] d2.utils.events INFO:  eta: 0:02:57  iter: 879  total_loss: 38.1  m1_loss_ce: 0.425  m1_loss_mask: 0.1709  m1_loss_dice: 1.155  m1_loss_ce_0: 0.5323  m1_loss_mask_0: 0.2003  m1_loss_dice_0: 1.376  m1_loss_ce_1: 0.5715  m1_loss_mask_1: 0.1837  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.5409  m1_loss_mask_2: 0.1777  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.4755  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.193  m1_loss_ce_4: 0.4552  m1_loss_mask_4: 0.1743  m1_loss_dice_4: 1.188  m1_loss_ce_5: 0.4438  m1_loss_mask_5: 0.1749  m1_loss_dice_5: 1.163  m1_loss_ce_6: 0.4353  m1_loss_mask_6: 0.1755  m1_loss_dice_6: 1.15  m1_loss_ce_7: 0.4322  m1_loss_mask_7: 0.1719  m1_loss_dice_7: 1.141  m1_loss_ce_8: 0.4296  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4866  m2_loss_mask: 0.1728  m2_loss_dice: 1.233  m2_loss_ce_0: 0.5685  m2_loss_mask_0: 0.2097  m2_loss_dice_0: 1.404  m2_loss_ce_1: 0.6304  m2_loss_mask_1: 0.1893  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.5873  m2_loss_mask_2: 0.1818  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5108  m2_loss_mask_3: 0.1781  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.4976  m2_loss_mask_4: 0.1773  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.4894  m2_loss_mask_5: 0.1755  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4399  m2_loss_mask_6: 0.1778  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4688  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4736  m2_loss_mask_8: 0.1738  m2_loss_dice_8: 1.199    time: 1.4750  last_time: 1.4599  data_time: 0.0468  last_data_time: 0.0344   lr: 0.0001  max_mem: 35751M
[10/06 18:54:40] d2.utils.events INFO:  eta: 0:02:28  iter: 899  total_loss: 40.26  m1_loss_ce: 0.4141  m1_loss_mask: 0.1677  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5606  m1_loss_mask_0: 0.1959  m1_loss_dice_0: 1.438  m1_loss_ce_1: 0.5926  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.5479  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.4639  m1_loss_mask_3: 0.1674  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4422  m1_loss_mask_4: 0.1724  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.4218  m1_loss_mask_5: 0.1711  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.4268  m1_loss_mask_6: 0.1728  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.3937  m1_loss_mask_7: 0.1725  m1_loss_dice_7: 1.255  m1_loss_ce_8: 0.4168  m1_loss_mask_8: 0.1653  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5164  m2_loss_mask: 0.1684  m2_loss_dice: 1.223  m2_loss_ce_0: 0.6369  m2_loss_mask_0: 0.199  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.6538  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.424  m2_loss_ce_2: 0.602  m2_loss_mask_2: 0.1706  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5407  m2_loss_mask_3: 0.1705  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5257  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.5067  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5243  m2_loss_mask_6: 0.1666  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.5043  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.5128  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.233    time: 1.4760  last_time: 1.4678  data_time: 0.0612  last_data_time: 0.0505   lr: 0.0001  max_mem: 35751M
[10/06 18:55:09] d2.utils.events INFO:  eta: 0:01:58  iter: 919  total_loss: 39.23  m1_loss_ce: 0.4055  m1_loss_mask: 0.1587  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5287  m1_loss_mask_0: 0.1834  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.5834  m1_loss_mask_1: 0.1722  m1_loss_dice_1: 1.333  m1_loss_ce_2: 0.5107  m1_loss_mask_2: 0.1648  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.4491  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.4325  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.197  m1_loss_ce_5: 0.4497  m1_loss_mask_5: 0.1583  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4324  m1_loss_mask_6: 0.1568  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.4303  m1_loss_mask_7: 0.1587  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4085  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.18  m2_loss_ce: 0.4786  m2_loss_mask: 0.1643  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5668  m2_loss_mask_0: 0.1879  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.6289  m2_loss_mask_1: 0.172  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.6005  m2_loss_mask_2: 0.1661  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.5141  m2_loss_mask_3: 0.1677  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.5049  m2_loss_mask_4: 0.1654  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.489  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.4745  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4535  m2_loss_mask_7: 0.1629  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4542  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.227    time: 1.4759  last_time: 1.4289  data_time: 0.0611  last_data_time: 0.0369   lr: 0.0001  max_mem: 35751M
[10/06 18:55:39] d2.utils.events INFO:  eta: 0:01:28  iter: 939  total_loss: 39.91  m1_loss_ce: 0.4891  m1_loss_mask: 0.163  m1_loss_dice: 1.185  m1_loss_ce_0: 0.596  m1_loss_mask_0: 0.1888  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6462  m1_loss_mask_1: 0.1758  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5917  m1_loss_mask_2: 0.1639  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5059  m1_loss_mask_3: 0.1647  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.4764  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.4818  m1_loss_mask_5: 0.1611  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4445  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.476  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4788  m1_loss_mask_8: 0.1615  m1_loss_dice_8: 1.197  m2_loss_ce: 0.5108  m2_loss_mask: 0.1631  m2_loss_dice: 1.235  m2_loss_ce_0: 0.6002  m2_loss_mask_0: 0.1884  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.6971  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.6187  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.55  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.286  m2_loss_ce_4: 0.5159  m2_loss_mask_4: 0.166  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.577  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.278  m2_loss_ce_6: 0.5358  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5327  m2_loss_mask_7: 0.1645  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.5073  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.22    time: 1.4764  last_time: 1.5257  data_time: 0.0522  last_data_time: 0.0414   lr: 0.0001  max_mem: 35751M
[10/06 18:56:09] d2.utils.events INFO:  eta: 0:00:59  iter: 959  total_loss: 37.07  m1_loss_ce: 0.3978  m1_loss_mask: 0.1602  m1_loss_dice: 1.158  m1_loss_ce_0: 0.5581  m1_loss_mask_0: 0.1951  m1_loss_dice_0: 1.332  m1_loss_ce_1: 0.6036  m1_loss_mask_1: 0.1673  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.5318  m1_loss_mask_2: 0.1634  m1_loss_dice_2: 1.201  m1_loss_ce_3: 0.4705  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.159  m1_loss_ce_4: 0.454  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.128  m1_loss_ce_5: 0.4054  m1_loss_mask_5: 0.1598  m1_loss_dice_5: 1.178  m1_loss_ce_6: 0.3964  m1_loss_mask_6: 0.1612  m1_loss_dice_6: 1.115  m1_loss_ce_7: 0.4151  m1_loss_mask_7: 0.1616  m1_loss_dice_7: 1.155  m1_loss_ce_8: 0.4144  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.147  m2_loss_ce: 0.4436  m2_loss_mask: 0.1662  m2_loss_dice: 1.197  m2_loss_ce_0: 0.5901  m2_loss_mask_0: 0.2038  m2_loss_dice_0: 1.402  m2_loss_ce_1: 0.6396  m2_loss_mask_1: 0.181  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.5632  m2_loss_mask_2: 0.1666  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5034  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.458  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.4835  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.4489  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.4523  m2_loss_mask_7: 0.1658  m2_loss_dice_7: 1.188  m2_loss_ce_8: 0.4836  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.179    time: 1.4763  last_time: 1.4522  data_time: 0.0617  last_data_time: 0.0461   lr: 0.0001  max_mem: 35751M
[10/06 18:56:38] d2.utils.events INFO:  eta: 0:00:29  iter: 979  total_loss: 40.29  m1_loss_ce: 0.4836  m1_loss_mask: 0.1574  m1_loss_dice: 1.265  m1_loss_ce_0: 0.5416  m1_loss_mask_0: 0.1773  m1_loss_dice_0: 1.457  m1_loss_ce_1: 0.6605  m1_loss_mask_1: 0.1675  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.5524  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.33  m1_loss_ce_3: 0.4784  m1_loss_mask_3: 0.1614  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.4813  m1_loss_mask_4: 0.1588  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.467  m1_loss_mask_5: 0.1575  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.4477  m1_loss_mask_6: 0.1592  m1_loss_dice_6: 1.237  m1_loss_ce_7: 0.4682  m1_loss_mask_7: 0.1557  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4417  m1_loss_mask_8: 0.156  m1_loss_dice_8: 1.229  m2_loss_ce: 0.5025  m2_loss_mask: 0.1611  m2_loss_dice: 1.271  m2_loss_ce_0: 0.5906  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.493  m2_loss_ce_1: 0.6448  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.6087  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5757  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5341  m2_loss_mask_4: 0.1643  m2_loss_dice_4: 1.335  m2_loss_ce_5: 0.5492  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.308  m2_loss_ce_6: 0.5108  m2_loss_mask_6: 0.161  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.506  m2_loss_mask_7: 0.1619  m2_loss_dice_7: 1.312  m2_loss_ce_8: 0.4779  m2_loss_mask_8: 0.1629  m2_loss_dice_8: 1.286    time: 1.4760  last_time: 1.4561  data_time: 0.0491  last_data_time: 0.0643   lr: 0.0001  max_mem: 35751M
[10/06 18:57:08] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_harmonic/model_final.pth
[10/06 18:57:10] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 39.31  m1_loss_ce: 0.4366  m1_loss_mask: 0.1584  m1_loss_dice: 1.178  m1_loss_ce_0: 0.5292  m1_loss_mask_0: 0.1781  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.5853  m1_loss_mask_1: 0.1693  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.5366  m1_loss_mask_2: 0.1645  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.4375  m1_loss_mask_3: 0.1627  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.4319  m1_loss_mask_4: 0.1605  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.4586  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4116  m1_loss_mask_6: 0.1603  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4169  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4268  m1_loss_mask_8: 0.1612  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4728  m2_loss_mask: 0.1679  m2_loss_dice: 1.262  m2_loss_ce_0: 0.6147  m2_loss_mask_0: 0.1885  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.6261  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.414  m2_loss_ce_2: 0.5777  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.5666  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5258  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.284  m2_loss_ce_5: 0.5185  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.4842  m2_loss_mask_6: 0.1691  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5113  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.483  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.309    time: 1.4760  last_time: 1.4917  data_time: 0.0642  last_data_time: 0.0818   lr: 0.0001  max_mem: 35751M
[10/06 18:57:10] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:24:33 (1.4760 s / it)
[10/06 18:57:10] d2.engine.hooks INFO: Total training time: 0:24:40 (0:00:07 on hooks)
[10/06 18:57:10] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/06 18:57:10] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/06 18:57:10] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/06 18:57:10] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/06 18:57:10] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/06 18:58:40] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalu_ilk8x4 ...
[10/06 18:59:44] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 58.090 | 81.025 | 70.777 |      19       |
| Things | 49.104 | 80.701 | 60.983 |       8       |
| Stuff  | 64.625 | 81.260 | 77.901 |      11       |
[10/06 18:59:44] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.298 | 97.601 | 99.690 |     Stuff     |
| class_8  | 72.441 | 84.453 | 85.777 |     Stuff     |
| class_11 | 87.128 | 89.129 | 97.755 |     Stuff     |
| class_12 | 43.126 | 79.543 | 54.217 |     Stuff     |
| class_13 | 34.290 | 74.719 | 45.892 |     Stuff     |
| class_17 | 46.241 | 63.925 | 72.336 |     Stuff     |
| class_19 | 50.550 | 69.232 | 73.016 |     Stuff     |
| class_20 | 66.588 | 77.492 | 85.929 |     Stuff     |
| class_21 | 89.293 | 90.312 | 98.872 |     Stuff     |
| class_22 | 35.892 | 75.871 | 47.307 |     Stuff     |
| class_23 | 88.030 | 91.585 | 96.119 |     Stuff     |
| class_24 | 51.648 | 76.489 | 67.523 |    Things     |
| class_25 | 48.231 | 74.092 | 65.095 |    Things     |
| class_26 | 64.290 | 82.604 | 77.830 |    Things     |
| class_27 | 46.710 | 88.971 | 52.500 |    Things     |
| class_28 | 61.816 | 89.395 | 69.149 |    Things     |
| class_31 | 37.926 | 87.704 | 43.243 |    Things     |
| class_32 | 39.320 | 74.921 | 52.482 |    Things     |
| class_33 | 42.888 | 71.435 | 60.038 |    Things     |
[10/06 18:59:44] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/06 18:59:44] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/06 18:59:44] d2.evaluation.testing INFO: copypaste: 58.0898,81.0249,70.7773,49.1035,80.7014,60.9825,64.6253,81.2602,77.9008,97.2984,97.6012,99.6898,72.4412,84.4532,85.7768,87.1283,89.1291,97.7551,43.1255,79.5427,54.2169,34.2904,74.7191,45.8924,46.2412,63.9255,72.3361,50.5503,69.2319,73.0159,66.5878,77.4916,85.9291,89.2931,90.3120,98.8718,35.8920,75.8707,47.3068,88.0301,91.5848,96.1187,51.6476,76.4891,67.5229,48.2307,74.0923,65.0954,64.2904,82.6039,77.8297,46.7097,88.9708,52.5000,61.8158,89.3951,69.1489,37.9262,87.7045,43.2432,39.3200,74.9205,52.4823,42.8880,71.4352,60.0377
