[10/15 15:12:42] detectron2 INFO: Rank of current process: 0. World size: 2
[10/15 15:12:43] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/15 15:12:43] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_8_0_2_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/15 15:12:43] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_8_0_2_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_8_0_2
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/15 15:12:43] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_8_0_2
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/15 15:12:43] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_8_0_2/config.yaml
[10/15 15:12:43] d2.utils.env INFO: Using a generated random seed 46412431
[10/15 15:12:47] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/15 15:12:47] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/15 15:12:47] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/15 15:12:47] d2.data.build INFO: Using training sampler TrainingSampler
[10/15 15:12:48] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/15 15:12:48] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/15 15:12:48] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/15 15:12:48] d2.data.build INFO: Making batched data loader with batch_size=4
[10/15 15:12:48] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/15 15:12:52] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/15 15:12:52] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:12:52] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:13:00] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:13:00] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/15 15:13:40] d2.utils.events INFO:  eta: 0:24:46  iter: 19  total_loss: 41.62  m1_loss_ce: 0.5374  m1_loss_mask: 0.1628  m1_loss_dice: 1.248  m1_loss_ce_0: 0.6248  m1_loss_mask_0: 0.1898  m1_loss_dice_0: 1.471  m1_loss_ce_1: 0.6973  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.388  m1_loss_ce_2: 0.6649  m1_loss_mask_2: 0.1625  m1_loss_dice_2: 1.346  m1_loss_ce_3: 0.5849  m1_loss_mask_3: 0.1619  m1_loss_dice_3: 1.305  m1_loss_ce_4: 0.5799  m1_loss_mask_4: 0.157  m1_loss_dice_4: 1.288  m1_loss_ce_5: 0.55  m1_loss_mask_5: 0.1562  m1_loss_dice_5: 1.279  m1_loss_ce_6: 0.5297  m1_loss_mask_6: 0.1585  m1_loss_dice_6: 1.271  m1_loss_ce_7: 0.532  m1_loss_mask_7: 0.1585  m1_loss_dice_7: 1.268  m1_loss_ce_8: 0.5066  m1_loss_mask_8: 0.1595  m1_loss_dice_8: 1.252  m2_loss_ce: 0.5096  m2_loss_mask: 0.153  m2_loss_dice: 1.24  m2_loss_ce_0: 0.6223  m2_loss_mask_0: 0.1874  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.7312  m2_loss_mask_1: 0.1746  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.6154  m2_loss_mask_2: 0.1619  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.5727  m2_loss_mask_3: 0.1567  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5762  m2_loss_mask_4: 0.1535  m2_loss_dice_4: 1.299  m2_loss_ce_5: 0.5313  m2_loss_mask_5: 0.1517  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.5407  m2_loss_mask_6: 0.1539  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.516  m2_loss_mask_7: 0.1527  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.5293  m2_loss_mask_8: 0.1522  m2_loss_dice_8: 1.268    time: 1.5228  last_time: 1.4655  data_time: 0.3440  last_data_time: 0.0728   lr: 0.0001  max_mem: 33708M
[10/15 15:14:10] d2.utils.events INFO:  eta: 0:24:16  iter: 39  total_loss: 38.64  m1_loss_ce: 0.4404  m1_loss_mask: 0.1636  m1_loss_dice: 1.204  m1_loss_ce_0: 0.554  m1_loss_mask_0: 0.1849  m1_loss_dice_0: 1.473  m1_loss_ce_1: 0.6025  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.295  m1_loss_ce_2: 0.5717  m1_loss_mask_2: 0.162  m1_loss_dice_2: 1.313  m1_loss_ce_3: 0.5019  m1_loss_mask_3: 0.1651  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.4826  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.4803  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4649  m1_loss_mask_6: 0.1646  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.4601  m1_loss_mask_7: 0.1635  m1_loss_dice_7: 1.181  m1_loss_ce_8: 0.4544  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.212  m2_loss_ce: 0.443  m2_loss_mask: 0.1689  m2_loss_dice: 1.206  m2_loss_ce_0: 0.5797  m2_loss_mask_0: 0.201  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.6452  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5521  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.502  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.4995  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.4732  m2_loss_mask_5: 0.1625  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4644  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4429  m2_loss_mask_7: 0.1695  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.4401  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.203    time: 1.5127  last_time: 1.4919  data_time: 0.0612  last_data_time: 0.0582   lr: 0.0001  max_mem: 33851M
[10/15 15:14:39] d2.utils.events INFO:  eta: 0:23:24  iter: 59  total_loss: 39.95  m1_loss_ce: 0.4495  m1_loss_mask: 0.1678  m1_loss_dice: 1.262  m1_loss_ce_0: 0.5507  m1_loss_mask_0: 0.1879  m1_loss_dice_0: 1.503  m1_loss_ce_1: 0.6083  m1_loss_mask_1: 0.1764  m1_loss_dice_1: 1.399  m1_loss_ce_2: 0.5367  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.345  m1_loss_ce_3: 0.4781  m1_loss_mask_3: 0.1652  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4669  m1_loss_mask_4: 0.1637  m1_loss_dice_4: 1.261  m1_loss_ce_5: 0.4661  m1_loss_mask_5: 0.1659  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.4701  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.4684  m1_loss_mask_7: 0.1657  m1_loss_dice_7: 1.24  m1_loss_ce_8: 0.4288  m1_loss_mask_8: 0.1656  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4551  m2_loss_mask: 0.1587  m2_loss_dice: 1.254  m2_loss_ce_0: 0.5702  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.661  m2_loss_mask_1: 0.1799  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.5544  m2_loss_mask_2: 0.1627  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.51  m2_loss_mask_3: 0.1623  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.496  m2_loss_mask_4: 0.1652  m2_loss_dice_4: 1.311  m2_loss_ce_5: 0.4809  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.4519  m2_loss_mask_6: 0.1604  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.4773  m2_loss_mask_7: 0.1581  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4476  m2_loss_mask_8: 0.1594  m2_loss_dice_8: 1.286    time: 1.4931  last_time: 1.5571  data_time: 0.0683  last_data_time: 0.1427   lr: 0.0001  max_mem: 33851M
[10/15 15:15:10] d2.utils.events INFO:  eta: 0:23:06  iter: 79  total_loss: 40.11  m1_loss_ce: 0.4872  m1_loss_mask: 0.1676  m1_loss_dice: 1.239  m1_loss_ce_0: 0.5914  m1_loss_mask_0: 0.1969  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.6835  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5804  m1_loss_mask_2: 0.1742  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5423  m1_loss_mask_3: 0.1766  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.5349  m1_loss_mask_4: 0.1731  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.5215  m1_loss_mask_5: 0.1741  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5038  m1_loss_mask_6: 0.1707  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.535  m1_loss_mask_7: 0.168  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.5017  m1_loss_mask_8: 0.1668  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4671  m2_loss_mask: 0.1734  m2_loss_dice: 1.189  m2_loss_ce_0: 0.6474  m2_loss_mask_0: 0.1987  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6865  m2_loss_mask_1: 0.1933  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6277  m2_loss_mask_2: 0.1812  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5487  m2_loss_mask_3: 0.1771  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5462  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.5395  m2_loss_mask_5: 0.1698  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.518  m2_loss_mask_6: 0.1756  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5158  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.504  m2_loss_mask_8: 0.1727  m2_loss_dice_8: 1.267    time: 1.5080  last_time: 1.4674  data_time: 0.0688  last_data_time: 0.0600   lr: 0.0001  max_mem: 35346M
[10/15 15:15:41] d2.utils.events INFO:  eta: 0:22:32  iter: 99  total_loss: 42.37  m1_loss_ce: 0.4848  m1_loss_mask: 0.1843  m1_loss_dice: 1.242  m1_loss_ce_0: 0.6087  m1_loss_mask_0: 0.2113  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.637  m1_loss_mask_1: 0.1934  m1_loss_dice_1: 1.43  m1_loss_ce_2: 0.5663  m1_loss_mask_2: 0.192  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.4967  m1_loss_mask_3: 0.1894  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.5039  m1_loss_mask_4: 0.1912  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.4772  m1_loss_mask_5: 0.1901  m1_loss_dice_5: 1.295  m1_loss_ce_6: 0.4996  m1_loss_mask_6: 0.1896  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4982  m1_loss_mask_7: 0.1829  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.4919  m1_loss_mask_8: 0.1843  m1_loss_dice_8: 1.268  m2_loss_ce: 0.4759  m2_loss_mask: 0.1759  m2_loss_dice: 1.324  m2_loss_ce_0: 0.6351  m2_loss_mask_0: 0.2018  m2_loss_dice_0: 1.484  m2_loss_ce_1: 0.6576  m2_loss_mask_1: 0.1902  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.5995  m2_loss_mask_2: 0.1818  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.5514  m2_loss_mask_3: 0.1819  m2_loss_dice_3: 1.302  m2_loss_ce_4: 0.5211  m2_loss_mask_4: 0.1809  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5051  m2_loss_mask_5: 0.1756  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.5004  m2_loss_mask_6: 0.1767  m2_loss_dice_6: 1.303  m2_loss_ce_7: 0.4947  m2_loss_mask_7: 0.1791  m2_loss_dice_7: 1.272  m2_loss_ce_8: 0.4719  m2_loss_mask_8: 0.179  m2_loss_dice_8: 1.294    time: 1.5103  last_time: 1.5214  data_time: 0.0712  last_data_time: 0.0775   lr: 0.0001  max_mem: 35346M
[10/15 15:16:13] d2.utils.events INFO:  eta: 0:22:17  iter: 119  total_loss: 40.48  m1_loss_ce: 0.4297  m1_loss_mask: 0.1783  m1_loss_dice: 1.218  m1_loss_ce_0: 0.5846  m1_loss_mask_0: 0.2036  m1_loss_dice_0: 1.457  m1_loss_ce_1: 0.6097  m1_loss_mask_1: 0.1946  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.5555  m1_loss_mask_2: 0.1783  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.4696  m1_loss_mask_3: 0.1776  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.4776  m1_loss_mask_4: 0.1802  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.4794  m1_loss_mask_5: 0.1724  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.4505  m1_loss_mask_6: 0.1764  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.465  m1_loss_mask_7: 0.1731  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4502  m1_loss_mask_8: 0.1788  m1_loss_dice_8: 1.231  m2_loss_ce: 0.462  m2_loss_mask: 0.1703  m2_loss_dice: 1.257  m2_loss_ce_0: 0.5885  m2_loss_mask_0: 0.2102  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.6486  m2_loss_mask_1: 0.1935  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.5667  m2_loss_mask_2: 0.1828  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5042  m2_loss_mask_3: 0.1756  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.4819  m2_loss_mask_4: 0.1721  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.4972  m2_loss_mask_5: 0.171  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4643  m2_loss_mask_6: 0.1729  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4522  m2_loss_mask_7: 0.1725  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4695  m2_loss_mask_8: 0.1705  m2_loss_dice_8: 1.236    time: 1.5216  last_time: 1.4995  data_time: 0.0695  last_data_time: 0.0413   lr: 0.0001  max_mem: 35346M
[10/15 15:16:43] d2.utils.events INFO:  eta: 0:21:47  iter: 139  total_loss: 40.08  m1_loss_ce: 0.4553  m1_loss_mask: 0.1683  m1_loss_dice: 1.201  m1_loss_ce_0: 0.5562  m1_loss_mask_0: 0.199  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.6216  m1_loss_mask_1: 0.1854  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.6191  m1_loss_mask_2: 0.1798  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.5072  m1_loss_mask_3: 0.1742  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.5298  m1_loss_mask_4: 0.1716  m1_loss_dice_4: 1.235  m1_loss_ce_5: 0.4915  m1_loss_mask_5: 0.1699  m1_loss_dice_5: 1.263  m1_loss_ce_6: 0.5147  m1_loss_mask_6: 0.1673  m1_loss_dice_6: 1.194  m1_loss_ce_7: 0.4613  m1_loss_mask_7: 0.1658  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.4784  m1_loss_mask_8: 0.1643  m1_loss_dice_8: 1.217  m2_loss_ce: 0.4749  m2_loss_mask: 0.1652  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5872  m2_loss_mask_0: 0.1991  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.653  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5972  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5338  m2_loss_mask_3: 0.1709  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.532  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5082  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.4745  m2_loss_mask_6: 0.1691  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.488  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.5013  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.245    time: 1.5218  last_time: 1.5158  data_time: 0.0910  last_data_time: 0.0848   lr: 0.0001  max_mem: 35346M
[10/15 15:17:13] d2.utils.events INFO:  eta: 0:21:13  iter: 159  total_loss: 38.96  m1_loss_ce: 0.4741  m1_loss_mask: 0.1724  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5522  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6006  m1_loss_mask_1: 0.1905  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.5911  m1_loss_mask_2: 0.1837  m1_loss_dice_2: 1.247  m1_loss_ce_3: 0.5068  m1_loss_mask_3: 0.1779  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.4989  m1_loss_mask_4: 0.1774  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.4845  m1_loss_mask_5: 0.1758  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.4675  m1_loss_mask_6: 0.1796  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.4603  m1_loss_mask_7: 0.1755  m1_loss_dice_7: 1.191  m1_loss_ce_8: 0.4507  m1_loss_mask_8: 0.1748  m1_loss_dice_8: 1.168  m2_loss_ce: 0.4725  m2_loss_mask: 0.1728  m2_loss_dice: 1.197  m2_loss_ce_0: 0.6009  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6872  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5958  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5552  m2_loss_mask_3: 0.1734  m2_loss_dice_3: 1.23  m2_loss_ce_4: 0.5535  m2_loss_mask_4: 0.17  m2_loss_dice_4: 1.251  m2_loss_ce_5: 0.4957  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.5049  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.173  m2_loss_ce_7: 0.5098  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4892  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.19    time: 1.5156  last_time: 1.5478  data_time: 0.0756  last_data_time: 0.0537   lr: 0.0001  max_mem: 35346M
[10/15 15:17:43] d2.utils.events INFO:  eta: 0:20:43  iter: 179  total_loss: 40.55  m1_loss_ce: 0.4736  m1_loss_mask: 0.1769  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5757  m1_loss_mask_0: 0.2095  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6706  m1_loss_mask_1: 0.1907  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5837  m1_loss_mask_2: 0.1834  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.5245  m1_loss_mask_3: 0.1779  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4885  m1_loss_mask_4: 0.1782  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.516  m1_loss_mask_5: 0.1753  m1_loss_dice_5: 1.214  m1_loss_ce_6: 0.5078  m1_loss_mask_6: 0.175  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.5061  m1_loss_mask_7: 0.1753  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4827  m1_loss_mask_8: 0.1784  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4855  m2_loss_mask: 0.1737  m2_loss_dice: 1.223  m2_loss_ce_0: 0.604  m2_loss_mask_0: 0.201  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6583  m2_loss_mask_1: 0.1906  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6091  m2_loss_mask_2: 0.1792  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.5482  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.531  m2_loss_mask_4: 0.1743  m2_loss_dice_4: 1.211  m2_loss_ce_5: 0.5109  m2_loss_mask_5: 0.174  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.5055  m2_loss_mask_6: 0.1766  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4715  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.257  m2_loss_ce_8: 0.459  m2_loss_mask_8: 0.1728  m2_loss_dice_8: 1.238    time: 1.5139  last_time: 1.5171  data_time: 0.0665  last_data_time: 0.0603   lr: 0.0001  max_mem: 35346M
[10/15 15:18:13] d2.utils.events INFO:  eta: 0:20:13  iter: 199  total_loss: 39.31  m1_loss_ce: 0.4526  m1_loss_mask: 0.1642  m1_loss_dice: 1.132  m1_loss_ce_0: 0.5974  m1_loss_mask_0: 0.1964  m1_loss_dice_0: 1.387  m1_loss_ce_1: 0.5993  m1_loss_mask_1: 0.174  m1_loss_dice_1: 1.299  m1_loss_ce_2: 0.5776  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.237  m1_loss_ce_3: 0.4981  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.4949  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.186  m1_loss_ce_5: 0.4647  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.4332  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.138  m1_loss_ce_7: 0.4628  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.159  m1_loss_ce_8: 0.4412  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.18  m2_loss_ce: 0.4886  m2_loss_mask: 0.1594  m2_loss_dice: 1.208  m2_loss_ce_0: 0.5892  m2_loss_mask_0: 0.1946  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.6647  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.5671  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5526  m2_loss_mask_3: 0.1659  m2_loss_dice_3: 1.246  m2_loss_ce_4: 0.5261  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.4925  m2_loss_mask_5: 0.1643  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.4905  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.192  m2_loss_ce_7: 0.5177  m2_loss_mask_7: 0.1648  m2_loss_dice_7: 1.169  m2_loss_ce_8: 0.49  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.182    time: 1.5141  last_time: 1.4563  data_time: 0.0705  last_data_time: 0.0732   lr: 0.0001  max_mem: 35346M
[10/15 15:18:43] d2.utils.events INFO:  eta: 0:19:35  iter: 219  total_loss: 39.77  m1_loss_ce: 0.4096  m1_loss_mask: 0.1663  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5739  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.6224  m1_loss_mask_1: 0.181  m1_loss_dice_1: 1.396  m1_loss_ce_2: 0.5857  m1_loss_mask_2: 0.1716  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.5024  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.4816  m1_loss_mask_4: 0.1705  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.4692  m1_loss_mask_5: 0.1698  m1_loss_dice_5: 1.274  m1_loss_ce_6: 0.439  m1_loss_mask_6: 0.1677  m1_loss_dice_6: 1.247  m1_loss_ce_7: 0.4475  m1_loss_mask_7: 0.1663  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.4393  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.242  m2_loss_ce: 0.4731  m2_loss_mask: 0.1646  m2_loss_dice: 1.258  m2_loss_ce_0: 0.5706  m2_loss_mask_0: 0.1877  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6336  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.568  m2_loss_mask_2: 0.1731  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5074  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.487  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.4929  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.4725  m2_loss_mask_6: 0.1659  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.4644  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.4699  m2_loss_mask_8: 0.1639  m2_loss_dice_8: 1.271    time: 1.5105  last_time: 1.4814  data_time: 0.0573  last_data_time: 0.0499   lr: 0.0001  max_mem: 35346M
[10/15 15:19:14] d2.utils.events INFO:  eta: 0:19:12  iter: 239  total_loss: 38.96  m1_loss_ce: 0.4224  m1_loss_mask: 0.1778  m1_loss_dice: 1.169  m1_loss_ce_0: 0.5311  m1_loss_mask_0: 0.2171  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.557  m1_loss_mask_1: 0.1953  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.5524  m1_loss_mask_2: 0.1896  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5172  m1_loss_mask_3: 0.1845  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.4892  m1_loss_mask_4: 0.1827  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.4589  m1_loss_mask_5: 0.1795  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4792  m1_loss_mask_6: 0.1762  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.4744  m1_loss_mask_7: 0.1779  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4534  m1_loss_mask_8: 0.1771  m1_loss_dice_8: 1.205  m2_loss_ce: 0.4479  m2_loss_mask: 0.1705  m2_loss_dice: 1.22  m2_loss_ce_0: 0.5776  m2_loss_mask_0: 0.2016  m2_loss_dice_0: 1.45  m2_loss_ce_1: 0.5976  m2_loss_mask_1: 0.193  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.5891  m2_loss_mask_2: 0.1746  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.4931  m2_loss_mask_3: 0.1711  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.494  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.4582  m2_loss_mask_5: 0.1703  m2_loss_dice_5: 1.225  m2_loss_ce_6: 0.4641  m2_loss_mask_6: 0.1716  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4639  m2_loss_mask_7: 0.1716  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.4382  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.179    time: 1.5128  last_time: 1.5221  data_time: 0.0691  last_data_time: 0.0513   lr: 0.0001  max_mem: 35346M
[10/15 15:19:45] d2.utils.events INFO:  eta: 0:18:41  iter: 259  total_loss: 39.24  m1_loss_ce: 0.4892  m1_loss_mask: 0.171  m1_loss_dice: 1.211  m1_loss_ce_0: 0.5666  m1_loss_mask_0: 0.2003  m1_loss_dice_0: 1.437  m1_loss_ce_1: 0.6324  m1_loss_mask_1: 0.1866  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.5931  m1_loss_mask_2: 0.1853  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5176  m1_loss_mask_3: 0.1788  m1_loss_dice_3: 1.228  m1_loss_ce_4: 0.5101  m1_loss_mask_4: 0.1786  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.4788  m1_loss_mask_5: 0.1751  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.4893  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4952  m1_loss_mask_7: 0.1738  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.494  m1_loss_mask_8: 0.1743  m1_loss_dice_8: 1.187  m2_loss_ce: 0.4659  m2_loss_mask: 0.175  m2_loss_dice: 1.255  m2_loss_ce_0: 0.619  m2_loss_mask_0: 0.2084  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6521  m2_loss_mask_1: 0.2034  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.5862  m2_loss_mask_2: 0.183  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5341  m2_loss_mask_3: 0.1772  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5254  m2_loss_mask_4: 0.1786  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5095  m2_loss_mask_5: 0.1791  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.4936  m2_loss_mask_6: 0.1777  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4873  m2_loss_mask_7: 0.1763  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4862  m2_loss_mask_8: 0.1743  m2_loss_dice_8: 1.197    time: 1.5147  last_time: 1.5682  data_time: 0.0612  last_data_time: 0.0413   lr: 0.0001  max_mem: 35346M
[10/15 15:20:17] d2.utils.events INFO:  eta: 0:18:13  iter: 279  total_loss: 40.17  m1_loss_ce: 0.5116  m1_loss_mask: 0.1678  m1_loss_dice: 1.26  m1_loss_ce_0: 0.566  m1_loss_mask_0: 0.191  m1_loss_dice_0: 1.488  m1_loss_ce_1: 0.6079  m1_loss_mask_1: 0.1811  m1_loss_dice_1: 1.414  m1_loss_ce_2: 0.6108  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5219  m1_loss_mask_3: 0.1708  m1_loss_dice_3: 1.27  m1_loss_ce_4: 0.5147  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.515  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.257  m1_loss_ce_6: 0.4901  m1_loss_mask_6: 0.1693  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.5021  m1_loss_mask_7: 0.1678  m1_loss_dice_7: 1.272  m1_loss_ce_8: 0.4797  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.237  m2_loss_ce: 0.4921  m2_loss_mask: 0.1654  m2_loss_dice: 1.266  m2_loss_ce_0: 0.6216  m2_loss_mask_0: 0.1966  m2_loss_dice_0: 1.525  m2_loss_ce_1: 0.6773  m2_loss_mask_1: 0.1893  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6245  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.5524  m2_loss_mask_3: 0.1681  m2_loss_dice_3: 1.311  m2_loss_ce_4: 0.5373  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5387  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.5186  m2_loss_mask_6: 0.1654  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5031  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.4972  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.27    time: 1.5205  last_time: 1.5203  data_time: 0.0834  last_data_time: 0.0515   lr: 0.0001  max_mem: 35346M
[10/15 15:20:47] d2.utils.events INFO:  eta: 0:17:42  iter: 299  total_loss: 40.33  m1_loss_ce: 0.4739  m1_loss_mask: 0.1633  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5694  m1_loss_mask_0: 0.1936  m1_loss_dice_0: 1.448  m1_loss_ce_1: 0.663  m1_loss_mask_1: 0.1785  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.6201  m1_loss_mask_2: 0.1672  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.539  m1_loss_mask_3: 0.163  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.5216  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.5195  m1_loss_mask_5: 0.1606  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.5096  m1_loss_mask_6: 0.1657  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.4812  m1_loss_mask_7: 0.1641  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4918  m1_loss_mask_8: 0.1607  m1_loss_dice_8: 1.223  m2_loss_ce: 0.4957  m2_loss_mask: 0.1611  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6318  m2_loss_mask_0: 0.1917  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.7026  m2_loss_mask_1: 0.1848  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.6152  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5376  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.297  m2_loss_ce_4: 0.5385  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.55  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5232  m2_loss_mask_6: 0.1599  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.5226  m2_loss_mask_7: 0.1644  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4891  m2_loss_mask_8: 0.1619  m2_loss_dice_8: 1.284    time: 1.5207  last_time: 1.7037  data_time: 0.0695  last_data_time: 0.0609   lr: 0.0001  max_mem: 35346M
[10/15 15:21:18] d2.utils.events INFO:  eta: 0:17:11  iter: 319  total_loss: 43.17  m1_loss_ce: 0.5074  m1_loss_mask: 0.1558  m1_loss_dice: 1.326  m1_loss_ce_0: 0.618  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.546  m1_loss_ce_1: 0.6963  m1_loss_mask_1: 0.1738  m1_loss_dice_1: 1.473  m1_loss_ce_2: 0.6721  m1_loss_mask_2: 0.1572  m1_loss_dice_2: 1.374  m1_loss_ce_3: 0.5804  m1_loss_mask_3: 0.1543  m1_loss_dice_3: 1.352  m1_loss_ce_4: 0.5642  m1_loss_mask_4: 0.1538  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.5618  m1_loss_mask_5: 0.1528  m1_loss_dice_5: 1.312  m1_loss_ce_6: 0.5128  m1_loss_mask_6: 0.1581  m1_loss_dice_6: 1.317  m1_loss_ce_7: 0.5456  m1_loss_mask_7: 0.1518  m1_loss_dice_7: 1.318  m1_loss_ce_8: 0.5208  m1_loss_mask_8: 0.1573  m1_loss_dice_8: 1.313  m2_loss_ce: 0.5016  m2_loss_mask: 0.1509  m2_loss_dice: 1.398  m2_loss_ce_0: 0.6421  m2_loss_mask_0: 0.1807  m2_loss_dice_0: 1.598  m2_loss_ce_1: 0.6959  m2_loss_mask_1: 0.1714  m2_loss_dice_1: 1.448  m2_loss_ce_2: 0.6384  m2_loss_mask_2: 0.1558  m2_loss_dice_2: 1.422  m2_loss_ce_3: 0.5744  m2_loss_mask_3: 0.1542  m2_loss_dice_3: 1.388  m2_loss_ce_4: 0.5699  m2_loss_mask_4: 0.1512  m2_loss_dice_4: 1.344  m2_loss_ce_5: 0.5476  m2_loss_mask_5: 0.1517  m2_loss_dice_5: 1.354  m2_loss_ce_6: 0.5113  m2_loss_mask_6: 0.1537  m2_loss_dice_6: 1.328  m2_loss_ce_7: 0.542  m2_loss_mask_7: 0.154  m2_loss_dice_7: 1.308  m2_loss_ce_8: 0.4765  m2_loss_mask_8: 0.154  m2_loss_dice_8: 1.355    time: 1.5209  last_time: 1.3525  data_time: 0.0673  last_data_time: 0.0520   lr: 0.0001  max_mem: 35346M
[10/15 15:21:49] d2.utils.events INFO:  eta: 0:16:43  iter: 339  total_loss: 39.71  m1_loss_ce: 0.4721  m1_loss_mask: 0.1685  m1_loss_dice: 1.18  m1_loss_ce_0: 0.5821  m1_loss_mask_0: 0.1816  m1_loss_dice_0: 1.394  m1_loss_ce_1: 0.6365  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.5803  m1_loss_mask_2: 0.1701  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5054  m1_loss_mask_3: 0.1727  m1_loss_dice_3: 1.295  m1_loss_ce_4: 0.4862  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.482  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4973  m1_loss_mask_6: 0.1739  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4734  m1_loss_mask_7: 0.1717  m1_loss_dice_7: 1.219  m1_loss_ce_8: 0.4656  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.217  m2_loss_ce: 0.4436  m2_loss_mask: 0.1538  m2_loss_dice: 1.231  m2_loss_ce_0: 0.5892  m2_loss_mask_0: 0.182  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6606  m2_loss_mask_1: 0.1661  m2_loss_dice_1: 1.332  m2_loss_ce_2: 0.5808  m2_loss_mask_2: 0.1572  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5295  m2_loss_mask_3: 0.1596  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5027  m2_loss_mask_4: 0.154  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.505  m2_loss_mask_5: 0.153  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4812  m2_loss_mask_6: 0.1545  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4687  m2_loss_mask_7: 0.1528  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.4612  m2_loss_mask_8: 0.1537  m2_loss_dice_8: 1.246    time: 1.5232  last_time: 1.6332  data_time: 0.0749  last_data_time: 0.1012   lr: 0.0001  max_mem: 35346M
[10/15 15:22:20] d2.utils.events INFO:  eta: 0:16:12  iter: 359  total_loss: 42.17  m1_loss_ce: 0.4919  m1_loss_mask: 0.1681  m1_loss_dice: 1.262  m1_loss_ce_0: 0.6099  m1_loss_mask_0: 0.1966  m1_loss_dice_0: 1.516  m1_loss_ce_1: 0.6404  m1_loss_mask_1: 0.1878  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.6112  m1_loss_mask_2: 0.1727  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5328  m1_loss_mask_3: 0.1715  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.5117  m1_loss_mask_4: 0.1697  m1_loss_dice_4: 1.283  m1_loss_ce_5: 0.5101  m1_loss_mask_5: 0.1659  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.4863  m1_loss_mask_6: 0.1702  m1_loss_dice_6: 1.238  m1_loss_ce_7: 0.4777  m1_loss_mask_7: 0.1687  m1_loss_dice_7: 1.283  m1_loss_ce_8: 0.4649  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.27  m2_loss_ce: 0.5065  m2_loss_mask: 0.1678  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6042  m2_loss_mask_0: 0.2036  m2_loss_dice_0: 1.569  m2_loss_ce_1: 0.6623  m2_loss_mask_1: 0.1868  m2_loss_dice_1: 1.443  m2_loss_ce_2: 0.607  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.541  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.348  m2_loss_ce_4: 0.5384  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.331  m2_loss_ce_5: 0.5408  m2_loss_mask_5: 0.1645  m2_loss_dice_5: 1.313  m2_loss_ce_6: 0.4972  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.5033  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.5055  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.295    time: 1.5242  last_time: 1.7367  data_time: 0.0932  last_data_time: 0.2288   lr: 0.0001  max_mem: 35346M
[10/15 15:22:51] d2.utils.events INFO:  eta: 0:15:42  iter: 379  total_loss: 38.69  m1_loss_ce: 0.4539  m1_loss_mask: 0.1603  m1_loss_dice: 1.171  m1_loss_ce_0: 0.5492  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.6194  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5737  m1_loss_mask_2: 0.1636  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.5187  m1_loss_mask_3: 0.161  m1_loss_dice_3: 1.227  m1_loss_ce_4: 0.4937  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.4961  m1_loss_mask_5: 0.1637  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.484  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.4758  m1_loss_mask_7: 0.1631  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4799  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.208  m2_loss_ce: 0.4735  m2_loss_mask: 0.1619  m2_loss_dice: 1.226  m2_loss_ce_0: 0.5853  m2_loss_mask_0: 0.1896  m2_loss_dice_0: 1.4  m2_loss_ce_1: 0.6747  m2_loss_mask_1: 0.1782  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5968  m2_loss_mask_2: 0.1658  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5285  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.4712  m2_loss_mask_4: 0.1613  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.5004  m2_loss_mask_5: 0.1611  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.4625  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.4764  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.4479  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.235    time: 1.5247  last_time: 1.5690  data_time: 0.0872  last_data_time: 0.0729   lr: 0.0001  max_mem: 35346M
[10/15 15:23:22] d2.utils.events INFO:  eta: 0:15:12  iter: 399  total_loss: 40.02  m1_loss_ce: 0.4572  m1_loss_mask: 0.1595  m1_loss_dice: 1.245  m1_loss_ce_0: 0.5551  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.482  m1_loss_ce_1: 0.604  m1_loss_mask_1: 0.1815  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.5405  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.4766  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.301  m1_loss_ce_4: 0.4877  m1_loss_mask_4: 0.1662  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.475  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.274  m1_loss_ce_6: 0.471  m1_loss_mask_6: 0.1607  m1_loss_dice_6: 1.273  m1_loss_ce_7: 0.4577  m1_loss_mask_7: 0.1609  m1_loss_dice_7: 1.261  m1_loss_ce_8: 0.4617  m1_loss_mask_8: 0.1594  m1_loss_dice_8: 1.253  m2_loss_ce: 0.4584  m2_loss_mask: 0.164  m2_loss_dice: 1.29  m2_loss_ce_0: 0.6012  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.5  m2_loss_ce_1: 0.6169  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5707  m2_loss_mask_2: 0.1702  m2_loss_dice_2: 1.37  m2_loss_ce_3: 0.5484  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.4963  m2_loss_mask_4: 0.1662  m2_loss_dice_4: 1.321  m2_loss_ce_5: 0.4937  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4541  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.4856  m2_loss_mask_7: 0.1653  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.4623  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.287    time: 1.5248  last_time: 1.5769  data_time: 0.1040  last_data_time: 0.0807   lr: 0.0001  max_mem: 35346M
[10/15 15:23:52] d2.utils.events INFO:  eta: 0:14:42  iter: 419  total_loss: 40.45  m1_loss_ce: 0.4542  m1_loss_mask: 0.1591  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5399  m1_loss_mask_0: 0.1815  m1_loss_dice_0: 1.489  m1_loss_ce_1: 0.6432  m1_loss_mask_1: 0.1633  m1_loss_dice_1: 1.432  m1_loss_ce_2: 0.5899  m1_loss_mask_2: 0.1561  m1_loss_dice_2: 1.368  m1_loss_ce_3: 0.5017  m1_loss_mask_3: 0.1594  m1_loss_dice_3: 1.314  m1_loss_ce_4: 0.5051  m1_loss_mask_4: 0.1594  m1_loss_dice_4: 1.321  m1_loss_ce_5: 0.4804  m1_loss_mask_5: 0.1567  m1_loss_dice_5: 1.32  m1_loss_ce_6: 0.4772  m1_loss_mask_6: 0.1581  m1_loss_dice_6: 1.283  m1_loss_ce_7: 0.4583  m1_loss_mask_7: 0.1568  m1_loss_dice_7: 1.297  m1_loss_ce_8: 0.468  m1_loss_mask_8: 0.1581  m1_loss_dice_8: 1.275  m2_loss_ce: 0.4543  m2_loss_mask: 0.1574  m2_loss_dice: 1.319  m2_loss_ce_0: 0.6254  m2_loss_mask_0: 0.1813  m2_loss_dice_0: 1.565  m2_loss_ce_1: 0.6561  m2_loss_mask_1: 0.1692  m2_loss_dice_1: 1.494  m2_loss_ce_2: 0.5575  m2_loss_mask_2: 0.1591  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.5333  m2_loss_mask_3: 0.1613  m2_loss_dice_3: 1.342  m2_loss_ce_4: 0.5235  m2_loss_mask_4: 0.1545  m2_loss_dice_4: 1.349  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.1556  m2_loss_dice_5: 1.32  m2_loss_ce_6: 0.4629  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.311  m2_loss_ce_7: 0.4728  m2_loss_mask_7: 0.156  m2_loss_dice_7: 1.312  m2_loss_ce_8: 0.4745  m2_loss_mask_8: 0.1575  m2_loss_dice_8: 1.317    time: 1.5255  last_time: 1.3031  data_time: 0.1194  last_data_time: 0.0507   lr: 0.0001  max_mem: 35346M
[10/15 15:24:23] d2.utils.events INFO:  eta: 0:14:11  iter: 439  total_loss: 41.87  m1_loss_ce: 0.4489  m1_loss_mask: 0.1587  m1_loss_dice: 1.24  m1_loss_ce_0: 0.5509  m1_loss_mask_0: 0.1933  m1_loss_dice_0: 1.507  m1_loss_ce_1: 0.6235  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.438  m1_loss_ce_2: 0.5254  m1_loss_mask_2: 0.1598  m1_loss_dice_2: 1.374  m1_loss_ce_3: 0.5068  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4416  m1_loss_mask_4: 0.1609  m1_loss_dice_4: 1.304  m1_loss_ce_5: 0.4694  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.326  m1_loss_ce_6: 0.4356  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.294  m1_loss_ce_7: 0.4569  m1_loss_mask_7: 0.1594  m1_loss_dice_7: 1.294  m1_loss_ce_8: 0.4558  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.258  m2_loss_ce: 0.4802  m2_loss_mask: 0.1649  m2_loss_dice: 1.35  m2_loss_ce_0: 0.6215  m2_loss_mask_0: 0.1936  m2_loss_dice_0: 1.61  m2_loss_ce_1: 0.6721  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.489  m2_loss_ce_2: 0.584  m2_loss_mask_2: 0.1731  m2_loss_dice_2: 1.459  m2_loss_ce_3: 0.5419  m2_loss_mask_3: 0.1728  m2_loss_dice_3: 1.359  m2_loss_ce_4: 0.5317  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.359  m2_loss_ce_5: 0.5092  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.373  m2_loss_ce_6: 0.4896  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.346  m2_loss_ce_7: 0.4776  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.399  m2_loss_ce_8: 0.4834  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.371    time: 1.5251  last_time: 1.4610  data_time: 0.0902  last_data_time: 0.1551   lr: 0.0001  max_mem: 35346M
[10/15 15:24:53] d2.utils.events INFO:  eta: 0:13:41  iter: 459  total_loss: 39.09  m1_loss_ce: 0.4673  m1_loss_mask: 0.1672  m1_loss_dice: 1.165  m1_loss_ce_0: 0.519  m1_loss_mask_0: 0.1905  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.5719  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.544  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.237  m1_loss_ce_3: 0.4767  m1_loss_mask_3: 0.1703  m1_loss_dice_3: 1.207  m1_loss_ce_4: 0.4437  m1_loss_mask_4: 0.167  m1_loss_dice_4: 1.177  m1_loss_ce_5: 0.4628  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.4529  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.4719  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.433  m1_loss_mask_8: 0.1666  m1_loss_dice_8: 1.203  m2_loss_ce: 0.4504  m2_loss_mask: 0.1723  m2_loss_dice: 1.238  m2_loss_ce_0: 0.5785  m2_loss_mask_0: 0.1932  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6647  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5675  m2_loss_mask_2: 0.1753  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5566  m2_loss_mask_3: 0.1751  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5032  m2_loss_mask_4: 0.1712  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.4926  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.237  m2_loss_ce_6: 0.4651  m2_loss_mask_6: 0.1725  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.4697  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.4681  m2_loss_mask_8: 0.171  m2_loss_dice_8: 1.235    time: 1.5251  last_time: 1.3274  data_time: 0.0913  last_data_time: 0.0505   lr: 0.0001  max_mem: 35346M
[10/15 15:25:25] d2.utils.events INFO:  eta: 0:13:11  iter: 479  total_loss: 38.56  m1_loss_ce: 0.4286  m1_loss_mask: 0.16  m1_loss_dice: 1.175  m1_loss_ce_0: 0.5317  m1_loss_mask_0: 0.1797  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.595  m1_loss_mask_1: 0.1672  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5443  m1_loss_mask_2: 0.158  m1_loss_dice_2: 1.283  m1_loss_ce_3: 0.484  m1_loss_mask_3: 0.1585  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4552  m1_loss_mask_4: 0.1589  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.464  m1_loss_mask_5: 0.1565  m1_loss_dice_5: 1.196  m1_loss_ce_6: 0.4695  m1_loss_mask_6: 0.1608  m1_loss_dice_6: 1.172  m1_loss_ce_7: 0.4539  m1_loss_mask_7: 0.1601  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.4498  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.165  m2_loss_ce: 0.4542  m2_loss_mask: 0.1621  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5665  m2_loss_mask_0: 0.1848  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6564  m2_loss_mask_1: 0.1836  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5743  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.334  m2_loss_ce_3: 0.5364  m2_loss_mask_3: 0.1665  m2_loss_dice_3: 1.297  m2_loss_ce_4: 0.5327  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.5087  m2_loss_mask_5: 0.1638  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4617  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.4741  m2_loss_mask_7: 0.1687  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4719  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.236    time: 1.5262  last_time: 1.4614  data_time: 0.0749  last_data_time: 0.0445   lr: 0.0001  max_mem: 35346M
[10/15 15:25:56] d2.utils.events INFO:  eta: 0:12:42  iter: 499  total_loss: 40.36  m1_loss_ce: 0.4632  m1_loss_mask: 0.1626  m1_loss_dice: 1.218  m1_loss_ce_0: 0.585  m1_loss_mask_0: 0.1926  m1_loss_dice_0: 1.419  m1_loss_ce_1: 0.6261  m1_loss_mask_1: 0.1789  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.6197  m1_loss_mask_2: 0.1655  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5076  m1_loss_mask_3: 0.1638  m1_loss_dice_3: 1.238  m1_loss_ce_4: 0.4798  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.263  m1_loss_ce_5: 0.5347  m1_loss_mask_5: 0.1654  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.4626  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4633  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.4799  m1_loss_mask_8: 0.1642  m1_loss_dice_8: 1.258  m2_loss_ce: 0.4841  m2_loss_mask: 0.1643  m2_loss_dice: 1.27  m2_loss_ce_0: 0.6027  m2_loss_mask_0: 0.201  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.6759  m2_loss_mask_1: 0.1838  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.6271  m2_loss_mask_2: 0.1692  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5746  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5369  m2_loss_mask_4: 0.1646  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.5398  m2_loss_mask_5: 0.1632  m2_loss_dice_5: 1.325  m2_loss_ce_6: 0.5061  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.287  m2_loss_ce_7: 0.516  m2_loss_mask_7: 0.1665  m2_loss_dice_7: 1.279  m2_loss_ce_8: 0.4758  m2_loss_mask_8: 0.1668  m2_loss_dice_8: 1.297    time: 1.5282  last_time: 1.5290  data_time: 0.0966  last_data_time: 0.0593   lr: 0.0001  max_mem: 35346M
[10/15 15:26:27] d2.utils.events INFO:  eta: 0:12:11  iter: 519  total_loss: 38.72  m1_loss_ce: 0.4493  m1_loss_mask: 0.1655  m1_loss_dice: 1.177  m1_loss_ce_0: 0.5916  m1_loss_mask_0: 0.1827  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.6181  m1_loss_mask_1: 0.1707  m1_loss_dice_1: 1.29  m1_loss_ce_2: 0.5716  m1_loss_mask_2: 0.1623  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.4935  m1_loss_mask_3: 0.1641  m1_loss_dice_3: 1.192  m1_loss_ce_4: 0.4929  m1_loss_mask_4: 0.1651  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.4792  m1_loss_mask_5: 0.164  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.4689  m1_loss_mask_6: 0.1666  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4607  m1_loss_mask_7: 0.1654  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.474  m1_loss_mask_8: 0.1649  m1_loss_dice_8: 1.138  m2_loss_ce: 0.4676  m2_loss_mask: 0.1674  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5935  m2_loss_mask_0: 0.1918  m2_loss_dice_0: 1.393  m2_loss_ce_1: 0.6733  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.333  m2_loss_ce_2: 0.586  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5362  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5213  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4958  m2_loss_mask_5: 0.1664  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4918  m2_loss_mask_6: 0.1684  m2_loss_dice_6: 1.207  m2_loss_ce_7: 0.4994  m2_loss_mask_7: 0.1709  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4795  m2_loss_mask_8: 0.1693  m2_loss_dice_8: 1.223    time: 1.5278  last_time: 1.5065  data_time: 0.0916  last_data_time: 0.0477   lr: 0.0001  max_mem: 35346M
[10/15 15:26:58] d2.utils.events INFO:  eta: 0:11:41  iter: 539  total_loss: 40.61  m1_loss_ce: 0.4749  m1_loss_mask: 0.1616  m1_loss_dice: 1.229  m1_loss_ce_0: 0.6164  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6703  m1_loss_mask_1: 0.1715  m1_loss_dice_1: 1.366  m1_loss_ce_2: 0.5711  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.305  m1_loss_ce_3: 0.5164  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.259  m1_loss_ce_4: 0.5093  m1_loss_mask_4: 0.1627  m1_loss_dice_4: 1.263  m1_loss_ce_5: 0.4993  m1_loss_mask_5: 0.1623  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.5184  m1_loss_mask_6: 0.1612  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4603  m1_loss_mask_7: 0.1629  m1_loss_dice_7: 1.213  m1_loss_ce_8: 0.4888  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.192  m2_loss_ce: 0.4689  m2_loss_mask: 0.1591  m2_loss_dice: 1.298  m2_loss_ce_0: 0.6295  m2_loss_mask_0: 0.1877  m2_loss_dice_0: 1.499  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.1713  m2_loss_dice_1: 1.429  m2_loss_ce_2: 0.6157  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.332  m2_loss_ce_3: 0.5473  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.5542  m2_loss_mask_4: 0.1603  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.5154  m2_loss_mask_5: 0.155  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.4848  m2_loss_mask_6: 0.161  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.4998  m2_loss_mask_7: 0.1577  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.4931  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.256    time: 1.5285  last_time: 1.5678  data_time: 0.0831  last_data_time: 0.0492   lr: 0.0001  max_mem: 35346M
[10/15 15:27:28] d2.utils.events INFO:  eta: 0:11:11  iter: 559  total_loss: 40.19  m1_loss_ce: 0.4928  m1_loss_mask: 0.16  m1_loss_dice: 1.202  m1_loss_ce_0: 0.5618  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.405  m1_loss_ce_1: 0.6536  m1_loss_mask_1: 0.1736  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.579  m1_loss_mask_2: 0.1619  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.5286  m1_loss_mask_3: 0.162  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.4867  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.509  m1_loss_mask_5: 0.161  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4854  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4847  m1_loss_mask_7: 0.1614  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.4976  m1_loss_mask_8: 0.1571  m1_loss_dice_8: 1.199  m2_loss_ce: 0.4962  m2_loss_mask: 0.1675  m2_loss_dice: 1.296  m2_loss_ce_0: 0.5965  m2_loss_mask_0: 0.1995  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6872  m2_loss_mask_1: 0.1838  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.6309  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.5633  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5591  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.5142  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.5134  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.28  m2_loss_ce_7: 0.5104  m2_loss_mask_7: 0.1626  m2_loss_dice_7: 1.272  m2_loss_ce_8: 0.4947  m2_loss_mask_8: 0.1647  m2_loss_dice_8: 1.296    time: 1.5283  last_time: 1.5712  data_time: 0.1021  last_data_time: 0.0487   lr: 0.0001  max_mem: 35346M
[10/15 15:27:59] d2.utils.events INFO:  eta: 0:10:40  iter: 579  total_loss: 38.93  m1_loss_ce: 0.4918  m1_loss_mask: 0.1665  m1_loss_dice: 1.155  m1_loss_ce_0: 0.6157  m1_loss_mask_0: 0.2006  m1_loss_dice_0: 1.39  m1_loss_ce_1: 0.6205  m1_loss_mask_1: 0.1813  m1_loss_dice_1: 1.29  m1_loss_ce_2: 0.5892  m1_loss_mask_2: 0.1702  m1_loss_dice_2: 1.246  m1_loss_ce_3: 0.5413  m1_loss_mask_3: 0.1715  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.4989  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.4895  m1_loss_mask_5: 0.1701  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.496  m1_loss_mask_6: 0.1693  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.4881  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.4793  m1_loss_mask_8: 0.1648  m1_loss_dice_8: 1.167  m2_loss_ce: 0.5037  m2_loss_mask: 0.1715  m2_loss_dice: 1.241  m2_loss_ce_0: 0.598  m2_loss_mask_0: 0.2107  m2_loss_dice_0: 1.42  m2_loss_ce_1: 0.6698  m2_loss_mask_1: 0.1978  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5811  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.554  m2_loss_mask_3: 0.1752  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5682  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.546  m2_loss_mask_5: 0.1725  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.5233  m2_loss_mask_6: 0.1728  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5213  m2_loss_mask_7: 0.1738  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.5153  m2_loss_mask_8: 0.1706  m2_loss_dice_8: 1.248    time: 1.5282  last_time: 1.5572  data_time: 0.0891  last_data_time: 0.0435   lr: 0.0001  max_mem: 35346M
[10/15 15:28:31] d2.utils.events INFO:  eta: 0:10:11  iter: 599  total_loss: 39.87  m1_loss_ce: 0.4644  m1_loss_mask: 0.1579  m1_loss_dice: 1.216  m1_loss_ce_0: 0.6017  m1_loss_mask_0: 0.1761  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.6585  m1_loss_mask_1: 0.169  m1_loss_dice_1: 1.326  m1_loss_ce_2: 0.5919  m1_loss_mask_2: 0.1574  m1_loss_dice_2: 1.32  m1_loss_ce_3: 0.4983  m1_loss_mask_3: 0.1595  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5092  m1_loss_mask_4: 0.1567  m1_loss_dice_4: 1.201  m1_loss_ce_5: 0.4973  m1_loss_mask_5: 0.1562  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.4865  m1_loss_mask_6: 0.1563  m1_loss_dice_6: 1.209  m1_loss_ce_7: 0.4715  m1_loss_mask_7: 0.1565  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.477  m1_loss_mask_8: 0.1525  m1_loss_dice_8: 1.207  m2_loss_ce: 0.4652  m2_loss_mask: 0.1572  m2_loss_dice: 1.268  m2_loss_ce_0: 0.6291  m2_loss_mask_0: 0.1873  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6801  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.5943  m2_loss_mask_2: 0.1606  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5279  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5101  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.534  m2_loss_mask_5: 0.1564  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4949  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5076  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4966  m2_loss_mask_8: 0.1576  m2_loss_dice_8: 1.228    time: 1.5301  last_time: 1.3327  data_time: 0.1191  last_data_time: 0.0531   lr: 0.0001  max_mem: 35346M
[10/15 15:29:03] d2.utils.events INFO:  eta: 0:09:41  iter: 619  total_loss: 36.5  m1_loss_ce: 0.4336  m1_loss_mask: 0.1626  m1_loss_dice: 1.104  m1_loss_ce_0: 0.5195  m1_loss_mask_0: 0.1913  m1_loss_dice_0: 1.313  m1_loss_ce_1: 0.5422  m1_loss_mask_1: 0.1794  m1_loss_dice_1: 1.221  m1_loss_ce_2: 0.5332  m1_loss_mask_2: 0.1665  m1_loss_dice_2: 1.208  m1_loss_ce_3: 0.4563  m1_loss_mask_3: 0.1654  m1_loss_dice_3: 1.121  m1_loss_ce_4: 0.4318  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.1  m1_loss_ce_5: 0.4407  m1_loss_mask_5: 0.1595  m1_loss_dice_5: 1.107  m1_loss_ce_6: 0.4228  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.111  m1_loss_ce_7: 0.4086  m1_loss_mask_7: 0.1598  m1_loss_dice_7: 1.088  m1_loss_ce_8: 0.4228  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.115  m2_loss_ce: 0.4342  m2_loss_mask: 0.1678  m2_loss_dice: 1.127  m2_loss_ce_0: 0.572  m2_loss_mask_0: 0.204  m2_loss_dice_0: 1.351  m2_loss_ce_1: 0.63  m2_loss_mask_1: 0.1898  m2_loss_dice_1: 1.279  m2_loss_ce_2: 0.5705  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.223  m2_loss_ce_3: 0.5136  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.175  m2_loss_ce_4: 0.4783  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.174  m2_loss_ce_5: 0.4533  m2_loss_mask_5: 0.1677  m2_loss_dice_5: 1.162  m2_loss_ce_6: 0.4382  m2_loss_mask_6: 0.1659  m2_loss_dice_6: 1.139  m2_loss_ce_7: 0.4508  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.154  m2_loss_ce_8: 0.4461  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.145    time: 1.5317  last_time: 1.5991  data_time: 0.0922  last_data_time: 0.0820   lr: 0.0001  max_mem: 35346M
[10/15 15:29:34] d2.utils.events INFO:  eta: 0:09:12  iter: 639  total_loss: 39.18  m1_loss_ce: 0.4562  m1_loss_mask: 0.1742  m1_loss_dice: 1.132  m1_loss_ce_0: 0.5365  m1_loss_mask_0: 0.2093  m1_loss_dice_0: 1.364  m1_loss_ce_1: 0.6266  m1_loss_mask_1: 0.1813  m1_loss_dice_1: 1.295  m1_loss_ce_2: 0.533  m1_loss_mask_2: 0.1764  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.49  m1_loss_mask_3: 0.1793  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.4573  m1_loss_mask_4: 0.1746  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.4513  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.17  m1_loss_ce_6: 0.4502  m1_loss_mask_6: 0.1751  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4334  m1_loss_mask_7: 0.1757  m1_loss_dice_7: 1.177  m1_loss_ce_8: 0.4631  m1_loss_mask_8: 0.1743  m1_loss_dice_8: 1.171  m2_loss_ce: 0.4747  m2_loss_mask: 0.1789  m2_loss_dice: 1.225  m2_loss_ce_0: 0.582  m2_loss_mask_0: 0.2064  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.6287  m2_loss_mask_1: 0.1972  m2_loss_dice_1: 1.391  m2_loss_ce_2: 0.5687  m2_loss_mask_2: 0.1791  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5227  m2_loss_mask_3: 0.1732  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5023  m2_loss_mask_4: 0.1728  m2_loss_dice_4: 1.218  m2_loss_ce_5: 0.4875  m2_loss_mask_5: 0.1747  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.4737  m2_loss_mask_6: 0.1776  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.4638  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.4518  m2_loss_mask_8: 0.1766  m2_loss_dice_8: 1.201    time: 1.5325  last_time: 1.3439  data_time: 0.0714  last_data_time: 0.0520   lr: 0.0001  max_mem: 35346M
[10/15 15:30:05] d2.utils.events INFO:  eta: 0:08:41  iter: 659  total_loss: 38.95  m1_loss_ce: 0.4394  m1_loss_mask: 0.18  m1_loss_dice: 1.183  m1_loss_ce_0: 0.5509  m1_loss_mask_0: 0.2091  m1_loss_dice_0: 1.35  m1_loss_ce_1: 0.614  m1_loss_mask_1: 0.1921  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.5368  m1_loss_mask_2: 0.1844  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.4649  m1_loss_mask_3: 0.1817  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.4631  m1_loss_mask_4: 0.1814  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.4605  m1_loss_mask_5: 0.1818  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4739  m1_loss_mask_6: 0.1784  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.4456  m1_loss_mask_7: 0.1774  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.4526  m1_loss_mask_8: 0.1765  m1_loss_dice_8: 1.163  m2_loss_ce: 0.4784  m2_loss_mask: 0.1787  m2_loss_dice: 1.178  m2_loss_ce_0: 0.5696  m2_loss_mask_0: 0.2157  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.6349  m2_loss_mask_1: 0.2004  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.5751  m2_loss_mask_2: 0.1845  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5088  m2_loss_mask_3: 0.182  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.5061  m2_loss_mask_4: 0.1796  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.1778  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4604  m2_loss_mask_6: 0.1786  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.466  m2_loss_mask_7: 0.1784  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.4578  m2_loss_mask_8: 0.1766  m2_loss_dice_8: 1.19    time: 1.5328  last_time: 1.7270  data_time: 0.1018  last_data_time: 0.2448   lr: 0.0001  max_mem: 35346M
[10/15 15:30:37] d2.utils.events INFO:  eta: 0:08:11  iter: 679  total_loss: 39.79  m1_loss_ce: 0.4323  m1_loss_mask: 0.1603  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5263  m1_loss_mask_0: 0.1834  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.5583  m1_loss_mask_1: 0.1678  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5497  m1_loss_mask_2: 0.1594  m1_loss_dice_2: 1.243  m1_loss_ce_3: 0.4957  m1_loss_mask_3: 0.1602  m1_loss_dice_3: 1.209  m1_loss_ce_4: 0.4698  m1_loss_mask_4: 0.1625  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.4788  m1_loss_mask_5: 0.1618  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.4336  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.4377  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.4491  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4867  m2_loss_mask: 0.1566  m2_loss_dice: 1.244  m2_loss_ce_0: 0.6125  m2_loss_mask_0: 0.1845  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6729  m2_loss_mask_1: 0.1797  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.5316  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5062  m2_loss_mask_3: 0.1605  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5211  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5013  m2_loss_mask_5: 0.1578  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.4813  m2_loss_mask_6: 0.1559  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.4826  m2_loss_mask_7: 0.1582  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4823  m2_loss_mask_8: 0.1551  m2_loss_dice_8: 1.22    time: 1.5347  last_time: 1.4813  data_time: 0.1301  last_data_time: 0.2575   lr: 0.0001  max_mem: 35346M
[10/15 15:31:09] d2.utils.events INFO:  eta: 0:07:41  iter: 699  total_loss: 41.57  m1_loss_ce: 0.4695  m1_loss_mask: 0.1667  m1_loss_dice: 1.299  m1_loss_ce_0: 0.5477  m1_loss_mask_0: 0.1882  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.6402  m1_loss_mask_1: 0.1743  m1_loss_dice_1: 1.411  m1_loss_ce_2: 0.5802  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.385  m1_loss_ce_3: 0.5196  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.325  m1_loss_ce_4: 0.5142  m1_loss_mask_4: 0.1702  m1_loss_dice_4: 1.309  m1_loss_ce_5: 0.5115  m1_loss_mask_5: 0.1695  m1_loss_dice_5: 1.309  m1_loss_ce_6: 0.5066  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.333  m1_loss_ce_7: 0.5009  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.284  m1_loss_ce_8: 0.4935  m1_loss_mask_8: 0.1678  m1_loss_dice_8: 1.266  m2_loss_ce: 0.4828  m2_loss_mask: 0.1705  m2_loss_dice: 1.306  m2_loss_ce_0: 0.6553  m2_loss_mask_0: 0.2038  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.6693  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.422  m2_loss_ce_2: 0.5934  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.374  m2_loss_ce_3: 0.5417  m2_loss_mask_3: 0.1731  m2_loss_dice_3: 1.345  m2_loss_ce_4: 0.5313  m2_loss_mask_4: 0.1705  m2_loss_dice_4: 1.352  m2_loss_ce_5: 0.533  m2_loss_mask_5: 0.1709  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.4952  m2_loss_mask_6: 0.1722  m2_loss_dice_6: 1.329  m2_loss_ce_7: 0.5367  m2_loss_mask_7: 0.1728  m2_loss_dice_7: 1.3  m2_loss_ce_8: 0.4881  m2_loss_mask_8: 0.1724  m2_loss_dice_8: 1.293    time: 1.5355  last_time: 1.5719  data_time: 0.0833  last_data_time: 0.0715   lr: 0.0001  max_mem: 35346M
[10/15 15:31:40] d2.utils.events INFO:  eta: 0:07:11  iter: 719  total_loss: 40.06  m1_loss_ce: 0.4712  m1_loss_mask: 0.1674  m1_loss_dice: 1.256  m1_loss_ce_0: 0.5589  m1_loss_mask_0: 0.1992  m1_loss_dice_0: 1.452  m1_loss_ce_1: 0.6306  m1_loss_mask_1: 0.1826  m1_loss_dice_1: 1.413  m1_loss_ce_2: 0.601  m1_loss_mask_2: 0.1708  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5204  m1_loss_mask_3: 0.1755  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.4788  m1_loss_mask_4: 0.1753  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.4915  m1_loss_mask_5: 0.1746  m1_loss_dice_5: 1.256  m1_loss_ce_6: 0.4865  m1_loss_mask_6: 0.1712  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.4858  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4491  m1_loss_mask_8: 0.166  m1_loss_dice_8: 1.261  m2_loss_ce: 0.4691  m2_loss_mask: 0.1694  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6292  m2_loss_mask_0: 0.1989  m2_loss_dice_0: 1.426  m2_loss_ce_1: 0.6782  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.341  m2_loss_ce_2: 0.6047  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.288  m2_loss_ce_3: 0.5251  m2_loss_mask_3: 0.1719  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.4997  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.539  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4767  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4943  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.254  m2_loss_ce_8: 0.4843  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.236    time: 1.5366  last_time: 1.6233  data_time: 0.1007  last_data_time: 0.0683   lr: 0.0001  max_mem: 35346M
[10/15 15:32:12] d2.utils.events INFO:  eta: 0:06:40  iter: 739  total_loss: 40.32  m1_loss_ce: 0.3939  m1_loss_mask: 0.1704  m1_loss_dice: 1.307  m1_loss_ce_0: 0.512  m1_loss_mask_0: 0.2007  m1_loss_dice_0: 1.499  m1_loss_ce_1: 0.5768  m1_loss_mask_1: 0.1832  m1_loss_dice_1: 1.414  m1_loss_ce_2: 0.5446  m1_loss_mask_2: 0.1795  m1_loss_dice_2: 1.318  m1_loss_ce_3: 0.4504  m1_loss_mask_3: 0.1767  m1_loss_dice_3: 1.302  m1_loss_ce_4: 0.419  m1_loss_mask_4: 0.1765  m1_loss_dice_4: 1.314  m1_loss_ce_5: 0.4139  m1_loss_mask_5: 0.1715  m1_loss_dice_5: 1.3  m1_loss_ce_6: 0.3986  m1_loss_mask_6: 0.1719  m1_loss_dice_6: 1.305  m1_loss_ce_7: 0.4235  m1_loss_mask_7: 0.1716  m1_loss_dice_7: 1.294  m1_loss_ce_8: 0.4019  m1_loss_mask_8: 0.1727  m1_loss_dice_8: 1.295  m2_loss_ce: 0.4372  m2_loss_mask: 0.1724  m2_loss_dice: 1.326  m2_loss_ce_0: 0.6305  m2_loss_mask_0: 0.2028  m2_loss_dice_0: 1.539  m2_loss_ce_1: 0.7181  m2_loss_mask_1: 0.1929  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.6021  m2_loss_mask_2: 0.1794  m2_loss_dice_2: 1.401  m2_loss_ce_3: 0.5263  m2_loss_mask_3: 0.1783  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.4844  m2_loss_mask_4: 0.1755  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5168  m2_loss_mask_5: 0.1736  m2_loss_dice_5: 1.298  m2_loss_ce_6: 0.463  m2_loss_mask_6: 0.1747  m2_loss_dice_6: 1.312  m2_loss_ce_7: 0.4733  m2_loss_mask_7: 0.1737  m2_loss_dice_7: 1.298  m2_loss_ce_8: 0.464  m2_loss_mask_8: 0.1752  m2_loss_dice_8: 1.284    time: 1.5376  last_time: 1.5268  data_time: 0.1039  last_data_time: 0.0517   lr: 0.0001  max_mem: 35346M
[10/15 15:32:44] d2.utils.events INFO:  eta: 0:06:10  iter: 759  total_loss: 40.27  m1_loss_ce: 0.4184  m1_loss_mask: 0.1666  m1_loss_dice: 1.185  m1_loss_ce_0: 0.5294  m1_loss_mask_0: 0.193  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.565  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.338  m1_loss_ce_2: 0.5617  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.4618  m1_loss_mask_3: 0.1716  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.4879  m1_loss_mask_4: 0.1694  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.4662  m1_loss_mask_5: 0.1697  m1_loss_dice_5: 1.244  m1_loss_ce_6: 0.4063  m1_loss_mask_6: 0.1706  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.4283  m1_loss_mask_7: 0.1667  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.4428  m1_loss_mask_8: 0.1671  m1_loss_dice_8: 1.255  m2_loss_ce: 0.4713  m2_loss_mask: 0.1776  m2_loss_dice: 1.257  m2_loss_ce_0: 0.609  m2_loss_mask_0: 0.2062  m2_loss_dice_0: 1.479  m2_loss_ce_1: 0.6385  m2_loss_mask_1: 0.2  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.5753  m2_loss_mask_2: 0.1843  m2_loss_dice_2: 1.351  m2_loss_ce_3: 0.5314  m2_loss_mask_3: 0.1835  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.4993  m2_loss_mask_4: 0.1807  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.4667  m2_loss_mask_5: 0.1776  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.4617  m2_loss_mask_6: 0.1793  m2_loss_dice_6: 1.301  m2_loss_ce_7: 0.4848  m2_loss_mask_7: 0.1801  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.4317  m2_loss_mask_8: 0.179  m2_loss_dice_8: 1.248    time: 1.5392  last_time: 1.6437  data_time: 0.0992  last_data_time: 0.1074   lr: 0.0001  max_mem: 35346M
[10/15 15:33:16] d2.utils.events INFO:  eta: 0:05:40  iter: 779  total_loss: 40.39  m1_loss_ce: 0.4205  m1_loss_mask: 0.1568  m1_loss_dice: 1.249  m1_loss_ce_0: 0.5479  m1_loss_mask_0: 0.1789  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.6109  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.373  m1_loss_ce_2: 0.5416  m1_loss_mask_2: 0.1585  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.4958  m1_loss_mask_3: 0.1578  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.4857  m1_loss_mask_4: 0.1557  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.4466  m1_loss_mask_5: 0.1579  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.436  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.274  m1_loss_ce_7: 0.4314  m1_loss_mask_7: 0.1574  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.4108  m1_loss_mask_8: 0.1597  m1_loss_dice_8: 1.281  m2_loss_ce: 0.4806  m2_loss_mask: 0.1722  m2_loss_dice: 1.32  m2_loss_ce_0: 0.6174  m2_loss_mask_0: 0.1996  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6615  m2_loss_mask_1: 0.1868  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6064  m2_loss_mask_2: 0.1761  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5324  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5132  m2_loss_mask_4: 0.1706  m2_loss_dice_4: 1.305  m2_loss_ce_5: 0.4877  m2_loss_mask_5: 0.1701  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.5032  m2_loss_mask_6: 0.1716  m2_loss_dice_6: 1.293  m2_loss_ce_7: 0.4914  m2_loss_mask_7: 0.1716  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.4714  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.27    time: 1.5409  last_time: 1.5319  data_time: 0.1086  last_data_time: 0.0509   lr: 0.0001  max_mem: 35346M
[10/15 15:33:47] d2.utils.events INFO:  eta: 0:05:09  iter: 799  total_loss: 38.04  m1_loss_ce: 0.4366  m1_loss_mask: 0.1611  m1_loss_dice: 1.162  m1_loss_ce_0: 0.5334  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.378  m1_loss_ce_1: 0.5686  m1_loss_mask_1: 0.1725  m1_loss_dice_1: 1.264  m1_loss_ce_2: 0.5639  m1_loss_mask_2: 0.1626  m1_loss_dice_2: 1.235  m1_loss_ce_3: 0.4746  m1_loss_mask_3: 0.162  m1_loss_dice_3: 1.177  m1_loss_ce_4: 0.4601  m1_loss_mask_4: 0.1586  m1_loss_dice_4: 1.154  m1_loss_ce_5: 0.4364  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.166  m1_loss_ce_6: 0.4557  m1_loss_mask_6: 0.1585  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.428  m1_loss_mask_7: 0.1594  m1_loss_dice_7: 1.142  m1_loss_ce_8: 0.4501  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.159  m2_loss_ce: 0.4691  m2_loss_mask: 0.1709  m2_loss_dice: 1.202  m2_loss_ce_0: 0.5917  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.6348  m2_loss_mask_1: 0.1814  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5518  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5172  m2_loss_mask_3: 0.1738  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.4894  m2_loss_mask_4: 0.1707  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.4841  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4644  m2_loss_mask_6: 0.1695  m2_loss_dice_6: 1.252  m2_loss_ce_7: 0.4591  m2_loss_mask_7: 0.1693  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.4333  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.205    time: 1.5414  last_time: 1.5828  data_time: 0.1208  last_data_time: 0.0525   lr: 0.0001  max_mem: 35346M
[10/15 15:34:19] d2.utils.events INFO:  eta: 0:04:38  iter: 819  total_loss: 37.76  m1_loss_ce: 0.4144  m1_loss_mask: 0.1574  m1_loss_dice: 1.236  m1_loss_ce_0: 0.5157  m1_loss_mask_0: 0.1836  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.559  m1_loss_mask_1: 0.1707  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.5298  m1_loss_mask_2: 0.1641  m1_loss_dice_2: 1.237  m1_loss_ce_3: 0.4406  m1_loss_mask_3: 0.1628  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.4432  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.209  m1_loss_ce_5: 0.4525  m1_loss_mask_5: 0.1591  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.4141  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.178  m1_loss_ce_7: 0.4194  m1_loss_mask_7: 0.159  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4252  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4849  m2_loss_mask: 0.1641  m2_loss_dice: 1.248  m2_loss_ce_0: 0.5861  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6333  m2_loss_mask_1: 0.1876  m2_loss_dice_1: 1.38  m2_loss_ce_2: 0.5519  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5178  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5028  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.268  m2_loss_ce_5: 0.4937  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.4814  m2_loss_mask_6: 0.166  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4593  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.4624  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.263    time: 1.5426  last_time: 1.6122  data_time: 0.1347  last_data_time: 0.0735   lr: 0.0001  max_mem: 35346M
[10/15 15:34:50] d2.utils.events INFO:  eta: 0:04:07  iter: 839  total_loss: 38.12  m1_loss_ce: 0.4254  m1_loss_mask: 0.1683  m1_loss_dice: 1.166  m1_loss_ce_0: 0.4993  m1_loss_mask_0: 0.1862  m1_loss_dice_0: 1.403  m1_loss_ce_1: 0.5516  m1_loss_mask_1: 0.1778  m1_loss_dice_1: 1.317  m1_loss_ce_2: 0.5482  m1_loss_mask_2: 0.1703  m1_loss_dice_2: 1.211  m1_loss_ce_3: 0.4512  m1_loss_mask_3: 0.1709  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.4409  m1_loss_mask_4: 0.1725  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4373  m1_loss_mask_5: 0.1697  m1_loss_dice_5: 1.206  m1_loss_ce_6: 0.3914  m1_loss_mask_6: 0.1667  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4193  m1_loss_mask_7: 0.1674  m1_loss_dice_7: 1.164  m1_loss_ce_8: 0.4184  m1_loss_mask_8: 0.1685  m1_loss_dice_8: 1.18  m2_loss_ce: 0.463  m2_loss_mask: 0.1703  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5658  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.695  m2_loss_mask_1: 0.1907  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.5574  m2_loss_mask_2: 0.1783  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.536  m2_loss_mask_3: 0.174  m2_loss_dice_3: 1.229  m2_loss_ce_4: 0.489  m2_loss_mask_4: 0.1708  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.5004  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4778  m2_loss_mask_6: 0.1707  m2_loss_dice_6: 1.226  m2_loss_ce_7: 0.4687  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.4856  m2_loss_mask_8: 0.1695  m2_loss_dice_8: 1.216    time: 1.5424  last_time: 1.3748  data_time: 0.1058  last_data_time: 0.0829   lr: 0.0001  max_mem: 35346M
[10/15 15:35:22] d2.utils.events INFO:  eta: 0:03:37  iter: 859  total_loss: 38.61  m1_loss_ce: 0.481  m1_loss_mask: 0.1673  m1_loss_dice: 1.132  m1_loss_ce_0: 0.5518  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.346  m1_loss_ce_1: 0.5977  m1_loss_mask_1: 0.1783  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.6179  m1_loss_mask_2: 0.1686  m1_loss_dice_2: 1.202  m1_loss_ce_3: 0.5341  m1_loss_mask_3: 0.1646  m1_loss_dice_3: 1.162  m1_loss_ce_4: 0.5121  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.145  m1_loss_ce_5: 0.4993  m1_loss_mask_5: 0.1682  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.4615  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.4745  m1_loss_mask_7: 0.1673  m1_loss_dice_7: 1.132  m1_loss_ce_8: 0.4723  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.147  m2_loss_ce: 0.52  m2_loss_mask: 0.1643  m2_loss_dice: 1.184  m2_loss_ce_0: 0.5833  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.415  m2_loss_ce_1: 0.6704  m2_loss_mask_1: 0.1911  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.5791  m2_loss_mask_2: 0.1703  m2_loss_dice_2: 1.283  m2_loss_ce_3: 0.5376  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.5358  m2_loss_mask_4: 0.1627  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.5206  m2_loss_mask_5: 0.1632  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5227  m2_loss_mask_6: 0.1643  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.5021  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4945  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.229    time: 1.5437  last_time: 1.6302  data_time: 0.0982  last_data_time: 0.1023   lr: 0.0001  max_mem: 35346M
[10/15 15:35:53] d2.utils.events INFO:  eta: 0:03:06  iter: 879  total_loss: 37.83  m1_loss_ce: 0.3999  m1_loss_mask: 0.1587  m1_loss_dice: 1.198  m1_loss_ce_0: 0.5309  m1_loss_mask_0: 0.1875  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.5588  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.5329  m1_loss_mask_2: 0.1628  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.4654  m1_loss_mask_3: 0.1614  m1_loss_dice_3: 1.213  m1_loss_ce_4: 0.4332  m1_loss_mask_4: 0.1596  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.427  m1_loss_mask_5: 0.1616  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.4103  m1_loss_mask_6: 0.1608  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.4336  m1_loss_mask_7: 0.1557  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4225  m1_loss_mask_8: 0.1545  m1_loss_dice_8: 1.197  m2_loss_ce: 0.451  m2_loss_mask: 0.1637  m2_loss_dice: 1.247  m2_loss_ce_0: 0.5521  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.453  m2_loss_ce_1: 0.6147  m2_loss_mask_1: 0.1886  m2_loss_dice_1: 1.396  m2_loss_ce_2: 0.5603  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.5026  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.5097  m2_loss_mask_4: 0.1647  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.4632  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.464  m2_loss_mask_6: 0.1661  m2_loss_dice_6: 1.202  m2_loss_ce_7: 0.4684  m2_loss_mask_7: 0.1666  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.4412  m2_loss_mask_8: 0.1656  m2_loss_dice_8: 1.231    time: 1.5439  last_time: 1.7674  data_time: 0.1016  last_data_time: 0.2001   lr: 0.0001  max_mem: 35346M
[10/15 15:36:25] d2.utils.events INFO:  eta: 0:02:35  iter: 899  total_loss: 39.57  m1_loss_ce: 0.4557  m1_loss_mask: 0.1456  m1_loss_dice: 1.185  m1_loss_ce_0: 0.5528  m1_loss_mask_0: 0.1697  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.6249  m1_loss_mask_1: 0.1588  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.6  m1_loss_mask_2: 0.1527  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.5233  m1_loss_mask_3: 0.1506  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4948  m1_loss_mask_4: 0.15  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.4704  m1_loss_mask_5: 0.1464  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.4783  m1_loss_mask_6: 0.1461  m1_loss_dice_6: 1.178  m1_loss_ce_7: 0.4619  m1_loss_mask_7: 0.1485  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.45  m1_loss_mask_8: 0.1491  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4985  m2_loss_mask: 0.155  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6146  m2_loss_mask_0: 0.1763  m2_loss_dice_0: 1.483  m2_loss_ce_1: 0.6495  m2_loss_mask_1: 0.1689  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.627  m2_loss_mask_2: 0.1582  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.5674  m2_loss_mask_3: 0.1575  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5642  m2_loss_mask_4: 0.1525  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.5456  m2_loss_mask_5: 0.1547  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.4906  m2_loss_mask_6: 0.1542  m2_loss_dice_6: 1.29  m2_loss_ce_7: 0.535  m2_loss_mask_7: 0.1554  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.514  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.27    time: 1.5451  last_time: 1.6008  data_time: 0.0991  last_data_time: 0.0476   lr: 0.0001  max_mem: 35346M
[10/15 15:36:58] d2.utils.events INFO:  eta: 0:02:04  iter: 919  total_loss: 38.18  m1_loss_ce: 0.4462  m1_loss_mask: 0.1635  m1_loss_dice: 1.159  m1_loss_ce_0: 0.5309  m1_loss_mask_0: 0.1822  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.6055  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.313  m1_loss_ce_2: 0.541  m1_loss_mask_2: 0.1655  m1_loss_dice_2: 1.232  m1_loss_ce_3: 0.4579  m1_loss_mask_3: 0.1668  m1_loss_dice_3: 1.17  m1_loss_ce_4: 0.4481  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.174  m1_loss_ce_5: 0.4545  m1_loss_mask_5: 0.1631  m1_loss_dice_5: 1.175  m1_loss_ce_6: 0.4404  m1_loss_mask_6: 0.1648  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.4287  m1_loss_mask_7: 0.1646  m1_loss_dice_7: 1.136  m1_loss_ce_8: 0.4399  m1_loss_mask_8: 0.1644  m1_loss_dice_8: 1.17  m2_loss_ce: 0.4891  m2_loss_mask: 0.1691  m2_loss_dice: 1.259  m2_loss_ce_0: 0.569  m2_loss_mask_0: 0.1919  m2_loss_dice_0: 1.424  m2_loss_ce_1: 0.644  m2_loss_mask_1: 0.1789  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.5822  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.277  m2_loss_ce_3: 0.5203  m2_loss_mask_3: 0.1717  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.506  m2_loss_mask_4: 0.167  m2_loss_dice_4: 1.206  m2_loss_ce_5: 0.4871  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.4789  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.4996  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.5236  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.228    time: 1.5465  last_time: 1.5542  data_time: 0.1075  last_data_time: 0.0476   lr: 0.0001  max_mem: 35346M
[10/15 15:37:31] d2.utils.events INFO:  eta: 0:01:33  iter: 939  total_loss: 40.02  m1_loss_ce: 0.4153  m1_loss_mask: 0.16  m1_loss_dice: 1.259  m1_loss_ce_0: 0.5515  m1_loss_mask_0: 0.1779  m1_loss_dice_0: 1.472  m1_loss_ce_1: 0.6086  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5622  m1_loss_mask_2: 0.1597  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.4814  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.4513  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.297  m1_loss_ce_5: 0.456  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.4161  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.245  m1_loss_ce_7: 0.4253  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.4382  m1_loss_mask_8: 0.1631  m1_loss_dice_8: 1.216  m2_loss_ce: 0.4553  m2_loss_mask: 0.1582  m2_loss_dice: 1.325  m2_loss_ce_0: 0.6571  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.508  m2_loss_ce_1: 0.6793  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.5885  m2_loss_mask_2: 0.1617  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5347  m2_loss_mask_3: 0.1576  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.5224  m2_loss_mask_4: 0.1572  m2_loss_dice_4: 1.332  m2_loss_ce_5: 0.5128  m2_loss_mask_5: 0.1524  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.48  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.328  m2_loss_ce_7: 0.4839  m2_loss_mask_7: 0.1611  m2_loss_dice_7: 1.298  m2_loss_ce_8: 0.4707  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.33    time: 1.5483  last_time: 1.6808  data_time: 0.1265  last_data_time: 0.2544   lr: 0.0001  max_mem: 35346M
[10/15 15:38:02] d2.utils.events INFO:  eta: 0:01:02  iter: 959  total_loss: 40.37  m1_loss_ce: 0.4461  m1_loss_mask: 0.1522  m1_loss_dice: 1.232  m1_loss_ce_0: 0.5462  m1_loss_mask_0: 0.1823  m1_loss_dice_0: 1.436  m1_loss_ce_1: 0.6014  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5624  m1_loss_mask_2: 0.1609  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.4905  m1_loss_mask_3: 0.159  m1_loss_dice_3: 1.255  m1_loss_ce_4: 0.4863  m1_loss_mask_4: 0.155  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.4429  m1_loss_mask_5: 0.1566  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.467  m1_loss_mask_6: 0.1542  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4438  m1_loss_mask_7: 0.1548  m1_loss_dice_7: 1.223  m1_loss_ce_8: 0.4448  m1_loss_mask_8: 0.1534  m1_loss_dice_8: 1.215  m2_loss_ce: 0.4879  m2_loss_mask: 0.16  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6476  m2_loss_mask_0: 0.1895  m2_loss_dice_0: 1.491  m2_loss_ce_1: 0.665  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.458  m2_loss_ce_2: 0.603  m2_loss_mask_2: 0.1647  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5677  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.5405  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.5412  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.4868  m2_loss_mask_6: 0.1609  m2_loss_dice_6: 1.276  m2_loss_ce_7: 0.4713  m2_loss_mask_7: 0.1608  m2_loss_dice_7: 1.273  m2_loss_ce_8: 0.4902  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.268    time: 1.5492  last_time: 1.5239  data_time: 0.1354  last_data_time: 0.0524   lr: 0.0001  max_mem: 35346M
[10/15 15:38:34] d2.utils.events INFO:  eta: 0:00:31  iter: 979  total_loss: 39.78  m1_loss_ce: 0.4032  m1_loss_mask: 0.1577  m1_loss_dice: 1.211  m1_loss_ce_0: 0.5427  m1_loss_mask_0: 0.1764  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.594  m1_loss_mask_1: 0.1702  m1_loss_dice_1: 1.324  m1_loss_ce_2: 0.5206  m1_loss_mask_2: 0.1602  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.4599  m1_loss_mask_3: 0.1578  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.4236  m1_loss_mask_4: 0.1596  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.4176  m1_loss_mask_5: 0.1602  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4064  m1_loss_mask_6: 0.1589  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4033  m1_loss_mask_7: 0.16  m1_loss_dice_7: 1.227  m1_loss_ce_8: 0.409  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.219  m2_loss_ce: 0.4405  m2_loss_mask: 0.1609  m2_loss_dice: 1.255  m2_loss_ce_0: 0.6189  m2_loss_mask_0: 0.196  m2_loss_dice_0: 1.472  m2_loss_ce_1: 0.6511  m2_loss_mask_1: 0.18  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.5489  m2_loss_mask_2: 0.169  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.4986  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.328  m2_loss_ce_4: 0.4793  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.4846  m2_loss_mask_5: 0.1604  m2_loss_dice_5: 1.317  m2_loss_ce_6: 0.4589  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.301  m2_loss_ce_7: 0.4463  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4474  m2_loss_mask_8: 0.1595  m2_loss_dice_8: 1.25    time: 1.5496  last_time: 1.5266  data_time: 0.1293  last_data_time: 0.1614   lr: 0.0001  max_mem: 35346M
[10/15 15:39:04] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_8_0_2/model_final.pth
[10/15 15:39:07] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 38.59  m1_loss_ce: 0.4284  m1_loss_mask: 0.1617  m1_loss_dice: 1.161  m1_loss_ce_0: 0.5424  m1_loss_mask_0: 0.1922  m1_loss_dice_0: 1.36  m1_loss_ce_1: 0.5965  m1_loss_mask_1: 0.1794  m1_loss_dice_1: 1.305  m1_loss_ce_2: 0.5299  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.4702  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.4615  m1_loss_mask_4: 0.1637  m1_loss_dice_4: 1.173  m1_loss_ce_5: 0.4394  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.191  m1_loss_ce_6: 0.4587  m1_loss_mask_6: 0.1657  m1_loss_dice_6: 1.161  m1_loss_ce_7: 0.4549  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.4462  m1_loss_mask_8: 0.1644  m1_loss_dice_8: 1.174  m2_loss_ce: 0.4554  m2_loss_mask: 0.1666  m2_loss_dice: 1.237  m2_loss_ce_0: 0.6039  m2_loss_mask_0: 0.197  m2_loss_dice_0: 1.404  m2_loss_ce_1: 0.6866  m2_loss_mask_1: 0.1874  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.5785  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.533  m2_loss_mask_3: 0.1676  m2_loss_dice_3: 1.215  m2_loss_ce_4: 0.4982  m2_loss_mask_4: 0.167  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.5029  m2_loss_mask_5: 0.1659  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.4558  m2_loss_mask_6: 0.1675  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.4819  m2_loss_mask_7: 0.1663  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4794  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.217    time: 1.5487  last_time: 1.3354  data_time: 0.0872  last_data_time: 0.0562   lr: 0.0001  max_mem: 35346M
[10/15 15:39:07] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:25:45 (1.5487 s / it)
[10/15 15:39:07] d2.engine.hooks INFO: Total training time: 0:25:54 (0:00:09 on hooks)
[10/15 15:39:07] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/15 15:39:07] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/15 15:39:07] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/15 15:39:07] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/15 15:39:07] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/15 15:40:36] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalcdjdy91w ...
[10/15 15:41:33] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.586 | 80.790 | 70.361 |      19       |
| Things | 47.808 | 80.418 | 59.545 |       8       |
| Stuff  | 64.698 | 81.060 | 78.228 |      11       |
[10/15 15:41:33] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.185 | 97.590 | 99.586 |     Stuff     |
| class_8  | 72.363 | 83.996 | 86.150 |     Stuff     |
| class_11 | 86.936 | 89.123 | 97.546 |     Stuff     |
| class_12 | 43.799 | 78.839 | 55.556 |     Stuff     |
| class_13 | 38.607 | 74.696 | 51.685 |     Stuff     |
| class_17 | 46.028 | 64.280 | 71.605 |     Stuff     |
| class_19 | 49.281 | 69.530 | 70.877 |     Stuff     |
| class_20 | 63.471 | 76.116 | 83.387 |     Stuff     |
| class_21 | 89.353 | 90.093 | 99.179 |     Stuff     |
| class_22 | 38.063 | 76.291 | 49.892 |     Stuff     |
| class_23 | 86.592 | 91.111 | 95.040 |     Stuff     |
| class_24 | 52.539 | 76.458 | 68.717 |    Things     |
| class_25 | 48.569 | 74.257 | 65.406 |    Things     |
| class_26 | 65.641 | 83.028 | 79.059 |    Things     |
| class_27 | 42.487 | 88.723 | 47.887 |    Things     |
| class_28 | 60.596 | 90.372 | 67.052 |    Things     |
| class_31 | 34.225 | 85.563 | 40.000 |    Things     |
| class_32 | 35.467 | 72.800 | 48.718 |    Things     |
| class_33 | 42.937 | 72.139 | 59.521 |    Things     |
[10/15 15:41:33] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/15 15:41:33] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/15 15:41:33] d2.evaluation.testing INFO: copypaste: 57.5863,80.7897,70.3612,47.8077,80.4176,59.5449,64.6980,81.0604,78.2275,97.1855,97.5896,99.5859,72.3627,83.9957,86.1505,86.9362,89.1233,97.5460,43.7994,78.8390,55.5556,38.6069,74.6959,51.6854,46.0279,64.2804,71.6049,49.2806,69.5296,70.8772,63.4706,76.1158,83.3869,89.3531,90.0931,99.1786,38.0628,76.2910,49.8915,86.5925,91.1112,95.0404,52.5390,76.4575,68.7166,48.5687,74.2573,65.4060,65.6409,83.0281,79.0587,42.4871,88.7231,47.8873,60.5965,90.3723,67.0520,34.2251,85.5628,40.0000,35.4669,72.8004,48.7179,42.9375,72.1389,59.5206
