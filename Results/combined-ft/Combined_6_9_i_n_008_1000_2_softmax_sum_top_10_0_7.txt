[08/19 19:03:31] detectron2 INFO: Rank of current process: 0. World size: 2
[08/19 19:03:32] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/19 19:03:32] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_top_10_0_7.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/19 19:03:32] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_softmax_sum_top_10_0_7.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10_0_7
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/19 19:03:32] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/invocab.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/models/normal.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10_0_7
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/19 19:03:32] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10_0_7/config.yaml
[08/19 19:03:32] d2.utils.env INFO: Using a generated random seed 33422245
[08/19 19:03:37] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 19:03:37] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/19 19:03:37] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/19 19:03:37] d2.data.build INFO: Using training sampler TrainingSampler
[08/19 19:03:37] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 19:03:37] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/19 19:03:38] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/19 19:03:38] d2.data.build INFO: Making batched data loader with batch_size=4
[08/19 19:03:38] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/19 19:03:42] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/19 19:03:42] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:03:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:03:42] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:03:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/invocab.pth ...
[08/19 19:04:19] d2.utils.events INFO:  eta: 0:24:11  iter: 19  total_loss: 44.78  m1_loss_ce: 0.5003  m1_loss_mask: 0.1772  m1_loss_dice: 1.256  m1_loss_ce_0: 0.5922  m1_loss_mask_0: 0.2033  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.6398  m1_loss_mask_1: 0.1879  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.6337  m1_loss_mask_2: 0.1791  m1_loss_dice_2: 1.291  m1_loss_ce_3: 0.5271  m1_loss_mask_3: 0.1772  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.5302  m1_loss_mask_4: 0.1801  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.5206  m1_loss_mask_5: 0.1811  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.5051  m1_loss_mask_6: 0.1758  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4969  m1_loss_mask_7: 0.1776  m1_loss_dice_7: 1.233  m1_loss_ce_8: 0.4931  m1_loss_mask_8: 0.1791  m1_loss_dice_8: 1.287  m2_loss_ce: 0.5074  m2_loss_mask: 0.1731  m2_loss_dice: 1.229  m2_loss_ce_0: 0.5726  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6506  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.5973  m2_loss_mask_2: 0.175  m2_loss_dice_2: 1.314  m2_loss_ce_3: 0.537  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5075  m2_loss_mask_4: 0.1759  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.4962  m2_loss_mask_5: 0.1788  m2_loss_dice_5: 1.287  m2_loss_ce_6: 0.4952  m2_loss_mask_6: 0.1754  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.4919  m2_loss_mask_7: 0.175  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.5159  m2_loss_mask_8: 0.1739  m2_loss_dice_8: 1.254  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9579    time: 1.4865  last_time: 1.5128  data_time: 0.2249  last_data_time: 0.0573   lr: 0.0001  max_mem: 34764M
[08/19 19:04:48] d2.utils.events INFO:  eta: 0:23:35  iter: 39  total_loss: 44.1  m1_loss_ce: 0.5053  m1_loss_mask: 0.1672  m1_loss_dice: 1.201  m1_loss_ce_0: 0.633  m1_loss_mask_0: 0.1954  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.723  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.6614  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5723  m1_loss_mask_3: 0.1678  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.5647  m1_loss_mask_4: 0.1681  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.559  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.5416  m1_loss_mask_6: 0.1686  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.509  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.5181  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.241  m2_loss_ce: 0.4961  m2_loss_mask: 0.1638  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6168  m2_loss_mask_0: 0.1939  m2_loss_dice_0: 1.42  m2_loss_ce_1: 0.6581  m2_loss_mask_1: 0.1715  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.6452  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5887  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5388  m2_loss_mask_4: 0.1669  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.5506  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.4941  m2_loss_mask_6: 0.1655  m2_loss_dice_6: 1.228  m2_loss_ce_7: 0.5127  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.5271  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.246  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9571    time: 1.4737  last_time: 1.4853  data_time: 0.0481  last_data_time: 0.0394   lr: 0.0001  max_mem: 34764M
[08/19 19:05:18] d2.utils.events INFO:  eta: 0:23:02  iter: 59  total_loss: 46.03  m1_loss_ce: 0.566  m1_loss_mask: 0.1646  m1_loss_dice: 1.256  m1_loss_ce_0: 0.6843  m1_loss_mask_0: 0.2014  m1_loss_dice_0: 1.509  m1_loss_ce_1: 0.7028  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.381  m1_loss_ce_2: 0.6678  m1_loss_mask_2: 0.1664  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.6151  m1_loss_mask_3: 0.1671  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.5697  m1_loss_mask_4: 0.1665  m1_loss_dice_4: 1.306  m1_loss_ce_5: 0.6116  m1_loss_mask_5: 0.1664  m1_loss_dice_5: 1.297  m1_loss_ce_6: 0.596  m1_loss_mask_6: 0.1668  m1_loss_dice_6: 1.268  m1_loss_ce_7: 0.5801  m1_loss_mask_7: 0.1692  m1_loss_dice_7: 1.285  m1_loss_ce_8: 0.5608  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.276  m2_loss_ce: 0.5725  m2_loss_mask: 0.1624  m2_loss_dice: 1.219  m2_loss_ce_0: 0.6705  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.7034  m2_loss_mask_1: 0.1834  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.6706  m2_loss_mask_2: 0.1677  m2_loss_dice_2: 1.277  m2_loss_ce_3: 0.6072  m2_loss_mask_3: 0.1641  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.608  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.58  m2_loss_mask_5: 0.1634  m2_loss_dice_5: 1.233  m2_loss_ce_6: 0.5741  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.5812  m2_loss_mask_7: 0.1638  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.5696  m2_loss_mask_8: 0.1637  m2_loss_dice_8: 1.233  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9578    time: 1.4749  last_time: 1.5535  data_time: 0.0491  last_data_time: 0.0502   lr: 0.0001  max_mem: 34912M
[08/19 19:05:48] d2.utils.events INFO:  eta: 0:22:28  iter: 79  total_loss: 44.49  m1_loss_ce: 0.5448  m1_loss_mask: 0.1756  m1_loss_dice: 1.273  m1_loss_ce_0: 0.6685  m1_loss_mask_0: 0.2004  m1_loss_dice_0: 1.465  m1_loss_ce_1: 0.7385  m1_loss_mask_1: 0.194  m1_loss_dice_1: 1.39  m1_loss_ce_2: 0.651  m1_loss_mask_2: 0.1832  m1_loss_dice_2: 1.33  m1_loss_ce_3: 0.5943  m1_loss_mask_3: 0.1767  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5609  m1_loss_mask_4: 0.1789  m1_loss_dice_4: 1.286  m1_loss_ce_5: 0.5797  m1_loss_mask_5: 0.177  m1_loss_dice_5: 1.255  m1_loss_ce_6: 0.5364  m1_loss_mask_6: 0.1778  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.5618  m1_loss_mask_7: 0.1762  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.5453  m1_loss_mask_8: 0.175  m1_loss_dice_8: 1.238  m2_loss_ce: 0.5637  m2_loss_mask: 0.1657  m2_loss_dice: 1.209  m2_loss_ce_0: 0.6381  m2_loss_mask_0: 0.1906  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6932  m2_loss_mask_1: 0.1817  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6665  m2_loss_mask_2: 0.1745  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.6044  m2_loss_mask_3: 0.1699  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5966  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.219  m2_loss_ce_5: 0.5511  m2_loss_mask_5: 0.1743  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.5652  m2_loss_mask_6: 0.1734  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.5968  m2_loss_mask_7: 0.1729  m2_loss_dice_7: 1.22  m2_loss_ce_8: 0.5794  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.215  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.9576    time: 1.4724  last_time: 1.5581  data_time: 0.0433  last_data_time: 0.0455   lr: 0.0001  max_mem: 35021M
[08/19 19:06:17] d2.utils.events INFO:  eta: 0:22:03  iter: 99  total_loss: 46.74  m1_loss_ce: 0.6187  m1_loss_mask: 0.1719  m1_loss_dice: 1.257  m1_loss_ce_0: 0.7436  m1_loss_mask_0: 0.2021  m1_loss_dice_0: 1.487  m1_loss_ce_1: 0.7901  m1_loss_mask_1: 0.188  m1_loss_dice_1: 1.384  m1_loss_ce_2: 0.6954  m1_loss_mask_2: 0.1773  m1_loss_dice_2: 1.327  m1_loss_ce_3: 0.6364  m1_loss_mask_3: 0.1748  m1_loss_dice_3: 1.275  m1_loss_ce_4: 0.649  m1_loss_mask_4: 0.176  m1_loss_dice_4: 1.321  m1_loss_ce_5: 0.6093  m1_loss_mask_5: 0.1726  m1_loss_dice_5: 1.279  m1_loss_ce_6: 0.6034  m1_loss_mask_6: 0.1733  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.5997  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.6227  m1_loss_mask_8: 0.1718  m1_loss_dice_8: 1.268  m2_loss_ce: 0.6367  m2_loss_mask: 0.169  m2_loss_dice: 1.237  m2_loss_ce_0: 0.696  m2_loss_mask_0: 0.2033  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.7671  m2_loss_mask_1: 0.177  m2_loss_dice_1: 1.382  m2_loss_ce_2: 0.7051  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.6737  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.275  m2_loss_ce_4: 0.6716  m2_loss_mask_4: 0.1716  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.6427  m2_loss_mask_5: 0.1716  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5987  m2_loss_mask_6: 0.1673  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.6312  m2_loss_mask_7: 0.1692  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.6042  m2_loss_mask_8: 0.1697  m2_loss_dice_8: 1.24  com_loss_ce: 2.149  com_loss_mask: 0.6935  com_loss_dice: 0.9591    time: 1.4742  last_time: 1.5244  data_time: 0.0457  last_data_time: 0.0364   lr: 0.0001  max_mem: 35627M
[08/19 19:06:47] d2.utils.events INFO:  eta: 0:21:31  iter: 119  total_loss: 43.3  m1_loss_ce: 0.5359  m1_loss_mask: 0.1661  m1_loss_dice: 1.202  m1_loss_ce_0: 0.641  m1_loss_mask_0: 0.1945  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6653  m1_loss_mask_1: 0.1845  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.6353  m1_loss_mask_2: 0.1799  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.5448  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5558  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.547  m1_loss_mask_5: 0.1712  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5433  m1_loss_mask_6: 0.1701  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.5387  m1_loss_mask_7: 0.1633  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.524  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.199  m2_loss_ce: 0.544  m2_loss_mask: 0.1724  m2_loss_dice: 1.168  m2_loss_ce_0: 0.6026  m2_loss_mask_0: 0.2009  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6687  m2_loss_mask_1: 0.1844  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.6516  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.214  m2_loss_ce_3: 0.5919  m2_loss_mask_3: 0.175  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.5263  m2_loss_mask_4: 0.1769  m2_loss_dice_4: 1.197  m2_loss_ce_5: 0.5521  m2_loss_mask_5: 0.1735  m2_loss_dice_5: 1.223  m2_loss_ce_6: 0.5266  m2_loss_mask_6: 0.1732  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5156  m2_loss_mask_7: 0.1761  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.5173  m2_loss_mask_8: 0.1721  m2_loss_dice_8: 1.229  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9575    time: 1.4721  last_time: 1.5218  data_time: 0.0451  last_data_time: 0.0554   lr: 0.0001  max_mem: 35627M
[08/19 19:07:17] d2.utils.events INFO:  eta: 0:21:04  iter: 139  total_loss: 42.91  m1_loss_ce: 0.5376  m1_loss_mask: 0.1775  m1_loss_dice: 1.188  m1_loss_ce_0: 0.6296  m1_loss_mask_0: 0.2094  m1_loss_dice_0: 1.388  m1_loss_ce_1: 0.6506  m1_loss_mask_1: 0.1825  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.6524  m1_loss_mask_2: 0.1806  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5613  m1_loss_mask_3: 0.18  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.5634  m1_loss_mask_4: 0.1777  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.5627  m1_loss_mask_5: 0.1768  m1_loss_dice_5: 1.176  m1_loss_ce_6: 0.5372  m1_loss_mask_6: 0.1781  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.5333  m1_loss_mask_7: 0.1747  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.5422  m1_loss_mask_8: 0.1758  m1_loss_dice_8: 1.197  m2_loss_ce: 0.5195  m2_loss_mask: 0.1715  m2_loss_dice: 1.159  m2_loss_ce_0: 0.6003  m2_loss_mask_0: 0.2002  m2_loss_dice_0: 1.387  m2_loss_ce_1: 0.6369  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.323  m2_loss_ce_2: 0.615  m2_loss_mask_2: 0.1757  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5852  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.216  m2_loss_ce_4: 0.5505  m2_loss_mask_4: 0.1746  m2_loss_dice_4: 1.197  m2_loss_ce_5: 0.5404  m2_loss_mask_5: 0.1735  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.5192  m2_loss_mask_6: 0.174  m2_loss_dice_6: 1.169  m2_loss_ce_7: 0.4999  m2_loss_mask_7: 0.173  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.5176  m2_loss_mask_8: 0.1716  m2_loss_dice_8: 1.16  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9558    time: 1.4738  last_time: 1.6021  data_time: 0.0436  last_data_time: 0.0427   lr: 0.0001  max_mem: 35627M
[08/19 19:07:47] d2.utils.events INFO:  eta: 0:20:38  iter: 159  total_loss: 46.45  m1_loss_ce: 0.5743  m1_loss_mask: 0.1628  m1_loss_dice: 1.269  m1_loss_ce_0: 0.6537  m1_loss_mask_0: 0.188  m1_loss_dice_0: 1.496  m1_loss_ce_1: 0.7053  m1_loss_mask_1: 0.1714  m1_loss_dice_1: 1.408  m1_loss_ce_2: 0.6614  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.363  m1_loss_ce_3: 0.6135  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.331  m1_loss_ce_4: 0.5729  m1_loss_mask_4: 0.1648  m1_loss_dice_4: 1.286  m1_loss_ce_5: 0.5443  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.5806  m1_loss_mask_6: 0.1626  m1_loss_dice_6: 1.251  m1_loss_ce_7: 0.5462  m1_loss_mask_7: 0.1659  m1_loss_dice_7: 1.281  m1_loss_ce_8: 0.5534  m1_loss_mask_8: 0.1651  m1_loss_dice_8: 1.265  m2_loss_ce: 0.5405  m2_loss_mask: 0.1594  m2_loss_dice: 1.25  m2_loss_ce_0: 0.7149  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.488  m2_loss_ce_1: 0.6538  m2_loss_mask_1: 0.1725  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.66  m2_loss_mask_2: 0.1615  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5853  m2_loss_mask_3: 0.1625  m2_loss_dice_3: 1.305  m2_loss_ce_4: 0.5569  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.297  m2_loss_ce_5: 0.581  m2_loss_mask_5: 0.1603  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.5399  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5225  m2_loss_mask_7: 0.1579  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.5319  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.264  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9607    time: 1.4765  last_time: 1.4609  data_time: 0.0485  last_data_time: 0.0437   lr: 0.0001  max_mem: 35627M
[08/19 19:08:16] d2.utils.events INFO:  eta: 0:20:08  iter: 179  total_loss: 43.29  m1_loss_ce: 0.5164  m1_loss_mask: 0.1598  m1_loss_dice: 1.218  m1_loss_ce_0: 0.613  m1_loss_mask_0: 0.1873  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6365  m1_loss_mask_1: 0.1782  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.601  m1_loss_mask_2: 0.1695  m1_loss_dice_2: 1.268  m1_loss_ce_3: 0.5787  m1_loss_mask_3: 0.1632  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.5506  m1_loss_mask_4: 0.1686  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.5427  m1_loss_mask_5: 0.1643  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.5188  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.208  m1_loss_ce_7: 0.5288  m1_loss_mask_7: 0.159  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.5035  m1_loss_mask_8: 0.1613  m1_loss_dice_8: 1.195  m2_loss_ce: 0.5126  m2_loss_mask: 0.1596  m2_loss_dice: 1.193  m2_loss_ce_0: 0.6127  m2_loss_mask_0: 0.1917  m2_loss_dice_0: 1.442  m2_loss_ce_1: 0.6969  m2_loss_mask_1: 0.1683  m2_loss_dice_1: 1.34  m2_loss_ce_2: 0.5989  m2_loss_mask_2: 0.1621  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5425  m2_loss_mask_3: 0.1616  m2_loss_dice_3: 1.22  m2_loss_ce_4: 0.5128  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.4977  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.225  m2_loss_ce_6: 0.5003  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.4739  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.5354  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.2  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.9586    time: 1.4763  last_time: 1.4987  data_time: 0.0419  last_data_time: 0.0318   lr: 0.0001  max_mem: 35627M
[08/19 19:08:46] d2.utils.events INFO:  eta: 0:19:40  iter: 199  total_loss: 44.42  m1_loss_ce: 0.5567  m1_loss_mask: 0.1671  m1_loss_dice: 1.254  m1_loss_ce_0: 0.642  m1_loss_mask_0: 0.1973  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.6891  m1_loss_mask_1: 0.1756  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.669  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5978  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.585  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5655  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.28  m1_loss_ce_6: 0.5428  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.5351  m1_loss_mask_7: 0.1689  m1_loss_dice_7: 1.266  m1_loss_ce_8: 0.5644  m1_loss_mask_8: 0.1681  m1_loss_dice_8: 1.271  m2_loss_ce: 0.5282  m2_loss_mask: 0.1671  m2_loss_dice: 1.263  m2_loss_ce_0: 0.6349  m2_loss_mask_0: 0.1945  m2_loss_dice_0: 1.489  m2_loss_ce_1: 0.6551  m2_loss_mask_1: 0.1741  m2_loss_dice_1: 1.445  m2_loss_ce_2: 0.6359  m2_loss_mask_2: 0.1686  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5676  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5612  m2_loss_mask_4: 0.1718  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5641  m2_loss_mask_5: 0.1701  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.5282  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.4837  m2_loss_mask_7: 0.1676  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.5067  m2_loss_mask_8: 0.1662  m2_loss_dice_8: 1.245  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9592    time: 1.4760  last_time: 1.5212  data_time: 0.0442  last_data_time: 0.0473   lr: 0.0001  max_mem: 35627M
[08/19 19:09:16] d2.utils.events INFO:  eta: 0:19:13  iter: 219  total_loss: 45.16  m1_loss_ce: 0.5716  m1_loss_mask: 0.158  m1_loss_dice: 1.249  m1_loss_ce_0: 0.6667  m1_loss_mask_0: 0.1822  m1_loss_dice_0: 1.456  m1_loss_ce_1: 0.7394  m1_loss_mask_1: 0.1702  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.6896  m1_loss_mask_2: 0.1593  m1_loss_dice_2: 1.308  m1_loss_ce_3: 0.6175  m1_loss_mask_3: 0.1614  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.6025  m1_loss_mask_4: 0.159  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.5696  m1_loss_mask_5: 0.1602  m1_loss_dice_5: 1.261  m1_loss_ce_6: 0.5609  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.5725  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.559  m1_loss_mask_8: 0.1588  m1_loss_dice_8: 1.254  m2_loss_ce: 0.5552  m2_loss_mask: 0.1495  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6325  m2_loss_mask_0: 0.1775  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.7107  m2_loss_mask_1: 0.1641  m2_loss_dice_1: 1.385  m2_loss_ce_2: 0.6556  m2_loss_mask_2: 0.1593  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5918  m2_loss_mask_3: 0.158  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5911  m2_loss_mask_4: 0.158  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.5673  m2_loss_mask_5: 0.1551  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.5561  m2_loss_mask_6: 0.1535  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5591  m2_loss_mask_7: 0.1509  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.5338  m2_loss_mask_8: 0.1514  m2_loss_dice_8: 1.22  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9622    time: 1.4782  last_time: 1.4806  data_time: 0.0451  last_data_time: 0.0429   lr: 0.0001  max_mem: 35627M
[08/19 19:09:45] d2.utils.events INFO:  eta: 0:18:42  iter: 239  total_loss: 45.71  m1_loss_ce: 0.5549  m1_loss_mask: 0.1636  m1_loss_dice: 1.273  m1_loss_ce_0: 0.6728  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.509  m1_loss_ce_1: 0.6988  m1_loss_mask_1: 0.1838  m1_loss_dice_1: 1.428  m1_loss_ce_2: 0.6695  m1_loss_mask_2: 0.1748  m1_loss_dice_2: 1.343  m1_loss_ce_3: 0.6161  m1_loss_mask_3: 0.1729  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5623  m1_loss_mask_4: 0.1731  m1_loss_dice_4: 1.289  m1_loss_ce_5: 0.5698  m1_loss_mask_5: 0.172  m1_loss_dice_5: 1.303  m1_loss_ce_6: 0.5718  m1_loss_mask_6: 0.1676  m1_loss_dice_6: 1.287  m1_loss_ce_7: 0.5579  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.273  m1_loss_ce_8: 0.5323  m1_loss_mask_8: 0.1688  m1_loss_dice_8: 1.26  m2_loss_ce: 0.5356  m2_loss_mask: 0.1687  m2_loss_dice: 1.275  m2_loss_ce_0: 0.6507  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.7055  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.427  m2_loss_ce_2: 0.6408  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.332  m2_loss_ce_3: 0.6215  m2_loss_mask_3: 0.1734  m2_loss_dice_3: 1.293  m2_loss_ce_4: 0.5983  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.31  m2_loss_ce_5: 0.5712  m2_loss_mask_5: 0.1733  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.5498  m2_loss_mask_6: 0.169  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.5197  m2_loss_mask_7: 0.1699  m2_loss_dice_7: 1.279  m2_loss_ce_8: 0.5542  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.263  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9603    time: 1.4764  last_time: 1.4963  data_time: 0.0438  last_data_time: 0.0366   lr: 0.0001  max_mem: 35627M
[08/19 19:10:14] d2.utils.events INFO:  eta: 0:18:09  iter: 259  total_loss: 43.67  m1_loss_ce: 0.5289  m1_loss_mask: 0.1587  m1_loss_dice: 1.158  m1_loss_ce_0: 0.6645  m1_loss_mask_0: 0.1806  m1_loss_dice_0: 1.368  m1_loss_ce_1: 0.6785  m1_loss_mask_1: 0.1739  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.6421  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.564  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5666  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.182  m1_loss_ce_5: 0.5214  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.5381  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.5221  m1_loss_mask_7: 0.1609  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.5545  m1_loss_mask_8: 0.1602  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4896  m2_loss_mask: 0.1603  m2_loss_dice: 1.219  m2_loss_ce_0: 0.6343  m2_loss_mask_0: 0.1869  m2_loss_dice_0: 1.363  m2_loss_ce_1: 0.6666  m2_loss_mask_1: 0.1697  m2_loss_dice_1: 1.305  m2_loss_ce_2: 0.6478  m2_loss_mask_2: 0.1628  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.5371  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.5622  m2_loss_mask_4: 0.1629  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4913  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.226  m2_loss_ce_6: 0.5052  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.192  m2_loss_ce_7: 0.5113  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.5121  m2_loss_mask_8: 0.1597  m2_loss_dice_8: 1.196  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9579    time: 1.4742  last_time: 1.4366  data_time: 0.0401  last_data_time: 0.0458   lr: 0.0001  max_mem: 35627M
[08/19 19:10:44] d2.utils.events INFO:  eta: 0:17:38  iter: 279  total_loss: 45.42  m1_loss_ce: 0.5535  m1_loss_mask: 0.1711  m1_loss_dice: 1.235  m1_loss_ce_0: 0.6663  m1_loss_mask_0: 0.1962  m1_loss_dice_0: 1.491  m1_loss_ce_1: 0.7274  m1_loss_mask_1: 0.1847  m1_loss_dice_1: 1.372  m1_loss_ce_2: 0.6993  m1_loss_mask_2: 0.1741  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.5905  m1_loss_mask_3: 0.1757  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.5648  m1_loss_mask_4: 0.1737  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.6089  m1_loss_mask_5: 0.1728  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.5507  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.5876  m1_loss_mask_7: 0.172  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.5532  m1_loss_mask_8: 0.1718  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5619  m2_loss_mask: 0.1624  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6254  m2_loss_mask_0: 0.2043  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.703  m2_loss_mask_1: 0.1762  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.6418  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.594  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.5587  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5345  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.5477  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5652  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.553  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.242  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9596    time: 1.4739  last_time: 1.4678  data_time: 0.0416  last_data_time: 0.0399   lr: 0.0001  max_mem: 35627M
[08/19 19:11:13] d2.utils.events INFO:  eta: 0:17:08  iter: 299  total_loss: 46.12  m1_loss_ce: 0.5516  m1_loss_mask: 0.1743  m1_loss_dice: 1.26  m1_loss_ce_0: 0.6798  m1_loss_mask_0: 0.2022  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.7392  m1_loss_mask_1: 0.1926  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.6308  m1_loss_mask_2: 0.1857  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.6023  m1_loss_mask_3: 0.1816  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.542  m1_loss_mask_4: 0.1787  m1_loss_dice_4: 1.282  m1_loss_ce_5: 0.5589  m1_loss_mask_5: 0.1761  m1_loss_dice_5: 1.288  m1_loss_ce_6: 0.5659  m1_loss_mask_6: 0.1763  m1_loss_dice_6: 1.277  m1_loss_ce_7: 0.5683  m1_loss_mask_7: 0.1733  m1_loss_dice_7: 1.27  m1_loss_ce_8: 0.5683  m1_loss_mask_8: 0.1756  m1_loss_dice_8: 1.245  m2_loss_ce: 0.5092  m2_loss_mask: 0.175  m2_loss_dice: 1.277  m2_loss_ce_0: 0.6827  m2_loss_mask_0: 0.2113  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.6955  m2_loss_mask_1: 0.187  m2_loss_dice_1: 1.374  m2_loss_ce_2: 0.6241  m2_loss_mask_2: 0.181  m2_loss_dice_2: 1.332  m2_loss_ce_3: 0.6145  m2_loss_mask_3: 0.1785  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.5752  m2_loss_mask_4: 0.1786  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5594  m2_loss_mask_5: 0.1766  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5651  m2_loss_mask_6: 0.1733  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.5714  m2_loss_mask_7: 0.174  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.5572  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.244  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.9578    time: 1.4730  last_time: 1.4039  data_time: 0.0415  last_data_time: 0.0534   lr: 0.0001  max_mem: 35627M
[08/19 19:11:43] d2.utils.events INFO:  eta: 0:16:38  iter: 319  total_loss: 44.52  m1_loss_ce: 0.533  m1_loss_mask: 0.1819  m1_loss_dice: 1.221  m1_loss_ce_0: 0.6053  m1_loss_mask_0: 0.2098  m1_loss_dice_0: 1.474  m1_loss_ce_1: 0.6692  m1_loss_mask_1: 0.1902  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.639  m1_loss_mask_2: 0.187  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.5666  m1_loss_mask_3: 0.1846  m1_loss_dice_3: 1.242  m1_loss_ce_4: 0.5803  m1_loss_mask_4: 0.1846  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.5493  m1_loss_mask_5: 0.1824  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.5583  m1_loss_mask_6: 0.1839  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.5596  m1_loss_mask_7: 0.1828  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.562  m1_loss_mask_8: 0.1832  m1_loss_dice_8: 1.192  m2_loss_ce: 0.5554  m2_loss_mask: 0.1784  m2_loss_dice: 1.213  m2_loss_ce_0: 0.611  m2_loss_mask_0: 0.2083  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6688  m2_loss_mask_1: 0.1938  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.6268  m2_loss_mask_2: 0.1876  m2_loss_dice_2: 1.274  m2_loss_ce_3: 0.5986  m2_loss_mask_3: 0.1861  m2_loss_dice_3: 1.225  m2_loss_ce_4: 0.5565  m2_loss_mask_4: 0.187  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.5486  m2_loss_mask_5: 0.1852  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.5355  m2_loss_mask_6: 0.1815  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.5671  m2_loss_mask_7: 0.1848  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.5285  m2_loss_mask_8: 0.1847  m2_loss_dice_8: 1.236  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9575    time: 1.4717  last_time: 1.4752  data_time: 0.0388  last_data_time: 0.0385   lr: 0.0001  max_mem: 35627M
[08/19 19:12:12] d2.utils.events INFO:  eta: 0:16:08  iter: 339  total_loss: 43.63  m1_loss_ce: 0.5324  m1_loss_mask: 0.1568  m1_loss_dice: 1.195  m1_loss_ce_0: 0.6153  m1_loss_mask_0: 0.1815  m1_loss_dice_0: 1.376  m1_loss_ce_1: 0.693  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.283  m1_loss_ce_2: 0.6262  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.6043  m1_loss_mask_3: 0.1604  m1_loss_dice_3: 1.168  m1_loss_ce_4: 0.5647  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.5617  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.208  m1_loss_ce_6: 0.5422  m1_loss_mask_6: 0.1616  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.5484  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.165  m1_loss_ce_8: 0.5198  m1_loss_mask_8: 0.1606  m1_loss_dice_8: 1.18  m2_loss_ce: 0.5127  m2_loss_mask: 0.155  m2_loss_dice: 1.146  m2_loss_ce_0: 0.6148  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.389  m2_loss_ce_1: 0.6643  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.341  m2_loss_ce_2: 0.6116  m2_loss_mask_2: 0.1573  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5697  m2_loss_mask_3: 0.1571  m2_loss_dice_3: 1.212  m2_loss_ce_4: 0.5224  m2_loss_mask_4: 0.158  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.5635  m2_loss_mask_5: 0.1576  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.5409  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.194  m2_loss_ce_7: 0.5058  m2_loss_mask_7: 0.1567  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.5294  m2_loss_mask_8: 0.1568  m2_loss_dice_8: 1.184  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9572    time: 1.4711  last_time: 1.4801  data_time: 0.0399  last_data_time: 0.0390   lr: 0.0001  max_mem: 35627M
[08/19 19:12:42] d2.utils.events INFO:  eta: 0:15:39  iter: 359  total_loss: 45.89  m1_loss_ce: 0.5747  m1_loss_mask: 0.1721  m1_loss_dice: 1.264  m1_loss_ce_0: 0.6296  m1_loss_mask_0: 0.1985  m1_loss_dice_0: 1.479  m1_loss_ce_1: 0.6773  m1_loss_mask_1: 0.1874  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.6371  m1_loss_mask_2: 0.1752  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.595  m1_loss_mask_3: 0.1717  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.5569  m1_loss_mask_4: 0.1756  m1_loss_dice_4: 1.299  m1_loss_ce_5: 0.593  m1_loss_mask_5: 0.1733  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.5525  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.279  m1_loss_ce_7: 0.5625  m1_loss_mask_7: 0.171  m1_loss_dice_7: 1.259  m1_loss_ce_8: 0.562  m1_loss_mask_8: 0.1692  m1_loss_dice_8: 1.233  m2_loss_ce: 0.5158  m2_loss_mask: 0.1677  m2_loss_dice: 1.265  m2_loss_ce_0: 0.6189  m2_loss_mask_0: 0.1974  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.6872  m2_loss_mask_1: 0.1802  m2_loss_dice_1: 1.438  m2_loss_ce_2: 0.6088  m2_loss_mask_2: 0.1723  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5866  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5526  m2_loss_mask_4: 0.1696  m2_loss_dice_4: 1.317  m2_loss_ce_5: 0.5452  m2_loss_mask_5: 0.1687  m2_loss_dice_5: 1.286  m2_loss_ce_6: 0.5215  m2_loss_mask_6: 0.1659  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.5427  m2_loss_mask_7: 0.1655  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.5365  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.277  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.96    time: 1.4716  last_time: 1.5384  data_time: 0.0421  last_data_time: 0.0454   lr: 0.0001  max_mem: 35627M
[08/19 19:13:12] d2.utils.events INFO:  eta: 0:15:09  iter: 379  total_loss: 42.25  m1_loss_ce: 0.5011  m1_loss_mask: 0.1717  m1_loss_dice: 1.148  m1_loss_ce_0: 0.5948  m1_loss_mask_0: 0.1976  m1_loss_dice_0: 1.334  m1_loss_ce_1: 0.6555  m1_loss_mask_1: 0.1843  m1_loss_dice_1: 1.308  m1_loss_ce_2: 0.6011  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.5421  m1_loss_mask_3: 0.1777  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.5118  m1_loss_mask_4: 0.1752  m1_loss_dice_4: 1.153  m1_loss_ce_5: 0.507  m1_loss_mask_5: 0.1737  m1_loss_dice_5: 1.176  m1_loss_ce_6: 0.4899  m1_loss_mask_6: 0.1748  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.5019  m1_loss_mask_7: 0.1758  m1_loss_dice_7: 1.135  m1_loss_ce_8: 0.4809  m1_loss_mask_8: 0.1736  m1_loss_dice_8: 1.159  m2_loss_ce: 0.4887  m2_loss_mask: 0.1765  m2_loss_dice: 1.158  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.2015  m2_loss_dice_0: 1.365  m2_loss_ce_1: 0.6311  m2_loss_mask_1: 0.1838  m2_loss_dice_1: 1.244  m2_loss_ce_2: 0.5783  m2_loss_mask_2: 0.1781  m2_loss_dice_2: 1.26  m2_loss_ce_3: 0.5544  m2_loss_mask_3: 0.1786  m2_loss_dice_3: 1.216  m2_loss_ce_4: 0.5274  m2_loss_mask_4: 0.1809  m2_loss_dice_4: 1.193  m2_loss_ce_5: 0.5144  m2_loss_mask_5: 0.1805  m2_loss_dice_5: 1.191  m2_loss_ce_6: 0.5247  m2_loss_mask_6: 0.1791  m2_loss_dice_6: 1.175  m2_loss_ce_7: 0.512  m2_loss_mask_7: 0.1784  m2_loss_dice_7: 1.141  m2_loss_ce_8: 0.5072  m2_loss_mask_8: 0.1765  m2_loss_dice_8: 1.15  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9572    time: 1.4710  last_time: 1.5150  data_time: 0.0384  last_data_time: 0.0365   lr: 0.0001  max_mem: 35627M
[08/19 19:13:41] d2.utils.events INFO:  eta: 0:14:40  iter: 399  total_loss: 42.93  m1_loss_ce: 0.521  m1_loss_mask: 0.1665  m1_loss_dice: 1.151  m1_loss_ce_0: 0.6434  m1_loss_mask_0: 0.1982  m1_loss_dice_0: 1.34  m1_loss_ce_1: 0.6929  m1_loss_mask_1: 0.1859  m1_loss_dice_1: 1.278  m1_loss_ce_2: 0.6417  m1_loss_mask_2: 0.1819  m1_loss_dice_2: 1.224  m1_loss_ce_3: 0.6021  m1_loss_mask_3: 0.173  m1_loss_dice_3: 1.17  m1_loss_ce_4: 0.5659  m1_loss_mask_4: 0.1689  m1_loss_dice_4: 1.168  m1_loss_ce_5: 0.5402  m1_loss_mask_5: 0.1681  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.5523  m1_loss_mask_6: 0.1683  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.5519  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.5632  m1_loss_mask_8: 0.167  m1_loss_dice_8: 1.161  m2_loss_ce: 0.5436  m2_loss_mask: 0.1675  m2_loss_dice: 1.178  m2_loss_ce_0: 0.6295  m2_loss_mask_0: 0.2087  m2_loss_dice_0: 1.376  m2_loss_ce_1: 0.6559  m2_loss_mask_1: 0.1804  m2_loss_dice_1: 1.305  m2_loss_ce_2: 0.6296  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.582  m2_loss_mask_3: 0.1684  m2_loss_dice_3: 1.179  m2_loss_ce_4: 0.5473  m2_loss_mask_4: 0.1722  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5482  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.211  m2_loss_ce_6: 0.5295  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.542  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.5381  m2_loss_mask_8: 0.1664  m2_loss_dice_8: 1.136  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.9572    time: 1.4709  last_time: 1.4330  data_time: 0.0404  last_data_time: 0.0372   lr: 0.0001  max_mem: 35627M
[08/19 19:14:11] d2.utils.events INFO:  eta: 0:14:11  iter: 419  total_loss: 45.38  m1_loss_ce: 0.5419  m1_loss_mask: 0.1614  m1_loss_dice: 1.337  m1_loss_ce_0: 0.6792  m1_loss_mask_0: 0.1847  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.7017  m1_loss_mask_1: 0.1716  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.6517  m1_loss_mask_2: 0.1623  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.6073  m1_loss_mask_3: 0.1612  m1_loss_dice_3: 1.298  m1_loss_ce_4: 0.5702  m1_loss_mask_4: 0.1628  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.5608  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.315  m1_loss_ce_6: 0.5629  m1_loss_mask_6: 0.1621  m1_loss_dice_6: 1.285  m1_loss_ce_7: 0.5507  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.5591  m1_loss_mask_8: 0.1632  m1_loss_dice_8: 1.294  m2_loss_ce: 0.5411  m2_loss_mask: 0.1602  m2_loss_dice: 1.312  m2_loss_ce_0: 0.68  m2_loss_mask_0: 0.1872  m2_loss_dice_0: 1.552  m2_loss_ce_1: 0.726  m2_loss_mask_1: 0.1702  m2_loss_dice_1: 1.489  m2_loss_ce_2: 0.6781  m2_loss_mask_2: 0.1613  m2_loss_dice_2: 1.391  m2_loss_ce_3: 0.6056  m2_loss_mask_3: 0.1624  m2_loss_dice_3: 1.337  m2_loss_ce_4: 0.5575  m2_loss_mask_4: 0.1625  m2_loss_dice_4: 1.339  m2_loss_ce_5: 0.5731  m2_loss_mask_5: 0.1636  m2_loss_dice_5: 1.342  m2_loss_ce_6: 0.5539  m2_loss_mask_6: 0.1595  m2_loss_dice_6: 1.302  m2_loss_ce_7: 0.5372  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.291  m2_loss_ce_8: 0.53  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.344  com_loss_ce: 2.147  com_loss_mask: 0.6935  com_loss_dice: 0.9617    time: 1.4711  last_time: 1.4975  data_time: 0.0437  last_data_time: 0.0435   lr: 0.0001  max_mem: 35627M
[08/19 19:14:41] d2.utils.events INFO:  eta: 0:13:42  iter: 439  total_loss: 41.52  m1_loss_ce: 0.5102  m1_loss_mask: 0.1564  m1_loss_dice: 1.081  m1_loss_ce_0: 0.6114  m1_loss_mask_0: 0.1876  m1_loss_dice_0: 1.344  m1_loss_ce_1: 0.6379  m1_loss_mask_1: 0.1703  m1_loss_dice_1: 1.263  m1_loss_ce_2: 0.5786  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.213  m1_loss_ce_3: 0.5377  m1_loss_mask_3: 0.1616  m1_loss_dice_3: 1.106  m1_loss_ce_4: 0.5365  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.127  m1_loss_ce_5: 0.4925  m1_loss_mask_5: 0.1595  m1_loss_dice_5: 1.117  m1_loss_ce_6: 0.489  m1_loss_mask_6: 0.1608  m1_loss_dice_6: 1.11  m1_loss_ce_7: 0.4591  m1_loss_mask_7: 0.1583  m1_loss_dice_7: 1.114  m1_loss_ce_8: 0.4903  m1_loss_mask_8: 0.1566  m1_loss_dice_8: 1.107  m2_loss_ce: 0.5111  m2_loss_mask: 0.1645  m2_loss_dice: 1.135  m2_loss_ce_0: 0.5965  m2_loss_mask_0: 0.1943  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6641  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.3  m2_loss_ce_2: 0.5943  m2_loss_mask_2: 0.1673  m2_loss_dice_2: 1.232  m2_loss_ce_3: 0.5501  m2_loss_mask_3: 0.165  m2_loss_dice_3: 1.184  m2_loss_ce_4: 0.5135  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.19  m2_loss_ce_5: 0.5098  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.195  m2_loss_ce_6: 0.5068  m2_loss_mask_6: 0.1651  m2_loss_dice_6: 1.177  m2_loss_ce_7: 0.491  m2_loss_mask_7: 0.1627  m2_loss_dice_7: 1.172  m2_loss_ce_8: 0.4681  m2_loss_mask_8: 0.1626  m2_loss_dice_8: 1.167  com_loss_ce: 2.139  com_loss_mask: 0.6935  com_loss_dice: 0.9565    time: 1.4715  last_time: 1.5157  data_time: 0.0414  last_data_time: 0.0415   lr: 0.0001  max_mem: 35627M
[08/19 19:15:10] d2.utils.events INFO:  eta: 0:13:12  iter: 459  total_loss: 43.05  m1_loss_ce: 0.5231  m1_loss_mask: 0.1616  m1_loss_dice: 1.176  m1_loss_ce_0: 0.6568  m1_loss_mask_0: 0.182  m1_loss_dice_0: 1.37  m1_loss_ce_1: 0.6755  m1_loss_mask_1: 0.1766  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6483  m1_loss_mask_2: 0.164  m1_loss_dice_2: 1.228  m1_loss_ce_3: 0.5584  m1_loss_mask_3: 0.1643  m1_loss_dice_3: 1.204  m1_loss_ce_4: 0.5581  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.5521  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.5369  m1_loss_mask_6: 0.1597  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.5106  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.517  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.19  m2_loss_ce: 0.5549  m2_loss_mask: 0.1649  m2_loss_dice: 1.202  m2_loss_ce_0: 0.6209  m2_loss_mask_0: 0.1942  m2_loss_dice_0: 1.419  m2_loss_ce_1: 0.6987  m2_loss_mask_1: 0.1683  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.629  m2_loss_mask_2: 0.1651  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5727  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.5894  m2_loss_mask_4: 0.1639  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.546  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.205  m2_loss_ce_6: 0.5108  m2_loss_mask_6: 0.1633  m2_loss_dice_6: 1.197  m2_loss_ce_7: 0.5642  m2_loss_mask_7: 0.1657  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.5263  m2_loss_mask_8: 0.1636  m2_loss_dice_8: 1.185  com_loss_ce: 2.139  com_loss_mask: 0.6935  com_loss_dice: 0.957    time: 1.4706  last_time: 1.4149  data_time: 0.0402  last_data_time: 0.0404   lr: 0.0001  max_mem: 35627M
[08/19 19:15:40] d2.utils.events INFO:  eta: 0:12:42  iter: 479  total_loss: 43.05  m1_loss_ce: 0.5272  m1_loss_mask: 0.1546  m1_loss_dice: 1.167  m1_loss_ce_0: 0.6411  m1_loss_mask_0: 0.1811  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.7243  m1_loss_mask_1: 0.1656  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.6359  m1_loss_mask_2: 0.1608  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.6019  m1_loss_mask_3: 0.1602  m1_loss_dice_3: 1.199  m1_loss_ce_4: 0.5542  m1_loss_mask_4: 0.157  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.5305  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.198  m1_loss_ce_6: 0.5196  m1_loss_mask_6: 0.1569  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.5125  m1_loss_mask_7: 0.1578  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.5275  m1_loss_mask_8: 0.1558  m1_loss_dice_8: 1.183  m2_loss_ce: 0.5354  m2_loss_mask: 0.1574  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6394  m2_loss_mask_0: 0.1802  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6818  m2_loss_mask_1: 0.1659  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.659  m2_loss_mask_2: 0.1594  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.5938  m2_loss_mask_3: 0.1541  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5763  m2_loss_mask_4: 0.158  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5702  m2_loss_mask_5: 0.1596  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5505  m2_loss_mask_6: 0.1579  m2_loss_dice_6: 1.188  m2_loss_ce_7: 0.578  m2_loss_mask_7: 0.158  m2_loss_dice_7: 1.192  m2_loss_ce_8: 0.5095  m2_loss_mask_8: 0.1566  m2_loss_dice_8: 1.247  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9604    time: 1.4695  last_time: 1.4879  data_time: 0.0412  last_data_time: 0.0322   lr: 0.0001  max_mem: 35627M
[08/19 19:16:09] d2.utils.events INFO:  eta: 0:12:13  iter: 499  total_loss: 45.04  m1_loss_ce: 0.5267  m1_loss_mask: 0.1641  m1_loss_dice: 1.182  m1_loss_ce_0: 0.6347  m1_loss_mask_0: 0.1958  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.7001  m1_loss_mask_1: 0.1734  m1_loss_dice_1: 1.332  m1_loss_ce_2: 0.6119  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5629  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5502  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.216  m1_loss_ce_5: 0.537  m1_loss_mask_5: 0.165  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.5336  m1_loss_mask_6: 0.1644  m1_loss_dice_6: 1.184  m1_loss_ce_7: 0.5326  m1_loss_mask_7: 0.1648  m1_loss_dice_7: 1.186  m1_loss_ce_8: 0.519  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.182  m2_loss_ce: 0.5249  m2_loss_mask: 0.1621  m2_loss_dice: 1.239  m2_loss_ce_0: 0.6046  m2_loss_mask_0: 0.1874  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6687  m2_loss_mask_1: 0.177  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.6355  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5953  m2_loss_mask_3: 0.1639  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5732  m2_loss_mask_4: 0.1601  m2_loss_dice_4: 1.256  m2_loss_ce_5: 0.5777  m2_loss_mask_5: 0.1659  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.5388  m2_loss_mask_6: 0.1634  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.5526  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.5401  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.204  com_loss_ce: 2.141  com_loss_mask: 0.6935  com_loss_dice: 0.9571    time: 1.4693  last_time: 1.4221  data_time: 0.0435  last_data_time: 0.0629   lr: 0.0001  max_mem: 35627M
[08/19 19:16:38] d2.utils.events INFO:  eta: 0:11:44  iter: 519  total_loss: 45.12  m1_loss_ce: 0.5096  m1_loss_mask: 0.1638  m1_loss_dice: 1.246  m1_loss_ce_0: 0.6417  m1_loss_mask_0: 0.1941  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.675  m1_loss_mask_1: 0.1784  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.6175  m1_loss_mask_2: 0.1677  m1_loss_dice_2: 1.319  m1_loss_ce_3: 0.5549  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.5698  m1_loss_mask_4: 0.1654  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.529  m1_loss_mask_5: 0.1621  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.5233  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.5377  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.5321  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.236  m2_loss_ce: 0.5543  m2_loss_mask: 0.1621  m2_loss_dice: 1.234  m2_loss_ce_0: 0.6211  m2_loss_mask_0: 0.1954  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.7072  m2_loss_mask_1: 0.1785  m2_loss_dice_1: 1.4  m2_loss_ce_2: 0.6374  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.6012  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5643  m2_loss_mask_4: 0.1663  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5354  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5564  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.5402  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.5531  m2_loss_mask_8: 0.162  m2_loss_dice_8: 1.275  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9602    time: 1.4689  last_time: 1.5445  data_time: 0.0440  last_data_time: 0.0452   lr: 0.0001  max_mem: 35627M
[08/19 19:17:07] d2.utils.events INFO:  eta: 0:11:14  iter: 539  total_loss: 43.77  m1_loss_ce: 0.4994  m1_loss_mask: 0.1682  m1_loss_dice: 1.237  m1_loss_ce_0: 0.6506  m1_loss_mask_0: 0.2047  m1_loss_dice_0: 1.41  m1_loss_ce_1: 0.6749  m1_loss_mask_1: 0.1847  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.603  m1_loss_mask_2: 0.1747  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.5502  m1_loss_mask_3: 0.1719  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.5067  m1_loss_mask_4: 0.1699  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.5102  m1_loss_mask_5: 0.1686  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.4947  m1_loss_mask_6: 0.1713  m1_loss_dice_6: 1.272  m1_loss_ce_7: 0.4832  m1_loss_mask_7: 0.1658  m1_loss_dice_7: 1.258  m1_loss_ce_8: 0.504  m1_loss_mask_8: 0.1684  m1_loss_dice_8: 1.228  m2_loss_ce: 0.5108  m2_loss_mask: 0.1709  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6217  m2_loss_mask_0: 0.2089  m2_loss_dice_0: 1.448  m2_loss_ce_1: 0.6319  m2_loss_mask_1: 0.185  m2_loss_dice_1: 1.399  m2_loss_ce_2: 0.6017  m2_loss_mask_2: 0.1719  m2_loss_dice_2: 1.344  m2_loss_ce_3: 0.5995  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5567  m2_loss_mask_4: 0.1705  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.521  m2_loss_mask_5: 0.1711  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.541  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.5159  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.26  m2_loss_ce_8: 0.5035  m2_loss_mask_8: 0.1721  m2_loss_dice_8: 1.241  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9576    time: 1.4680  last_time: 1.3674  data_time: 0.0427  last_data_time: 0.0375   lr: 0.0001  max_mem: 35639M
[08/19 19:17:36] d2.utils.events INFO:  eta: 0:10:44  iter: 559  total_loss: 45.17  m1_loss_ce: 0.5154  m1_loss_mask: 0.1844  m1_loss_dice: 1.197  m1_loss_ce_0: 0.6444  m1_loss_mask_0: 0.2081  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.6982  m1_loss_mask_1: 0.1927  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.6578  m1_loss_mask_2: 0.1819  m1_loss_dice_2: 1.297  m1_loss_ce_3: 0.5806  m1_loss_mask_3: 0.1827  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.5539  m1_loss_mask_4: 0.1795  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.5398  m1_loss_mask_5: 0.181  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.5103  m1_loss_mask_6: 0.1835  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.5376  m1_loss_mask_7: 0.1828  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.5161  m1_loss_mask_8: 0.1846  m1_loss_dice_8: 1.232  m2_loss_ce: 0.5642  m2_loss_mask: 0.184  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6433  m2_loss_mask_0: 0.2217  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.7173  m2_loss_mask_1: 0.1996  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.6476  m2_loss_mask_2: 0.1861  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.6198  m2_loss_mask_3: 0.1851  m2_loss_dice_3: 1.284  m2_loss_ce_4: 0.587  m2_loss_mask_4: 0.1896  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.5761  m2_loss_mask_5: 0.1884  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.5498  m2_loss_mask_6: 0.1872  m2_loss_dice_6: 1.231  m2_loss_ce_7: 0.531  m2_loss_mask_7: 0.1844  m2_loss_dice_7: 1.181  m2_loss_ce_8: 0.542  m2_loss_mask_8: 0.1833  m2_loss_dice_8: 1.215  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.9592    time: 1.4669  last_time: 1.4453  data_time: 0.0436  last_data_time: 0.0482   lr: 0.0001  max_mem: 35639M
[08/19 19:18:06] d2.utils.events INFO:  eta: 0:10:15  iter: 579  total_loss: 44.88  m1_loss_ce: 0.5072  m1_loss_mask: 0.1592  m1_loss_dice: 1.224  m1_loss_ce_0: 0.6549  m1_loss_mask_0: 0.1846  m1_loss_dice_0: 1.441  m1_loss_ce_1: 0.6602  m1_loss_mask_1: 0.1668  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.6422  m1_loss_mask_2: 0.1628  m1_loss_dice_2: 1.262  m1_loss_ce_3: 0.5471  m1_loss_mask_3: 0.1641  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.5656  m1_loss_mask_4: 0.1629  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.5295  m1_loss_mask_5: 0.1585  m1_loss_dice_5: 1.246  m1_loss_ce_6: 0.5353  m1_loss_mask_6: 0.1648  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.5209  m1_loss_mask_7: 0.157  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.5175  m1_loss_mask_8: 0.1558  m1_loss_dice_8: 1.225  m2_loss_ce: 0.5651  m2_loss_mask: 0.1515  m2_loss_dice: 1.232  m2_loss_ce_0: 0.664  m2_loss_mask_0: 0.1789  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6963  m2_loss_mask_1: 0.1623  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6489  m2_loss_mask_2: 0.1566  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5703  m2_loss_mask_3: 0.1571  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5735  m2_loss_mask_4: 0.1586  m2_loss_dice_4: 1.271  m2_loss_ce_5: 0.5714  m2_loss_mask_5: 0.1575  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.5521  m2_loss_mask_6: 0.1532  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.5604  m2_loss_mask_7: 0.1521  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.5624  m2_loss_mask_8: 0.1529  m2_loss_dice_8: 1.238  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9588    time: 1.4671  last_time: 1.4315  data_time: 0.0466  last_data_time: 0.0321   lr: 0.0001  max_mem: 35639M
[08/19 19:18:36] d2.utils.events INFO:  eta: 0:09:46  iter: 599  total_loss: 45.01  m1_loss_ce: 0.552  m1_loss_mask: 0.1526  m1_loss_dice: 1.241  m1_loss_ce_0: 0.6717  m1_loss_mask_0: 0.1736  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.7336  m1_loss_mask_1: 0.1649  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.6788  m1_loss_mask_2: 0.1596  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.6104  m1_loss_mask_3: 0.1552  m1_loss_dice_3: 1.245  m1_loss_ce_4: 0.5972  m1_loss_mask_4: 0.1549  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.5668  m1_loss_mask_5: 0.1521  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.5214  m1_loss_mask_6: 0.1539  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.5618  m1_loss_mask_7: 0.1551  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.5359  m1_loss_mask_8: 0.1526  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5811  m2_loss_mask: 0.1554  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6851  m2_loss_mask_0: 0.1781  m2_loss_dice_0: 1.502  m2_loss_ce_1: 0.7141  m2_loss_mask_1: 0.1662  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.6384  m2_loss_mask_2: 0.1554  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5949  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.251  m2_loss_ce_4: 0.5629  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5603  m2_loss_mask_5: 0.1531  m2_loss_dice_5: 1.288  m2_loss_ce_6: 0.5295  m2_loss_mask_6: 0.1543  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5292  m2_loss_mask_7: 0.1538  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.5481  m2_loss_mask_8: 0.1558  m2_loss_dice_8: 1.244  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9618    time: 1.4676  last_time: 1.4294  data_time: 0.0441  last_data_time: 0.0545   lr: 0.0001  max_mem: 35639M
[08/19 19:19:05] d2.utils.events INFO:  eta: 0:09:16  iter: 619  total_loss: 45.35  m1_loss_ce: 0.5319  m1_loss_mask: 0.1628  m1_loss_dice: 1.25  m1_loss_ce_0: 0.5925  m1_loss_mask_0: 0.1937  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.65  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.6456  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.561  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.5222  m1_loss_mask_4: 0.1672  m1_loss_dice_4: 1.275  m1_loss_ce_5: 0.555  m1_loss_mask_5: 0.1648  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5364  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.253  m1_loss_ce_7: 0.5159  m1_loss_mask_7: 0.1619  m1_loss_dice_7: 1.271  m1_loss_ce_8: 0.5232  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.251  m2_loss_ce: 0.5337  m2_loss_mask: 0.1682  m2_loss_dice: 1.299  m2_loss_ce_0: 0.6063  m2_loss_mask_0: 0.2031  m2_loss_dice_0: 1.491  m2_loss_ce_1: 0.6644  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.6369  m2_loss_mask_2: 0.1737  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.6013  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.294  m2_loss_ce_4: 0.5591  m2_loss_mask_4: 0.1721  m2_loss_dice_4: 1.31  m2_loss_ce_5: 0.5503  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.5243  m2_loss_mask_6: 0.1722  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.5479  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5256  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.259  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9595    time: 1.4671  last_time: 1.4400  data_time: 0.0437  last_data_time: 0.0386   lr: 0.0001  max_mem: 35639M
[08/19 19:19:34] d2.utils.events INFO:  eta: 0:08:47  iter: 639  total_loss: 46.46  m1_loss_ce: 0.5543  m1_loss_mask: 0.1611  m1_loss_dice: 1.266  m1_loss_ce_0: 0.6546  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.478  m1_loss_ce_1: 0.7159  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.423  m1_loss_ce_2: 0.6679  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.379  m1_loss_ce_3: 0.6588  m1_loss_mask_3: 0.1652  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.5918  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.311  m1_loss_ce_5: 0.5726  m1_loss_mask_5: 0.1607  m1_loss_dice_5: 1.321  m1_loss_ce_6: 0.5637  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.5388  m1_loss_mask_7: 0.1607  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.5473  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.242  m2_loss_ce: 0.562  m2_loss_mask: 0.161  m2_loss_dice: 1.3  m2_loss_ce_0: 0.6893  m2_loss_mask_0: 0.1905  m2_loss_dice_0: 1.564  m2_loss_ce_1: 0.6802  m2_loss_mask_1: 0.1738  m2_loss_dice_1: 1.466  m2_loss_ce_2: 0.6475  m2_loss_mask_2: 0.1679  m2_loss_dice_2: 1.364  m2_loss_ce_3: 0.6202  m2_loss_mask_3: 0.168  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5603  m2_loss_mask_4: 0.1677  m2_loss_dice_4: 1.338  m2_loss_ce_5: 0.6138  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.5647  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.289  m2_loss_ce_7: 0.5569  m2_loss_mask_7: 0.1633  m2_loss_dice_7: 1.341  m2_loss_ce_8: 0.5574  m2_loss_mask_8: 0.161  m2_loss_dice_8: 1.295  com_loss_ce: 2.145  com_loss_mask: 0.6935  com_loss_dice: 0.96    time: 1.4671  last_time: 1.4455  data_time: 0.0439  last_data_time: 0.0399   lr: 0.0001  max_mem: 35639M
[08/19 19:20:04] d2.utils.events INFO:  eta: 0:08:18  iter: 659  total_loss: 44.25  m1_loss_ce: 0.5303  m1_loss_mask: 0.1708  m1_loss_dice: 1.204  m1_loss_ce_0: 0.6328  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.319  m1_loss_ce_1: 0.7059  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.296  m1_loss_ce_2: 0.6412  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.5984  m1_loss_mask_3: 0.1707  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.5773  m1_loss_mask_4: 0.1708  m1_loss_dice_4: 1.212  m1_loss_ce_5: 0.555  m1_loss_mask_5: 0.1688  m1_loss_dice_5: 1.188  m1_loss_ce_6: 0.5942  m1_loss_mask_6: 0.1682  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.5338  m1_loss_mask_7: 0.1696  m1_loss_dice_7: 1.178  m1_loss_ce_8: 0.5146  m1_loss_mask_8: 0.1716  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5239  m2_loss_mask: 0.1617  m2_loss_dice: 1.143  m2_loss_ce_0: 0.6185  m2_loss_mask_0: 0.189  m2_loss_dice_0: 1.367  m2_loss_ce_1: 0.7263  m2_loss_mask_1: 0.1715  m2_loss_dice_1: 1.29  m2_loss_ce_2: 0.6426  m2_loss_mask_2: 0.1632  m2_loss_dice_2: 1.24  m2_loss_ce_3: 0.5798  m2_loss_mask_3: 0.1599  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5374  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.147  m2_loss_ce_5: 0.5382  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.174  m2_loss_ce_6: 0.5251  m2_loss_mask_6: 0.1595  m2_loss_dice_6: 1.164  m2_loss_ce_7: 0.5352  m2_loss_mask_7: 0.1611  m2_loss_dice_7: 1.149  m2_loss_ce_8: 0.5229  m2_loss_mask_8: 0.1625  m2_loss_dice_8: 1.194  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9561    time: 1.4668  last_time: 1.5514  data_time: 0.0447  last_data_time: 0.0655   lr: 0.0001  max_mem: 35639M
[08/19 19:20:33] d2.utils.events INFO:  eta: 0:07:48  iter: 679  total_loss: 43.49  m1_loss_ce: 0.5309  m1_loss_mask: 0.1763  m1_loss_dice: 1.173  m1_loss_ce_0: 0.6438  m1_loss_mask_0: 0.1987  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.674  m1_loss_mask_1: 0.1824  m1_loss_dice_1: 1.319  m1_loss_ce_2: 0.6256  m1_loss_mask_2: 0.1815  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.5722  m1_loss_mask_3: 0.1805  m1_loss_dice_3: 1.225  m1_loss_ce_4: 0.548  m1_loss_mask_4: 0.176  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.5255  m1_loss_mask_5: 0.1743  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.5355  m1_loss_mask_6: 0.1763  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.5127  m1_loss_mask_7: 0.1765  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.51  m1_loss_mask_8: 0.1767  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5127  m2_loss_mask: 0.173  m2_loss_dice: 1.216  m2_loss_ce_0: 0.6276  m2_loss_mask_0: 0.2041  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6855  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.6121  m2_loss_mask_2: 0.1747  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5745  m2_loss_mask_3: 0.1776  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.5251  m2_loss_mask_4: 0.1766  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.5274  m2_loss_mask_5: 0.1778  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.5307  m2_loss_mask_6: 0.1742  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.5187  m2_loss_mask_7: 0.1721  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.5109  m2_loss_mask_8: 0.171  m2_loss_dice_8: 1.208  com_loss_ce: 2.14  com_loss_mask: 0.6935  com_loss_dice: 0.9577    time: 1.4665  last_time: 1.5013  data_time: 0.0446  last_data_time: 0.0494   lr: 0.0001  max_mem: 35639M
[08/19 19:21:02] d2.utils.events INFO:  eta: 0:07:19  iter: 699  total_loss: 44.85  m1_loss_ce: 0.5351  m1_loss_mask: 0.1555  m1_loss_dice: 1.263  m1_loss_ce_0: 0.6082  m1_loss_mask_0: 0.1809  m1_loss_dice_0: 1.501  m1_loss_ce_1: 0.6872  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.6187  m1_loss_mask_2: 0.1594  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5594  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.277  m1_loss_ce_4: 0.5557  m1_loss_mask_4: 0.162  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5495  m1_loss_mask_5: 0.1589  m1_loss_dice_5: 1.241  m1_loss_ce_6: 0.5505  m1_loss_mask_6: 0.1563  m1_loss_dice_6: 1.269  m1_loss_ce_7: 0.5122  m1_loss_mask_7: 0.1533  m1_loss_dice_7: 1.237  m1_loss_ce_8: 0.5326  m1_loss_mask_8: 0.154  m1_loss_dice_8: 1.257  m2_loss_ce: 0.5264  m2_loss_mask: 0.1625  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6031  m2_loss_mask_0: 0.1873  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.6853  m2_loss_mask_1: 0.173  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.6291  m2_loss_mask_2: 0.1649  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5813  m2_loss_mask_3: 0.1668  m2_loss_dice_3: 1.301  m2_loss_ce_4: 0.5625  m2_loss_mask_4: 0.1622  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.5927  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.282  m2_loss_ce_6: 0.5496  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.258  m2_loss_ce_7: 0.5388  m2_loss_mask_7: 0.163  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.5379  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.241  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9601    time: 1.4660  last_time: 1.4283  data_time: 0.0453  last_data_time: 0.0434   lr: 0.0001  max_mem: 35639M
[08/19 19:21:31] d2.utils.events INFO:  eta: 0:06:49  iter: 719  total_loss: 43.04  m1_loss_ce: 0.5237  m1_loss_mask: 0.1717  m1_loss_dice: 1.194  m1_loss_ce_0: 0.6098  m1_loss_mask_0: 0.1951  m1_loss_dice_0: 1.357  m1_loss_ce_1: 0.648  m1_loss_mask_1: 0.1769  m1_loss_dice_1: 1.289  m1_loss_ce_2: 0.5969  m1_loss_mask_2: 0.1734  m1_loss_dice_2: 1.244  m1_loss_ce_3: 0.5571  m1_loss_mask_3: 0.176  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.5374  m1_loss_mask_4: 0.1742  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.5322  m1_loss_mask_5: 0.171  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.5337  m1_loss_mask_6: 0.1705  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.4892  m1_loss_mask_7: 0.1711  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.5113  m1_loss_mask_8: 0.1706  m1_loss_dice_8: 1.179  m2_loss_ce: 0.5227  m2_loss_mask: 0.1699  m2_loss_dice: 1.148  m2_loss_ce_0: 0.6323  m2_loss_mask_0: 0.1914  m2_loss_dice_0: 1.397  m2_loss_ce_1: 0.6662  m2_loss_mask_1: 0.1775  m2_loss_dice_1: 1.329  m2_loss_ce_2: 0.5824  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.5328  m2_loss_mask_3: 0.1689  m2_loss_dice_3: 1.22  m2_loss_ce_4: 0.5252  m2_loss_mask_4: 0.1713  m2_loss_dice_4: 1.184  m2_loss_ce_5: 0.5315  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.5237  m2_loss_mask_6: 0.17  m2_loss_dice_6: 1.181  m2_loss_ce_7: 0.5233  m2_loss_mask_7: 0.1677  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.4939  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.181  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9562    time: 1.4657  last_time: 1.3750  data_time: 0.0440  last_data_time: 0.0465   lr: 0.0001  max_mem: 35639M
[08/19 19:22:00] d2.utils.events INFO:  eta: 0:06:20  iter: 739  total_loss: 45.44  m1_loss_ce: 0.5445  m1_loss_mask: 0.1776  m1_loss_dice: 1.204  m1_loss_ce_0: 0.6638  m1_loss_mask_0: 0.2027  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.6904  m1_loss_mask_1: 0.1851  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.6367  m1_loss_mask_2: 0.1808  m1_loss_dice_2: 1.296  m1_loss_ce_3: 0.5973  m1_loss_mask_3: 0.1824  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.5929  m1_loss_mask_4: 0.1792  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.5504  m1_loss_mask_5: 0.1773  m1_loss_dice_5: 1.246  m1_loss_ce_6: 0.5152  m1_loss_mask_6: 0.1798  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.5733  m1_loss_mask_7: 0.1772  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.5366  m1_loss_mask_8: 0.1756  m1_loss_dice_8: 1.245  m2_loss_ce: 0.519  m2_loss_mask: 0.1811  m2_loss_dice: 1.222  m2_loss_ce_0: 0.6808  m2_loss_mask_0: 0.2077  m2_loss_dice_0: 1.435  m2_loss_ce_1: 0.688  m2_loss_mask_1: 0.1908  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.6427  m2_loss_mask_2: 0.1833  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.587  m2_loss_mask_3: 0.183  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.5643  m2_loss_mask_4: 0.1827  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.5646  m2_loss_mask_5: 0.1824  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5429  m2_loss_mask_6: 0.1804  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.5353  m2_loss_mask_7: 0.179  m2_loss_dice_7: 1.26  m2_loss_ce_8: 0.5296  m2_loss_mask_8: 0.1797  m2_loss_dice_8: 1.215  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9573    time: 1.4646  last_time: 1.4514  data_time: 0.0389  last_data_time: 0.0379   lr: 0.0001  max_mem: 35639M
[08/19 19:22:29] d2.utils.events INFO:  eta: 0:05:50  iter: 759  total_loss: 44.6  m1_loss_ce: 0.4844  m1_loss_mask: 0.1684  m1_loss_dice: 1.218  m1_loss_ce_0: 0.5964  m1_loss_mask_0: 0.197  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6371  m1_loss_mask_1: 0.1761  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.6088  m1_loss_mask_2: 0.169  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5632  m1_loss_mask_3: 0.1676  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.5107  m1_loss_mask_4: 0.1673  m1_loss_dice_4: 1.254  m1_loss_ce_5: 0.503  m1_loss_mask_5: 0.1655  m1_loss_dice_5: 1.235  m1_loss_ce_6: 0.5202  m1_loss_mask_6: 0.1626  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.4883  m1_loss_mask_7: 0.165  m1_loss_dice_7: 1.212  m1_loss_ce_8: 0.475  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.213  m2_loss_ce: 0.5275  m2_loss_mask: 0.1653  m2_loss_dice: 1.259  m2_loss_ce_0: 0.5942  m2_loss_mask_0: 0.2024  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.6919  m2_loss_mask_1: 0.1821  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.6271  m2_loss_mask_2: 0.1768  m2_loss_dice_2: 1.367  m2_loss_ce_3: 0.5746  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.297  m2_loss_ce_4: 0.5348  m2_loss_mask_4: 0.1721  m2_loss_dice_4: 1.277  m2_loss_ce_5: 0.5416  m2_loss_mask_5: 0.1709  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.5164  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.289  m2_loss_ce_7: 0.5014  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.5039  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.256  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9585    time: 1.4640  last_time: 1.4022  data_time: 0.0421  last_data_time: 0.0398   lr: 0.0001  max_mem: 35639M
[08/19 19:22:59] d2.utils.events INFO:  eta: 0:05:21  iter: 779  total_loss: 43.99  m1_loss_ce: 0.4887  m1_loss_mask: 0.1693  m1_loss_dice: 1.224  m1_loss_ce_0: 0.6165  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.7152  m1_loss_mask_1: 0.1791  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.5961  m1_loss_mask_2: 0.167  m1_loss_dice_2: 1.312  m1_loss_ce_3: 0.5666  m1_loss_mask_3: 0.1695  m1_loss_dice_3: 1.271  m1_loss_ce_4: 0.5531  m1_loss_mask_4: 0.1663  m1_loss_dice_4: 1.248  m1_loss_ce_5: 0.5405  m1_loss_mask_5: 0.1702  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.5038  m1_loss_mask_6: 0.1696  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.5149  m1_loss_mask_7: 0.1705  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.5188  m1_loss_mask_8: 0.169  m1_loss_dice_8: 1.226  m2_loss_ce: 0.5681  m2_loss_mask: 0.1736  m2_loss_dice: 1.276  m2_loss_ce_0: 0.6492  m2_loss_mask_0: 0.1973  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.7177  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.6537  m2_loss_mask_2: 0.1777  m2_loss_dice_2: 1.337  m2_loss_ce_3: 0.6019  m2_loss_mask_3: 0.1777  m2_loss_dice_3: 1.319  m2_loss_ce_4: 0.5824  m2_loss_mask_4: 0.1791  m2_loss_dice_4: 1.318  m2_loss_ce_5: 0.5633  m2_loss_mask_5: 0.1777  m2_loss_dice_5: 1.331  m2_loss_ce_6: 0.5592  m2_loss_mask_6: 0.1743  m2_loss_dice_6: 1.273  m2_loss_ce_7: 0.5476  m2_loss_mask_7: 0.1758  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.5625  m2_loss_mask_8: 0.1722  m2_loss_dice_8: 1.274  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.961    time: 1.4641  last_time: 1.3883  data_time: 0.0402  last_data_time: 0.0458   lr: 0.0001  max_mem: 35639M
[08/19 19:23:28] d2.utils.events INFO:  eta: 0:04:52  iter: 799  total_loss: 44.51  m1_loss_ce: 0.5303  m1_loss_mask: 0.1592  m1_loss_dice: 1.227  m1_loss_ce_0: 0.6432  m1_loss_mask_0: 0.1805  m1_loss_dice_0: 1.438  m1_loss_ce_1: 0.7064  m1_loss_mask_1: 0.1691  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.6651  m1_loss_mask_2: 0.1631  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5969  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.5491  m1_loss_mask_4: 0.1616  m1_loss_dice_4: 1.244  m1_loss_ce_5: 0.5682  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.5518  m1_loss_mask_6: 0.1588  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.5376  m1_loss_mask_7: 0.1581  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.5405  m1_loss_mask_8: 0.1577  m1_loss_dice_8: 1.214  m2_loss_ce: 0.5711  m2_loss_mask: 0.16  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6507  m2_loss_mask_0: 0.2  m2_loss_dice_0: 1.5  m2_loss_ce_1: 0.7237  m2_loss_mask_1: 0.1698  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.674  m2_loss_mask_2: 0.1603  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.6065  m2_loss_mask_3: 0.1591  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.5908  m2_loss_mask_4: 0.1584  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5645  m2_loss_mask_5: 0.1617  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.5632  m2_loss_mask_6: 0.1583  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5487  m2_loss_mask_7: 0.1586  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5684  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.229  com_loss_ce: 2.141  com_loss_mask: 0.6935  com_loss_dice: 0.9605    time: 1.4642  last_time: 1.4240  data_time: 0.0405  last_data_time: 0.0481   lr: 0.0001  max_mem: 35639M
[08/19 19:23:58] d2.utils.events INFO:  eta: 0:04:23  iter: 819  total_loss: 45.12  m1_loss_ce: 0.5013  m1_loss_mask: 0.1622  m1_loss_dice: 1.212  m1_loss_ce_0: 0.6707  m1_loss_mask_0: 0.1868  m1_loss_dice_0: 1.503  m1_loss_ce_1: 0.6443  m1_loss_mask_1: 0.1751  m1_loss_dice_1: 1.387  m1_loss_ce_2: 0.6459  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.363  m1_loss_ce_3: 0.5951  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.5583  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.26  m1_loss_ce_5: 0.5236  m1_loss_mask_5: 0.1604  m1_loss_dice_5: 1.269  m1_loss_ce_6: 0.5329  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.5064  m1_loss_mask_7: 0.1638  m1_loss_dice_7: 1.264  m1_loss_ce_8: 0.542  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.207  m2_loss_ce: 0.5428  m2_loss_mask: 0.1594  m2_loss_dice: 1.262  m2_loss_ce_0: 0.6328  m2_loss_mask_0: 0.1881  m2_loss_dice_0: 1.51  m2_loss_ce_1: 0.693  m2_loss_mask_1: 0.1749  m2_loss_dice_1: 1.456  m2_loss_ce_2: 0.6216  m2_loss_mask_2: 0.1675  m2_loss_dice_2: 1.375  m2_loss_ce_3: 0.5699  m2_loss_mask_3: 0.1673  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.5685  m2_loss_mask_4: 0.1694  m2_loss_dice_4: 1.312  m2_loss_ce_5: 0.5504  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.336  m2_loss_ce_6: 0.5535  m2_loss_mask_6: 0.1621  m2_loss_dice_6: 1.283  m2_loss_ce_7: 0.5458  m2_loss_mask_7: 0.1656  m2_loss_dice_7: 1.284  m2_loss_ce_8: 0.5376  m2_loss_mask_8: 0.1617  m2_loss_dice_8: 1.294  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.9595    time: 1.4644  last_time: 1.5079  data_time: 0.0427  last_data_time: 0.0416   lr: 0.0001  max_mem: 35639M
[08/19 19:24:27] d2.utils.events INFO:  eta: 0:03:54  iter: 839  total_loss: 43.59  m1_loss_ce: 0.4702  m1_loss_mask: 0.1627  m1_loss_dice: 1.196  m1_loss_ce_0: 0.6364  m1_loss_mask_0: 0.1869  m1_loss_dice_0: 1.42  m1_loss_ce_1: 0.6692  m1_loss_mask_1: 0.1768  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.5948  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.258  m1_loss_ce_3: 0.5689  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.5364  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.234  m1_loss_ce_5: 0.509  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.212  m1_loss_ce_6: 0.486  m1_loss_mask_6: 0.1664  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4986  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.271  m1_loss_ce_8: 0.4858  m1_loss_mask_8: 0.164  m1_loss_dice_8: 1.217  m2_loss_ce: 0.472  m2_loss_mask: 0.1682  m2_loss_dice: 1.249  m2_loss_ce_0: 0.5764  m2_loss_mask_0: 0.2009  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6171  m2_loss_mask_1: 0.1815  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6139  m2_loss_mask_2: 0.1746  m2_loss_dice_2: 1.31  m2_loss_ce_3: 0.5204  m2_loss_mask_3: 0.1757  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.5051  m2_loss_mask_4: 0.1797  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.5391  m2_loss_mask_5: 0.1724  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.517  m2_loss_mask_6: 0.1724  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.5128  m2_loss_mask_7: 0.1705  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4942  m2_loss_mask_8: 0.1711  m2_loss_dice_8: 1.203  com_loss_ce: 2.137  com_loss_mask: 0.6935  com_loss_dice: 0.9557    time: 1.4647  last_time: 1.4862  data_time: 0.0416  last_data_time: 0.0504   lr: 0.0001  max_mem: 35723M
[08/19 19:24:57] d2.utils.events INFO:  eta: 0:03:24  iter: 859  total_loss: 43.84  m1_loss_ce: 0.5396  m1_loss_mask: 0.1552  m1_loss_dice: 1.209  m1_loss_ce_0: 0.6379  m1_loss_mask_0: 0.1858  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6676  m1_loss_mask_1: 0.1725  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5943  m1_loss_mask_2: 0.166  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5488  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.266  m1_loss_ce_4: 0.5202  m1_loss_mask_4: 0.1606  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.5239  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4977  m1_loss_mask_6: 0.1575  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.4972  m1_loss_mask_7: 0.1569  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.4901  m1_loss_mask_8: 0.1572  m1_loss_dice_8: 1.209  m2_loss_ce: 0.5365  m2_loss_mask: 0.1631  m2_loss_dice: 1.288  m2_loss_ce_0: 0.622  m2_loss_mask_0: 0.1924  m2_loss_dice_0: 1.516  m2_loss_ce_1: 0.6817  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.6502  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.384  m2_loss_ce_3: 0.575  m2_loss_mask_3: 0.1666  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.554  m2_loss_mask_4: 0.1668  m2_loss_dice_4: 1.301  m2_loss_ce_5: 0.5483  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5509  m2_loss_mask_6: 0.165  m2_loss_dice_6: 1.285  m2_loss_ce_7: 0.5505  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.522  m2_loss_mask_8: 0.1623  m2_loss_dice_8: 1.281  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.9606    time: 1.4650  last_time: 1.4691  data_time: 0.0421  last_data_time: 0.0404   lr: 0.0001  max_mem: 35723M
[08/19 19:25:26] d2.utils.events INFO:  eta: 0:02:55  iter: 879  total_loss: 42.56  m1_loss_ce: 0.4987  m1_loss_mask: 0.166  m1_loss_dice: 1.152  m1_loss_ce_0: 0.6392  m1_loss_mask_0: 0.1989  m1_loss_dice_0: 1.341  m1_loss_ce_1: 0.6749  m1_loss_mask_1: 0.1762  m1_loss_dice_1: 1.265  m1_loss_ce_2: 0.6176  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.212  m1_loss_ce_3: 0.5548  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.155  m1_loss_ce_4: 0.5246  m1_loss_mask_4: 0.1671  m1_loss_dice_4: 1.146  m1_loss_ce_5: 0.517  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.141  m1_loss_ce_6: 0.4971  m1_loss_mask_6: 0.1663  m1_loss_dice_6: 1.152  m1_loss_ce_7: 0.5081  m1_loss_mask_7: 0.1631  m1_loss_dice_7: 1.15  m1_loss_ce_8: 0.5003  m1_loss_mask_8: 0.1633  m1_loss_dice_8: 1.139  m2_loss_ce: 0.5306  m2_loss_mask: 0.1708  m2_loss_dice: 1.175  m2_loss_ce_0: 0.638  m2_loss_mask_0: 0.2038  m2_loss_dice_0: 1.396  m2_loss_ce_1: 0.6854  m2_loss_mask_1: 0.1792  m2_loss_dice_1: 1.346  m2_loss_ce_2: 0.6276  m2_loss_mask_2: 0.1746  m2_loss_dice_2: 1.225  m2_loss_ce_3: 0.5765  m2_loss_mask_3: 0.1739  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.5608  m2_loss_mask_4: 0.1737  m2_loss_dice_4: 1.201  m2_loss_ce_5: 0.5424  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.5318  m2_loss_mask_6: 0.1685  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5227  m2_loss_mask_7: 0.1732  m2_loss_dice_7: 1.18  m2_loss_ce_8: 0.518  m2_loss_mask_8: 0.1708  m2_loss_dice_8: 1.184  com_loss_ce: 2.139  com_loss_mask: 0.6935  com_loss_dice: 0.9561    time: 1.4646  last_time: 1.3914  data_time: 0.0397  last_data_time: 0.0344   lr: 0.0001  max_mem: 35723M
[08/19 19:25:55] d2.utils.events INFO:  eta: 0:02:26  iter: 899  total_loss: 44.65  m1_loss_ce: 0.5097  m1_loss_mask: 0.164  m1_loss_dice: 1.222  m1_loss_ce_0: 0.6153  m1_loss_mask_0: 0.1911  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6516  m1_loss_mask_1: 0.1692  m1_loss_dice_1: 1.356  m1_loss_ce_2: 0.6041  m1_loss_mask_2: 0.1686  m1_loss_dice_2: 1.352  m1_loss_ce_3: 0.5568  m1_loss_mask_3: 0.1649  m1_loss_dice_3: 1.265  m1_loss_ce_4: 0.5371  m1_loss_mask_4: 0.1633  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.5633  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.5247  m1_loss_mask_6: 0.1639  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5196  m1_loss_mask_7: 0.1616  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.5237  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.227  m2_loss_ce: 0.534  m2_loss_mask: 0.1617  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6406  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.477  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.1745  m2_loss_dice_1: 1.409  m2_loss_ce_2: 0.639  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.5998  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.287  m2_loss_ce_4: 0.5778  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5348  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5374  m2_loss_mask_6: 0.1639  m2_loss_dice_6: 1.288  m2_loss_ce_7: 0.532  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.312  m2_loss_ce_8: 0.5309  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.241  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9581    time: 1.4641  last_time: 1.4274  data_time: 0.0401  last_data_time: 0.0395   lr: 0.0001  max_mem: 35723M
[08/19 19:26:25] d2.utils.events INFO:  eta: 0:01:56  iter: 919  total_loss: 43.87  m1_loss_ce: 0.5302  m1_loss_mask: 0.1519  m1_loss_dice: 1.174  m1_loss_ce_0: 0.6273  m1_loss_mask_0: 0.17  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6952  m1_loss_mask_1: 0.1624  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.6395  m1_loss_mask_2: 0.1555  m1_loss_dice_2: 1.222  m1_loss_ce_3: 0.5671  m1_loss_mask_3: 0.1554  m1_loss_dice_3: 1.19  m1_loss_ce_4: 0.5562  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.173  m1_loss_ce_5: 0.5549  m1_loss_mask_5: 0.154  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.5538  m1_loss_mask_6: 0.1522  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.5337  m1_loss_mask_7: 0.1493  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.5125  m1_loss_mask_8: 0.1519  m1_loss_dice_8: 1.171  m2_loss_ce: 0.5423  m2_loss_mask: 0.1573  m2_loss_dice: 1.184  m2_loss_ce_0: 0.659  m2_loss_mask_0: 0.1827  m2_loss_dice_0: 1.45  m2_loss_ce_1: 0.7004  m2_loss_mask_1: 0.1673  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.6621  m2_loss_mask_2: 0.1596  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5933  m2_loss_mask_3: 0.1582  m2_loss_dice_3: 1.239  m2_loss_ce_4: 0.5936  m2_loss_mask_4: 0.1592  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5864  m2_loss_mask_5: 0.1602  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.5538  m2_loss_mask_6: 0.1576  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.5537  m2_loss_mask_7: 0.157  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.5158  m2_loss_mask_8: 0.1578  m2_loss_dice_8: 1.209  com_loss_ce: 2.146  com_loss_mask: 0.6935  com_loss_dice: 0.9576    time: 1.4637  last_time: 1.4362  data_time: 0.0413  last_data_time: 0.0399   lr: 0.0001  max_mem: 35723M
[08/19 19:26:54] d2.utils.events INFO:  eta: 0:01:27  iter: 939  total_loss: 44.34  m1_loss_ce: 0.5517  m1_loss_mask: 0.1612  m1_loss_dice: 1.172  m1_loss_ce_0: 0.6667  m1_loss_mask_0: 0.1943  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.6994  m1_loss_mask_1: 0.1772  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.6549  m1_loss_mask_2: 0.1711  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.6219  m1_loss_mask_3: 0.1664  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.5845  m1_loss_mask_4: 0.1663  m1_loss_dice_4: 1.17  m1_loss_ce_5: 0.5725  m1_loss_mask_5: 0.1653  m1_loss_dice_5: 1.216  m1_loss_ce_6: 0.5776  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.5606  m1_loss_mask_7: 0.1607  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.5416  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.179  m2_loss_ce: 0.5463  m2_loss_mask: 0.1609  m2_loss_dice: 1.196  m2_loss_ce_0: 0.6736  m2_loss_mask_0: 0.2011  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.7349  m2_loss_mask_1: 0.1773  m2_loss_dice_1: 1.354  m2_loss_ce_2: 0.6687  m2_loss_mask_2: 0.1681  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.6196  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.251  m2_loss_ce_4: 0.6062  m2_loss_mask_4: 0.1672  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5703  m2_loss_mask_5: 0.1676  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.5879  m2_loss_mask_6: 0.1633  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.5507  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.5481  m2_loss_mask_8: 0.1639  m2_loss_dice_8: 1.199  com_loss_ce: 2.144  com_loss_mask: 0.6935  com_loss_dice: 0.958    time: 1.4635  last_time: 1.3779  data_time: 0.0423  last_data_time: 0.0392   lr: 0.0001  max_mem: 35723M
[08/19 19:27:23] d2.utils.events INFO:  eta: 0:00:58  iter: 959  total_loss: 42.95  m1_loss_ce: 0.5169  m1_loss_mask: 0.1575  m1_loss_dice: 1.115  m1_loss_ce_0: 0.6615  m1_loss_mask_0: 0.1796  m1_loss_dice_0: 1.341  m1_loss_ce_1: 0.6698  m1_loss_mask_1: 0.1646  m1_loss_dice_1: 1.26  m1_loss_ce_2: 0.6165  m1_loss_mask_2: 0.1575  m1_loss_dice_2: 1.187  m1_loss_ce_3: 0.5661  m1_loss_mask_3: 0.1563  m1_loss_dice_3: 1.147  m1_loss_ce_4: 0.5536  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.163  m1_loss_ce_5: 0.528  m1_loss_mask_5: 0.1585  m1_loss_dice_5: 1.161  m1_loss_ce_6: 0.5455  m1_loss_mask_6: 0.1561  m1_loss_dice_6: 1.13  m1_loss_ce_7: 0.5403  m1_loss_mask_7: 0.1568  m1_loss_dice_7: 1.147  m1_loss_ce_8: 0.5222  m1_loss_mask_8: 0.1545  m1_loss_dice_8: 1.142  m2_loss_ce: 0.5319  m2_loss_mask: 0.1628  m2_loss_dice: 1.162  m2_loss_ce_0: 0.638  m2_loss_mask_0: 0.193  m2_loss_dice_0: 1.423  m2_loss_ce_1: 0.7072  m2_loss_mask_1: 0.1722  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.6306  m2_loss_mask_2: 0.1645  m2_loss_dice_2: 1.246  m2_loss_ce_3: 0.5996  m2_loss_mask_3: 0.1644  m2_loss_dice_3: 1.229  m2_loss_ce_4: 0.5887  m2_loss_mask_4: 0.1608  m2_loss_dice_4: 1.192  m2_loss_ce_5: 0.572  m2_loss_mask_5: 0.1613  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.5595  m2_loss_mask_6: 0.16  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.5215  m2_loss_mask_7: 0.1605  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.5263  m2_loss_mask_8: 0.1586  m2_loss_dice_8: 1.138  com_loss_ce: 2.142  com_loss_mask: 0.6935  com_loss_dice: 0.9588    time: 1.4635  last_time: 1.4492  data_time: 0.0403  last_data_time: 0.0371   lr: 0.0001  max_mem: 35723M
[08/19 19:27:53] d2.utils.events INFO:  eta: 0:00:29  iter: 979  total_loss: 42.26  m1_loss_ce: 0.4837  m1_loss_mask: 0.1622  m1_loss_dice: 1.162  m1_loss_ce_0: 0.6168  m1_loss_mask_0: 0.1958  m1_loss_dice_0: 1.349  m1_loss_ce_1: 0.6702  m1_loss_mask_1: 0.1781  m1_loss_dice_1: 1.279  m1_loss_ce_2: 0.5888  m1_loss_mask_2: 0.1724  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.5294  m1_loss_mask_3: 0.1677  m1_loss_dice_3: 1.169  m1_loss_ce_4: 0.5435  m1_loss_mask_4: 0.1647  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.5255  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.5194  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.2  m1_loss_ce_7: 0.4814  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.172  m1_loss_ce_8: 0.5062  m1_loss_mask_8: 0.1619  m1_loss_dice_8: 1.16  m2_loss_ce: 0.5246  m2_loss_mask: 0.1646  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.471  m2_loss_ce_1: 0.6572  m2_loss_mask_1: 0.1745  m2_loss_dice_1: 1.364  m2_loss_ce_2: 0.6411  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.5582  m2_loss_mask_3: 0.1669  m2_loss_dice_3: 1.216  m2_loss_ce_4: 0.573  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5254  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.5517  m2_loss_mask_6: 0.1664  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.5423  m2_loss_mask_7: 0.1671  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.5371  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.223  com_loss_ce: 2.14  com_loss_mask: 0.6935  com_loss_dice: 0.9603    time: 1.4634  last_time: 1.4048  data_time: 0.0442  last_data_time: 0.0425   lr: 0.0001  max_mem: 35723M
[08/19 19:28:22] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/6_9_i_n_008_1000_2_softmax_sum_top_10_0_7/model_final.pth
[08/19 19:28:25] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 43.76  m1_loss_ce: 0.5203  m1_loss_mask: 0.1589  m1_loss_dice: 1.159  m1_loss_ce_0: 0.6489  m1_loss_mask_0: 0.1864  m1_loss_dice_0: 1.338  m1_loss_ce_1: 0.6645  m1_loss_mask_1: 0.1706  m1_loss_dice_1: 1.285  m1_loss_ce_2: 0.6306  m1_loss_mask_2: 0.1604  m1_loss_dice_2: 1.237  m1_loss_ce_3: 0.5732  m1_loss_mask_3: 0.1609  m1_loss_dice_3: 1.175  m1_loss_ce_4: 0.5328  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.2  m1_loss_ce_5: 0.5505  m1_loss_mask_5: 0.1572  m1_loss_dice_5: 1.151  m1_loss_ce_6: 0.5216  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.172  m1_loss_ce_7: 0.5203  m1_loss_mask_7: 0.158  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.5103  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.171  m2_loss_ce: 0.5452  m2_loss_mask: 0.1684  m2_loss_dice: 1.169  m2_loss_ce_0: 0.6475  m2_loss_mask_0: 0.1956  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.7203  m2_loss_mask_1: 0.1746  m2_loss_dice_1: 1.351  m2_loss_ce_2: 0.6668  m2_loss_mask_2: 0.168  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.5959  m2_loss_mask_3: 0.1717  m2_loss_dice_3: 1.245  m2_loss_ce_4: 0.5646  m2_loss_mask_4: 0.1699  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.5775  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.5945  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.218  m2_loss_ce_7: 0.5358  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.5581  m2_loss_mask_8: 0.1672  m2_loss_dice_8: 1.185  com_loss_ce: 2.143  com_loss_mask: 0.6935  com_loss_dice: 0.959    time: 1.4631  last_time: 1.3712  data_time: 0.0422  last_data_time: 0.0433   lr: 0.0001  max_mem: 35723M
[08/19 19:28:26] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:24:20 (1.4631 s / it)
[08/19 19:28:26] d2.engine.hooks INFO: Total training time: 0:24:33 (0:00:13 on hooks)
[08/19 19:28:26] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/19 19:28:26] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/19 19:28:26] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/19 19:28:26] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/19 19:28:26] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/19 19:29:54] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval464rq6yg ...
[08/19 19:30:12] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.944 | 80.610 | 69.444 |      19       |
| Things | 47.418 | 79.769 | 59.229 |       8       |
| Stuff  | 63.872 | 81.222 | 76.872 |      11       |
[08/19 19:30:12] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.015 | 97.622 | 99.378 |     Stuff     |
| class_8  | 74.004 | 84.483 | 87.596 |     Stuff     |
| class_11 | 87.452 | 89.182 | 98.059 |     Stuff     |
| class_12 | 37.361 | 80.058 | 46.667 |     Stuff     |
| class_13 | 37.636 | 76.179 | 49.405 |     Stuff     |
| class_17 | 42.775 | 63.835 | 67.008 |     Stuff     |
| class_19 | 48.678 | 68.879 | 70.671 |     Stuff     |
| class_20 | 66.221 | 77.066 | 85.928 |     Stuff     |
| class_21 | 88.960 | 90.162 | 98.667 |     Stuff     |
| class_22 | 34.087 | 74.067 | 46.022 |     Stuff     |
| class_23 | 88.404 | 91.902 | 96.194 |     Stuff     |
| class_24 | 52.021 | 77.135 | 67.442 |    Things     |
| class_25 | 45.823 | 74.015 | 61.910 |    Things     |
| class_26 | 66.176 | 83.392 | 79.356 |    Things     |
| class_27 | 50.444 | 88.020 | 57.310 |    Things     |
| class_28 | 59.714 | 90.094 | 66.279 |    Things     |
| class_31 | 22.651 | 79.277 | 28.571 |    Things     |
| class_32 | 40.290 | 74.590 | 54.015 |    Things     |
| class_33 | 42.224 | 71.626 | 58.951 |    Things     |
[08/19 19:30:12] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/19 19:30:12] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/19 19:30:12] d2.evaluation.testing INFO: copypaste: 56.9439,80.6098,69.4436,47.4179,79.7686,59.2293,63.8720,81.2216,76.8721,97.0148,97.6224,99.3776,74.0037,84.4829,87.5960,87.4515,89.1823,98.0592,37.3606,80.0584,46.6667,37.6361,76.1791,49.4048,42.7745,63.8348,67.0082,48.6780,68.8793,70.6714,66.2212,77.0663,85.9275,88.9603,90.1624,98.6667,34.0869,74.0673,46.0215,88.4043,91.9023,96.1938,52.0214,77.1348,67.4422,45.8229,74.0150,61.9102,66.1765,83.3922,79.3557,50.4440,88.0197,57.3099,59.7135,90.0941,66.2791,22.6507,79.2775,28.5714,40.2896,74.5902,54.0146,42.2242,71.6256,58.9513
