[10/03 09:41:43] detectron2 INFO: Rank of current process: 0. World size: 2
[10/03 09:41:44] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/03 09:41:44] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_4_0_6_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/03 09:41:44] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_4_0_6_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/03 09:41:44] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/03 09:41:44] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6/config.yaml
[10/03 09:41:44] d2.utils.env INFO: Using a generated random seed 46483452
[10/03 09:41:48] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/03 09:41:48] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/03 09:41:48] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/03 09:41:49] d2.data.build INFO: Using training sampler TrainingSampler
[10/03 09:41:49] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/03 09:41:49] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/03 09:41:49] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/03 09:41:49] d2.data.build INFO: Making batched data loader with batch_size=4
[10/03 09:41:49] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/03 09:41:52] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/03 09:41:52] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 09:41:52] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 09:42:01] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 09:42:01] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/03 09:42:36] d2.utils.events INFO:  eta: 0:22:29  iter: 19  total_loss: 39.95  m1_loss_ce: 0.4741  m1_loss_mask: 0.1685  m1_loss_dice: 1.271  m1_loss_ce_0: 0.5778  m1_loss_mask_0: 0.1956  m1_loss_dice_0: 1.475  m1_loss_ce_1: 0.6341  m1_loss_mask_1: 0.1859  m1_loss_dice_1: 1.408  m1_loss_ce_2: 0.5937  m1_loss_mask_2: 0.1734  m1_loss_dice_2: 1.354  m1_loss_ce_3: 0.4801  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.276  m1_loss_ce_4: 0.515  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.287  m1_loss_ce_5: 0.5378  m1_loss_mask_5: 0.1692  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.4677  m1_loss_mask_6: 0.1679  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.4801  m1_loss_mask_7: 0.168  m1_loss_dice_7: 1.257  m1_loss_ce_8: 0.4916  m1_loss_mask_8: 0.1681  m1_loss_dice_8: 1.268  m2_loss_ce: 0.4683  m2_loss_mask: 0.1544  m2_loss_dice: 1.247  m2_loss_ce_0: 0.6063  m2_loss_mask_0: 0.1904  m2_loss_dice_0: 1.469  m2_loss_ce_1: 0.6603  m2_loss_mask_1: 0.175  m2_loss_dice_1: 1.404  m2_loss_ce_2: 0.5604  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5134  m2_loss_mask_3: 0.1589  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5259  m2_loss_mask_4: 0.1569  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.4893  m2_loss_mask_5: 0.1563  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4857  m2_loss_mask_6: 0.1578  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.5013  m2_loss_mask_7: 0.1553  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.4698  m2_loss_mask_8: 0.1543  m2_loss_dice_8: 1.264    time: 1.3730  last_time: 1.2833  data_time: 0.2538  last_data_time: 0.0332   lr: 0.0001  max_mem: 33795M
[10/03 09:43:03] d2.utils.events INFO:  eta: 0:21:53  iter: 39  total_loss: 40.11  m1_loss_ce: 0.461  m1_loss_mask: 0.1662  m1_loss_dice: 1.231  m1_loss_ce_0: 0.5644  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6462  m1_loss_mask_1: 0.1896  m1_loss_dice_1: 1.293  m1_loss_ce_2: 0.5962  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.5286  m1_loss_mask_3: 0.1724  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.5207  m1_loss_mask_4: 0.1698  m1_loss_dice_4: 1.204  m1_loss_ce_5: 0.5023  m1_loss_mask_5: 0.1694  m1_loss_dice_5: 1.199  m1_loss_ce_6: 0.4708  m1_loss_mask_6: 0.1681  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.4903  m1_loss_mask_7: 0.1668  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4877  m1_loss_mask_8: 0.169  m1_loss_dice_8: 1.194  m2_loss_ce: 0.5087  m2_loss_mask: 0.1648  m2_loss_dice: 1.191  m2_loss_ce_0: 0.6187  m2_loss_mask_0: 0.1937  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6551  m2_loss_mask_1: 0.1828  m2_loss_dice_1: 1.328  m2_loss_ce_2: 0.5905  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5237  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.218  m2_loss_ce_4: 0.5209  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.5154  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.212  m2_loss_ce_6: 0.4936  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.206  m2_loss_ce_7: 0.5045  m2_loss_mask_7: 0.1686  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.4855  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.156    time: 1.3691  last_time: 1.2574  data_time: 0.0434  last_data_time: 0.0432   lr: 0.0001  max_mem: 33824M
[10/03 09:43:31] d2.utils.events INFO:  eta: 0:21:23  iter: 59  total_loss: 40.78  m1_loss_ce: 0.4482  m1_loss_mask: 0.1634  m1_loss_dice: 1.247  m1_loss_ce_0: 0.5493  m1_loss_mask_0: 0.1958  m1_loss_dice_0: 1.592  m1_loss_ce_1: 0.6436  m1_loss_mask_1: 0.1841  m1_loss_dice_1: 1.377  m1_loss_ce_2: 0.5419  m1_loss_mask_2: 0.1726  m1_loss_dice_2: 1.338  m1_loss_ce_3: 0.5047  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.4931  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.272  m1_loss_ce_5: 0.4912  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.289  m1_loss_ce_6: 0.4467  m1_loss_mask_6: 0.1664  m1_loss_dice_6: 1.258  m1_loss_ce_7: 0.4492  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.267  m1_loss_ce_8: 0.4339  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.28  m2_loss_ce: 0.4363  m2_loss_mask: 0.1612  m2_loss_dice: 1.314  m2_loss_ce_0: 0.6027  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.6396  m2_loss_mask_1: 0.185  m2_loss_dice_1: 1.457  m2_loss_ce_2: 0.5661  m2_loss_mask_2: 0.1687  m2_loss_dice_2: 1.36  m2_loss_ce_3: 0.5015  m2_loss_mask_3: 0.1656  m2_loss_dice_3: 1.344  m2_loss_ce_4: 0.4947  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.307  m2_loss_ce_5: 0.507  m2_loss_mask_5: 0.162  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.483  m2_loss_mask_6: 0.1629  m2_loss_dice_6: 1.272  m2_loss_ce_7: 0.4645  m2_loss_mask_7: 0.1612  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.4663  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.247    time: 1.3647  last_time: 1.3143  data_time: 0.0550  last_data_time: 0.0376   lr: 0.0001  max_mem: 33824M
[10/03 09:43:58] d2.utils.events INFO:  eta: 0:20:56  iter: 79  total_loss: 41.16  m1_loss_ce: 0.456  m1_loss_mask: 0.163  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5419  m1_loss_mask_0: 0.1861  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6433  m1_loss_mask_1: 0.1723  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5902  m1_loss_mask_2: 0.1646  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5267  m1_loss_mask_3: 0.1628  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.501  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.4907  m1_loss_mask_5: 0.1638  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4919  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4887  m1_loss_mask_7: 0.1631  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.454  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4901  m2_loss_mask: 0.1572  m2_loss_dice: 1.268  m2_loss_ce_0: 0.5925  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.6306  m2_loss_mask_1: 0.1703  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.5627  m2_loss_mask_2: 0.1594  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.4929  m2_loss_mask_3: 0.1636  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5189  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5002  m2_loss_mask_5: 0.1616  m2_loss_dice_5: 1.258  m2_loss_ce_6: 0.4988  m2_loss_mask_6: 0.1584  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4757  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.4701  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.239    time: 1.3697  last_time: 1.4100  data_time: 0.0482  last_data_time: 0.0612   lr: 0.0001  max_mem: 33863M
[10/03 09:44:26] d2.utils.events INFO:  eta: 0:20:29  iter: 99  total_loss: 37.98  m1_loss_ce: 0.4276  m1_loss_mask: 0.1832  m1_loss_dice: 1.227  m1_loss_ce_0: 0.5405  m1_loss_mask_0: 0.2105  m1_loss_dice_0: 1.416  m1_loss_ce_1: 0.6009  m1_loss_mask_1: 0.195  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.5702  m1_loss_mask_2: 0.1869  m1_loss_dice_2: 1.307  m1_loss_ce_3: 0.5012  m1_loss_mask_3: 0.186  m1_loss_dice_3: 1.274  m1_loss_ce_4: 0.4904  m1_loss_mask_4: 0.1872  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.4938  m1_loss_mask_5: 0.185  m1_loss_dice_5: 1.268  m1_loss_ce_6: 0.4523  m1_loss_mask_6: 0.1846  m1_loss_dice_6: 1.188  m1_loss_ce_7: 0.461  m1_loss_mask_7: 0.1825  m1_loss_dice_7: 1.234  m1_loss_ce_8: 0.4566  m1_loss_mask_8: 0.1823  m1_loss_dice_8: 1.243  m2_loss_ce: 0.4802  m2_loss_mask: 0.1824  m2_loss_dice: 1.237  m2_loss_ce_0: 0.5833  m2_loss_mask_0: 0.2092  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6553  m2_loss_mask_1: 0.2022  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.5833  m2_loss_mask_2: 0.186  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5387  m2_loss_mask_3: 0.1829  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.5046  m2_loss_mask_4: 0.1839  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.4725  m2_loss_mask_5: 0.1814  m2_loss_dice_5: 1.243  m2_loss_ce_6: 0.5035  m2_loss_mask_6: 0.1836  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4955  m2_loss_mask_7: 0.185  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4774  m2_loss_mask_8: 0.1831  m2_loss_dice_8: 1.215    time: 1.3705  last_time: 1.3455  data_time: 0.0488  last_data_time: 0.0393   lr: 0.0001  max_mem: 34202M
[10/03 09:44:53] d2.utils.events INFO:  eta: 0:20:00  iter: 119  total_loss: 40.87  m1_loss_ce: 0.478  m1_loss_mask: 0.1713  m1_loss_dice: 1.233  m1_loss_ce_0: 0.6102  m1_loss_mask_0: 0.2059  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6562  m1_loss_mask_1: 0.1879  m1_loss_dice_1: 1.374  m1_loss_ce_2: 0.5834  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.328  m1_loss_ce_3: 0.5222  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.506  m1_loss_mask_4: 0.1718  m1_loss_dice_4: 1.275  m1_loss_ce_5: 0.5338  m1_loss_mask_5: 0.1711  m1_loss_dice_5: 1.287  m1_loss_ce_6: 0.506  m1_loss_mask_6: 0.1717  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.525  m1_loss_mask_7: 0.1739  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.5024  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.274  m2_loss_ce: 0.4953  m2_loss_mask: 0.1744  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6227  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.496  m2_loss_ce_1: 0.6459  m2_loss_mask_1: 0.1824  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.608  m2_loss_mask_2: 0.1751  m2_loss_dice_2: 1.357  m2_loss_ce_3: 0.5634  m2_loss_mask_3: 0.172  m2_loss_dice_3: 1.312  m2_loss_ce_4: 0.5463  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5311  m2_loss_mask_5: 0.1682  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.5152  m2_loss_mask_6: 0.1715  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.5199  m2_loss_mask_7: 0.1719  m2_loss_dice_7: 1.289  m2_loss_ce_8: 0.5168  m2_loss_mask_8: 0.1737  m2_loss_dice_8: 1.267    time: 1.3685  last_time: 1.3893  data_time: 0.0455  last_data_time: 0.0407   lr: 0.0001  max_mem: 34202M
[10/03 09:45:21] d2.utils.events INFO:  eta: 0:19:35  iter: 139  total_loss: 40.11  m1_loss_ce: 0.4721  m1_loss_mask: 0.1698  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5989  m1_loss_mask_0: 0.2159  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6689  m1_loss_mask_1: 0.1901  m1_loss_dice_1: 1.392  m1_loss_ce_2: 0.5868  m1_loss_mask_2: 0.1735  m1_loss_dice_2: 1.311  m1_loss_ce_3: 0.5319  m1_loss_mask_3: 0.1749  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.5356  m1_loss_mask_4: 0.1731  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.5059  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.233  m1_loss_ce_6: 0.5056  m1_loss_mask_6: 0.1725  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.4689  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4573  m1_loss_mask_8: 0.1704  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4349  m2_loss_mask: 0.1666  m2_loss_dice: 1.24  m2_loss_ce_0: 0.5793  m2_loss_mask_0: 0.2043  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6419  m2_loss_mask_1: 0.1809  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.5666  m2_loss_mask_2: 0.1718  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.5027  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.234  m2_loss_ce_4: 0.5259  m2_loss_mask_4: 0.17  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.4775  m2_loss_mask_5: 0.1679  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4669  m2_loss_mask_6: 0.167  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.4927  m2_loss_mask_7: 0.1675  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.4636  m2_loss_mask_8: 0.1644  m2_loss_dice_8: 1.239    time: 1.3704  last_time: 1.3695  data_time: 0.0479  last_data_time: 0.0479   lr: 0.0001  max_mem: 34202M
[10/03 09:45:49] d2.utils.events INFO:  eta: 0:19:06  iter: 159  total_loss: 41.44  m1_loss_ce: 0.4709  m1_loss_mask: 0.1696  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5525  m1_loss_mask_0: 0.2002  m1_loss_dice_0: 1.525  m1_loss_ce_1: 0.6589  m1_loss_mask_1: 0.1833  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.5978  m1_loss_mask_2: 0.1688  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5452  m1_loss_mask_3: 0.1719  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.5112  m1_loss_mask_4: 0.1696  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.505  m1_loss_mask_5: 0.1692  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4976  m1_loss_mask_6: 0.1685  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4972  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.4882  m1_loss_mask_8: 0.1679  m1_loss_dice_8: 1.26  m2_loss_ce: 0.4865  m2_loss_mask: 0.1653  m2_loss_dice: 1.262  m2_loss_ce_0: 0.6007  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6839  m2_loss_mask_1: 0.1758  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6122  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.5416  m2_loss_mask_3: 0.163  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5322  m2_loss_mask_4: 0.1619  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.5235  m2_loss_mask_5: 0.1624  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.4975  m2_loss_mask_6: 0.1671  m2_loss_dice_6: 1.239  m2_loss_ce_7: 0.4786  m2_loss_mask_7: 0.1649  m2_loss_dice_7: 1.256  m2_loss_ce_8: 0.4814  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.248    time: 1.3704  last_time: 1.3120  data_time: 0.0458  last_data_time: 0.0357   lr: 0.0001  max_mem: 34202M
[10/03 09:46:16] d2.utils.events INFO:  eta: 0:18:41  iter: 179  total_loss: 39.99  m1_loss_ce: 0.46  m1_loss_mask: 0.1642  m1_loss_dice: 1.23  m1_loss_ce_0: 0.5399  m1_loss_mask_0: 0.1932  m1_loss_dice_0: 1.404  m1_loss_ce_1: 0.6181  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.5824  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.314  m1_loss_ce_3: 0.515  m1_loss_mask_3: 0.1686  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.4966  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.5212  m1_loss_mask_5: 0.1646  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4962  m1_loss_mask_6: 0.1634  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.4942  m1_loss_mask_7: 0.1632  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.51  m1_loss_mask_8: 0.1646  m1_loss_dice_8: 1.223  m2_loss_ce: 0.497  m2_loss_mask: 0.1629  m2_loss_dice: 1.245  m2_loss_ce_0: 0.5831  m2_loss_mask_0: 0.1921  m2_loss_dice_0: 1.423  m2_loss_ce_1: 0.671  m2_loss_mask_1: 0.1773  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.5862  m2_loss_mask_2: 0.1664  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.531  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5121  m2_loss_mask_4: 0.1631  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.5091  m2_loss_mask_5: 0.1626  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4847  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.268  m2_loss_ce_7: 0.4723  m2_loss_mask_7: 0.1646  m2_loss_dice_7: 1.264  m2_loss_ce_8: 0.4858  m2_loss_mask_8: 0.1626  m2_loss_dice_8: 1.263    time: 1.3726  last_time: 1.4018  data_time: 0.0497  last_data_time: 0.0463   lr: 0.0001  max_mem: 34202M
[10/03 09:46:44] d2.utils.events INFO:  eta: 0:18:14  iter: 199  total_loss: 42.35  m1_loss_ce: 0.5049  m1_loss_mask: 0.1737  m1_loss_dice: 1.281  m1_loss_ce_0: 0.5842  m1_loss_mask_0: 0.19  m1_loss_dice_0: 1.506  m1_loss_ce_1: 0.664  m1_loss_mask_1: 0.1853  m1_loss_dice_1: 1.406  m1_loss_ce_2: 0.6208  m1_loss_mask_2: 0.1751  m1_loss_dice_2: 1.354  m1_loss_ce_3: 0.5593  m1_loss_mask_3: 0.1755  m1_loss_dice_3: 1.303  m1_loss_ce_4: 0.5275  m1_loss_mask_4: 0.1751  m1_loss_dice_4: 1.302  m1_loss_ce_5: 0.5469  m1_loss_mask_5: 0.1734  m1_loss_dice_5: 1.301  m1_loss_ce_6: 0.5245  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.263  m1_loss_ce_7: 0.5146  m1_loss_mask_7: 0.1733  m1_loss_dice_7: 1.279  m1_loss_ce_8: 0.4832  m1_loss_mask_8: 0.1717  m1_loss_dice_8: 1.279  m2_loss_ce: 0.5098  m2_loss_mask: 0.1685  m2_loss_dice: 1.333  m2_loss_ce_0: 0.6155  m2_loss_mask_0: 0.2013  m2_loss_dice_0: 1.539  m2_loss_ce_1: 0.7111  m2_loss_mask_1: 0.1945  m2_loss_dice_1: 1.465  m2_loss_ce_2: 0.5934  m2_loss_mask_2: 0.1736  m2_loss_dice_2: 1.381  m2_loss_ce_3: 0.5618  m2_loss_mask_3: 0.1727  m2_loss_dice_3: 1.326  m2_loss_ce_4: 0.5449  m2_loss_mask_4: 0.1704  m2_loss_dice_4: 1.321  m2_loss_ce_5: 0.5484  m2_loss_mask_5: 0.1691  m2_loss_dice_5: 1.323  m2_loss_ce_6: 0.4845  m2_loss_mask_6: 0.1703  m2_loss_dice_6: 1.304  m2_loss_ce_7: 0.5014  m2_loss_mask_7: 0.1687  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.5165  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.292    time: 1.3733  last_time: 1.4032  data_time: 0.0491  last_data_time: 0.0515   lr: 0.0001  max_mem: 34202M
[10/03 09:47:12] d2.utils.events INFO:  eta: 0:17:47  iter: 219  total_loss: 41.59  m1_loss_ce: 0.4616  m1_loss_mask: 0.1543  m1_loss_dice: 1.277  m1_loss_ce_0: 0.5932  m1_loss_mask_0: 0.1768  m1_loss_dice_0: 1.553  m1_loss_ce_1: 0.6956  m1_loss_mask_1: 0.1654  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.5977  m1_loss_mask_2: 0.1597  m1_loss_dice_2: 1.349  m1_loss_ce_3: 0.5499  m1_loss_mask_3: 0.1558  m1_loss_dice_3: 1.292  m1_loss_ce_4: 0.5338  m1_loss_mask_4: 0.1562  m1_loss_dice_4: 1.321  m1_loss_ce_5: 0.5012  m1_loss_mask_5: 0.1583  m1_loss_dice_5: 1.327  m1_loss_ce_6: 0.4674  m1_loss_mask_6: 0.1563  m1_loss_dice_6: 1.289  m1_loss_ce_7: 0.4806  m1_loss_mask_7: 0.1542  m1_loss_dice_7: 1.292  m1_loss_ce_8: 0.465  m1_loss_mask_8: 0.1547  m1_loss_dice_8: 1.249  m2_loss_ce: 0.5026  m2_loss_mask: 0.1564  m2_loss_dice: 1.288  m2_loss_ce_0: 0.628  m2_loss_mask_0: 0.1811  m2_loss_dice_0: 1.519  m2_loss_ce_1: 0.7007  m2_loss_mask_1: 0.1753  m2_loss_dice_1: 1.447  m2_loss_ce_2: 0.6106  m2_loss_mask_2: 0.1591  m2_loss_dice_2: 1.399  m2_loss_ce_3: 0.5433  m2_loss_mask_3: 0.1601  m2_loss_dice_3: 1.316  m2_loss_ce_4: 0.5614  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5166  m2_loss_mask_5: 0.1577  m2_loss_dice_5: 1.321  m2_loss_ce_6: 0.5256  m2_loss_mask_6: 0.1585  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.5107  m2_loss_mask_7: 0.1595  m2_loss_dice_7: 1.301  m2_loss_ce_8: 0.5041  m2_loss_mask_8: 0.155  m2_loss_dice_8: 1.299    time: 1.3745  last_time: 1.3806  data_time: 0.0506  last_data_time: 0.0450   lr: 0.0001  max_mem: 34714M
[10/03 09:47:40] d2.utils.events INFO:  eta: 0:17:20  iter: 239  total_loss: 39.22  m1_loss_ce: 0.4458  m1_loss_mask: 0.1765  m1_loss_dice: 1.203  m1_loss_ce_0: 0.552  m1_loss_mask_0: 0.2049  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.6078  m1_loss_mask_1: 0.1894  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.5844  m1_loss_mask_2: 0.1851  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5108  m1_loss_mask_3: 0.1811  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4958  m1_loss_mask_4: 0.1806  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.4637  m1_loss_mask_5: 0.1791  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.4361  m1_loss_mask_6: 0.18  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.4707  m1_loss_mask_7: 0.1792  m1_loss_dice_7: 1.23  m1_loss_ce_8: 0.4365  m1_loss_mask_8: 0.1793  m1_loss_dice_8: 1.211  m2_loss_ce: 0.4611  m2_loss_mask: 0.1738  m2_loss_dice: 1.236  m2_loss_ce_0: 0.6332  m2_loss_mask_0: 0.2114  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.6292  m2_loss_mask_1: 0.1936  m2_loss_dice_1: 1.382  m2_loss_ce_2: 0.5633  m2_loss_mask_2: 0.1749  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.5137  m2_loss_mask_3: 0.1742  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.4764  m2_loss_mask_4: 0.1727  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.4713  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.4711  m2_loss_mask_6: 0.1749  m2_loss_dice_6: 1.225  m2_loss_ce_7: 0.4711  m2_loss_mask_7: 0.1763  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4508  m2_loss_mask_8: 0.1757  m2_loss_dice_8: 1.257    time: 1.3755  last_time: 1.3244  data_time: 0.0533  last_data_time: 0.0516   lr: 0.0001  max_mem: 34714M
[10/03 09:48:07] d2.utils.events INFO:  eta: 0:16:52  iter: 259  total_loss: 41.61  m1_loss_ce: 0.4741  m1_loss_mask: 0.1653  m1_loss_dice: 1.303  m1_loss_ce_0: 0.5656  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.536  m1_loss_ce_1: 0.6348  m1_loss_mask_1: 0.1824  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.5887  m1_loss_mask_2: 0.1713  m1_loss_dice_2: 1.367  m1_loss_ce_3: 0.5408  m1_loss_mask_3: 0.1697  m1_loss_dice_3: 1.315  m1_loss_ce_4: 0.525  m1_loss_mask_4: 0.17  m1_loss_dice_4: 1.305  m1_loss_ce_5: 0.5208  m1_loss_mask_5: 0.17  m1_loss_dice_5: 1.278  m1_loss_ce_6: 0.46  m1_loss_mask_6: 0.1687  m1_loss_dice_6: 1.281  m1_loss_ce_7: 0.4813  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.286  m1_loss_ce_8: 0.4931  m1_loss_mask_8: 0.1673  m1_loss_dice_8: 1.277  m2_loss_ce: 0.5071  m2_loss_mask: 0.1631  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6087  m2_loss_mask_0: 0.1933  m2_loss_dice_0: 1.513  m2_loss_ce_1: 0.7184  m2_loss_mask_1: 0.179  m2_loss_dice_1: 1.431  m2_loss_ce_2: 0.5979  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.5666  m2_loss_mask_3: 0.1642  m2_loss_dice_3: 1.328  m2_loss_ce_4: 0.5565  m2_loss_mask_4: 0.1634  m2_loss_dice_4: 1.307  m2_loss_ce_5: 0.5261  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.328  m2_loss_ce_6: 0.535  m2_loss_mask_6: 0.1629  m2_loss_dice_6: 1.282  m2_loss_ce_7: 0.5334  m2_loss_mask_7: 0.1628  m2_loss_dice_7: 1.295  m2_loss_ce_8: 0.514  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.264    time: 1.3752  last_time: 1.3497  data_time: 0.0522  last_data_time: 0.0629   lr: 0.0001  max_mem: 34714M
[10/03 09:48:35] d2.utils.events INFO:  eta: 0:16:24  iter: 279  total_loss: 39.45  m1_loss_ce: 0.4573  m1_loss_mask: 0.1675  m1_loss_dice: 1.221  m1_loss_ce_0: 0.6126  m1_loss_mask_0: 0.1888  m1_loss_dice_0: 1.458  m1_loss_ce_1: 0.6509  m1_loss_mask_1: 0.1759  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.5792  m1_loss_mask_2: 0.1673  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.5483  m1_loss_mask_3: 0.167  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.5088  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4911  m1_loss_mask_5: 0.1677  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.465  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.208  m1_loss_ce_7: 0.4773  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4509  m1_loss_mask_8: 0.166  m1_loss_dice_8: 1.211  m2_loss_ce: 0.4697  m2_loss_mask: 0.1663  m2_loss_dice: 1.229  m2_loss_ce_0: 0.5948  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.411  m2_loss_ce_1: 0.7135  m2_loss_mask_1: 0.1837  m2_loss_dice_1: 1.337  m2_loss_ce_2: 0.6198  m2_loss_mask_2: 0.1686  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.5486  m2_loss_mask_3: 0.1675  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5384  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.486  m2_loss_mask_5: 0.1648  m2_loss_dice_5: 1.238  m2_loss_ce_6: 0.4617  m2_loss_mask_6: 0.1657  m2_loss_dice_6: 1.229  m2_loss_ce_7: 0.4551  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.5036  m2_loss_mask_8: 0.1662  m2_loss_dice_8: 1.229    time: 1.3739  last_time: 1.3588  data_time: 0.0488  last_data_time: 0.0508   lr: 0.0001  max_mem: 34714M
[10/03 09:49:02] d2.utils.events INFO:  eta: 0:15:56  iter: 299  total_loss: 38.62  m1_loss_ce: 0.449  m1_loss_mask: 0.1795  m1_loss_dice: 1.209  m1_loss_ce_0: 0.553  m1_loss_mask_0: 0.1953  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.6343  m1_loss_mask_1: 0.1923  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.5691  m1_loss_mask_2: 0.1824  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5264  m1_loss_mask_3: 0.1838  m1_loss_dice_3: 1.22  m1_loss_ce_4: 0.4866  m1_loss_mask_4: 0.1817  m1_loss_dice_4: 1.233  m1_loss_ce_5: 0.4661  m1_loss_mask_5: 0.1815  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.4705  m1_loss_mask_6: 0.1823  m1_loss_dice_6: 1.204  m1_loss_ce_7: 0.4964  m1_loss_mask_7: 0.181  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.4471  m1_loss_mask_8: 0.1799  m1_loss_dice_8: 1.208  m2_loss_ce: 0.4807  m2_loss_mask: 0.172  m2_loss_dice: 1.211  m2_loss_ce_0: 0.5772  m2_loss_mask_0: 0.1995  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6765  m2_loss_mask_1: 0.191  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.5939  m2_loss_mask_2: 0.1786  m2_loss_dice_2: 1.28  m2_loss_ce_3: 0.5183  m2_loss_mask_3: 0.1749  m2_loss_dice_3: 1.228  m2_loss_ce_4: 0.5051  m2_loss_mask_4: 0.1712  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.5357  m2_loss_mask_5: 0.1739  m2_loss_dice_5: 1.214  m2_loss_ce_6: 0.4828  m2_loss_mask_6: 0.1713  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.4798  m2_loss_mask_7: 0.1735  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.4915  m2_loss_mask_8: 0.171  m2_loss_dice_8: 1.235    time: 1.3725  last_time: 1.3855  data_time: 0.0429  last_data_time: 0.0612   lr: 0.0001  max_mem: 34714M
[10/03 09:49:30] d2.utils.events INFO:  eta: 0:15:30  iter: 319  total_loss: 37.95  m1_loss_ce: 0.4381  m1_loss_mask: 0.1597  m1_loss_dice: 1.144  m1_loss_ce_0: 0.5641  m1_loss_mask_0: 0.1934  m1_loss_dice_0: 1.378  m1_loss_ce_1: 0.6501  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.275  m1_loss_ce_2: 0.5631  m1_loss_mask_2: 0.1643  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.5107  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.488  m1_loss_mask_4: 0.1615  m1_loss_dice_4: 1.147  m1_loss_ce_5: 0.4784  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.187  m1_loss_ce_6: 0.4766  m1_loss_mask_6: 0.1632  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.4414  m1_loss_mask_7: 0.1621  m1_loss_dice_7: 1.189  m1_loss_ce_8: 0.4473  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.173  m2_loss_ce: 0.466  m2_loss_mask: 0.1573  m2_loss_dice: 1.235  m2_loss_ce_0: 0.5578  m2_loss_mask_0: 0.1861  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6628  m2_loss_mask_1: 0.1733  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.5508  m2_loss_mask_2: 0.1655  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5326  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.4759  m2_loss_mask_4: 0.1609  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.4644  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.4588  m2_loss_mask_6: 0.1605  m2_loss_dice_6: 1.213  m2_loss_ce_7: 0.4594  m2_loss_mask_7: 0.1593  m2_loss_dice_7: 1.178  m2_loss_ce_8: 0.4665  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.215    time: 1.3736  last_time: 1.3849  data_time: 0.0481  last_data_time: 0.0508   lr: 0.0001  max_mem: 34827M
[10/03 09:49:57] d2.utils.events INFO:  eta: 0:15:02  iter: 339  total_loss: 38.68  m1_loss_ce: 0.4566  m1_loss_mask: 0.1627  m1_loss_dice: 1.185  m1_loss_ce_0: 0.5919  m1_loss_mask_0: 0.1855  m1_loss_dice_0: 1.418  m1_loss_ce_1: 0.5942  m1_loss_mask_1: 0.1766  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.5656  m1_loss_mask_2: 0.1669  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5495  m1_loss_mask_3: 0.1666  m1_loss_dice_3: 1.223  m1_loss_ce_4: 0.501  m1_loss_mask_4: 0.1618  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.4665  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.226  m1_loss_ce_6: 0.4864  m1_loss_mask_6: 0.1607  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.4626  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.4699  m1_loss_mask_8: 0.1599  m1_loss_dice_8: 1.172  m2_loss_ce: 0.4653  m2_loss_mask: 0.1608  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6245  m2_loss_mask_0: 0.1873  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6589  m2_loss_mask_1: 0.1759  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.5591  m2_loss_mask_2: 0.1611  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.5323  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.212  m2_loss_ce_4: 0.4923  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.4846  m2_loss_mask_5: 0.1594  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.4729  m2_loss_mask_6: 0.1592  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4793  m2_loss_mask_7: 0.1601  m2_loss_dice_7: 1.209  m2_loss_ce_8: 0.4631  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.216    time: 1.3742  last_time: 1.4866  data_time: 0.0503  last_data_time: 0.0442   lr: 0.0001  max_mem: 34827M
[10/03 09:50:25] d2.utils.events INFO:  eta: 0:14:35  iter: 359  total_loss: 40.48  m1_loss_ce: 0.4719  m1_loss_mask: 0.1788  m1_loss_dice: 1.237  m1_loss_ce_0: 0.593  m1_loss_mask_0: 0.2042  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.653  m1_loss_mask_1: 0.1869  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.6078  m1_loss_mask_2: 0.1773  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5585  m1_loss_mask_3: 0.1812  m1_loss_dice_3: 1.236  m1_loss_ce_4: 0.532  m1_loss_mask_4: 0.1787  m1_loss_dice_4: 1.236  m1_loss_ce_5: 0.4865  m1_loss_mask_5: 0.1776  m1_loss_dice_5: 1.237  m1_loss_ce_6: 0.4952  m1_loss_mask_6: 0.1776  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.5236  m1_loss_mask_7: 0.1773  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4874  m1_loss_mask_8: 0.1778  m1_loss_dice_8: 1.242  m2_loss_ce: 0.4563  m2_loss_mask: 0.1757  m2_loss_dice: 1.261  m2_loss_ce_0: 0.6102  m2_loss_mask_0: 0.2114  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6731  m2_loss_mask_1: 0.1921  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.5907  m2_loss_mask_2: 0.1795  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.569  m2_loss_mask_3: 0.1782  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.5229  m2_loss_mask_4: 0.1769  m2_loss_dice_4: 1.24  m2_loss_ce_5: 0.5056  m2_loss_mask_5: 0.1757  m2_loss_dice_5: 1.271  m2_loss_ce_6: 0.5147  m2_loss_mask_6: 0.1767  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5217  m2_loss_mask_7: 0.1763  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.482  m2_loss_mask_8: 0.1771  m2_loss_dice_8: 1.263    time: 1.3748  last_time: 1.4462  data_time: 0.0499  last_data_time: 0.0688   lr: 0.0001  max_mem: 34827M
[10/03 09:50:53] d2.utils.events INFO:  eta: 0:14:08  iter: 379  total_loss: 39.99  m1_loss_ce: 0.4746  m1_loss_mask: 0.1754  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5757  m1_loss_mask_0: 0.2045  m1_loss_dice_0: 1.451  m1_loss_ce_1: 0.6155  m1_loss_mask_1: 0.1863  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5745  m1_loss_mask_2: 0.1802  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5259  m1_loss_mask_3: 0.1794  m1_loss_dice_3: 1.265  m1_loss_ce_4: 0.5114  m1_loss_mask_4: 0.1757  m1_loss_dice_4: 1.252  m1_loss_ce_5: 0.5109  m1_loss_mask_5: 0.1797  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.4624  m1_loss_mask_6: 0.176  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.4532  m1_loss_mask_7: 0.1753  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4596  m1_loss_mask_8: 0.1764  m1_loss_dice_8: 1.221  m2_loss_ce: 0.4825  m2_loss_mask: 0.1691  m2_loss_dice: 1.22  m2_loss_ce_0: 0.6095  m2_loss_mask_0: 0.2001  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.658  m2_loss_mask_1: 0.1875  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5874  m2_loss_mask_2: 0.1752  m2_loss_dice_2: 1.333  m2_loss_ce_3: 0.5378  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.4981  m2_loss_mask_4: 0.1709  m2_loss_dice_4: 1.293  m2_loss_ce_5: 0.5079  m2_loss_mask_5: 0.1694  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.504  m2_loss_mask_6: 0.1712  m2_loss_dice_6: 1.26  m2_loss_ce_7: 0.4639  m2_loss_mask_7: 0.1704  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.4591  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.222    time: 1.3753  last_time: 1.3820  data_time: 0.0533  last_data_time: 0.0394   lr: 0.0001  max_mem: 34827M
[10/03 09:51:21] d2.utils.events INFO:  eta: 0:13:40  iter: 399  total_loss: 38.62  m1_loss_ce: 0.4448  m1_loss_mask: 0.1689  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5322  m1_loss_mask_0: 0.1994  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.586  m1_loss_mask_1: 0.1846  m1_loss_dice_1: 1.329  m1_loss_ce_2: 0.5639  m1_loss_mask_2: 0.1727  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.5071  m1_loss_mask_3: 0.1715  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.4689  m1_loss_mask_4: 0.1719  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.4562  m1_loss_mask_5: 0.1738  m1_loss_dice_5: 1.226  m1_loss_ce_6: 0.474  m1_loss_mask_6: 0.1694  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4374  m1_loss_mask_7: 0.1687  m1_loss_dice_7: 1.198  m1_loss_ce_8: 0.4477  m1_loss_mask_8: 0.1697  m1_loss_dice_8: 1.175  m2_loss_ce: 0.476  m2_loss_mask: 0.165  m2_loss_dice: 1.235  m2_loss_ce_0: 0.5848  m2_loss_mask_0: 0.2029  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.658  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5678  m2_loss_mask_2: 0.1685  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5435  m2_loss_mask_3: 0.1675  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5493  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.4809  m2_loss_mask_5: 0.1644  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.4764  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.4686  m2_loss_mask_7: 0.1651  m2_loss_dice_7: 1.231  m2_loss_ce_8: 0.4654  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.257    time: 1.3758  last_time: 1.3225  data_time: 0.0612  last_data_time: 0.0424   lr: 0.0001  max_mem: 34827M
[10/03 09:51:49] d2.utils.events INFO:  eta: 0:13:14  iter: 419  total_loss: 40.23  m1_loss_ce: 0.4644  m1_loss_mask: 0.1642  m1_loss_dice: 1.265  m1_loss_ce_0: 0.5325  m1_loss_mask_0: 0.1889  m1_loss_dice_0: 1.475  m1_loss_ce_1: 0.6218  m1_loss_mask_1: 0.1738  m1_loss_dice_1: 1.382  m1_loss_ce_2: 0.5836  m1_loss_mask_2: 0.167  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5208  m1_loss_mask_3: 0.1601  m1_loss_dice_3: 1.269  m1_loss_ce_4: 0.5277  m1_loss_mask_4: 0.1616  m1_loss_dice_4: 1.268  m1_loss_ce_5: 0.4879  m1_loss_mask_5: 0.1628  m1_loss_dice_5: 1.287  m1_loss_ce_6: 0.458  m1_loss_mask_6: 0.1606  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.4772  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.254  m1_loss_ce_8: 0.4634  m1_loss_mask_8: 0.1617  m1_loss_dice_8: 1.272  m2_loss_ce: 0.4717  m2_loss_mask: 0.1674  m2_loss_dice: 1.33  m2_loss_ce_0: 0.615  m2_loss_mask_0: 0.191  m2_loss_dice_0: 1.498  m2_loss_ce_1: 0.675  m2_loss_mask_1: 0.1839  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.5705  m2_loss_mask_2: 0.1712  m2_loss_dice_2: 1.391  m2_loss_ce_3: 0.5273  m2_loss_mask_3: 0.1706  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5196  m2_loss_mask_4: 0.1663  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.5079  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.301  m2_loss_ce_6: 0.5039  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.4832  m2_loss_mask_7: 0.1676  m2_loss_dice_7: 1.286  m2_loss_ce_8: 0.4728  m2_loss_mask_8: 0.1665  m2_loss_dice_8: 1.299    time: 1.3765  last_time: 1.4073  data_time: 0.0538  last_data_time: 0.0445   lr: 0.0001  max_mem: 34827M
[10/03 09:52:17] d2.utils.events INFO:  eta: 0:12:47  iter: 439  total_loss: 40.59  m1_loss_ce: 0.4906  m1_loss_mask: 0.1696  m1_loss_dice: 1.234  m1_loss_ce_0: 0.5622  m1_loss_mask_0: 0.1971  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.6113  m1_loss_mask_1: 0.1953  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.5924  m1_loss_mask_2: 0.1757  m1_loss_dice_2: 1.374  m1_loss_ce_3: 0.5277  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.289  m1_loss_ce_4: 0.5074  m1_loss_mask_4: 0.1722  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.4952  m1_loss_mask_5: 0.1694  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4658  m1_loss_mask_6: 0.1709  m1_loss_dice_6: 1.255  m1_loss_ce_7: 0.4847  m1_loss_mask_7: 0.1727  m1_loss_dice_7: 1.248  m1_loss_ce_8: 0.5062  m1_loss_mask_8: 0.17  m1_loss_dice_8: 1.265  m2_loss_ce: 0.4895  m2_loss_mask: 0.1711  m2_loss_dice: 1.259  m2_loss_ce_0: 0.636  m2_loss_mask_0: 0.2076  m2_loss_dice_0: 1.532  m2_loss_ce_1: 0.7124  m2_loss_mask_1: 0.186  m2_loss_dice_1: 1.447  m2_loss_ce_2: 0.6057  m2_loss_mask_2: 0.1764  m2_loss_dice_2: 1.402  m2_loss_ce_3: 0.5774  m2_loss_mask_3: 0.1756  m2_loss_dice_3: 1.338  m2_loss_ce_4: 0.5375  m2_loss_mask_4: 0.1725  m2_loss_dice_4: 1.335  m2_loss_ce_5: 0.5447  m2_loss_mask_5: 0.1704  m2_loss_dice_5: 1.301  m2_loss_ce_6: 0.5151  m2_loss_mask_6: 0.171  m2_loss_dice_6: 1.309  m2_loss_ce_7: 0.5257  m2_loss_mask_7: 0.1789  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.524  m2_loss_mask_8: 0.1732  m2_loss_dice_8: 1.258    time: 1.3774  last_time: 1.3412  data_time: 0.0567  last_data_time: 0.0515   lr: 0.0001  max_mem: 34827M
[10/03 09:52:45] d2.utils.events INFO:  eta: 0:12:20  iter: 459  total_loss: 40.96  m1_loss_ce: 0.472  m1_loss_mask: 0.1605  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5285  m1_loss_mask_0: 0.185  m1_loss_dice_0: 1.484  m1_loss_ce_1: 0.6016  m1_loss_mask_1: 0.172  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.595  m1_loss_mask_2: 0.1645  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5186  m1_loss_mask_3: 0.1645  m1_loss_dice_3: 1.233  m1_loss_ce_4: 0.5054  m1_loss_mask_4: 0.1604  m1_loss_dice_4: 1.288  m1_loss_ce_5: 0.5067  m1_loss_mask_5: 0.16  m1_loss_dice_5: 1.246  m1_loss_ce_6: 0.4502  m1_loss_mask_6: 0.1611  m1_loss_dice_6: 1.22  m1_loss_ce_7: 0.4724  m1_loss_mask_7: 0.1604  m1_loss_dice_7: 1.236  m1_loss_ce_8: 0.484  m1_loss_mask_8: 0.1624  m1_loss_dice_8: 1.234  m2_loss_ce: 0.4978  m2_loss_mask: 0.17  m2_loss_dice: 1.318  m2_loss_ce_0: 0.6109  m2_loss_mask_0: 0.1949  m2_loss_dice_0: 1.504  m2_loss_ce_1: 0.6741  m2_loss_mask_1: 0.1814  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.5945  m2_loss_mask_2: 0.1715  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5445  m2_loss_mask_3: 0.1742  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5332  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.335  m2_loss_ce_5: 0.495  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.287  m2_loss_ce_6: 0.4951  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.316  m2_loss_ce_7: 0.4589  m2_loss_mask_7: 0.1715  m2_loss_dice_7: 1.291  m2_loss_ce_8: 0.4614  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.309    time: 1.3784  last_time: 1.4186  data_time: 0.0508  last_data_time: 0.0648   lr: 0.0001  max_mem: 34827M
[10/03 09:53:13] d2.utils.events INFO:  eta: 0:11:53  iter: 479  total_loss: 40.13  m1_loss_ce: 0.4739  m1_loss_mask: 0.169  m1_loss_dice: 1.232  m1_loss_ce_0: 0.5536  m1_loss_mask_0: 0.1954  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6665  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.338  m1_loss_ce_2: 0.5647  m1_loss_mask_2: 0.1758  m1_loss_dice_2: 1.293  m1_loss_ce_3: 0.5195  m1_loss_mask_3: 0.1772  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.508  m1_loss_mask_4: 0.1756  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.4784  m1_loss_mask_5: 0.1701  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4664  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.5038  m1_loss_mask_7: 0.1679  m1_loss_dice_7: 1.2  m1_loss_ce_8: 0.4694  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4702  m2_loss_mask: 0.1692  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6055  m2_loss_mask_0: 0.2057  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6843  m2_loss_mask_1: 0.1935  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.584  m2_loss_mask_2: 0.1747  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5179  m2_loss_mask_3: 0.1726  m2_loss_dice_3: 1.282  m2_loss_ce_4: 0.5231  m2_loss_mask_4: 0.17  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.4882  m2_loss_mask_5: 0.1679  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.4657  m2_loss_mask_6: 0.1699  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.4955  m2_loss_mask_7: 0.1697  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4904  m2_loss_mask_8: 0.1685  m2_loss_dice_8: 1.294    time: 1.3785  last_time: 1.2634  data_time: 0.0533  last_data_time: 0.0451   lr: 0.0001  max_mem: 34827M
[10/03 09:53:41] d2.utils.events INFO:  eta: 0:11:27  iter: 499  total_loss: 40.65  m1_loss_ce: 0.4529  m1_loss_mask: 0.1622  m1_loss_dice: 1.32  m1_loss_ce_0: 0.5385  m1_loss_mask_0: 0.1904  m1_loss_dice_0: 1.514  m1_loss_ce_1: 0.6123  m1_loss_mask_1: 0.176  m1_loss_dice_1: 1.438  m1_loss_ce_2: 0.5827  m1_loss_mask_2: 0.1663  m1_loss_dice_2: 1.34  m1_loss_ce_3: 0.5229  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.342  m1_loss_ce_4: 0.5027  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.353  m1_loss_ce_5: 0.515  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.332  m1_loss_ce_6: 0.5006  m1_loss_mask_6: 0.1604  m1_loss_dice_6: 1.279  m1_loss_ce_7: 0.5084  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.302  m1_loss_ce_8: 0.4906  m1_loss_mask_8: 0.1609  m1_loss_dice_8: 1.288  m2_loss_ce: 0.5018  m2_loss_mask: 0.1643  m2_loss_dice: 1.33  m2_loss_ce_0: 0.6193  m2_loss_mask_0: 0.1964  m2_loss_dice_0: 1.518  m2_loss_ce_1: 0.6917  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.6423  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.404  m2_loss_ce_3: 0.5491  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.344  m2_loss_ce_4: 0.5524  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.33  m2_loss_ce_5: 0.5387  m2_loss_mask_5: 0.1658  m2_loss_dice_5: 1.333  m2_loss_ce_6: 0.5128  m2_loss_mask_6: 0.1672  m2_loss_dice_6: 1.306  m2_loss_ce_7: 0.5503  m2_loss_mask_7: 0.1654  m2_loss_dice_7: 1.311  m2_loss_ce_8: 0.4979  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.346    time: 1.3800  last_time: 1.4986  data_time: 0.0536  last_data_time: 0.0435   lr: 0.0001  max_mem: 34827M
[10/03 09:54:10] d2.utils.events INFO:  eta: 0:11:00  iter: 519  total_loss: 40.74  m1_loss_ce: 0.4541  m1_loss_mask: 0.1664  m1_loss_dice: 1.288  m1_loss_ce_0: 0.5766  m1_loss_mask_0: 0.1847  m1_loss_dice_0: 1.524  m1_loss_ce_1: 0.6087  m1_loss_mask_1: 0.1735  m1_loss_dice_1: 1.404  m1_loss_ce_2: 0.5632  m1_loss_mask_2: 0.1701  m1_loss_dice_2: 1.28  m1_loss_ce_3: 0.5389  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.292  m1_loss_ce_4: 0.4664  m1_loss_mask_4: 0.1709  m1_loss_dice_4: 1.282  m1_loss_ce_5: 0.4796  m1_loss_mask_5: 0.1687  m1_loss_dice_5: 1.248  m1_loss_ce_6: 0.473  m1_loss_mask_6: 0.167  m1_loss_dice_6: 1.308  m1_loss_ce_7: 0.4542  m1_loss_mask_7: 0.1674  m1_loss_dice_7: 1.274  m1_loss_ce_8: 0.467  m1_loss_mask_8: 0.1654  m1_loss_dice_8: 1.278  m2_loss_ce: 0.4822  m2_loss_mask: 0.1555  m2_loss_dice: 1.31  m2_loss_ce_0: 0.6381  m2_loss_mask_0: 0.185  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.669  m2_loss_mask_1: 0.174  m2_loss_dice_1: 1.462  m2_loss_ce_2: 0.6234  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.389  m2_loss_ce_3: 0.556  m2_loss_mask_3: 0.1606  m2_loss_dice_3: 1.341  m2_loss_ce_4: 0.5591  m2_loss_mask_4: 0.1563  m2_loss_dice_4: 1.323  m2_loss_ce_5: 0.5373  m2_loss_mask_5: 0.1562  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.5089  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.279  m2_loss_ce_7: 0.5005  m2_loss_mask_7: 0.1569  m2_loss_dice_7: 1.305  m2_loss_ce_8: 0.5027  m2_loss_mask_8: 0.1585  m2_loss_dice_8: 1.259    time: 1.3816  last_time: 1.3827  data_time: 0.0534  last_data_time: 0.0706   lr: 0.0001  max_mem: 34827M
[10/03 09:54:38] d2.utils.events INFO:  eta: 0:10:33  iter: 539  total_loss: 37.83  m1_loss_ce: 0.4406  m1_loss_mask: 0.1554  m1_loss_dice: 1.176  m1_loss_ce_0: 0.5935  m1_loss_mask_0: 0.182  m1_loss_dice_0: 1.355  m1_loss_ce_1: 0.5888  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5713  m1_loss_mask_2: 0.1635  m1_loss_dice_2: 1.234  m1_loss_ce_3: 0.4747  m1_loss_mask_3: 0.1636  m1_loss_dice_3: 1.166  m1_loss_ce_4: 0.4495  m1_loss_mask_4: 0.1603  m1_loss_dice_4: 1.226  m1_loss_ce_5: 0.4382  m1_loss_mask_5: 0.1578  m1_loss_dice_5: 1.192  m1_loss_ce_6: 0.4429  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.161  m1_loss_ce_7: 0.4224  m1_loss_mask_7: 0.156  m1_loss_dice_7: 1.175  m1_loss_ce_8: 0.4051  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4371  m2_loss_mask: 0.1598  m2_loss_dice: 1.194  m2_loss_ce_0: 0.5891  m2_loss_mask_0: 0.1931  m2_loss_dice_0: 1.423  m2_loss_ce_1: 0.6364  m2_loss_mask_1: 0.1777  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.5744  m2_loss_mask_2: 0.1596  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5024  m2_loss_mask_3: 0.1589  m2_loss_dice_3: 1.203  m2_loss_ce_4: 0.4883  m2_loss_mask_4: 0.1568  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.463  m2_loss_mask_5: 0.1556  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.4743  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.183  m2_loss_ce_7: 0.4657  m2_loss_mask_7: 0.1605  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.4511  m2_loss_mask_8: 0.1601  m2_loss_dice_8: 1.206    time: 1.3834  last_time: 1.3689  data_time: 0.0561  last_data_time: 0.0509   lr: 0.0001  max_mem: 34827M
[10/03 09:55:06] d2.utils.events INFO:  eta: 0:10:06  iter: 559  total_loss: 40.59  m1_loss_ce: 0.4415  m1_loss_mask: 0.1588  m1_loss_dice: 1.27  m1_loss_ce_0: 0.5629  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.6285  m1_loss_mask_1: 0.1711  m1_loss_dice_1: 1.335  m1_loss_ce_2: 0.5795  m1_loss_mask_2: 0.1644  m1_loss_dice_2: 1.343  m1_loss_ce_3: 0.5478  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.271  m1_loss_ce_4: 0.4818  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.4956  m1_loss_mask_5: 0.1585  m1_loss_dice_5: 1.325  m1_loss_ce_6: 0.4969  m1_loss_mask_6: 0.159  m1_loss_dice_6: 1.252  m1_loss_ce_7: 0.4619  m1_loss_mask_7: 0.1589  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4831  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.276  m2_loss_ce: 0.479  m2_loss_mask: 0.1592  m2_loss_dice: 1.261  m2_loss_ce_0: 0.6362  m2_loss_mask_0: 0.1892  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6814  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.5964  m2_loss_mask_2: 0.163  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.5561  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.5379  m2_loss_mask_4: 0.1592  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5162  m2_loss_mask_5: 0.1574  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.5071  m2_loss_mask_6: 0.1576  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.5032  m2_loss_mask_7: 0.1595  m2_loss_dice_7: 1.277  m2_loss_ce_8: 0.4901  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.265    time: 1.3831  last_time: 1.3574  data_time: 0.0521  last_data_time: 0.0597   lr: 0.0001  max_mem: 34827M
[10/03 09:55:34] d2.utils.events INFO:  eta: 0:09:38  iter: 579  total_loss: 40.33  m1_loss_ce: 0.4882  m1_loss_mask: 0.1746  m1_loss_dice: 1.256  m1_loss_ce_0: 0.577  m1_loss_mask_0: 0.2027  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.6466  m1_loss_mask_1: 0.1898  m1_loss_dice_1: 1.389  m1_loss_ce_2: 0.5997  m1_loss_mask_2: 0.183  m1_loss_dice_2: 1.344  m1_loss_ce_3: 0.5445  m1_loss_mask_3: 0.1773  m1_loss_dice_3: 1.249  m1_loss_ce_4: 0.5227  m1_loss_mask_4: 0.1749  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.5076  m1_loss_mask_5: 0.1744  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.4792  m1_loss_mask_6: 0.1748  m1_loss_dice_6: 1.213  m1_loss_ce_7: 0.495  m1_loss_mask_7: 0.1746  m1_loss_dice_7: 1.288  m1_loss_ce_8: 0.4977  m1_loss_mask_8: 0.1729  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4861  m2_loss_mask: 0.1727  m2_loss_dice: 1.21  m2_loss_ce_0: 0.5804  m2_loss_mask_0: 0.203  m2_loss_dice_0: 1.458  m2_loss_ce_1: 0.6671  m2_loss_mask_1: 0.1899  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.6017  m2_loss_mask_2: 0.1772  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5574  m2_loss_mask_3: 0.1763  m2_loss_dice_3: 1.309  m2_loss_ce_4: 0.5459  m2_loss_mask_4: 0.1753  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5434  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.27  m2_loss_ce_6: 0.5019  m2_loss_mask_6: 0.1741  m2_loss_dice_6: 1.287  m2_loss_ce_7: 0.5326  m2_loss_mask_7: 0.1732  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.4726  m2_loss_mask_8: 0.1731  m2_loss_dice_8: 1.235    time: 1.3844  last_time: 1.4362  data_time: 0.0533  last_data_time: 0.0394   lr: 0.0001  max_mem: 34827M
[10/03 09:56:03] d2.utils.events INFO:  eta: 0:09:11  iter: 599  total_loss: 39.85  m1_loss_ce: 0.4796  m1_loss_mask: 0.1682  m1_loss_dice: 1.226  m1_loss_ce_0: 0.5823  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6101  m1_loss_mask_1: 0.1806  m1_loss_dice_1: 1.341  m1_loss_ce_2: 0.5718  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5127  m1_loss_mask_3: 0.1723  m1_loss_dice_3: 1.272  m1_loss_ce_4: 0.4695  m1_loss_mask_4: 0.1711  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.4743  m1_loss_mask_5: 0.1696  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.4585  m1_loss_mask_6: 0.1686  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4675  m1_loss_mask_7: 0.167  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4653  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.238  m2_loss_ce: 0.4917  m2_loss_mask: 0.164  m2_loss_dice: 1.275  m2_loss_ce_0: 0.6026  m2_loss_mask_0: 0.2034  m2_loss_dice_0: 1.478  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.179  m2_loss_dice_1: 1.376  m2_loss_ce_2: 0.5844  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.519  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5339  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.5398  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.275  m2_loss_ce_6: 0.4819  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.257  m2_loss_ce_7: 0.4894  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.262  m2_loss_ce_8: 0.4978  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.269    time: 1.3860  last_time: 1.4430  data_time: 0.0566  last_data_time: 0.0417   lr: 0.0001  max_mem: 34827M
[10/03 09:56:32] d2.utils.events INFO:  eta: 0:08:44  iter: 619  total_loss: 39.48  m1_loss_ce: 0.4697  m1_loss_mask: 0.1661  m1_loss_dice: 1.165  m1_loss_ce_0: 0.5887  m1_loss_mask_0: 0.1869  m1_loss_dice_0: 1.363  m1_loss_ce_1: 0.6301  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.299  m1_loss_ce_2: 0.5832  m1_loss_mask_2: 0.1705  m1_loss_dice_2: 1.234  m1_loss_ce_3: 0.5291  m1_loss_mask_3: 0.1687  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.4941  m1_loss_mask_4: 0.1688  m1_loss_dice_4: 1.221  m1_loss_ce_5: 0.494  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.185  m1_loss_ce_6: 0.4739  m1_loss_mask_6: 0.1696  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4654  m1_loss_mask_7: 0.1661  m1_loss_dice_7: 1.194  m1_loss_ce_8: 0.4851  m1_loss_mask_8: 0.1686  m1_loss_dice_8: 1.172  m2_loss_ce: 0.4958  m2_loss_mask: 0.1686  m2_loss_dice: 1.218  m2_loss_ce_0: 0.6098  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.7135  m2_loss_mask_1: 0.1813  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5797  m2_loss_mask_2: 0.1733  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.5722  m2_loss_mask_3: 0.1724  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.5172  m2_loss_mask_4: 0.1704  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.5295  m2_loss_mask_5: 0.169  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.4749  m2_loss_mask_6: 0.1704  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.5243  m2_loss_mask_7: 0.1695  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4955  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.192    time: 1.3871  last_time: 1.2599  data_time: 0.0507  last_data_time: 0.0443   lr: 0.0001  max_mem: 34827M
[10/03 09:57:00] d2.utils.events INFO:  eta: 0:08:17  iter: 639  total_loss: 37.86  m1_loss_ce: 0.4755  m1_loss_mask: 0.165  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5574  m1_loss_mask_0: 0.205  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.6293  m1_loss_mask_1: 0.1896  m1_loss_dice_1: 1.288  m1_loss_ce_2: 0.5626  m1_loss_mask_2: 0.1763  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.5113  m1_loss_mask_3: 0.1696  m1_loss_dice_3: 1.175  m1_loss_ce_4: 0.479  m1_loss_mask_4: 0.1704  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.459  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.458  m1_loss_mask_6: 0.1675  m1_loss_dice_6: 1.171  m1_loss_ce_7: 0.4077  m1_loss_mask_7: 0.1666  m1_loss_dice_7: 1.161  m1_loss_ce_8: 0.4299  m1_loss_mask_8: 0.1652  m1_loss_dice_8: 1.165  m2_loss_ce: 0.435  m2_loss_mask: 0.169  m2_loss_dice: 1.232  m2_loss_ce_0: 0.6039  m2_loss_mask_0: 0.2046  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6431  m2_loss_mask_1: 0.1884  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5657  m2_loss_mask_2: 0.1756  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.4978  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.4674  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.4957  m2_loss_mask_5: 0.1695  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4571  m2_loss_mask_6: 0.1683  m2_loss_dice_6: 1.219  m2_loss_ce_7: 0.4528  m2_loss_mask_7: 0.1704  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.461  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.199    time: 1.3877  last_time: 1.4324  data_time: 0.0649  last_data_time: 0.0582   lr: 0.0001  max_mem: 34827M
[10/03 09:57:28] d2.utils.events INFO:  eta: 0:07:50  iter: 659  total_loss: 38.58  m1_loss_ce: 0.4414  m1_loss_mask: 0.1767  m1_loss_dice: 1.143  m1_loss_ce_0: 0.5505  m1_loss_mask_0: 0.21  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.5862  m1_loss_mask_1: 0.1931  m1_loss_dice_1: 1.259  m1_loss_ce_2: 0.5518  m1_loss_mask_2: 0.1827  m1_loss_dice_2: 1.212  m1_loss_ce_3: 0.5132  m1_loss_mask_3: 0.1785  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.514  m1_loss_mask_4: 0.1808  m1_loss_dice_4: 1.182  m1_loss_ce_5: 0.4832  m1_loss_mask_5: 0.1767  m1_loss_dice_5: 1.184  m1_loss_ce_6: 0.4655  m1_loss_mask_6: 0.1772  m1_loss_dice_6: 1.165  m1_loss_ce_7: 0.4509  m1_loss_mask_7: 0.1774  m1_loss_dice_7: 1.178  m1_loss_ce_8: 0.4636  m1_loss_mask_8: 0.1771  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4404  m2_loss_mask: 0.1765  m2_loss_dice: 1.194  m2_loss_ce_0: 0.5906  m2_loss_mask_0: 0.2089  m2_loss_dice_0: 1.416  m2_loss_ce_1: 0.6348  m2_loss_mask_1: 0.193  m2_loss_dice_1: 1.305  m2_loss_ce_2: 0.5531  m2_loss_mask_2: 0.1786  m2_loss_dice_2: 1.252  m2_loss_ce_3: 0.5305  m2_loss_mask_3: 0.1804  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.5298  m2_loss_mask_4: 0.1786  m2_loss_dice_4: 1.178  m2_loss_ce_5: 0.4992  m2_loss_mask_5: 0.1747  m2_loss_dice_5: 1.181  m2_loss_ce_6: 0.4669  m2_loss_mask_6: 0.1767  m2_loss_dice_6: 1.165  m2_loss_ce_7: 0.4683  m2_loss_mask_7: 0.1747  m2_loss_dice_7: 1.166  m2_loss_ce_8: 0.4726  m2_loss_mask_8: 0.1744  m2_loss_dice_8: 1.171    time: 1.3887  last_time: 1.4071  data_time: 0.0519  last_data_time: 0.0518   lr: 0.0001  max_mem: 34827M
[10/03 09:57:57] d2.utils.events INFO:  eta: 0:07:23  iter: 679  total_loss: 36.91  m1_loss_ce: 0.4061  m1_loss_mask: 0.1559  m1_loss_dice: 1.125  m1_loss_ce_0: 0.5026  m1_loss_mask_0: 0.1804  m1_loss_dice_0: 1.377  m1_loss_ce_1: 0.5797  m1_loss_mask_1: 0.1682  m1_loss_dice_1: 1.272  m1_loss_ce_2: 0.5098  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.204  m1_loss_ce_3: 0.5035  m1_loss_mask_3: 0.1605  m1_loss_dice_3: 1.173  m1_loss_ce_4: 0.4661  m1_loss_mask_4: 0.1603  m1_loss_dice_4: 1.167  m1_loss_ce_5: 0.426  m1_loss_mask_5: 0.1553  m1_loss_dice_5: 1.121  m1_loss_ce_6: 0.4325  m1_loss_mask_6: 0.1556  m1_loss_dice_6: 1.121  m1_loss_ce_7: 0.4317  m1_loss_mask_7: 0.1551  m1_loss_dice_7: 1.128  m1_loss_ce_8: 0.4577  m1_loss_mask_8: 0.1568  m1_loss_dice_8: 1.141  m2_loss_ce: 0.4485  m2_loss_mask: 0.1606  m2_loss_dice: 1.161  m2_loss_ce_0: 0.5429  m2_loss_mask_0: 0.1949  m2_loss_dice_0: 1.417  m2_loss_ce_1: 0.6441  m2_loss_mask_1: 0.1752  m2_loss_dice_1: 1.306  m2_loss_ce_2: 0.5611  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.4908  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.211  m2_loss_ce_4: 0.5051  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4724  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.191  m2_loss_ce_6: 0.4751  m2_loss_mask_6: 0.1622  m2_loss_dice_6: 1.172  m2_loss_ce_7: 0.4582  m2_loss_mask_7: 0.1617  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4429  m2_loss_mask_8: 0.1615  m2_loss_dice_8: 1.201    time: 1.3897  last_time: 1.2975  data_time: 0.0677  last_data_time: 0.0461   lr: 0.0001  max_mem: 34827M
[10/03 09:58:26] d2.utils.events INFO:  eta: 0:06:55  iter: 699  total_loss: 40.42  m1_loss_ce: 0.4301  m1_loss_mask: 0.1727  m1_loss_dice: 1.236  m1_loss_ce_0: 0.5285  m1_loss_mask_0: 0.1918  m1_loss_dice_0: 1.423  m1_loss_ce_1: 0.604  m1_loss_mask_1: 0.1837  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.5531  m1_loss_mask_2: 0.1746  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.5397  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4714  m1_loss_mask_4: 0.1731  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.503  m1_loss_mask_5: 0.1718  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.4313  m1_loss_mask_6: 0.1723  m1_loss_dice_6: 1.231  m1_loss_ce_7: 0.4423  m1_loss_mask_7: 0.1706  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.4434  m1_loss_mask_8: 0.1728  m1_loss_dice_8: 1.22  m2_loss_ce: 0.4411  m2_loss_mask: 0.1713  m2_loss_dice: 1.258  m2_loss_ce_0: 0.5814  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.455  m2_loss_ce_1: 0.6637  m2_loss_mask_1: 0.1875  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.5582  m2_loss_mask_2: 0.1741  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.4943  m2_loss_mask_3: 0.1744  m2_loss_dice_3: 1.287  m2_loss_ce_4: 0.477  m2_loss_mask_4: 0.1723  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.4894  m2_loss_mask_5: 0.1697  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4905  m2_loss_mask_6: 0.1708  m2_loss_dice_6: 1.242  m2_loss_ce_7: 0.4755  m2_loss_mask_7: 0.1727  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.4572  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.253    time: 1.3907  last_time: 1.3840  data_time: 0.0674  last_data_time: 0.0378   lr: 0.0001  max_mem: 34827M
[10/03 09:58:54] d2.utils.events INFO:  eta: 0:06:28  iter: 719  total_loss: 41.52  m1_loss_ce: 0.4119  m1_loss_mask: 0.1832  m1_loss_dice: 1.282  m1_loss_ce_0: 0.5193  m1_loss_mask_0: 0.2115  m1_loss_dice_0: 1.477  m1_loss_ce_1: 0.5712  m1_loss_mask_1: 0.2037  m1_loss_dice_1: 1.399  m1_loss_ce_2: 0.5556  m1_loss_mask_2: 0.1897  m1_loss_dice_2: 1.366  m1_loss_ce_3: 0.4888  m1_loss_mask_3: 0.1845  m1_loss_dice_3: 1.303  m1_loss_ce_4: 0.4665  m1_loss_mask_4: 0.1849  m1_loss_dice_4: 1.267  m1_loss_ce_5: 0.4728  m1_loss_mask_5: 0.1824  m1_loss_dice_5: 1.282  m1_loss_ce_6: 0.4325  m1_loss_mask_6: 0.1849  m1_loss_dice_6: 1.303  m1_loss_ce_7: 0.4385  m1_loss_mask_7: 0.1837  m1_loss_dice_7: 1.283  m1_loss_ce_8: 0.4198  m1_loss_mask_8: 0.1827  m1_loss_dice_8: 1.252  m2_loss_ce: 0.4799  m2_loss_mask: 0.1808  m2_loss_dice: 1.292  m2_loss_ce_0: 0.5897  m2_loss_mask_0: 0.2167  m2_loss_dice_0: 1.526  m2_loss_ce_1: 0.6742  m2_loss_mask_1: 0.2043  m2_loss_dice_1: 1.432  m2_loss_ce_2: 0.5769  m2_loss_mask_2: 0.1893  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5249  m2_loss_mask_3: 0.1852  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.504  m2_loss_mask_4: 0.1836  m2_loss_dice_4: 1.326  m2_loss_ce_5: 0.5126  m2_loss_mask_5: 0.1842  m2_loss_dice_5: 1.305  m2_loss_ce_6: 0.4865  m2_loss_mask_6: 0.1857  m2_loss_dice_6: 1.296  m2_loss_ce_7: 0.4947  m2_loss_mask_7: 0.1837  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.4891  m2_loss_mask_8: 0.1824  m2_loss_dice_8: 1.287    time: 1.3915  last_time: 1.3903  data_time: 0.0541  last_data_time: 0.0524   lr: 0.0001  max_mem: 34827M
[10/03 09:59:23] d2.utils.events INFO:  eta: 0:06:00  iter: 739  total_loss: 39.88  m1_loss_ce: 0.4583  m1_loss_mask: 0.1546  m1_loss_dice: 1.208  m1_loss_ce_0: 0.5677  m1_loss_mask_0: 0.18  m1_loss_dice_0: 1.473  m1_loss_ce_1: 0.6458  m1_loss_mask_1: 0.1683  m1_loss_dice_1: 1.369  m1_loss_ce_2: 0.5658  m1_loss_mask_2: 0.1573  m1_loss_dice_2: 1.294  m1_loss_ce_3: 0.5396  m1_loss_mask_3: 0.1553  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.5211  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.205  m1_loss_ce_5: 0.4921  m1_loss_mask_5: 0.1523  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.4634  m1_loss_mask_6: 0.1514  m1_loss_dice_6: 1.211  m1_loss_ce_7: 0.4699  m1_loss_mask_7: 0.1539  m1_loss_dice_7: 1.218  m1_loss_ce_8: 0.4447  m1_loss_mask_8: 0.1524  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4748  m2_loss_mask: 0.1563  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5948  m2_loss_mask_0: 0.188  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6604  m2_loss_mask_1: 0.1781  m2_loss_dice_1: 1.347  m2_loss_ce_2: 0.5531  m2_loss_mask_2: 0.158  m2_loss_dice_2: 1.343  m2_loss_ce_3: 0.5276  m2_loss_mask_3: 0.1593  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5047  m2_loss_mask_4: 0.1569  m2_loss_dice_4: 1.266  m2_loss_ce_5: 0.5208  m2_loss_mask_5: 0.1572  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5009  m2_loss_mask_6: 0.1569  m2_loss_dice_6: 1.224  m2_loss_ce_7: 0.504  m2_loss_mask_7: 0.1576  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.483  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.225    time: 1.3922  last_time: 1.4542  data_time: 0.0475  last_data_time: 0.0414   lr: 0.0001  max_mem: 34827M
[10/03 09:59:51] d2.utils.events INFO:  eta: 0:05:33  iter: 759  total_loss: 39.63  m1_loss_ce: 0.414  m1_loss_mask: 0.1605  m1_loss_dice: 1.248  m1_loss_ce_0: 0.5395  m1_loss_mask_0: 0.1795  m1_loss_dice_0: 1.433  m1_loss_ce_1: 0.6269  m1_loss_mask_1: 0.1685  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.5383  m1_loss_mask_2: 0.1652  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.4874  m1_loss_mask_3: 0.16  m1_loss_dice_3: 1.278  m1_loss_ce_4: 0.4939  m1_loss_mask_4: 0.1566  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.4595  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.259  m1_loss_ce_6: 0.4443  m1_loss_mask_6: 0.1567  m1_loss_dice_6: 1.293  m1_loss_ce_7: 0.4433  m1_loss_mask_7: 0.1607  m1_loss_dice_7: 1.264  m1_loss_ce_8: 0.4341  m1_loss_mask_8: 0.1596  m1_loss_dice_8: 1.274  m2_loss_ce: 0.4852  m2_loss_mask: 0.1615  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6018  m2_loss_mask_0: 0.189  m2_loss_dice_0: 1.45  m2_loss_ce_1: 0.6639  m2_loss_mask_1: 0.1791  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.5919  m2_loss_mask_2: 0.1674  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5712  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5555  m2_loss_mask_4: 0.1628  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.5279  m2_loss_mask_5: 0.1597  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.4968  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.5164  m2_loss_mask_7: 0.1634  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.5072  m2_loss_mask_8: 0.1607  m2_loss_dice_8: 1.257    time: 1.3929  last_time: 1.3929  data_time: 0.0579  last_data_time: 0.0485   lr: 0.0001  max_mem: 34827M
[10/03 10:00:20] d2.utils.events INFO:  eta: 0:05:05  iter: 779  total_loss: 39.6  m1_loss_ce: 0.4385  m1_loss_mask: 0.1561  m1_loss_dice: 1.2  m1_loss_ce_0: 0.5511  m1_loss_mask_0: 0.1759  m1_loss_dice_0: 1.46  m1_loss_ce_1: 0.6376  m1_loss_mask_1: 0.1702  m1_loss_dice_1: 1.305  m1_loss_ce_2: 0.5745  m1_loss_mask_2: 0.1666  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5388  m1_loss_mask_3: 0.1629  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.5173  m1_loss_mask_4: 0.1624  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.4818  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.4172  m1_loss_mask_6: 0.1598  m1_loss_dice_6: 1.198  m1_loss_ce_7: 0.4405  m1_loss_mask_7: 0.1584  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.4653  m1_loss_mask_8: 0.1586  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4936  m2_loss_mask: 0.1638  m2_loss_dice: 1.326  m2_loss_ce_0: 0.6169  m2_loss_mask_0: 0.1926  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.6926  m2_loss_mask_1: 0.18  m2_loss_dice_1: 1.398  m2_loss_ce_2: 0.595  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.58  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5546  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.294  m2_loss_ce_5: 0.5495  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.284  m2_loss_ce_6: 0.5183  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.306  m2_loss_ce_7: 0.5139  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.281  m2_loss_ce_8: 0.5266  m2_loss_mask_8: 0.1646  m2_loss_dice_8: 1.282    time: 1.3938  last_time: 1.4247  data_time: 0.0537  last_data_time: 0.0489   lr: 0.0001  max_mem: 34827M
[10/03 10:00:48] d2.utils.events INFO:  eta: 0:04:37  iter: 799  total_loss: 40.76  m1_loss_ce: 0.4147  m1_loss_mask: 0.1622  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5666  m1_loss_mask_0: 0.1855  m1_loss_dice_0: 1.497  m1_loss_ce_1: 0.6219  m1_loss_mask_1: 0.176  m1_loss_dice_1: 1.349  m1_loss_ce_2: 0.5773  m1_loss_mask_2: 0.1687  m1_loss_dice_2: 1.301  m1_loss_ce_3: 0.4747  m1_loss_mask_3: 0.163  m1_loss_dice_3: 1.267  m1_loss_ce_4: 0.4936  m1_loss_mask_4: 0.1642  m1_loss_dice_4: 1.219  m1_loss_ce_5: 0.4905  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.4561  m1_loss_mask_6: 0.1602  m1_loss_dice_6: 1.254  m1_loss_ce_7: 0.4463  m1_loss_mask_7: 0.1608  m1_loss_dice_7: 1.242  m1_loss_ce_8: 0.466  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.235  m2_loss_ce: 0.5066  m2_loss_mask: 0.1662  m2_loss_dice: 1.328  m2_loss_ce_0: 0.6014  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.547  m2_loss_ce_1: 0.6941  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.446  m2_loss_ce_2: 0.6101  m2_loss_mask_2: 0.1668  m2_loss_dice_2: 1.376  m2_loss_ce_3: 0.5617  m2_loss_mask_3: 0.168  m2_loss_dice_3: 1.339  m2_loss_ce_4: 0.5329  m2_loss_mask_4: 0.1641  m2_loss_dice_4: 1.327  m2_loss_ce_5: 0.5192  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.5046  m2_loss_mask_6: 0.1672  m2_loss_dice_6: 1.302  m2_loss_ce_7: 0.5218  m2_loss_mask_7: 0.1669  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.5025  m2_loss_mask_8: 0.1658  m2_loss_dice_8: 1.277    time: 1.3940  last_time: 1.4039  data_time: 0.0488  last_data_time: 0.0435   lr: 0.0001  max_mem: 34962M
[10/03 10:01:16] d2.utils.events INFO:  eta: 0:04:10  iter: 819  total_loss: 39.67  m1_loss_ce: 0.4463  m1_loss_mask: 0.155  m1_loss_dice: 1.159  m1_loss_ce_0: 0.5647  m1_loss_mask_0: 0.1797  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6274  m1_loss_mask_1: 0.1664  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5763  m1_loss_mask_2: 0.1633  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.5018  m1_loss_mask_3: 0.1629  m1_loss_dice_3: 1.181  m1_loss_ce_4: 0.4826  m1_loss_mask_4: 0.1614  m1_loss_dice_4: 1.183  m1_loss_ce_5: 0.4847  m1_loss_mask_5: 0.1583  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.456  m1_loss_mask_6: 0.1575  m1_loss_dice_6: 1.19  m1_loss_ce_7: 0.4419  m1_loss_mask_7: 0.1576  m1_loss_dice_7: 1.159  m1_loss_ce_8: 0.4366  m1_loss_mask_8: 0.156  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4604  m2_loss_mask: 0.1608  m2_loss_dice: 1.204  m2_loss_ce_0: 0.6234  m2_loss_mask_0: 0.1931  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6905  m2_loss_mask_1: 0.178  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.5893  m2_loss_mask_2: 0.1656  m2_loss_dice_2: 1.301  m2_loss_ce_3: 0.5273  m2_loss_mask_3: 0.1602  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.4902  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.5247  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.497  m2_loss_mask_6: 0.1633  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4412  m2_loss_mask_7: 0.1616  m2_loss_dice_7: 1.19  m2_loss_ce_8: 0.4457  m2_loss_mask_8: 0.1599  m2_loss_dice_8: 1.21    time: 1.3943  last_time: 1.2746  data_time: 0.0566  last_data_time: 0.0547   lr: 0.0001  max_mem: 34962M
[10/03 10:01:44] d2.utils.events INFO:  eta: 0:03:42  iter: 839  total_loss: 39.24  m1_loss_ce: 0.4538  m1_loss_mask: 0.1582  m1_loss_dice: 1.205  m1_loss_ce_0: 0.5593  m1_loss_mask_0: 0.1956  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6348  m1_loss_mask_1: 0.178  m1_loss_dice_1: 1.396  m1_loss_ce_2: 0.5592  m1_loss_mask_2: 0.1728  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.4916  m1_loss_mask_3: 0.169  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.5001  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.5119  m1_loss_mask_5: 0.1641  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.4636  m1_loss_mask_6: 0.1625  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.4675  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.206  m1_loss_ce_8: 0.4571  m1_loss_mask_8: 0.1611  m1_loss_dice_8: 1.203  m2_loss_ce: 0.5095  m2_loss_mask: 0.1717  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6334  m2_loss_mask_0: 0.2043  m2_loss_dice_0: 1.508  m2_loss_ce_1: 0.6772  m2_loss_mask_1: 0.184  m2_loss_dice_1: 1.414  m2_loss_ce_2: 0.6165  m2_loss_mask_2: 0.1676  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5568  m2_loss_mask_3: 0.1723  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5052  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5384  m2_loss_mask_5: 0.1688  m2_loss_dice_5: 1.264  m2_loss_ce_6: 0.497  m2_loss_mask_6: 0.1709  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.4867  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.4925  m2_loss_mask_8: 0.1698  m2_loss_dice_8: 1.284    time: 1.3943  last_time: 1.4350  data_time: 0.0490  last_data_time: 0.0541   lr: 0.0001  max_mem: 34962M
[10/03 10:02:12] d2.utils.events INFO:  eta: 0:03:14  iter: 859  total_loss: 38.76  m1_loss_ce: 0.4503  m1_loss_mask: 0.1704  m1_loss_dice: 1.143  m1_loss_ce_0: 0.5568  m1_loss_mask_0: 0.1985  m1_loss_dice_0: 1.323  m1_loss_ce_1: 0.6238  m1_loss_mask_1: 0.183  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5699  m1_loss_mask_2: 0.177  m1_loss_dice_2: 1.219  m1_loss_ce_3: 0.4914  m1_loss_mask_3: 0.1738  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.4763  m1_loss_mask_4: 0.1727  m1_loss_dice_4: 1.149  m1_loss_ce_5: 0.4796  m1_loss_mask_5: 0.1737  m1_loss_dice_5: 1.173  m1_loss_ce_6: 0.464  m1_loss_mask_6: 0.1706  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.4664  m1_loss_mask_7: 0.172  m1_loss_dice_7: 1.139  m1_loss_ce_8: 0.4609  m1_loss_mask_8: 0.1714  m1_loss_dice_8: 1.155  m2_loss_ce: 0.5028  m2_loss_mask: 0.1775  m2_loss_dice: 1.209  m2_loss_ce_0: 0.6177  m2_loss_mask_0: 0.2025  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.706  m2_loss_mask_1: 0.1944  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.6177  m2_loss_mask_2: 0.1847  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5908  m2_loss_mask_3: 0.1788  m2_loss_dice_3: 1.202  m2_loss_ce_4: 0.5498  m2_loss_mask_4: 0.178  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.54  m2_loss_mask_5: 0.1773  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.5007  m2_loss_mask_6: 0.1759  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4976  m2_loss_mask_7: 0.1759  m2_loss_dice_7: 1.184  m2_loss_ce_8: 0.5024  m2_loss_mask_8: 0.1767  m2_loss_dice_8: 1.197    time: 1.3940  last_time: 1.4162  data_time: 0.0486  last_data_time: 0.0605   lr: 0.0001  max_mem: 34962M
[10/03 10:02:40] d2.utils.events INFO:  eta: 0:02:46  iter: 879  total_loss: 37.27  m1_loss_ce: 0.3901  m1_loss_mask: 0.1692  m1_loss_dice: 1.149  m1_loss_ce_0: 0.4714  m1_loss_mask_0: 0.1993  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.538  m1_loss_mask_1: 0.1882  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.502  m1_loss_mask_2: 0.1778  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.4697  m1_loss_mask_3: 0.1758  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4649  m1_loss_mask_4: 0.1764  m1_loss_dice_4: 1.163  m1_loss_ce_5: 0.4307  m1_loss_mask_5: 0.1751  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.4154  m1_loss_mask_6: 0.1733  m1_loss_dice_6: 1.156  m1_loss_ce_7: 0.4066  m1_loss_mask_7: 0.171  m1_loss_dice_7: 1.179  m1_loss_ce_8: 0.401  m1_loss_mask_8: 0.1715  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4433  m2_loss_mask: 0.1777  m2_loss_dice: 1.201  m2_loss_ce_0: 0.5512  m2_loss_mask_0: 0.2122  m2_loss_dice_0: 1.433  m2_loss_ce_1: 0.6003  m2_loss_mask_1: 0.1961  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.4979  m2_loss_mask_2: 0.1827  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.4741  m2_loss_mask_3: 0.1805  m2_loss_dice_3: 1.218  m2_loss_ce_4: 0.4743  m2_loss_mask_4: 0.1789  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.465  m2_loss_mask_5: 0.1768  m2_loss_dice_5: 1.269  m2_loss_ce_6: 0.4544  m2_loss_mask_6: 0.1776  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4369  m2_loss_mask_7: 0.1785  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4168  m2_loss_mask_8: 0.1761  m2_loss_dice_8: 1.211    time: 1.3942  last_time: 1.3406  data_time: 0.0551  last_data_time: 0.0523   lr: 0.0001  max_mem: 34962M
[10/03 10:03:08] d2.utils.events INFO:  eta: 0:02:18  iter: 899  total_loss: 38.14  m1_loss_ce: 0.4101  m1_loss_mask: 0.1595  m1_loss_dice: 1.157  m1_loss_ce_0: 0.5216  m1_loss_mask_0: 0.1926  m1_loss_dice_0: 1.398  m1_loss_ce_1: 0.5935  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.262  m1_loss_ce_2: 0.5147  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.229  m1_loss_ce_3: 0.4731  m1_loss_mask_3: 0.1653  m1_loss_dice_3: 1.197  m1_loss_ce_4: 0.4413  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.208  m1_loss_ce_5: 0.4395  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.167  m1_loss_ce_6: 0.4343  m1_loss_mask_6: 0.1615  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4282  m1_loss_mask_7: 0.1623  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.4278  m1_loss_mask_8: 0.1602  m1_loss_dice_8: 1.124  m2_loss_ce: 0.447  m2_loss_mask: 0.165  m2_loss_dice: 1.236  m2_loss_ce_0: 0.587  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.443  m2_loss_ce_1: 0.6623  m2_loss_mask_1: 0.1858  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5751  m2_loss_mask_2: 0.1648  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5147  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.4876  m2_loss_mask_4: 0.1646  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.521  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.214  m2_loss_ce_6: 0.4561  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.236  m2_loss_ce_7: 0.4794  m2_loss_mask_7: 0.1669  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.4784  m2_loss_mask_8: 0.1687  m2_loss_dice_8: 1.253    time: 1.3945  last_time: 1.4462  data_time: 0.0584  last_data_time: 0.1106   lr: 0.0001  max_mem: 34962M
[10/03 10:03:36] d2.utils.events INFO:  eta: 0:01:51  iter: 919  total_loss: 38.78  m1_loss_ce: 0.4129  m1_loss_mask: 0.1632  m1_loss_dice: 1.223  m1_loss_ce_0: 0.5358  m1_loss_mask_0: 0.1843  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.5799  m1_loss_mask_1: 0.1741  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5477  m1_loss_mask_2: 0.1695  m1_loss_dice_2: 1.304  m1_loss_ce_3: 0.5119  m1_loss_mask_3: 0.1634  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.4834  m1_loss_mask_4: 0.1619  m1_loss_dice_4: 1.213  m1_loss_ce_5: 0.4648  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.172  m1_loss_ce_6: 0.425  m1_loss_mask_6: 0.1631  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.4255  m1_loss_mask_7: 0.162  m1_loss_dice_7: 1.211  m1_loss_ce_8: 0.4395  m1_loss_mask_8: 0.1619  m1_loss_dice_8: 1.214  m2_loss_ce: 0.4562  m2_loss_mask: 0.1649  m2_loss_dice: 1.256  m2_loss_ce_0: 0.653  m2_loss_mask_0: 0.1926  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.642  m2_loss_mask_1: 0.1825  m2_loss_dice_1: 1.41  m2_loss_ce_2: 0.5766  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5139  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.238  m2_loss_ce_4: 0.5206  m2_loss_mask_4: 0.1635  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.4985  m2_loss_mask_5: 0.1613  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.4541  m2_loss_mask_6: 0.1656  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.4773  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4457  m2_loss_mask_8: 0.1642  m2_loss_dice_8: 1.25    time: 1.3943  last_time: 1.3215  data_time: 0.0546  last_data_time: 0.0466   lr: 0.0001  max_mem: 34962M
[10/03 10:04:05] d2.utils.events INFO:  eta: 0:01:23  iter: 939  total_loss: 38.6  m1_loss_ce: 0.4246  m1_loss_mask: 0.1501  m1_loss_dice: 1.21  m1_loss_ce_0: 0.5143  m1_loss_mask_0: 0.1815  m1_loss_dice_0: 1.452  m1_loss_ce_1: 0.5703  m1_loss_mask_1: 0.1677  m1_loss_dice_1: 1.367  m1_loss_ce_2: 0.5515  m1_loss_mask_2: 0.1599  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.4703  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.4666  m1_loss_mask_4: 0.1558  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.459  m1_loss_mask_5: 0.1506  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.4366  m1_loss_mask_6: 0.153  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.4377  m1_loss_mask_7: 0.1514  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.4325  m1_loss_mask_8: 0.151  m1_loss_dice_8: 1.218  m2_loss_ce: 0.4492  m2_loss_mask: 0.1594  m2_loss_dice: 1.262  m2_loss_ce_0: 0.615  m2_loss_mask_0: 0.1887  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.6562  m2_loss_mask_1: 0.1767  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.5541  m2_loss_mask_2: 0.1618  m2_loss_dice_2: 1.34  m2_loss_ce_3: 0.5261  m2_loss_mask_3: 0.1622  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.4878  m2_loss_mask_4: 0.1576  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.4852  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4574  m2_loss_mask_6: 0.1598  m2_loss_dice_6: 1.234  m2_loss_ce_7: 0.4383  m2_loss_mask_7: 0.1601  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4511  m2_loss_mask_8: 0.157  m2_loss_dice_8: 1.223    time: 1.3950  last_time: 1.5614  data_time: 0.0544  last_data_time: 0.0688   lr: 0.0001  max_mem: 35178M
[10/03 10:04:33] d2.utils.events INFO:  eta: 0:00:55  iter: 959  total_loss: 39.86  m1_loss_ce: 0.4587  m1_loss_mask: 0.1731  m1_loss_dice: 1.241  m1_loss_ce_0: 0.5826  m1_loss_mask_0: 0.1878  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6185  m1_loss_mask_1: 0.1787  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.6043  m1_loss_mask_2: 0.179  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.5291  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.27  m1_loss_ce_4: 0.4923  m1_loss_mask_4: 0.1703  m1_loss_dice_4: 1.269  m1_loss_ce_5: 0.5066  m1_loss_mask_5: 0.1774  m1_loss_dice_5: 1.275  m1_loss_ce_6: 0.4519  m1_loss_mask_6: 0.1775  m1_loss_dice_6: 1.246  m1_loss_ce_7: 0.4498  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.4826  m1_loss_mask_8: 0.1743  m1_loss_dice_8: 1.251  m2_loss_ce: 0.5051  m2_loss_mask: 0.1752  m2_loss_dice: 1.296  m2_loss_ce_0: 0.6217  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6857  m2_loss_mask_1: 0.1874  m2_loss_dice_1: 1.409  m2_loss_ce_2: 0.62  m2_loss_mask_2: 0.1797  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5505  m2_loss_mask_3: 0.1756  m2_loss_dice_3: 1.326  m2_loss_ce_4: 0.5474  m2_loss_mask_4: 0.1746  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5451  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.289  m2_loss_ce_6: 0.5281  m2_loss_mask_6: 0.1775  m2_loss_dice_6: 1.286  m2_loss_ce_7: 0.5307  m2_loss_mask_7: 0.1751  m2_loss_dice_7: 1.294  m2_loss_ce_8: 0.4928  m2_loss_mask_8: 0.1756  m2_loss_dice_8: 1.281    time: 1.3951  last_time: 1.4309  data_time: 0.0497  last_data_time: 0.0512   lr: 0.0001  max_mem: 35178M
[10/03 10:05:00] d2.utils.events INFO:  eta: 0:00:27  iter: 979  total_loss: 36.17  m1_loss_ce: 0.4197  m1_loss_mask: 0.1615  m1_loss_dice: 1.096  m1_loss_ce_0: 0.5208  m1_loss_mask_0: 0.1872  m1_loss_dice_0: 1.232  m1_loss_ce_1: 0.5623  m1_loss_mask_1: 0.175  m1_loss_dice_1: 1.248  m1_loss_ce_2: 0.5403  m1_loss_mask_2: 0.1706  m1_loss_dice_2: 1.168  m1_loss_ce_3: 0.4912  m1_loss_mask_3: 0.1657  m1_loss_dice_3: 1.113  m1_loss_ce_4: 0.4432  m1_loss_mask_4: 0.1636  m1_loss_dice_4: 1.097  m1_loss_ce_5: 0.454  m1_loss_mask_5: 0.1639  m1_loss_dice_5: 1.129  m1_loss_ce_6: 0.4184  m1_loss_mask_6: 0.1638  m1_loss_dice_6: 1.133  m1_loss_ce_7: 0.412  m1_loss_mask_7: 0.1637  m1_loss_dice_7: 1.14  m1_loss_ce_8: 0.4344  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.129  m2_loss_ce: 0.4528  m2_loss_mask: 0.1671  m2_loss_dice: 1.177  m2_loss_ce_0: 0.5748  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.345  m2_loss_ce_1: 0.6491  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.5565  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.5042  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.4872  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.187  m2_loss_ce_5: 0.4759  m2_loss_mask_5: 0.1662  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.4567  m2_loss_mask_6: 0.1647  m2_loss_dice_6: 1.179  m2_loss_ce_7: 0.4717  m2_loss_mask_7: 0.1644  m2_loss_dice_7: 1.141  m2_loss_ce_8: 0.4535  m2_loss_mask_8: 0.1671  m2_loss_dice_8: 1.144    time: 1.3946  last_time: 1.4020  data_time: 0.0539  last_data_time: 0.0530   lr: 0.0001  max_mem: 35178M
[10/03 10:05:28] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6/model_final.pth
[10/03 10:05:31] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 39.43  m1_loss_ce: 0.431  m1_loss_mask: 0.1644  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5357  m1_loss_mask_0: 0.1917  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.5688  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.549  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.254  m1_loss_ce_3: 0.4698  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.243  m1_loss_ce_4: 0.4593  m1_loss_mask_4: 0.1639  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.457  m1_loss_mask_5: 0.1623  m1_loss_dice_5: 1.272  m1_loss_ce_6: 0.4166  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4412  m1_loss_mask_7: 0.1647  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.4386  m1_loss_mask_8: 0.1636  m1_loss_dice_8: 1.203  m2_loss_ce: 0.4424  m2_loss_mask: 0.1674  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6158  m2_loss_mask_0: 0.1878  m2_loss_dice_0: 1.434  m2_loss_ce_1: 0.6401  m2_loss_mask_1: 0.1841  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.5624  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.338  m2_loss_ce_3: 0.5091  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.4991  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.4873  m2_loss_mask_5: 0.1656  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4965  m2_loss_mask_6: 0.1688  m2_loss_dice_6: 1.263  m2_loss_ce_7: 0.4751  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.4665  m2_loss_mask_8: 0.1649  m2_loss_dice_8: 1.242    time: 1.3946  last_time: 1.4198  data_time: 0.0502  last_data_time: 0.0494   lr: 0.0001  max_mem: 35178M
[10/03 10:05:31] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:23:11 (1.3947 s / it)
[10/03 10:05:31] d2.engine.hooks INFO: Total training time: 0:23:19 (0:00:08 on hooks)
[10/03 10:05:31] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/03 10:05:31] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/03 10:05:31] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/03 10:05:31] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/03 10:05:31] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/03 10:06:57] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalyh1o5z_d ...
[10/03 10:08:03] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.372 | 80.504 | 70.140 |      19       |
| Things | 47.875 | 79.631 | 60.107 |       8       |
| Stuff  | 64.279 | 81.138 | 77.437 |      11       |
[10/03 10:08:03] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.353 | 97.758 | 99.586 |     Stuff     |
| class_8  | 74.580 | 84.087 | 88.694 |     Stuff     |
| class_11 | 87.296 | 89.115 | 97.959 |     Stuff     |
| class_12 | 43.082 | 79.387 | 54.268 |     Stuff     |
| class_13 | 36.961 | 75.691 | 48.831 |     Stuff     |
| class_17 | 42.503 | 64.152 | 66.254 |     Stuff     |
| class_19 | 47.823 | 68.318 | 70.000 |     Stuff     |
| class_20 | 66.377 | 77.633 | 85.501 |     Stuff     |
| class_21 | 88.787 | 89.890 | 98.773 |     Stuff     |
| class_22 | 34.749 | 74.758 | 46.482 |     Stuff     |
| class_23 | 87.563 | 91.732 | 95.455 |     Stuff     |
| class_24 | 52.905 | 76.645 | 69.026 |    Things     |
| class_25 | 48.709 | 73.827 | 65.977 |    Things     |
| class_26 | 65.738 | 83.405 | 78.818 |    Things     |
| class_27 | 47.317 | 85.412 | 55.399 |    Things     |
| class_28 | 55.800 | 87.816 | 63.542 |    Things     |
| class_31 | 35.878 | 84.570 | 42.424 |    Things     |
| class_32 | 35.664 | 74.300 | 48.000 |    Things     |
| class_33 | 40.990 | 71.076 | 57.671 |    Things     |
[10/03 10:08:03] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/03 10:08:03] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/03 10:08:03] d2.evaluation.testing INFO: copypaste: 57.3724,80.5038,70.1400,47.8753,79.6315,60.1072,64.2794,81.1383,77.4366,97.3531,97.7579,99.5859,74.5797,84.0868,88.6937,87.2964,89.1151,97.9592,43.0819,79.3869,54.2683,36.9607,75.6907,48.8312,42.5029,64.1516,66.2539,47.8226,68.3180,70.0000,66.3771,77.6330,85.5011,88.7871,89.8901,98.7730,34.7491,74.7583,46.4819,87.5628,91.7324,95.4545,52.9051,76.6449,69.0263,48.7093,73.8274,65.9772,65.7382,83.4048,78.8182,47.3174,85.4119,55.3991,55.7999,87.8162,63.5417,35.8784,84.5704,42.4242,35.6641,74.3003,48.0000,40.9901,71.0757,57.6710
[10/13 17:36:29] detectron2 INFO: Rank of current process: 0. World size: 2
[10/13 17:36:30] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/13 17:36:30] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_4_0_6_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/13 17:36:30] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_4_0_6_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/13 17:36:30] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/13 17:36:30] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6/config.yaml
[10/13 17:36:30] d2.utils.env INFO: Using a generated random seed 31954953
[10/13 17:36:34] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/13 17:36:34] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/13 17:36:34] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/13 17:36:34] d2.data.build INFO: Using training sampler TrainingSampler
[10/13 17:36:35] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/13 17:36:35] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/13 17:36:35] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/13 17:36:35] d2.data.build INFO: Making batched data loader with batch_size=4
[10/13 17:36:35] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/13 17:36:39] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/13 17:36:39] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 17:36:39] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 17:36:48] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 17:36:48] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 17:37:24] d2.utils.events INFO:  eta: 0:22:37  iter: 19  total_loss: 39.87  m1_loss_ce: 0.4447  m1_loss_mask: 0.1597  m1_loss_dice: 1.269  m1_loss_ce_0: 0.5478  m1_loss_mask_0: 0.1796  m1_loss_dice_0: 1.491  m1_loss_ce_1: 0.6453  m1_loss_mask_1: 0.1744  m1_loss_dice_1: 1.392  m1_loss_ce_2: 0.5352  m1_loss_mask_2: 0.1642  m1_loss_dice_2: 1.333  m1_loss_ce_3: 0.4974  m1_loss_mask_3: 0.1605  m1_loss_dice_3: 1.286  m1_loss_ce_4: 0.4786  m1_loss_mask_4: 0.1598  m1_loss_dice_4: 1.273  m1_loss_ce_5: 0.4686  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.4609  m1_loss_mask_6: 0.1605  m1_loss_dice_6: 1.262  m1_loss_ce_7: 0.4368  m1_loss_mask_7: 0.1593  m1_loss_dice_7: 1.262  m1_loss_ce_8: 0.4487  m1_loss_mask_8: 0.1585  m1_loss_dice_8: 1.254  m2_loss_ce: 0.4761  m2_loss_mask: 0.1526  m2_loss_dice: 1.279  m2_loss_ce_0: 0.5592  m2_loss_mask_0: 0.1812  m2_loss_dice_0: 1.47  m2_loss_ce_1: 0.6514  m2_loss_mask_1: 0.1751  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.5499  m2_loss_mask_2: 0.1563  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5207  m2_loss_mask_3: 0.1537  m2_loss_dice_3: 1.262  m2_loss_ce_4: 0.4967  m2_loss_mask_4: 0.1549  m2_loss_dice_4: 1.281  m2_loss_ce_5: 0.4724  m2_loss_mask_5: 0.1536  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.4712  m2_loss_mask_6: 0.1544  m2_loss_dice_6: 1.272  m2_loss_ce_7: 0.4623  m2_loss_mask_7: 0.1526  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.4839  m2_loss_mask_8: 0.1543  m2_loss_dice_8: 1.224    time: 1.4090  last_time: 1.5489  data_time: 0.2737  last_data_time: 0.0514   lr: 0.0001  max_mem: 33770M
[10/13 17:37:52] d2.utils.events INFO:  eta: 0:22:18  iter: 39  total_loss: 42.1  m1_loss_ce: 0.4837  m1_loss_mask: 0.1763  m1_loss_dice: 1.286  m1_loss_ce_0: 0.6108  m1_loss_mask_0: 0.208  m1_loss_dice_0: 1.552  m1_loss_ce_1: 0.6857  m1_loss_mask_1: 0.1944  m1_loss_dice_1: 1.468  m1_loss_ce_2: 0.6339  m1_loss_mask_2: 0.1858  m1_loss_dice_2: 1.37  m1_loss_ce_3: 0.62  m1_loss_mask_3: 0.18  m1_loss_dice_3: 1.31  m1_loss_ce_4: 0.5534  m1_loss_mask_4: 0.1762  m1_loss_dice_4: 1.311  m1_loss_ce_5: 0.5139  m1_loss_mask_5: 0.1754  m1_loss_dice_5: 1.296  m1_loss_ce_6: 0.5164  m1_loss_mask_6: 0.1762  m1_loss_dice_6: 1.282  m1_loss_ce_7: 0.4693  m1_loss_mask_7: 0.1771  m1_loss_dice_7: 1.315  m1_loss_ce_8: 0.4887  m1_loss_mask_8: 0.1758  m1_loss_dice_8: 1.302  m2_loss_ce: 0.5105  m2_loss_mask: 0.1777  m2_loss_dice: 1.275  m2_loss_ce_0: 0.6472  m2_loss_mask_0: 0.2177  m2_loss_dice_0: 1.528  m2_loss_ce_1: 0.7189  m2_loss_mask_1: 0.1999  m2_loss_dice_1: 1.426  m2_loss_ce_2: 0.6239  m2_loss_mask_2: 0.1848  m2_loss_dice_2: 1.375  m2_loss_ce_3: 0.5844  m2_loss_mask_3: 0.1813  m2_loss_dice_3: 1.332  m2_loss_ce_4: 0.5598  m2_loss_mask_4: 0.1772  m2_loss_dice_4: 1.311  m2_loss_ce_5: 0.5642  m2_loss_mask_5: 0.1763  m2_loss_dice_5: 1.283  m2_loss_ce_6: 0.5296  m2_loss_mask_6: 0.1756  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.5472  m2_loss_mask_7: 0.1772  m2_loss_dice_7: 1.288  m2_loss_ce_8: 0.5238  m2_loss_mask_8: 0.1771  m2_loss_dice_8: 1.297    time: 1.4051  last_time: 1.3627  data_time: 0.0557  last_data_time: 0.0416   lr: 0.0001  max_mem: 33831M
[10/13 17:38:21] d2.utils.events INFO:  eta: 0:22:00  iter: 59  total_loss: 41.18  m1_loss_ce: 0.4588  m1_loss_mask: 0.1732  m1_loss_dice: 1.31  m1_loss_ce_0: 0.5664  m1_loss_mask_0: 0.1992  m1_loss_dice_0: 1.532  m1_loss_ce_1: 0.6589  m1_loss_mask_1: 0.1835  m1_loss_dice_1: 1.437  m1_loss_ce_2: 0.5737  m1_loss_mask_2: 0.1728  m1_loss_dice_2: 1.375  m1_loss_ce_3: 0.5682  m1_loss_mask_3: 0.1737  m1_loss_dice_3: 1.332  m1_loss_ce_4: 0.5232  m1_loss_mask_4: 0.1713  m1_loss_dice_4: 1.276  m1_loss_ce_5: 0.4943  m1_loss_mask_5: 0.1724  m1_loss_dice_5: 1.317  m1_loss_ce_6: 0.4868  m1_loss_mask_6: 0.1746  m1_loss_dice_6: 1.301  m1_loss_ce_7: 0.4651  m1_loss_mask_7: 0.1737  m1_loss_dice_7: 1.282  m1_loss_ce_8: 0.4398  m1_loss_mask_8: 0.1727  m1_loss_dice_8: 1.274  m2_loss_ce: 0.461  m2_loss_mask: 0.1651  m2_loss_dice: 1.26  m2_loss_ce_0: 0.5993  m2_loss_mask_0: 0.2023  m2_loss_dice_0: 1.503  m2_loss_ce_1: 0.67  m2_loss_mask_1: 0.189  m2_loss_dice_1: 1.434  m2_loss_ce_2: 0.5835  m2_loss_mask_2: 0.1708  m2_loss_dice_2: 1.352  m2_loss_ce_3: 0.5084  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.299  m2_loss_ce_4: 0.5152  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.525  m2_loss_mask_5: 0.1655  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.467  m2_loss_mask_6: 0.1658  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.4819  m2_loss_mask_7: 0.167  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4538  m2_loss_mask_8: 0.1657  m2_loss_dice_8: 1.274    time: 1.4151  last_time: 1.4766  data_time: 0.0578  last_data_time: 0.0689   lr: 0.0001  max_mem: 34558M
[10/13 17:38:49] d2.utils.events INFO:  eta: 0:21:33  iter: 79  total_loss: 38.65  m1_loss_ce: 0.4833  m1_loss_mask: 0.1683  m1_loss_dice: 1.231  m1_loss_ce_0: 0.5447  m1_loss_mask_0: 0.2024  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.6314  m1_loss_mask_1: 0.1844  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.5844  m1_loss_mask_2: 0.175  m1_loss_dice_2: 1.286  m1_loss_ce_3: 0.5708  m1_loss_mask_3: 0.1731  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.532  m1_loss_mask_4: 0.1737  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.5212  m1_loss_mask_5: 0.1729  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.5031  m1_loss_mask_6: 0.1707  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4825  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4678  m1_loss_mask_8: 0.1686  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4538  m2_loss_mask: 0.1654  m2_loss_dice: 1.234  m2_loss_ce_0: 0.5929  m2_loss_mask_0: 0.1962  m2_loss_dice_0: 1.421  m2_loss_ce_1: 0.6495  m2_loss_mask_1: 0.183  m2_loss_dice_1: 1.314  m2_loss_ce_2: 0.5631  m2_loss_mask_2: 0.1694  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5321  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.4939  m2_loss_mask_4: 0.1684  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.493  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.4817  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4769  m2_loss_mask_7: 0.1676  m2_loss_dice_7: 1.191  m2_loss_ce_8: 0.4711  m2_loss_mask_8: 0.1661  m2_loss_dice_8: 1.183    time: 1.4138  last_time: 1.3088  data_time: 0.0504  last_data_time: 0.0443   lr: 0.0001  max_mem: 34558M
[10/13 17:39:17] d2.utils.events INFO:  eta: 0:21:05  iter: 99  total_loss: 40.83  m1_loss_ce: 0.4777  m1_loss_mask: 0.1579  m1_loss_dice: 1.273  m1_loss_ce_0: 0.5895  m1_loss_mask_0: 0.1988  m1_loss_dice_0: 1.449  m1_loss_ce_1: 0.6679  m1_loss_mask_1: 0.1813  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.5964  m1_loss_mask_2: 0.1644  m1_loss_dice_2: 1.328  m1_loss_ce_3: 0.5554  m1_loss_mask_3: 0.1633  m1_loss_dice_3: 1.282  m1_loss_ce_4: 0.509  m1_loss_mask_4: 0.1594  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.5291  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.273  m1_loss_ce_6: 0.5319  m1_loss_mask_6: 0.1604  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4906  m1_loss_mask_7: 0.1566  m1_loss_dice_7: 1.284  m1_loss_ce_8: 0.4964  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.273  m2_loss_ce: 0.5019  m2_loss_mask: 0.1542  m2_loss_dice: 1.289  m2_loss_ce_0: 0.6139  m2_loss_mask_0: 0.1909  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.707  m2_loss_mask_1: 0.1732  m2_loss_dice_1: 1.394  m2_loss_ce_2: 0.5812  m2_loss_mask_2: 0.1588  m2_loss_dice_2: 1.347  m2_loss_ce_3: 0.5412  m2_loss_mask_3: 0.1586  m2_loss_dice_3: 1.28  m2_loss_ce_4: 0.5139  m2_loss_mask_4: 0.1542  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.5204  m2_loss_mask_5: 0.1534  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.4982  m2_loss_mask_6: 0.1548  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.512  m2_loss_mask_7: 0.1529  m2_loss_dice_7: 1.301  m2_loss_ce_8: 0.5036  m2_loss_mask_8: 0.1532  m2_loss_dice_8: 1.262    time: 1.4120  last_time: 1.3510  data_time: 0.0513  last_data_time: 0.0697   lr: 0.0001  max_mem: 34558M
[10/13 17:39:46] d2.utils.events INFO:  eta: 0:20:37  iter: 119  total_loss: 38.99  m1_loss_ce: 0.4573  m1_loss_mask: 0.1623  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5922  m1_loss_mask_0: 0.1919  m1_loss_dice_0: 1.444  m1_loss_ce_1: 0.6387  m1_loss_mask_1: 0.1768  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.6051  m1_loss_mask_2: 0.1654  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.5398  m1_loss_mask_3: 0.1639  m1_loss_dice_3: 1.236  m1_loss_ce_4: 0.4938  m1_loss_mask_4: 0.162  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4925  m1_loss_mask_5: 0.1603  m1_loss_dice_5: 1.243  m1_loss_ce_6: 0.4633  m1_loss_mask_6: 0.1609  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4567  m1_loss_mask_7: 0.1611  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4466  m1_loss_mask_8: 0.1608  m1_loss_dice_8: 1.182  m2_loss_ce: 0.4604  m2_loss_mask: 0.1672  m2_loss_dice: 1.246  m2_loss_ce_0: 0.5938  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6831  m2_loss_mask_1: 0.1813  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.5852  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.349  m2_loss_ce_3: 0.5535  m2_loss_mask_3: 0.1719  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.5386  m2_loss_mask_4: 0.1689  m2_loss_dice_4: 1.255  m2_loss_ce_5: 0.4909  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.268  m2_loss_ce_6: 0.4966  m2_loss_mask_6: 0.1671  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4852  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.232  m2_loss_ce_8: 0.4887  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.254    time: 1.4157  last_time: 1.3946  data_time: 0.0573  last_data_time: 0.0611   lr: 0.0001  max_mem: 34558M
[10/13 17:40:15] d2.utils.events INFO:  eta: 0:20:11  iter: 139  total_loss: 40.13  m1_loss_ce: 0.5039  m1_loss_mask: 0.1598  m1_loss_dice: 1.2  m1_loss_ce_0: 0.5885  m1_loss_mask_0: 0.1903  m1_loss_dice_0: 1.406  m1_loss_ce_1: 0.6827  m1_loss_mask_1: 0.1748  m1_loss_dice_1: 1.358  m1_loss_ce_2: 0.6061  m1_loss_mask_2: 0.1688  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.5545  m1_loss_mask_3: 0.1649  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.5123  m1_loss_mask_4: 0.1649  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.5263  m1_loss_mask_5: 0.1647  m1_loss_dice_5: 1.205  m1_loss_ce_6: 0.5197  m1_loss_mask_6: 0.165  m1_loss_dice_6: 1.207  m1_loss_ce_7: 0.5073  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.208  m1_loss_ce_8: 0.488  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4921  m2_loss_mask: 0.1676  m2_loss_dice: 1.284  m2_loss_ce_0: 0.6147  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.434  m2_loss_ce_1: 0.6986  m2_loss_mask_1: 0.1812  m2_loss_dice_1: 1.368  m2_loss_ce_2: 0.5859  m2_loss_mask_2: 0.1721  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.5786  m2_loss_mask_3: 0.1702  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5569  m2_loss_mask_4: 0.1673  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5574  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4805  m2_loss_mask_6: 0.1702  m2_loss_dice_6: 1.265  m2_loss_ce_7: 0.5031  m2_loss_mask_7: 0.169  m2_loss_dice_7: 1.257  m2_loss_ce_8: 0.5328  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.271    time: 1.4176  last_time: 1.5281  data_time: 0.0542  last_data_time: 0.0456   lr: 0.0001  max_mem: 34558M
[10/13 17:40:43] d2.utils.events INFO:  eta: 0:19:45  iter: 159  total_loss: 40.13  m1_loss_ce: 0.4854  m1_loss_mask: 0.1622  m1_loss_dice: 1.2  m1_loss_ce_0: 0.5824  m1_loss_mask_0: 0.1829  m1_loss_dice_0: 1.502  m1_loss_ce_1: 0.6004  m1_loss_mask_1: 0.1757  m1_loss_dice_1: 1.361  m1_loss_ce_2: 0.5955  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.282  m1_loss_ce_3: 0.5415  m1_loss_mask_3: 0.1637  m1_loss_dice_3: 1.213  m1_loss_ce_4: 0.5293  m1_loss_mask_4: 0.1634  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.5251  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.4885  m1_loss_mask_6: 0.1627  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4982  m1_loss_mask_7: 0.1636  m1_loss_dice_7: 1.258  m1_loss_ce_8: 0.4813  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.208  m2_loss_ce: 0.4889  m2_loss_mask: 0.1621  m2_loss_dice: 1.226  m2_loss_ce_0: 0.5984  m2_loss_mask_0: 0.1835  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6873  m2_loss_mask_1: 0.175  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.5891  m2_loss_mask_2: 0.1591  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.5219  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.271  m2_loss_ce_4: 0.5288  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.229  m2_loss_ce_5: 0.5199  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.4937  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.24  m2_loss_ce_7: 0.5053  m2_loss_mask_7: 0.1625  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4505  m2_loss_mask_8: 0.1619  m2_loss_dice_8: 1.253    time: 1.4184  last_time: 1.3664  data_time: 0.0595  last_data_time: 0.0506   lr: 0.0001  max_mem: 34558M
[10/13 17:41:11] d2.utils.events INFO:  eta: 0:19:15  iter: 179  total_loss: 39.05  m1_loss_ce: 0.4497  m1_loss_mask: 0.1723  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5536  m1_loss_mask_0: 0.2014  m1_loss_dice_0: 1.473  m1_loss_ce_1: 0.6339  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.5826  m1_loss_mask_2: 0.1806  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5229  m1_loss_mask_3: 0.1755  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.4777  m1_loss_mask_4: 0.1755  m1_loss_dice_4: 1.222  m1_loss_ce_5: 0.4688  m1_loss_mask_5: 0.1753  m1_loss_dice_5: 1.262  m1_loss_ce_6: 0.4657  m1_loss_mask_6: 0.1723  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.4777  m1_loss_mask_7: 0.1742  m1_loss_dice_7: 1.211  m1_loss_ce_8: 0.466  m1_loss_mask_8: 0.1741  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4562  m2_loss_mask: 0.1688  m2_loss_dice: 1.229  m2_loss_ce_0: 0.6101  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.657  m2_loss_mask_1: 0.1819  m2_loss_dice_1: 1.334  m2_loss_ce_2: 0.5556  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.303  m2_loss_ce_3: 0.5267  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5045  m2_loss_mask_4: 0.1712  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4919  m2_loss_mask_5: 0.1671  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.4634  m2_loss_mask_6: 0.1699  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.4568  m2_loss_mask_7: 0.1707  m2_loss_dice_7: 1.229  m2_loss_ce_8: 0.4871  m2_loss_mask_8: 0.1692  m2_loss_dice_8: 1.233    time: 1.4156  last_time: 1.4255  data_time: 0.0538  last_data_time: 0.0392   lr: 0.0001  max_mem: 34558M
[10/13 17:41:40] d2.utils.events INFO:  eta: 0:18:46  iter: 199  total_loss: 39.28  m1_loss_ce: 0.4122  m1_loss_mask: 0.1622  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5377  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.601  m1_loss_mask_1: 0.1752  m1_loss_dice_1: 1.386  m1_loss_ce_2: 0.5536  m1_loss_mask_2: 0.1678  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.5034  m1_loss_mask_3: 0.1666  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.4601  m1_loss_mask_4: 0.1703  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.462  m1_loss_mask_5: 0.1723  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.4418  m1_loss_mask_6: 0.1659  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4136  m1_loss_mask_7: 0.1617  m1_loss_dice_7: 1.249  m1_loss_ce_8: 0.4272  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.207  m2_loss_ce: 0.4471  m2_loss_mask: 0.1666  m2_loss_dice: 1.233  m2_loss_ce_0: 0.6073  m2_loss_mask_0: 0.1827  m2_loss_dice_0: 1.408  m2_loss_ce_1: 0.6612  m2_loss_mask_1: 0.1807  m2_loss_dice_1: 1.348  m2_loss_ce_2: 0.5848  m2_loss_mask_2: 0.1732  m2_loss_dice_2: 1.297  m2_loss_ce_3: 0.5143  m2_loss_mask_3: 0.1654  m2_loss_dice_3: 1.208  m2_loss_ce_4: 0.4916  m2_loss_mask_4: 0.164  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.4523  m2_loss_mask_5: 0.1622  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.4524  m2_loss_mask_6: 0.1631  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4764  m2_loss_mask_7: 0.1693  m2_loss_dice_7: 1.199  m2_loss_ce_8: 0.4529  m2_loss_mask_8: 0.1672  m2_loss_dice_8: 1.221    time: 1.4158  last_time: 1.4878  data_time: 0.0554  last_data_time: 0.0510   lr: 0.0001  max_mem: 34558M
[10/13 17:42:08] d2.utils.events INFO:  eta: 0:18:17  iter: 219  total_loss: 40.58  m1_loss_ce: 0.4974  m1_loss_mask: 0.1686  m1_loss_dice: 1.225  m1_loss_ce_0: 0.6122  m1_loss_mask_0: 0.2028  m1_loss_dice_0: 1.426  m1_loss_ce_1: 0.6118  m1_loss_mask_1: 0.1799  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.62  m1_loss_mask_2: 0.1703  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5301  m1_loss_mask_3: 0.1694  m1_loss_dice_3: 1.279  m1_loss_ce_4: 0.5293  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.5429  m1_loss_mask_5: 0.1709  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.5112  m1_loss_mask_6: 0.1704  m1_loss_dice_6: 1.25  m1_loss_ce_7: 0.5008  m1_loss_mask_7: 0.1681  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.514  m1_loss_mask_8: 0.1675  m1_loss_dice_8: 1.2  m2_loss_ce: 0.5095  m2_loss_mask: 0.1635  m2_loss_dice: 1.27  m2_loss_ce_0: 0.6222  m2_loss_mask_0: 0.1918  m2_loss_dice_0: 1.52  m2_loss_ce_1: 0.6858  m2_loss_mask_1: 0.1829  m2_loss_dice_1: 1.378  m2_loss_ce_2: 0.6013  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.311  m2_loss_ce_3: 0.5307  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.5452  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.5206  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.263  m2_loss_ce_6: 0.5002  m2_loss_mask_6: 0.1652  m2_loss_dice_6: 1.275  m2_loss_ce_7: 0.5096  m2_loss_mask_7: 0.1662  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.4918  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.286    time: 1.4142  last_time: 1.4350  data_time: 0.0480  last_data_time: 0.0494   lr: 0.0001  max_mem: 34558M
[10/13 17:42:36] d2.utils.events INFO:  eta: 0:17:50  iter: 239  total_loss: 39.97  m1_loss_ce: 0.483  m1_loss_mask: 0.1803  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5721  m1_loss_mask_0: 0.2143  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.6143  m1_loss_mask_1: 0.2067  m1_loss_dice_1: 1.378  m1_loss_ce_2: 0.5621  m1_loss_mask_2: 0.1882  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.4952  m1_loss_mask_3: 0.1899  m1_loss_dice_3: 1.258  m1_loss_ce_4: 0.5144  m1_loss_mask_4: 0.1885  m1_loss_dice_4: 1.239  m1_loss_ce_5: 0.4587  m1_loss_mask_5: 0.1898  m1_loss_dice_5: 1.257  m1_loss_ce_6: 0.4792  m1_loss_mask_6: 0.1823  m1_loss_dice_6: 1.216  m1_loss_ce_7: 0.4618  m1_loss_mask_7: 0.1832  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4714  m1_loss_mask_8: 0.185  m1_loss_dice_8: 1.254  m2_loss_ce: 0.4889  m2_loss_mask: 0.1839  m2_loss_dice: 1.257  m2_loss_ce_0: 0.624  m2_loss_mask_0: 0.2164  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6702  m2_loss_mask_1: 0.1978  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5797  m2_loss_mask_2: 0.185  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5349  m2_loss_mask_3: 0.1848  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5232  m2_loss_mask_4: 0.1825  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.481  m2_loss_mask_5: 0.1831  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4921  m2_loss_mask_6: 0.1839  m2_loss_dice_6: 1.246  m2_loss_ce_7: 0.5013  m2_loss_mask_7: 0.1841  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.4772  m2_loss_mask_8: 0.1806  m2_loss_dice_8: 1.243    time: 1.4147  last_time: 1.3817  data_time: 0.0519  last_data_time: 0.0466   lr: 0.0001  max_mem: 34558M
[10/13 17:43:05] d2.utils.events INFO:  eta: 0:17:21  iter: 259  total_loss: 41.15  m1_loss_ce: 0.5046  m1_loss_mask: 0.1656  m1_loss_dice: 1.285  m1_loss_ce_0: 0.5838  m1_loss_mask_0: 0.1952  m1_loss_dice_0: 1.469  m1_loss_ce_1: 0.6717  m1_loss_mask_1: 0.1863  m1_loss_dice_1: 1.409  m1_loss_ce_2: 0.6076  m1_loss_mask_2: 0.1747  m1_loss_dice_2: 1.355  m1_loss_ce_3: 0.5395  m1_loss_mask_3: 0.1732  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.5231  m1_loss_mask_4: 0.1728  m1_loss_dice_4: 1.3  m1_loss_ce_5: 0.5478  m1_loss_mask_5: 0.168  m1_loss_dice_5: 1.276  m1_loss_ce_6: 0.4698  m1_loss_mask_6: 0.1686  m1_loss_dice_6: 1.266  m1_loss_ce_7: 0.4761  m1_loss_mask_7: 0.1684  m1_loss_dice_7: 1.303  m1_loss_ce_8: 0.4934  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.292  m2_loss_ce: 0.4843  m2_loss_mask: 0.1656  m2_loss_dice: 1.287  m2_loss_ce_0: 0.622  m2_loss_mask_0: 0.2036  m2_loss_dice_0: 1.468  m2_loss_ce_1: 0.657  m2_loss_mask_1: 0.1882  m2_loss_dice_1: 1.42  m2_loss_ce_2: 0.5659  m2_loss_mask_2: 0.1741  m2_loss_dice_2: 1.374  m2_loss_ce_3: 0.5563  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.4882  m2_loss_mask_4: 0.1675  m2_loss_dice_4: 1.274  m2_loss_ce_5: 0.4991  m2_loss_mask_5: 0.1667  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.4763  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.4837  m2_loss_mask_7: 0.1664  m2_loss_dice_7: 1.249  m2_loss_ce_8: 0.4706  m2_loss_mask_8: 0.1659  m2_loss_dice_8: 1.283    time: 1.4148  last_time: 1.3627  data_time: 0.0483  last_data_time: 0.0496   lr: 0.0001  max_mem: 34558M
[10/13 17:43:33] d2.utils.events INFO:  eta: 0:16:52  iter: 279  total_loss: 38.77  m1_loss_ce: 0.4291  m1_loss_mask: 0.1774  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5396  m1_loss_mask_0: 0.1941  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.5705  m1_loss_mask_1: 0.1842  m1_loss_dice_1: 1.336  m1_loss_ce_2: 0.5369  m1_loss_mask_2: 0.1804  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.492  m1_loss_mask_3: 0.178  m1_loss_dice_3: 1.188  m1_loss_ce_4: 0.4834  m1_loss_mask_4: 0.1773  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.4852  m1_loss_mask_5: 0.1779  m1_loss_dice_5: 1.189  m1_loss_ce_6: 0.4413  m1_loss_mask_6: 0.1805  m1_loss_dice_6: 1.176  m1_loss_ce_7: 0.4757  m1_loss_mask_7: 0.1796  m1_loss_dice_7: 1.156  m1_loss_ce_8: 0.4335  m1_loss_mask_8: 0.1766  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4505  m2_loss_mask: 0.1766  m2_loss_dice: 1.177  m2_loss_ce_0: 0.5629  m2_loss_mask_0: 0.2085  m2_loss_dice_0: 1.375  m2_loss_ce_1: 0.6172  m2_loss_mask_1: 0.1982  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.548  m2_loss_mask_2: 0.1852  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.4928  m2_loss_mask_3: 0.1827  m2_loss_dice_3: 1.22  m2_loss_ce_4: 0.4784  m2_loss_mask_4: 0.1795  m2_loss_dice_4: 1.249  m2_loss_ce_5: 0.4981  m2_loss_mask_5: 0.1785  m2_loss_dice_5: 1.192  m2_loss_ce_6: 0.4542  m2_loss_mask_6: 0.1792  m2_loss_dice_6: 1.175  m2_loss_ce_7: 0.4571  m2_loss_mask_7: 0.1797  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.4749  m2_loss_mask_8: 0.1763  m2_loss_dice_8: 1.197    time: 1.4142  last_time: 1.4147  data_time: 0.0471  last_data_time: 0.0479   lr: 0.0001  max_mem: 34558M
[10/13 17:44:01] d2.utils.events INFO:  eta: 0:16:24  iter: 299  total_loss: 37.52  m1_loss_ce: 0.4336  m1_loss_mask: 0.1672  m1_loss_dice: 1.139  m1_loss_ce_0: 0.5547  m1_loss_mask_0: 0.1938  m1_loss_dice_0: 1.38  m1_loss_ce_1: 0.5773  m1_loss_mask_1: 0.1803  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.5477  m1_loss_mask_2: 0.1709  m1_loss_dice_2: 1.212  m1_loss_ce_3: 0.479  m1_loss_mask_3: 0.168  m1_loss_dice_3: 1.165  m1_loss_ce_4: 0.4403  m1_loss_mask_4: 0.1651  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.4596  m1_loss_mask_5: 0.167  m1_loss_dice_5: 1.148  m1_loss_ce_6: 0.3907  m1_loss_mask_6: 0.1678  m1_loss_dice_6: 1.154  m1_loss_ce_7: 0.4158  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.4254  m1_loss_mask_8: 0.1647  m1_loss_dice_8: 1.144  m2_loss_ce: 0.4372  m2_loss_mask: 0.1643  m2_loss_dice: 1.164  m2_loss_ce_0: 0.5786  m2_loss_mask_0: 0.2014  m2_loss_dice_0: 1.357  m2_loss_ce_1: 0.6282  m2_loss_mask_1: 0.1926  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.5448  m2_loss_mask_2: 0.1776  m2_loss_dice_2: 1.227  m2_loss_ce_3: 0.4961  m2_loss_mask_3: 0.1703  m2_loss_dice_3: 1.182  m2_loss_ce_4: 0.5084  m2_loss_mask_4: 0.1667  m2_loss_dice_4: 1.204  m2_loss_ce_5: 0.4801  m2_loss_mask_5: 0.1695  m2_loss_dice_5: 1.16  m2_loss_ce_6: 0.456  m2_loss_mask_6: 0.1707  m2_loss_dice_6: 1.176  m2_loss_ce_7: 0.4432  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.147  m2_loss_ce_8: 0.4423  m2_loss_mask_8: 0.1656  m2_loss_dice_8: 1.149    time: 1.4136  last_time: 1.4187  data_time: 0.0485  last_data_time: 0.0446   lr: 0.0001  max_mem: 34558M
[10/13 17:44:30] d2.utils.events INFO:  eta: 0:15:55  iter: 319  total_loss: 39.6  m1_loss_ce: 0.5071  m1_loss_mask: 0.172  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5729  m1_loss_mask_0: 0.1939  m1_loss_dice_0: 1.455  m1_loss_ce_1: 0.6282  m1_loss_mask_1: 0.1814  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.5793  m1_loss_mask_2: 0.1788  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5197  m1_loss_mask_3: 0.1706  m1_loss_dice_3: 1.24  m1_loss_ce_4: 0.4905  m1_loss_mask_4: 0.1754  m1_loss_dice_4: 1.251  m1_loss_ce_5: 0.514  m1_loss_mask_5: 0.1727  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.4959  m1_loss_mask_6: 0.174  m1_loss_dice_6: 1.205  m1_loss_ce_7: 0.4991  m1_loss_mask_7: 0.1735  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4765  m1_loss_mask_8: 0.1749  m1_loss_dice_8: 1.2  m2_loss_ce: 0.4937  m2_loss_mask: 0.1703  m2_loss_dice: 1.253  m2_loss_ce_0: 0.6128  m2_loss_mask_0: 0.1969  m2_loss_dice_0: 1.454  m2_loss_ce_1: 0.6803  m2_loss_mask_1: 0.1848  m2_loss_dice_1: 1.372  m2_loss_ce_2: 0.5674  m2_loss_mask_2: 0.1757  m2_loss_dice_2: 1.294  m2_loss_ce_3: 0.5406  m2_loss_mask_3: 0.1708  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5481  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.5153  m2_loss_mask_5: 0.17  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.5007  m2_loss_mask_6: 0.1705  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4889  m2_loss_mask_7: 0.1737  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.482  m2_loss_mask_8: 0.1728  m2_loss_dice_8: 1.241    time: 1.4132  last_time: 1.4673  data_time: 0.0523  last_data_time: 0.0538   lr: 0.0001  max_mem: 34558M
[10/13 17:44:58] d2.utils.events INFO:  eta: 0:15:27  iter: 339  total_loss: 39.83  m1_loss_ce: 0.47  m1_loss_mask: 0.1629  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5288  m1_loss_mask_0: 0.192  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.6226  m1_loss_mask_1: 0.1828  m1_loss_dice_1: 1.38  m1_loss_ce_2: 0.5562  m1_loss_mask_2: 0.1721  m1_loss_dice_2: 1.333  m1_loss_ce_3: 0.4745  m1_loss_mask_3: 0.1701  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.4807  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.259  m1_loss_ce_5: 0.4626  m1_loss_mask_5: 0.1645  m1_loss_dice_5: 1.228  m1_loss_ce_6: 0.4513  m1_loss_mask_6: 0.1664  m1_loss_dice_6: 1.199  m1_loss_ce_7: 0.4904  m1_loss_mask_7: 0.1658  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4507  m1_loss_mask_8: 0.1656  m1_loss_dice_8: 1.287  m2_loss_ce: 0.4352  m2_loss_mask: 0.1587  m2_loss_dice: 1.256  m2_loss_ce_0: 0.5893  m2_loss_mask_0: 0.1827  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6397  m2_loss_mask_1: 0.1799  m2_loss_dice_1: 1.358  m2_loss_ce_2: 0.5453  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.356  m2_loss_ce_3: 0.5037  m2_loss_mask_3: 0.1624  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.494  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.4519  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.4368  m2_loss_mask_6: 0.161  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.4666  m2_loss_mask_7: 0.1581  m2_loss_dice_7: 1.225  m2_loss_ce_8: 0.4647  m2_loss_mask_8: 0.1603  m2_loss_dice_8: 1.24    time: 1.4134  last_time: 1.4701  data_time: 0.0524  last_data_time: 0.0559   lr: 0.0001  max_mem: 34558M
[10/13 17:45:26] d2.utils.events INFO:  eta: 0:14:59  iter: 359  total_loss: 38.82  m1_loss_ce: 0.4657  m1_loss_mask: 0.1801  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5517  m1_loss_mask_0: 0.2018  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.6079  m1_loss_mask_1: 0.1965  m1_loss_dice_1: 1.377  m1_loss_ce_2: 0.5772  m1_loss_mask_2: 0.1844  m1_loss_dice_2: 1.308  m1_loss_ce_3: 0.4902  m1_loss_mask_3: 0.184  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.493  m1_loss_mask_4: 0.1766  m1_loss_dice_4: 1.22  m1_loss_ce_5: 0.4873  m1_loss_mask_5: 0.1777  m1_loss_dice_5: 1.238  m1_loss_ce_6: 0.487  m1_loss_mask_6: 0.1805  m1_loss_dice_6: 1.236  m1_loss_ce_7: 0.4595  m1_loss_mask_7: 0.1799  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.4698  m1_loss_mask_8: 0.1798  m1_loss_dice_8: 1.205  m2_loss_ce: 0.4444  m2_loss_mask: 0.1683  m2_loss_dice: 1.286  m2_loss_ce_0: 0.5734  m2_loss_mask_0: 0.2027  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6469  m2_loss_mask_1: 0.1892  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.5392  m2_loss_mask_2: 0.1791  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5259  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.291  m2_loss_ce_4: 0.4945  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.289  m2_loss_ce_5: 0.467  m2_loss_mask_5: 0.168  m2_loss_dice_5: 1.318  m2_loss_ce_6: 0.4658  m2_loss_mask_6: 0.1709  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.4441  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4555  m2_loss_mask_8: 0.1702  m2_loss_dice_8: 1.291    time: 1.4130  last_time: 1.3907  data_time: 0.0497  last_data_time: 0.0569   lr: 0.0001  max_mem: 34558M
[10/13 17:45:55] d2.utils.events INFO:  eta: 0:14:31  iter: 379  total_loss: 39.38  m1_loss_ce: 0.4813  m1_loss_mask: 0.1678  m1_loss_dice: 1.169  m1_loss_ce_0: 0.57  m1_loss_mask_0: 0.1885  m1_loss_dice_0: 1.386  m1_loss_ce_1: 0.6396  m1_loss_mask_1: 0.1806  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.5993  m1_loss_mask_2: 0.1738  m1_loss_dice_2: 1.219  m1_loss_ce_3: 0.5045  m1_loss_mask_3: 0.1722  m1_loss_dice_3: 1.158  m1_loss_ce_4: 0.527  m1_loss_mask_4: 0.1702  m1_loss_dice_4: 1.182  m1_loss_ce_5: 0.4882  m1_loss_mask_5: 0.1714  m1_loss_dice_5: 1.183  m1_loss_ce_6: 0.4822  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.141  m1_loss_ce_7: 0.4773  m1_loss_mask_7: 0.1679  m1_loss_dice_7: 1.146  m1_loss_ce_8: 0.4773  m1_loss_mask_8: 0.1668  m1_loss_dice_8: 1.136  m2_loss_ce: 0.4648  m2_loss_mask: 0.1795  m2_loss_dice: 1.175  m2_loss_ce_0: 0.5547  m2_loss_mask_0: 0.204  m2_loss_dice_0: 1.398  m2_loss_ce_1: 0.6371  m2_loss_mask_1: 0.1944  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.5844  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.525  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.222  m2_loss_ce_4: 0.4909  m2_loss_mask_4: 0.1692  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.4687  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.185  m2_loss_ce_6: 0.4749  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.177  m2_loss_ce_7: 0.4755  m2_loss_mask_7: 0.1691  m2_loss_dice_7: 1.185  m2_loss_ce_8: 0.4535  m2_loss_mask_8: 0.1724  m2_loss_dice_8: 1.156    time: 1.4128  last_time: 1.4328  data_time: 0.0514  last_data_time: 0.0531   lr: 0.0001  max_mem: 34558M
[10/13 17:46:23] d2.utils.events INFO:  eta: 0:14:03  iter: 399  total_loss: 38.21  m1_loss_ce: 0.4233  m1_loss_mask: 0.1706  m1_loss_dice: 1.174  m1_loss_ce_0: 0.5334  m1_loss_mask_0: 0.2032  m1_loss_dice_0: 1.383  m1_loss_ce_1: 0.5796  m1_loss_mask_1: 0.1879  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.5612  m1_loss_mask_2: 0.1712  m1_loss_dice_2: 1.229  m1_loss_ce_3: 0.4868  m1_loss_mask_3: 0.1736  m1_loss_dice_3: 1.222  m1_loss_ce_4: 0.4528  m1_loss_mask_4: 0.1748  m1_loss_dice_4: 1.143  m1_loss_ce_5: 0.4537  m1_loss_mask_5: 0.173  m1_loss_dice_5: 1.215  m1_loss_ce_6: 0.4343  m1_loss_mask_6: 0.1721  m1_loss_dice_6: 1.109  m1_loss_ce_7: 0.4072  m1_loss_mask_7: 0.1693  m1_loss_dice_7: 1.122  m1_loss_ce_8: 0.4205  m1_loss_mask_8: 0.1719  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4466  m2_loss_mask: 0.1727  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5935  m2_loss_mask_0: 0.2094  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6398  m2_loss_mask_1: 0.1924  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.5726  m2_loss_mask_2: 0.1754  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.5535  m2_loss_mask_3: 0.1725  m2_loss_dice_3: 1.196  m2_loss_ce_4: 0.5153  m2_loss_mask_4: 0.174  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4797  m2_loss_mask_5: 0.1771  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.4935  m2_loss_mask_6: 0.1726  m2_loss_dice_6: 1.2  m2_loss_ce_7: 0.4775  m2_loss_mask_7: 0.1719  m2_loss_dice_7: 1.205  m2_loss_ce_8: 0.4696  m2_loss_mask_8: 0.1734  m2_loss_dice_8: 1.19    time: 1.4127  last_time: 1.5709  data_time: 0.0478  last_data_time: 0.0544   lr: 0.0001  max_mem: 34558M
[10/13 17:46:51] d2.utils.events INFO:  eta: 0:13:35  iter: 419  total_loss: 40.07  m1_loss_ce: 0.4876  m1_loss_mask: 0.1691  m1_loss_dice: 1.228  m1_loss_ce_0: 0.5481  m1_loss_mask_0: 0.1939  m1_loss_dice_0: 1.43  m1_loss_ce_1: 0.6055  m1_loss_mask_1: 0.1811  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.5769  m1_loss_mask_2: 0.1737  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.5319  m1_loss_mask_3: 0.1757  m1_loss_dice_3: 1.248  m1_loss_ce_4: 0.5025  m1_loss_mask_4: 0.1749  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.4911  m1_loss_mask_5: 0.1721  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.5009  m1_loss_mask_6: 0.1698  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.488  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.4571  m1_loss_mask_8: 0.1703  m1_loss_dice_8: 1.193  m2_loss_ce: 0.4925  m2_loss_mask: 0.1698  m2_loss_dice: 1.248  m2_loss_ce_0: 0.5988  m2_loss_mask_0: 0.1985  m2_loss_dice_0: 1.451  m2_loss_ce_1: 0.6835  m2_loss_mask_1: 0.1875  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.6001  m2_loss_mask_2: 0.1733  m2_loss_dice_2: 1.308  m2_loss_ce_3: 0.5189  m2_loss_mask_3: 0.17  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5274  m2_loss_mask_4: 0.1665  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5319  m2_loss_mask_5: 0.1701  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.5087  m2_loss_mask_6: 0.1682  m2_loss_dice_6: 1.26  m2_loss_ce_7: 0.497  m2_loss_mask_7: 0.1694  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.5207  m2_loss_mask_8: 0.17  m2_loss_dice_8: 1.198    time: 1.4123  last_time: 1.3341  data_time: 0.0520  last_data_time: 0.0408   lr: 0.0001  max_mem: 34558M
[10/13 17:47:19] d2.utils.events INFO:  eta: 0:13:06  iter: 439  total_loss: 38.54  m1_loss_ce: 0.4351  m1_loss_mask: 0.1652  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5832  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.374  m1_loss_ce_1: 0.6328  m1_loss_mask_1: 0.1816  m1_loss_dice_1: 1.328  m1_loss_ce_2: 0.5877  m1_loss_mask_2: 0.1732  m1_loss_dice_2: 1.253  m1_loss_ce_3: 0.519  m1_loss_mask_3: 0.1753  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.5087  m1_loss_mask_4: 0.1736  m1_loss_dice_4: 1.191  m1_loss_ce_5: 0.4742  m1_loss_mask_5: 0.1736  m1_loss_dice_5: 1.19  m1_loss_ce_6: 0.4493  m1_loss_mask_6: 0.1723  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.4522  m1_loss_mask_7: 0.1704  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4441  m1_loss_mask_8: 0.1687  m1_loss_dice_8: 1.187  m2_loss_ce: 0.4587  m2_loss_mask: 0.1685  m2_loss_dice: 1.23  m2_loss_ce_0: 0.6007  m2_loss_mask_0: 0.2107  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6724  m2_loss_mask_1: 0.1956  m2_loss_dice_1: 1.38  m2_loss_ce_2: 0.5937  m2_loss_mask_2: 0.173  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5319  m2_loss_mask_3: 0.1737  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.5245  m2_loss_mask_4: 0.1742  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.5082  m2_loss_mask_5: 0.1713  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.4763  m2_loss_mask_6: 0.1729  m2_loss_dice_6: 1.221  m2_loss_ce_7: 0.4899  m2_loss_mask_7: 0.1713  m2_loss_dice_7: 1.238  m2_loss_ce_8: 0.4948  m2_loss_mask_8: 0.1716  m2_loss_dice_8: 1.223    time: 1.4115  last_time: 1.3641  data_time: 0.0494  last_data_time: 0.0557   lr: 0.0001  max_mem: 34558M
[10/13 17:47:47] d2.utils.events INFO:  eta: 0:12:39  iter: 459  total_loss: 38.98  m1_loss_ce: 0.4501  m1_loss_mask: 0.1691  m1_loss_dice: 1.16  m1_loss_ce_0: 0.5358  m1_loss_mask_0: 0.1956  m1_loss_dice_0: 1.395  m1_loss_ce_1: 0.5832  m1_loss_mask_1: 0.1818  m1_loss_dice_1: 1.308  m1_loss_ce_2: 0.5433  m1_loss_mask_2: 0.1777  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.5032  m1_loss_mask_3: 0.1713  m1_loss_dice_3: 1.193  m1_loss_ce_4: 0.4465  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.4881  m1_loss_mask_5: 0.1754  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.4536  m1_loss_mask_6: 0.1688  m1_loss_dice_6: 1.144  m1_loss_ce_7: 0.4245  m1_loss_mask_7: 0.1729  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4118  m1_loss_mask_8: 0.1722  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4739  m2_loss_mask: 0.169  m2_loss_dice: 1.219  m2_loss_ce_0: 0.5953  m2_loss_mask_0: 0.1971  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6464  m2_loss_mask_1: 0.1848  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5577  m2_loss_mask_2: 0.1686  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5078  m2_loss_mask_3: 0.1712  m2_loss_dice_3: 1.255  m2_loss_ce_4: 0.5266  m2_loss_mask_4: 0.1707  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.4957  m2_loss_mask_5: 0.1681  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4743  m2_loss_mask_6: 0.1677  m2_loss_dice_6: 1.251  m2_loss_ce_7: 0.4804  m2_loss_mask_7: 0.1726  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4681  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.198    time: 1.4116  last_time: 1.4434  data_time: 0.0501  last_data_time: 0.0465   lr: 0.0001  max_mem: 34558M
[10/13 17:48:16] d2.utils.events INFO:  eta: 0:12:11  iter: 479  total_loss: 40.41  m1_loss_ce: 0.5083  m1_loss_mask: 0.1627  m1_loss_dice: 1.194  m1_loss_ce_0: 0.6092  m1_loss_mask_0: 0.1892  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6525  m1_loss_mask_1: 0.1741  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.6329  m1_loss_mask_2: 0.1694  m1_loss_dice_2: 1.329  m1_loss_ce_3: 0.5624  m1_loss_mask_3: 0.1672  m1_loss_dice_3: 1.211  m1_loss_ce_4: 0.5756  m1_loss_mask_4: 0.1664  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.545  m1_loss_mask_5: 0.1654  m1_loss_dice_5: 1.242  m1_loss_ce_6: 0.5484  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.5096  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4854  m1_loss_mask_8: 0.1635  m1_loss_dice_8: 1.224  m2_loss_ce: 0.5511  m2_loss_mask: 0.1654  m2_loss_dice: 1.272  m2_loss_ce_0: 0.6431  m2_loss_mask_0: 0.1919  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.7102  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.377  m2_loss_ce_2: 0.6325  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.326  m2_loss_ce_3: 0.5875  m2_loss_mask_3: 0.1645  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.5784  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5713  m2_loss_mask_5: 0.165  m2_loss_dice_5: 1.313  m2_loss_ce_6: 0.5625  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.267  m2_loss_ce_7: 0.5714  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.5615  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.261    time: 1.4118  last_time: 1.4371  data_time: 0.0507  last_data_time: 0.0512   lr: 0.0001  max_mem: 34558M
[10/13 17:48:45] d2.utils.events INFO:  eta: 0:11:43  iter: 499  total_loss: 40.69  m1_loss_ce: 0.4465  m1_loss_mask: 0.1657  m1_loss_dice: 1.259  m1_loss_ce_0: 0.5561  m1_loss_mask_0: 0.1972  m1_loss_dice_0: 1.47  m1_loss_ce_1: 0.5674  m1_loss_mask_1: 0.181  m1_loss_dice_1: 1.391  m1_loss_ce_2: 0.5494  m1_loss_mask_2: 0.1705  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.5132  m1_loss_mask_3: 0.1727  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.4714  m1_loss_mask_4: 0.1695  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.4717  m1_loss_mask_5: 0.1658  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.455  m1_loss_mask_6: 0.1666  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.4311  m1_loss_mask_7: 0.1688  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4492  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4649  m2_loss_mask: 0.1783  m2_loss_dice: 1.277  m2_loss_ce_0: 0.6171  m2_loss_mask_0: 0.2072  m2_loss_dice_0: 1.566  m2_loss_ce_1: 0.6291  m2_loss_mask_1: 0.2057  m2_loss_dice_1: 1.445  m2_loss_ce_2: 0.5615  m2_loss_mask_2: 0.1794  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.509  m2_loss_mask_3: 0.1791  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.4847  m2_loss_mask_4: 0.1779  m2_loss_dice_4: 1.354  m2_loss_ce_5: 0.4648  m2_loss_mask_5: 0.1771  m2_loss_dice_5: 1.297  m2_loss_ce_6: 0.4659  m2_loss_mask_6: 0.1784  m2_loss_dice_6: 1.318  m2_loss_ce_7: 0.4602  m2_loss_mask_7: 0.1794  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.4753  m2_loss_mask_8: 0.1757  m2_loss_dice_8: 1.312    time: 1.4126  last_time: 1.3764  data_time: 0.0514  last_data_time: 0.0433   lr: 0.0001  max_mem: 34558M
[10/13 17:49:13] d2.utils.events INFO:  eta: 0:11:15  iter: 519  total_loss: 40.25  m1_loss_ce: 0.4793  m1_loss_mask: 0.1537  m1_loss_dice: 1.207  m1_loss_ce_0: 0.5873  m1_loss_mask_0: 0.1835  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.637  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.354  m1_loss_ce_2: 0.5919  m1_loss_mask_2: 0.1591  m1_loss_dice_2: 1.267  m1_loss_ce_3: 0.5404  m1_loss_mask_3: 0.1549  m1_loss_dice_3: 1.26  m1_loss_ce_4: 0.5094  m1_loss_mask_4: 0.1542  m1_loss_dice_4: 1.22  m1_loss_ce_5: 0.5006  m1_loss_mask_5: 0.1545  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.4791  m1_loss_mask_6: 0.1566  m1_loss_dice_6: 1.239  m1_loss_ce_7: 0.4678  m1_loss_mask_7: 0.1547  m1_loss_dice_7: 1.215  m1_loss_ce_8: 0.487  m1_loss_mask_8: 0.1549  m1_loss_dice_8: 1.236  m2_loss_ce: 0.4592  m2_loss_mask: 0.1625  m2_loss_dice: 1.283  m2_loss_ce_0: 0.6376  m2_loss_mask_0: 0.1886  m2_loss_dice_0: 1.466  m2_loss_ce_1: 0.6857  m2_loss_mask_1: 0.1748  m2_loss_dice_1: 1.432  m2_loss_ce_2: 0.5975  m2_loss_mask_2: 0.1671  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.5456  m2_loss_mask_3: 0.1649  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.5394  m2_loss_mask_4: 0.1644  m2_loss_dice_4: 1.288  m2_loss_ce_5: 0.5336  m2_loss_mask_5: 0.1637  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.513  m2_loss_mask_6: 0.1608  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.5136  m2_loss_mask_7: 0.1622  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.5247  m2_loss_mask_8: 0.1617  m2_loss_dice_8: 1.284    time: 1.4126  last_time: 1.3917  data_time: 0.0489  last_data_time: 0.0629   lr: 0.0001  max_mem: 34558M
[10/13 17:49:42] d2.utils.events INFO:  eta: 0:10:47  iter: 539  total_loss: 37.78  m1_loss_ce: 0.4327  m1_loss_mask: 0.1572  m1_loss_dice: 1.149  m1_loss_ce_0: 0.5138  m1_loss_mask_0: 0.1782  m1_loss_dice_0: 1.407  m1_loss_ce_1: 0.5661  m1_loss_mask_1: 0.1689  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.5496  m1_loss_mask_2: 0.1603  m1_loss_dice_2: 1.233  m1_loss_ce_3: 0.4611  m1_loss_mask_3: 0.1582  m1_loss_dice_3: 1.157  m1_loss_ce_4: 0.4418  m1_loss_mask_4: 0.1585  m1_loss_dice_4: 1.14  m1_loss_ce_5: 0.4555  m1_loss_mask_5: 0.157  m1_loss_dice_5: 1.162  m1_loss_ce_6: 0.4128  m1_loss_mask_6: 0.1597  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.4281  m1_loss_mask_7: 0.1567  m1_loss_dice_7: 1.131  m1_loss_ce_8: 0.4393  m1_loss_mask_8: 0.1569  m1_loss_dice_8: 1.111  m2_loss_ce: 0.4458  m2_loss_mask: 0.1613  m2_loss_dice: 1.193  m2_loss_ce_0: 0.5792  m2_loss_mask_0: 0.184  m2_loss_dice_0: 1.44  m2_loss_ce_1: 0.6634  m2_loss_mask_1: 0.1827  m2_loss_dice_1: 1.322  m2_loss_ce_2: 0.5385  m2_loss_mask_2: 0.1672  m2_loss_dice_2: 1.279  m2_loss_ce_3: 0.5272  m2_loss_mask_3: 0.1621  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5057  m2_loss_mask_4: 0.1602  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.4963  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.4445  m2_loss_mask_6: 0.1619  m2_loss_dice_6: 1.196  m2_loss_ce_7: 0.4711  m2_loss_mask_7: 0.1636  m2_loss_dice_7: 1.175  m2_loss_ce_8: 0.4515  m2_loss_mask_8: 0.1613  m2_loss_dice_8: 1.202    time: 1.4134  last_time: 1.3920  data_time: 0.0501  last_data_time: 0.0435   lr: 0.0001  max_mem: 34558M
[10/13 17:50:11] d2.utils.events INFO:  eta: 0:10:20  iter: 559  total_loss: 39.85  m1_loss_ce: 0.4843  m1_loss_mask: 0.1576  m1_loss_dice: 1.183  m1_loss_ce_0: 0.6295  m1_loss_mask_0: 0.1786  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.635  m1_loss_mask_1: 0.1643  m1_loss_dice_1: 1.371  m1_loss_ce_2: 0.6135  m1_loss_mask_2: 0.1593  m1_loss_dice_2: 1.295  m1_loss_ce_3: 0.5641  m1_loss_mask_3: 0.1579  m1_loss_dice_3: 1.253  m1_loss_ce_4: 0.5103  m1_loss_mask_4: 0.1567  m1_loss_dice_4: 1.224  m1_loss_ce_5: 0.502  m1_loss_mask_5: 0.1557  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.4895  m1_loss_mask_6: 0.1547  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.5025  m1_loss_mask_7: 0.1559  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.5063  m1_loss_mask_8: 0.1551  m1_loss_dice_8: 1.17  m2_loss_ce: 0.4783  m2_loss_mask: 0.1581  m2_loss_dice: 1.237  m2_loss_ce_0: 0.6493  m2_loss_mask_0: 0.1873  m2_loss_dice_0: 1.487  m2_loss_ce_1: 0.7093  m2_loss_mask_1: 0.176  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.6094  m2_loss_mask_2: 0.1642  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.5336  m2_loss_mask_3: 0.1597  m2_loss_dice_3: 1.325  m2_loss_ce_4: 0.5402  m2_loss_mask_4: 0.1569  m2_loss_dice_4: 1.314  m2_loss_ce_5: 0.4969  m2_loss_mask_5: 0.1577  m2_loss_dice_5: 1.294  m2_loss_ce_6: 0.4723  m2_loss_mask_6: 0.1598  m2_loss_dice_6: 1.279  m2_loss_ce_7: 0.4853  m2_loss_mask_7: 0.1575  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.5019  m2_loss_mask_8: 0.1584  m2_loss_dice_8: 1.256    time: 1.4143  last_time: 1.4251  data_time: 0.0533  last_data_time: 0.0546   lr: 0.0001  max_mem: 34558M
[10/13 17:50:39] d2.utils.events INFO:  eta: 0:09:51  iter: 579  total_loss: 39.99  m1_loss_ce: 0.4625  m1_loss_mask: 0.1718  m1_loss_dice: 1.219  m1_loss_ce_0: 0.5392  m1_loss_mask_0: 0.2002  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6257  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.325  m1_loss_ce_2: 0.5919  m1_loss_mask_2: 0.17  m1_loss_dice_2: 1.266  m1_loss_ce_3: 0.4847  m1_loss_mask_3: 0.1766  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4783  m1_loss_mask_4: 0.1778  m1_loss_dice_4: 1.203  m1_loss_ce_5: 0.4587  m1_loss_mask_5: 0.1726  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4462  m1_loss_mask_6: 0.1729  m1_loss_dice_6: 1.181  m1_loss_ce_7: 0.4877  m1_loss_mask_7: 0.1739  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4775  m1_loss_mask_8: 0.1751  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4691  m2_loss_mask: 0.1728  m2_loss_dice: 1.254  m2_loss_ce_0: 0.6021  m2_loss_mask_0: 0.2084  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6645  m2_loss_mask_1: 0.1972  m2_loss_dice_1: 1.387  m2_loss_ce_2: 0.5575  m2_loss_mask_2: 0.1748  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5505  m2_loss_mask_3: 0.1732  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.5073  m2_loss_mask_4: 0.1751  m2_loss_dice_4: 1.286  m2_loss_ce_5: 0.478  m2_loss_mask_5: 0.1733  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.4794  m2_loss_mask_6: 0.1756  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.4833  m2_loss_mask_7: 0.1732  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.4636  m2_loss_mask_8: 0.1735  m2_loss_dice_8: 1.242    time: 1.4139  last_time: 1.4882  data_time: 0.0528  last_data_time: 0.0464   lr: 0.0001  max_mem: 34558M
[10/13 17:51:07] d2.utils.events INFO:  eta: 0:09:23  iter: 599  total_loss: 38.71  m1_loss_ce: 0.4635  m1_loss_mask: 0.1755  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5436  m1_loss_mask_0: 0.2055  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.5959  m1_loss_mask_1: 0.1871  m1_loss_dice_1: 1.351  m1_loss_ce_2: 0.5696  m1_loss_mask_2: 0.1783  m1_loss_dice_2: 1.239  m1_loss_ce_3: 0.5078  m1_loss_mask_3: 0.1772  m1_loss_dice_3: 1.204  m1_loss_ce_4: 0.4696  m1_loss_mask_4: 0.1794  m1_loss_dice_4: 1.218  m1_loss_ce_5: 0.4611  m1_loss_mask_5: 0.175  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.4249  m1_loss_mask_6: 0.1747  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4444  m1_loss_mask_7: 0.1737  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4606  m1_loss_mask_8: 0.1721  m1_loss_dice_8: 1.222  m2_loss_ce: 0.4405  m2_loss_mask: 0.1726  m2_loss_dice: 1.24  m2_loss_ce_0: 0.592  m2_loss_mask_0: 0.209  m2_loss_dice_0: 1.425  m2_loss_ce_1: 0.6436  m2_loss_mask_1: 0.1916  m2_loss_dice_1: 1.328  m2_loss_ce_2: 0.5608  m2_loss_mask_2: 0.1784  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.538  m2_loss_mask_3: 0.1788  m2_loss_dice_3: 1.247  m2_loss_ce_4: 0.4739  m2_loss_mask_4: 0.1738  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.4581  m2_loss_mask_5: 0.1754  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.454  m2_loss_mask_6: 0.1744  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4658  m2_loss_mask_7: 0.1754  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.4455  m2_loss_mask_8: 0.172  m2_loss_dice_8: 1.22    time: 1.4145  last_time: 1.4044  data_time: 0.0479  last_data_time: 0.0518   lr: 0.0001  max_mem: 34558M
[10/13 17:51:36] d2.utils.events INFO:  eta: 0:08:55  iter: 619  total_loss: 40  m1_loss_ce: 0.4744  m1_loss_mask: 0.1666  m1_loss_dice: 1.194  m1_loss_ce_0: 0.5883  m1_loss_mask_0: 0.1963  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.6238  m1_loss_mask_1: 0.183  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.5816  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.274  m1_loss_ce_3: 0.5029  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.196  m1_loss_ce_4: 0.467  m1_loss_mask_4: 0.1685  m1_loss_dice_4: 1.228  m1_loss_ce_5: 0.5061  m1_loss_mask_5: 0.166  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4593  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.234  m1_loss_ce_7: 0.4532  m1_loss_mask_7: 0.169  m1_loss_dice_7: 1.202  m1_loss_ce_8: 0.4435  m1_loss_mask_8: 0.1667  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4947  m2_loss_mask: 0.1669  m2_loss_dice: 1.252  m2_loss_ce_0: 0.5718  m2_loss_mask_0: 0.1992  m2_loss_dice_0: 1.427  m2_loss_ce_1: 0.6546  m2_loss_mask_1: 0.1859  m2_loss_dice_1: 1.349  m2_loss_ce_2: 0.6063  m2_loss_mask_2: 0.1768  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5289  m2_loss_mask_3: 0.1736  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.532  m2_loss_mask_4: 0.1695  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.509  m2_loss_mask_5: 0.171  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.5054  m2_loss_mask_6: 0.1699  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.4963  m2_loss_mask_7: 0.1684  m2_loss_dice_7: 1.243  m2_loss_ce_8: 0.4718  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.223    time: 1.4142  last_time: 1.4183  data_time: 0.0484  last_data_time: 0.0598   lr: 0.0001  max_mem: 34558M
[10/13 17:52:04] d2.utils.events INFO:  eta: 0:08:27  iter: 639  total_loss: 39.56  m1_loss_ce: 0.4213  m1_loss_mask: 0.1613  m1_loss_dice: 1.193  m1_loss_ce_0: 0.5711  m1_loss_mask_0: 0.1912  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.627  m1_loss_mask_1: 0.172  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.581  m1_loss_mask_2: 0.1699  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.4912  m1_loss_mask_3: 0.1648  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.4565  m1_loss_mask_4: 0.1658  m1_loss_dice_4: 1.241  m1_loss_ce_5: 0.4675  m1_loss_mask_5: 0.1634  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.4324  m1_loss_mask_6: 0.1647  m1_loss_dice_6: 1.225  m1_loss_ce_7: 0.4548  m1_loss_mask_7: 0.1633  m1_loss_dice_7: 1.19  m1_loss_ce_8: 0.4498  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.23  m2_loss_ce: 0.4792  m2_loss_mask: 0.1632  m2_loss_dice: 1.264  m2_loss_ce_0: 0.591  m2_loss_mask_0: 0.1904  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6655  m2_loss_mask_1: 0.1745  m2_loss_dice_1: 1.381  m2_loss_ce_2: 0.5973  m2_loss_mask_2: 0.1612  m2_loss_dice_2: 1.288  m2_loss_ce_3: 0.5244  m2_loss_mask_3: 0.1606  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5296  m2_loss_mask_4: 0.1579  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5021  m2_loss_mask_5: 0.1576  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.5058  m2_loss_mask_6: 0.1603  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.4938  m2_loss_mask_7: 0.1624  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.4726  m2_loss_mask_8: 0.1639  m2_loss_dice_8: 1.251    time: 1.4141  last_time: 1.3552  data_time: 0.0522  last_data_time: 0.0463   lr: 0.0001  max_mem: 34558M
[10/13 17:52:32] d2.utils.events INFO:  eta: 0:07:58  iter: 659  total_loss: 36.53  m1_loss_ce: 0.414  m1_loss_mask: 0.1703  m1_loss_dice: 1.191  m1_loss_ce_0: 0.5265  m1_loss_mask_0: 0.2043  m1_loss_dice_0: 1.32  m1_loss_ce_1: 0.5178  m1_loss_mask_1: 0.1864  m1_loss_dice_1: 1.292  m1_loss_ce_2: 0.483  m1_loss_mask_2: 0.1812  m1_loss_dice_2: 1.252  m1_loss_ce_3: 0.4499  m1_loss_mask_3: 0.1756  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.423  m1_loss_mask_4: 0.1742  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.4119  m1_loss_mask_5: 0.1698  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.4225  m1_loss_mask_6: 0.1735  m1_loss_dice_6: 1.182  m1_loss_ce_7: 0.4224  m1_loss_mask_7: 0.174  m1_loss_dice_7: 1.182  m1_loss_ce_8: 0.4009  m1_loss_mask_8: 0.1714  m1_loss_dice_8: 1.183  m2_loss_ce: 0.4191  m2_loss_mask: 0.1743  m2_loss_dice: 1.236  m2_loss_ce_0: 0.552  m2_loss_mask_0: 0.2133  m2_loss_dice_0: 1.394  m2_loss_ce_1: 0.5565  m2_loss_mask_1: 0.1908  m2_loss_dice_1: 1.35  m2_loss_ce_2: 0.5153  m2_loss_mask_2: 0.1805  m2_loss_dice_2: 1.281  m2_loss_ce_3: 0.4926  m2_loss_mask_3: 0.1811  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.4462  m2_loss_mask_4: 0.1736  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.4431  m2_loss_mask_5: 0.1734  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.4317  m2_loss_mask_6: 0.1736  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.415  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.221  m2_loss_ce_8: 0.4181  m2_loss_mask_8: 0.1738  m2_loss_dice_8: 1.224    time: 1.4129  last_time: 1.2882  data_time: 0.0499  last_data_time: 0.0485   lr: 0.0001  max_mem: 34558M
[10/13 17:53:00] d2.utils.events INFO:  eta: 0:07:30  iter: 679  total_loss: 40.52  m1_loss_ce: 0.5042  m1_loss_mask: 0.1708  m1_loss_dice: 1.202  m1_loss_ce_0: 0.609  m1_loss_mask_0: 0.193  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.633  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.365  m1_loss_ce_2: 0.5657  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5108  m1_loss_mask_3: 0.1714  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.508  m1_loss_mask_4: 0.1754  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.4977  m1_loss_mask_5: 0.1724  m1_loss_dice_5: 1.23  m1_loss_ce_6: 0.4739  m1_loss_mask_6: 0.173  m1_loss_dice_6: 1.233  m1_loss_ce_7: 0.4816  m1_loss_mask_7: 0.1698  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.4791  m1_loss_mask_8: 0.1693  m1_loss_dice_8: 1.23  m2_loss_ce: 0.502  m2_loss_mask: 0.1712  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6173  m2_loss_mask_0: 0.1998  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.669  m2_loss_mask_1: 0.1873  m2_loss_dice_1: 1.432  m2_loss_ce_2: 0.5953  m2_loss_mask_2: 0.1697  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.5732  m2_loss_mask_3: 0.179  m2_loss_dice_3: 1.315  m2_loss_ce_4: 0.555  m2_loss_mask_4: 0.1672  m2_loss_dice_4: 1.304  m2_loss_ce_5: 0.5182  m2_loss_mask_5: 0.1708  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.5191  m2_loss_mask_6: 0.1667  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.5317  m2_loss_mask_7: 0.1661  m2_loss_dice_7: 1.281  m2_loss_ce_8: 0.4828  m2_loss_mask_8: 0.1678  m2_loss_dice_8: 1.285    time: 1.4130  last_time: 1.4278  data_time: 0.0473  last_data_time: 0.0501   lr: 0.0001  max_mem: 34558M
[10/13 17:53:29] d2.utils.events INFO:  eta: 0:07:02  iter: 699  total_loss: 39.91  m1_loss_ce: 0.4455  m1_loss_mask: 0.1572  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5714  m1_loss_mask_0: 0.1886  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.6035  m1_loss_mask_1: 0.1723  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.5822  m1_loss_mask_2: 0.1562  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.535  m1_loss_mask_3: 0.1596  m1_loss_dice_3: 1.239  m1_loss_ce_4: 0.4899  m1_loss_mask_4: 0.1584  m1_loss_dice_4: 1.249  m1_loss_ce_5: 0.505  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.245  m1_loss_ce_6: 0.4813  m1_loss_mask_6: 0.1587  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4582  m1_loss_mask_7: 0.1585  m1_loss_dice_7: 1.21  m1_loss_ce_8: 0.4619  m1_loss_mask_8: 0.158  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4868  m2_loss_mask: 0.1607  m2_loss_dice: 1.291  m2_loss_ce_0: 0.603  m2_loss_mask_0: 0.1818  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6431  m2_loss_mask_1: 0.1835  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.5818  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.5508  m2_loss_mask_3: 0.1622  m2_loss_dice_3: 1.32  m2_loss_ce_4: 0.5132  m2_loss_mask_4: 0.1603  m2_loss_dice_4: 1.269  m2_loss_ce_5: 0.5065  m2_loss_mask_5: 0.1567  m2_loss_dice_5: 1.255  m2_loss_ce_6: 0.4863  m2_loss_mask_6: 0.1611  m2_loss_dice_6: 1.264  m2_loss_ce_7: 0.464  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4682  m2_loss_mask_8: 0.1598  m2_loss_dice_8: 1.279    time: 1.4136  last_time: 1.4679  data_time: 0.0563  last_data_time: 0.0882   lr: 0.0001  max_mem: 34558M
[10/13 17:53:57] d2.utils.events INFO:  eta: 0:06:34  iter: 719  total_loss: 39.32  m1_loss_ce: 0.4575  m1_loss_mask: 0.1614  m1_loss_dice: 1.222  m1_loss_ce_0: 0.6002  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.414  m1_loss_ce_1: 0.6214  m1_loss_mask_1: 0.1693  m1_loss_dice_1: 1.303  m1_loss_ce_2: 0.5536  m1_loss_mask_2: 0.162  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.4957  m1_loss_mask_3: 0.1593  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.4857  m1_loss_mask_4: 0.1631  m1_loss_dice_4: 1.24  m1_loss_ce_5: 0.4773  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.239  m1_loss_ce_6: 0.4495  m1_loss_mask_6: 0.1596  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.4449  m1_loss_mask_7: 0.1603  m1_loss_dice_7: 1.192  m1_loss_ce_8: 0.4562  m1_loss_mask_8: 0.1627  m1_loss_dice_8: 1.186  m2_loss_ce: 0.4438  m2_loss_mask: 0.1577  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6182  m2_loss_mask_0: 0.1868  m2_loss_dice_0: 1.474  m2_loss_ce_1: 0.6777  m2_loss_mask_1: 0.1753  m2_loss_dice_1: 1.408  m2_loss_ce_2: 0.581  m2_loss_mask_2: 0.1599  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5514  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.3  m2_loss_ce_4: 0.489  m2_loss_mask_4: 0.159  m2_loss_dice_4: 1.237  m2_loss_ce_5: 0.5007  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.289  m2_loss_ce_6: 0.4803  m2_loss_mask_6: 0.158  m2_loss_dice_6: 1.249  m2_loss_ce_7: 0.4929  m2_loss_mask_7: 0.1586  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4513  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.264    time: 1.4137  last_time: 1.3874  data_time: 0.0534  last_data_time: 0.0556   lr: 0.0001  max_mem: 34846M
[10/13 17:54:26] d2.utils.events INFO:  eta: 0:06:06  iter: 739  total_loss: 40.22  m1_loss_ce: 0.4841  m1_loss_mask: 0.17  m1_loss_dice: 1.202  m1_loss_ce_0: 0.571  m1_loss_mask_0: 0.1975  m1_loss_dice_0: 1.376  m1_loss_ce_1: 0.5909  m1_loss_mask_1: 0.1835  m1_loss_dice_1: 1.36  m1_loss_ce_2: 0.5584  m1_loss_mask_2: 0.178  m1_loss_dice_2: 1.276  m1_loss_ce_3: 0.5117  m1_loss_mask_3: 0.1743  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4768  m1_loss_mask_4: 0.1737  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.4817  m1_loss_mask_5: 0.1715  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.4666  m1_loss_mask_6: 0.1724  m1_loss_dice_6: 1.179  m1_loss_ce_7: 0.4638  m1_loss_mask_7: 0.1715  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4513  m1_loss_mask_8: 0.1702  m1_loss_dice_8: 1.216  m2_loss_ce: 0.4611  m2_loss_mask: 0.1815  m2_loss_dice: 1.28  m2_loss_ce_0: 0.5912  m2_loss_mask_0: 0.2099  m2_loss_dice_0: 1.417  m2_loss_ce_1: 0.6576  m2_loss_mask_1: 0.2007  m2_loss_dice_1: 1.365  m2_loss_ce_2: 0.5892  m2_loss_mask_2: 0.1862  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5257  m2_loss_mask_3: 0.1826  m2_loss_dice_3: 1.257  m2_loss_ce_4: 0.4896  m2_loss_mask_4: 0.1795  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.5083  m2_loss_mask_5: 0.1804  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.4712  m2_loss_mask_6: 0.1787  m2_loss_dice_6: 1.27  m2_loss_ce_7: 0.5066  m2_loss_mask_7: 0.1816  m2_loss_dice_7: 1.273  m2_loss_ce_8: 0.468  m2_loss_mask_8: 0.1809  m2_loss_dice_8: 1.266    time: 1.4136  last_time: 1.3548  data_time: 0.0526  last_data_time: 0.0457   lr: 0.0001  max_mem: 34846M
[10/13 17:54:54] d2.utils.events INFO:  eta: 0:05:38  iter: 759  total_loss: 38.83  m1_loss_ce: 0.4446  m1_loss_mask: 0.1727  m1_loss_dice: 1.15  m1_loss_ce_0: 0.5724  m1_loss_mask_0: 0.1968  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.5881  m1_loss_mask_1: 0.1843  m1_loss_dice_1: 1.264  m1_loss_ce_2: 0.5281  m1_loss_mask_2: 0.1797  m1_loss_dice_2: 1.227  m1_loss_ce_3: 0.5215  m1_loss_mask_3: 0.1774  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.5015  m1_loss_mask_4: 0.1755  m1_loss_dice_4: 1.19  m1_loss_ce_5: 0.4999  m1_loss_mask_5: 0.1777  m1_loss_dice_5: 1.157  m1_loss_ce_6: 0.4782  m1_loss_mask_6: 0.1741  m1_loss_dice_6: 1.173  m1_loss_ce_7: 0.4235  m1_loss_mask_7: 0.1724  m1_loss_dice_7: 1.162  m1_loss_ce_8: 0.4452  m1_loss_mask_8: 0.1727  m1_loss_dice_8: 1.146  m2_loss_ce: 0.5128  m2_loss_mask: 0.1743  m2_loss_dice: 1.213  m2_loss_ce_0: 0.5983  m2_loss_mask_0: 0.1944  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6718  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.5715  m2_loss_mask_2: 0.1789  m2_loss_dice_2: 1.282  m2_loss_ce_3: 0.5433  m2_loss_mask_3: 0.1761  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.5259  m2_loss_mask_4: 0.1752  m2_loss_dice_4: 1.225  m2_loss_ce_5: 0.5125  m2_loss_mask_5: 0.1748  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.476  m2_loss_mask_6: 0.1792  m2_loss_dice_6: 1.194  m2_loss_ce_7: 0.4802  m2_loss_mask_7: 0.1752  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.4952  m2_loss_mask_8: 0.1745  m2_loss_dice_8: 1.196    time: 1.4142  last_time: 1.4131  data_time: 0.0544  last_data_time: 0.0484   lr: 0.0001  max_mem: 34846M
[10/13 17:55:22] d2.utils.events INFO:  eta: 0:05:10  iter: 779  total_loss: 39.6  m1_loss_ce: 0.4551  m1_loss_mask: 0.1563  m1_loss_dice: 1.203  m1_loss_ce_0: 0.5728  m1_loss_mask_0: 0.1815  m1_loss_dice_0: 1.443  m1_loss_ce_1: 0.5951  m1_loss_mask_1: 0.1671  m1_loss_dice_1: 1.347  m1_loss_ce_2: 0.5689  m1_loss_mask_2: 0.1594  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.524  m1_loss_mask_3: 0.1579  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4646  m1_loss_mask_4: 0.1605  m1_loss_dice_4: 1.258  m1_loss_ce_5: 0.4843  m1_loss_mask_5: 0.1596  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.4716  m1_loss_mask_6: 0.1556  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4476  m1_loss_mask_7: 0.1553  m1_loss_dice_7: 1.216  m1_loss_ce_8: 0.4508  m1_loss_mask_8: 0.1541  m1_loss_dice_8: 1.248  m2_loss_ce: 0.4749  m2_loss_mask: 0.1643  m2_loss_dice: 1.289  m2_loss_ce_0: 0.5944  m2_loss_mask_0: 0.1859  m2_loss_dice_0: 1.484  m2_loss_ce_1: 0.6669  m2_loss_mask_1: 0.1769  m2_loss_dice_1: 1.406  m2_loss_ce_2: 0.6064  m2_loss_mask_2: 0.1668  m2_loss_dice_2: 1.372  m2_loss_ce_3: 0.5334  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.302  m2_loss_ce_4: 0.5028  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.315  m2_loss_ce_5: 0.4855  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.306  m2_loss_ce_6: 0.4657  m2_loss_mask_6: 0.1617  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.4749  m2_loss_mask_7: 0.1644  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.4631  m2_loss_mask_8: 0.1641  m2_loss_dice_8: 1.273    time: 1.4138  last_time: 1.3951  data_time: 0.0482  last_data_time: 0.0483   lr: 0.0001  max_mem: 34846M
[10/13 17:55:51] d2.utils.events INFO:  eta: 0:04:41  iter: 799  total_loss: 38.46  m1_loss_ce: 0.4154  m1_loss_mask: 0.1705  m1_loss_dice: 1.185  m1_loss_ce_0: 0.5096  m1_loss_mask_0: 0.1936  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.5539  m1_loss_mask_1: 0.1795  m1_loss_dice_1: 1.306  m1_loss_ce_2: 0.5293  m1_loss_mask_2: 0.1714  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.4791  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.199  m1_loss_ce_4: 0.4479  m1_loss_mask_4: 0.1734  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.4292  m1_loss_mask_5: 0.1682  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.4299  m1_loss_mask_6: 0.1745  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4336  m1_loss_mask_7: 0.172  m1_loss_dice_7: 1.171  m1_loss_ce_8: 0.4158  m1_loss_mask_8: 0.1718  m1_loss_dice_8: 1.188  m2_loss_ce: 0.4745  m2_loss_mask: 0.1759  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5995  m2_loss_mask_0: 0.2008  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.6418  m2_loss_mask_1: 0.1895  m2_loss_dice_1: 1.355  m2_loss_ce_2: 0.5676  m2_loss_mask_2: 0.1761  m2_loss_dice_2: 1.318  m2_loss_ce_3: 0.5027  m2_loss_mask_3: 0.1777  m2_loss_dice_3: 1.295  m2_loss_ce_4: 0.4873  m2_loss_mask_4: 0.1743  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5009  m2_loss_mask_5: 0.1704  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.4838  m2_loss_mask_6: 0.1775  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5116  m2_loss_mask_7: 0.1762  m2_loss_dice_7: 1.237  m2_loss_ce_8: 0.4748  m2_loss_mask_8: 0.1764  m2_loss_dice_8: 1.219    time: 1.4138  last_time: 1.3246  data_time: 0.0497  last_data_time: 0.0422   lr: 0.0001  max_mem: 34846M
[10/13 17:56:19] d2.utils.events INFO:  eta: 0:04:13  iter: 819  total_loss: 39.39  m1_loss_ce: 0.4344  m1_loss_mask: 0.1535  m1_loss_dice: 1.18  m1_loss_ce_0: 0.528  m1_loss_mask_0: 0.1787  m1_loss_dice_0: 1.427  m1_loss_ce_1: 0.6277  m1_loss_mask_1: 0.1664  m1_loss_dice_1: 1.33  m1_loss_ce_2: 0.5948  m1_loss_mask_2: 0.1612  m1_loss_dice_2: 1.27  m1_loss_ce_3: 0.4938  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.226  m1_loss_ce_4: 0.4671  m1_loss_mask_4: 0.1576  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.4666  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.465  m1_loss_mask_6: 0.1555  m1_loss_dice_6: 1.206  m1_loss_ce_7: 0.4471  m1_loss_mask_7: 0.1539  m1_loss_dice_7: 1.187  m1_loss_ce_8: 0.4764  m1_loss_mask_8: 0.1522  m1_loss_dice_8: 1.183  m2_loss_ce: 0.4669  m2_loss_mask: 0.1648  m2_loss_dice: 1.249  m2_loss_ce_0: 0.5989  m2_loss_mask_0: 0.1951  m2_loss_dice_0: 1.476  m2_loss_ce_1: 0.6769  m2_loss_mask_1: 0.1832  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.5902  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5597  m2_loss_mask_3: 0.1716  m2_loss_dice_3: 1.277  m2_loss_ce_4: 0.5203  m2_loss_mask_4: 0.1674  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5003  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.5005  m2_loss_mask_6: 0.1649  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4916  m2_loss_mask_7: 0.1673  m2_loss_dice_7: 1.24  m2_loss_ce_8: 0.4608  m2_loss_mask_8: 0.1643  m2_loss_dice_8: 1.267    time: 1.4137  last_time: 1.3577  data_time: 0.0513  last_data_time: 0.0479   lr: 0.0001  max_mem: 34846M
[10/13 17:56:48] d2.utils.events INFO:  eta: 0:03:45  iter: 839  total_loss: 40.18  m1_loss_ce: 0.4735  m1_loss_mask: 0.1639  m1_loss_dice: 1.226  m1_loss_ce_0: 0.561  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.408  m1_loss_ce_1: 0.6421  m1_loss_mask_1: 0.1775  m1_loss_dice_1: 1.343  m1_loss_ce_2: 0.5607  m1_loss_mask_2: 0.1698  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5058  m1_loss_mask_3: 0.1669  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.4952  m1_loss_mask_4: 0.1648  m1_loss_dice_4: 1.263  m1_loss_ce_5: 0.5032  m1_loss_mask_5: 0.1636  m1_loss_dice_5: 1.288  m1_loss_ce_6: 0.4924  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.224  m1_loss_ce_7: 0.457  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.203  m1_loss_ce_8: 0.4774  m1_loss_mask_8: 0.1626  m1_loss_dice_8: 1.227  m2_loss_ce: 0.4976  m2_loss_mask: 0.1686  m2_loss_dice: 1.275  m2_loss_ce_0: 0.616  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.408  m2_loss_ce_1: 0.659  m2_loss_mask_1: 0.1831  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.6048  m2_loss_mask_2: 0.1699  m2_loss_dice_2: 1.366  m2_loss_ce_3: 0.5325  m2_loss_mask_3: 0.1676  m2_loss_dice_3: 1.292  m2_loss_ce_4: 0.5229  m2_loss_mask_4: 0.166  m2_loss_dice_4: 1.283  m2_loss_ce_5: 0.5149  m2_loss_mask_5: 0.1665  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.5042  m2_loss_mask_6: 0.1685  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.4971  m2_loss_mask_7: 0.1688  m2_loss_dice_7: 1.282  m2_loss_ce_8: 0.4829  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.287    time: 1.4138  last_time: 1.4012  data_time: 0.0557  last_data_time: 0.0804   lr: 0.0001  max_mem: 34846M
[10/13 17:57:16] d2.utils.events INFO:  eta: 0:03:17  iter: 859  total_loss: 38.55  m1_loss_ce: 0.441  m1_loss_mask: 0.1569  m1_loss_dice: 1.163  m1_loss_ce_0: 0.546  m1_loss_mask_0: 0.1782  m1_loss_dice_0: 1.382  m1_loss_ce_1: 0.5965  m1_loss_mask_1: 0.1704  m1_loss_dice_1: 1.291  m1_loss_ce_2: 0.5499  m1_loss_mask_2: 0.1657  m1_loss_dice_2: 1.257  m1_loss_ce_3: 0.4876  m1_loss_mask_3: 0.1598  m1_loss_dice_3: 1.204  m1_loss_ce_4: 0.4698  m1_loss_mask_4: 0.1565  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.4507  m1_loss_mask_5: 0.1574  m1_loss_dice_5: 1.169  m1_loss_ce_6: 0.4426  m1_loss_mask_6: 0.1583  m1_loss_dice_6: 1.169  m1_loss_ce_7: 0.4285  m1_loss_mask_7: 0.1566  m1_loss_dice_7: 1.17  m1_loss_ce_8: 0.4492  m1_loss_mask_8: 0.1572  m1_loss_dice_8: 1.14  m2_loss_ce: 0.451  m2_loss_mask: 0.1662  m2_loss_dice: 1.22  m2_loss_ce_0: 0.5992  m2_loss_mask_0: 0.1901  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6258  m2_loss_mask_1: 0.1808  m2_loss_dice_1: 1.393  m2_loss_ce_2: 0.5776  m2_loss_mask_2: 0.1698  m2_loss_dice_2: 1.324  m2_loss_ce_3: 0.5188  m2_loss_mask_3: 0.1719  m2_loss_dice_3: 1.21  m2_loss_ce_4: 0.5282  m2_loss_mask_4: 0.1663  m2_loss_dice_4: 1.215  m2_loss_ce_5: 0.4906  m2_loss_mask_5: 0.1653  m2_loss_dice_5: 1.227  m2_loss_ce_6: 0.4655  m2_loss_mask_6: 0.1674  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.4752  m2_loss_mask_7: 0.1683  m2_loss_dice_7: 1.242  m2_loss_ce_8: 0.4757  m2_loss_mask_8: 0.1652  m2_loss_dice_8: 1.194    time: 1.4136  last_time: 1.3717  data_time: 0.0485  last_data_time: 0.0447   lr: 0.0001  max_mem: 34846M
[10/13 17:57:44] d2.utils.events INFO:  eta: 0:02:49  iter: 879  total_loss: 38.51  m1_loss_ce: 0.382  m1_loss_mask: 0.1519  m1_loss_dice: 1.163  m1_loss_ce_0: 0.5141  m1_loss_mask_0: 0.1807  m1_loss_dice_0: 1.374  m1_loss_ce_1: 0.5864  m1_loss_mask_1: 0.1692  m1_loss_dice_1: 1.297  m1_loss_ce_2: 0.5502  m1_loss_mask_2: 0.1664  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.4581  m1_loss_mask_3: 0.1605  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.4687  m1_loss_mask_4: 0.1546  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.4722  m1_loss_mask_5: 0.1587  m1_loss_dice_5: 1.171  m1_loss_ce_6: 0.4254  m1_loss_mask_6: 0.1568  m1_loss_dice_6: 1.15  m1_loss_ce_7: 0.4291  m1_loss_mask_7: 0.1544  m1_loss_dice_7: 1.183  m1_loss_ce_8: 0.4421  m1_loss_mask_8: 0.1537  m1_loss_dice_8: 1.14  m2_loss_ce: 0.4609  m2_loss_mask: 0.1601  m2_loss_dice: 1.272  m2_loss_ce_0: 0.577  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.52  m2_loss_ce_1: 0.6377  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.554  m2_loss_mask_2: 0.1621  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5151  m2_loss_mask_3: 0.1641  m2_loss_dice_3: 1.261  m2_loss_ce_4: 0.4664  m2_loss_mask_4: 0.1601  m2_loss_dice_4: 1.29  m2_loss_ce_5: 0.5055  m2_loss_mask_5: 0.1597  m2_loss_dice_5: 1.247  m2_loss_ce_6: 0.4747  m2_loss_mask_6: 0.162  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.4524  m2_loss_mask_7: 0.1613  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.4745  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.254    time: 1.4137  last_time: 1.4557  data_time: 0.0473  last_data_time: 0.0483   lr: 0.0001  max_mem: 34846M
[10/13 17:58:12] d2.utils.events INFO:  eta: 0:02:20  iter: 899  total_loss: 38.68  m1_loss_ce: 0.4348  m1_loss_mask: 0.1573  m1_loss_dice: 1.182  m1_loss_ce_0: 0.571  m1_loss_mask_0: 0.1877  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.5835  m1_loss_mask_1: 0.1699  m1_loss_dice_1: 1.31  m1_loss_ce_2: 0.5569  m1_loss_mask_2: 0.1675  m1_loss_dice_2: 1.289  m1_loss_ce_3: 0.4926  m1_loss_mask_3: 0.1617  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.4721  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.232  m1_loss_ce_5: 0.4437  m1_loss_mask_5: 0.1583  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4473  m1_loss_mask_6: 0.1589  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.4528  m1_loss_mask_7: 0.158  m1_loss_dice_7: 1.174  m1_loss_ce_8: 0.42  m1_loss_mask_8: 0.1566  m1_loss_dice_8: 1.173  m2_loss_ce: 0.4678  m2_loss_mask: 0.162  m2_loss_dice: 1.274  m2_loss_ce_0: 0.6222  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6615  m2_loss_mask_1: 0.1807  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.5861  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.325  m2_loss_ce_3: 0.5471  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.5075  m2_loss_mask_4: 0.1609  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.4952  m2_loss_mask_5: 0.1613  m2_loss_dice_5: 1.273  m2_loss_ce_6: 0.4848  m2_loss_mask_6: 0.1625  m2_loss_dice_6: 1.248  m2_loss_ce_7: 0.499  m2_loss_mask_7: 0.1621  m2_loss_dice_7: 1.256  m2_loss_ce_8: 0.4872  m2_loss_mask_8: 0.1605  m2_loss_dice_8: 1.252    time: 1.4132  last_time: 1.3020  data_time: 0.0522  last_data_time: 0.0442   lr: 0.0001  max_mem: 34846M
[10/13 17:58:41] d2.utils.events INFO:  eta: 0:01:52  iter: 919  total_loss: 39.57  m1_loss_ce: 0.4365  m1_loss_mask: 0.1665  m1_loss_dice: 1.23  m1_loss_ce_0: 0.57  m1_loss_mask_0: 0.1908  m1_loss_dice_0: 1.432  m1_loss_ce_1: 0.6276  m1_loss_mask_1: 0.1766  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5773  m1_loss_mask_2: 0.1683  m1_loss_dice_2: 1.288  m1_loss_ce_3: 0.5031  m1_loss_mask_3: 0.1662  m1_loss_dice_3: 1.237  m1_loss_ce_4: 0.4704  m1_loss_mask_4: 0.168  m1_loss_dice_4: 1.229  m1_loss_ce_5: 0.4885  m1_loss_mask_5: 0.1632  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.457  m1_loss_mask_6: 0.1665  m1_loss_dice_6: 1.244  m1_loss_ce_7: 0.4375  m1_loss_mask_7: 0.1657  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4547  m1_loss_mask_8: 0.1665  m1_loss_dice_8: 1.199  m2_loss_ce: 0.4808  m2_loss_mask: 0.1687  m2_loss_dice: 1.257  m2_loss_ce_0: 0.6008  m2_loss_mask_0: 0.206  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.7005  m2_loss_mask_1: 0.1915  m2_loss_dice_1: 1.373  m2_loss_ce_2: 0.609  m2_loss_mask_2: 0.183  m2_loss_dice_2: 1.329  m2_loss_ce_3: 0.5531  m2_loss_mask_3: 0.1766  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5239  m2_loss_mask_4: 0.1767  m2_loss_dice_4: 1.272  m2_loss_ce_5: 0.515  m2_loss_mask_5: 0.1719  m2_loss_dice_5: 1.281  m2_loss_ce_6: 0.4733  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5084  m2_loss_mask_7: 0.1698  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.5015  m2_loss_mask_8: 0.1695  m2_loss_dice_8: 1.26    time: 1.4135  last_time: 1.4574  data_time: 0.0534  last_data_time: 0.0420   lr: 0.0001  max_mem: 34846M
[10/13 17:59:09] d2.utils.events INFO:  eta: 0:01:24  iter: 939  total_loss: 40.97  m1_loss_ce: 0.4754  m1_loss_mask: 0.1535  m1_loss_dice: 1.218  m1_loss_ce_0: 0.5713  m1_loss_mask_0: 0.1835  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.5963  m1_loss_mask_1: 0.166  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.5587  m1_loss_mask_2: 0.1526  m1_loss_dice_2: 1.299  m1_loss_ce_3: 0.5009  m1_loss_mask_3: 0.1522  m1_loss_dice_3: 1.28  m1_loss_ce_4: 0.4875  m1_loss_mask_4: 0.1528  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4827  m1_loss_mask_5: 0.1507  m1_loss_dice_5: 1.277  m1_loss_ce_6: 0.4565  m1_loss_mask_6: 0.1501  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4654  m1_loss_mask_7: 0.1508  m1_loss_dice_7: 1.238  m1_loss_ce_8: 0.4981  m1_loss_mask_8: 0.1536  m1_loss_dice_8: 1.248  m2_loss_ce: 0.5327  m2_loss_mask: 0.1605  m2_loss_dice: 1.316  m2_loss_ce_0: 0.6496  m2_loss_mask_0: 0.197  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.682  m2_loss_mask_1: 0.1754  m2_loss_dice_1: 1.455  m2_loss_ce_2: 0.6165  m2_loss_mask_2: 0.1583  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.5741  m2_loss_mask_3: 0.1572  m2_loss_dice_3: 1.346  m2_loss_ce_4: 0.5424  m2_loss_mask_4: 0.1554  m2_loss_dice_4: 1.339  m2_loss_ce_5: 0.5499  m2_loss_mask_5: 0.1563  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.5078  m2_loss_mask_6: 0.1589  m2_loss_dice_6: 1.305  m2_loss_ce_7: 0.4854  m2_loss_mask_7: 0.161  m2_loss_dice_7: 1.306  m2_loss_ce_8: 0.4967  m2_loss_mask_8: 0.1555  m2_loss_dice_8: 1.323    time: 1.4136  last_time: 1.3459  data_time: 0.0579  last_data_time: 0.0679   lr: 0.0001  max_mem: 35003M
[10/13 17:59:38] d2.utils.events INFO:  eta: 0:00:56  iter: 959  total_loss: 37.79  m1_loss_ce: 0.4213  m1_loss_mask: 0.1636  m1_loss_dice: 1.15  m1_loss_ce_0: 0.5672  m1_loss_mask_0: 0.1924  m1_loss_dice_0: 1.346  m1_loss_ce_1: 0.5362  m1_loss_mask_1: 0.1728  m1_loss_dice_1: 1.289  m1_loss_ce_2: 0.5239  m1_loss_mask_2: 0.1661  m1_loss_dice_2: 1.233  m1_loss_ce_3: 0.4504  m1_loss_mask_3: 0.1651  m1_loss_dice_3: 1.164  m1_loss_ce_4: 0.4357  m1_loss_mask_4: 0.1655  m1_loss_dice_4: 1.177  m1_loss_ce_5: 0.4458  m1_loss_mask_5: 0.1643  m1_loss_dice_5: 1.16  m1_loss_ce_6: 0.4186  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.162  m1_loss_ce_7: 0.4284  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.4079  m1_loss_mask_8: 0.1641  m1_loss_dice_8: 1.159  m2_loss_ce: 0.4575  m2_loss_mask: 0.169  m2_loss_dice: 1.227  m2_loss_ce_0: 0.584  m2_loss_mask_0: 0.1979  m2_loss_dice_0: 1.444  m2_loss_ce_1: 0.6422  m2_loss_mask_1: 0.1854  m2_loss_dice_1: 1.366  m2_loss_ce_2: 0.5319  m2_loss_mask_2: 0.1705  m2_loss_dice_2: 1.345  m2_loss_ce_3: 0.5479  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.5023  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.258  m2_loss_ce_5: 0.4828  m2_loss_mask_5: 0.1675  m2_loss_dice_5: 1.224  m2_loss_ce_6: 0.4422  m2_loss_mask_6: 0.17  m2_loss_dice_6: 1.245  m2_loss_ce_7: 0.479  m2_loss_mask_7: 0.1696  m2_loss_dice_7: 1.201  m2_loss_ce_8: 0.4359  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.221    time: 1.4136  last_time: 1.4228  data_time: 0.0548  last_data_time: 0.0904   lr: 0.0001  max_mem: 35003M
[10/13 18:00:07] d2.utils.events INFO:  eta: 0:00:28  iter: 979  total_loss: 41.58  m1_loss_ce: 0.4489  m1_loss_mask: 0.1572  m1_loss_dice: 1.25  m1_loss_ce_0: 0.5679  m1_loss_mask_0: 0.1811  m1_loss_dice_0: 1.463  m1_loss_ce_1: 0.6179  m1_loss_mask_1: 0.1724  m1_loss_dice_1: 1.363  m1_loss_ce_2: 0.5718  m1_loss_mask_2: 0.1657  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5292  m1_loss_mask_3: 0.1627  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.4674  m1_loss_mask_4: 0.1635  m1_loss_dice_4: 1.253  m1_loss_ce_5: 0.4992  m1_loss_mask_5: 0.1647  m1_loss_dice_5: 1.281  m1_loss_ce_6: 0.4764  m1_loss_mask_6: 0.163  m1_loss_dice_6: 1.266  m1_loss_ce_7: 0.4582  m1_loss_mask_7: 0.1546  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4621  m1_loss_mask_8: 0.1601  m1_loss_dice_8: 1.266  m2_loss_ce: 0.5051  m2_loss_mask: 0.1657  m2_loss_dice: 1.33  m2_loss_ce_0: 0.6423  m2_loss_mask_0: 0.1909  m2_loss_dice_0: 1.548  m2_loss_ce_1: 0.6719  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.471  m2_loss_ce_2: 0.6123  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.394  m2_loss_ce_3: 0.5822  m2_loss_mask_3: 0.1674  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5658  m2_loss_mask_4: 0.1658  m2_loss_dice_4: 1.36  m2_loss_ce_5: 0.5524  m2_loss_mask_5: 0.1669  m2_loss_dice_5: 1.312  m2_loss_ce_6: 0.5374  m2_loss_mask_6: 0.1677  m2_loss_dice_6: 1.316  m2_loss_ce_7: 0.5164  m2_loss_mask_7: 0.1666  m2_loss_dice_7: 1.278  m2_loss_ce_8: 0.5134  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.361    time: 1.4141  last_time: 1.3585  data_time: 0.0508  last_data_time: 0.0566   lr: 0.0001  max_mem: 35003M
[10/13 18:00:35] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6/model_final.pth
[10/13 18:00:39] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 39.44  m1_loss_ce: 0.4455  m1_loss_mask: 0.1552  m1_loss_dice: 1.179  m1_loss_ce_0: 0.5375  m1_loss_mask_0: 0.1776  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.5777  m1_loss_mask_1: 0.169  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5455  m1_loss_mask_2: 0.1622  m1_loss_dice_2: 1.235  m1_loss_ce_3: 0.4912  m1_loss_mask_3: 0.1589  m1_loss_dice_3: 1.241  m1_loss_ce_4: 0.4766  m1_loss_mask_4: 0.1566  m1_loss_dice_4: 1.206  m1_loss_ce_5: 0.4377  m1_loss_mask_5: 0.1554  m1_loss_dice_5: 1.196  m1_loss_ce_6: 0.4482  m1_loss_mask_6: 0.1527  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.4436  m1_loss_mask_7: 0.153  m1_loss_dice_7: 1.197  m1_loss_ce_8: 0.4279  m1_loss_mask_8: 0.1552  m1_loss_dice_8: 1.176  m2_loss_ce: 0.5172  m2_loss_mask: 0.1586  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6283  m2_loss_mask_0: 0.1853  m2_loss_dice_0: 1.464  m2_loss_ce_1: 0.6665  m2_loss_mask_1: 0.1724  m2_loss_dice_1: 1.403  m2_loss_ce_2: 0.6058  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.35  m2_loss_ce_3: 0.5769  m2_loss_mask_3: 0.1621  m2_loss_dice_3: 1.269  m2_loss_ce_4: 0.5374  m2_loss_mask_4: 0.1593  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.5451  m2_loss_mask_5: 0.1568  m2_loss_dice_5: 1.242  m2_loss_ce_6: 0.5061  m2_loss_mask_6: 0.1574  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.5079  m2_loss_mask_7: 0.1583  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.5135  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.242    time: 1.4143  last_time: 1.3948  data_time: 0.0537  last_data_time: 0.0469   lr: 0.0001  max_mem: 35003M
[10/13 18:00:40] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:23:31 (1.4143 s / it)
[10/13 18:00:40] d2.engine.hooks INFO: Total training time: 0:23:41 (0:00:09 on hooks)
[10/13 18:00:40] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/13 18:00:40] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/13 18:00:40] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/13 18:00:40] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/13 18:00:40] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/13 18:02:08] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalzukoo3ws ...
[10/13 18:02:56] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 58.447 | 80.811 | 71.184 |      19       |
| Things | 50.651 | 80.363 | 62.871 |       8       |
| Stuff  | 64.116 | 81.137 | 77.229 |      11       |
[10/13 18:02:56] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.289 | 97.592 | 99.690 |     Stuff     |
| class_8  | 73.076 | 84.332 | 86.652 |     Stuff     |
| class_11 | 87.724 | 89.651 | 97.851 |     Stuff     |
| class_12 | 40.875 | 78.571 | 52.023 |     Stuff     |
| class_13 | 37.816 | 75.042 | 50.394 |     Stuff     |
| class_17 | 41.793 | 63.142 | 66.189 |     Stuff     |
| class_19 | 48.700 | 68.580 | 71.012 |     Stuff     |
| class_20 | 64.840 | 77.522 | 83.640 |     Stuff     |
| class_21 | 88.837 | 90.040 | 98.664 |     Stuff     |
| class_22 | 35.967 | 76.165 | 47.222 |     Stuff     |
| class_23 | 88.360 | 91.865 | 96.185 |     Stuff     |
| class_24 | 52.570 | 76.944 | 68.322 |    Things     |
| class_25 | 47.427 | 74.244 | 63.879 |    Things     |
| class_26 | 66.945 | 83.508 | 80.165 |    Things     |
| class_27 | 45.980 | 86.314 | 53.271 |    Things     |
| class_28 | 63.134 | 90.956 | 69.412 |    Things     |
| class_31 | 47.956 | 86.321 | 55.556 |    Things     |
| class_32 | 40.366 | 74.005 | 54.545 |    Things     |
| class_33 | 40.832 | 70.616 | 57.822 |    Things     |
[10/13 18:02:56] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/13 18:02:56] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/13 18:02:56] d2.evaluation.testing INFO: copypaste: 58.4466,80.8110,71.1838,50.6511,80.3635,62.8715,64.1161,81.1365,77.2292,97.2894,97.5922,99.6898,73.0758,84.3324,86.6521,87.7237,89.6507,97.8506,40.8749,78.5706,52.0231,37.8162,75.0415,50.3937,41.7929,63.1422,66.1885,48.6997,68.5795,71.0120,64.8399,77.5223,83.6403,88.8371,90.0401,98.6639,35.9668,76.1650,47.2222,88.3604,91.8651,96.1850,52.5696,76.9439,68.3219,47.4266,74.2442,63.8792,66.9446,83.5084,80.1651,45.9802,86.3136,53.2710,63.1341,90.9559,69.4118,47.9559,86.3206,55.5556,40.3663,74.0049,54.5455,40.8317,70.6163,57.8220
[10/13 18:09:02] detectron2 INFO: Rank of current process: 0. World size: 2
[10/13 18:09:04] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/13 18:09:04] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_4_0_6_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/13 18:09:04] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_0_4_0_6_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/13 18:09:04] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/13 18:09:04] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6/config.yaml
[10/13 18:09:04] d2.utils.env INFO: Using a generated random seed 5826643
[10/13 18:09:08] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/13 18:09:08] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/13 18:09:08] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/13 18:09:08] d2.data.build INFO: Using training sampler TrainingSampler
[10/13 18:09:09] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/13 18:09:09] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/13 18:09:09] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/13 18:09:09] d2.data.build INFO: Making batched data loader with batch_size=4
[10/13 18:09:09] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/13 18:09:13] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/13 18:09:13] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 18:09:13] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 18:09:29] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 18:09:29] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/13 18:10:05] d2.utils.events INFO:  eta: 0:22:57  iter: 19  total_loss: 38.92  m1_loss_ce: 0.4398  m1_loss_mask: 0.1629  m1_loss_dice: 1.192  m1_loss_ce_0: 0.5782  m1_loss_mask_0: 0.1948  m1_loss_dice_0: 1.439  m1_loss_ce_1: 0.6477  m1_loss_mask_1: 0.1872  m1_loss_dice_1: 1.359  m1_loss_ce_2: 0.5622  m1_loss_mask_2: 0.1716  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5143  m1_loss_mask_3: 0.1734  m1_loss_dice_3: 1.285  m1_loss_ce_4: 0.4728  m1_loss_mask_4: 0.1677  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.483  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.183  m1_loss_ce_6: 0.4667  m1_loss_mask_6: 0.17  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.4733  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.226  m1_loss_ce_8: 0.4431  m1_loss_mask_8: 0.1616  m1_loss_dice_8: 1.198  m2_loss_ce: 0.4565  m2_loss_mask: 0.1624  m2_loss_dice: 1.249  m2_loss_ce_0: 0.596  m2_loss_mask_0: 0.193  m2_loss_dice_0: 1.436  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.1816  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.5715  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.296  m2_loss_ce_3: 0.5015  m2_loss_mask_3: 0.1653  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.4901  m2_loss_mask_4: 0.1615  m2_loss_dice_4: 1.267  m2_loss_ce_5: 0.4655  m2_loss_mask_5: 0.1605  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.4638  m2_loss_mask_6: 0.1625  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.457  m2_loss_mask_7: 0.1602  m2_loss_dice_7: 1.212  m2_loss_ce_8: 0.4546  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.23    time: 1.4389  last_time: 1.4056  data_time: 0.2717  last_data_time: 0.0662   lr: 0.0001  max_mem: 34285M
[10/13 18:10:33] d2.utils.events INFO:  eta: 0:22:27  iter: 39  total_loss: 39.24  m1_loss_ce: 0.4693  m1_loss_mask: 0.1648  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5867  m1_loss_mask_0: 0.1965  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.6363  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.344  m1_loss_ce_2: 0.5743  m1_loss_mask_2: 0.1693  m1_loss_dice_2: 1.264  m1_loss_ce_3: 0.5104  m1_loss_mask_3: 0.1684  m1_loss_dice_3: 1.231  m1_loss_ce_4: 0.4809  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.207  m1_loss_ce_5: 0.4533  m1_loss_mask_5: 0.1665  m1_loss_dice_5: 1.2  m1_loss_ce_6: 0.4909  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.4622  m1_loss_mask_7: 0.1641  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.4674  m1_loss_mask_8: 0.1662  m1_loss_dice_8: 1.202  m2_loss_ce: 0.4741  m2_loss_mask: 0.1645  m2_loss_dice: 1.249  m2_loss_ce_0: 0.5995  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.391  m2_loss_ce_1: 0.6777  m2_loss_mask_1: 0.1845  m2_loss_dice_1: 1.314  m2_loss_ce_2: 0.5893  m2_loss_mask_2: 0.1729  m2_loss_dice_2: 1.264  m2_loss_ce_3: 0.5569  m2_loss_mask_3: 0.1711  m2_loss_dice_3: 1.235  m2_loss_ce_4: 0.5078  m2_loss_mask_4: 0.1665  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5079  m2_loss_mask_5: 0.1634  m2_loss_dice_5: 1.216  m2_loss_ce_6: 0.4888  m2_loss_mask_6: 0.164  m2_loss_dice_6: 1.217  m2_loss_ce_7: 0.5095  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.195  m2_loss_ce_8: 0.5092  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.194    time: 1.4174  last_time: 1.3354  data_time: 0.0471  last_data_time: 0.0430   lr: 0.0001  max_mem: 34285M
[10/13 18:11:02] d2.utils.events INFO:  eta: 0:22:08  iter: 59  total_loss: 40.86  m1_loss_ce: 0.4886  m1_loss_mask: 0.161  m1_loss_dice: 1.227  m1_loss_ce_0: 0.5511  m1_loss_mask_0: 0.1896  m1_loss_dice_0: 1.526  m1_loss_ce_1: 0.6366  m1_loss_mask_1: 0.1769  m1_loss_dice_1: 1.398  m1_loss_ce_2: 0.6073  m1_loss_mask_2: 0.1677  m1_loss_dice_2: 1.345  m1_loss_ce_3: 0.5365  m1_loss_mask_3: 0.164  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.5317  m1_loss_mask_4: 0.1643  m1_loss_dice_4: 1.27  m1_loss_ce_5: 0.5217  m1_loss_mask_5: 0.1605  m1_loss_dice_5: 1.236  m1_loss_ce_6: 0.4987  m1_loss_mask_6: 0.1624  m1_loss_dice_6: 1.239  m1_loss_ce_7: 0.505  m1_loss_mask_7: 0.1604  m1_loss_dice_7: 1.252  m1_loss_ce_8: 0.501  m1_loss_mask_8: 0.1582  m1_loss_dice_8: 1.277  m2_loss_ce: 0.4535  m2_loss_mask: 0.1614  m2_loss_dice: 1.266  m2_loss_ce_0: 0.5865  m2_loss_mask_0: 0.1913  m2_loss_dice_0: 1.524  m2_loss_ce_1: 0.684  m2_loss_mask_1: 0.1773  m2_loss_dice_1: 1.44  m2_loss_ce_2: 0.5678  m2_loss_mask_2: 0.1665  m2_loss_dice_2: 1.36  m2_loss_ce_3: 0.5383  m2_loss_mask_3: 0.1635  m2_loss_dice_3: 1.287  m2_loss_ce_4: 0.4783  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.4927  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.4545  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.3  m2_loss_ce_7: 0.4829  m2_loss_mask_7: 0.1652  m2_loss_dice_7: 1.279  m2_loss_ce_8: 0.4523  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.256    time: 1.4186  last_time: 1.4068  data_time: 0.0520  last_data_time: 0.0550   lr: 0.0001  max_mem: 34285M
[10/13 18:11:30] d2.utils.events INFO:  eta: 0:21:38  iter: 79  total_loss: 39.75  m1_loss_ce: 0.4854  m1_loss_mask: 0.1644  m1_loss_dice: 1.159  m1_loss_ce_0: 0.6031  m1_loss_mask_0: 0.1963  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.6178  m1_loss_mask_1: 0.1814  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.5913  m1_loss_mask_2: 0.1714  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.5503  m1_loss_mask_3: 0.1693  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.5415  m1_loss_mask_4: 0.1684  m1_loss_dice_4: 1.22  m1_loss_ce_5: 0.5184  m1_loss_mask_5: 0.1691  m1_loss_dice_5: 1.194  m1_loss_ce_6: 0.5127  m1_loss_mask_6: 0.1661  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.4845  m1_loss_mask_7: 0.1687  m1_loss_dice_7: 1.188  m1_loss_ce_8: 0.489  m1_loss_mask_8: 0.1653  m1_loss_dice_8: 1.172  m2_loss_ce: 0.4601  m2_loss_mask: 0.1657  m2_loss_dice: 1.213  m2_loss_ce_0: 0.613  m2_loss_mask_0: 0.2041  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6768  m2_loss_mask_1: 0.1847  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.5763  m2_loss_mask_2: 0.1712  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5375  m2_loss_mask_3: 0.1681  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.5537  m2_loss_mask_4: 0.1659  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.5185  m2_loss_mask_5: 0.1637  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4851  m2_loss_mask_6: 0.1664  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4716  m2_loss_mask_7: 0.1642  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4728  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.214    time: 1.4171  last_time: 1.4254  data_time: 0.0516  last_data_time: 0.0510   lr: 0.0001  max_mem: 34285M
[10/13 18:11:59] d2.utils.events INFO:  eta: 0:21:13  iter: 99  total_loss: 41.07  m1_loss_ce: 0.5065  m1_loss_mask: 0.1699  m1_loss_dice: 1.223  m1_loss_ce_0: 0.589  m1_loss_mask_0: 0.1996  m1_loss_dice_0: 1.468  m1_loss_ce_1: 0.6782  m1_loss_mask_1: 0.1818  m1_loss_dice_1: 1.424  m1_loss_ce_2: 0.619  m1_loss_mask_2: 0.1819  m1_loss_dice_2: 1.355  m1_loss_ce_3: 0.5812  m1_loss_mask_3: 0.1776  m1_loss_dice_3: 1.333  m1_loss_ce_4: 0.5328  m1_loss_mask_4: 0.1741  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5201  m1_loss_mask_5: 0.1782  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.5146  m1_loss_mask_6: 0.1781  m1_loss_dice_6: 1.226  m1_loss_ce_7: 0.5058  m1_loss_mask_7: 0.1747  m1_loss_dice_7: 1.253  m1_loss_ce_8: 0.5217  m1_loss_mask_8: 0.1745  m1_loss_dice_8: 1.235  m2_loss_ce: 0.4985  m2_loss_mask: 0.1785  m2_loss_dice: 1.294  m2_loss_ce_0: 0.617  m2_loss_mask_0: 0.2044  m2_loss_dice_0: 1.5  m2_loss_ce_1: 0.6693  m2_loss_mask_1: 0.1959  m2_loss_dice_1: 1.45  m2_loss_ce_2: 0.6219  m2_loss_mask_2: 0.182  m2_loss_dice_2: 1.377  m2_loss_ce_3: 0.5637  m2_loss_mask_3: 0.1821  m2_loss_dice_3: 1.325  m2_loss_ce_4: 0.5279  m2_loss_mask_4: 0.1789  m2_loss_dice_4: 1.335  m2_loss_ce_5: 0.5199  m2_loss_mask_5: 0.1771  m2_loss_dice_5: 1.312  m2_loss_ce_6: 0.4874  m2_loss_mask_6: 0.1763  m2_loss_dice_6: 1.281  m2_loss_ce_7: 0.5331  m2_loss_mask_7: 0.1776  m2_loss_dice_7: 1.281  m2_loss_ce_8: 0.4976  m2_loss_mask_8: 0.1769  m2_loss_dice_8: 1.276    time: 1.4191  last_time: 1.4270  data_time: 0.0515  last_data_time: 0.0419   lr: 0.0001  max_mem: 34285M
[10/13 18:12:27] d2.utils.events INFO:  eta: 0:20:46  iter: 119  total_loss: 39.65  m1_loss_ce: 0.4447  m1_loss_mask: 0.168  m1_loss_dice: 1.199  m1_loss_ce_0: 0.5543  m1_loss_mask_0: 0.195  m1_loss_dice_0: 1.447  m1_loss_ce_1: 0.6623  m1_loss_mask_1: 0.1878  m1_loss_dice_1: 1.35  m1_loss_ce_2: 0.5841  m1_loss_mask_2: 0.1756  m1_loss_dice_2: 1.285  m1_loss_ce_3: 0.5584  m1_loss_mask_3: 0.1751  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.5163  m1_loss_mask_4: 0.1739  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.5242  m1_loss_mask_5: 0.1713  m1_loss_dice_5: 1.211  m1_loss_ce_6: 0.5009  m1_loss_mask_6: 0.169  m1_loss_dice_6: 1.191  m1_loss_ce_7: 0.4599  m1_loss_mask_7: 0.1694  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4705  m1_loss_mask_8: 0.1687  m1_loss_dice_8: 1.187  m2_loss_ce: 0.4581  m2_loss_mask: 0.1612  m2_loss_dice: 1.22  m2_loss_ce_0: 0.5845  m2_loss_mask_0: 0.1993  m2_loss_dice_0: 1.415  m2_loss_ce_1: 0.6528  m2_loss_mask_1: 0.1794  m2_loss_dice_1: 1.369  m2_loss_ce_2: 0.574  m2_loss_mask_2: 0.1713  m2_loss_dice_2: 1.305  m2_loss_ce_3: 0.5091  m2_loss_mask_3: 0.1679  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.4983  m2_loss_mask_4: 0.1661  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4708  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4765  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.4714  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4934  m2_loss_mask_8: 0.1615  m2_loss_dice_8: 1.231    time: 1.4190  last_time: 1.3916  data_time: 0.0470  last_data_time: 0.0467   lr: 0.0001  max_mem: 34285M
[10/13 18:12:56] d2.utils.events INFO:  eta: 0:20:19  iter: 139  total_loss: 40.42  m1_loss_ce: 0.4735  m1_loss_mask: 0.1685  m1_loss_dice: 1.252  m1_loss_ce_0: 0.5676  m1_loss_mask_0: 0.1908  m1_loss_dice_0: 1.483  m1_loss_ce_1: 0.6382  m1_loss_mask_1: 0.1768  m1_loss_dice_1: 1.397  m1_loss_ce_2: 0.5951  m1_loss_mask_2: 0.1671  m1_loss_dice_2: 1.309  m1_loss_ce_3: 0.5357  m1_loss_mask_3: 0.1699  m1_loss_dice_3: 1.271  m1_loss_ce_4: 0.5002  m1_loss_mask_4: 0.1678  m1_loss_dice_4: 1.246  m1_loss_ce_5: 0.4752  m1_loss_mask_5: 0.1676  m1_loss_dice_5: 1.253  m1_loss_ce_6: 0.4864  m1_loss_mask_6: 0.1648  m1_loss_dice_6: 1.23  m1_loss_ce_7: 0.4502  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.26  m1_loss_ce_8: 0.4442  m1_loss_mask_8: 0.1664  m1_loss_dice_8: 1.24  m2_loss_ce: 0.4633  m2_loss_mask: 0.1586  m2_loss_dice: 1.315  m2_loss_ce_0: 0.5987  m2_loss_mask_0: 0.1879  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.708  m2_loss_mask_1: 0.1752  m2_loss_dice_1: 1.427  m2_loss_ce_2: 0.5689  m2_loss_mask_2: 0.1604  m2_loss_dice_2: 1.362  m2_loss_ce_3: 0.5265  m2_loss_mask_3: 0.1581  m2_loss_dice_3: 1.288  m2_loss_ce_4: 0.5159  m2_loss_mask_4: 0.1585  m2_loss_dice_4: 1.323  m2_loss_ce_5: 0.4985  m2_loss_mask_5: 0.1597  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.4989  m2_loss_mask_6: 0.1614  m2_loss_dice_6: 1.27  m2_loss_ce_7: 0.4834  m2_loss_mask_7: 0.1609  m2_loss_dice_7: 1.241  m2_loss_ce_8: 0.4797  m2_loss_mask_8: 0.1609  m2_loss_dice_8: 1.272    time: 1.4206  last_time: 1.4830  data_time: 0.0535  last_data_time: 0.0673   lr: 0.0001  max_mem: 34285M
[10/13 18:13:24] d2.utils.events INFO:  eta: 0:19:48  iter: 159  total_loss: 39.96  m1_loss_ce: 0.4896  m1_loss_mask: 0.1615  m1_loss_dice: 1.233  m1_loss_ce_0: 0.5725  m1_loss_mask_0: 0.1914  m1_loss_dice_0: 1.459  m1_loss_ce_1: 0.653  m1_loss_mask_1: 0.1784  m1_loss_dice_1: 1.381  m1_loss_ce_2: 0.6187  m1_loss_mask_2: 0.1669  m1_loss_dice_2: 1.358  m1_loss_ce_3: 0.5201  m1_loss_mask_3: 0.1607  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4976  m1_loss_mask_4: 0.1617  m1_loss_dice_4: 1.255  m1_loss_ce_5: 0.4922  m1_loss_mask_5: 0.1624  m1_loss_dice_5: 1.271  m1_loss_ce_6: 0.4538  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.28  m1_loss_ce_7: 0.4991  m1_loss_mask_7: 0.1615  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.5167  m1_loss_mask_8: 0.162  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4625  m2_loss_mask: 0.1609  m2_loss_dice: 1.22  m2_loss_ce_0: 0.6258  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6822  m2_loss_mask_1: 0.1801  m2_loss_dice_1: 1.353  m2_loss_ce_2: 0.5956  m2_loss_mask_2: 0.1693  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5051  m2_loss_mask_3: 0.1637  m2_loss_dice_3: 1.25  m2_loss_ce_4: 0.5173  m2_loss_mask_4: 0.162  m2_loss_dice_4: 1.246  m2_loss_ce_5: 0.509  m2_loss_mask_5: 0.1591  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4941  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.4919  m2_loss_mask_7: 0.1592  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.466  m2_loss_mask_8: 0.1588  m2_loss_dice_8: 1.28    time: 1.4185  last_time: 1.3643  data_time: 0.0509  last_data_time: 0.0452   lr: 0.0001  max_mem: 34285M
[10/13 18:13:53] d2.utils.events INFO:  eta: 0:19:20  iter: 179  total_loss: 40.09  m1_loss_ce: 0.4675  m1_loss_mask: 0.1699  m1_loss_dice: 1.25  m1_loss_ce_0: 0.5798  m1_loss_mask_0: 0.1943  m1_loss_dice_0: 1.462  m1_loss_ce_1: 0.6239  m1_loss_mask_1: 0.1754  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5831  m1_loss_mask_2: 0.1727  m1_loss_dice_2: 1.324  m1_loss_ce_3: 0.5718  m1_loss_mask_3: 0.1693  m1_loss_dice_3: 1.261  m1_loss_ce_4: 0.5325  m1_loss_mask_4: 0.1723  m1_loss_dice_4: 1.279  m1_loss_ce_5: 0.5244  m1_loss_mask_5: 0.1722  m1_loss_dice_5: 1.254  m1_loss_ce_6: 0.5057  m1_loss_mask_6: 0.1729  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4856  m1_loss_mask_7: 0.1738  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4853  m1_loss_mask_8: 0.173  m1_loss_dice_8: 1.232  m2_loss_ce: 0.4741  m2_loss_mask: 0.1626  m2_loss_dice: 1.244  m2_loss_ce_0: 0.6209  m2_loss_mask_0: 0.1974  m2_loss_dice_0: 1.462  m2_loss_ce_1: 0.6721  m2_loss_mask_1: 0.1784  m2_loss_dice_1: 1.418  m2_loss_ce_2: 0.586  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5514  m2_loss_mask_3: 0.166  m2_loss_dice_3: 1.279  m2_loss_ce_4: 0.527  m2_loss_mask_4: 0.1616  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5089  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.26  m2_loss_ce_6: 0.4916  m2_loss_mask_6: 0.1624  m2_loss_dice_6: 1.233  m2_loss_ce_7: 0.4959  m2_loss_mask_7: 0.1618  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4974  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.244    time: 1.4170  last_time: 1.4175  data_time: 0.0467  last_data_time: 0.0420   lr: 0.0001  max_mem: 34285M
[10/13 18:14:21] d2.utils.events INFO:  eta: 0:18:52  iter: 199  total_loss: 41.79  m1_loss_ce: 0.504  m1_loss_mask: 0.1754  m1_loss_dice: 1.339  m1_loss_ce_0: 0.5813  m1_loss_mask_0: 0.203  m1_loss_dice_0: 1.52  m1_loss_ce_1: 0.6834  m1_loss_mask_1: 0.1929  m1_loss_dice_1: 1.442  m1_loss_ce_2: 0.6032  m1_loss_mask_2: 0.185  m1_loss_dice_2: 1.399  m1_loss_ce_3: 0.5754  m1_loss_mask_3: 0.1829  m1_loss_dice_3: 1.349  m1_loss_ce_4: 0.5342  m1_loss_mask_4: 0.1785  m1_loss_dice_4: 1.297  m1_loss_ce_5: 0.542  m1_loss_mask_5: 0.1782  m1_loss_dice_5: 1.3  m1_loss_ce_6: 0.5125  m1_loss_mask_6: 0.1804  m1_loss_dice_6: 1.336  m1_loss_ce_7: 0.4917  m1_loss_mask_7: 0.177  m1_loss_dice_7: 1.33  m1_loss_ce_8: 0.4969  m1_loss_mask_8: 0.1809  m1_loss_dice_8: 1.285  m2_loss_ce: 0.4842  m2_loss_mask: 0.1693  m2_loss_dice: 1.267  m2_loss_ce_0: 0.6179  m2_loss_mask_0: 0.1983  m2_loss_dice_0: 1.562  m2_loss_ce_1: 0.693  m2_loss_mask_1: 0.1852  m2_loss_dice_1: 1.449  m2_loss_ce_2: 0.6128  m2_loss_mask_2: 0.1764  m2_loss_dice_2: 1.383  m2_loss_ce_3: 0.5635  m2_loss_mask_3: 0.1748  m2_loss_dice_3: 1.342  m2_loss_ce_4: 0.5421  m2_loss_mask_4: 0.1723  m2_loss_dice_4: 1.317  m2_loss_ce_5: 0.5375  m2_loss_mask_5: 0.1706  m2_loss_dice_5: 1.315  m2_loss_ce_6: 0.5346  m2_loss_mask_6: 0.1677  m2_loss_dice_6: 1.3  m2_loss_ce_7: 0.5244  m2_loss_mask_7: 0.1714  m2_loss_dice_7: 1.329  m2_loss_ce_8: 0.5099  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.34    time: 1.4178  last_time: 1.4426  data_time: 0.0539  last_data_time: 0.0501   lr: 0.0001  max_mem: 34285M
[10/13 18:14:49] d2.utils.events INFO:  eta: 0:18:23  iter: 219  total_loss: 41.19  m1_loss_ce: 0.5159  m1_loss_mask: 0.1643  m1_loss_dice: 1.217  m1_loss_ce_0: 0.6008  m1_loss_mask_0: 0.1906  m1_loss_dice_0: 1.485  m1_loss_ce_1: 0.6786  m1_loss_mask_1: 0.177  m1_loss_dice_1: 1.418  m1_loss_ce_2: 0.6261  m1_loss_mask_2: 0.1662  m1_loss_dice_2: 1.335  m1_loss_ce_3: 0.5499  m1_loss_mask_3: 0.1665  m1_loss_dice_3: 1.29  m1_loss_ce_4: 0.5286  m1_loss_mask_4: 0.1661  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.5223  m1_loss_mask_5: 0.1661  m1_loss_dice_5: 1.225  m1_loss_ce_6: 0.5182  m1_loss_mask_6: 0.1653  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.523  m1_loss_mask_7: 0.1637  m1_loss_dice_7: 1.256  m1_loss_ce_8: 0.5239  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.225  m2_loss_ce: 0.5014  m2_loss_mask: 0.1661  m2_loss_dice: 1.315  m2_loss_ce_0: 0.6185  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.6642  m2_loss_mask_1: 0.1824  m2_loss_dice_1: 1.425  m2_loss_ce_2: 0.6156  m2_loss_mask_2: 0.1727  m2_loss_dice_2: 1.382  m2_loss_ce_3: 0.5412  m2_loss_mask_3: 0.1708  m2_loss_dice_3: 1.322  m2_loss_ce_4: 0.5185  m2_loss_mask_4: 0.1682  m2_loss_dice_4: 1.276  m2_loss_ce_5: 0.5195  m2_loss_mask_5: 0.1681  m2_loss_dice_5: 1.287  m2_loss_ce_6: 0.5219  m2_loss_mask_6: 0.1686  m2_loss_dice_6: 1.336  m2_loss_ce_7: 0.5087  m2_loss_mask_7: 0.1672  m2_loss_dice_7: 1.281  m2_loss_ce_8: 0.5085  m2_loss_mask_8: 0.1683  m2_loss_dice_8: 1.293    time: 1.4169  last_time: 1.4585  data_time: 0.0505  last_data_time: 0.0502   lr: 0.0001  max_mem: 34285M
[10/13 18:15:17] d2.utils.events INFO:  eta: 0:17:53  iter: 239  total_loss: 39.45  m1_loss_ce: 0.4533  m1_loss_mask: 0.1696  m1_loss_dice: 1.234  m1_loss_ce_0: 0.5365  m1_loss_mask_0: 0.1967  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.6065  m1_loss_mask_1: 0.1834  m1_loss_dice_1: 1.345  m1_loss_ce_2: 0.5566  m1_loss_mask_2: 0.1726  m1_loss_dice_2: 1.322  m1_loss_ce_3: 0.5098  m1_loss_mask_3: 0.1716  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4698  m1_loss_mask_4: 0.1726  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.4783  m1_loss_mask_5: 0.163  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4793  m1_loss_mask_6: 0.1676  m1_loss_dice_6: 1.189  m1_loss_ce_7: 0.4608  m1_loss_mask_7: 0.1715  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4617  m1_loss_mask_8: 0.1698  m1_loss_dice_8: 1.229  m2_loss_ce: 0.4417  m2_loss_mask: 0.1735  m2_loss_dice: 1.243  m2_loss_ce_0: 0.5525  m2_loss_mask_0: 0.1986  m2_loss_dice_0: 1.45  m2_loss_ce_1: 0.633  m2_loss_mask_1: 0.1844  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.5495  m2_loss_mask_2: 0.1751  m2_loss_dice_2: 1.32  m2_loss_ce_3: 0.4987  m2_loss_mask_3: 0.1722  m2_loss_dice_3: 1.233  m2_loss_ce_4: 0.4822  m2_loss_mask_4: 0.1723  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.473  m2_loss_mask_5: 0.1728  m2_loss_dice_5: 1.266  m2_loss_ce_6: 0.4492  m2_loss_mask_6: 0.1753  m2_loss_dice_6: 1.244  m2_loss_ce_7: 0.4381  m2_loss_mask_7: 0.1755  m2_loss_dice_7: 1.233  m2_loss_ce_8: 0.4214  m2_loss_mask_8: 0.1725  m2_loss_dice_8: 1.234    time: 1.4134  last_time: 1.3799  data_time: 0.0487  last_data_time: 0.0506   lr: 0.0001  max_mem: 34285M
[10/13 18:15:46] d2.utils.events INFO:  eta: 0:17:26  iter: 259  total_loss: 40.05  m1_loss_ce: 0.4429  m1_loss_mask: 0.1716  m1_loss_dice: 1.262  m1_loss_ce_0: 0.59  m1_loss_mask_0: 0.1923  m1_loss_dice_0: 1.476  m1_loss_ce_1: 0.6108  m1_loss_mask_1: 0.1888  m1_loss_dice_1: 1.424  m1_loss_ce_2: 0.5838  m1_loss_mask_2: 0.1758  m1_loss_dice_2: 1.351  m1_loss_ce_3: 0.5213  m1_loss_mask_3: 0.1744  m1_loss_dice_3: 1.287  m1_loss_ce_4: 0.5088  m1_loss_mask_4: 0.1729  m1_loss_dice_4: 1.297  m1_loss_ce_5: 0.502  m1_loss_mask_5: 0.171  m1_loss_dice_5: 1.285  m1_loss_ce_6: 0.4661  m1_loss_mask_6: 0.1716  m1_loss_dice_6: 1.264  m1_loss_ce_7: 0.4691  m1_loss_mask_7: 0.173  m1_loss_dice_7: 1.269  m1_loss_ce_8: 0.4837  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.271  m2_loss_ce: 0.4617  m2_loss_mask: 0.1695  m2_loss_dice: 1.3  m2_loss_ce_0: 0.587  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.523  m2_loss_ce_1: 0.6531  m2_loss_mask_1: 0.1864  m2_loss_dice_1: 1.462  m2_loss_ce_2: 0.549  m2_loss_mask_2: 0.1768  m2_loss_dice_2: 1.384  m2_loss_ce_3: 0.5279  m2_loss_mask_3: 0.1705  m2_loss_dice_3: 1.346  m2_loss_ce_4: 0.4962  m2_loss_mask_4: 0.1678  m2_loss_dice_4: 1.306  m2_loss_ce_5: 0.5096  m2_loss_mask_5: 0.1673  m2_loss_dice_5: 1.319  m2_loss_ce_6: 0.4753  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.3  m2_loss_ce_7: 0.4638  m2_loss_mask_7: 0.1704  m2_loss_dice_7: 1.296  m2_loss_ce_8: 0.4553  m2_loss_mask_8: 0.1696  m2_loss_dice_8: 1.288    time: 1.4152  last_time: 1.4311  data_time: 0.0526  last_data_time: 0.0564   lr: 0.0001  max_mem: 34285M
[10/13 18:16:15] d2.utils.events INFO:  eta: 0:16:58  iter: 279  total_loss: 39.52  m1_loss_ce: 0.4666  m1_loss_mask: 0.1632  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5647  m1_loss_mask_0: 0.2029  m1_loss_dice_0: 1.431  m1_loss_ce_1: 0.6677  m1_loss_mask_1: 0.1802  m1_loss_dice_1: 1.295  m1_loss_ce_2: 0.628  m1_loss_mask_2: 0.1693  m1_loss_dice_2: 1.29  m1_loss_ce_3: 0.5315  m1_loss_mask_3: 0.1646  m1_loss_dice_3: 1.186  m1_loss_ce_4: 0.5249  m1_loss_mask_4: 0.1652  m1_loss_dice_4: 1.186  m1_loss_ce_5: 0.5033  m1_loss_mask_5: 0.1656  m1_loss_dice_5: 1.173  m1_loss_ce_6: 0.4748  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.245  m1_loss_ce_7: 0.4863  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4867  m1_loss_mask_8: 0.1657  m1_loss_dice_8: 1.165  m2_loss_ce: 0.4514  m2_loss_mask: 0.1602  m2_loss_dice: 1.174  m2_loss_ce_0: 0.5925  m2_loss_mask_0: 0.1953  m2_loss_dice_0: 1.407  m2_loss_ce_1: 0.6364  m2_loss_mask_1: 0.1778  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.5725  m2_loss_mask_2: 0.1623  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.4992  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.242  m2_loss_ce_4: 0.4946  m2_loss_mask_4: 0.1616  m2_loss_dice_4: 1.232  m2_loss_ce_5: 0.5071  m2_loss_mask_5: 0.1631  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.4722  m2_loss_mask_6: 0.1627  m2_loss_dice_6: 1.17  m2_loss_ce_7: 0.473  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.169  m2_loss_ce_8: 0.4528  m2_loss_mask_8: 0.1621  m2_loss_dice_8: 1.242    time: 1.4165  last_time: 1.4337  data_time: 0.0492  last_data_time: 0.0556   lr: 0.0001  max_mem: 34285M
[10/13 18:16:43] d2.utils.events INFO:  eta: 0:16:30  iter: 299  total_loss: 40.77  m1_loss_ce: 0.4846  m1_loss_mask: 0.1677  m1_loss_dice: 1.228  m1_loss_ce_0: 0.553  m1_loss_mask_0: 0.1972  m1_loss_dice_0: 1.478  m1_loss_ce_1: 0.6105  m1_loss_mask_1: 0.1807  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.5491  m1_loss_mask_2: 0.1672  m1_loss_dice_2: 1.315  m1_loss_ce_3: 0.5125  m1_loss_mask_3: 0.1673  m1_loss_dice_3: 1.3  m1_loss_ce_4: 0.489  m1_loss_mask_4: 0.1696  m1_loss_dice_4: 1.265  m1_loss_ce_5: 0.4496  m1_loss_mask_5: 0.1709  m1_loss_dice_5: 1.249  m1_loss_ce_6: 0.4614  m1_loss_mask_6: 0.1708  m1_loss_dice_6: 1.24  m1_loss_ce_7: 0.4749  m1_loss_mask_7: 0.1697  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.442  m1_loss_mask_8: 0.1702  m1_loss_dice_8: 1.224  m2_loss_ce: 0.4708  m2_loss_mask: 0.1672  m2_loss_dice: 1.287  m2_loss_ce_0: 0.5704  m2_loss_mask_0: 0.1981  m2_loss_dice_0: 1.511  m2_loss_ce_1: 0.6527  m2_loss_mask_1: 0.1836  m2_loss_dice_1: 1.415  m2_loss_ce_2: 0.5951  m2_loss_mask_2: 0.1715  m2_loss_dice_2: 1.382  m2_loss_ce_3: 0.5313  m2_loss_mask_3: 0.172  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5212  m2_loss_mask_4: 0.1697  m2_loss_dice_4: 1.28  m2_loss_ce_5: 0.4978  m2_loss_mask_5: 0.1698  m2_loss_dice_5: 1.291  m2_loss_ce_6: 0.4961  m2_loss_mask_6: 0.17  m2_loss_dice_6: 1.269  m2_loss_ce_7: 0.4974  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.297  m2_loss_ce_8: 0.4561  m2_loss_mask_8: 0.1684  m2_loss_dice_8: 1.26    time: 1.4177  last_time: 1.4459  data_time: 0.0505  last_data_time: 0.0513   lr: 0.0001  max_mem: 34285M
[10/13 18:17:11] d2.utils.events INFO:  eta: 0:16:02  iter: 319  total_loss: 41.64  m1_loss_ce: 0.5039  m1_loss_mask: 0.1797  m1_loss_dice: 1.237  m1_loss_ce_0: 0.615  m1_loss_mask_0: 0.2052  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.6838  m1_loss_mask_1: 0.1951  m1_loss_dice_1: 1.393  m1_loss_ce_2: 0.6175  m1_loss_mask_2: 0.1789  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.5663  m1_loss_mask_3: 0.1821  m1_loss_dice_3: 1.257  m1_loss_ce_4: 0.5139  m1_loss_mask_4: 0.1804  m1_loss_dice_4: 1.297  m1_loss_ce_5: 0.5277  m1_loss_mask_5: 0.1815  m1_loss_dice_5: 1.284  m1_loss_ce_6: 0.4932  m1_loss_mask_6: 0.1766  m1_loss_dice_6: 1.271  m1_loss_ce_7: 0.5157  m1_loss_mask_7: 0.1821  m1_loss_dice_7: 1.261  m1_loss_ce_8: 0.5149  m1_loss_mask_8: 0.1756  m1_loss_dice_8: 1.266  m2_loss_ce: 0.4947  m2_loss_mask: 0.1774  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6322  m2_loss_mask_0: 0.221  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.6887  m2_loss_mask_1: 0.2012  m2_loss_dice_1: 1.392  m2_loss_ce_2: 0.6019  m2_loss_mask_2: 0.1876  m2_loss_dice_2: 1.368  m2_loss_ce_3: 0.5533  m2_loss_mask_3: 0.1812  m2_loss_dice_3: 1.322  m2_loss_ce_4: 0.5525  m2_loss_mask_4: 0.1807  m2_loss_dice_4: 1.3  m2_loss_ce_5: 0.5184  m2_loss_mask_5: 0.1782  m2_loss_dice_5: 1.292  m2_loss_ce_6: 0.491  m2_loss_mask_6: 0.1799  m2_loss_dice_6: 1.279  m2_loss_ce_7: 0.5242  m2_loss_mask_7: 0.1804  m2_loss_dice_7: 1.274  m2_loss_ce_8: 0.4954  m2_loss_mask_8: 0.1787  m2_loss_dice_8: 1.293    time: 1.4161  last_time: 1.4015  data_time: 0.0476  last_data_time: 0.0509   lr: 0.0001  max_mem: 34285M
[10/13 18:17:40] d2.utils.events INFO:  eta: 0:15:34  iter: 339  total_loss: 38.75  m1_loss_ce: 0.4675  m1_loss_mask: 0.1679  m1_loss_dice: 1.229  m1_loss_ce_0: 0.5525  m1_loss_mask_0: 0.198  m1_loss_dice_0: 1.399  m1_loss_ce_1: 0.5923  m1_loss_mask_1: 0.1792  m1_loss_dice_1: 1.357  m1_loss_ce_2: 0.5468  m1_loss_mask_2: 0.173  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.5414  m1_loss_mask_3: 0.1716  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.4995  m1_loss_mask_4: 0.1672  m1_loss_dice_4: 1.262  m1_loss_ce_5: 0.4954  m1_loss_mask_5: 0.1652  m1_loss_dice_5: 1.221  m1_loss_ce_6: 0.4595  m1_loss_mask_6: 0.1684  m1_loss_dice_6: 1.201  m1_loss_ce_7: 0.4803  m1_loss_mask_7: 0.1681  m1_loss_dice_7: 1.228  m1_loss_ce_8: 0.4567  m1_loss_mask_8: 0.1679  m1_loss_dice_8: 1.224  m2_loss_ce: 0.4362  m2_loss_mask: 0.164  m2_loss_dice: 1.249  m2_loss_ce_0: 0.5954  m2_loss_mask_0: 0.2015  m2_loss_dice_0: 1.419  m2_loss_ce_1: 0.6361  m2_loss_mask_1: 0.1939  m2_loss_dice_1: 1.334  m2_loss_ce_2: 0.5737  m2_loss_mask_2: 0.1709  m2_loss_dice_2: 1.291  m2_loss_ce_3: 0.5132  m2_loss_mask_3: 0.1692  m2_loss_dice_3: 1.273  m2_loss_ce_4: 0.5057  m2_loss_mask_4: 0.1632  m2_loss_dice_4: 1.252  m2_loss_ce_5: 0.4675  m2_loss_mask_5: 0.1623  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4712  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.214  m2_loss_ce_7: 0.4479  m2_loss_mask_7: 0.1668  m2_loss_dice_7: 1.239  m2_loss_ce_8: 0.4313  m2_loss_mask_8: 0.164  m2_loss_dice_8: 1.221    time: 1.4169  last_time: 1.3819  data_time: 0.0507  last_data_time: 0.0388   lr: 0.0001  max_mem: 34285M
[10/13 18:18:09] d2.utils.events INFO:  eta: 0:15:05  iter: 359  total_loss: 39.98  m1_loss_ce: 0.4404  m1_loss_mask: 0.1753  m1_loss_dice: 1.176  m1_loss_ce_0: 0.5191  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.48  m1_loss_ce_1: 0.5966  m1_loss_mask_1: 0.1852  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.5538  m1_loss_mask_2: 0.1795  m1_loss_dice_2: 1.281  m1_loss_ce_3: 0.4668  m1_loss_mask_3: 0.1798  m1_loss_dice_3: 1.25  m1_loss_ce_4: 0.4909  m1_loss_mask_4: 0.176  m1_loss_dice_4: 1.223  m1_loss_ce_5: 0.4853  m1_loss_mask_5: 0.1746  m1_loss_dice_5: 1.2  m1_loss_ce_6: 0.4727  m1_loss_mask_6: 0.1753  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.4449  m1_loss_mask_7: 0.1757  m1_loss_dice_7: 1.231  m1_loss_ce_8: 0.4635  m1_loss_mask_8: 0.1757  m1_loss_dice_8: 1.209  m2_loss_ce: 0.4428  m2_loss_mask: 0.1693  m2_loss_dice: 1.232  m2_loss_ce_0: 0.5839  m2_loss_mask_0: 0.1949  m2_loss_dice_0: 1.437  m2_loss_ce_1: 0.6375  m2_loss_mask_1: 0.1852  m2_loss_dice_1: 1.384  m2_loss_ce_2: 0.5913  m2_loss_mask_2: 0.1732  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.5453  m2_loss_mask_3: 0.1717  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.5251  m2_loss_mask_4: 0.1711  m2_loss_dice_4: 1.263  m2_loss_ce_5: 0.5166  m2_loss_mask_5: 0.1711  m2_loss_dice_5: 1.241  m2_loss_ce_6: 0.4728  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.238  m2_loss_ce_7: 0.4747  m2_loss_mask_7: 0.1674  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4772  m2_loss_mask_8: 0.1678  m2_loss_dice_8: 1.222    time: 1.4173  last_time: 1.4060  data_time: 0.0522  last_data_time: 0.0538   lr: 0.0001  max_mem: 34285M
[10/13 18:18:37] d2.utils.events INFO:  eta: 0:14:37  iter: 379  total_loss: 38.06  m1_loss_ce: 0.4278  m1_loss_mask: 0.1677  m1_loss_dice: 1.172  m1_loss_ce_0: 0.5869  m1_loss_mask_0: 0.189  m1_loss_dice_0: 1.349  m1_loss_ce_1: 0.6103  m1_loss_mask_1: 0.1798  m1_loss_dice_1: 1.261  m1_loss_ce_2: 0.55  m1_loss_mask_2: 0.1745  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.4972  m1_loss_mask_3: 0.1727  m1_loss_dice_3: 1.179  m1_loss_ce_4: 0.4581  m1_loss_mask_4: 0.171  m1_loss_dice_4: 1.183  m1_loss_ce_5: 0.467  m1_loss_mask_5: 0.1684  m1_loss_dice_5: 1.186  m1_loss_ce_6: 0.4687  m1_loss_mask_6: 0.168  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.4428  m1_loss_mask_7: 0.1682  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.4523  m1_loss_mask_8: 0.1666  m1_loss_dice_8: 1.166  m2_loss_ce: 0.4563  m2_loss_mask: 0.1605  m2_loss_dice: 1.168  m2_loss_ce_0: 0.5677  m2_loss_mask_0: 0.1858  m2_loss_dice_0: 1.359  m2_loss_ce_1: 0.6537  m2_loss_mask_1: 0.1768  m2_loss_dice_1: 1.294  m2_loss_ce_2: 0.5608  m2_loss_mask_2: 0.1673  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.5126  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.179  m2_loss_ce_4: 0.4854  m2_loss_mask_4: 0.1651  m2_loss_dice_4: 1.2  m2_loss_ce_5: 0.4913  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.175  m2_loss_ce_6: 0.456  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.146  m2_loss_ce_7: 0.4652  m2_loss_mask_7: 0.1619  m2_loss_dice_7: 1.135  m2_loss_ce_8: 0.4584  m2_loss_mask_8: 0.1597  m2_loss_dice_8: 1.166    time: 1.4164  last_time: 1.3474  data_time: 0.0467  last_data_time: 0.0461   lr: 0.0001  max_mem: 34285M
[10/13 18:19:05] d2.utils.events INFO:  eta: 0:14:08  iter: 399  total_loss: 38.56  m1_loss_ce: 0.4501  m1_loss_mask: 0.1674  m1_loss_dice: 1.194  m1_loss_ce_0: 0.5614  m1_loss_mask_0: 0.1907  m1_loss_dice_0: 1.373  m1_loss_ce_1: 0.5956  m1_loss_mask_1: 0.187  m1_loss_dice_1: 1.307  m1_loss_ce_2: 0.5891  m1_loss_mask_2: 0.1776  m1_loss_dice_2: 1.273  m1_loss_ce_3: 0.5291  m1_loss_mask_3: 0.1688  m1_loss_dice_3: 1.232  m1_loss_ce_4: 0.4635  m1_loss_mask_4: 0.169  m1_loss_dice_4: 1.185  m1_loss_ce_5: 0.4632  m1_loss_mask_5: 0.1672  m1_loss_dice_5: 1.204  m1_loss_ce_6: 0.485  m1_loss_mask_6: 0.1675  m1_loss_dice_6: 1.21  m1_loss_ce_7: 0.4654  m1_loss_mask_7: 0.1693  m1_loss_dice_7: 1.177  m1_loss_ce_8: 0.4702  m1_loss_mask_8: 0.1699  m1_loss_dice_8: 1.226  m2_loss_ce: 0.4816  m2_loss_mask: 0.1673  m2_loss_dice: 1.208  m2_loss_ce_0: 0.6033  m2_loss_mask_0: 0.196  m2_loss_dice_0: 1.377  m2_loss_ce_1: 0.6485  m2_loss_mask_1: 0.1824  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.5887  m2_loss_mask_2: 0.1735  m2_loss_dice_2: 1.269  m2_loss_ce_3: 0.525  m2_loss_mask_3: 0.1714  m2_loss_dice_3: 1.244  m2_loss_ce_4: 0.5422  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.193  m2_loss_ce_5: 0.5008  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.207  m2_loss_ce_6: 0.4812  m2_loss_mask_6: 0.1679  m2_loss_dice_6: 1.185  m2_loss_ce_7: 0.4717  m2_loss_mask_7: 0.1693  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.4838  m2_loss_mask_8: 0.167  m2_loss_dice_8: 1.229    time: 1.4158  last_time: 1.4314  data_time: 0.0506  last_data_time: 0.0454   lr: 0.0001  max_mem: 34285M
[10/13 18:19:34] d2.utils.events INFO:  eta: 0:13:40  iter: 419  total_loss: 41.51  m1_loss_ce: 0.4828  m1_loss_mask: 0.1622  m1_loss_dice: 1.259  m1_loss_ce_0: 0.5991  m1_loss_mask_0: 0.1979  m1_loss_dice_0: 1.506  m1_loss_ce_1: 0.6399  m1_loss_mask_1: 0.1816  m1_loss_dice_1: 1.433  m1_loss_ce_2: 0.6284  m1_loss_mask_2: 0.1716  m1_loss_dice_2: 1.373  m1_loss_ce_3: 0.5536  m1_loss_mask_3: 0.1689  m1_loss_dice_3: 1.339  m1_loss_ce_4: 0.5169  m1_loss_mask_4: 0.1669  m1_loss_dice_4: 1.291  m1_loss_ce_5: 0.5136  m1_loss_mask_5: 0.1633  m1_loss_dice_5: 1.294  m1_loss_ce_6: 0.471  m1_loss_mask_6: 0.1633  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.5016  m1_loss_mask_7: 0.1629  m1_loss_dice_7: 1.281  m1_loss_ce_8: 0.5015  m1_loss_mask_8: 0.1622  m1_loss_dice_8: 1.26  m2_loss_ce: 0.4825  m2_loss_mask: 0.1678  m2_loss_dice: 1.292  m2_loss_ce_0: 0.6473  m2_loss_mask_0: 0.2009  m2_loss_dice_0: 1.585  m2_loss_ce_1: 0.6695  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.509  m2_loss_ce_2: 0.5998  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.43  m2_loss_ce_3: 0.5221  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.314  m2_loss_ce_4: 0.5301  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.303  m2_loss_ce_5: 0.5364  m2_loss_mask_5: 0.1612  m2_loss_dice_5: 1.337  m2_loss_ce_6: 0.4932  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.317  m2_loss_ce_7: 0.5005  m2_loss_mask_7: 0.1685  m2_loss_dice_7: 1.314  m2_loss_ce_8: 0.5089  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.291    time: 1.4162  last_time: 1.5095  data_time: 0.0501  last_data_time: 0.0475   lr: 0.0001  max_mem: 34285M
[10/13 18:20:02] d2.utils.events INFO:  eta: 0:13:11  iter: 439  total_loss: 38.81  m1_loss_ce: 0.4586  m1_loss_mask: 0.1626  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5669  m1_loss_mask_0: 0.1874  m1_loss_dice_0: 1.392  m1_loss_ce_1: 0.6144  m1_loss_mask_1: 0.1698  m1_loss_dice_1: 1.366  m1_loss_ce_2: 0.5427  m1_loss_mask_2: 0.163  m1_loss_dice_2: 1.279  m1_loss_ce_3: 0.469  m1_loss_mask_3: 0.1638  m1_loss_dice_3: 1.229  m1_loss_ce_4: 0.4727  m1_loss_mask_4: 0.1653  m1_loss_dice_4: 1.257  m1_loss_ce_5: 0.488  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.195  m1_loss_ce_6: 0.4737  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.199  m1_loss_ce_7: 0.4713  m1_loss_mask_7: 0.1662  m1_loss_dice_7: 1.224  m1_loss_ce_8: 0.4496  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.179  m2_loss_ce: 0.4771  m2_loss_mask: 0.1646  m2_loss_dice: 1.237  m2_loss_ce_0: 0.602  m2_loss_mask_0: 0.1983  m2_loss_dice_0: 1.416  m2_loss_ce_1: 0.6524  m2_loss_mask_1: 0.1785  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.5626  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.322  m2_loss_ce_3: 0.5227  m2_loss_mask_3: 0.1672  m2_loss_dice_3: 1.296  m2_loss_ce_4: 0.5129  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.4905  m2_loss_mask_5: 0.1635  m2_loss_dice_5: 1.246  m2_loss_ce_6: 0.4987  m2_loss_mask_6: 0.1646  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4882  m2_loss_mask_7: 0.1679  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.4951  m2_loss_mask_8: 0.1669  m2_loss_dice_8: 1.241    time: 1.4154  last_time: 1.4798  data_time: 0.0533  last_data_time: 0.0410   lr: 0.0001  max_mem: 34285M
[10/13 18:20:30] d2.utils.events INFO:  eta: 0:12:43  iter: 459  total_loss: 39.05  m1_loss_ce: 0.4575  m1_loss_mask: 0.164  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5421  m1_loss_mask_0: 0.1995  m1_loss_dice_0: 1.397  m1_loss_ce_1: 0.6111  m1_loss_mask_1: 0.1807  m1_loss_dice_1: 1.321  m1_loss_ce_2: 0.5911  m1_loss_mask_2: 0.1667  m1_loss_dice_2: 1.248  m1_loss_ce_3: 0.5171  m1_loss_mask_3: 0.1663  m1_loss_dice_3: 1.198  m1_loss_ce_4: 0.4791  m1_loss_mask_4: 0.1646  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.4672  m1_loss_mask_5: 0.1643  m1_loss_dice_5: 1.22  m1_loss_ce_6: 0.4645  m1_loss_mask_6: 0.1651  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4572  m1_loss_mask_7: 0.1644  m1_loss_dice_7: 1.185  m1_loss_ce_8: 0.4453  m1_loss_mask_8: 0.1628  m1_loss_dice_8: 1.179  m2_loss_ce: 0.469  m2_loss_mask: 0.1671  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6024  m2_loss_mask_0: 0.2002  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.6779  m2_loss_mask_1: 0.1842  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5635  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.5255  m2_loss_mask_3: 0.1691  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5014  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5076  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.4682  m2_loss_mask_6: 0.1691  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.4874  m2_loss_mask_7: 0.1699  m2_loss_dice_7: 1.228  m2_loss_ce_8: 0.4554  m2_loss_mask_8: 0.1675  m2_loss_dice_8: 1.215    time: 1.4148  last_time: 1.3690  data_time: 0.0510  last_data_time: 0.0441   lr: 0.0001  max_mem: 34285M
[10/13 18:20:58] d2.utils.events INFO:  eta: 0:12:15  iter: 479  total_loss: 39.07  m1_loss_ce: 0.4362  m1_loss_mask: 0.1704  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5468  m1_loss_mask_0: 0.1883  m1_loss_dice_0: 1.446  m1_loss_ce_1: 0.5926  m1_loss_mask_1: 0.1741  m1_loss_dice_1: 1.331  m1_loss_ce_2: 0.5599  m1_loss_mask_2: 0.1692  m1_loss_dice_2: 1.298  m1_loss_ce_3: 0.4775  m1_loss_mask_3: 0.1701  m1_loss_dice_3: 1.236  m1_loss_ce_4: 0.4802  m1_loss_mask_4: 0.1701  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.4722  m1_loss_mask_5: 0.1677  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.4588  m1_loss_mask_6: 0.1697  m1_loss_dice_6: 1.217  m1_loss_ce_7: 0.4528  m1_loss_mask_7: 0.1702  m1_loss_dice_7: 1.201  m1_loss_ce_8: 0.4451  m1_loss_mask_8: 0.1715  m1_loss_dice_8: 1.205  m2_loss_ce: 0.4597  m2_loss_mask: 0.1651  m2_loss_dice: 1.24  m2_loss_ce_0: 0.5816  m2_loss_mask_0: 0.1911  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.6568  m2_loss_mask_1: 0.1772  m2_loss_dice_1: 1.388  m2_loss_ce_2: 0.5869  m2_loss_mask_2: 0.1646  m2_loss_dice_2: 1.307  m2_loss_ce_3: 0.5063  m2_loss_mask_3: 0.1694  m2_loss_dice_3: 1.27  m2_loss_ce_4: 0.5045  m2_loss_mask_4: 0.1653  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5059  m2_loss_mask_5: 0.1613  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5004  m2_loss_mask_6: 0.1613  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.4699  m2_loss_mask_7: 0.1643  m2_loss_dice_7: 1.217  m2_loss_ce_8: 0.4593  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.226    time: 1.4149  last_time: 1.3533  data_time: 0.0544  last_data_time: 0.0489   lr: 0.0001  max_mem: 34285M
[10/13 18:21:27] d2.utils.events INFO:  eta: 0:11:46  iter: 499  total_loss: 40.52  m1_loss_ce: 0.457  m1_loss_mask: 0.1527  m1_loss_dice: 1.244  m1_loss_ce_0: 0.6272  m1_loss_mask_0: 0.1901  m1_loss_dice_0: 1.435  m1_loss_ce_1: 0.6167  m1_loss_mask_1: 0.1685  m1_loss_dice_1: 1.376  m1_loss_ce_2: 0.5935  m1_loss_mask_2: 0.1588  m1_loss_dice_2: 1.31  m1_loss_ce_3: 0.521  m1_loss_mask_3: 0.1581  m1_loss_dice_3: 1.252  m1_loss_ce_4: 0.5087  m1_loss_mask_4: 0.1569  m1_loss_dice_4: 1.274  m1_loss_ce_5: 0.494  m1_loss_mask_5: 0.1551  m1_loss_dice_5: 1.232  m1_loss_ce_6: 0.476  m1_loss_mask_6: 0.1539  m1_loss_dice_6: 1.221  m1_loss_ce_7: 0.4636  m1_loss_mask_7: 0.1577  m1_loss_dice_7: 1.245  m1_loss_ce_8: 0.4819  m1_loss_mask_8: 0.1552  m1_loss_dice_8: 1.24  m2_loss_ce: 0.4745  m2_loss_mask: 0.1516  m2_loss_dice: 1.296  m2_loss_ce_0: 0.6123  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.516  m2_loss_ce_1: 0.6463  m2_loss_mask_1: 0.1666  m2_loss_dice_1: 1.451  m2_loss_ce_2: 0.5946  m2_loss_mask_2: 0.1579  m2_loss_dice_2: 1.368  m2_loss_ce_3: 0.535  m2_loss_mask_3: 0.1539  m2_loss_dice_3: 1.29  m2_loss_ce_4: 0.5096  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.311  m2_loss_ce_5: 0.5113  m2_loss_mask_5: 0.1534  m2_loss_dice_5: 1.314  m2_loss_ce_6: 0.4923  m2_loss_mask_6: 0.1549  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.4929  m2_loss_mask_7: 0.1537  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.4668  m2_loss_mask_8: 0.1496  m2_loss_dice_8: 1.312    time: 1.4146  last_time: 1.5125  data_time: 0.0527  last_data_time: 0.0510   lr: 0.0001  max_mem: 34285M
[10/13 18:21:55] d2.utils.events INFO:  eta: 0:11:18  iter: 519  total_loss: 38.13  m1_loss_ce: 0.4294  m1_loss_mask: 0.1704  m1_loss_dice: 1.152  m1_loss_ce_0: 0.5343  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.328  m1_loss_ce_1: 0.579  m1_loss_mask_1: 0.1864  m1_loss_dice_1: 1.291  m1_loss_ce_2: 0.5329  m1_loss_mask_2: 0.1749  m1_loss_dice_2: 1.22  m1_loss_ce_3: 0.5072  m1_loss_mask_3: 0.1719  m1_loss_dice_3: 1.21  m1_loss_ce_4: 0.4696  m1_loss_mask_4: 0.1733  m1_loss_dice_4: 1.184  m1_loss_ce_5: 0.4632  m1_loss_mask_5: 0.1761  m1_loss_dice_5: 1.136  m1_loss_ce_6: 0.4547  m1_loss_mask_6: 0.1739  m1_loss_dice_6: 1.138  m1_loss_ce_7: 0.4717  m1_loss_mask_7: 0.1723  m1_loss_dice_7: 1.152  m1_loss_ce_8: 0.4435  m1_loss_mask_8: 0.1721  m1_loss_dice_8: 1.122  m2_loss_ce: 0.4474  m2_loss_mask: 0.1637  m2_loss_dice: 1.21  m2_loss_ce_0: 0.6182  m2_loss_mask_0: 0.1938  m2_loss_dice_0: 1.368  m2_loss_ce_1: 0.6182  m2_loss_mask_1: 0.1744  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.5489  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5045  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.194  m2_loss_ce_4: 0.5213  m2_loss_mask_4: 0.1642  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4502  m2_loss_mask_5: 0.1642  m2_loss_dice_5: 1.236  m2_loss_ce_6: 0.4487  m2_loss_mask_6: 0.1638  m2_loss_dice_6: 1.18  m2_loss_ce_7: 0.4667  m2_loss_mask_7: 0.1632  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4552  m2_loss_mask_8: 0.1624  m2_loss_dice_8: 1.175    time: 1.4144  last_time: 1.4111  data_time: 0.0500  last_data_time: 0.0633   lr: 0.0001  max_mem: 34285M
[10/13 18:22:23] d2.utils.events INFO:  eta: 0:10:50  iter: 539  total_loss: 39.65  m1_loss_ce: 0.474  m1_loss_mask: 0.1678  m1_loss_dice: 1.2  m1_loss_ce_0: 0.5494  m1_loss_mask_0: 0.2052  m1_loss_dice_0: 1.417  m1_loss_ce_1: 0.6305  m1_loss_mask_1: 0.1832  m1_loss_dice_1: 1.346  m1_loss_ce_2: 0.5862  m1_loss_mask_2: 0.1754  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5334  m1_loss_mask_3: 0.1746  m1_loss_dice_3: 1.254  m1_loss_ce_4: 0.5442  m1_loss_mask_4: 0.1695  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.5161  m1_loss_mask_5: 0.1693  m1_loss_dice_5: 1.251  m1_loss_ce_6: 0.5062  m1_loss_mask_6: 0.1694  m1_loss_dice_6: 1.241  m1_loss_ce_7: 0.4771  m1_loss_mask_7: 0.1682  m1_loss_dice_7: 1.217  m1_loss_ce_8: 0.4671  m1_loss_mask_8: 0.1666  m1_loss_dice_8: 1.195  m2_loss_ce: 0.4856  m2_loss_mask: 0.1699  m2_loss_dice: 1.3  m2_loss_ce_0: 0.586  m2_loss_mask_0: 0.2052  m2_loss_dice_0: 1.459  m2_loss_ce_1: 0.6446  m2_loss_mask_1: 0.1897  m2_loss_dice_1: 1.386  m2_loss_ce_2: 0.5782  m2_loss_mask_2: 0.1747  m2_loss_dice_2: 1.372  m2_loss_ce_3: 0.5674  m2_loss_mask_3: 0.1747  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5364  m2_loss_mask_4: 0.1701  m2_loss_dice_4: 1.296  m2_loss_ce_5: 0.5252  m2_loss_mask_5: 0.17  m2_loss_dice_5: 1.304  m2_loss_ce_6: 0.4884  m2_loss_mask_6: 0.1705  m2_loss_dice_6: 1.271  m2_loss_ce_7: 0.5051  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.266  m2_loss_ce_8: 0.5141  m2_loss_mask_8: 0.1681  m2_loss_dice_8: 1.254    time: 1.4138  last_time: 1.3999  data_time: 0.0489  last_data_time: 0.0546   lr: 0.0001  max_mem: 34285M
[10/13 18:22:52] d2.utils.events INFO:  eta: 0:10:22  iter: 559  total_loss: 39.84  m1_loss_ce: 0.4882  m1_loss_mask: 0.172  m1_loss_dice: 1.244  m1_loss_ce_0: 0.5771  m1_loss_mask_0: 0.1992  m1_loss_dice_0: 1.491  m1_loss_ce_1: 0.6403  m1_loss_mask_1: 0.1804  m1_loss_dice_1: 1.352  m1_loss_ce_2: 0.6169  m1_loss_mask_2: 0.174  m1_loss_dice_2: 1.337  m1_loss_ce_3: 0.5563  m1_loss_mask_3: 0.1718  m1_loss_dice_3: 1.293  m1_loss_ce_4: 0.562  m1_loss_mask_4: 0.1717  m1_loss_dice_4: 1.295  m1_loss_ce_5: 0.5409  m1_loss_mask_5: 0.1712  m1_loss_dice_5: 1.265  m1_loss_ce_6: 0.4896  m1_loss_mask_6: 0.1727  m1_loss_dice_6: 1.262  m1_loss_ce_7: 0.4857  m1_loss_mask_7: 0.1726  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.5156  m1_loss_mask_8: 0.171  m1_loss_dice_8: 1.244  m2_loss_ce: 0.5016  m2_loss_mask: 0.171  m2_loss_dice: 1.294  m2_loss_ce_0: 0.6185  m2_loss_mask_0: 0.2008  m2_loss_dice_0: 1.513  m2_loss_ce_1: 0.7008  m2_loss_mask_1: 0.1921  m2_loss_dice_1: 1.43  m2_loss_ce_2: 0.6367  m2_loss_mask_2: 0.1782  m2_loss_dice_2: 1.357  m2_loss_ce_3: 0.553  m2_loss_mask_3: 0.1762  m2_loss_dice_3: 1.336  m2_loss_ce_4: 0.5519  m2_loss_mask_4: 0.1724  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5362  m2_loss_mask_5: 0.1743  m2_loss_dice_5: 1.312  m2_loss_ce_6: 0.517  m2_loss_mask_6: 0.1734  m2_loss_dice_6: 1.294  m2_loss_ce_7: 0.5029  m2_loss_mask_7: 0.1728  m2_loss_dice_7: 1.28  m2_loss_ce_8: 0.4872  m2_loss_mask_8: 0.1737  m2_loss_dice_8: 1.299    time: 1.4146  last_time: 1.4461  data_time: 0.0573  last_data_time: 0.0512   lr: 0.0001  max_mem: 34285M
[10/13 18:23:20] d2.utils.events INFO:  eta: 0:09:53  iter: 579  total_loss: 38.85  m1_loss_ce: 0.474  m1_loss_mask: 0.1617  m1_loss_dice: 1.187  m1_loss_ce_0: 0.5223  m1_loss_mask_0: 0.186  m1_loss_dice_0: 1.44  m1_loss_ce_1: 0.6302  m1_loss_mask_1: 0.1737  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.53  m1_loss_mask_2: 0.1674  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.4889  m1_loss_mask_3: 0.1628  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.4886  m1_loss_mask_4: 0.1629  m1_loss_dice_4: 1.227  m1_loss_ce_5: 0.4564  m1_loss_mask_5: 0.1598  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.4554  m1_loss_mask_6: 0.1603  m1_loss_dice_6: 1.213  m1_loss_ce_7: 0.4778  m1_loss_mask_7: 0.1594  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4782  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.174  m2_loss_ce: 0.4893  m2_loss_mask: 0.1673  m2_loss_dice: 1.255  m2_loss_ce_0: 0.6096  m2_loss_mask_0: 0.1997  m2_loss_dice_0: 1.476  m2_loss_ce_1: 0.6824  m2_loss_mask_1: 0.1909  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.5985  m2_loss_mask_2: 0.1711  m2_loss_dice_2: 1.346  m2_loss_ce_3: 0.5773  m2_loss_mask_3: 0.1698  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5434  m2_loss_mask_4: 0.1719  m2_loss_dice_4: 1.264  m2_loss_ce_5: 0.5373  m2_loss_mask_5: 0.1666  m2_loss_dice_5: 1.228  m2_loss_ce_6: 0.4935  m2_loss_mask_6: 0.1677  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.5702  m2_loss_mask_7: 0.1689  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4956  m2_loss_mask_8: 0.1662  m2_loss_dice_8: 1.234    time: 1.4150  last_time: 1.4336  data_time: 0.0529  last_data_time: 0.0511   lr: 0.0001  max_mem: 34285M
[10/13 18:23:48] d2.utils.events INFO:  eta: 0:09:25  iter: 599  total_loss: 39.06  m1_loss_ce: 0.4993  m1_loss_mask: 0.1823  m1_loss_dice: 1.174  m1_loss_ce_0: 0.5489  m1_loss_mask_0: 0.2108  m1_loss_dice_0: 1.372  m1_loss_ce_1: 0.611  m1_loss_mask_1: 0.1963  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.5815  m1_loss_mask_2: 0.1926  m1_loss_dice_2: 1.269  m1_loss_ce_3: 0.5319  m1_loss_mask_3: 0.1898  m1_loss_dice_3: 1.235  m1_loss_ce_4: 0.5201  m1_loss_mask_4: 0.1897  m1_loss_dice_4: 1.21  m1_loss_ce_5: 0.4909  m1_loss_mask_5: 0.1887  m1_loss_dice_5: 1.24  m1_loss_ce_6: 0.4957  m1_loss_mask_6: 0.1849  m1_loss_dice_6: 1.202  m1_loss_ce_7: 0.4946  m1_loss_mask_7: 0.1829  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4804  m1_loss_mask_8: 0.1847  m1_loss_dice_8: 1.197  m2_loss_ce: 0.4922  m2_loss_mask: 0.1805  m2_loss_dice: 1.251  m2_loss_ce_0: 0.6082  m2_loss_mask_0: 0.2182  m2_loss_dice_0: 1.419  m2_loss_ce_1: 0.661  m2_loss_mask_1: 0.2017  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.5717  m2_loss_mask_2: 0.1909  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5568  m2_loss_mask_3: 0.1811  m2_loss_dice_3: 1.272  m2_loss_ce_4: 0.5035  m2_loss_mask_4: 0.1775  m2_loss_dice_4: 1.248  m2_loss_ce_5: 0.5062  m2_loss_mask_5: 0.1784  m2_loss_dice_5: 1.249  m2_loss_ce_6: 0.4981  m2_loss_mask_6: 0.1808  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.4773  m2_loss_mask_7: 0.1809  m2_loss_dice_7: 1.259  m2_loss_ce_8: 0.4418  m2_loss_mask_8: 0.1831  m2_loss_dice_8: 1.233    time: 1.4146  last_time: 1.3517  data_time: 0.0490  last_data_time: 0.0503   lr: 0.0001  max_mem: 34285M
[10/13 18:24:17] d2.utils.events INFO:  eta: 0:08:56  iter: 619  total_loss: 40.01  m1_loss_ce: 0.435  m1_loss_mask: 0.175  m1_loss_dice: 1.216  m1_loss_ce_0: 0.5735  m1_loss_mask_0: 0.2108  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.6117  m1_loss_mask_1: 0.1861  m1_loss_dice_1: 1.312  m1_loss_ce_2: 0.5715  m1_loss_mask_2: 0.1856  m1_loss_dice_2: 1.278  m1_loss_ce_3: 0.501  m1_loss_mask_3: 0.1783  m1_loss_dice_3: 1.183  m1_loss_ce_4: 0.4766  m1_loss_mask_4: 0.1792  m1_loss_dice_4: 1.278  m1_loss_ce_5: 0.4674  m1_loss_mask_5: 0.1763  m1_loss_dice_5: 1.252  m1_loss_ce_6: 0.433  m1_loss_mask_6: 0.1779  m1_loss_dice_6: 1.195  m1_loss_ce_7: 0.4295  m1_loss_mask_7: 0.1744  m1_loss_dice_7: 1.205  m1_loss_ce_8: 0.4276  m1_loss_mask_8: 0.1753  m1_loss_dice_8: 1.195  m2_loss_ce: 0.483  m2_loss_mask: 0.1795  m2_loss_dice: 1.207  m2_loss_ce_0: 0.6205  m2_loss_mask_0: 0.2111  m2_loss_dice_0: 1.473  m2_loss_ce_1: 0.6741  m2_loss_mask_1: 0.1957  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.5996  m2_loss_mask_2: 0.1834  m2_loss_dice_2: 1.3  m2_loss_ce_3: 0.5439  m2_loss_mask_3: 0.1784  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5306  m2_loss_mask_4: 0.1777  m2_loss_dice_4: 1.244  m2_loss_ce_5: 0.5037  m2_loss_mask_5: 0.1779  m2_loss_dice_5: 1.25  m2_loss_ce_6: 0.4793  m2_loss_mask_6: 0.1799  m2_loss_dice_6: 1.241  m2_loss_ce_7: 0.502  m2_loss_mask_7: 0.1796  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.4918  m2_loss_mask_8: 0.1798  m2_loss_dice_8: 1.254    time: 1.4143  last_time: 1.4362  data_time: 0.0564  last_data_time: 0.0588   lr: 0.0001  max_mem: 34285M
[10/13 18:24:45] d2.utils.events INFO:  eta: 0:08:28  iter: 639  total_loss: 39.99  m1_loss_ce: 0.4377  m1_loss_mask: 0.1497  m1_loss_dice: 1.26  m1_loss_ce_0: 0.5405  m1_loss_mask_0: 0.1824  m1_loss_dice_0: 1.467  m1_loss_ce_1: 0.5843  m1_loss_mask_1: 0.1655  m1_loss_dice_1: 1.385  m1_loss_ce_2: 0.4919  m1_loss_mask_2: 0.1581  m1_loss_dice_2: 1.302  m1_loss_ce_3: 0.4634  m1_loss_mask_3: 0.1551  m1_loss_dice_3: 1.299  m1_loss_ce_4: 0.4604  m1_loss_mask_4: 0.1561  m1_loss_dice_4: 1.299  m1_loss_ce_5: 0.4399  m1_loss_mask_5: 0.1542  m1_loss_dice_5: 1.3  m1_loss_ce_6: 0.4094  m1_loss_mask_6: 0.1521  m1_loss_dice_6: 1.26  m1_loss_ce_7: 0.4371  m1_loss_mask_7: 0.1532  m1_loss_dice_7: 1.289  m1_loss_ce_8: 0.4317  m1_loss_mask_8: 0.1515  m1_loss_dice_8: 1.214  m2_loss_ce: 0.479  m2_loss_mask: 0.1562  m2_loss_dice: 1.242  m2_loss_ce_0: 0.6089  m2_loss_mask_0: 0.1881  m2_loss_dice_0: 1.457  m2_loss_ce_1: 0.6542  m2_loss_mask_1: 0.1712  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.6028  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.336  m2_loss_ce_3: 0.5421  m2_loss_mask_3: 0.1586  m2_loss_dice_3: 1.264  m2_loss_ce_4: 0.5335  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5088  m2_loss_mask_5: 0.156  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.5116  m2_loss_mask_6: 0.1581  m2_loss_dice_6: 1.216  m2_loss_ce_7: 0.4801  m2_loss_mask_7: 0.1589  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.4945  m2_loss_mask_8: 0.1593  m2_loss_dice_8: 1.266    time: 1.4140  last_time: 1.4027  data_time: 0.0502  last_data_time: 0.0466   lr: 0.0001  max_mem: 34285M
[10/13 18:25:13] d2.utils.events INFO:  eta: 0:08:00  iter: 659  total_loss: 39.36  m1_loss_ce: 0.445  m1_loss_mask: 0.1647  m1_loss_dice: 1.209  m1_loss_ce_0: 0.5677  m1_loss_mask_0: 0.2008  m1_loss_dice_0: 1.409  m1_loss_ce_1: 0.6209  m1_loss_mask_1: 0.1898  m1_loss_dice_1: 1.368  m1_loss_ce_2: 0.55  m1_loss_mask_2: 0.1779  m1_loss_dice_2: 1.271  m1_loss_ce_3: 0.5141  m1_loss_mask_3: 0.1701  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.4736  m1_loss_mask_4: 0.1702  m1_loss_dice_4: 1.231  m1_loss_ce_5: 0.4625  m1_loss_mask_5: 0.1637  m1_loss_dice_5: 1.197  m1_loss_ce_6: 0.4431  m1_loss_mask_6: 0.1683  m1_loss_dice_6: 1.197  m1_loss_ce_7: 0.4342  m1_loss_mask_7: 0.1704  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4303  m1_loss_mask_8: 0.1648  m1_loss_dice_8: 1.21  m2_loss_ce: 0.4588  m2_loss_mask: 0.1691  m2_loss_dice: 1.253  m2_loss_ce_0: 0.5994  m2_loss_mask_0: 0.2022  m2_loss_dice_0: 1.48  m2_loss_ce_1: 0.6268  m2_loss_mask_1: 0.1893  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.5582  m2_loss_mask_2: 0.171  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5108  m2_loss_mask_3: 0.1713  m2_loss_dice_3: 1.259  m2_loss_ce_4: 0.4944  m2_loss_mask_4: 0.168  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.4863  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4576  m2_loss_mask_6: 0.1711  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4608  m2_loss_mask_7: 0.171  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.454  m2_loss_mask_8: 0.1709  m2_loss_dice_8: 1.264    time: 1.4140  last_time: 1.3854  data_time: 0.0501  last_data_time: 0.0461   lr: 0.0001  max_mem: 34285M
[10/13 18:25:42] d2.utils.events INFO:  eta: 0:07:32  iter: 679  total_loss: 40.32  m1_loss_ce: 0.4408  m1_loss_mask: 0.1557  m1_loss_dice: 1.215  m1_loss_ce_0: 0.5064  m1_loss_mask_0: 0.1804  m1_loss_dice_0: 1.421  m1_loss_ce_1: 0.5497  m1_loss_mask_1: 0.1732  m1_loss_dice_1: 1.399  m1_loss_ce_2: 0.5449  m1_loss_mask_2: 0.1664  m1_loss_dice_2: 1.317  m1_loss_ce_3: 0.4649  m1_loss_mask_3: 0.1604  m1_loss_dice_3: 1.262  m1_loss_ce_4: 0.4645  m1_loss_mask_4: 0.1594  m1_loss_dice_4: 1.245  m1_loss_ce_5: 0.4392  m1_loss_mask_5: 0.158  m1_loss_dice_5: 1.282  m1_loss_ce_6: 0.4281  m1_loss_mask_6: 0.1571  m1_loss_dice_6: 1.219  m1_loss_ce_7: 0.432  m1_loss_mask_7: 0.1556  m1_loss_dice_7: 1.232  m1_loss_ce_8: 0.4426  m1_loss_mask_8: 0.1562  m1_loss_dice_8: 1.238  m2_loss_ce: 0.4435  m2_loss_mask: 0.1628  m2_loss_dice: 1.268  m2_loss_ce_0: 0.5754  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.485  m2_loss_ce_1: 0.6404  m2_loss_mask_1: 0.1829  m2_loss_dice_1: 1.38  m2_loss_ce_2: 0.5432  m2_loss_mask_2: 0.1704  m2_loss_dice_2: 1.331  m2_loss_ce_3: 0.4672  m2_loss_mask_3: 0.1686  m2_loss_dice_3: 1.278  m2_loss_ce_4: 0.4727  m2_loss_mask_4: 0.1626  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.4601  m2_loss_mask_5: 0.1606  m2_loss_dice_5: 1.262  m2_loss_ce_6: 0.414  m2_loss_mask_6: 0.1611  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.4515  m2_loss_mask_7: 0.1614  m2_loss_dice_7: 1.248  m2_loss_ce_8: 0.4306  m2_loss_mask_8: 0.1617  m2_loss_dice_8: 1.293    time: 1.4147  last_time: 1.3997  data_time: 0.0534  last_data_time: 0.0428   lr: 0.0001  max_mem: 35004M
[10/13 18:26:10] d2.utils.events INFO:  eta: 0:07:04  iter: 699  total_loss: 40.09  m1_loss_ce: 0.4859  m1_loss_mask: 0.1723  m1_loss_dice: 1.221  m1_loss_ce_0: 0.5651  m1_loss_mask_0: 0.1974  m1_loss_dice_0: 1.445  m1_loss_ce_1: 0.6417  m1_loss_mask_1: 0.1898  m1_loss_dice_1: 1.334  m1_loss_ce_2: 0.6086  m1_loss_mask_2: 0.1757  m1_loss_dice_2: 1.292  m1_loss_ce_3: 0.5262  m1_loss_mask_3: 0.1752  m1_loss_dice_3: 1.263  m1_loss_ce_4: 0.4964  m1_loss_mask_4: 0.1719  m1_loss_dice_4: 1.271  m1_loss_ce_5: 0.4919  m1_loss_mask_5: 0.1756  m1_loss_dice_5: 1.227  m1_loss_ce_6: 0.5062  m1_loss_mask_6: 0.1715  m1_loss_dice_6: 1.222  m1_loss_ce_7: 0.4976  m1_loss_mask_7: 0.1734  m1_loss_dice_7: 1.209  m1_loss_ce_8: 0.4886  m1_loss_mask_8: 0.1731  m1_loss_dice_8: 1.23  m2_loss_ce: 0.5145  m2_loss_mask: 0.1711  m2_loss_dice: 1.237  m2_loss_ce_0: 0.6129  m2_loss_mask_0: 0.2075  m2_loss_dice_0: 1.497  m2_loss_ce_1: 0.713  m2_loss_mask_1: 0.1955  m2_loss_dice_1: 1.439  m2_loss_ce_2: 0.6168  m2_loss_mask_2: 0.1797  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5555  m2_loss_mask_3: 0.179  m2_loss_dice_3: 1.265  m2_loss_ce_4: 0.5485  m2_loss_mask_4: 0.1776  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.4933  m2_loss_mask_5: 0.1735  m2_loss_dice_5: 1.259  m2_loss_ce_6: 0.4815  m2_loss_mask_6: 0.1732  m2_loss_dice_6: 1.305  m2_loss_ce_7: 0.5136  m2_loss_mask_7: 0.1703  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.509  m2_loss_mask_8: 0.1718  m2_loss_dice_8: 1.242    time: 1.4144  last_time: 1.3676  data_time: 0.0502  last_data_time: 0.0486   lr: 0.0001  max_mem: 35004M
[10/13 18:26:39] d2.utils.events INFO:  eta: 0:06:35  iter: 719  total_loss: 39.46  m1_loss_ce: 0.4626  m1_loss_mask: 0.1683  m1_loss_dice: 1.228  m1_loss_ce_0: 0.5338  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.412  m1_loss_ce_1: 0.6106  m1_loss_mask_1: 0.1812  m1_loss_dice_1: 1.356  m1_loss_ce_2: 0.6051  m1_loss_mask_2: 0.1709  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.5268  m1_loss_mask_3: 0.1692  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.4974  m1_loss_mask_4: 0.1675  m1_loss_dice_4: 1.242  m1_loss_ce_5: 0.4808  m1_loss_mask_5: 0.1679  m1_loss_dice_5: 1.2  m1_loss_ce_6: 0.4711  m1_loss_mask_6: 0.1679  m1_loss_dice_6: 1.235  m1_loss_ce_7: 0.4765  m1_loss_mask_7: 0.1685  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4687  m1_loss_mask_8: 0.1694  m1_loss_dice_8: 1.225  m2_loss_ce: 0.4907  m2_loss_mask: 0.1736  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6024  m2_loss_mask_0: 0.2006  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6371  m2_loss_mask_1: 0.1909  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.6318  m2_loss_mask_2: 0.1755  m2_loss_dice_2: 1.341  m2_loss_ce_3: 0.5446  m2_loss_mask_3: 0.1707  m2_loss_dice_3: 1.283  m2_loss_ce_4: 0.5492  m2_loss_mask_4: 0.1719  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5267  m2_loss_mask_5: 0.1676  m2_loss_dice_5: 1.274  m2_loss_ce_6: 0.4737  m2_loss_mask_6: 0.1746  m2_loss_dice_6: 1.237  m2_loss_ce_7: 0.5031  m2_loss_mask_7: 0.1762  m2_loss_dice_7: 1.275  m2_loss_ce_8: 0.5001  m2_loss_mask_8: 0.1712  m2_loss_dice_8: 1.246    time: 1.4149  last_time: 1.4146  data_time: 0.0513  last_data_time: 0.0419   lr: 0.0001  max_mem: 35004M
[10/13 18:27:07] d2.utils.events INFO:  eta: 0:06:07  iter: 739  total_loss: 40.28  m1_loss_ce: 0.4118  m1_loss_mask: 0.1652  m1_loss_dice: 1.262  m1_loss_ce_0: 0.5309  m1_loss_mask_0: 0.1793  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.5979  m1_loss_mask_1: 0.1745  m1_loss_dice_1: 1.36  m1_loss_ce_2: 0.5599  m1_loss_mask_2: 0.1676  m1_loss_dice_2: 1.318  m1_loss_ce_3: 0.4976  m1_loss_mask_3: 0.1675  m1_loss_dice_3: 1.247  m1_loss_ce_4: 0.4765  m1_loss_mask_4: 0.1668  m1_loss_dice_4: 1.281  m1_loss_ce_5: 0.4731  m1_loss_mask_5: 0.1638  m1_loss_dice_5: 1.229  m1_loss_ce_6: 0.4254  m1_loss_mask_6: 0.1652  m1_loss_dice_6: 1.196  m1_loss_ce_7: 0.4425  m1_loss_mask_7: 0.1642  m1_loss_dice_7: 1.244  m1_loss_ce_8: 0.4409  m1_loss_mask_8: 0.1634  m1_loss_dice_8: 1.242  m2_loss_ce: 0.4564  m2_loss_mask: 0.1638  m2_loss_dice: 1.262  m2_loss_ce_0: 0.6158  m2_loss_mask_0: 0.189  m2_loss_dice_0: 1.514  m2_loss_ce_1: 0.6693  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.545  m2_loss_mask_2: 0.1722  m2_loss_dice_2: 1.358  m2_loss_ce_3: 0.5128  m2_loss_mask_3: 0.1631  m2_loss_dice_3: 1.31  m2_loss_ce_4: 0.5044  m2_loss_mask_4: 0.1599  m2_loss_dice_4: 1.285  m2_loss_ce_5: 0.5028  m2_loss_mask_5: 0.1561  m2_loss_dice_5: 1.322  m2_loss_ce_6: 0.4935  m2_loss_mask_6: 0.1615  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.4753  m2_loss_mask_7: 0.1616  m2_loss_dice_7: 1.236  m2_loss_ce_8: 0.4696  m2_loss_mask_8: 0.1623  m2_loss_dice_8: 1.234    time: 1.4143  last_time: 1.3785  data_time: 0.0511  last_data_time: 0.0483   lr: 0.0001  max_mem: 35004M
[10/13 18:27:35] d2.utils.events INFO:  eta: 0:05:39  iter: 759  total_loss: 38.79  m1_loss_ce: 0.42  m1_loss_mask: 0.1531  m1_loss_dice: 1.19  m1_loss_ce_0: 0.5194  m1_loss_mask_0: 0.1714  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.5771  m1_loss_mask_1: 0.1661  m1_loss_dice_1: 1.316  m1_loss_ce_2: 0.5651  m1_loss_mask_2: 0.16  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.4944  m1_loss_mask_3: 0.1564  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.4839  m1_loss_mask_4: 0.1533  m1_loss_dice_4: 1.172  m1_loss_ce_5: 0.4685  m1_loss_mask_5: 0.1522  m1_loss_dice_5: 1.162  m1_loss_ce_6: 0.4659  m1_loss_mask_6: 0.1541  m1_loss_dice_6: 1.153  m1_loss_ce_7: 0.4788  m1_loss_mask_7: 0.1528  m1_loss_dice_7: 1.151  m1_loss_ce_8: 0.4612  m1_loss_mask_8: 0.1545  m1_loss_dice_8: 1.137  m2_loss_ce: 0.4795  m2_loss_mask: 0.1633  m2_loss_dice: 1.195  m2_loss_ce_0: 0.6223  m2_loss_mask_0: 0.191  m2_loss_dice_0: 1.441  m2_loss_ce_1: 0.6722  m2_loss_mask_1: 0.1846  m2_loss_dice_1: 1.344  m2_loss_ce_2: 0.6077  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.22  m2_loss_ce_3: 0.549  m2_loss_mask_3: 0.164  m2_loss_dice_3: 1.182  m2_loss_ce_4: 0.5155  m2_loss_mask_4: 0.164  m2_loss_dice_4: 1.16  m2_loss_ce_5: 0.5201  m2_loss_mask_5: 0.1608  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.4972  m2_loss_mask_6: 0.1635  m2_loss_dice_6: 1.223  m2_loss_ce_7: 0.4986  m2_loss_mask_7: 0.1635  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4722  m2_loss_mask_8: 0.1638  m2_loss_dice_8: 1.175    time: 1.4141  last_time: 1.4343  data_time: 0.0498  last_data_time: 0.0488   lr: 0.0001  max_mem: 35004M
[10/13 18:28:04] d2.utils.events INFO:  eta: 0:05:10  iter: 779  total_loss: 37.52  m1_loss_ce: 0.4091  m1_loss_mask: 0.1566  m1_loss_dice: 1.154  m1_loss_ce_0: 0.5376  m1_loss_mask_0: 0.1863  m1_loss_dice_0: 1.326  m1_loss_ce_1: 0.5788  m1_loss_mask_1: 0.1734  m1_loss_dice_1: 1.266  m1_loss_ce_2: 0.5327  m1_loss_mask_2: 0.1646  m1_loss_dice_2: 1.242  m1_loss_ce_3: 0.468  m1_loss_mask_3: 0.1611  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4443  m1_loss_mask_4: 0.1608  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.4173  m1_loss_mask_5: 0.1556  m1_loss_dice_5: 1.174  m1_loss_ce_6: 0.3992  m1_loss_mask_6: 0.1654  m1_loss_dice_6: 1.168  m1_loss_ce_7: 0.4115  m1_loss_mask_7: 0.1566  m1_loss_dice_7: 1.176  m1_loss_ce_8: 0.4062  m1_loss_mask_8: 0.1567  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4421  m2_loss_mask: 0.1641  m2_loss_dice: 1.19  m2_loss_ce_0: 0.5821  m2_loss_mask_0: 0.1902  m2_loss_dice_0: 1.401  m2_loss_ce_1: 0.6359  m2_loss_mask_1: 0.1788  m2_loss_dice_1: 1.327  m2_loss_ce_2: 0.5622  m2_loss_mask_2: 0.1697  m2_loss_dice_2: 1.242  m2_loss_ce_3: 0.5267  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.4973  m2_loss_mask_4: 0.1636  m2_loss_dice_4: 1.212  m2_loss_ce_5: 0.4888  m2_loss_mask_5: 0.1626  m2_loss_dice_5: 1.197  m2_loss_ce_6: 0.4477  m2_loss_mask_6: 0.1636  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.4582  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.203  m2_loss_ce_8: 0.4581  m2_loss_mask_8: 0.1646  m2_loss_dice_8: 1.213    time: 1.4140  last_time: 1.3858  data_time: 0.0520  last_data_time: 0.0438   lr: 0.0001  max_mem: 35004M
[10/13 18:28:32] d2.utils.events INFO:  eta: 0:04:42  iter: 799  total_loss: 37.78  m1_loss_ce: 0.4554  m1_loss_mask: 0.1592  m1_loss_dice: 1.133  m1_loss_ce_0: 0.5576  m1_loss_mask_0: 0.1985  m1_loss_dice_0: 1.312  m1_loss_ce_1: 0.5707  m1_loss_mask_1: 0.1807  m1_loss_dice_1: 1.249  m1_loss_ce_2: 0.5664  m1_loss_mask_2: 0.1634  m1_loss_dice_2: 1.163  m1_loss_ce_3: 0.4901  m1_loss_mask_3: 0.1587  m1_loss_dice_3: 1.165  m1_loss_ce_4: 0.4747  m1_loss_mask_4: 0.1587  m1_loss_dice_4: 1.16  m1_loss_ce_5: 0.4742  m1_loss_mask_5: 0.1571  m1_loss_dice_5: 1.135  m1_loss_ce_6: 0.4444  m1_loss_mask_6: 0.1595  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.4632  m1_loss_mask_7: 0.1598  m1_loss_dice_7: 1.138  m1_loss_ce_8: 0.4396  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.134  m2_loss_ce: 0.4877  m2_loss_mask: 0.1645  m2_loss_dice: 1.178  m2_loss_ce_0: 0.6028  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.361  m2_loss_ce_1: 0.6717  m2_loss_mask_1: 0.1848  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.6147  m2_loss_mask_2: 0.1689  m2_loss_dice_2: 1.24  m2_loss_ce_3: 0.56  m2_loss_mask_3: 0.1696  m2_loss_dice_3: 1.171  m2_loss_ce_4: 0.5326  m2_loss_mask_4: 0.1691  m2_loss_dice_4: 1.202  m2_loss_ce_5: 0.536  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.185  m2_loss_ce_6: 0.5197  m2_loss_mask_6: 0.1714  m2_loss_dice_6: 1.169  m2_loss_ce_7: 0.5043  m2_loss_mask_7: 0.1718  m2_loss_dice_7: 1.168  m2_loss_ce_8: 0.4911  m2_loss_mask_8: 0.1651  m2_loss_dice_8: 1.148    time: 1.4140  last_time: 1.3891  data_time: 0.0494  last_data_time: 0.0425   lr: 0.0001  max_mem: 35004M
[10/13 18:29:00] d2.utils.events INFO:  eta: 0:04:14  iter: 819  total_loss: 39.02  m1_loss_ce: 0.4537  m1_loss_mask: 0.168  m1_loss_dice: 1.182  m1_loss_ce_0: 0.5434  m1_loss_mask_0: 0.1925  m1_loss_dice_0: 1.401  m1_loss_ce_1: 0.5944  m1_loss_mask_1: 0.1843  m1_loss_dice_1: 1.342  m1_loss_ce_2: 0.5889  m1_loss_mask_2: 0.1672  m1_loss_dice_2: 1.272  m1_loss_ce_3: 0.5189  m1_loss_mask_3: 0.165  m1_loss_dice_3: 1.214  m1_loss_ce_4: 0.4841  m1_loss_mask_4: 0.1659  m1_loss_dice_4: 1.23  m1_loss_ce_5: 0.482  m1_loss_mask_5: 0.1637  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.4303  m1_loss_mask_6: 0.1674  m1_loss_dice_6: 1.192  m1_loss_ce_7: 0.4524  m1_loss_mask_7: 0.168  m1_loss_dice_7: 1.199  m1_loss_ce_8: 0.4479  m1_loss_mask_8: 0.1666  m1_loss_dice_8: 1.175  m2_loss_ce: 0.4882  m2_loss_mask: 0.1731  m2_loss_dice: 1.24  m2_loss_ce_0: 0.5832  m2_loss_mask_0: 0.2081  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.6843  m2_loss_mask_1: 0.1906  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.6097  m2_loss_mask_2: 0.1732  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.5678  m2_loss_mask_3: 0.175  m2_loss_dice_3: 1.254  m2_loss_ce_4: 0.5317  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.5236  m2_loss_mask_5: 0.1752  m2_loss_dice_5: 1.244  m2_loss_ce_6: 0.5096  m2_loss_mask_6: 0.1725  m2_loss_dice_6: 1.215  m2_loss_ce_7: 0.4952  m2_loss_mask_7: 0.175  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4933  m2_loss_mask_8: 0.1731  m2_loss_dice_8: 1.24    time: 1.4141  last_time: 1.5408  data_time: 0.0508  last_data_time: 0.0399   lr: 0.0001  max_mem: 35004M
[10/13 18:29:29] d2.utils.events INFO:  eta: 0:03:46  iter: 839  total_loss: 39.04  m1_loss_ce: 0.4652  m1_loss_mask: 0.1667  m1_loss_dice: 1.213  m1_loss_ce_0: 0.5262  m1_loss_mask_0: 0.1873  m1_loss_dice_0: 1.393  m1_loss_ce_1: 0.6085  m1_loss_mask_1: 0.1784  m1_loss_dice_1: 1.322  m1_loss_ce_2: 0.5725  m1_loss_mask_2: 0.1685  m1_loss_dice_2: 1.265  m1_loss_ce_3: 0.5184  m1_loss_mask_3: 0.1654  m1_loss_dice_3: 1.226  m1_loss_ce_4: 0.5025  m1_loss_mask_4: 0.1679  m1_loss_dice_4: 1.214  m1_loss_ce_5: 0.4582  m1_loss_mask_5: 0.1657  m1_loss_dice_5: 1.21  m1_loss_ce_6: 0.436  m1_loss_mask_6: 0.1674  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.4542  m1_loss_mask_7: 0.1654  m1_loss_dice_7: 1.207  m1_loss_ce_8: 0.4681  m1_loss_mask_8: 0.1625  m1_loss_dice_8: 1.193  m2_loss_ce: 0.4777  m2_loss_mask: 0.1659  m2_loss_dice: 1.27  m2_loss_ce_0: 0.5974  m2_loss_mask_0: 0.1967  m2_loss_dice_0: 1.49  m2_loss_ce_1: 0.693  m2_loss_mask_1: 0.185  m2_loss_dice_1: 1.395  m2_loss_ce_2: 0.5952  m2_loss_mask_2: 0.1682  m2_loss_dice_2: 1.312  m2_loss_ce_3: 0.5162  m2_loss_mask_3: 0.1687  m2_loss_dice_3: 1.276  m2_loss_ce_4: 0.5186  m2_loss_mask_4: 0.1655  m2_loss_dice_4: 1.241  m2_loss_ce_5: 0.48  m2_loss_mask_5: 0.1672  m2_loss_dice_5: 1.272  m2_loss_ce_6: 0.4768  m2_loss_mask_6: 0.1665  m2_loss_dice_6: 1.261  m2_loss_ce_7: 0.4843  m2_loss_mask_7: 0.1678  m2_loss_dice_7: 1.252  m2_loss_ce_8: 0.4657  m2_loss_mask_8: 0.165  m2_loss_dice_8: 1.261    time: 1.4142  last_time: 1.4907  data_time: 0.0580  last_data_time: 0.0832   lr: 0.0001  max_mem: 35004M
[10/13 18:29:57] d2.utils.events INFO:  eta: 0:03:17  iter: 859  total_loss: 37.83  m1_loss_ce: 0.4139  m1_loss_mask: 0.1715  m1_loss_dice: 1.152  m1_loss_ce_0: 0.5319  m1_loss_mask_0: 0.2066  m1_loss_dice_0: 1.365  m1_loss_ce_1: 0.5945  m1_loss_mask_1: 0.181  m1_loss_dice_1: 1.291  m1_loss_ce_2: 0.5805  m1_loss_mask_2: 0.1741  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.4869  m1_loss_mask_3: 0.1789  m1_loss_dice_3: 1.208  m1_loss_ce_4: 0.4544  m1_loss_mask_4: 0.1708  m1_loss_dice_4: 1.187  m1_loss_ce_5: 0.4489  m1_loss_mask_5: 0.1707  m1_loss_dice_5: 1.14  m1_loss_ce_6: 0.4125  m1_loss_mask_6: 0.1712  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.4251  m1_loss_mask_7: 0.1722  m1_loss_dice_7: 1.157  m1_loss_ce_8: 0.4356  m1_loss_mask_8: 0.1708  m1_loss_dice_8: 1.15  m2_loss_ce: 0.462  m2_loss_mask: 0.1757  m2_loss_dice: 1.219  m2_loss_ce_0: 0.6095  m2_loss_mask_0: 0.2076  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.6581  m2_loss_mask_1: 0.1931  m2_loss_dice_1: 1.337  m2_loss_ce_2: 0.5977  m2_loss_mask_2: 0.1798  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.5416  m2_loss_mask_3: 0.174  m2_loss_dice_3: 1.19  m2_loss_ce_4: 0.5054  m2_loss_mask_4: 0.1743  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.4981  m2_loss_mask_5: 0.1735  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.4632  m2_loss_mask_6: 0.1743  m2_loss_dice_6: 1.194  m2_loss_ce_7: 0.5082  m2_loss_mask_7: 0.1748  m2_loss_dice_7: 1.188  m2_loss_ce_8: 0.4747  m2_loss_mask_8: 0.1745  m2_loss_dice_8: 1.206    time: 1.4139  last_time: 1.4701  data_time: 0.0482  last_data_time: 0.0518   lr: 0.0001  max_mem: 35004M
[10/13 18:30:25] d2.utils.events INFO:  eta: 0:02:49  iter: 879  total_loss: 39.85  m1_loss_ce: 0.4148  m1_loss_mask: 0.1659  m1_loss_dice: 1.21  m1_loss_ce_0: 0.5165  m1_loss_mask_0: 0.1817  m1_loss_dice_0: 1.429  m1_loss_ce_1: 0.5604  m1_loss_mask_1: 0.1758  m1_loss_dice_1: 1.353  m1_loss_ce_2: 0.5716  m1_loss_mask_2: 0.167  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.4831  m1_loss_mask_3: 0.1622  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.4573  m1_loss_mask_4: 0.1593  m1_loss_dice_4: 1.264  m1_loss_ce_5: 0.428  m1_loss_mask_5: 0.1638  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.4337  m1_loss_mask_6: 0.163  m1_loss_dice_6: 1.227  m1_loss_ce_7: 0.4143  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.22  m1_loss_ce_8: 0.4178  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.257  m2_loss_ce: 0.4637  m2_loss_mask: 0.1634  m2_loss_dice: 1.304  m2_loss_ce_0: 0.5798  m2_loss_mask_0: 0.184  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6574  m2_loss_mask_1: 0.1749  m2_loss_dice_1: 1.422  m2_loss_ce_2: 0.5664  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.342  m2_loss_ce_3: 0.5105  m2_loss_mask_3: 0.1658  m2_loss_dice_3: 1.289  m2_loss_ce_4: 0.485  m2_loss_mask_4: 0.1638  m2_loss_dice_4: 1.313  m2_loss_ce_5: 0.4886  m2_loss_mask_5: 0.161  m2_loss_dice_5: 1.277  m2_loss_ce_6: 0.476  m2_loss_mask_6: 0.1626  m2_loss_dice_6: 1.302  m2_loss_ce_7: 0.4625  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.258  m2_loss_ce_8: 0.4533  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.3    time: 1.4134  last_time: 1.4357  data_time: 0.0483  last_data_time: 0.0520   lr: 0.0001  max_mem: 35004M
[10/13 18:30:54] d2.utils.events INFO:  eta: 0:02:21  iter: 899  total_loss: 40.01  m1_loss_ce: 0.4599  m1_loss_mask: 0.1601  m1_loss_dice: 1.237  m1_loss_ce_0: 0.5257  m1_loss_mask_0: 0.1853  m1_loss_dice_0: 1.471  m1_loss_ce_1: 0.6312  m1_loss_mask_1: 0.1715  m1_loss_dice_1: 1.396  m1_loss_ce_2: 0.6087  m1_loss_mask_2: 0.1639  m1_loss_dice_2: 1.303  m1_loss_ce_3: 0.5337  m1_loss_mask_3: 0.164  m1_loss_dice_3: 1.264  m1_loss_ce_4: 0.4876  m1_loss_mask_4: 0.1631  m1_loss_dice_4: 1.25  m1_loss_ce_5: 0.479  m1_loss_mask_5: 0.1621  m1_loss_dice_5: 1.258  m1_loss_ce_6: 0.4794  m1_loss_mask_6: 0.1636  m1_loss_dice_6: 1.215  m1_loss_ce_7: 0.4751  m1_loss_mask_7: 0.1624  m1_loss_dice_7: 1.204  m1_loss_ce_8: 0.4601  m1_loss_mask_8: 0.16  m1_loss_dice_8: 1.216  m2_loss_ce: 0.4996  m2_loss_mask: 0.1593  m2_loss_dice: 1.238  m2_loss_ce_0: 0.5667  m2_loss_mask_0: 0.185  m2_loss_dice_0: 1.505  m2_loss_ce_1: 0.6664  m2_loss_mask_1: 0.1776  m2_loss_dice_1: 1.441  m2_loss_ce_2: 0.5865  m2_loss_mask_2: 0.1669  m2_loss_dice_2: 1.398  m2_loss_ce_3: 0.5514  m2_loss_mask_3: 0.1625  m2_loss_dice_3: 1.325  m2_loss_ce_4: 0.5086  m2_loss_mask_4: 0.1597  m2_loss_dice_4: 1.282  m2_loss_ce_5: 0.5233  m2_loss_mask_5: 0.1585  m2_loss_dice_5: 1.265  m2_loss_ce_6: 0.5008  m2_loss_mask_6: 0.1578  m2_loss_dice_6: 1.274  m2_loss_ce_7: 0.5107  m2_loss_mask_7: 0.1599  m2_loss_dice_7: 1.268  m2_loss_ce_8: 0.4769  m2_loss_mask_8: 0.159  m2_loss_dice_8: 1.275    time: 1.4137  last_time: 1.4181  data_time: 0.0520  last_data_time: 0.0418   lr: 0.0001  max_mem: 35004M
[10/13 18:31:22] d2.utils.events INFO:  eta: 0:01:53  iter: 919  total_loss: 38.69  m1_loss_ce: 0.4271  m1_loss_mask: 0.1555  m1_loss_dice: 1.189  m1_loss_ce_0: 0.5401  m1_loss_mask_0: 0.1767  m1_loss_dice_0: 1.371  m1_loss_ce_1: 0.5563  m1_loss_mask_1: 0.1638  m1_loss_dice_1: 1.323  m1_loss_ce_2: 0.5507  m1_loss_mask_2: 0.1595  m1_loss_dice_2: 1.278  m1_loss_ce_3: 0.5029  m1_loss_mask_3: 0.1564  m1_loss_dice_3: 1.215  m1_loss_ce_4: 0.4658  m1_loss_mask_4: 0.1547  m1_loss_dice_4: 1.188  m1_loss_ce_5: 0.4424  m1_loss_mask_5: 0.1597  m1_loss_dice_5: 1.234  m1_loss_ce_6: 0.4059  m1_loss_mask_6: 0.154  m1_loss_dice_6: 1.185  m1_loss_ce_7: 0.3926  m1_loss_mask_7: 0.1536  m1_loss_dice_7: 1.169  m1_loss_ce_8: 0.4295  m1_loss_mask_8: 0.1545  m1_loss_dice_8: 1.193  m2_loss_ce: 0.431  m2_loss_mask: 0.1588  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6051  m2_loss_mask_0: 0.1841  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6357  m2_loss_mask_1: 0.1748  m2_loss_dice_1: 1.363  m2_loss_ce_2: 0.5507  m2_loss_mask_2: 0.1583  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5157  m2_loss_mask_3: 0.1603  m2_loss_dice_3: 1.248  m2_loss_ce_4: 0.5126  m2_loss_mask_4: 0.1589  m2_loss_dice_4: 1.26  m2_loss_ce_5: 0.4602  m2_loss_mask_5: 0.1593  m2_loss_dice_5: 1.248  m2_loss_ce_6: 0.4609  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.254  m2_loss_ce_7: 0.4642  m2_loss_mask_7: 0.158  m2_loss_dice_7: 1.244  m2_loss_ce_8: 0.4556  m2_loss_mask_8: 0.1566  m2_loss_dice_8: 1.215    time: 1.4139  last_time: 1.3530  data_time: 0.0533  last_data_time: 0.0459   lr: 0.0001  max_mem: 35004M
[10/13 18:31:50] d2.utils.events INFO:  eta: 0:01:24  iter: 939  total_loss: 38.97  m1_loss_ce: 0.4588  m1_loss_mask: 0.1638  m1_loss_dice: 1.187  m1_loss_ce_0: 0.5443  m1_loss_mask_0: 0.1902  m1_loss_dice_0: 1.381  m1_loss_ce_1: 0.5945  m1_loss_mask_1: 0.1796  m1_loss_dice_1: 1.294  m1_loss_ce_2: 0.569  m1_loss_mask_2: 0.1753  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.5014  m1_loss_mask_3: 0.166  m1_loss_dice_3: 1.193  m1_loss_ce_4: 0.4867  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.211  m1_loss_ce_5: 0.4613  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.224  m1_loss_ce_6: 0.4472  m1_loss_mask_6: 0.1641  m1_loss_dice_6: 1.174  m1_loss_ce_7: 0.438  m1_loss_mask_7: 0.1677  m1_loss_dice_7: 1.188  m1_loss_ce_8: 0.436  m1_loss_mask_8: 0.1636  m1_loss_dice_8: 1.188  m2_loss_ce: 0.4846  m2_loss_mask: 0.1694  m2_loss_dice: 1.213  m2_loss_ce_0: 0.6316  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.385  m2_loss_ce_1: 0.6523  m2_loss_mask_1: 0.1886  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6051  m2_loss_mask_2: 0.1732  m2_loss_dice_2: 1.289  m2_loss_ce_3: 0.5465  m2_loss_mask_3: 0.1705  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5255  m2_loss_mask_4: 0.1685  m2_loss_dice_4: 1.205  m2_loss_ce_5: 0.5278  m2_loss_mask_5: 0.167  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4931  m2_loss_mask_6: 0.1709  m2_loss_dice_6: 1.211  m2_loss_ce_7: 0.4986  m2_loss_mask_7: 0.169  m2_loss_dice_7: 1.202  m2_loss_ce_8: 0.4923  m2_loss_mask_8: 0.1686  m2_loss_dice_8: 1.215    time: 1.4137  last_time: 1.4491  data_time: 0.0482  last_data_time: 0.0534   lr: 0.0001  max_mem: 35004M
[10/13 18:32:19] d2.utils.events INFO:  eta: 0:00:56  iter: 959  total_loss: 41.61  m1_loss_ce: 0.466  m1_loss_mask: 0.1597  m1_loss_dice: 1.206  m1_loss_ce_0: 0.5812  m1_loss_mask_0: 0.1786  m1_loss_dice_0: 1.428  m1_loss_ce_1: 0.6367  m1_loss_mask_1: 0.1793  m1_loss_dice_1: 1.362  m1_loss_ce_2: 0.5873  m1_loss_mask_2: 0.1707  m1_loss_dice_2: 1.284  m1_loss_ce_3: 0.5291  m1_loss_mask_3: 0.1666  m1_loss_dice_3: 1.273  m1_loss_ce_4: 0.4867  m1_loss_mask_4: 0.1635  m1_loss_dice_4: 1.256  m1_loss_ce_5: 0.5353  m1_loss_mask_5: 0.1635  m1_loss_dice_5: 1.231  m1_loss_ce_6: 0.4658  m1_loss_mask_6: 0.1614  m1_loss_dice_6: 1.257  m1_loss_ce_7: 0.4807  m1_loss_mask_7: 0.1595  m1_loss_dice_7: 1.246  m1_loss_ce_8: 0.4511  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.234  m2_loss_ce: 0.4912  m2_loss_mask: 0.1699  m2_loss_dice: 1.226  m2_loss_ce_0: 0.6243  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6577  m2_loss_mask_1: 0.1823  m2_loss_dice_1: 1.391  m2_loss_ce_2: 0.5997  m2_loss_mask_2: 0.1759  m2_loss_dice_2: 1.365  m2_loss_ce_3: 0.5196  m2_loss_mask_3: 0.1728  m2_loss_dice_3: 1.334  m2_loss_ce_4: 0.5168  m2_loss_mask_4: 0.1703  m2_loss_dice_4: 1.305  m2_loss_ce_5: 0.5219  m2_loss_mask_5: 0.1704  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.4824  m2_loss_mask_6: 0.1737  m2_loss_dice_6: 1.303  m2_loss_ce_7: 0.5089  m2_loss_mask_7: 0.1711  m2_loss_dice_7: 1.235  m2_loss_ce_8: 0.4746  m2_loss_mask_8: 0.1714  m2_loss_dice_8: 1.289    time: 1.4135  last_time: 1.3263  data_time: 0.0509  last_data_time: 0.0478   lr: 0.0001  max_mem: 35004M
[10/13 18:32:47] d2.utils.events INFO:  eta: 0:00:28  iter: 979  total_loss: 39.86  m1_loss_ce: 0.4624  m1_loss_mask: 0.149  m1_loss_dice: 1.226  m1_loss_ce_0: 0.5664  m1_loss_mask_0: 0.1745  m1_loss_dice_0: 1.422  m1_loss_ce_1: 0.5945  m1_loss_mask_1: 0.1659  m1_loss_dice_1: 1.37  m1_loss_ce_2: 0.5951  m1_loss_mask_2: 0.1633  m1_loss_dice_2: 1.275  m1_loss_ce_3: 0.4991  m1_loss_mask_3: 0.1645  m1_loss_dice_3: 1.284  m1_loss_ce_4: 0.4915  m1_loss_mask_4: 0.1622  m1_loss_dice_4: 1.284  m1_loss_ce_5: 0.4862  m1_loss_mask_5: 0.1565  m1_loss_dice_5: 1.274  m1_loss_ce_6: 0.4546  m1_loss_mask_6: 0.1561  m1_loss_dice_6: 1.243  m1_loss_ce_7: 0.4711  m1_loss_mask_7: 0.1512  m1_loss_dice_7: 1.235  m1_loss_ce_8: 0.4542  m1_loss_mask_8: 0.1505  m1_loss_dice_8: 1.212  m2_loss_ce: 0.4613  m2_loss_mask: 0.162  m2_loss_dice: 1.241  m2_loss_ce_0: 0.6298  m2_loss_mask_0: 0.186  m2_loss_dice_0: 1.482  m2_loss_ce_1: 0.6979  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.6072  m2_loss_mask_2: 0.164  m2_loss_dice_2: 1.315  m2_loss_ce_3: 0.5615  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.267  m2_loss_ce_4: 0.518  m2_loss_mask_4: 0.158  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5132  m2_loss_mask_5: 0.1555  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.48  m2_loss_mask_6: 0.1583  m2_loss_dice_6: 1.256  m2_loss_ce_7: 0.4975  m2_loss_mask_7: 0.162  m2_loss_dice_7: 1.245  m2_loss_ce_8: 0.4874  m2_loss_mask_8: 0.1608  m2_loss_dice_8: 1.271    time: 1.4136  last_time: 1.4014  data_time: 0.0524  last_data_time: 0.0598   lr: 0.0001  max_mem: 35004M
[10/13 18:33:16] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_0_4_0_6/model_final.pth
[10/13 18:33:18] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 39.13  m1_loss_ce: 0.4245  m1_loss_mask: 0.1636  m1_loss_dice: 1.213  m1_loss_ce_0: 0.546  m1_loss_mask_0: 0.1896  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.5872  m1_loss_mask_1: 0.1708  m1_loss_dice_1: 1.34  m1_loss_ce_2: 0.5551  m1_loss_mask_2: 0.1665  m1_loss_dice_2: 1.306  m1_loss_ce_3: 0.5126  m1_loss_mask_3: 0.1644  m1_loss_dice_3: 1.251  m1_loss_ce_4: 0.4933  m1_loss_mask_4: 0.1612  m1_loss_dice_4: 1.247  m1_loss_ce_5: 0.4708  m1_loss_mask_5: 0.1629  m1_loss_dice_5: 1.26  m1_loss_ce_6: 0.4178  m1_loss_mask_6: 0.1623  m1_loss_dice_6: 1.223  m1_loss_ce_7: 0.4597  m1_loss_mask_7: 0.1599  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.4434  m1_loss_mask_8: 0.163  m1_loss_dice_8: 1.238  m2_loss_ce: 0.47  m2_loss_mask: 0.1636  m2_loss_dice: 1.269  m2_loss_ce_0: 0.6005  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.429  m2_loss_ce_1: 0.6637  m2_loss_mask_1: 0.1828  m2_loss_dice_1: 1.343  m2_loss_ce_2: 0.5768  m2_loss_mask_2: 0.1736  m2_loss_dice_2: 1.327  m2_loss_ce_3: 0.5312  m2_loss_mask_3: 0.1748  m2_loss_dice_3: 1.305  m2_loss_ce_4: 0.5283  m2_loss_mask_4: 0.1719  m2_loss_dice_4: 1.295  m2_loss_ce_5: 0.4996  m2_loss_mask_5: 0.1678  m2_loss_dice_5: 1.279  m2_loss_ce_6: 0.4986  m2_loss_mask_6: 0.1637  m2_loss_dice_6: 1.262  m2_loss_ce_7: 0.4699  m2_loss_mask_7: 0.1647  m2_loss_dice_7: 1.276  m2_loss_ce_8: 0.4982  m2_loss_mask_8: 0.162  m2_loss_dice_8: 1.239    time: 1.4138  last_time: 1.3887  data_time: 0.0479  last_data_time: 0.0509   lr: 0.0001  max_mem: 35004M
[10/13 18:33:18] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:23:30 (1.4138 s / it)
[10/13 18:33:18] d2.engine.hooks INFO: Total training time: 0:23:39 (0:00:08 on hooks)
[10/13 18:33:18] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/13 18:33:18] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/13 18:33:18] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/13 18:33:18] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/13 18:33:18] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/13 18:34:47] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalnk_uqix0 ...
[10/13 18:35:36] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 58.083 | 80.993 | 70.671 |      19       |
| Things | 50.192 | 80.490 | 62.223 |       8       |
| Stuff  | 63.822 | 81.359 | 76.815 |      11       |
[10/13 18:35:36] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.738 | 97.242 | 99.482 |     Stuff     |
| class_8  | 73.186 | 83.589 | 87.555 |     Stuff     |
| class_11 | 86.490 | 88.752 | 97.452 |     Stuff     |
| class_12 | 40.675 | 80.641 | 50.440 |     Stuff     |
| class_13 | 36.855 | 76.223 | 48.352 |     Stuff     |
| class_17 | 46.729 | 64.850 | 72.057 |     Stuff     |
| class_19 | 44.255 | 67.290 | 65.767 |     Stuff     |
| class_20 | 65.789 | 78.369 | 83.948 |     Stuff     |
| class_21 | 88.707 | 89.906 | 98.667 |     Stuff     |
| class_22 | 34.562 | 76.338 | 45.275 |     Stuff     |
| class_23 | 88.054 | 91.750 | 95.972 |     Stuff     |
| class_24 | 51.491 | 77.354 | 66.565 |    Things     |
| class_25 | 45.981 | 73.495 | 62.563 |    Things     |
| class_26 | 65.685 | 83.507 | 78.659 |    Things     |
| class_27 | 50.217 | 88.972 | 56.442 |    Things     |
| class_28 | 65.801 | 89.166 | 73.797 |    Things     |
| class_31 | 40.642 | 85.799 | 47.368 |    Things     |
| class_32 | 39.347 | 74.514 | 52.805 |    Things     |
| class_33 | 42.374 | 71.113 | 59.586 |    Things     |
[10/13 18:35:36] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/13 18:35:36] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/13 18:35:36] d2.evaluation.testing INFO: copypaste: 58.0831,80.9930,70.6711,50.1923,80.4898,62.2232,63.8219,81.3590,76.8151,96.7380,97.2419,99.4819,73.1856,83.5886,87.5546,86.4901,88.7519,97.4516,40.6753,80.6411,50.4399,36.8552,76.2232,48.3516,46.7288,64.8495,72.0573,44.2549,67.2902,65.7673,65.7888,78.3686,83.9479,88.7074,89.9061,98.6667,34.5620,76.3385,45.2747,88.0543,91.7496,95.9724,51.4911,77.3540,66.5655,45.9810,73.4954,62.5631,65.6852,83.5066,78.6587,50.2172,88.9718,56.4417,65.8013,89.1655,73.7968,40.6416,85.7989,47.3684,39.3471,74.5136,52.8053,42.3736,71.1129,59.5865
