[10/06 09:52:51] detectron2 INFO: Rank of current process: 0. World size: 2
[10/06 09:52:52] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/06 09:52:52] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_alternating_2_1_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/06 09:52:52] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_Comb_2_L1_L2_alternating_2_1_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_alternating_2_1
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/06 09:52:52] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_alternating_2_1
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/06 09:52:52] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_alternating_2_1/config.yaml
[10/06 09:52:52] d2.utils.env INFO: Using a generated random seed 54919128
[10/06 09:52:56] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 09:52:56] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/06 09:52:56] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/06 09:52:56] d2.data.build INFO: Using training sampler TrainingSampler
[10/06 09:52:57] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/06 09:52:57] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/06 09:52:57] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/06 09:52:57] d2.data.build INFO: Making batched data loader with batch_size=4
[10/06 09:52:57] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/06 09:53:01] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/06 09:53:01] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/06 09:53:01] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/06 09:53:01] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/06 09:53:01] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[10/06 09:53:24] d2.utils.events INFO:  eta: 0:13:03  iter: 19  total_loss: 22.12  m2_loss_ce: 0.4674  m2_loss_mask: 0.184  m2_loss_dice: 1.202  m2_loss_ce_0: 0.627  m2_loss_mask_0: 0.2068  m2_loss_dice_0: 1.383  m2_loss_ce_1: 0.6733  m2_loss_mask_1: 0.191  m2_loss_dice_1: 1.339  m2_loss_ce_2: 0.5609  m2_loss_mask_2: 0.188  m2_loss_dice_2: 1.267  m2_loss_ce_3: 0.5459  m2_loss_mask_3: 0.1855  m2_loss_dice_3: 1.216  m2_loss_ce_4: 0.5327  m2_loss_mask_4: 0.1837  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.4545  m2_loss_mask_5: 0.1834  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.4809  m2_loss_mask_6: 0.1873  m2_loss_dice_6: 1.203  m2_loss_ce_7: 0.4346  m2_loss_mask_7: 0.1845  m2_loss_dice_7: 1.213  m2_loss_ce_8: 0.5448  m2_loss_mask_8: 0.184  m2_loss_dice_8: 1.203  m1_loss_ce: 0.6252  m1_loss_mask: 0.1894  m1_loss_dice: 1.3  m1_loss_ce_0: 0.7492  m1_loss_mask_0: 0.2265  m1_loss_dice_0: 1.503  m1_loss_ce_1: 0.801  m1_loss_mask_1: 0.2033  m1_loss_dice_1: 1.451  m1_loss_ce_2: 0.7983  m1_loss_mask_2: 0.2011  m1_loss_dice_2: 1.418  m1_loss_ce_3: 0.7408  m1_loss_mask_3: 0.1947  m1_loss_dice_3: 1.369  m1_loss_ce_4: 0.6699  m1_loss_mask_4: 0.1953  m1_loss_dice_4: 1.363  m1_loss_ce_5: 0.6546  m1_loss_mask_5: 0.1953  m1_loss_dice_5: 1.385  m1_loss_ce_6: 0.6535  m1_loss_mask_6: 0.1934  m1_loss_dice_6: 1.329  m1_loss_ce_7: 0.6501  m1_loss_mask_7: 0.1912  m1_loss_dice_7: 1.339  m1_loss_ce_8: 0.6619  m1_loss_mask_8: 0.1932  m1_loss_dice_8: 1.327    time: 0.8182  last_time: 0.8691  data_time: 0.2708  last_data_time: 0.0415   lr: 0.0001  max_mem: 18911M
[10/06 09:53:41] d2.utils.events INFO:  eta: 0:12:57  iter: 39  total_loss: 22.63  m2_loss_ce: 0.4564  m2_loss_mask: 0.2018  m2_loss_dice: 1.246  m2_loss_ce_0: 0.6045  m2_loss_mask_0: 0.2266  m2_loss_dice_0: 1.422  m2_loss_ce_1: 0.6465  m2_loss_mask_1: 0.2102  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.573  m2_loss_mask_2: 0.2018  m2_loss_dice_2: 1.253  m2_loss_ce_3: 0.5122  m2_loss_mask_3: 0.191  m2_loss_dice_3: 1.224  m2_loss_ce_4: 0.5084  m2_loss_mask_4: 0.2004  m2_loss_dice_4: 1.143  m2_loss_ce_5: 0.5341  m2_loss_mask_5: 0.2005  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.4593  m2_loss_mask_6: 0.203  m2_loss_dice_6: 1.259  m2_loss_ce_7: 0.4972  m2_loss_mask_7: 0.2049  m2_loss_dice_7: 1.204  m2_loss_ce_8: 0.5143  m2_loss_mask_8: 0.2048  m2_loss_dice_8: 1.221  m1_loss_ce: 0.6555  m1_loss_mask: 0.2102  m1_loss_dice: 1.36  m1_loss_ce_0: 0.6821  m1_loss_mask_0: 0.2402  m1_loss_dice_0: 1.613  m1_loss_ce_1: 0.8017  m1_loss_mask_1: 0.2196  m1_loss_dice_1: 1.573  m1_loss_ce_2: 0.7074  m1_loss_mask_2: 0.2126  m1_loss_dice_2: 1.479  m1_loss_ce_3: 0.7204  m1_loss_mask_3: 0.1988  m1_loss_dice_3: 1.402  m1_loss_ce_4: 0.6626  m1_loss_mask_4: 0.2048  m1_loss_dice_4: 1.44  m1_loss_ce_5: 0.6557  m1_loss_mask_5: 0.2045  m1_loss_dice_5: 1.392  m1_loss_ce_6: 0.6654  m1_loss_mask_6: 0.2043  m1_loss_dice_6: 1.403  m1_loss_ce_7: 0.6228  m1_loss_mask_7: 0.2049  m1_loss_dice_7: 1.369  m1_loss_ce_8: 0.6598  m1_loss_mask_8: 0.2105  m1_loss_dice_8: 1.393    time: 0.8146  last_time: 0.8411  data_time: 0.0517  last_data_time: 0.1356   lr: 0.0001  max_mem: 18915M
[10/06 09:53:57] d2.utils.events INFO:  eta: 0:12:43  iter: 59  total_loss: 22.46  m2_loss_ce: 0.4709  m2_loss_mask: 0.169  m2_loss_dice: 1.219  m2_loss_ce_0: 0.6021  m2_loss_mask_0: 0.198  m2_loss_dice_0: 1.403  m2_loss_ce_1: 0.6539  m2_loss_mask_1: 0.1799  m2_loss_dice_1: 1.289  m2_loss_ce_2: 0.573  m2_loss_mask_2: 0.1736  m2_loss_dice_2: 1.328  m2_loss_ce_3: 0.5201  m2_loss_mask_3: 0.1711  m2_loss_dice_3: 1.24  m2_loss_ce_4: 0.498  m2_loss_mask_4: 0.1735  m2_loss_dice_4: 1.238  m2_loss_ce_5: 0.455  m2_loss_mask_5: 0.1678  m2_loss_dice_5: 1.119  m2_loss_ce_6: 0.4652  m2_loss_mask_6: 0.1687  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4474  m2_loss_mask_7: 0.1699  m2_loss_dice_7: 1.188  m2_loss_ce_8: 0.4394  m2_loss_mask_8: 0.1709  m2_loss_dice_8: 1.24  m1_loss_ce: 0.6008  m1_loss_mask: 0.2016  m1_loss_dice: 1.423  m1_loss_ce_0: 0.6639  m1_loss_mask_0: 0.2413  m1_loss_dice_0: 1.687  m1_loss_ce_1: 0.757  m1_loss_mask_1: 0.2158  m1_loss_dice_1: 1.614  m1_loss_ce_2: 0.7037  m1_loss_mask_2: 0.2036  m1_loss_dice_2: 1.501  m1_loss_ce_3: 0.6956  m1_loss_mask_3: 0.2055  m1_loss_dice_3: 1.485  m1_loss_ce_4: 0.6255  m1_loss_mask_4: 0.2044  m1_loss_dice_4: 1.468  m1_loss_ce_5: 0.5909  m1_loss_mask_5: 0.203  m1_loss_dice_5: 1.454  m1_loss_ce_6: 0.5751  m1_loss_mask_6: 0.2017  m1_loss_dice_6: 1.406  m1_loss_ce_7: 0.5864  m1_loss_mask_7: 0.203  m1_loss_dice_7: 1.412  m1_loss_ce_8: 0.6235  m1_loss_mask_8: 0.2024  m1_loss_dice_8: 1.433    time: 0.8179  last_time: 0.7923  data_time: 0.0517  last_data_time: 0.0448   lr: 0.0001  max_mem: 18915M
[10/06 09:54:14] d2.utils.events INFO:  eta: 0:12:29  iter: 79  total_loss: 22.42  m2_loss_ce: 0.4491  m2_loss_mask: 0.1697  m2_loss_dice: 1.156  m2_loss_ce_0: 0.6174  m2_loss_mask_0: 0.1975  m2_loss_dice_0: 1.366  m2_loss_ce_1: 0.5728  m2_loss_mask_1: 0.1885  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.5466  m2_loss_mask_2: 0.1769  m2_loss_dice_2: 1.278  m2_loss_ce_3: 0.507  m2_loss_mask_3: 0.1781  m2_loss_dice_3: 1.209  m2_loss_ce_4: 0.4979  m2_loss_mask_4: 0.1742  m2_loss_dice_4: 1.126  m2_loss_ce_5: 0.4616  m2_loss_mask_5: 0.1729  m2_loss_dice_5: 1.152  m2_loss_ce_6: 0.4649  m2_loss_mask_6: 0.1805  m2_loss_dice_6: 1.163  m2_loss_ce_7: 0.4847  m2_loss_mask_7: 0.1755  m2_loss_dice_7: 1.138  m2_loss_ce_8: 0.4504  m2_loss_mask_8: 0.174  m2_loss_dice_8: 1.156  m1_loss_ce: 0.5422  m1_loss_mask: 0.2049  m1_loss_dice: 1.446  m1_loss_ce_0: 0.7574  m1_loss_mask_0: 0.2568  m1_loss_dice_0: 1.716  m1_loss_ce_1: 0.758  m1_loss_mask_1: 0.2276  m1_loss_dice_1: 1.606  m1_loss_ce_2: 0.7431  m1_loss_mask_2: 0.214  m1_loss_dice_2: 1.485  m1_loss_ce_3: 0.6837  m1_loss_mask_3: 0.2145  m1_loss_dice_3: 1.437  m1_loss_ce_4: 0.6387  m1_loss_mask_4: 0.2081  m1_loss_dice_4: 1.456  m1_loss_ce_5: 0.6097  m1_loss_mask_5: 0.2036  m1_loss_dice_5: 1.392  m1_loss_ce_6: 0.6162  m1_loss_mask_6: 0.209  m1_loss_dice_6: 1.341  m1_loss_ce_7: 0.5887  m1_loss_mask_7: 0.206  m1_loss_dice_7: 1.4  m1_loss_ce_8: 0.5657  m1_loss_mask_8: 0.2056  m1_loss_dice_8: 1.383    time: 0.8154  last_time: 0.7110  data_time: 0.0575  last_data_time: 0.0372   lr: 0.0001  max_mem: 18915M
[10/06 09:54:30] d2.utils.events INFO:  eta: 0:12:14  iter: 99  total_loss: 23.21  m2_loss_ce: 0.4923  m2_loss_mask: 0.1492  m2_loss_dice: 1.297  m2_loss_ce_0: 0.7102  m2_loss_mask_0: 0.1915  m2_loss_dice_0: 1.542  m2_loss_ce_1: 0.7394  m2_loss_mask_1: 0.1811  m2_loss_dice_1: 1.501  m2_loss_ce_2: 0.6702  m2_loss_mask_2: 0.1569  m2_loss_dice_2: 1.387  m2_loss_ce_3: 0.565  m2_loss_mask_3: 0.1552  m2_loss_dice_3: 1.37  m2_loss_ce_4: 0.5574  m2_loss_mask_4: 0.155  m2_loss_dice_4: 1.36  m2_loss_ce_5: 0.5636  m2_loss_mask_5: 0.1549  m2_loss_dice_5: 1.387  m2_loss_ce_6: 0.5213  m2_loss_mask_6: 0.1558  m2_loss_dice_6: 1.316  m2_loss_ce_7: 0.5109  m2_loss_mask_7: 0.1523  m2_loss_dice_7: 1.304  m2_loss_ce_8: 0.5408  m2_loss_mask_8: 0.1486  m2_loss_dice_8: 1.364  m1_loss_ce: 0.6323  m1_loss_mask: 0.2092  m1_loss_dice: 1.434  m1_loss_ce_0: 0.7007  m1_loss_mask_0: 0.2498  m1_loss_dice_0: 1.651  m1_loss_ce_1: 0.7935  m1_loss_mask_1: 0.2278  m1_loss_dice_1: 1.623  m1_loss_ce_2: 0.7316  m1_loss_mask_2: 0.2162  m1_loss_dice_2: 1.546  m1_loss_ce_3: 0.7218  m1_loss_mask_3: 0.222  m1_loss_dice_3: 1.461  m1_loss_ce_4: 0.6726  m1_loss_mask_4: 0.2154  m1_loss_dice_4: 1.441  m1_loss_ce_5: 0.6809  m1_loss_mask_5: 0.2117  m1_loss_dice_5: 1.438  m1_loss_ce_6: 0.6349  m1_loss_mask_6: 0.2122  m1_loss_dice_6: 1.385  m1_loss_ce_7: 0.6096  m1_loss_mask_7: 0.2076  m1_loss_dice_7: 1.473  m1_loss_ce_8: 0.5686  m1_loss_mask_8: 0.2058  m1_loss_dice_8: 1.443    time: 0.8170  last_time: 0.8282  data_time: 0.0491  last_data_time: 0.0721   lr: 0.0001  max_mem: 18915M
[10/06 09:54:46] d2.utils.events INFO:  eta: 0:11:57  iter: 119  total_loss: 23.07  m2_loss_ce: 0.516  m2_loss_mask: 0.1718  m2_loss_dice: 1.315  m2_loss_ce_0: 0.6155  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.541  m2_loss_ce_1: 0.7134  m2_loss_mask_1: 0.1861  m2_loss_dice_1: 1.445  m2_loss_ce_2: 0.6065  m2_loss_mask_2: 0.1743  m2_loss_dice_2: 1.387  m2_loss_ce_3: 0.5702  m2_loss_mask_3: 0.1732  m2_loss_dice_3: 1.322  m2_loss_ce_4: 0.5354  m2_loss_mask_4: 0.1748  m2_loss_dice_4: 1.394  m2_loss_ce_5: 0.5385  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.378  m2_loss_ce_6: 0.5608  m2_loss_mask_6: 0.1765  m2_loss_dice_6: 1.298  m2_loss_ce_7: 0.5053  m2_loss_mask_7: 0.173  m2_loss_dice_7: 1.338  m2_loss_ce_8: 0.489  m2_loss_mask_8: 0.1722  m2_loss_dice_8: 1.255  m1_loss_ce: 0.6031  m1_loss_mask: 0.1975  m1_loss_dice: 1.407  m1_loss_ce_0: 0.7076  m1_loss_mask_0: 0.2178  m1_loss_dice_0: 1.629  m1_loss_ce_1: 0.7888  m1_loss_mask_1: 0.2179  m1_loss_dice_1: 1.558  m1_loss_ce_2: 0.7908  m1_loss_mask_2: 0.2049  m1_loss_dice_2: 1.507  m1_loss_ce_3: 0.7113  m1_loss_mask_3: 0.1998  m1_loss_dice_3: 1.459  m1_loss_ce_4: 0.6261  m1_loss_mask_4: 0.2007  m1_loss_dice_4: 1.424  m1_loss_ce_5: 0.6465  m1_loss_mask_5: 0.1953  m1_loss_dice_5: 1.415  m1_loss_ce_6: 0.5842  m1_loss_mask_6: 0.1955  m1_loss_dice_6: 1.371  m1_loss_ce_7: 0.5919  m1_loss_mask_7: 0.194  m1_loss_dice_7: 1.401  m1_loss_ce_8: 0.5801  m1_loss_mask_8: 0.1949  m1_loss_dice_8: 1.386    time: 0.8142  last_time: 0.7767  data_time: 0.0598  last_data_time: 0.0368   lr: 0.0001  max_mem: 18945M
[10/06 09:55:03] d2.utils.events INFO:  eta: 0:11:41  iter: 139  total_loss: 23.34  m2_loss_ce: 0.5252  m2_loss_mask: 0.1549  m2_loss_dice: 1.393  m2_loss_ce_0: 0.6313  m2_loss_mask_0: 0.1863  m2_loss_dice_0: 1.612  m2_loss_ce_1: 0.6967  m2_loss_mask_1: 0.1772  m2_loss_dice_1: 1.551  m2_loss_ce_2: 0.6392  m2_loss_mask_2: 0.1622  m2_loss_dice_2: 1.461  m2_loss_ce_3: 0.5582  m2_loss_mask_3: 0.1575  m2_loss_dice_3: 1.432  m2_loss_ce_4: 0.5972  m2_loss_mask_4: 0.1526  m2_loss_dice_4: 1.38  m2_loss_ce_5: 0.5258  m2_loss_mask_5: 0.1534  m2_loss_dice_5: 1.384  m2_loss_ce_6: 0.5414  m2_loss_mask_6: 0.1561  m2_loss_dice_6: 1.362  m2_loss_ce_7: 0.4968  m2_loss_mask_7: 0.1538  m2_loss_dice_7: 1.366  m2_loss_ce_8: 0.5482  m2_loss_mask_8: 0.1568  m2_loss_dice_8: 1.38  m1_loss_ce: 0.6795  m1_loss_mask: 0.2076  m1_loss_dice: 1.367  m1_loss_ce_0: 0.7559  m1_loss_mask_0: 0.2324  m1_loss_dice_0: 1.602  m1_loss_ce_1: 0.8451  m1_loss_mask_1: 0.2275  m1_loss_dice_1: 1.555  m1_loss_ce_2: 0.7575  m1_loss_mask_2: 0.2239  m1_loss_dice_2: 1.485  m1_loss_ce_3: 0.7622  m1_loss_mask_3: 0.2101  m1_loss_dice_3: 1.426  m1_loss_ce_4: 0.7414  m1_loss_mask_4: 0.2094  m1_loss_dice_4: 1.404  m1_loss_ce_5: 0.6282  m1_loss_mask_5: 0.2144  m1_loss_dice_5: 1.431  m1_loss_ce_6: 0.6811  m1_loss_mask_6: 0.2164  m1_loss_dice_6: 1.4  m1_loss_ce_7: 0.6969  m1_loss_mask_7: 0.2161  m1_loss_dice_7: 1.375  m1_loss_ce_8: 0.7011  m1_loss_mask_8: 0.2108  m1_loss_dice_8: 1.371    time: 0.8141  last_time: 0.8124  data_time: 0.0486  last_data_time: 0.0463   lr: 0.0001  max_mem: 18945M
[10/06 09:55:19] d2.utils.events INFO:  eta: 0:11:24  iter: 159  total_loss: 24.32  m2_loss_ce: 0.446  m2_loss_mask: 0.1715  m2_loss_dice: 1.205  m2_loss_ce_0: 0.6385  m2_loss_mask_0: 0.2112  m2_loss_dice_0: 1.501  m2_loss_ce_1: 0.6291  m2_loss_mask_1: 0.192  m2_loss_dice_1: 1.417  m2_loss_ce_2: 0.5665  m2_loss_mask_2: 0.1774  m2_loss_dice_2: 1.309  m2_loss_ce_3: 0.4932  m2_loss_mask_3: 0.1725  m2_loss_dice_3: 1.304  m2_loss_ce_4: 0.4812  m2_loss_mask_4: 0.173  m2_loss_dice_4: 1.242  m2_loss_ce_5: 0.4895  m2_loss_mask_5: 0.1712  m2_loss_dice_5: 1.245  m2_loss_ce_6: 0.4595  m2_loss_mask_6: 0.1684  m2_loss_dice_6: 1.253  m2_loss_ce_7: 0.4613  m2_loss_mask_7: 0.1684  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.4895  m2_loss_mask_8: 0.1689  m2_loss_dice_8: 1.209  m1_loss_ce: 0.6867  m1_loss_mask: 0.211  m1_loss_dice: 1.48  m1_loss_ce_0: 0.8214  m1_loss_mask_0: 0.2482  m1_loss_dice_0: 1.704  m1_loss_ce_1: 0.9102  m1_loss_mask_1: 0.2315  m1_loss_dice_1: 1.572  m1_loss_ce_2: 0.8339  m1_loss_mask_2: 0.2219  m1_loss_dice_2: 1.56  m1_loss_ce_3: 0.817  m1_loss_mask_3: 0.216  m1_loss_dice_3: 1.48  m1_loss_ce_4: 0.7649  m1_loss_mask_4: 0.2175  m1_loss_dice_4: 1.51  m1_loss_ce_5: 0.7754  m1_loss_mask_5: 0.2163  m1_loss_dice_5: 1.486  m1_loss_ce_6: 0.7054  m1_loss_mask_6: 0.2129  m1_loss_dice_6: 1.451  m1_loss_ce_7: 0.7504  m1_loss_mask_7: 0.2142  m1_loss_dice_7: 1.447  m1_loss_ce_8: 0.708  m1_loss_mask_8: 0.214  m1_loss_dice_8: 1.488    time: 0.8129  last_time: 0.6976  data_time: 0.0567  last_data_time: 0.0399   lr: 0.0001  max_mem: 18945M
[10/06 09:55:35] d2.utils.events INFO:  eta: 0:11:08  iter: 179  total_loss: 22.75  m2_loss_ce: 0.3876  m2_loss_mask: 0.1859  m2_loss_dice: 1.119  m2_loss_ce_0: 0.5757  m2_loss_mask_0: 0.2343  m2_loss_dice_0: 1.363  m2_loss_ce_1: 0.5685  m2_loss_mask_1: 0.2135  m2_loss_dice_1: 1.202  m2_loss_ce_2: 0.5519  m2_loss_mask_2: 0.19  m2_loss_dice_2: 1.157  m2_loss_ce_3: 0.455  m2_loss_mask_3: 0.1856  m2_loss_dice_3: 1.115  m2_loss_ce_4: 0.4351  m2_loss_mask_4: 0.1823  m2_loss_dice_4: 1.13  m2_loss_ce_5: 0.4408  m2_loss_mask_5: 0.1794  m2_loss_dice_5: 1.146  m2_loss_ce_6: 0.4244  m2_loss_mask_6: 0.184  m2_loss_dice_6: 1.09  m2_loss_ce_7: 0.4163  m2_loss_mask_7: 0.188  m2_loss_dice_7: 1.131  m2_loss_ce_8: 0.3991  m2_loss_mask_8: 0.1867  m2_loss_dice_8: 1.181  m1_loss_ce: 0.6148  m1_loss_mask: 0.1777  m1_loss_dice: 1.483  m1_loss_ce_0: 0.7375  m1_loss_mask_0: 0.2107  m1_loss_dice_0: 1.699  m1_loss_ce_1: 0.8193  m1_loss_mask_1: 0.2051  m1_loss_dice_1: 1.65  m1_loss_ce_2: 0.7476  m1_loss_mask_2: 0.1944  m1_loss_dice_2: 1.618  m1_loss_ce_3: 0.6965  m1_loss_mask_3: 0.187  m1_loss_dice_3: 1.508  m1_loss_ce_4: 0.6497  m1_loss_mask_4: 0.1779  m1_loss_dice_4: 1.552  m1_loss_ce_5: 0.6469  m1_loss_mask_5: 0.1817  m1_loss_dice_5: 1.512  m1_loss_ce_6: 0.6043  m1_loss_mask_6: 0.1794  m1_loss_dice_6: 1.509  m1_loss_ce_7: 0.5948  m1_loss_mask_7: 0.1782  m1_loss_dice_7: 1.512  m1_loss_ce_8: 0.6226  m1_loss_mask_8: 0.1778  m1_loss_dice_8: 1.462    time: 0.8134  last_time: 0.8137  data_time: 0.0542  last_data_time: 0.0367   lr: 0.0001  max_mem: 19768M
[10/06 09:55:52] d2.utils.events INFO:  eta: 0:10:53  iter: 199  total_loss: 22.67  m2_loss_ce: 0.4303  m2_loss_mask: 0.1566  m2_loss_dice: 1.195  m2_loss_ce_0: 0.6034  m2_loss_mask_0: 0.1873  m2_loss_dice_0: 1.481  m2_loss_ce_1: 0.6443  m2_loss_mask_1: 0.1793  m2_loss_dice_1: 1.301  m2_loss_ce_2: 0.5268  m2_loss_mask_2: 0.1617  m2_loss_dice_2: 1.313  m2_loss_ce_3: 0.4939  m2_loss_mask_3: 0.1604  m2_loss_dice_3: 1.221  m2_loss_ce_4: 0.4915  m2_loss_mask_4: 0.1567  m2_loss_dice_4: 1.173  m2_loss_ce_5: 0.4461  m2_loss_mask_5: 0.1562  m2_loss_dice_5: 1.209  m2_loss_ce_6: 0.4547  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4407  m2_loss_mask_7: 0.1562  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4428  m2_loss_mask_8: 0.1562  m2_loss_dice_8: 1.213  m1_loss_ce: 0.6449  m1_loss_mask: 0.2  m1_loss_dice: 1.463  m1_loss_ce_0: 0.7988  m1_loss_mask_0: 0.2187  m1_loss_dice_0: 1.639  m1_loss_ce_1: 0.8299  m1_loss_mask_1: 0.22  m1_loss_dice_1: 1.611  m1_loss_ce_2: 0.7815  m1_loss_mask_2: 0.2026  m1_loss_dice_2: 1.55  m1_loss_ce_3: 0.7658  m1_loss_mask_3: 0.2079  m1_loss_dice_3: 1.46  m1_loss_ce_4: 0.6743  m1_loss_mask_4: 0.1984  m1_loss_dice_4: 1.444  m1_loss_ce_5: 0.6515  m1_loss_mask_5: 0.2035  m1_loss_dice_5: 1.488  m1_loss_ce_6: 0.6882  m1_loss_mask_6: 0.2048  m1_loss_dice_6: 1.442  m1_loss_ce_7: 0.639  m1_loss_mask_7: 0.2033  m1_loss_dice_7: 1.431  m1_loss_ce_8: 0.6471  m1_loss_mask_8: 0.1953  m1_loss_dice_8: 1.35    time: 0.8141  last_time: 0.8269  data_time: 0.0501  last_data_time: 0.0413   lr: 0.0001  max_mem: 19768M
[10/06 09:56:08] d2.utils.events INFO:  eta: 0:10:36  iter: 219  total_loss: 21.79  m2_loss_ce: 0.4798  m2_loss_mask: 0.1577  m2_loss_dice: 1.258  m2_loss_ce_0: 0.6206  m2_loss_mask_0: 0.1835  m2_loss_dice_0: 1.463  m2_loss_ce_1: 0.665  m2_loss_mask_1: 0.1698  m2_loss_dice_1: 1.402  m2_loss_ce_2: 0.5796  m2_loss_mask_2: 0.151  m2_loss_dice_2: 1.306  m2_loss_ce_3: 0.5191  m2_loss_mask_3: 0.155  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.4956  m2_loss_mask_4: 0.1509  m2_loss_dice_4: 1.273  m2_loss_ce_5: 0.4975  m2_loss_mask_5: 0.1525  m2_loss_dice_5: 1.208  m2_loss_ce_6: 0.483  m2_loss_mask_6: 0.1586  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.5043  m2_loss_mask_7: 0.1562  m2_loss_dice_7: 1.148  m2_loss_ce_8: 0.4669  m2_loss_mask_8: 0.1557  m2_loss_dice_8: 1.244  m1_loss_ce: 0.6288  m1_loss_mask: 0.2064  m1_loss_dice: 1.308  m1_loss_ce_0: 0.6799  m1_loss_mask_0: 0.2408  m1_loss_dice_0: 1.575  m1_loss_ce_1: 0.7955  m1_loss_mask_1: 0.2233  m1_loss_dice_1: 1.464  m1_loss_ce_2: 0.735  m1_loss_mask_2: 0.2084  m1_loss_dice_2: 1.459  m1_loss_ce_3: 0.6781  m1_loss_mask_3: 0.2044  m1_loss_dice_3: 1.37  m1_loss_ce_4: 0.6785  m1_loss_mask_4: 0.2058  m1_loss_dice_4: 1.381  m1_loss_ce_5: 0.6477  m1_loss_mask_5: 0.208  m1_loss_dice_5: 1.393  m1_loss_ce_6: 0.6154  m1_loss_mask_6: 0.2044  m1_loss_dice_6: 1.33  m1_loss_ce_7: 0.6113  m1_loss_mask_7: 0.2049  m1_loss_dice_7: 1.337  m1_loss_ce_8: 0.633  m1_loss_mask_8: 0.2027  m1_loss_dice_8: 1.35    time: 0.8125  last_time: 0.7211  data_time: 0.0564  last_data_time: 0.0353   lr: 0.0001  max_mem: 19768M
[10/06 09:56:24] d2.utils.events INFO:  eta: 0:10:20  iter: 239  total_loss: 22.87  m2_loss_ce: 0.4894  m2_loss_mask: 0.1773  m2_loss_dice: 1.299  m2_loss_ce_0: 0.6168  m2_loss_mask_0: 0.2194  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6459  m2_loss_mask_1: 0.1942  m2_loss_dice_1: 1.407  m2_loss_ce_2: 0.6198  m2_loss_mask_2: 0.1787  m2_loss_dice_2: 1.363  m2_loss_ce_3: 0.5223  m2_loss_mask_3: 0.1816  m2_loss_dice_3: 1.253  m2_loss_ce_4: 0.518  m2_loss_mask_4: 0.1779  m2_loss_dice_4: 1.234  m2_loss_ce_5: 0.5072  m2_loss_mask_5: 0.1761  m2_loss_dice_5: 1.3  m2_loss_ce_6: 0.4791  m2_loss_mask_6: 0.1808  m2_loss_dice_6: 1.232  m2_loss_ce_7: 0.4963  m2_loss_mask_7: 0.1802  m2_loss_dice_7: 1.187  m2_loss_ce_8: 0.4608  m2_loss_mask_8: 0.1793  m2_loss_dice_8: 1.265  m1_loss_ce: 0.666  m1_loss_mask: 0.2068  m1_loss_dice: 1.392  m1_loss_ce_0: 0.7365  m1_loss_mask_0: 0.2455  m1_loss_dice_0: 1.637  m1_loss_ce_1: 0.829  m1_loss_mask_1: 0.2291  m1_loss_dice_1: 1.582  m1_loss_ce_2: 0.786  m1_loss_mask_2: 0.2214  m1_loss_dice_2: 1.502  m1_loss_ce_3: 0.729  m1_loss_mask_3: 0.2105  m1_loss_dice_3: 1.458  m1_loss_ce_4: 0.6751  m1_loss_mask_4: 0.2078  m1_loss_dice_4: 1.446  m1_loss_ce_5: 0.7005  m1_loss_mask_5: 0.2036  m1_loss_dice_5: 1.427  m1_loss_ce_6: 0.6824  m1_loss_mask_6: 0.2079  m1_loss_dice_6: 1.399  m1_loss_ce_7: 0.6732  m1_loss_mask_7: 0.2091  m1_loss_dice_7: 1.419  m1_loss_ce_8: 0.6652  m1_loss_mask_8: 0.2099  m1_loss_dice_8: 1.412    time: 0.8130  last_time: 0.8174  data_time: 0.0519  last_data_time: 0.0404   lr: 0.0001  max_mem: 19768M
[10/06 09:56:41] d2.utils.events INFO:  eta: 0:10:03  iter: 259  total_loss: 23.59  m2_loss_ce: 0.4917  m2_loss_mask: 0.1544  m2_loss_dice: 1.236  m2_loss_ce_0: 0.5961  m2_loss_mask_0: 0.1995  m2_loss_dice_0: 1.391  m2_loss_ce_1: 0.6727  m2_loss_mask_1: 0.1774  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.6378  m2_loss_mask_2: 0.1616  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.5223  m2_loss_mask_3: 0.1573  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.5333  m2_loss_mask_4: 0.1567  m2_loss_dice_4: 1.245  m2_loss_ce_5: 0.5954  m2_loss_mask_5: 0.1554  m2_loss_dice_5: 1.252  m2_loss_ce_6: 0.4868  m2_loss_mask_6: 0.1564  m2_loss_dice_6: 1.197  m2_loss_ce_7: 0.5031  m2_loss_mask_7: 0.1571  m2_loss_dice_7: 1.246  m2_loss_ce_8: 0.5324  m2_loss_mask_8: 0.1551  m2_loss_dice_8: 1.221  m1_loss_ce: 0.7156  m1_loss_mask: 0.1932  m1_loss_dice: 1.406  m1_loss_ce_0: 0.7228  m1_loss_mask_0: 0.2233  m1_loss_dice_0: 1.714  m1_loss_ce_1: 0.8687  m1_loss_mask_1: 0.1995  m1_loss_dice_1: 1.592  m1_loss_ce_2: 0.8659  m1_loss_mask_2: 0.1936  m1_loss_dice_2: 1.575  m1_loss_ce_3: 0.7743  m1_loss_mask_3: 0.1986  m1_loss_dice_3: 1.506  m1_loss_ce_4: 0.7174  m1_loss_mask_4: 0.1988  m1_loss_dice_4: 1.479  m1_loss_ce_5: 0.7234  m1_loss_mask_5: 0.1907  m1_loss_dice_5: 1.454  m1_loss_ce_6: 0.7059  m1_loss_mask_6: 0.1882  m1_loss_dice_6: 1.453  m1_loss_ce_7: 0.6778  m1_loss_mask_7: 0.1875  m1_loss_dice_7: 1.435  m1_loss_ce_8: 0.7015  m1_loss_mask_8: 0.1948  m1_loss_dice_8: 1.442    time: 0.8128  last_time: 0.7085  data_time: 0.0520  last_data_time: 0.0427   lr: 0.0001  max_mem: 19768M
[10/06 09:56:57] d2.utils.events INFO:  eta: 0:09:46  iter: 279  total_loss: 22.89  m2_loss_ce: 0.4272  m2_loss_mask: 0.1681  m2_loss_dice: 1.186  m2_loss_ce_0: 0.5472  m2_loss_mask_0: 0.2049  m2_loss_dice_0: 1.409  m2_loss_ce_1: 0.5886  m2_loss_mask_1: 0.1844  m2_loss_dice_1: 1.37  m2_loss_ce_2: 0.5345  m2_loss_mask_2: 0.179  m2_loss_dice_2: 1.261  m2_loss_ce_3: 0.4969  m2_loss_mask_3: 0.175  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.4418  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.222  m2_loss_ce_5: 0.4194  m2_loss_mask_5: 0.1695  m2_loss_dice_5: 1.231  m2_loss_ce_6: 0.4485  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.418  m2_loss_mask_7: 0.1686  m2_loss_dice_7: 1.23  m2_loss_ce_8: 0.3999  m2_loss_mask_8: 0.1688  m2_loss_dice_8: 1.245  m1_loss_ce: 0.6596  m1_loss_mask: 0.2079  m1_loss_dice: 1.478  m1_loss_ce_0: 0.7222  m1_loss_mask_0: 0.2255  m1_loss_dice_0: 1.7  m1_loss_ce_1: 0.8293  m1_loss_mask_1: 0.2107  m1_loss_dice_1: 1.608  m1_loss_ce_2: 0.795  m1_loss_mask_2: 0.2008  m1_loss_dice_2: 1.537  m1_loss_ce_3: 0.7411  m1_loss_mask_3: 0.2057  m1_loss_dice_3: 1.518  m1_loss_ce_4: 0.6752  m1_loss_mask_4: 0.2054  m1_loss_dice_4: 1.543  m1_loss_ce_5: 0.6841  m1_loss_mask_5: 0.1984  m1_loss_dice_5: 1.536  m1_loss_ce_6: 0.6443  m1_loss_mask_6: 0.2019  m1_loss_dice_6: 1.489  m1_loss_ce_7: 0.6342  m1_loss_mask_7: 0.2028  m1_loss_dice_7: 1.465  m1_loss_ce_8: 0.6698  m1_loss_mask_8: 0.2043  m1_loss_dice_8: 1.439    time: 0.8122  last_time: 0.8601  data_time: 0.0455  last_data_time: 0.0417   lr: 0.0001  max_mem: 19768M
[10/06 09:57:13] d2.utils.events INFO:  eta: 0:09:30  iter: 299  total_loss: 23.05  m2_loss_ce: 0.48  m2_loss_mask: 0.1697  m2_loss_dice: 1.233  m2_loss_ce_0: 0.5715  m2_loss_mask_0: 0.2058  m2_loss_dice_0: 1.446  m2_loss_ce_1: 0.7116  m2_loss_mask_1: 0.1826  m2_loss_dice_1: 1.412  m2_loss_ce_2: 0.5968  m2_loss_mask_2: 0.1724  m2_loss_dice_2: 1.272  m2_loss_ce_3: 0.5417  m2_loss_mask_3: 0.1724  m2_loss_dice_3: 1.297  m2_loss_ce_4: 0.5834  m2_loss_mask_4: 0.1686  m2_loss_dice_4: 1.262  m2_loss_ce_5: 0.5394  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.5238  m2_loss_mask_6: 0.1716  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.5073  m2_loss_mask_7: 0.1686  m2_loss_dice_7: 1.247  m2_loss_ce_8: 0.4723  m2_loss_mask_8: 0.1667  m2_loss_dice_8: 1.261  m1_loss_ce: 0.5878  m1_loss_mask: 0.2124  m1_loss_dice: 1.44  m1_loss_ce_0: 0.7876  m1_loss_mask_0: 0.2412  m1_loss_dice_0: 1.597  m1_loss_ce_1: 0.7628  m1_loss_mask_1: 0.2183  m1_loss_dice_1: 1.536  m1_loss_ce_2: 0.7472  m1_loss_mask_2: 0.2127  m1_loss_dice_2: 1.495  m1_loss_ce_3: 0.6717  m1_loss_mask_3: 0.2183  m1_loss_dice_3: 1.414  m1_loss_ce_4: 0.6383  m1_loss_mask_4: 0.2136  m1_loss_dice_4: 1.474  m1_loss_ce_5: 0.6202  m1_loss_mask_5: 0.211  m1_loss_dice_5: 1.426  m1_loss_ce_6: 0.6197  m1_loss_mask_6: 0.2082  m1_loss_dice_6: 1.408  m1_loss_ce_7: 0.599  m1_loss_mask_7: 0.2097  m1_loss_dice_7: 1.364  m1_loss_ce_8: 0.5814  m1_loss_mask_8: 0.2123  m1_loss_dice_8: 1.416    time: 0.8123  last_time: 0.8096  data_time: 0.0545  last_data_time: 0.0544   lr: 0.0001  max_mem: 19768M
[10/06 09:57:30] d2.utils.events INFO:  eta: 0:09:14  iter: 319  total_loss: 21.86  m2_loss_ce: 0.4432  m2_loss_mask: 0.1678  m2_loss_dice: 1.223  m2_loss_ce_0: 0.6028  m2_loss_mask_0: 0.1977  m2_loss_dice_0: 1.373  m2_loss_ce_1: 0.6274  m2_loss_mask_1: 0.1852  m2_loss_dice_1: 1.324  m2_loss_ce_2: 0.6074  m2_loss_mask_2: 0.176  m2_loss_dice_2: 1.299  m2_loss_ce_3: 0.5554  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.5308  m2_loss_mask_4: 0.1722  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.5057  m2_loss_mask_5: 0.169  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4657  m2_loss_mask_6: 0.1721  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.503  m2_loss_mask_7: 0.1718  m2_loss_dice_7: 1.222  m2_loss_ce_8: 0.4674  m2_loss_mask_8: 0.1682  m2_loss_dice_8: 1.161  m1_loss_ce: 0.6159  m1_loss_mask: 0.2004  m1_loss_dice: 1.347  m1_loss_ce_0: 0.7488  m1_loss_mask_0: 0.2364  m1_loss_dice_0: 1.59  m1_loss_ce_1: 0.8275  m1_loss_mask_1: 0.2142  m1_loss_dice_1: 1.541  m1_loss_ce_2: 0.738  m1_loss_mask_2: 0.2132  m1_loss_dice_2: 1.428  m1_loss_ce_3: 0.704  m1_loss_mask_3: 0.2073  m1_loss_dice_3: 1.361  m1_loss_ce_4: 0.6779  m1_loss_mask_4: 0.2039  m1_loss_dice_4: 1.399  m1_loss_ce_5: 0.6334  m1_loss_mask_5: 0.2039  m1_loss_dice_5: 1.35  m1_loss_ce_6: 0.6423  m1_loss_mask_6: 0.2045  m1_loss_dice_6: 1.343  m1_loss_ce_7: 0.6627  m1_loss_mask_7: 0.2049  m1_loss_dice_7: 1.354  m1_loss_ce_8: 0.6546  m1_loss_mask_8: 0.201  m1_loss_dice_8: 1.325    time: 0.8126  last_time: 0.8462  data_time: 0.0496  last_data_time: 0.0375   lr: 0.0001  max_mem: 19768M
[10/06 09:57:46] d2.utils.events INFO:  eta: 0:08:58  iter: 339  total_loss: 23.14  m2_loss_ce: 0.5268  m2_loss_mask: 0.158  m2_loss_dice: 1.231  m2_loss_ce_0: 0.6097  m2_loss_mask_0: 0.1889  m2_loss_dice_0: 1.402  m2_loss_ce_1: 0.6883  m2_loss_mask_1: 0.1673  m2_loss_dice_1: 1.413  m2_loss_ce_2: 0.6129  m2_loss_mask_2: 0.1597  m2_loss_dice_2: 1.339  m2_loss_ce_3: 0.5486  m2_loss_mask_3: 0.1634  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5358  m2_loss_mask_4: 0.1602  m2_loss_dice_4: 1.235  m2_loss_ce_5: 0.4932  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.232  m2_loss_ce_6: 0.5016  m2_loss_mask_6: 0.1587  m2_loss_dice_6: 1.227  m2_loss_ce_7: 0.4651  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.21  m2_loss_ce_8: 0.472  m2_loss_mask_8: 0.1578  m2_loss_dice_8: 1.224  m1_loss_ce: 0.6858  m1_loss_mask: 0.2276  m1_loss_dice: 1.38  m1_loss_ce_0: 0.8082  m1_loss_mask_0: 0.2513  m1_loss_dice_0: 1.6  m1_loss_ce_1: 0.8933  m1_loss_mask_1: 0.2374  m1_loss_dice_1: 1.541  m1_loss_ce_2: 0.798  m1_loss_mask_2: 0.2249  m1_loss_dice_2: 1.497  m1_loss_ce_3: 0.7226  m1_loss_mask_3: 0.2304  m1_loss_dice_3: 1.483  m1_loss_ce_4: 0.6942  m1_loss_mask_4: 0.2271  m1_loss_dice_4: 1.451  m1_loss_ce_5: 0.7243  m1_loss_mask_5: 0.2272  m1_loss_dice_5: 1.456  m1_loss_ce_6: 0.668  m1_loss_mask_6: 0.2281  m1_loss_dice_6: 1.361  m1_loss_ce_7: 0.6671  m1_loss_mask_7: 0.2286  m1_loss_dice_7: 1.399  m1_loss_ce_8: 0.67  m1_loss_mask_8: 0.223  m1_loss_dice_8: 1.4    time: 0.8129  last_time: 0.8370  data_time: 0.0592  last_data_time: 0.0496   lr: 0.0001  max_mem: 19768M
[10/06 09:58:02] d2.utils.events INFO:  eta: 0:08:42  iter: 359  total_loss: 22.07  m2_loss_ce: 0.4681  m2_loss_mask: 0.1735  m2_loss_dice: 1.227  m2_loss_ce_0: 0.6352  m2_loss_mask_0: 0.1922  m2_loss_dice_0: 1.467  m2_loss_ce_1: 0.6893  m2_loss_mask_1: 0.1959  m2_loss_dice_1: 1.402  m2_loss_ce_2: 0.6502  m2_loss_mask_2: 0.1786  m2_loss_dice_2: 1.319  m2_loss_ce_3: 0.5462  m2_loss_mask_3: 0.1783  m2_loss_dice_3: 1.26  m2_loss_ce_4: 0.5255  m2_loss_mask_4: 0.1796  m2_loss_dice_4: 1.265  m2_loss_ce_5: 0.5157  m2_loss_mask_5: 0.1734  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.4959  m2_loss_mask_6: 0.1719  m2_loss_dice_6: 1.225  m2_loss_ce_7: 0.4651  m2_loss_mask_7: 0.1773  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.472  m2_loss_mask_8: 0.1758  m2_loss_dice_8: 1.227  m1_loss_ce: 0.5697  m1_loss_mask: 0.1973  m1_loss_dice: 1.292  m1_loss_ce_0: 0.6789  m1_loss_mask_0: 0.2355  m1_loss_dice_0: 1.533  m1_loss_ce_1: 0.7696  m1_loss_mask_1: 0.2152  m1_loss_dice_1: 1.5  m1_loss_ce_2: 0.7634  m1_loss_mask_2: 0.2057  m1_loss_dice_2: 1.41  m1_loss_ce_3: 0.7086  m1_loss_mask_3: 0.1977  m1_loss_dice_3: 1.363  m1_loss_ce_4: 0.6456  m1_loss_mask_4: 0.2007  m1_loss_dice_4: 1.355  m1_loss_ce_5: 0.6262  m1_loss_mask_5: 0.1974  m1_loss_dice_5: 1.351  m1_loss_ce_6: 0.6105  m1_loss_mask_6: 0.1987  m1_loss_dice_6: 1.384  m1_loss_ce_7: 0.6158  m1_loss_mask_7: 0.1989  m1_loss_dice_7: 1.34  m1_loss_ce_8: 0.5902  m1_loss_mask_8: 0.1973  m1_loss_dice_8: 1.315    time: 0.8130  last_time: 0.8133  data_time: 0.0441  last_data_time: 0.0413   lr: 0.0001  max_mem: 19768M
[10/06 09:58:19] d2.utils.events INFO:  eta: 0:08:26  iter: 379  total_loss: 22.91  m2_loss_ce: 0.4424  m2_loss_mask: 0.1573  m2_loss_dice: 1.33  m2_loss_ce_0: 0.5152  m2_loss_mask_0: 0.1787  m2_loss_dice_0: 1.475  m2_loss_ce_1: 0.6211  m2_loss_mask_1: 0.1732  m2_loss_dice_1: 1.447  m2_loss_ce_2: 0.5164  m2_loss_mask_2: 0.1639  m2_loss_dice_2: 1.33  m2_loss_ce_3: 0.5434  m2_loss_mask_3: 0.1589  m2_loss_dice_3: 1.285  m2_loss_ce_4: 0.4744  m2_loss_mask_4: 0.1591  m2_loss_dice_4: 1.336  m2_loss_ce_5: 0.5133  m2_loss_mask_5: 0.1599  m2_loss_dice_5: 1.311  m2_loss_ce_6: 0.5064  m2_loss_mask_6: 0.1643  m2_loss_dice_6: 1.334  m2_loss_ce_7: 0.4871  m2_loss_mask_7: 0.1591  m2_loss_dice_7: 1.257  m2_loss_ce_8: 0.4465  m2_loss_mask_8: 0.157  m2_loss_dice_8: 1.306  m1_loss_ce: 0.5485  m1_loss_mask: 0.2427  m1_loss_dice: 1.412  m1_loss_ce_0: 0.6922  m1_loss_mask_0: 0.27  m1_loss_dice_0: 1.616  m1_loss_ce_1: 0.7439  m1_loss_mask_1: 0.2568  m1_loss_dice_1: 1.538  m1_loss_ce_2: 0.6492  m1_loss_mask_2: 0.2505  m1_loss_dice_2: 1.525  m1_loss_ce_3: 0.6638  m1_loss_mask_3: 0.2489  m1_loss_dice_3: 1.458  m1_loss_ce_4: 0.6402  m1_loss_mask_4: 0.2489  m1_loss_dice_4: 1.422  m1_loss_ce_5: 0.5871  m1_loss_mask_5: 0.2393  m1_loss_dice_5: 1.44  m1_loss_ce_6: 0.5778  m1_loss_mask_6: 0.2447  m1_loss_dice_6: 1.362  m1_loss_ce_7: 0.616  m1_loss_mask_7: 0.2482  m1_loss_dice_7: 1.381  m1_loss_ce_8: 0.5561  m1_loss_mask_8: 0.245  m1_loss_dice_8: 1.379    time: 0.8132  last_time: 0.8151  data_time: 0.0567  last_data_time: 0.0389   lr: 0.0001  max_mem: 19768M
[10/06 09:58:36] d2.utils.events INFO:  eta: 0:08:09  iter: 399  total_loss: 22.77  m2_loss_ce: 0.4752  m2_loss_mask: 0.1572  m2_loss_dice: 1.278  m2_loss_ce_0: 0.6356  m2_loss_mask_0: 0.189  m2_loss_dice_0: 1.494  m2_loss_ce_1: 0.6814  m2_loss_mask_1: 0.1736  m2_loss_dice_1: 1.422  m2_loss_ce_2: 0.5866  m2_loss_mask_2: 0.163  m2_loss_dice_2: 1.353  m2_loss_ce_3: 0.5114  m2_loss_mask_3: 0.1587  m2_loss_dice_3: 1.324  m2_loss_ce_4: 0.4901  m2_loss_mask_4: 0.1584  m2_loss_dice_4: 1.286  m2_loss_ce_5: 0.5184  m2_loss_mask_5: 0.1534  m2_loss_dice_5: 1.311  m2_loss_ce_6: 0.5047  m2_loss_mask_6: 0.1551  m2_loss_dice_6: 1.251  m2_loss_ce_7: 0.4848  m2_loss_mask_7: 0.1597  m2_loss_dice_7: 1.267  m2_loss_ce_8: 0.471  m2_loss_mask_8: 0.1576  m2_loss_dice_8: 1.294  m1_loss_ce: 0.6341  m1_loss_mask: 0.2047  m1_loss_dice: 1.37  m1_loss_ce_0: 0.7179  m1_loss_mask_0: 0.2311  m1_loss_dice_0: 1.649  m1_loss_ce_1: 0.822  m1_loss_mask_1: 0.2344  m1_loss_dice_1: 1.568  m1_loss_ce_2: 0.7562  m1_loss_mask_2: 0.2241  m1_loss_dice_2: 1.516  m1_loss_ce_3: 0.6583  m1_loss_mask_3: 0.2196  m1_loss_dice_3: 1.48  m1_loss_ce_4: 0.6611  m1_loss_mask_4: 0.2188  m1_loss_dice_4: 1.433  m1_loss_ce_5: 0.6325  m1_loss_mask_5: 0.2139  m1_loss_dice_5: 1.446  m1_loss_ce_6: 0.6144  m1_loss_mask_6: 0.2156  m1_loss_dice_6: 1.367  m1_loss_ce_7: 0.5938  m1_loss_mask_7: 0.2085  m1_loss_dice_7: 1.432  m1_loss_ce_8: 0.6435  m1_loss_mask_8: 0.2129  m1_loss_dice_8: 1.348    time: 0.8140  last_time: 0.8341  data_time: 0.0670  last_data_time: 0.0463   lr: 0.0001  max_mem: 19768M
[10/06 09:58:52] d2.utils.events INFO:  eta: 0:07:53  iter: 419  total_loss: 21.69  m2_loss_ce: 0.4798  m2_loss_mask: 0.1701  m2_loss_dice: 1.267  m2_loss_ce_0: 0.5905  m2_loss_mask_0: 0.1916  m2_loss_dice_0: 1.452  m2_loss_ce_1: 0.6158  m2_loss_mask_1: 0.1883  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.5866  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5371  m2_loss_mask_3: 0.1642  m2_loss_dice_3: 1.298  m2_loss_ce_4: 0.5246  m2_loss_mask_4: 0.1666  m2_loss_dice_4: 1.261  m2_loss_ce_5: 0.5036  m2_loss_mask_5: 0.1668  m2_loss_dice_5: 1.253  m2_loss_ce_6: 0.4841  m2_loss_mask_6: 0.1692  m2_loss_dice_6: 1.251  m2_loss_ce_7: 0.4488  m2_loss_mask_7: 0.172  m2_loss_dice_7: 1.211  m2_loss_ce_8: 0.4635  m2_loss_mask_8: 0.1704  m2_loss_dice_8: 1.279  m1_loss_ce: 0.5836  m1_loss_mask: 0.1854  m1_loss_dice: 1.344  m1_loss_ce_0: 0.6515  m1_loss_mask_0: 0.2181  m1_loss_dice_0: 1.564  m1_loss_ce_1: 0.7464  m1_loss_mask_1: 0.2096  m1_loss_dice_1: 1.49  m1_loss_ce_2: 0.6802  m1_loss_mask_2: 0.1999  m1_loss_dice_2: 1.447  m1_loss_ce_3: 0.6417  m1_loss_mask_3: 0.1959  m1_loss_dice_3: 1.357  m1_loss_ce_4: 0.6275  m1_loss_mask_4: 0.1956  m1_loss_dice_4: 1.382  m1_loss_ce_5: 0.5674  m1_loss_mask_5: 0.1954  m1_loss_dice_5: 1.375  m1_loss_ce_6: 0.5403  m1_loss_mask_6: 0.1899  m1_loss_dice_6: 1.345  m1_loss_ce_7: 0.5201  m1_loss_mask_7: 0.1885  m1_loss_dice_7: 1.363  m1_loss_ce_8: 0.5316  m1_loss_mask_8: 0.1882  m1_loss_dice_8: 1.345    time: 0.8138  last_time: 0.8238  data_time: 0.0511  last_data_time: 0.0497   lr: 0.0001  max_mem: 19768M
[10/06 09:59:08] d2.utils.events INFO:  eta: 0:07:37  iter: 439  total_loss: 22.63  m2_loss_ce: 0.4749  m2_loss_mask: 0.1737  m2_loss_dice: 1.238  m2_loss_ce_0: 0.6182  m2_loss_mask_0: 0.2019  m2_loss_dice_0: 1.388  m2_loss_ce_1: 0.6621  m2_loss_mask_1: 0.1803  m2_loss_dice_1: 1.36  m2_loss_ce_2: 0.5854  m2_loss_mask_2: 0.1766  m2_loss_dice_2: 1.335  m2_loss_ce_3: 0.5  m2_loss_mask_3: 0.1737  m2_loss_dice_3: 1.214  m2_loss_ce_4: 0.5422  m2_loss_mask_4: 0.1732  m2_loss_dice_4: 1.236  m2_loss_ce_5: 0.5664  m2_loss_mask_5: 0.171  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.491  m2_loss_mask_6: 0.1728  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4757  m2_loss_mask_7: 0.1743  m2_loss_dice_7: 1.263  m2_loss_ce_8: 0.5087  m2_loss_mask_8: 0.1721  m2_loss_dice_8: 1.207  m1_loss_ce: 0.6113  m1_loss_mask: 0.2086  m1_loss_dice: 1.288  m1_loss_ce_0: 0.685  m1_loss_mask_0: 0.2387  m1_loss_dice_0: 1.618  m1_loss_ce_1: 0.791  m1_loss_mask_1: 0.2281  m1_loss_dice_1: 1.542  m1_loss_ce_2: 0.7234  m1_loss_mask_2: 0.2196  m1_loss_dice_2: 1.496  m1_loss_ce_3: 0.6299  m1_loss_mask_3: 0.2098  m1_loss_dice_3: 1.384  m1_loss_ce_4: 0.5978  m1_loss_mask_4: 0.2106  m1_loss_dice_4: 1.361  m1_loss_ce_5: 0.5782  m1_loss_mask_5: 0.2092  m1_loss_dice_5: 1.377  m1_loss_ce_6: 0.6006  m1_loss_mask_6: 0.2062  m1_loss_dice_6: 1.348  m1_loss_ce_7: 0.5576  m1_loss_mask_7: 0.2035  m1_loss_dice_7: 1.374  m1_loss_ce_8: 0.5919  m1_loss_mask_8: 0.2123  m1_loss_dice_8: 1.389    time: 0.8139  last_time: 0.8197  data_time: 0.0495  last_data_time: 0.0393   lr: 0.0001  max_mem: 19768M
[10/06 09:59:25] d2.utils.events INFO:  eta: 0:07:21  iter: 459  total_loss: 21.44  m2_loss_ce: 0.4752  m2_loss_mask: 0.1784  m2_loss_dice: 1.303  m2_loss_ce_0: 0.5422  m2_loss_mask_0: 0.2133  m2_loss_dice_0: 1.456  m2_loss_ce_1: 0.6596  m2_loss_mask_1: 0.2113  m2_loss_dice_1: 1.375  m2_loss_ce_2: 0.5899  m2_loss_mask_2: 0.1803  m2_loss_dice_2: 1.381  m2_loss_ce_3: 0.5697  m2_loss_mask_3: 0.1792  m2_loss_dice_3: 1.274  m2_loss_ce_4: 0.4974  m2_loss_mask_4: 0.1741  m2_loss_dice_4: 1.27  m2_loss_ce_5: 0.5031  m2_loss_mask_5: 0.1737  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.5219  m2_loss_mask_6: 0.176  m2_loss_dice_6: 1.291  m2_loss_ce_7: 0.4515  m2_loss_mask_7: 0.1731  m2_loss_dice_7: 1.269  m2_loss_ce_8: 0.4437  m2_loss_mask_8: 0.1745  m2_loss_dice_8: 1.262  m1_loss_ce: 0.5722  m1_loss_mask: 0.204  m1_loss_dice: 1.293  m1_loss_ce_0: 0.7077  m1_loss_mask_0: 0.2327  m1_loss_dice_0: 1.586  m1_loss_ce_1: 0.7425  m1_loss_mask_1: 0.2277  m1_loss_dice_1: 1.491  m1_loss_ce_2: 0.6693  m1_loss_mask_2: 0.2125  m1_loss_dice_2: 1.43  m1_loss_ce_3: 0.6813  m1_loss_mask_3: 0.2109  m1_loss_dice_3: 1.357  m1_loss_ce_4: 0.6368  m1_loss_mask_4: 0.2084  m1_loss_dice_4: 1.34  m1_loss_ce_5: 0.5863  m1_loss_mask_5: 0.2101  m1_loss_dice_5: 1.307  m1_loss_ce_6: 0.5939  m1_loss_mask_6: 0.2078  m1_loss_dice_6: 1.315  m1_loss_ce_7: 0.6117  m1_loss_mask_7: 0.2092  m1_loss_dice_7: 1.358  m1_loss_ce_8: 0.616  m1_loss_mask_8: 0.2025  m1_loss_dice_8: 1.363    time: 0.8139  last_time: 0.8501  data_time: 0.0594  last_data_time: 0.0828   lr: 0.0001  max_mem: 19768M
[10/06 09:59:41] d2.utils.events INFO:  eta: 0:07:04  iter: 479  total_loss: 21.92  m2_loss_ce: 0.4199  m2_loss_mask: 0.1712  m2_loss_dice: 1.132  m2_loss_ce_0: 0.5555  m2_loss_mask_0: 0.1897  m2_loss_dice_0: 1.415  m2_loss_ce_1: 0.6561  m2_loss_mask_1: 0.1899  m2_loss_dice_1: 1.243  m2_loss_ce_2: 0.5452  m2_loss_mask_2: 0.1696  m2_loss_dice_2: 1.247  m2_loss_ce_3: 0.4887  m2_loss_mask_3: 0.1721  m2_loss_dice_3: 1.168  m2_loss_ce_4: 0.4809  m2_loss_mask_4: 0.1689  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.4608  m2_loss_mask_5: 0.1696  m2_loss_dice_5: 1.155  m2_loss_ce_6: 0.4526  m2_loss_mask_6: 0.1689  m2_loss_dice_6: 1.15  m2_loss_ce_7: 0.4306  m2_loss_mask_7: 0.1696  m2_loss_dice_7: 1.113  m2_loss_ce_8: 0.476  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.13  m1_loss_ce: 0.5708  m1_loss_mask: 0.2002  m1_loss_dice: 1.363  m1_loss_ce_0: 0.7253  m1_loss_mask_0: 0.2069  m1_loss_dice_0: 1.631  m1_loss_ce_1: 0.8021  m1_loss_mask_1: 0.2167  m1_loss_dice_1: 1.506  m1_loss_ce_2: 0.7178  m1_loss_mask_2: 0.2007  m1_loss_dice_2: 1.464  m1_loss_ce_3: 0.6683  m1_loss_mask_3: 0.1943  m1_loss_dice_3: 1.371  m1_loss_ce_4: 0.6386  m1_loss_mask_4: 0.1949  m1_loss_dice_4: 1.429  m1_loss_ce_5: 0.6098  m1_loss_mask_5: 0.2002  m1_loss_dice_5: 1.415  m1_loss_ce_6: 0.5719  m1_loss_mask_6: 0.196  m1_loss_dice_6: 1.324  m1_loss_ce_7: 0.5801  m1_loss_mask_7: 0.1995  m1_loss_dice_7: 1.352  m1_loss_ce_8: 0.5578  m1_loss_mask_8: 0.2005  m1_loss_dice_8: 1.385    time: 0.8139  last_time: 0.8681  data_time: 0.0452  last_data_time: 0.0361   lr: 0.0001  max_mem: 19768M
[10/06 09:59:58] d2.utils.events INFO:  eta: 0:06:48  iter: 499  total_loss: 22.78  m2_loss_ce: 0.4882  m2_loss_mask: 0.1647  m2_loss_dice: 1.343  m2_loss_ce_0: 0.6118  m2_loss_mask_0: 0.1991  m2_loss_dice_0: 1.642  m2_loss_ce_1: 0.7121  m2_loss_mask_1: 0.171  m2_loss_dice_1: 1.529  m2_loss_ce_2: 0.6279  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.428  m2_loss_ce_3: 0.6049  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.391  m2_loss_ce_4: 0.6091  m2_loss_mask_4: 0.1637  m2_loss_dice_4: 1.367  m2_loss_ce_5: 0.5797  m2_loss_mask_5: 0.1587  m2_loss_dice_5: 1.28  m2_loss_ce_6: 0.5448  m2_loss_mask_6: 0.1636  m2_loss_dice_6: 1.338  m2_loss_ce_7: 0.5252  m2_loss_mask_7: 0.161  m2_loss_dice_7: 1.34  m2_loss_ce_8: 0.5049  m2_loss_mask_8: 0.1618  m2_loss_dice_8: 1.302  m1_loss_ce: 0.6187  m1_loss_mask: 0.1808  m1_loss_dice: 1.376  m1_loss_ce_0: 0.7625  m1_loss_mask_0: 0.2077  m1_loss_dice_0: 1.586  m1_loss_ce_1: 0.8097  m1_loss_mask_1: 0.1913  m1_loss_dice_1: 1.526  m1_loss_ce_2: 0.7688  m1_loss_mask_2: 0.1832  m1_loss_dice_2: 1.449  m1_loss_ce_3: 0.7332  m1_loss_mask_3: 0.1754  m1_loss_dice_3: 1.409  m1_loss_ce_4: 0.6799  m1_loss_mask_4: 0.1799  m1_loss_dice_4: 1.407  m1_loss_ce_5: 0.6211  m1_loss_mask_5: 0.1752  m1_loss_dice_5: 1.364  m1_loss_ce_6: 0.5726  m1_loss_mask_6: 0.1772  m1_loss_dice_6: 1.362  m1_loss_ce_7: 0.6085  m1_loss_mask_7: 0.1812  m1_loss_dice_7: 1.376  m1_loss_ce_8: 0.6137  m1_loss_mask_8: 0.1723  m1_loss_dice_8: 1.419    time: 0.8145  last_time: 0.7918  data_time: 0.0532  last_data_time: 0.0515   lr: 0.0001  max_mem: 19768M
[10/06 10:00:14] d2.utils.events INFO:  eta: 0:06:31  iter: 519  total_loss: 21.64  m2_loss_ce: 0.4544  m2_loss_mask: 0.1543  m2_loss_dice: 1.216  m2_loss_ce_0: 0.5915  m2_loss_mask_0: 0.1865  m2_loss_dice_0: 1.418  m2_loss_ce_1: 0.6423  m2_loss_mask_1: 0.1762  m2_loss_dice_1: 1.291  m2_loss_ce_2: 0.5948  m2_loss_mask_2: 0.1637  m2_loss_dice_2: 1.276  m2_loss_ce_3: 0.5571  m2_loss_mask_3: 0.1578  m2_loss_dice_3: 1.228  m2_loss_ce_4: 0.5205  m2_loss_mask_4: 0.1576  m2_loss_dice_4: 1.223  m2_loss_ce_5: 0.5429  m2_loss_mask_5: 0.1553  m2_loss_dice_5: 1.189  m2_loss_ce_6: 0.5055  m2_loss_mask_6: 0.1563  m2_loss_dice_6: 1.187  m2_loss_ce_7: 0.5113  m2_loss_mask_7: 0.1558  m2_loss_dice_7: 1.161  m2_loss_ce_8: 0.4798  m2_loss_mask_8: 0.1572  m2_loss_dice_8: 1.234  m1_loss_ce: 0.6039  m1_loss_mask: 0.1862  m1_loss_dice: 1.336  m1_loss_ce_0: 0.7544  m1_loss_mask_0: 0.211  m1_loss_dice_0: 1.524  m1_loss_ce_1: 0.8472  m1_loss_mask_1: 0.1952  m1_loss_dice_1: 1.474  m1_loss_ce_2: 0.78  m1_loss_mask_2: 0.193  m1_loss_dice_2: 1.447  m1_loss_ce_3: 0.6822  m1_loss_mask_3: 0.1924  m1_loss_dice_3: 1.366  m1_loss_ce_4: 0.5662  m1_loss_mask_4: 0.1922  m1_loss_dice_4: 1.38  m1_loss_ce_5: 0.591  m1_loss_mask_5: 0.1875  m1_loss_dice_5: 1.363  m1_loss_ce_6: 0.5519  m1_loss_mask_6: 0.185  m1_loss_dice_6: 1.341  m1_loss_ce_7: 0.5628  m1_loss_mask_7: 0.1861  m1_loss_dice_7: 1.327  m1_loss_ce_8: 0.5436  m1_loss_mask_8: 0.1855  m1_loss_dice_8: 1.361    time: 0.8141  last_time: 0.8051  data_time: 0.0499  last_data_time: 0.0445   lr: 0.0001  max_mem: 19768M
[10/06 10:00:30] d2.utils.events INFO:  eta: 0:06:15  iter: 539  total_loss: 22.53  m2_loss_ce: 0.4759  m2_loss_mask: 0.1655  m2_loss_dice: 1.414  m2_loss_ce_0: 0.7181  m2_loss_mask_0: 0.1984  m2_loss_dice_0: 1.56  m2_loss_ce_1: 0.6408  m2_loss_mask_1: 0.182  m2_loss_dice_1: 1.518  m2_loss_ce_2: 0.5596  m2_loss_mask_2: 0.1734  m2_loss_dice_2: 1.487  m2_loss_ce_3: 0.5146  m2_loss_mask_3: 0.1682  m2_loss_dice_3: 1.363  m2_loss_ce_4: 0.5044  m2_loss_mask_4: 0.1688  m2_loss_dice_4: 1.377  m2_loss_ce_5: 0.5181  m2_loss_mask_5: 0.1674  m2_loss_dice_5: 1.416  m2_loss_ce_6: 0.4422  m2_loss_mask_6: 0.1669  m2_loss_dice_6: 1.35  m2_loss_ce_7: 0.4865  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.357  m2_loss_ce_8: 0.4771  m2_loss_mask_8: 0.1666  m2_loss_dice_8: 1.392  m1_loss_ce: 0.5694  m1_loss_mask: 0.2105  m1_loss_dice: 1.36  m1_loss_ce_0: 0.663  m1_loss_mask_0: 0.2404  m1_loss_dice_0: 1.552  m1_loss_ce_1: 0.7525  m1_loss_mask_1: 0.2173  m1_loss_dice_1: 1.497  m1_loss_ce_2: 0.7375  m1_loss_mask_2: 0.2138  m1_loss_dice_2: 1.418  m1_loss_ce_3: 0.6425  m1_loss_mask_3: 0.2051  m1_loss_dice_3: 1.363  m1_loss_ce_4: 0.5897  m1_loss_mask_4: 0.2083  m1_loss_dice_4: 1.391  m1_loss_ce_5: 0.6056  m1_loss_mask_5: 0.2104  m1_loss_dice_5: 1.38  m1_loss_ce_6: 0.5783  m1_loss_mask_6: 0.2081  m1_loss_dice_6: 1.34  m1_loss_ce_7: 0.5911  m1_loss_mask_7: 0.2072  m1_loss_dice_7: 1.345  m1_loss_ce_8: 0.604  m1_loss_mask_8: 0.2072  m1_loss_dice_8: 1.32    time: 0.8134  last_time: 0.8201  data_time: 0.0544  last_data_time: 0.0435   lr: 0.0001  max_mem: 19768M
[10/06 10:00:47] d2.utils.events INFO:  eta: 0:05:59  iter: 559  total_loss: 22.14  m2_loss_ce: 0.4579  m2_loss_mask: 0.1411  m2_loss_dice: 1.249  m2_loss_ce_0: 0.6281  m2_loss_mask_0: 0.1711  m2_loss_dice_0: 1.431  m2_loss_ce_1: 0.6463  m2_loss_mask_1: 0.1556  m2_loss_dice_1: 1.401  m2_loss_ce_2: 0.5767  m2_loss_mask_2: 0.141  m2_loss_dice_2: 1.348  m2_loss_ce_3: 0.5157  m2_loss_mask_3: 0.1437  m2_loss_dice_3: 1.324  m2_loss_ce_4: 0.4586  m2_loss_mask_4: 0.1443  m2_loss_dice_4: 1.292  m2_loss_ce_5: 0.4945  m2_loss_mask_5: 0.1404  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4863  m2_loss_mask_6: 0.1399  m2_loss_dice_6: 1.277  m2_loss_ce_7: 0.4715  m2_loss_mask_7: 0.1433  m2_loss_dice_7: 1.287  m2_loss_ce_8: 0.4722  m2_loss_mask_8: 0.1409  m2_loss_dice_8: 1.27  m1_loss_ce: 0.5383  m1_loss_mask: 0.1793  m1_loss_dice: 1.34  m1_loss_ce_0: 0.662  m1_loss_mask_0: 0.2042  m1_loss_dice_0: 1.574  m1_loss_ce_1: 0.6831  m1_loss_mask_1: 0.2065  m1_loss_dice_1: 1.517  m1_loss_ce_2: 0.6417  m1_loss_mask_2: 0.2004  m1_loss_dice_2: 1.468  m1_loss_ce_3: 0.646  m1_loss_mask_3: 0.1976  m1_loss_dice_3: 1.393  m1_loss_ce_4: 0.5864  m1_loss_mask_4: 0.1863  m1_loss_dice_4: 1.359  m1_loss_ce_5: 0.5989  m1_loss_mask_5: 0.1855  m1_loss_dice_5: 1.365  m1_loss_ce_6: 0.584  m1_loss_mask_6: 0.1821  m1_loss_dice_6: 1.352  m1_loss_ce_7: 0.5539  m1_loss_mask_7: 0.1831  m1_loss_dice_7: 1.367  m1_loss_ce_8: 0.5527  m1_loss_mask_8: 0.1756  m1_loss_dice_8: 1.386    time: 0.8140  last_time: 0.8219  data_time: 0.0538  last_data_time: 0.0406   lr: 0.0001  max_mem: 19768M
[10/06 10:01:03] d2.utils.events INFO:  eta: 0:05:42  iter: 579  total_loss: 22.11  m2_loss_ce: 0.3771  m2_loss_mask: 0.158  m2_loss_dice: 1.175  m2_loss_ce_0: 0.5665  m2_loss_mask_0: 0.2063  m2_loss_dice_0: 1.327  m2_loss_ce_1: 0.6054  m2_loss_mask_1: 0.1702  m2_loss_dice_1: 1.265  m2_loss_ce_2: 0.5419  m2_loss_mask_2: 0.1597  m2_loss_dice_2: 1.156  m2_loss_ce_3: 0.4869  m2_loss_mask_3: 0.1632  m2_loss_dice_3: 1.13  m2_loss_ce_4: 0.4452  m2_loss_mask_4: 0.1598  m2_loss_dice_4: 1.101  m2_loss_ce_5: 0.4619  m2_loss_mask_5: 0.1593  m2_loss_dice_5: 1.174  m2_loss_ce_6: 0.4319  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.105  m2_loss_ce_7: 0.4273  m2_loss_mask_7: 0.1606  m2_loss_dice_7: 1.127  m2_loss_ce_8: 0.4536  m2_loss_mask_8: 0.1612  m2_loss_dice_8: 1.152  m1_loss_ce: 0.5913  m1_loss_mask: 0.2189  m1_loss_dice: 1.352  m1_loss_ce_0: 0.7159  m1_loss_mask_0: 0.2458  m1_loss_dice_0: 1.561  m1_loss_ce_1: 0.7751  m1_loss_mask_1: 0.2267  m1_loss_dice_1: 1.527  m1_loss_ce_2: 0.7365  m1_loss_mask_2: 0.2208  m1_loss_dice_2: 1.514  m1_loss_ce_3: 0.6663  m1_loss_mask_3: 0.2156  m1_loss_dice_3: 1.438  m1_loss_ce_4: 0.5922  m1_loss_mask_4: 0.2143  m1_loss_dice_4: 1.403  m1_loss_ce_5: 0.6004  m1_loss_mask_5: 0.2156  m1_loss_dice_5: 1.416  m1_loss_ce_6: 0.5772  m1_loss_mask_6: 0.2128  m1_loss_dice_6: 1.4  m1_loss_ce_7: 0.575  m1_loss_mask_7: 0.2113  m1_loss_dice_7: 1.359  m1_loss_ce_8: 0.6233  m1_loss_mask_8: 0.2209  m1_loss_dice_8: 1.375    time: 0.8139  last_time: 0.8246  data_time: 0.0542  last_data_time: 0.0504   lr: 0.0001  max_mem: 19768M
[10/06 10:01:19] d2.utils.events INFO:  eta: 0:05:26  iter: 599  total_loss: 23.21  m2_loss_ce: 0.423  m2_loss_mask: 0.1745  m2_loss_dice: 1.18  m2_loss_ce_0: 0.5688  m2_loss_mask_0: 0.2052  m2_loss_dice_0: 1.304  m2_loss_ce_1: 0.5785  m2_loss_mask_1: 0.1909  m2_loss_dice_1: 1.279  m2_loss_ce_2: 0.5079  m2_loss_mask_2: 0.1673  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.4741  m2_loss_mask_3: 0.1693  m2_loss_dice_3: 1.165  m2_loss_ce_4: 0.4452  m2_loss_mask_4: 0.165  m2_loss_dice_4: 1.155  m2_loss_ce_5: 0.4619  m2_loss_mask_5: 0.1654  m2_loss_dice_5: 1.167  m2_loss_ce_6: 0.4219  m2_loss_mask_6: 0.1763  m2_loss_dice_6: 1.126  m2_loss_ce_7: 0.464  m2_loss_mask_7: 0.1745  m2_loss_dice_7: 1.2  m2_loss_ce_8: 0.4536  m2_loss_mask_8: 0.1733  m2_loss_dice_8: 1.135  m1_loss_ce: 0.5816  m1_loss_mask: 0.2235  m1_loss_dice: 1.483  m1_loss_ce_0: 0.6678  m1_loss_mask_0: 0.245  m1_loss_dice_0: 1.703  m1_loss_ce_1: 0.7133  m1_loss_mask_1: 0.2403  m1_loss_dice_1: 1.628  m1_loss_ce_2: 0.7331  m1_loss_mask_2: 0.2252  m1_loss_dice_2: 1.585  m1_loss_ce_3: 0.6206  m1_loss_mask_3: 0.2263  m1_loss_dice_3: 1.481  m1_loss_ce_4: 0.5725  m1_loss_mask_4: 0.2304  m1_loss_dice_4: 1.496  m1_loss_ce_5: 0.5314  m1_loss_mask_5: 0.2305  m1_loss_dice_5: 1.549  m1_loss_ce_6: 0.5544  m1_loss_mask_6: 0.2219  m1_loss_dice_6: 1.54  m1_loss_ce_7: 0.5799  m1_loss_mask_7: 0.2256  m1_loss_dice_7: 1.492  m1_loss_ce_8: 0.6006  m1_loss_mask_8: 0.2305  m1_loss_dice_8: 1.469    time: 0.8133  last_time: 0.7928  data_time: 0.0539  last_data_time: 0.0347   lr: 0.0001  max_mem: 19768M
[10/06 10:01:35] d2.utils.events INFO:  eta: 0:05:10  iter: 619  total_loss: 22.23  m2_loss_ce: 0.4724  m2_loss_mask: 0.1695  m2_loss_dice: 1.347  m2_loss_ce_0: 0.6598  m2_loss_mask_0: 0.2056  m2_loss_dice_0: 1.53  m2_loss_ce_1: 0.6722  m2_loss_mask_1: 0.1877  m2_loss_dice_1: 1.435  m2_loss_ce_2: 0.5807  m2_loss_mask_2: 0.1746  m2_loss_dice_2: 1.457  m2_loss_ce_3: 0.5961  m2_loss_mask_3: 0.1697  m2_loss_dice_3: 1.378  m2_loss_ce_4: 0.5509  m2_loss_mask_4: 0.1677  m2_loss_dice_4: 1.334  m2_loss_ce_5: 0.5015  m2_loss_mask_5: 0.1685  m2_loss_dice_5: 1.324  m2_loss_ce_6: 0.4532  m2_loss_mask_6: 0.1693  m2_loss_dice_6: 1.354  m2_loss_ce_7: 0.4641  m2_loss_mask_7: 0.1681  m2_loss_dice_7: 1.318  m2_loss_ce_8: 0.4376  m2_loss_mask_8: 0.1715  m2_loss_dice_8: 1.375  m1_loss_ce: 0.5713  m1_loss_mask: 0.2186  m1_loss_dice: 1.369  m1_loss_ce_0: 0.6445  m1_loss_mask_0: 0.2352  m1_loss_dice_0: 1.539  m1_loss_ce_1: 0.7924  m1_loss_mask_1: 0.2334  m1_loss_dice_1: 1.465  m1_loss_ce_2: 0.7139  m1_loss_mask_2: 0.2271  m1_loss_dice_2: 1.447  m1_loss_ce_3: 0.5801  m1_loss_mask_3: 0.2234  m1_loss_dice_3: 1.38  m1_loss_ce_4: 0.5952  m1_loss_mask_4: 0.2183  m1_loss_dice_4: 1.389  m1_loss_ce_5: 0.5459  m1_loss_mask_5: 0.2156  m1_loss_dice_5: 1.376  m1_loss_ce_6: 0.5696  m1_loss_mask_6: 0.2146  m1_loss_dice_6: 1.321  m1_loss_ce_7: 0.5663  m1_loss_mask_7: 0.2219  m1_loss_dice_7: 1.358  m1_loss_ce_8: 0.5624  m1_loss_mask_8: 0.2222  m1_loss_dice_8: 1.363    time: 0.8130  last_time: 0.7911  data_time: 0.0444  last_data_time: 0.0439   lr: 0.0001  max_mem: 19768M
[10/06 10:01:52] d2.utils.events INFO:  eta: 0:04:53  iter: 639  total_loss: 23.11  m2_loss_ce: 0.4656  m2_loss_mask: 0.1616  m2_loss_dice: 1.271  m2_loss_ce_0: 0.57  m2_loss_mask_0: 0.1978  m2_loss_dice_0: 1.512  m2_loss_ce_1: 0.6389  m2_loss_mask_1: 0.1855  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.6085  m2_loss_mask_2: 0.1649  m2_loss_dice_2: 1.357  m2_loss_ce_3: 0.5124  m2_loss_mask_3: 0.1568  m2_loss_dice_3: 1.336  m2_loss_ce_4: 0.4892  m2_loss_mask_4: 0.1567  m2_loss_dice_4: 1.298  m2_loss_ce_5: 0.4967  m2_loss_mask_5: 0.1557  m2_loss_dice_5: 1.31  m2_loss_ce_6: 0.4703  m2_loss_mask_6: 0.163  m2_loss_dice_6: 1.247  m2_loss_ce_7: 0.4617  m2_loss_mask_7: 0.1588  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.4579  m2_loss_mask_8: 0.1581  m2_loss_dice_8: 1.359  m1_loss_ce: 0.5806  m1_loss_mask: 0.2007  m1_loss_dice: 1.423  m1_loss_ce_0: 0.7048  m1_loss_mask_0: 0.2296  m1_loss_dice_0: 1.667  m1_loss_ce_1: 0.7406  m1_loss_mask_1: 0.2151  m1_loss_dice_1: 1.608  m1_loss_ce_2: 0.6939  m1_loss_mask_2: 0.2115  m1_loss_dice_2: 1.532  m1_loss_ce_3: 0.66  m1_loss_mask_3: 0.2106  m1_loss_dice_3: 1.48  m1_loss_ce_4: 0.5964  m1_loss_mask_4: 0.2017  m1_loss_dice_4: 1.471  m1_loss_ce_5: 0.5925  m1_loss_mask_5: 0.1959  m1_loss_dice_5: 1.503  m1_loss_ce_6: 0.5933  m1_loss_mask_6: 0.2  m1_loss_dice_6: 1.427  m1_loss_ce_7: 0.6091  m1_loss_mask_7: 0.2032  m1_loss_dice_7: 1.437  m1_loss_ce_8: 0.5741  m1_loss_mask_8: 0.1991  m1_loss_dice_8: 1.428    time: 0.8131  last_time: 0.7830  data_time: 0.0535  last_data_time: 0.0681   lr: 0.0001  max_mem: 19768M
[10/06 10:02:08] d2.utils.events INFO:  eta: 0:04:37  iter: 659  total_loss: 22.87  m2_loss_ce: 0.5002  m2_loss_mask: 0.1738  m2_loss_dice: 1.182  m2_loss_ce_0: 0.6079  m2_loss_mask_0: 0.1973  m2_loss_dice_0: 1.361  m2_loss_ce_1: 0.6827  m2_loss_mask_1: 0.1879  m2_loss_dice_1: 1.316  m2_loss_ce_2: 0.5721  m2_loss_mask_2: 0.1796  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5046  m2_loss_mask_3: 0.1812  m2_loss_dice_3: 1.179  m2_loss_ce_4: 0.5541  m2_loss_mask_4: 0.1755  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.5231  m2_loss_mask_5: 0.1727  m2_loss_dice_5: 1.213  m2_loss_ce_6: 0.5343  m2_loss_mask_6: 0.1733  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.5395  m2_loss_mask_7: 0.1739  m2_loss_dice_7: 1.251  m2_loss_ce_8: 0.5323  m2_loss_mask_8: 0.1731  m2_loss_dice_8: 1.21  m1_loss_ce: 0.6095  m1_loss_mask: 0.2071  m1_loss_dice: 1.45  m1_loss_ce_0: 0.7142  m1_loss_mask_0: 0.2545  m1_loss_dice_0: 1.69  m1_loss_ce_1: 0.7689  m1_loss_mask_1: 0.2298  m1_loss_dice_1: 1.607  m1_loss_ce_2: 0.7196  m1_loss_mask_2: 0.223  m1_loss_dice_2: 1.56  m1_loss_ce_3: 0.6679  m1_loss_mask_3: 0.2162  m1_loss_dice_3: 1.511  m1_loss_ce_4: 0.6376  m1_loss_mask_4: 0.219  m1_loss_dice_4: 1.473  m1_loss_ce_5: 0.6354  m1_loss_mask_5: 0.2168  m1_loss_dice_5: 1.492  m1_loss_ce_6: 0.6111  m1_loss_mask_6: 0.2143  m1_loss_dice_6: 1.417  m1_loss_ce_7: 0.6059  m1_loss_mask_7: 0.2142  m1_loss_dice_7: 1.488  m1_loss_ce_8: 0.5992  m1_loss_mask_8: 0.209  m1_loss_dice_8: 1.495    time: 0.8132  last_time: 0.8076  data_time: 0.0490  last_data_time: 0.0455   lr: 0.0001  max_mem: 19768M
[10/06 10:02:24] d2.utils.events INFO:  eta: 0:04:21  iter: 679  total_loss: 21.13  m2_loss_ce: 0.4898  m2_loss_mask: 0.1696  m2_loss_dice: 1.23  m2_loss_ce_0: 0.6725  m2_loss_mask_0: 0.2121  m2_loss_dice_0: 1.465  m2_loss_ce_1: 0.7135  m2_loss_mask_1: 0.199  m2_loss_dice_1: 1.397  m2_loss_ce_2: 0.6652  m2_loss_mask_2: 0.1809  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5678  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.236  m2_loss_ce_4: 0.5504  m2_loss_mask_4: 0.1627  m2_loss_dice_4: 1.247  m2_loss_ce_5: 0.5418  m2_loss_mask_5: 0.1639  m2_loss_dice_5: 1.22  m2_loss_ce_6: 0.4927  m2_loss_mask_6: 0.1676  m2_loss_dice_6: 1.255  m2_loss_ce_7: 0.5381  m2_loss_mask_7: 0.1721  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.5123  m2_loss_mask_8: 0.1703  m2_loss_dice_8: 1.184  m1_loss_ce: 0.5276  m1_loss_mask: 0.194  m1_loss_dice: 1.332  m1_loss_ce_0: 0.6286  m1_loss_mask_0: 0.2193  m1_loss_dice_0: 1.498  m1_loss_ce_1: 0.6929  m1_loss_mask_1: 0.2044  m1_loss_dice_1: 1.476  m1_loss_ce_2: 0.6374  m1_loss_mask_2: 0.1903  m1_loss_dice_2: 1.414  m1_loss_ce_3: 0.6441  m1_loss_mask_3: 0.1975  m1_loss_dice_3: 1.36  m1_loss_ce_4: 0.54  m1_loss_mask_4: 0.1972  m1_loss_dice_4: 1.35  m1_loss_ce_5: 0.5282  m1_loss_mask_5: 0.1935  m1_loss_dice_5: 1.377  m1_loss_ce_6: 0.5248  m1_loss_mask_6: 0.1977  m1_loss_dice_6: 1.362  m1_loss_ce_7: 0.5394  m1_loss_mask_7: 0.2001  m1_loss_dice_7: 1.347  m1_loss_ce_8: 0.5728  m1_loss_mask_8: 0.1974  m1_loss_dice_8: 1.334    time: 0.8132  last_time: 0.8201  data_time: 0.0497  last_data_time: 0.0434   lr: 0.0001  max_mem: 19768M
[10/06 10:02:41] d2.utils.events INFO:  eta: 0:04:04  iter: 699  total_loss: 22.8  m2_loss_ce: 0.5098  m2_loss_mask: 0.1576  m2_loss_dice: 1.47  m2_loss_ce_0: 0.6082  m2_loss_mask_0: 0.185  m2_loss_dice_0: 1.682  m2_loss_ce_1: 0.7056  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.631  m2_loss_ce_2: 0.5945  m2_loss_mask_2: 0.166  m2_loss_dice_2: 1.575  m2_loss_ce_3: 0.5818  m2_loss_mask_3: 0.1657  m2_loss_dice_3: 1.462  m2_loss_ce_4: 0.5685  m2_loss_mask_4: 0.1581  m2_loss_dice_4: 1.473  m2_loss_ce_5: 0.5698  m2_loss_mask_5: 0.1595  m2_loss_dice_5: 1.416  m2_loss_ce_6: 0.4968  m2_loss_mask_6: 0.1632  m2_loss_dice_6: 1.45  m2_loss_ce_7: 0.5137  m2_loss_mask_7: 0.1623  m2_loss_dice_7: 1.417  m2_loss_ce_8: 0.5087  m2_loss_mask_8: 0.1622  m2_loss_dice_8: 1.472  m1_loss_ce: 0.606  m1_loss_mask: 0.2177  m1_loss_dice: 1.337  m1_loss_ce_0: 0.676  m1_loss_mask_0: 0.2361  m1_loss_dice_0: 1.603  m1_loss_ce_1: 0.7826  m1_loss_mask_1: 0.2243  m1_loss_dice_1: 1.566  m1_loss_ce_2: 0.7367  m1_loss_mask_2: 0.2176  m1_loss_dice_2: 1.488  m1_loss_ce_3: 0.6983  m1_loss_mask_3: 0.2147  m1_loss_dice_3: 1.405  m1_loss_ce_4: 0.6335  m1_loss_mask_4: 0.2181  m1_loss_dice_4: 1.36  m1_loss_ce_5: 0.5825  m1_loss_mask_5: 0.2182  m1_loss_dice_5: 1.365  m1_loss_ce_6: 0.6093  m1_loss_mask_6: 0.2164  m1_loss_dice_6: 1.343  m1_loss_ce_7: 0.5931  m1_loss_mask_7: 0.2174  m1_loss_dice_7: 1.334  m1_loss_ce_8: 0.6085  m1_loss_mask_8: 0.2193  m1_loss_dice_8: 1.359    time: 0.8130  last_time: 0.8446  data_time: 0.0497  last_data_time: 0.0543   lr: 0.0001  max_mem: 19768M
[10/06 10:02:57] d2.utils.events INFO:  eta: 0:03:48  iter: 719  total_loss: 22.26  m2_loss_ce: 0.4652  m2_loss_mask: 0.1731  m2_loss_dice: 1.217  m2_loss_ce_0: 0.6062  m2_loss_mask_0: 0.2064  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6649  m2_loss_mask_1: 0.1852  m2_loss_dice_1: 1.371  m2_loss_ce_2: 0.5718  m2_loss_mask_2: 0.1756  m2_loss_dice_2: 1.263  m2_loss_ce_3: 0.5073  m2_loss_mask_3: 0.1699  m2_loss_dice_3: 1.226  m2_loss_ce_4: 0.5069  m2_loss_mask_4: 0.1702  m2_loss_dice_4: 1.2  m2_loss_ce_5: 0.4991  m2_loss_mask_5: 0.1692  m2_loss_dice_5: 1.207  m2_loss_ce_6: 0.4426  m2_loss_mask_6: 0.1701  m2_loss_dice_6: 1.188  m2_loss_ce_7: 0.4717  m2_loss_mask_7: 0.1702  m2_loss_dice_7: 1.234  m2_loss_ce_8: 0.4409  m2_loss_mask_8: 0.1686  m2_loss_dice_8: 1.19  m1_loss_ce: 0.6049  m1_loss_mask: 0.2142  m1_loss_dice: 1.377  m1_loss_ce_0: 0.6897  m1_loss_mask_0: 0.2313  m1_loss_dice_0: 1.662  m1_loss_ce_1: 0.7669  m1_loss_mask_1: 0.2181  m1_loss_dice_1: 1.557  m1_loss_ce_2: 0.7183  m1_loss_mask_2: 0.2114  m1_loss_dice_2: 1.503  m1_loss_ce_3: 0.6679  m1_loss_mask_3: 0.2062  m1_loss_dice_3: 1.446  m1_loss_ce_4: 0.6317  m1_loss_mask_4: 0.2064  m1_loss_dice_4: 1.459  m1_loss_ce_5: 0.6086  m1_loss_mask_5: 0.2018  m1_loss_dice_5: 1.459  m1_loss_ce_6: 0.5813  m1_loss_mask_6: 0.2117  m1_loss_dice_6: 1.424  m1_loss_ce_7: 0.6064  m1_loss_mask_7: 0.2158  m1_loss_dice_7: 1.421  m1_loss_ce_8: 0.5949  m1_loss_mask_8: 0.2136  m1_loss_dice_8: 1.416    time: 0.8127  last_time: 0.8660  data_time: 0.0463  last_data_time: 0.0436   lr: 0.0001  max_mem: 19768M
[10/06 10:03:13] d2.utils.events INFO:  eta: 0:03:32  iter: 739  total_loss: 22.39  m2_loss_ce: 0.5319  m2_loss_mask: 0.153  m2_loss_dice: 1.276  m2_loss_ce_0: 0.6869  m2_loss_mask_0: 0.177  m2_loss_dice_0: 1.519  m2_loss_ce_1: 0.7785  m2_loss_mask_1: 0.1616  m2_loss_dice_1: 1.455  m2_loss_ce_2: 0.6231  m2_loss_mask_2: 0.1612  m2_loss_dice_2: 1.37  m2_loss_ce_3: 0.5655  m2_loss_mask_3: 0.1537  m2_loss_dice_3: 1.328  m2_loss_ce_4: 0.5649  m2_loss_mask_4: 0.1553  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.5414  m2_loss_mask_5: 0.1526  m2_loss_dice_5: 1.299  m2_loss_ce_6: 0.5196  m2_loss_mask_6: 0.1521  m2_loss_dice_6: 1.293  m2_loss_ce_7: 0.5472  m2_loss_mask_7: 0.152  m2_loss_dice_7: 1.299  m2_loss_ce_8: 0.5545  m2_loss_mask_8: 0.1536  m2_loss_dice_8: 1.299  m1_loss_ce: 0.5998  m1_loss_mask: 0.1855  m1_loss_dice: 1.389  m1_loss_ce_0: 0.728  m1_loss_mask_0: 0.2258  m1_loss_dice_0: 1.571  m1_loss_ce_1: 0.8133  m1_loss_mask_1: 0.2045  m1_loss_dice_1: 1.506  m1_loss_ce_2: 0.7664  m1_loss_mask_2: 0.1918  m1_loss_dice_2: 1.43  m1_loss_ce_3: 0.7066  m1_loss_mask_3: 0.1975  m1_loss_dice_3: 1.44  m1_loss_ce_4: 0.679  m1_loss_mask_4: 0.1912  m1_loss_dice_4: 1.418  m1_loss_ce_5: 0.6553  m1_loss_mask_5: 0.1909  m1_loss_dice_5: 1.47  m1_loss_ce_6: 0.6219  m1_loss_mask_6: 0.1933  m1_loss_dice_6: 1.375  m1_loss_ce_7: 0.6155  m1_loss_mask_7: 0.1927  m1_loss_dice_7: 1.37  m1_loss_ce_8: 0.6104  m1_loss_mask_8: 0.1898  m1_loss_dice_8: 1.419    time: 0.8127  last_time: 0.9040  data_time: 0.0637  last_data_time: 0.1610   lr: 0.0001  max_mem: 19768M
[10/06 10:03:30] d2.utils.events INFO:  eta: 0:03:15  iter: 759  total_loss: 22.86  m2_loss_ce: 0.4797  m2_loss_mask: 0.1741  m2_loss_dice: 1.312  m2_loss_ce_0: 0.6225  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.516  m2_loss_ce_1: 0.6837  m2_loss_mask_1: 0.193  m2_loss_dice_1: 1.416  m2_loss_ce_2: 0.5615  m2_loss_mask_2: 0.1809  m2_loss_dice_2: 1.426  m2_loss_ce_3: 0.5361  m2_loss_mask_3: 0.1769  m2_loss_dice_3: 1.318  m2_loss_ce_4: 0.5086  m2_loss_mask_4: 0.176  m2_loss_dice_4: 1.275  m2_loss_ce_5: 0.5368  m2_loss_mask_5: 0.1684  m2_loss_dice_5: 1.296  m2_loss_ce_6: 0.5387  m2_loss_mask_6: 0.178  m2_loss_dice_6: 1.293  m2_loss_ce_7: 0.5275  m2_loss_mask_7: 0.1776  m2_loss_dice_7: 1.321  m2_loss_ce_8: 0.4682  m2_loss_mask_8: 0.1745  m2_loss_dice_8: 1.326  m1_loss_ce: 0.6176  m1_loss_mask: 0.1992  m1_loss_dice: 1.427  m1_loss_ce_0: 0.7015  m1_loss_mask_0: 0.2247  m1_loss_dice_0: 1.645  m1_loss_ce_1: 0.8086  m1_loss_mask_1: 0.2037  m1_loss_dice_1: 1.573  m1_loss_ce_2: 0.7375  m1_loss_mask_2: 0.1922  m1_loss_dice_2: 1.539  m1_loss_ce_3: 0.6867  m1_loss_mask_3: 0.2043  m1_loss_dice_3: 1.487  m1_loss_ce_4: 0.6892  m1_loss_mask_4: 0.2005  m1_loss_dice_4: 1.449  m1_loss_ce_5: 0.6446  m1_loss_mask_5: 0.1978  m1_loss_dice_5: 1.493  m1_loss_ce_6: 0.6581  m1_loss_mask_6: 0.199  m1_loss_dice_6: 1.42  m1_loss_ce_7: 0.5985  m1_loss_mask_7: 0.1988  m1_loss_dice_7: 1.426  m1_loss_ce_8: 0.6028  m1_loss_mask_8: 0.1992  m1_loss_dice_8: 1.463    time: 0.8128  last_time: 0.8389  data_time: 0.0496  last_data_time: 0.0828   lr: 0.0001  max_mem: 19768M
[10/06 10:03:46] d2.utils.events INFO:  eta: 0:02:59  iter: 779  total_loss: 22.1  m2_loss_ce: 0.5046  m2_loss_mask: 0.1741  m2_loss_dice: 1.253  m2_loss_ce_0: 0.629  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.445  m2_loss_ce_1: 0.6868  m2_loss_mask_1: 0.1904  m2_loss_dice_1: 1.429  m2_loss_ce_2: 0.6039  m2_loss_mask_2: 0.1809  m2_loss_dice_2: 1.317  m2_loss_ce_3: 0.5842  m2_loss_mask_3: 0.1769  m2_loss_dice_3: 1.266  m2_loss_ce_4: 0.5058  m2_loss_mask_4: 0.176  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.5073  m2_loss_mask_5: 0.1666  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.4816  m2_loss_mask_6: 0.178  m2_loss_dice_6: 1.266  m2_loss_ce_7: 0.4933  m2_loss_mask_7: 0.1776  m2_loss_dice_7: 1.224  m2_loss_ce_8: 0.514  m2_loss_mask_8: 0.1745  m2_loss_dice_8: 1.161  m1_loss_ce: 0.5049  m1_loss_mask: 0.2002  m1_loss_dice: 1.416  m1_loss_ce_0: 0.6978  m1_loss_mask_0: 0.2269  m1_loss_dice_0: 1.585  m1_loss_ce_1: 0.766  m1_loss_mask_1: 0.2103  m1_loss_dice_1: 1.542  m1_loss_ce_2: 0.7121  m1_loss_mask_2: 0.207  m1_loss_dice_2: 1.497  m1_loss_ce_3: 0.6583  m1_loss_mask_3: 0.2044  m1_loss_dice_3: 1.457  m1_loss_ce_4: 0.5934  m1_loss_mask_4: 0.204  m1_loss_dice_4: 1.428  m1_loss_ce_5: 0.5487  m1_loss_mask_5: 0.1991  m1_loss_dice_5: 1.442  m1_loss_ce_6: 0.5305  m1_loss_mask_6: 0.2027  m1_loss_dice_6: 1.411  m1_loss_ce_7: 0.5575  m1_loss_mask_7: 0.2007  m1_loss_dice_7: 1.377  m1_loss_ce_8: 0.5275  m1_loss_mask_8: 0.2006  m1_loss_dice_8: 1.385    time: 0.8126  last_time: 0.7386  data_time: 0.0484  last_data_time: 0.0462   lr: 0.0001  max_mem: 19768M
[10/06 10:04:02] d2.utils.events INFO:  eta: 0:02:43  iter: 799  total_loss: 22  m2_loss_ce: 0.4447  m2_loss_mask: 0.1893  m2_loss_dice: 1.204  m2_loss_ce_0: 0.5801  m2_loss_mask_0: 0.2201  m2_loss_dice_0: 1.314  m2_loss_ce_1: 0.6771  m2_loss_mask_1: 0.2048  m2_loss_dice_1: 1.283  m2_loss_ce_2: 0.5519  m2_loss_mask_2: 0.1934  m2_loss_dice_2: 1.235  m2_loss_ce_3: 0.5043  m2_loss_mask_3: 0.1907  m2_loss_dice_3: 1.201  m2_loss_ce_4: 0.4705  m2_loss_mask_4: 0.1857  m2_loss_dice_4: 1.216  m2_loss_ce_5: 0.4677  m2_loss_mask_5: 0.1841  m2_loss_dice_5: 1.174  m2_loss_ce_6: 0.5252  m2_loss_mask_6: 0.1845  m2_loss_dice_6: 1.161  m2_loss_ce_7: 0.4868  m2_loss_mask_7: 0.185  m2_loss_dice_7: 1.145  m2_loss_ce_8: 0.5151  m2_loss_mask_8: 0.1865  m2_loss_dice_8: 1.138  m1_loss_ce: 0.5453  m1_loss_mask: 0.1889  m1_loss_dice: 1.393  m1_loss_ce_0: 0.7372  m1_loss_mask_0: 0.2123  m1_loss_dice_0: 1.587  m1_loss_ce_1: 0.7907  m1_loss_mask_1: 0.1888  m1_loss_dice_1: 1.543  m1_loss_ce_2: 0.7714  m1_loss_mask_2: 0.1831  m1_loss_dice_2: 1.491  m1_loss_ce_3: 0.6865  m1_loss_mask_3: 0.1935  m1_loss_dice_3: 1.426  m1_loss_ce_4: 0.6551  m1_loss_mask_4: 0.1938  m1_loss_dice_4: 1.455  m1_loss_ce_5: 0.6372  m1_loss_mask_5: 0.1967  m1_loss_dice_5: 1.464  m1_loss_ce_6: 0.5617  m1_loss_mask_6: 0.1953  m1_loss_dice_6: 1.423  m1_loss_ce_7: 0.5592  m1_loss_mask_7: 0.1931  m1_loss_dice_7: 1.421  m1_loss_ce_8: 0.5613  m1_loss_mask_8: 0.1916  m1_loss_dice_8: 1.415    time: 0.8128  last_time: 0.8016  data_time: 0.0508  last_data_time: 0.0665   lr: 0.0001  max_mem: 19768M
[10/06 10:04:18] d2.utils.events INFO:  eta: 0:02:26  iter: 819  total_loss: 22.79  m2_loss_ce: 0.5125  m2_loss_mask: 0.1565  m2_loss_dice: 1.354  m2_loss_ce_0: 0.5785  m2_loss_mask_0: 0.1789  m2_loss_dice_0: 1.532  m2_loss_ce_1: 0.7233  m2_loss_mask_1: 0.1713  m2_loss_dice_1: 1.437  m2_loss_ce_2: 0.6609  m2_loss_mask_2: 0.1601  m2_loss_dice_2: 1.405  m2_loss_ce_3: 0.5776  m2_loss_mask_3: 0.159  m2_loss_dice_3: 1.351  m2_loss_ce_4: 0.5697  m2_loss_mask_4: 0.1536  m2_loss_dice_4: 1.279  m2_loss_ce_5: 0.5388  m2_loss_mask_5: 0.1529  m2_loss_dice_5: 1.295  m2_loss_ce_6: 0.5397  m2_loss_mask_6: 0.1562  m2_loss_dice_6: 1.313  m2_loss_ce_7: 0.5466  m2_loss_mask_7: 0.1549  m2_loss_dice_7: 1.34  m2_loss_ce_8: 0.5772  m2_loss_mask_8: 0.1569  m2_loss_dice_8: 1.305  m1_loss_ce: 0.5916  m1_loss_mask: 0.1926  m1_loss_dice: 1.399  m1_loss_ce_0: 0.681  m1_loss_mask_0: 0.2246  m1_loss_dice_0: 1.613  m1_loss_ce_1: 0.7995  m1_loss_mask_1: 0.191  m1_loss_dice_1: 1.602  m1_loss_ce_2: 0.7634  m1_loss_mask_2: 0.1948  m1_loss_dice_2: 1.511  m1_loss_ce_3: 0.697  m1_loss_mask_3: 0.2018  m1_loss_dice_3: 1.483  m1_loss_ce_4: 0.6798  m1_loss_mask_4: 0.195  m1_loss_dice_4: 1.441  m1_loss_ce_5: 0.6131  m1_loss_mask_5: 0.1998  m1_loss_dice_5: 1.45  m1_loss_ce_6: 0.6126  m1_loss_mask_6: 0.1944  m1_loss_dice_6: 1.422  m1_loss_ce_7: 0.6023  m1_loss_mask_7: 0.197  m1_loss_dice_7: 1.431  m1_loss_ce_8: 0.5756  m1_loss_mask_8: 0.1932  m1_loss_dice_8: 1.414    time: 0.8124  last_time: 0.8442  data_time: 0.0548  last_data_time: 0.0431   lr: 0.0001  max_mem: 19768M
[10/06 10:04:35] d2.utils.events INFO:  eta: 0:02:10  iter: 839  total_loss: 22.31  m2_loss_ce: 0.4271  m2_loss_mask: 0.1966  m2_loss_dice: 1.252  m2_loss_ce_0: 0.6306  m2_loss_mask_0: 0.2232  m2_loss_dice_0: 1.366  m2_loss_ce_1: 0.5948  m2_loss_mask_1: 0.2149  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.5501  m2_loss_mask_2: 0.1904  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.585  m2_loss_mask_3: 0.1961  m2_loss_dice_3: 1.187  m2_loss_ce_4: 0.5268  m2_loss_mask_4: 0.1975  m2_loss_dice_4: 1.213  m2_loss_ce_5: 0.4156  m2_loss_mask_5: 0.1976  m2_loss_dice_5: 1.257  m2_loss_ce_6: 0.4272  m2_loss_mask_6: 0.1958  m2_loss_dice_6: 1.212  m2_loss_ce_7: 0.4085  m2_loss_mask_7: 0.1907  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4633  m2_loss_mask_8: 0.1945  m2_loss_dice_8: 1.196  m1_loss_ce: 0.5379  m1_loss_mask: 0.1917  m1_loss_dice: 1.393  m1_loss_ce_0: 0.6989  m1_loss_mask_0: 0.2201  m1_loss_dice_0: 1.593  m1_loss_ce_1: 0.7646  m1_loss_mask_1: 0.2071  m1_loss_dice_1: 1.59  m1_loss_ce_2: 0.7172  m1_loss_mask_2: 0.2056  m1_loss_dice_2: 1.498  m1_loss_ce_3: 0.6817  m1_loss_mask_3: 0.1967  m1_loss_dice_3: 1.454  m1_loss_ce_4: 0.636  m1_loss_mask_4: 0.1943  m1_loss_dice_4: 1.465  m1_loss_ce_5: 0.6023  m1_loss_mask_5: 0.1962  m1_loss_dice_5: 1.433  m1_loss_ce_6: 0.5749  m1_loss_mask_6: 0.1969  m1_loss_dice_6: 1.426  m1_loss_ce_7: 0.5713  m1_loss_mask_7: 0.1988  m1_loss_dice_7: 1.444  m1_loss_ce_8: 0.521  m1_loss_mask_8: 0.1954  m1_loss_dice_8: 1.428    time: 0.8124  last_time: 0.8609  data_time: 0.0504  last_data_time: 0.0461   lr: 0.0001  max_mem: 19768M
[10/06 10:04:51] d2.utils.events INFO:  eta: 0:01:54  iter: 859  total_loss: 21.89  m2_loss_ce: 0.4437  m2_loss_mask: 0.1783  m2_loss_dice: 1.203  m2_loss_ce_0: 0.5903  m2_loss_mask_0: 0.2033  m2_loss_dice_0: 1.389  m2_loss_ce_1: 0.6648  m2_loss_mask_1: 0.1866  m2_loss_dice_1: 1.268  m2_loss_ce_2: 0.5328  m2_loss_mask_2: 0.1756  m2_loss_dice_2: 1.218  m2_loss_ce_3: 0.5106  m2_loss_mask_3: 0.173  m2_loss_dice_3: 1.186  m2_loss_ce_4: 0.5047  m2_loss_mask_4: 0.1704  m2_loss_dice_4: 1.143  m2_loss_ce_5: 0.4636  m2_loss_mask_5: 0.1715  m2_loss_dice_5: 1.196  m2_loss_ce_6: 0.4718  m2_loss_mask_6: 0.1748  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.4577  m2_loss_mask_7: 0.1712  m2_loss_dice_7: 1.113  m2_loss_ce_8: 0.4431  m2_loss_mask_8: 0.1758  m2_loss_dice_8: 1.17  m1_loss_ce: 0.5778  m1_loss_mask: 0.1994  m1_loss_dice: 1.345  m1_loss_ce_0: 0.7221  m1_loss_mask_0: 0.2662  m1_loss_dice_0: 1.6  m1_loss_ce_1: 0.7895  m1_loss_mask_1: 0.2353  m1_loss_dice_1: 1.499  m1_loss_ce_2: 0.7291  m1_loss_mask_2: 0.2221  m1_loss_dice_2: 1.463  m1_loss_ce_3: 0.75  m1_loss_mask_3: 0.2178  m1_loss_dice_3: 1.402  m1_loss_ce_4: 0.6551  m1_loss_mask_4: 0.2146  m1_loss_dice_4: 1.422  m1_loss_ce_5: 0.6362  m1_loss_mask_5: 0.2068  m1_loss_dice_5: 1.388  m1_loss_ce_6: 0.6159  m1_loss_mask_6: 0.2205  m1_loss_dice_6: 1.383  m1_loss_ce_7: 0.5914  m1_loss_mask_7: 0.21  m1_loss_dice_7: 1.346  m1_loss_ce_8: 0.6157  m1_loss_mask_8: 0.2062  m1_loss_dice_8: 1.404    time: 0.8129  last_time: 0.8440  data_time: 0.0544  last_data_time: 0.0627   lr: 0.0001  max_mem: 19768M
[10/06 10:05:08] d2.utils.events INFO:  eta: 0:01:37  iter: 879  total_loss: 21.94  m2_loss_ce: 0.4243  m2_loss_mask: 0.1567  m2_loss_dice: 1.378  m2_loss_ce_0: 0.5268  m2_loss_mask_0: 0.1857  m2_loss_dice_0: 1.583  m2_loss_ce_1: 0.6283  m2_loss_mask_1: 0.1697  m2_loss_dice_1: 1.469  m2_loss_ce_2: 0.5357  m2_loss_mask_2: 0.1629  m2_loss_dice_2: 1.394  m2_loss_ce_3: 0.4794  m2_loss_mask_3: 0.1556  m2_loss_dice_3: 1.393  m2_loss_ce_4: 0.4448  m2_loss_mask_4: 0.1562  m2_loss_dice_4: 1.375  m2_loss_ce_5: 0.4792  m2_loss_mask_5: 0.1569  m2_loss_dice_5: 1.375  m2_loss_ce_6: 0.4087  m2_loss_mask_6: 0.1535  m2_loss_dice_6: 1.314  m2_loss_ce_7: 0.4343  m2_loss_mask_7: 0.1572  m2_loss_dice_7: 1.328  m2_loss_ce_8: 0.4208  m2_loss_mask_8: 0.1574  m2_loss_dice_8: 1.369  m1_loss_ce: 0.5366  m1_loss_mask: 0.2201  m1_loss_dice: 1.4  m1_loss_ce_0: 0.7296  m1_loss_mask_0: 0.2481  m1_loss_dice_0: 1.655  m1_loss_ce_1: 0.7327  m1_loss_mask_1: 0.2488  m1_loss_dice_1: 1.584  m1_loss_ce_2: 0.6938  m1_loss_mask_2: 0.2289  m1_loss_dice_2: 1.562  m1_loss_ce_3: 0.6727  m1_loss_mask_3: 0.2299  m1_loss_dice_3: 1.489  m1_loss_ce_4: 0.5741  m1_loss_mask_4: 0.2223  m1_loss_dice_4: 1.498  m1_loss_ce_5: 0.5839  m1_loss_mask_5: 0.2217  m1_loss_dice_5: 1.433  m1_loss_ce_6: 0.5635  m1_loss_mask_6: 0.2189  m1_loss_dice_6: 1.41  m1_loss_ce_7: 0.5631  m1_loss_mask_7: 0.2196  m1_loss_dice_7: 1.416  m1_loss_ce_8: 0.5418  m1_loss_mask_8: 0.2175  m1_loss_dice_8: 1.423    time: 0.8130  last_time: 0.8249  data_time: 0.0589  last_data_time: 0.0427   lr: 0.0001  max_mem: 19768M
[10/06 10:05:24] d2.utils.events INFO:  eta: 0:01:21  iter: 899  total_loss: 21.67  m2_loss_ce: 0.4902  m2_loss_mask: 0.1791  m2_loss_dice: 1.378  m2_loss_ce_0: 0.6659  m2_loss_mask_0: 0.1991  m2_loss_dice_0: 1.55  m2_loss_ce_1: 0.7192  m2_loss_mask_1: 0.1901  m2_loss_dice_1: 1.495  m2_loss_ce_2: 0.6165  m2_loss_mask_2: 0.1832  m2_loss_dice_2: 1.434  m2_loss_ce_3: 0.6083  m2_loss_mask_3: 0.184  m2_loss_dice_3: 1.393  m2_loss_ce_4: 0.5704  m2_loss_mask_4: 0.1799  m2_loss_dice_4: 1.375  m2_loss_ce_5: 0.5558  m2_loss_mask_5: 0.179  m2_loss_dice_5: 1.375  m2_loss_ce_6: 0.5054  m2_loss_mask_6: 0.1807  m2_loss_dice_6: 1.376  m2_loss_ce_7: 0.5443  m2_loss_mask_7: 0.178  m2_loss_dice_7: 1.32  m2_loss_ce_8: 0.5521  m2_loss_mask_8: 0.1808  m2_loss_dice_8: 1.35  m1_loss_ce: 0.5397  m1_loss_mask: 0.2098  m1_loss_dice: 1.317  m1_loss_ce_0: 0.6262  m1_loss_mask_0: 0.2367  m1_loss_dice_0: 1.499  m1_loss_ce_1: 0.7716  m1_loss_mask_1: 0.2266  m1_loss_dice_1: 1.437  m1_loss_ce_2: 0.6696  m1_loss_mask_2: 0.2213  m1_loss_dice_2: 1.396  m1_loss_ce_3: 0.6589  m1_loss_mask_3: 0.2206  m1_loss_dice_3: 1.346  m1_loss_ce_4: 0.6152  m1_loss_mask_4: 0.2175  m1_loss_dice_4: 1.354  m1_loss_ce_5: 0.6049  m1_loss_mask_5: 0.2123  m1_loss_dice_5: 1.331  m1_loss_ce_6: 0.5534  m1_loss_mask_6: 0.2103  m1_loss_dice_6: 1.336  m1_loss_ce_7: 0.5173  m1_loss_mask_7: 0.2117  m1_loss_dice_7: 1.323  m1_loss_ce_8: 0.5784  m1_loss_mask_8: 0.2108  m1_loss_dice_8: 1.3    time: 0.8129  last_time: 0.8216  data_time: 0.0500  last_data_time: 0.0458   lr: 0.0001  max_mem: 19768M
[10/06 10:05:40] d2.utils.events INFO:  eta: 0:01:05  iter: 919  total_loss: 22.4  m2_loss_ce: 0.5201  m2_loss_mask: 0.1762  m2_loss_dice: 1.427  m2_loss_ce_0: 0.6468  m2_loss_mask_0: 0.2005  m2_loss_dice_0: 1.72  m2_loss_ce_1: 0.677  m2_loss_mask_1: 0.1974  m2_loss_dice_1: 1.59  m2_loss_ce_2: 0.5979  m2_loss_mask_2: 0.1842  m2_loss_dice_2: 1.561  m2_loss_ce_3: 0.594  m2_loss_mask_3: 0.1827  m2_loss_dice_3: 1.449  m2_loss_ce_4: 0.5556  m2_loss_mask_4: 0.1811  m2_loss_dice_4: 1.416  m2_loss_ce_5: 0.5392  m2_loss_mask_5: 0.1791  m2_loss_dice_5: 1.416  m2_loss_ce_6: 0.5591  m2_loss_mask_6: 0.1754  m2_loss_dice_6: 1.422  m2_loss_ce_7: 0.5694  m2_loss_mask_7: 0.18  m2_loss_dice_7: 1.411  m2_loss_ce_8: 0.5031  m2_loss_mask_8: 0.183  m2_loss_dice_8: 1.423  m1_loss_ce: 0.5588  m1_loss_mask: 0.1957  m1_loss_dice: 1.311  m1_loss_ce_0: 0.7431  m1_loss_mask_0: 0.2182  m1_loss_dice_0: 1.466  m1_loss_ce_1: 0.8251  m1_loss_mask_1: 0.2197  m1_loss_dice_1: 1.488  m1_loss_ce_2: 0.7113  m1_loss_mask_2: 0.1977  m1_loss_dice_2: 1.448  m1_loss_ce_3: 0.6655  m1_loss_mask_3: 0.2002  m1_loss_dice_3: 1.395  m1_loss_ce_4: 0.6006  m1_loss_mask_4: 0.194  m1_loss_dice_4: 1.375  m1_loss_ce_5: 0.5868  m1_loss_mask_5: 0.1987  m1_loss_dice_5: 1.399  m1_loss_ce_6: 0.5617  m1_loss_mask_6: 0.1966  m1_loss_dice_6: 1.342  m1_loss_ce_7: 0.5679  m1_loss_mask_7: 0.1971  m1_loss_dice_7: 1.386  m1_loss_ce_8: 0.5667  m1_loss_mask_8: 0.1971  m1_loss_dice_8: 1.341    time: 0.8126  last_time: 0.7324  data_time: 0.0469  last_data_time: 0.0520   lr: 0.0001  max_mem: 19768M
[10/06 10:05:57] d2.utils.events INFO:  eta: 0:00:48  iter: 939  total_loss: 22.1  m2_loss_ce: 0.4942  m2_loss_mask: 0.1759  m2_loss_dice: 1.208  m2_loss_ce_0: 0.6307  m2_loss_mask_0: 0.2146  m2_loss_dice_0: 1.538  m2_loss_ce_1: 0.6566  m2_loss_mask_1: 0.1915  m2_loss_dice_1: 1.362  m2_loss_ce_2: 0.5942  m2_loss_mask_2: 0.182  m2_loss_dice_2: 1.292  m2_loss_ce_3: 0.5468  m2_loss_mask_3: 0.177  m2_loss_dice_3: 1.207  m2_loss_ce_4: 0.5387  m2_loss_mask_4: 0.179  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.5363  m2_loss_mask_5: 0.1767  m2_loss_dice_5: 1.215  m2_loss_ce_6: 0.5014  m2_loss_mask_6: 0.1797  m2_loss_dice_6: 1.199  m2_loss_ce_7: 0.5144  m2_loss_mask_7: 0.1806  m2_loss_dice_7: 1.186  m2_loss_ce_8: 0.5014  m2_loss_mask_8: 0.1795  m2_loss_dice_8: 1.172  m1_loss_ce: 0.62  m1_loss_mask: 0.195  m1_loss_dice: 1.343  m1_loss_ce_0: 0.7253  m1_loss_mask_0: 0.2266  m1_loss_dice_0: 1.568  m1_loss_ce_1: 0.8501  m1_loss_mask_1: 0.2093  m1_loss_dice_1: 1.534  m1_loss_ce_2: 0.7664  m1_loss_mask_2: 0.2059  m1_loss_dice_2: 1.507  m1_loss_ce_3: 0.7236  m1_loss_mask_3: 0.2058  m1_loss_dice_3: 1.402  m1_loss_ce_4: 0.6717  m1_loss_mask_4: 0.2007  m1_loss_dice_4: 1.402  m1_loss_ce_5: 0.6746  m1_loss_mask_5: 0.1962  m1_loss_dice_5: 1.421  m1_loss_ce_6: 0.6204  m1_loss_mask_6: 0.2011  m1_loss_dice_6: 1.387  m1_loss_ce_7: 0.6474  m1_loss_mask_7: 0.1964  m1_loss_dice_7: 1.408  m1_loss_ce_8: 0.6097  m1_loss_mask_8: 0.1914  m1_loss_dice_8: 1.371    time: 0.8126  last_time: 0.7792  data_time: 0.0504  last_data_time: 0.0406   lr: 0.0001  max_mem: 19768M
[10/06 10:06:13] d2.utils.events INFO:  eta: 0:00:32  iter: 959  total_loss: 22.49  m2_loss_ce: 0.3896  m2_loss_mask: 0.1846  m2_loss_dice: 1.103  m2_loss_ce_0: 0.5928  m2_loss_mask_0: 0.2068  m2_loss_dice_0: 1.336  m2_loss_ce_1: 0.597  m2_loss_mask_1: 0.2003  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.5502  m2_loss_mask_2: 0.1859  m2_loss_dice_2: 1.14  m2_loss_ce_3: 0.4619  m2_loss_mask_3: 0.1856  m2_loss_dice_3: 1.161  m2_loss_ce_4: 0.4864  m2_loss_mask_4: 0.1831  m2_loss_dice_4: 1.088  m2_loss_ce_5: 0.4347  m2_loss_mask_5: 0.1798  m2_loss_dice_5: 1.155  m2_loss_ce_6: 0.4429  m2_loss_mask_6: 0.1808  m2_loss_dice_6: 1.097  m2_loss_ce_7: 0.4323  m2_loss_mask_7: 0.1805  m2_loss_dice_7: 1.168  m2_loss_ce_8: 0.3907  m2_loss_mask_8: 0.1839  m2_loss_dice_8: 1.172  m1_loss_ce: 0.5739  m1_loss_mask: 0.1954  m1_loss_dice: 1.387  m1_loss_ce_0: 0.6365  m1_loss_mask_0: 0.2279  m1_loss_dice_0: 1.582  m1_loss_ce_1: 0.7179  m1_loss_mask_1: 0.209  m1_loss_dice_1: 1.513  m1_loss_ce_2: 0.6895  m1_loss_mask_2: 0.1992  m1_loss_dice_2: 1.498  m1_loss_ce_3: 0.6533  m1_loss_mask_3: 0.2077  m1_loss_dice_3: 1.446  m1_loss_ce_4: 0.6106  m1_loss_mask_4: 0.2064  m1_loss_dice_4: 1.46  m1_loss_ce_5: 0.5911  m1_loss_mask_5: 0.2007  m1_loss_dice_5: 1.396  m1_loss_ce_6: 0.5605  m1_loss_mask_6: 0.2051  m1_loss_dice_6: 1.419  m1_loss_ce_7: 0.5634  m1_loss_mask_7: 0.2055  m1_loss_dice_7: 1.393  m1_loss_ce_8: 0.5539  m1_loss_mask_8: 0.1982  m1_loss_dice_8: 1.375    time: 0.8127  last_time: 0.7689  data_time: 0.0532  last_data_time: 0.0388   lr: 0.0001  max_mem: 19768M
[10/06 10:06:29] d2.utils.events INFO:  eta: 0:00:16  iter: 979  total_loss: 22.43  m2_loss_ce: 0.4805  m2_loss_mask: 0.1821  m2_loss_dice: 1.232  m2_loss_ce_0: 0.5607  m2_loss_mask_0: 0.2157  m2_loss_dice_0: 1.414  m2_loss_ce_1: 0.6639  m2_loss_mask_1: 0.202  m2_loss_dice_1: 1.352  m2_loss_ce_2: 0.5576  m2_loss_mask_2: 0.1897  m2_loss_dice_2: 1.284  m2_loss_ce_3: 0.4921  m2_loss_mask_3: 0.1852  m2_loss_dice_3: 1.263  m2_loss_ce_4: 0.4943  m2_loss_mask_4: 0.1844  m2_loss_dice_4: 1.257  m2_loss_ce_5: 0.4959  m2_loss_mask_5: 0.1827  m2_loss_dice_5: 1.267  m2_loss_ce_6: 0.4445  m2_loss_mask_6: 0.1838  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4387  m2_loss_mask_7: 0.1853  m2_loss_dice_7: 1.25  m2_loss_ce_8: 0.4273  m2_loss_mask_8: 0.1827  m2_loss_dice_8: 1.237  m1_loss_ce: 0.5893  m1_loss_mask: 0.2062  m1_loss_dice: 1.396  m1_loss_ce_0: 0.6714  m1_loss_mask_0: 0.2239  m1_loss_dice_0: 1.557  m1_loss_ce_1: 0.7912  m1_loss_mask_1: 0.2111  m1_loss_dice_1: 1.493  m1_loss_ce_2: 0.6889  m1_loss_mask_2: 0.2052  m1_loss_dice_2: 1.477  m1_loss_ce_3: 0.7025  m1_loss_mask_3: 0.2027  m1_loss_dice_3: 1.389  m1_loss_ce_4: 0.649  m1_loss_mask_4: 0.1988  m1_loss_dice_4: 1.44  m1_loss_ce_5: 0.6396  m1_loss_mask_5: 0.2011  m1_loss_dice_5: 1.417  m1_loss_ce_6: 0.614  m1_loss_mask_6: 0.2047  m1_loss_dice_6: 1.404  m1_loss_ce_7: 0.6117  m1_loss_mask_7: 0.2006  m1_loss_dice_7: 1.337  m1_loss_ce_8: 0.6022  m1_loss_mask_8: 0.2026  m1_loss_dice_8: 1.35    time: 0.8125  last_time: 0.8503  data_time: 0.0461  last_data_time: 0.0411   lr: 0.0001  max_mem: 19768M
[10/06 10:06:46] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/r50_6_9_i_n_008_1000_2_1000_1000_L1_L2_alternating_2_1/model_final.pth
[10/06 10:06:48] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 23.22  m2_loss_ce: 0.4881  m2_loss_mask: 0.1832  m2_loss_dice: 1.199  m2_loss_ce_0: 0.6194  m2_loss_mask_0: 0.2097  m2_loss_dice_0: 1.347  m2_loss_ce_1: 0.725  m2_loss_mask_1: 0.1956  m2_loss_dice_1: 1.289  m2_loss_ce_2: 0.5983  m2_loss_mask_2: 0.1879  m2_loss_dice_2: 1.182  m2_loss_ce_3: 0.5345  m2_loss_mask_3: 0.1829  m2_loss_dice_3: 1.268  m2_loss_ce_4: 0.5363  m2_loss_mask_4: 0.1793  m2_loss_dice_4: 1.197  m2_loss_ce_5: 0.5244  m2_loss_mask_5: 0.1768  m2_loss_dice_5: 1.183  m2_loss_ce_6: 0.467  m2_loss_mask_6: 0.1827  m2_loss_dice_6: 1.16  m2_loss_ce_7: 0.4526  m2_loss_mask_7: 0.1813  m2_loss_dice_7: 1.226  m2_loss_ce_8: 0.4984  m2_loss_mask_8: 0.1813  m2_loss_dice_8: 1.152  m1_loss_ce: 0.6766  m1_loss_mask: 0.1887  m1_loss_dice: 1.507  m1_loss_ce_0: 0.7766  m1_loss_mask_0: 0.2113  m1_loss_dice_0: 1.714  m1_loss_ce_1: 0.8804  m1_loss_mask_1: 0.1921  m1_loss_dice_1: 1.63  m1_loss_ce_2: 0.8099  m1_loss_mask_2: 0.1858  m1_loss_dice_2: 1.566  m1_loss_ce_3: 0.7818  m1_loss_mask_3: 0.1894  m1_loss_dice_3: 1.54  m1_loss_ce_4: 0.7166  m1_loss_mask_4: 0.195  m1_loss_dice_4: 1.539  m1_loss_ce_5: 0.6651  m1_loss_mask_5: 0.1877  m1_loss_dice_5: 1.587  m1_loss_ce_6: 0.6775  m1_loss_mask_6: 0.191  m1_loss_dice_6: 1.528  m1_loss_ce_7: 0.6523  m1_loss_mask_7: 0.1869  m1_loss_dice_7: 1.502  m1_loss_ce_8: 0.6269  m1_loss_mask_8: 0.1856  m1_loss_dice_8: 1.523    time: 0.8125  last_time: 0.8246  data_time: 0.0519  last_data_time: 0.0754   lr: 0.0001  max_mem: 19768M
[10/06 10:06:48] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:13:30 (0.8125 s / it)
[10/06 10:06:48] d2.engine.hooks INFO: Total training time: 0:13:38 (0:00:07 on hooks)
[10/06 10:06:48] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/06 10:06:48] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/06 10:06:48] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/06 10:06:48] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/06 10:06:48] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/06 10:08:22] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval2w6n9m8b ...
[10/06 10:09:25] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 52.724 | 79.363 | 64.963 |      19       |
| Things | 41.397 | 78.175 | 52.623 |       8       |
| Stuff  | 60.962 | 80.227 | 73.937 |      11       |
[10/06 10:09:25] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.055 | 97.357 | 99.690 |     Stuff     |
| class_8  | 67.675 | 81.156 | 83.388 |     Stuff     |
| class_11 | 86.748 | 88.645 | 97.859 |     Stuff     |
| class_12 | 37.435 | 76.701 | 48.806 |     Stuff     |
| class_13 | 31.297 | 74.561 | 41.975 |     Stuff     |
| class_17 | 42.658 | 63.921 | 66.735 |     Stuff     |
| class_19 | 39.011 | 67.329 | 57.941 |     Stuff     |
| class_20 | 61.522 | 75.265 | 81.741 |     Stuff     |
| class_21 | 88.427 | 89.806 | 98.465 |     Stuff     |
| class_22 | 32.070 | 76.085 | 42.151 |     Stuff     |
| class_23 | 86.681 | 91.670 | 94.558 |     Stuff     |
| class_24 | 45.965 | 75.898 | 60.561 |    Things     |
| class_25 | 39.376 | 71.954 | 54.724 |    Things     |
| class_26 | 59.820 | 81.805 | 73.124 |    Things     |
| class_27 | 44.307 | 84.627 | 52.356 |    Things     |
| class_28 | 54.464 | 90.032 | 60.494 |    Things     |
| class_31 | 23.604 | 79.665 | 29.630 |    Things     |
| class_32 | 32.052 | 73.263 | 43.750 |    Things     |
| class_33 | 31.588 | 68.160 | 46.344 |    Things     |
[10/06 10:09:25] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/06 10:09:25] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/06 10:09:25] d2.evaluation.testing INFO: copypaste: 52.7239,79.3631,64.9627,41.3970,78.1755,52.6228,60.9616,80.2268,73.9372,97.0548,97.3569,99.6898,67.6748,81.1562,83.3883,86.7476,88.6452,97.8593,37.4351,76.7012,48.8064,31.2971,74.5607,41.9753,42.6579,63.9214,66.7349,39.0107,67.3286,57.9407,61.5220,75.2646,81.7410,88.4267,89.8055,98.4647,32.0702,76.0849,42.1505,86.6811,91.6699,94.5578,45.9647,75.8981,60.5611,39.3760,71.9539,54.7239,59.8197,81.8054,73.1243,44.3072,84.6268,52.3560,54.4638,90.0320,60.4938,23.6044,79.6648,29.6296,32.0525,73.2628,43.7500,31.5878,68.1598,46.3438
