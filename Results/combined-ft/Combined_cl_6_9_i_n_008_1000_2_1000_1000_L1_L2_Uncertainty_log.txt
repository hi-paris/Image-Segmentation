[10/07 08:53:28] detectron2 INFO: Rank of current process: 0. World size: 2
[10/07 08:53:29] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/07 08:53:29] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/cl_Comb_2_L1_L2_Uncertainty_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[10/07 08:53:29] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/cl_Comb_2_L1_L2_Uncertainty_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_1000_19/model_final.pth
  WEIGHTS_One : /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_1000_2_1000_1000_L1_L2_Uncertainty
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/07 08:53:29] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: convnext_large_d_320
    CLIP_PRETRAINED_WEIGHTS: laion2b_s29b_b131k_ft_soup
    EMBED_DIM: 768
    ENSEMBLE_ON_VALID_MASK: false
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_1000_19/model_final.pth
  WEIGHTS_One: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_1000_2_1000_1000_L1_L2_Uncertainty
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/07 08:53:29] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_1000_2_1000_1000_L1_L2_Uncertainty/config.yaml
[10/07 08:53:29] d2.utils.env INFO: Using a generated random seed 32395013
[10/07 08:55:15] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): TimmModel(
        (trunk): ConvNeXt(
          (stem): Sequential(
            (0): Conv2d(3, 192, kernel_size=(4, 4), stride=(4, 4))
            (1): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
          )
          (stages): Sequential(
            (0): ConvNeXtStage(
              (downsample): Identity()
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): Identity()
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.003)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.006)
                )
              )
            )
            (1): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(192, 384, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.009)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.011)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.014)
                )
              )
            )
            (2): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((384,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(384, 768, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.017)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.020)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.023)
                )
                (3): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.026)
                )
                (4): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.029)
                )
                (5): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.031)
                )
                (6): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.034)
                )
                (7): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.037)
                )
                (8): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.040)
                )
                (9): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.043)
                )
                (10): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.046)
                )
                (11): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.049)
                )
                (12): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.051)
                )
                (13): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.054)
                )
                (14): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.057)
                )
                (15): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.060)
                )
                (16): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.063)
                )
                (17): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.066)
                )
                (18): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.069)
                )
                (19): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.071)
                )
                (20): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.074)
                )
                (21): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.077)
                )
                (22): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.080)
                )
                (23): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.083)
                )
                (24): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.086)
                )
                (25): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.089)
                )
                (26): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.091)
                )
              )
            )
            (3): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((768,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(768, 1536, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.094)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.097)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.100)
                )
              )
            )
          )
          (norm_pre): Identity()
          (head): NormMlpClassifierHead(
            (global_pool): SelectAdaptivePool2d(pool_type=avg, flatten=Identity())
            (norm): LayerNorm2d((1536,), eps=1e-06, elementwise_affine=True)
            (flatten): Flatten(start_dim=1, end_dim=-1)
            (pre_logits): Identity()
            (drop): Dropout(p=0.0, inplace=False)
            (fc): Identity()
          )
        )
        (head): Sequential(
          (mlp): Mlp(
            (fc1): Linear(in_features=1536, out_features=1536, bias=True)
            (act): GELU(approximate='none')
            (drop1): Dropout(p=0.0, inplace=False)
            (norm): Identity()
            (fc2): Linear(in_features=1536, out_features=768, bias=False)
            (drop2): Dropout(p=0, inplace=False)
          )
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-15): 16 x ResidualAttentionBlock(
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): GELU(approximate='none')
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 768)
      (ln_final): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=768, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 768)
)
[10/07 08:55:15] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/07 08:55:15] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/07 08:55:15] d2.data.build INFO: Using training sampler TrainingSampler
[10/07 08:55:16] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/07 08:55:16] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/07 08:55:16] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/07 08:55:16] d2.data.build INFO: Making batched data loader with batch_size=4
[10/07 08:55:16] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/07 08:55:25] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): TimmModel(
        (trunk): ConvNeXt(
          (stem): Sequential(
            (0): Conv2d(3, 192, kernel_size=(4, 4), stride=(4, 4))
            (1): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
          )
          (stages): Sequential(
            (0): ConvNeXtStage(
              (downsample): Identity()
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): Identity()
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.003)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.006)
                )
              )
            )
            (1): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(192, 384, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.009)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.011)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.014)
                )
              )
            )
            (2): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((384,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(384, 768, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.017)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.020)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.023)
                )
                (3): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.026)
                )
                (4): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.029)
                )
                (5): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.031)
                )
                (6): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.034)
                )
                (7): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.037)
                )
                (8): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.040)
                )
                (9): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.043)
                )
                (10): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.046)
                )
                (11): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.049)
                )
                (12): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.051)
                )
                (13): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.054)
                )
                (14): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.057)
                )
                (15): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.060)
                )
                (16): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.063)
                )
                (17): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.066)
                )
                (18): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.069)
                )
                (19): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.071)
                )
                (20): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.074)
                )
                (21): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.077)
                )
                (22): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.080)
                )
                (23): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.083)
                )
                (24): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.086)
                )
                (25): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.089)
                )
                (26): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.091)
                )
              )
            )
            (3): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((768,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(768, 1536, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.094)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.097)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.100)
                )
              )
            )
          )
          (norm_pre): Identity()
          (head): NormMlpClassifierHead(
            (global_pool): SelectAdaptivePool2d(pool_type=avg, flatten=Identity())
            (norm): LayerNorm2d((1536,), eps=1e-06, elementwise_affine=True)
            (flatten): Flatten(start_dim=1, end_dim=-1)
            (pre_logits): Identity()
            (drop): Dropout(p=0.0, inplace=False)
            (fc): Identity()
          )
        )
        (head): Sequential(
          (mlp): Mlp(
            (fc1): Linear(in_features=1536, out_features=1536, bias=True)
            (act): GELU(approximate='none')
            (drop1): Dropout(p=0.0, inplace=False)
            (norm): Identity()
            (fc2): Linear(in_features=1536, out_features=768, bias=False)
            (drop2): Dropout(p=0, inplace=False)
          )
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-15): 16 x ResidualAttentionBlock(
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): GELU(approximate='none')
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 768)
      (ln_final): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=768, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 768)
)
[10/07 08:55:25] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_1000_19/model_final.pth ...
[10/07 08:55:25] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_1000_19/model_final.pth ...
[10/07 08:55:48] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_1000_19/model_final.pth ...
[10/07 08:55:48] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/cl_008_1000_19/model_final.pth ...
[10/07 08:56:28] d2.utils.events INFO:  eta: 0:26:45  iter: 19  total_loss: 36.12  m1_loss_ce: 0.4276  m1_loss_mask: 0.1704  m1_loss_dice: 1.1  m1_loss_ce_0: 0.4885  m1_loss_mask_0: 0.1921  m1_loss_dice_0: 1.336  m1_loss_ce_1: 0.578  m1_loss_mask_1: 0.1831  m1_loss_dice_1: 1.246  m1_loss_ce_2: 0.5236  m1_loss_mask_2: 0.1775  m1_loss_dice_2: 1.18  m1_loss_ce_3: 0.4934  m1_loss_mask_3: 0.176  m1_loss_dice_3: 1.164  m1_loss_ce_4: 0.4648  m1_loss_mask_4: 0.1721  m1_loss_dice_4: 1.13  m1_loss_ce_5: 0.4521  m1_loss_mask_5: 0.1737  m1_loss_dice_5: 1.142  m1_loss_ce_6: 0.4527  m1_loss_mask_6: 0.1672  m1_loss_dice_6: 1.11  m1_loss_ce_7: 0.4353  m1_loss_mask_7: 0.1703  m1_loss_dice_7: 1.125  m1_loss_ce_8: 0.457  m1_loss_mask_8: 0.1709  m1_loss_dice_8: 1.135  m2_loss_ce: 0.4491  m2_loss_mask: 0.1653  m2_loss_dice: 1.12  m2_loss_ce_0: 0.5384  m2_loss_mask_0: 0.1906  m2_loss_dice_0: 1.298  m2_loss_ce_1: 0.5942  m2_loss_mask_1: 0.1795  m2_loss_dice_1: 1.214  m2_loss_ce_2: 0.5841  m2_loss_mask_2: 0.1742  m2_loss_dice_2: 1.185  m2_loss_ce_3: 0.491  m2_loss_mask_3: 0.1662  m2_loss_dice_3: 1.135  m2_loss_ce_4: 0.4897  m2_loss_mask_4: 0.163  m2_loss_dice_4: 1.161  m2_loss_ce_5: 0.4497  m2_loss_mask_5: 0.1629  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.4573  m2_loss_mask_6: 0.1614  m2_loss_dice_6: 1.116  m2_loss_ce_7: 0.4781  m2_loss_mask_7: 0.1659  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.4592  m2_loss_mask_8: 0.1634  m2_loss_dice_8: 1.122    time: 1.6508  last_time: 1.6823  data_time: 0.2638  last_data_time: 0.0422   lr: 0.0001  max_mem: 35503M
[10/07 08:57:01] d2.utils.events INFO:  eta: 0:26:12  iter: 39  total_loss: 34.92  m1_loss_ce: 0.4443  m1_loss_mask: 0.1435  m1_loss_dice: 1.058  m1_loss_ce_0: 0.5466  m1_loss_mask_0: 0.1738  m1_loss_dice_0: 1.287  m1_loss_ce_1: 0.6013  m1_loss_mask_1: 0.1625  m1_loss_dice_1: 1.192  m1_loss_ce_2: 0.5106  m1_loss_mask_2: 0.1565  m1_loss_dice_2: 1.16  m1_loss_ce_3: 0.4618  m1_loss_mask_3: 0.1565  m1_loss_dice_3: 1.117  m1_loss_ce_4: 0.4519  m1_loss_mask_4: 0.1505  m1_loss_dice_4: 1.121  m1_loss_ce_5: 0.4477  m1_loss_mask_5: 0.1437  m1_loss_dice_5: 1.077  m1_loss_ce_6: 0.4185  m1_loss_mask_6: 0.1423  m1_loss_dice_6: 1.082  m1_loss_ce_7: 0.4277  m1_loss_mask_7: 0.145  m1_loss_dice_7: 1.074  m1_loss_ce_8: 0.4332  m1_loss_mask_8: 0.1435  m1_loss_dice_8: 1.064  m2_loss_ce: 0.4363  m2_loss_mask: 0.1472  m2_loss_dice: 1.079  m2_loss_ce_0: 0.5499  m2_loss_mask_0: 0.1776  m2_loss_dice_0: 1.298  m2_loss_ce_1: 0.6012  m2_loss_mask_1: 0.1646  m2_loss_dice_1: 1.207  m2_loss_ce_2: 0.5364  m2_loss_mask_2: 0.1587  m2_loss_dice_2: 1.153  m2_loss_ce_3: 0.4736  m2_loss_mask_3: 0.1518  m2_loss_dice_3: 1.142  m2_loss_ce_4: 0.4636  m2_loss_mask_4: 0.1511  m2_loss_dice_4: 1.129  m2_loss_ce_5: 0.4317  m2_loss_mask_5: 0.1516  m2_loss_dice_5: 1.11  m2_loss_ce_6: 0.4293  m2_loss_mask_6: 0.1459  m2_loss_dice_6: 1.117  m2_loss_ce_7: 0.4266  m2_loss_mask_7: 0.1486  m2_loss_dice_7: 1.069  m2_loss_ce_8: 0.4542  m2_loss_mask_8: 0.1484  m2_loss_dice_8: 1.105    time: 1.6375  last_time: 1.6452  data_time: 0.0484  last_data_time: 0.0386   lr: 0.0001  max_mem: 35503M
[10/07 08:57:34] d2.utils.events INFO:  eta: 0:25:39  iter: 59  total_loss: 36.88  m1_loss_ce: 0.4254  m1_loss_mask: 0.1543  m1_loss_dice: 1.173  m1_loss_ce_0: 0.5247  m1_loss_mask_0: 0.1712  m1_loss_dice_0: 1.327  m1_loss_ce_1: 0.6089  m1_loss_mask_1: 0.1599  m1_loss_dice_1: 1.29  m1_loss_ce_2: 0.517  m1_loss_mask_2: 0.1607  m1_loss_dice_2: 1.256  m1_loss_ce_3: 0.4785  m1_loss_mask_3: 0.1521  m1_loss_dice_3: 1.154  m1_loss_ce_4: 0.4315  m1_loss_mask_4: 0.1545  m1_loss_dice_4: 1.164  m1_loss_ce_5: 0.4442  m1_loss_mask_5: 0.1546  m1_loss_dice_5: 1.182  m1_loss_ce_6: 0.4288  m1_loss_mask_6: 0.155  m1_loss_dice_6: 1.166  m1_loss_ce_7: 0.3934  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.156  m1_loss_ce_8: 0.4144  m1_loss_mask_8: 0.1547  m1_loss_dice_8: 1.155  m2_loss_ce: 0.4535  m2_loss_mask: 0.1502  m2_loss_dice: 1.139  m2_loss_ce_0: 0.5425  m2_loss_mask_0: 0.1786  m2_loss_dice_0: 1.401  m2_loss_ce_1: 0.6174  m2_loss_mask_1: 0.1598  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.5269  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.233  m2_loss_ce_3: 0.4723  m2_loss_mask_3: 0.1638  m2_loss_dice_3: 1.202  m2_loss_ce_4: 0.4694  m2_loss_mask_4: 0.1545  m2_loss_dice_4: 1.214  m2_loss_ce_5: 0.467  m2_loss_mask_5: 0.1524  m2_loss_dice_5: 1.181  m2_loss_ce_6: 0.452  m2_loss_mask_6: 0.1506  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.458  m2_loss_mask_7: 0.1509  m2_loss_dice_7: 1.142  m2_loss_ce_8: 0.4646  m2_loss_mask_8: 0.1525  m2_loss_dice_8: 1.156    time: 1.6385  last_time: 1.7289  data_time: 0.0554  last_data_time: 0.1310   lr: 0.0001  max_mem: 35503M
[10/07 08:58:07] d2.utils.events INFO:  eta: 0:25:07  iter: 79  total_loss: 37.68  m1_loss_ce: 0.4299  m1_loss_mask: 0.1605  m1_loss_dice: 1.189  m1_loss_ce_0: 0.5571  m1_loss_mask_0: 0.183  m1_loss_dice_0: 1.391  m1_loss_ce_1: 0.6219  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.282  m1_loss_ce_2: 0.5221  m1_loss_mask_2: 0.161  m1_loss_dice_2: 1.316  m1_loss_ce_3: 0.4542  m1_loss_mask_3: 0.1617  m1_loss_dice_3: 1.2  m1_loss_ce_4: 0.4446  m1_loss_mask_4: 0.1613  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4351  m1_loss_mask_5: 0.1618  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4153  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.4348  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.167  m1_loss_ce_8: 0.4192  m1_loss_mask_8: 0.1644  m1_loss_dice_8: 1.152  m2_loss_ce: 0.4567  m2_loss_mask: 0.1586  m2_loss_dice: 1.19  m2_loss_ce_0: 0.5535  m2_loss_mask_0: 0.1882  m2_loss_dice_0: 1.403  m2_loss_ce_1: 0.6178  m2_loss_mask_1: 0.1783  m2_loss_dice_1: 1.318  m2_loss_ce_2: 0.559  m2_loss_mask_2: 0.1659  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5131  m2_loss_mask_3: 0.1654  m2_loss_dice_3: 1.215  m2_loss_ce_4: 0.4776  m2_loss_mask_4: 0.1619  m2_loss_dice_4: 1.182  m2_loss_ce_5: 0.4539  m2_loss_mask_5: 0.1588  m2_loss_dice_5: 1.17  m2_loss_ce_6: 0.4565  m2_loss_mask_6: 0.1594  m2_loss_dice_6: 1.243  m2_loss_ce_7: 0.4472  m2_loss_mask_7: 0.1578  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4854  m2_loss_mask_8: 0.1603  m2_loss_dice_8: 1.211    time: 1.6410  last_time: 1.7310  data_time: 0.0516  last_data_time: 0.0613   lr: 0.0001  max_mem: 35503M
[10/07 08:58:40] d2.utils.events INFO:  eta: 0:24:36  iter: 99  total_loss: 37.37  m1_loss_ce: 0.4235  m1_loss_mask: 0.151  m1_loss_dice: 1.123  m1_loss_ce_0: 0.5377  m1_loss_mask_0: 0.1809  m1_loss_dice_0: 1.353  m1_loss_ce_1: 0.6179  m1_loss_mask_1: 0.1711  m1_loss_dice_1: 1.254  m1_loss_ce_2: 0.544  m1_loss_mask_2: 0.1624  m1_loss_dice_2: 1.26  m1_loss_ce_3: 0.4703  m1_loss_mask_3: 0.1587  m1_loss_dice_3: 1.174  m1_loss_ce_4: 0.4341  m1_loss_mask_4: 0.156  m1_loss_dice_4: 1.188  m1_loss_ce_5: 0.4427  m1_loss_mask_5: 0.1541  m1_loss_dice_5: 1.18  m1_loss_ce_6: 0.4247  m1_loss_mask_6: 0.1536  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4366  m1_loss_mask_7: 0.1545  m1_loss_dice_7: 1.143  m1_loss_ce_8: 0.4264  m1_loss_mask_8: 0.154  m1_loss_dice_8: 1.181  m2_loss_ce: 0.4535  m2_loss_mask: 0.1491  m2_loss_dice: 1.132  m2_loss_ce_0: 0.5296  m2_loss_mask_0: 0.1782  m2_loss_dice_0: 1.385  m2_loss_ce_1: 0.6037  m2_loss_mask_1: 0.1731  m2_loss_dice_1: 1.315  m2_loss_ce_2: 0.5327  m2_loss_mask_2: 0.1566  m2_loss_dice_2: 1.249  m2_loss_ce_3: 0.4786  m2_loss_mask_3: 0.1566  m2_loss_dice_3: 1.218  m2_loss_ce_4: 0.4538  m2_loss_mask_4: 0.1528  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4717  m2_loss_mask_5: 0.1495  m2_loss_dice_5: 1.195  m2_loss_ce_6: 0.4269  m2_loss_mask_6: 0.1528  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.438  m2_loss_mask_7: 0.1485  m2_loss_dice_7: 1.165  m2_loss_ce_8: 0.4459  m2_loss_mask_8: 0.1475  m2_loss_dice_8: 1.194    time: 1.6441  last_time: 1.6478  data_time: 0.0540  last_data_time: 0.0660   lr: 0.0001  max_mem: 35503M
[10/07 08:59:14] d2.utils.events INFO:  eta: 0:24:05  iter: 119  total_loss: 38.08  m1_loss_ce: 0.4321  m1_loss_mask: 0.1552  m1_loss_dice: 1.154  m1_loss_ce_0: 0.5339  m1_loss_mask_0: 0.1725  m1_loss_dice_0: 1.385  m1_loss_ce_1: 0.6294  m1_loss_mask_1: 0.1571  m1_loss_dice_1: 1.257  m1_loss_ce_2: 0.5655  m1_loss_mask_2: 0.1545  m1_loss_dice_2: 1.196  m1_loss_ce_3: 0.4961  m1_loss_mask_3: 0.1556  m1_loss_dice_3: 1.203  m1_loss_ce_4: 0.4554  m1_loss_mask_4: 0.1551  m1_loss_dice_4: 1.167  m1_loss_ce_5: 0.4416  m1_loss_mask_5: 0.1561  m1_loss_dice_5: 1.164  m1_loss_ce_6: 0.4578  m1_loss_mask_6: 0.1542  m1_loss_dice_6: 1.136  m1_loss_ce_7: 0.4469  m1_loss_mask_7: 0.1538  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.4389  m1_loss_mask_8: 0.1519  m1_loss_dice_8: 1.154  m2_loss_ce: 0.4348  m2_loss_mask: 0.1462  m2_loss_dice: 1.144  m2_loss_ce_0: 0.564  m2_loss_mask_0: 0.1774  m2_loss_dice_0: 1.4  m2_loss_ce_1: 0.624  m2_loss_mask_1: 0.1607  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.548  m2_loss_mask_2: 0.1582  m2_loss_dice_2: 1.266  m2_loss_ce_3: 0.4958  m2_loss_mask_3: 0.151  m2_loss_dice_3: 1.231  m2_loss_ce_4: 0.4648  m2_loss_mask_4: 0.1495  m2_loss_dice_4: 1.175  m2_loss_ce_5: 0.4625  m2_loss_mask_5: 0.1498  m2_loss_dice_5: 1.188  m2_loss_ce_6: 0.4625  m2_loss_mask_6: 0.1489  m2_loss_dice_6: 1.148  m2_loss_ce_7: 0.4449  m2_loss_mask_7: 0.1488  m2_loss_dice_7: 1.145  m2_loss_ce_8: 0.4638  m2_loss_mask_8: 0.1463  m2_loss_dice_8: 1.137    time: 1.6485  last_time: 1.6241  data_time: 0.0541  last_data_time: 0.0483   lr: 0.0001  max_mem: 36791M
[10/07 08:59:47] d2.utils.events INFO:  eta: 0:23:35  iter: 139  total_loss: 36.5  m1_loss_ce: 0.4296  m1_loss_mask: 0.1567  m1_loss_dice: 1.16  m1_loss_ce_0: 0.564  m1_loss_mask_0: 0.1786  m1_loss_dice_0: 1.312  m1_loss_ce_1: 0.6122  m1_loss_mask_1: 0.1686  m1_loss_dice_1: 1.269  m1_loss_ce_2: 0.5351  m1_loss_mask_2: 0.1592  m1_loss_dice_2: 1.207  m1_loss_ce_3: 0.4991  m1_loss_mask_3: 0.1549  m1_loss_dice_3: 1.157  m1_loss_ce_4: 0.4514  m1_loss_mask_4: 0.1564  m1_loss_dice_4: 1.156  m1_loss_ce_5: 0.4625  m1_loss_mask_5: 0.1559  m1_loss_dice_5: 1.16  m1_loss_ce_6: 0.4485  m1_loss_mask_6: 0.1571  m1_loss_dice_6: 1.145  m1_loss_ce_7: 0.418  m1_loss_mask_7: 0.1581  m1_loss_dice_7: 1.136  m1_loss_ce_8: 0.4582  m1_loss_mask_8: 0.1566  m1_loss_dice_8: 1.112  m2_loss_ce: 0.4861  m2_loss_mask: 0.154  m2_loss_dice: 1.129  m2_loss_ce_0: 0.5689  m2_loss_mask_0: 0.1795  m2_loss_dice_0: 1.342  m2_loss_ce_1: 0.6553  m2_loss_mask_1: 0.1694  m2_loss_dice_1: 1.282  m2_loss_ce_2: 0.5958  m2_loss_mask_2: 0.1592  m2_loss_dice_2: 1.228  m2_loss_ce_3: 0.5118  m2_loss_mask_3: 0.1617  m2_loss_dice_3: 1.162  m2_loss_ce_4: 0.4969  m2_loss_mask_4: 0.1555  m2_loss_dice_4: 1.192  m2_loss_ce_5: 0.4822  m2_loss_mask_5: 0.1582  m2_loss_dice_5: 1.169  m2_loss_ce_6: 0.4555  m2_loss_mask_6: 0.1548  m2_loss_dice_6: 1.121  m2_loss_ce_7: 0.4707  m2_loss_mask_7: 0.1564  m2_loss_dice_7: 1.165  m2_loss_ce_8: 0.465  m2_loss_mask_8: 0.1548  m2_loss_dice_8: 1.135    time: 1.6514  last_time: 1.6314  data_time: 0.0521  last_data_time: 0.0467   lr: 0.0001  max_mem: 36791M
[10/07 09:00:21] d2.utils.events INFO:  eta: 0:23:04  iter: 159  total_loss: 35.76  m1_loss_ce: 0.4445  m1_loss_mask: 0.1619  m1_loss_dice: 1.113  m1_loss_ce_0: 0.5218  m1_loss_mask_0: 0.1871  m1_loss_dice_0: 1.278  m1_loss_ce_1: 0.5561  m1_loss_mask_1: 0.1742  m1_loss_dice_1: 1.195  m1_loss_ce_2: 0.4936  m1_loss_mask_2: 0.1703  m1_loss_dice_2: 1.163  m1_loss_ce_3: 0.4352  m1_loss_mask_3: 0.1667  m1_loss_dice_3: 1.093  m1_loss_ce_4: 0.4132  m1_loss_mask_4: 0.1657  m1_loss_dice_4: 1.126  m1_loss_ce_5: 0.4023  m1_loss_mask_5: 0.1678  m1_loss_dice_5: 1.142  m1_loss_ce_6: 0.3882  m1_loss_mask_6: 0.166  m1_loss_dice_6: 1.087  m1_loss_ce_7: 0.4235  m1_loss_mask_7: 0.163  m1_loss_dice_7: 1.137  m1_loss_ce_8: 0.3874  m1_loss_mask_8: 0.165  m1_loss_dice_8: 1.112  m2_loss_ce: 0.3883  m2_loss_mask: 0.1583  m2_loss_dice: 1.145  m2_loss_ce_0: 0.5545  m2_loss_mask_0: 0.1866  m2_loss_dice_0: 1.348  m2_loss_ce_1: 0.6164  m2_loss_mask_1: 0.1705  m2_loss_dice_1: 1.243  m2_loss_ce_2: 0.5449  m2_loss_mask_2: 0.1643  m2_loss_dice_2: 1.21  m2_loss_ce_3: 0.4623  m2_loss_mask_3: 0.1622  m2_loss_dice_3: 1.165  m2_loss_ce_4: 0.4233  m2_loss_mask_4: 0.1573  m2_loss_dice_4: 1.154  m2_loss_ce_5: 0.4553  m2_loss_mask_5: 0.16  m2_loss_dice_5: 1.151  m2_loss_ce_6: 0.4252  m2_loss_mask_6: 0.1603  m2_loss_dice_6: 1.139  m2_loss_ce_7: 0.4025  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.107  m2_loss_ce_8: 0.4367  m2_loss_mask_8: 0.1589  m2_loss_dice_8: 1.109    time: 1.6523  last_time: 1.6803  data_time: 0.0499  last_data_time: 0.0409   lr: 0.0001  max_mem: 36791M
[10/07 09:00:54] d2.utils.events INFO:  eta: 0:22:31  iter: 179  total_loss: 36.27  m1_loss_ce: 0.4178  m1_loss_mask: 0.1517  m1_loss_dice: 1.098  m1_loss_ce_0: 0.5157  m1_loss_mask_0: 0.1738  m1_loss_dice_0: 1.304  m1_loss_ce_1: 0.5804  m1_loss_mask_1: 0.1598  m1_loss_dice_1: 1.203  m1_loss_ce_2: 0.4903  m1_loss_mask_2: 0.16  m1_loss_dice_2: 1.143  m1_loss_ce_3: 0.4366  m1_loss_mask_3: 0.1595  m1_loss_dice_3: 1.117  m1_loss_ce_4: 0.4091  m1_loss_mask_4: 0.1577  m1_loss_dice_4: 1.081  m1_loss_ce_5: 0.4015  m1_loss_mask_5: 0.1538  m1_loss_dice_5: 1.118  m1_loss_ce_6: 0.4083  m1_loss_mask_6: 0.1525  m1_loss_dice_6: 1.066  m1_loss_ce_7: 0.4083  m1_loss_mask_7: 0.1524  m1_loss_dice_7: 1.085  m1_loss_ce_8: 0.3717  m1_loss_mask_8: 0.1539  m1_loss_dice_8: 1.088  m2_loss_ce: 0.4378  m2_loss_mask: 0.1546  m2_loss_dice: 1.112  m2_loss_ce_0: 0.5541  m2_loss_mask_0: 0.1858  m2_loss_dice_0: 1.337  m2_loss_ce_1: 0.5824  m2_loss_mask_1: 0.1701  m2_loss_dice_1: 1.253  m2_loss_ce_2: 0.5324  m2_loss_mask_2: 0.16  m2_loss_dice_2: 1.184  m2_loss_ce_3: 0.4654  m2_loss_mask_3: 0.1606  m2_loss_dice_3: 1.106  m2_loss_ce_4: 0.4563  m2_loss_mask_4: 0.1549  m2_loss_dice_4: 1.134  m2_loss_ce_5: 0.445  m2_loss_mask_5: 0.1549  m2_loss_dice_5: 1.125  m2_loss_ce_6: 0.462  m2_loss_mask_6: 0.1511  m2_loss_dice_6: 1.124  m2_loss_ce_7: 0.4343  m2_loss_mask_7: 0.149  m2_loss_dice_7: 1.115  m2_loss_ce_8: 0.4557  m2_loss_mask_8: 0.1547  m2_loss_dice_8: 1.12    time: 1.6547  last_time: 1.7076  data_time: 0.0575  last_data_time: 0.0411   lr: 0.0001  max_mem: 36791M
[10/07 09:01:28] d2.utils.events INFO:  eta: 0:22:00  iter: 199  total_loss: 35.47  m1_loss_ce: 0.4741  m1_loss_mask: 0.1482  m1_loss_dice: 1.079  m1_loss_ce_0: 0.4886  m1_loss_mask_0: 0.1713  m1_loss_dice_0: 1.324  m1_loss_ce_1: 0.5713  m1_loss_mask_1: 0.1633  m1_loss_dice_1: 1.251  m1_loss_ce_2: 0.501  m1_loss_mask_2: 0.1565  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.4489  m1_loss_mask_3: 0.1529  m1_loss_dice_3: 1.13  m1_loss_ce_4: 0.4415  m1_loss_mask_4: 0.1491  m1_loss_dice_4: 1.147  m1_loss_ce_5: 0.4313  m1_loss_mask_5: 0.1491  m1_loss_dice_5: 1.124  m1_loss_ce_6: 0.4046  m1_loss_mask_6: 0.1497  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.4047  m1_loss_mask_7: 0.1485  m1_loss_dice_7: 1.089  m1_loss_ce_8: 0.4194  m1_loss_mask_8: 0.149  m1_loss_dice_8: 1.107  m2_loss_ce: 0.4325  m2_loss_mask: 0.1469  m2_loss_dice: 1.132  m2_loss_ce_0: 0.4973  m2_loss_mask_0: 0.1765  m2_loss_dice_0: 1.348  m2_loss_ce_1: 0.5958  m2_loss_mask_1: 0.1627  m2_loss_dice_1: 1.2  m2_loss_ce_2: 0.5438  m2_loss_mask_2: 0.1577  m2_loss_dice_2: 1.199  m2_loss_ce_3: 0.4888  m2_loss_mask_3: 0.158  m2_loss_dice_3: 1.135  m2_loss_ce_4: 0.4484  m2_loss_mask_4: 0.1518  m2_loss_dice_4: 1.148  m2_loss_ce_5: 0.4346  m2_loss_mask_5: 0.1481  m2_loss_dice_5: 1.127  m2_loss_ce_6: 0.4312  m2_loss_mask_6: 0.1473  m2_loss_dice_6: 1.159  m2_loss_ce_7: 0.4266  m2_loss_mask_7: 0.1515  m2_loss_dice_7: 1.132  m2_loss_ce_8: 0.458  m2_loss_mask_8: 0.1502  m2_loss_dice_8: 1.129    time: 1.6583  last_time: 1.6572  data_time: 0.0555  last_data_time: 0.0486   lr: 0.0001  max_mem: 36791M
[10/07 09:02:02] d2.utils.events INFO:  eta: 0:21:27  iter: 219  total_loss: 36.72  m1_loss_ce: 0.4589  m1_loss_mask: 0.1521  m1_loss_dice: 1.149  m1_loss_ce_0: 0.5202  m1_loss_mask_0: 0.1724  m1_loss_dice_0: 1.373  m1_loss_ce_1: 0.5879  m1_loss_mask_1: 0.1585  m1_loss_dice_1: 1.283  m1_loss_ce_2: 0.526  m1_loss_mask_2: 0.1514  m1_loss_dice_2: 1.237  m1_loss_ce_3: 0.441  m1_loss_mask_3: 0.153  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.4403  m1_loss_mask_4: 0.1522  m1_loss_dice_4: 1.199  m1_loss_ce_5: 0.429  m1_loss_mask_5: 0.1495  m1_loss_dice_5: 1.157  m1_loss_ce_6: 0.4443  m1_loss_mask_6: 0.1533  m1_loss_dice_6: 1.164  m1_loss_ce_7: 0.4556  m1_loss_mask_7: 0.1526  m1_loss_dice_7: 1.196  m1_loss_ce_8: 0.4294  m1_loss_mask_8: 0.1525  m1_loss_dice_8: 1.17  m2_loss_ce: 0.4516  m2_loss_mask: 0.1433  m2_loss_dice: 1.204  m2_loss_ce_0: 0.5283  m2_loss_mask_0: 0.1687  m2_loss_dice_0: 1.392  m2_loss_ce_1: 0.5995  m2_loss_mask_1: 0.1538  m2_loss_dice_1: 1.332  m2_loss_ce_2: 0.5418  m2_loss_mask_2: 0.1507  m2_loss_dice_2: 1.258  m2_loss_ce_3: 0.4576  m2_loss_mask_3: 0.149  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.4385  m2_loss_mask_4: 0.1456  m2_loss_dice_4: 1.207  m2_loss_ce_5: 0.4362  m2_loss_mask_5: 0.1458  m2_loss_dice_5: 1.217  m2_loss_ce_6: 0.4278  m2_loss_mask_6: 0.1437  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.4168  m2_loss_mask_7: 0.1451  m2_loss_dice_7: 1.196  m2_loss_ce_8: 0.4407  m2_loss_mask_8: 0.142  m2_loss_dice_8: 1.172    time: 1.6603  last_time: 1.6488  data_time: 0.0515  last_data_time: 0.0434   lr: 0.0001  max_mem: 36791M
[10/07 09:02:35] d2.utils.events INFO:  eta: 0:20:54  iter: 239  total_loss: 37.39  m1_loss_ce: 0.4528  m1_loss_mask: 0.1628  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5694  m1_loss_mask_0: 0.1777  m1_loss_dice_0: 1.424  m1_loss_ce_1: 0.6105  m1_loss_mask_1: 0.1653  m1_loss_dice_1: 1.311  m1_loss_ce_2: 0.5511  m1_loss_mask_2: 0.1618  m1_loss_dice_2: 1.232  m1_loss_ce_3: 0.5053  m1_loss_mask_3: 0.1573  m1_loss_dice_3: 1.224  m1_loss_ce_4: 0.4805  m1_loss_mask_4: 0.1553  m1_loss_dice_4: 1.193  m1_loss_ce_5: 0.4853  m1_loss_mask_5: 0.1583  m1_loss_dice_5: 1.189  m1_loss_ce_6: 0.4721  m1_loss_mask_6: 0.1643  m1_loss_dice_6: 1.175  m1_loss_ce_7: 0.4754  m1_loss_mask_7: 0.1626  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4489  m1_loss_mask_8: 0.1609  m1_loss_dice_8: 1.157  m2_loss_ce: 0.4808  m2_loss_mask: 0.149  m2_loss_dice: 1.2  m2_loss_ce_0: 0.5458  m2_loss_mask_0: 0.1804  m2_loss_dice_0: 1.449  m2_loss_ce_1: 0.6332  m2_loss_mask_1: 0.1587  m2_loss_dice_1: 1.356  m2_loss_ce_2: 0.5499  m2_loss_mask_2: 0.1584  m2_loss_dice_2: 1.271  m2_loss_ce_3: 0.5115  m2_loss_mask_3: 0.1568  m2_loss_dice_3: 1.2  m2_loss_ce_4: 0.5068  m2_loss_mask_4: 0.1524  m2_loss_dice_4: 1.233  m2_loss_ce_5: 0.4883  m2_loss_mask_5: 0.1504  m2_loss_dice_5: 1.193  m2_loss_ce_6: 0.4653  m2_loss_mask_6: 0.1487  m2_loss_dice_6: 1.205  m2_loss_ce_7: 0.5109  m2_loss_mask_7: 0.1501  m2_loss_dice_7: 1.193  m2_loss_ce_8: 0.5171  m2_loss_mask_8: 0.1481  m2_loss_dice_8: 1.186    time: 1.6614  last_time: 1.6228  data_time: 0.0520  last_data_time: 0.0504   lr: 0.0001  max_mem: 36791M
[10/07 09:03:09] d2.utils.events INFO:  eta: 0:20:22  iter: 259  total_loss: 37.33  m1_loss_ce: 0.43  m1_loss_mask: 0.1595  m1_loss_dice: 1.161  m1_loss_ce_0: 0.5594  m1_loss_mask_0: 0.1817  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.607  m1_loss_mask_1: 0.1626  m1_loss_dice_1: 1.304  m1_loss_ce_2: 0.5294  m1_loss_mask_2: 0.1582  m1_loss_dice_2: 1.236  m1_loss_ce_3: 0.5024  m1_loss_mask_3: 0.1589  m1_loss_dice_3: 1.216  m1_loss_ce_4: 0.443  m1_loss_mask_4: 0.1579  m1_loss_dice_4: 1.192  m1_loss_ce_5: 0.446  m1_loss_mask_5: 0.1568  m1_loss_dice_5: 1.162  m1_loss_ce_6: 0.4217  m1_loss_mask_6: 0.1584  m1_loss_dice_6: 1.183  m1_loss_ce_7: 0.4374  m1_loss_mask_7: 0.1579  m1_loss_dice_7: 1.154  m1_loss_ce_8: 0.4412  m1_loss_mask_8: 0.1572  m1_loss_dice_8: 1.169  m2_loss_ce: 0.4644  m2_loss_mask: 0.1496  m2_loss_dice: 1.14  m2_loss_ce_0: 0.5605  m2_loss_mask_0: 0.1829  m2_loss_dice_0: 1.376  m2_loss_ce_1: 0.6176  m2_loss_mask_1: 0.1654  m2_loss_dice_1: 1.301  m2_loss_ce_2: 0.5622  m2_loss_mask_2: 0.1552  m2_loss_dice_2: 1.237  m2_loss_ce_3: 0.4966  m2_loss_mask_3: 0.1561  m2_loss_dice_3: 1.212  m2_loss_ce_4: 0.4581  m2_loss_mask_4: 0.1539  m2_loss_dice_4: 1.203  m2_loss_ce_5: 0.4734  m2_loss_mask_5: 0.1544  m2_loss_dice_5: 1.211  m2_loss_ce_6: 0.4295  m2_loss_mask_6: 0.1518  m2_loss_dice_6: 1.171  m2_loss_ce_7: 0.428  m2_loss_mask_7: 0.1487  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.46  m2_loss_mask_8: 0.149  m2_loss_dice_8: 1.181    time: 1.6629  last_time: 1.6239  data_time: 0.0552  last_data_time: 0.0441   lr: 0.0001  max_mem: 36791M
[10/07 09:03:43] d2.utils.events INFO:  eta: 0:19:50  iter: 279  total_loss: 38.08  m1_loss_ce: 0.4627  m1_loss_mask: 0.1564  m1_loss_dice: 1.188  m1_loss_ce_0: 0.5288  m1_loss_mask_0: 0.1847  m1_loss_dice_0: 1.396  m1_loss_ce_1: 0.5905  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.287  m1_loss_ce_2: 0.5057  m1_loss_mask_2: 0.159  m1_loss_dice_2: 1.3  m1_loss_ce_3: 0.4735  m1_loss_mask_3: 0.1583  m1_loss_dice_3: 1.246  m1_loss_ce_4: 0.4023  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.225  m1_loss_ce_5: 0.4372  m1_loss_mask_5: 0.158  m1_loss_dice_5: 1.219  m1_loss_ce_6: 0.402  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.187  m1_loss_ce_7: 0.4291  m1_loss_mask_7: 0.1574  m1_loss_dice_7: 1.18  m1_loss_ce_8: 0.4073  m1_loss_mask_8: 0.161  m1_loss_dice_8: 1.2  m2_loss_ce: 0.425  m2_loss_mask: 0.1526  m2_loss_dice: 1.161  m2_loss_ce_0: 0.5693  m2_loss_mask_0: 0.1775  m2_loss_dice_0: 1.393  m2_loss_ce_1: 0.5753  m2_loss_mask_1: 0.1651  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.5277  m2_loss_mask_2: 0.1621  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.4517  m2_loss_mask_3: 0.1583  m2_loss_dice_3: 1.209  m2_loss_ce_4: 0.4513  m2_loss_mask_4: 0.1538  m2_loss_dice_4: 1.239  m2_loss_ce_5: 0.4411  m2_loss_mask_5: 0.1506  m2_loss_dice_5: 1.201  m2_loss_ce_6: 0.4314  m2_loss_mask_6: 0.1514  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4281  m2_loss_mask_7: 0.151  m2_loss_dice_7: 1.182  m2_loss_ce_8: 0.4164  m2_loss_mask_8: 0.1513  m2_loss_dice_8: 1.232    time: 1.6640  last_time: 1.6985  data_time: 0.0548  last_data_time: 0.0733   lr: 0.0001  max_mem: 36791M
[10/07 09:04:17] d2.utils.events INFO:  eta: 0:19:18  iter: 299  total_loss: 37.03  m1_loss_ce: 0.4436  m1_loss_mask: 0.1519  m1_loss_dice: 1.121  m1_loss_ce_0: 0.5119  m1_loss_mask_0: 0.1699  m1_loss_dice_0: 1.369  m1_loss_ce_1: 0.545  m1_loss_mask_1: 0.1601  m1_loss_dice_1: 1.296  m1_loss_ce_2: 0.5028  m1_loss_mask_2: 0.1569  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.4171  m1_loss_mask_3: 0.1499  m1_loss_dice_3: 1.194  m1_loss_ce_4: 0.4005  m1_loss_mask_4: 0.1531  m1_loss_dice_4: 1.155  m1_loss_ce_5: 0.3988  m1_loss_mask_5: 0.1531  m1_loss_dice_5: 1.154  m1_loss_ce_6: 0.3997  m1_loss_mask_6: 0.1535  m1_loss_dice_6: 1.157  m1_loss_ce_7: 0.3989  m1_loss_mask_7: 0.151  m1_loss_dice_7: 1.16  m1_loss_ce_8: 0.3819  m1_loss_mask_8: 0.1541  m1_loss_dice_8: 1.155  m2_loss_ce: 0.3957  m2_loss_mask: 0.1427  m2_loss_dice: 1.124  m2_loss_ce_0: 0.5597  m2_loss_mask_0: 0.178  m2_loss_dice_0: 1.38  m2_loss_ce_1: 0.5769  m2_loss_mask_1: 0.1589  m2_loss_dice_1: 1.285  m2_loss_ce_2: 0.5098  m2_loss_mask_2: 0.1589  m2_loss_dice_2: 1.247  m2_loss_ce_3: 0.4422  m2_loss_mask_3: 0.1511  m2_loss_dice_3: 1.192  m2_loss_ce_4: 0.4298  m2_loss_mask_4: 0.1507  m2_loss_dice_4: 1.166  m2_loss_ce_5: 0.4244  m2_loss_mask_5: 0.1462  m2_loss_dice_5: 1.184  m2_loss_ce_6: 0.4319  m2_loss_mask_6: 0.1432  m2_loss_dice_6: 1.136  m2_loss_ce_7: 0.4447  m2_loss_mask_7: 0.1424  m2_loss_dice_7: 1.131  m2_loss_ce_8: 0.4335  m2_loss_mask_8: 0.1429  m2_loss_dice_8: 1.145    time: 1.6659  last_time: 1.6633  data_time: 0.0566  last_data_time: 0.0562   lr: 0.0001  max_mem: 36791M
[10/07 09:04:50] d2.utils.events INFO:  eta: 0:18:46  iter: 319  total_loss: 35.54  m1_loss_ce: 0.4624  m1_loss_mask: 0.1657  m1_loss_dice: 1.089  m1_loss_ce_0: 0.5222  m1_loss_mask_0: 0.1907  m1_loss_dice_0: 1.307  m1_loss_ce_1: 0.5934  m1_loss_mask_1: 0.1801  m1_loss_dice_1: 1.236  m1_loss_ce_2: 0.5278  m1_loss_mask_2: 0.1731  m1_loss_dice_2: 1.188  m1_loss_ce_3: 0.453  m1_loss_mask_3: 0.1718  m1_loss_dice_3: 1.116  m1_loss_ce_4: 0.4795  m1_loss_mask_4: 0.1674  m1_loss_dice_4: 1.137  m1_loss_ce_5: 0.4464  m1_loss_mask_5: 0.1664  m1_loss_dice_5: 1.104  m1_loss_ce_6: 0.4215  m1_loss_mask_6: 0.1676  m1_loss_dice_6: 1.084  m1_loss_ce_7: 0.4401  m1_loss_mask_7: 0.1656  m1_loss_dice_7: 1.138  m1_loss_ce_8: 0.4111  m1_loss_mask_8: 0.1669  m1_loss_dice_8: 1.118  m2_loss_ce: 0.4239  m2_loss_mask: 0.1666  m2_loss_dice: 1.149  m2_loss_ce_0: 0.5611  m2_loss_mask_0: 0.1979  m2_loss_dice_0: 1.288  m2_loss_ce_1: 0.5806  m2_loss_mask_1: 0.1766  m2_loss_dice_1: 1.247  m2_loss_ce_2: 0.5211  m2_loss_mask_2: 0.1722  m2_loss_dice_2: 1.18  m2_loss_ce_3: 0.4747  m2_loss_mask_3: 0.1709  m2_loss_dice_3: 1.16  m2_loss_ce_4: 0.4671  m2_loss_mask_4: 0.1671  m2_loss_dice_4: 1.14  m2_loss_ce_5: 0.4433  m2_loss_mask_5: 0.1647  m2_loss_dice_5: 1.111  m2_loss_ce_6: 0.4182  m2_loss_mask_6: 0.1662  m2_loss_dice_6: 1.114  m2_loss_ce_7: 0.4357  m2_loss_mask_7: 0.165  m2_loss_dice_7: 1.134  m2_loss_ce_8: 0.4509  m2_loss_mask_8: 0.1631  m2_loss_dice_8: 1.115    time: 1.6654  last_time: 1.6278  data_time: 0.0484  last_data_time: 0.0402   lr: 0.0001  max_mem: 36791M
[10/07 09:05:24] d2.utils.events INFO:  eta: 0:18:13  iter: 339  total_loss: 38.53  m1_loss_ce: 0.4212  m1_loss_mask: 0.1654  m1_loss_dice: 1.184  m1_loss_ce_0: 0.5289  m1_loss_mask_0: 0.1858  m1_loss_dice_0: 1.37  m1_loss_ce_1: 0.5786  m1_loss_mask_1: 0.1839  m1_loss_dice_1: 1.337  m1_loss_ce_2: 0.5335  m1_loss_mask_2: 0.1709  m1_loss_dice_2: 1.287  m1_loss_ce_3: 0.4544  m1_loss_mask_3: 0.1682  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4388  m1_loss_mask_4: 0.1693  m1_loss_dice_4: 1.237  m1_loss_ce_5: 0.4417  m1_loss_mask_5: 0.1671  m1_loss_dice_5: 1.217  m1_loss_ce_6: 0.4179  m1_loss_mask_6: 0.1656  m1_loss_dice_6: 1.213  m1_loss_ce_7: 0.4099  m1_loss_mask_7: 0.1653  m1_loss_dice_7: 1.225  m1_loss_ce_8: 0.3904  m1_loss_mask_8: 0.1645  m1_loss_dice_8: 1.193  m2_loss_ce: 0.4403  m2_loss_mask: 0.161  m2_loss_dice: 1.225  m2_loss_ce_0: 0.5535  m2_loss_mask_0: 0.1968  m2_loss_dice_0: 1.438  m2_loss_ce_1: 0.6117  m2_loss_mask_1: 0.1806  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.5408  m2_loss_mask_2: 0.1686  m2_loss_dice_2: 1.288  m2_loss_ce_3: 0.4795  m2_loss_mask_3: 0.1646  m2_loss_dice_3: 1.229  m2_loss_ce_4: 0.4466  m2_loss_mask_4: 0.1602  m2_loss_dice_4: 1.252  m2_loss_ce_5: 0.4794  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.229  m2_loss_ce_6: 0.434  m2_loss_mask_6: 0.1608  m2_loss_dice_6: 1.235  m2_loss_ce_7: 0.4386  m2_loss_mask_7: 0.1605  m2_loss_dice_7: 1.219  m2_loss_ce_8: 0.4206  m2_loss_mask_8: 0.1614  m2_loss_dice_8: 1.217    time: 1.6666  last_time: 1.7017  data_time: 0.0542  last_data_time: 0.0663   lr: 0.0001  max_mem: 36791M
[10/07 09:05:58] d2.utils.events INFO:  eta: 0:17:40  iter: 359  total_loss: 38.05  m1_loss_ce: 0.5041  m1_loss_mask: 0.15  m1_loss_dice: 1.22  m1_loss_ce_0: 0.5665  m1_loss_mask_0: 0.1719  m1_loss_dice_0: 1.425  m1_loss_ce_1: 0.5736  m1_loss_mask_1: 0.1546  m1_loss_dice_1: 1.339  m1_loss_ce_2: 0.532  m1_loss_mask_2: 0.1502  m1_loss_dice_2: 1.323  m1_loss_ce_3: 0.4566  m1_loss_mask_3: 0.1515  m1_loss_dice_3: 1.244  m1_loss_ce_4: 0.4326  m1_loss_mask_4: 0.1513  m1_loss_dice_4: 1.217  m1_loss_ce_5: 0.4219  m1_loss_mask_5: 0.1533  m1_loss_dice_5: 1.247  m1_loss_ce_6: 0.4403  m1_loss_mask_6: 0.1519  m1_loss_dice_6: 1.218  m1_loss_ce_7: 0.3924  m1_loss_mask_7: 0.1493  m1_loss_dice_7: 1.222  m1_loss_ce_8: 0.4137  m1_loss_mask_8: 0.1496  m1_loss_dice_8: 1.22  m2_loss_ce: 0.4717  m2_loss_mask: 0.1518  m2_loss_dice: 1.187  m2_loss_ce_0: 0.5696  m2_loss_mask_0: 0.1786  m2_loss_dice_0: 1.397  m2_loss_ce_1: 0.6369  m2_loss_mask_1: 0.1624  m2_loss_dice_1: 1.367  m2_loss_ce_2: 0.5436  m2_loss_mask_2: 0.1566  m2_loss_dice_2: 1.287  m2_loss_ce_3: 0.5241  m2_loss_mask_3: 0.1626  m2_loss_dice_3: 1.281  m2_loss_ce_4: 0.4664  m2_loss_mask_4: 0.1572  m2_loss_dice_4: 1.254  m2_loss_ce_5: 0.4883  m2_loss_mask_5: 0.1514  m2_loss_dice_5: 1.254  m2_loss_ce_6: 0.4833  m2_loss_mask_6: 0.1504  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4912  m2_loss_mask_7: 0.1509  m2_loss_dice_7: 1.206  m2_loss_ce_8: 0.4651  m2_loss_mask_8: 0.1487  m2_loss_dice_8: 1.211    time: 1.6675  last_time: 1.6644  data_time: 0.0565  last_data_time: 0.0455   lr: 0.0001  max_mem: 36791M
[10/07 09:06:31] d2.utils.events INFO:  eta: 0:17:09  iter: 379  total_loss: 37.22  m1_loss_ce: 0.4543  m1_loss_mask: 0.149  m1_loss_dice: 1.133  m1_loss_ce_0: 0.5418  m1_loss_mask_0: 0.1741  m1_loss_dice_0: 1.339  m1_loss_ce_1: 0.5812  m1_loss_mask_1: 0.162  m1_loss_dice_1: 1.245  m1_loss_ce_2: 0.5188  m1_loss_mask_2: 0.1537  m1_loss_dice_2: 1.186  m1_loss_ce_3: 0.4947  m1_loss_mask_3: 0.1532  m1_loss_dice_3: 1.172  m1_loss_ce_4: 0.4757  m1_loss_mask_4: 0.1512  m1_loss_dice_4: 1.167  m1_loss_ce_5: 0.4478  m1_loss_mask_5: 0.1507  m1_loss_dice_5: 1.173  m1_loss_ce_6: 0.4421  m1_loss_mask_6: 0.1502  m1_loss_dice_6: 1.134  m1_loss_ce_7: 0.4527  m1_loss_mask_7: 0.15  m1_loss_dice_7: 1.117  m1_loss_ce_8: 0.4286  m1_loss_mask_8: 0.1499  m1_loss_dice_8: 1.127  m2_loss_ce: 0.488  m2_loss_mask: 0.1507  m2_loss_dice: 1.134  m2_loss_ce_0: 0.5693  m2_loss_mask_0: 0.1803  m2_loss_dice_0: 1.394  m2_loss_ce_1: 0.6408  m2_loss_mask_1: 0.1622  m2_loss_dice_1: 1.29  m2_loss_ce_2: 0.5596  m2_loss_mask_2: 0.1645  m2_loss_dice_2: 1.211  m2_loss_ce_3: 0.5276  m2_loss_mask_3: 0.16  m2_loss_dice_3: 1.151  m2_loss_ce_4: 0.4958  m2_loss_mask_4: 0.1534  m2_loss_dice_4: 1.173  m2_loss_ce_5: 0.4788  m2_loss_mask_5: 0.1508  m2_loss_dice_5: 1.17  m2_loss_ce_6: 0.4616  m2_loss_mask_6: 0.1499  m2_loss_dice_6: 1.134  m2_loss_ce_7: 0.5154  m2_loss_mask_7: 0.1496  m2_loss_dice_7: 1.121  m2_loss_ce_8: 0.4565  m2_loss_mask_8: 0.1495  m2_loss_dice_8: 1.155    time: 1.6686  last_time: 1.7104  data_time: 0.0626  last_data_time: 0.0416   lr: 0.0001  max_mem: 36791M
[10/07 09:07:05] d2.utils.events INFO:  eta: 0:16:36  iter: 399  total_loss: 36.6  m1_loss_ce: 0.4566  m1_loss_mask: 0.1489  m1_loss_dice: 1.14  m1_loss_ce_0: 0.5059  m1_loss_mask_0: 0.1745  m1_loss_dice_0: 1.332  m1_loss_ce_1: 0.5351  m1_loss_mask_1: 0.1532  m1_loss_dice_1: 1.241  m1_loss_ce_2: 0.4986  m1_loss_mask_2: 0.1542  m1_loss_dice_2: 1.184  m1_loss_ce_3: 0.4524  m1_loss_mask_3: 0.1459  m1_loss_dice_3: 1.147  m1_loss_ce_4: 0.4295  m1_loss_mask_4: 0.1503  m1_loss_dice_4: 1.158  m1_loss_ce_5: 0.429  m1_loss_mask_5: 0.1518  m1_loss_dice_5: 1.152  m1_loss_ce_6: 0.4245  m1_loss_mask_6: 0.1512  m1_loss_dice_6: 1.14  m1_loss_ce_7: 0.417  m1_loss_mask_7: 0.1489  m1_loss_dice_7: 1.101  m1_loss_ce_8: 0.4139  m1_loss_mask_8: 0.1501  m1_loss_dice_8: 1.109  m2_loss_ce: 0.4381  m2_loss_mask: 0.1481  m2_loss_dice: 1.145  m2_loss_ce_0: 0.5564  m2_loss_mask_0: 0.1831  m2_loss_dice_0: 1.387  m2_loss_ce_1: 0.6049  m2_loss_mask_1: 0.1601  m2_loss_dice_1: 1.214  m2_loss_ce_2: 0.5467  m2_loss_mask_2: 0.1552  m2_loss_dice_2: 1.248  m2_loss_ce_3: 0.4968  m2_loss_mask_3: 0.1537  m2_loss_dice_3: 1.188  m2_loss_ce_4: 0.4542  m2_loss_mask_4: 0.1477  m2_loss_dice_4: 1.163  m2_loss_ce_5: 0.4645  m2_loss_mask_5: 0.1484  m2_loss_dice_5: 1.173  m2_loss_ce_6: 0.4493  m2_loss_mask_6: 0.1487  m2_loss_dice_6: 1.197  m2_loss_ce_7: 0.4363  m2_loss_mask_7: 0.1496  m2_loss_dice_7: 1.154  m2_loss_ce_8: 0.4419  m2_loss_mask_8: 0.1471  m2_loss_dice_8: 1.133    time: 1.6692  last_time: 1.7197  data_time: 0.0509  last_data_time: 0.0397   lr: 0.0001  max_mem: 36791M
[10/07 09:07:39] d2.utils.events INFO:  eta: 0:16:04  iter: 419  total_loss: 39.21  m1_loss_ce: 0.5206  m1_loss_mask: 0.1487  m1_loss_dice: 1.197  m1_loss_ce_0: 0.5677  m1_loss_mask_0: 0.1782  m1_loss_dice_0: 1.415  m1_loss_ce_1: 0.5915  m1_loss_mask_1: 0.1612  m1_loss_dice_1: 1.355  m1_loss_ce_2: 0.5706  m1_loss_mask_2: 0.1514  m1_loss_dice_2: 1.277  m1_loss_ce_3: 0.5299  m1_loss_mask_3: 0.1522  m1_loss_dice_3: 1.218  m1_loss_ce_4: 0.5035  m1_loss_mask_4: 0.1516  m1_loss_dice_4: 1.2  m1_loss_ce_5: 0.4662  m1_loss_mask_5: 0.1497  m1_loss_dice_5: 1.213  m1_loss_ce_6: 0.4506  m1_loss_mask_6: 0.1497  m1_loss_dice_6: 1.203  m1_loss_ce_7: 0.4477  m1_loss_mask_7: 0.1487  m1_loss_dice_7: 1.193  m1_loss_ce_8: 0.4622  m1_loss_mask_8: 0.1488  m1_loss_dice_8: 1.189  m2_loss_ce: 0.4936  m2_loss_mask: 0.1517  m2_loss_dice: 1.214  m2_loss_ce_0: 0.6068  m2_loss_mask_0: 0.1779  m2_loss_dice_0: 1.417  m2_loss_ce_1: 0.6466  m2_loss_mask_1: 0.167  m2_loss_dice_1: 1.342  m2_loss_ce_2: 0.6084  m2_loss_mask_2: 0.1645  m2_loss_dice_2: 1.293  m2_loss_ce_3: 0.5393  m2_loss_mask_3: 0.1565  m2_loss_dice_3: 1.241  m2_loss_ce_4: 0.5406  m2_loss_mask_4: 0.1594  m2_loss_dice_4: 1.22  m2_loss_ce_5: 0.5261  m2_loss_mask_5: 0.1533  m2_loss_dice_5: 1.235  m2_loss_ce_6: 0.5134  m2_loss_mask_6: 0.1557  m2_loss_dice_6: 1.22  m2_loss_ce_7: 0.4861  m2_loss_mask_7: 0.1515  m2_loss_dice_7: 1.227  m2_loss_ce_8: 0.5265  m2_loss_mask_8: 0.1508  m2_loss_dice_8: 1.199    time: 1.6707  last_time: 1.7541  data_time: 0.0559  last_data_time: 0.0520   lr: 0.0001  max_mem: 36791M
[10/07 09:08:14] d2.utils.events INFO:  eta: 0:15:32  iter: 439  total_loss: 37.17  m1_loss_ce: 0.4416  m1_loss_mask: 0.1505  m1_loss_dice: 1.155  m1_loss_ce_0: 0.5501  m1_loss_mask_0: 0.1661  m1_loss_dice_0: 1.345  m1_loss_ce_1: 0.5784  m1_loss_mask_1: 0.162  m1_loss_dice_1: 1.308  m1_loss_ce_2: 0.4758  m1_loss_mask_2: 0.158  m1_loss_dice_2: 1.245  m1_loss_ce_3: 0.4759  m1_loss_mask_3: 0.1537  m1_loss_dice_3: 1.172  m1_loss_ce_4: 0.4368  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.161  m1_loss_ce_5: 0.433  m1_loss_mask_5: 0.1498  m1_loss_dice_5: 1.179  m1_loss_ce_6: 0.424  m1_loss_mask_6: 0.1517  m1_loss_dice_6: 1.158  m1_loss_ce_7: 0.4004  m1_loss_mask_7: 0.152  m1_loss_dice_7: 1.127  m1_loss_ce_8: 0.4156  m1_loss_mask_8: 0.1509  m1_loss_dice_8: 1.176  m2_loss_ce: 0.4266  m2_loss_mask: 0.15  m2_loss_dice: 1.194  m2_loss_ce_0: 0.5693  m2_loss_mask_0: 0.1747  m2_loss_dice_0: 1.416  m2_loss_ce_1: 0.6299  m2_loss_mask_1: 0.1703  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.5632  m2_loss_mask_2: 0.1515  m2_loss_dice_2: 1.227  m2_loss_ce_3: 0.4797  m2_loss_mask_3: 0.1611  m2_loss_dice_3: 1.232  m2_loss_ce_4: 0.4587  m2_loss_mask_4: 0.1562  m2_loss_dice_4: 1.18  m2_loss_ce_5: 0.4524  m2_loss_mask_5: 0.1451  m2_loss_dice_5: 1.234  m2_loss_ce_6: 0.4589  m2_loss_mask_6: 0.1541  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4442  m2_loss_mask_7: 0.1511  m2_loss_dice_7: 1.214  m2_loss_ce_8: 0.4594  m2_loss_mask_8: 0.1528  m2_loss_dice_8: 1.184    time: 1.6727  last_time: 1.8499  data_time: 0.0611  last_data_time: 0.0982   lr: 0.0001  max_mem: 36791M
[10/07 09:08:48] d2.utils.events INFO:  eta: 0:14:59  iter: 459  total_loss: 37.85  m1_loss_ce: 0.4874  m1_loss_mask: 0.1467  m1_loss_dice: 1.151  m1_loss_ce_0: 0.5263  m1_loss_mask_0: 0.1588  m1_loss_dice_0: 1.36  m1_loss_ce_1: 0.5783  m1_loss_mask_1: 0.1537  m1_loss_dice_1: 1.257  m1_loss_ce_2: 0.5264  m1_loss_mask_2: 0.1465  m1_loss_dice_2: 1.223  m1_loss_ce_3: 0.4924  m1_loss_mask_3: 0.148  m1_loss_dice_3: 1.149  m1_loss_ce_4: 0.4498  m1_loss_mask_4: 0.1464  m1_loss_dice_4: 1.17  m1_loss_ce_5: 0.462  m1_loss_mask_5: 0.148  m1_loss_dice_5: 1.159  m1_loss_ce_6: 0.4254  m1_loss_mask_6: 0.1469  m1_loss_dice_6: 1.134  m1_loss_ce_7: 0.429  m1_loss_mask_7: 0.1463  m1_loss_dice_7: 1.138  m1_loss_ce_8: 0.4497  m1_loss_mask_8: 0.147  m1_loss_dice_8: 1.137  m2_loss_ce: 0.4695  m2_loss_mask: 0.1373  m2_loss_dice: 1.156  m2_loss_ce_0: 0.5511  m2_loss_mask_0: 0.169  m2_loss_dice_0: 1.389  m2_loss_ce_1: 0.6284  m2_loss_mask_1: 0.1526  m2_loss_dice_1: 1.325  m2_loss_ce_2: 0.5396  m2_loss_mask_2: 0.1456  m2_loss_dice_2: 1.268  m2_loss_ce_3: 0.5255  m2_loss_mask_3: 0.1438  m2_loss_dice_3: 1.256  m2_loss_ce_4: 0.4753  m2_loss_mask_4: 0.1432  m2_loss_dice_4: 1.217  m2_loss_ce_5: 0.4692  m2_loss_mask_5: 0.1409  m2_loss_dice_5: 1.218  m2_loss_ce_6: 0.4596  m2_loss_mask_6: 0.1397  m2_loss_dice_6: 1.222  m2_loss_ce_7: 0.485  m2_loss_mask_7: 0.1395  m2_loss_dice_7: 1.177  m2_loss_ce_8: 0.496  m2_loss_mask_8: 0.1381  m2_loss_dice_8: 1.208    time: 1.6734  last_time: 1.6878  data_time: 0.0562  last_data_time: 0.0796   lr: 0.0001  max_mem: 36791M
[10/07 09:09:22] d2.utils.events INFO:  eta: 0:14:27  iter: 479  total_loss: 36.82  m1_loss_ce: 0.4707  m1_loss_mask: 0.1597  m1_loss_dice: 1.124  m1_loss_ce_0: 0.5479  m1_loss_mask_0: 0.1782  m1_loss_dice_0: 1.316  m1_loss_ce_1: 0.6136  m1_loss_mask_1: 0.17  m1_loss_dice_1: 1.225  m1_loss_ce_2: 0.5232  m1_loss_mask_2: 0.1589  m1_loss_dice_2: 1.221  m1_loss_ce_3: 0.4945  m1_loss_mask_3: 0.1601  m1_loss_dice_3: 1.176  m1_loss_ce_4: 0.442  m1_loss_mask_4: 0.1594  m1_loss_dice_4: 1.148  m1_loss_ce_5: 0.4285  m1_loss_mask_5: 0.1586  m1_loss_dice_5: 1.114  m1_loss_ce_6: 0.4363  m1_loss_mask_6: 0.1617  m1_loss_dice_6: 1.136  m1_loss_ce_7: 0.4254  m1_loss_mask_7: 0.1589  m1_loss_dice_7: 1.148  m1_loss_ce_8: 0.4505  m1_loss_mask_8: 0.1607  m1_loss_dice_8: 1.15  m2_loss_ce: 0.4819  m2_loss_mask: 0.1606  m2_loss_dice: 1.14  m2_loss_ce_0: 0.5778  m2_loss_mask_0: 0.1864  m2_loss_dice_0: 1.347  m2_loss_ce_1: 0.6152  m2_loss_mask_1: 0.1717  m2_loss_dice_1: 1.266  m2_loss_ce_2: 0.5418  m2_loss_mask_2: 0.162  m2_loss_dice_2: 1.218  m2_loss_ce_3: 0.4939  m2_loss_mask_3: 0.1664  m2_loss_dice_3: 1.174  m2_loss_ce_4: 0.4687  m2_loss_mask_4: 0.1614  m2_loss_dice_4: 1.182  m2_loss_ce_5: 0.4836  m2_loss_mask_5: 0.1607  m2_loss_dice_5: 1.171  m2_loss_ce_6: 0.4548  m2_loss_mask_6: 0.1606  m2_loss_dice_6: 1.157  m2_loss_ce_7: 0.4715  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.156  m2_loss_ce_8: 0.451  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.175    time: 1.6743  last_time: 1.6566  data_time: 0.0621  last_data_time: 0.0502   lr: 0.0001  max_mem: 36791M
[10/07 09:09:55] d2.utils.events INFO:  eta: 0:13:53  iter: 499  total_loss: 37.23  m1_loss_ce: 0.4605  m1_loss_mask: 0.1464  m1_loss_dice: 1.167  m1_loss_ce_0: 0.5137  m1_loss_mask_0: 0.1676  m1_loss_dice_0: 1.402  m1_loss_ce_1: 0.574  m1_loss_mask_1: 0.1624  m1_loss_dice_1: 1.274  m1_loss_ce_2: 0.5255  m1_loss_mask_2: 0.1483  m1_loss_dice_2: 1.218  m1_loss_ce_3: 0.4784  m1_loss_mask_3: 0.1484  m1_loss_dice_3: 1.204  m1_loss_ce_4: 0.4471  m1_loss_mask_4: 0.148  m1_loss_dice_4: 1.189  m1_loss_ce_5: 0.4575  m1_loss_mask_5: 0.1458  m1_loss_dice_5: 1.164  m1_loss_ce_6: 0.4148  m1_loss_mask_6: 0.1464  m1_loss_dice_6: 1.151  m1_loss_ce_7: 0.3873  m1_loss_mask_7: 0.1451  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4317  m1_loss_mask_8: 0.1456  m1_loss_dice_8: 1.137  m2_loss_ce: 0.4841  m2_loss_mask: 0.1479  m2_loss_dice: 1.177  m2_loss_ce_0: 0.604  m2_loss_mask_0: 0.1739  m2_loss_dice_0: 1.413  m2_loss_ce_1: 0.6156  m2_loss_mask_1: 0.1595  m2_loss_dice_1: 1.312  m2_loss_ce_2: 0.5865  m2_loss_mask_2: 0.1555  m2_loss_dice_2: 1.243  m2_loss_ce_3: 0.5034  m2_loss_mask_3: 0.1538  m2_loss_dice_3: 1.202  m2_loss_ce_4: 0.5024  m2_loss_mask_4: 0.1501  m2_loss_dice_4: 1.181  m2_loss_ce_5: 0.4817  m2_loss_mask_5: 0.147  m2_loss_dice_5: 1.24  m2_loss_ce_6: 0.485  m2_loss_mask_6: 0.1483  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.4666  m2_loss_mask_7: 0.148  m2_loss_dice_7: 1.199  m2_loss_ce_8: 0.462  m2_loss_mask_8: 0.1484  m2_loss_dice_8: 1.201    time: 1.6750  last_time: 1.7371  data_time: 0.0594  last_data_time: 0.0953   lr: 0.0001  max_mem: 36791M
[10/07 09:10:29] d2.utils.events INFO:  eta: 0:13:20  iter: 519  total_loss: 34.86  m1_loss_ce: 0.4404  m1_loss_mask: 0.1574  m1_loss_dice: 1.07  m1_loss_ce_0: 0.4884  m1_loss_mask_0: 0.182  m1_loss_dice_0: 1.244  m1_loss_ce_1: 0.5314  m1_loss_mask_1: 0.1669  m1_loss_dice_1: 1.179  m1_loss_ce_2: 0.4784  m1_loss_mask_2: 0.1653  m1_loss_dice_2: 1.137  m1_loss_ce_3: 0.4574  m1_loss_mask_3: 0.1625  m1_loss_dice_3: 1.104  m1_loss_ce_4: 0.4138  m1_loss_mask_4: 0.1638  m1_loss_dice_4: 1.128  m1_loss_ce_5: 0.3782  m1_loss_mask_5: 0.1622  m1_loss_dice_5: 1.097  m1_loss_ce_6: 0.3975  m1_loss_mask_6: 0.1619  m1_loss_dice_6: 1.098  m1_loss_ce_7: 0.3912  m1_loss_mask_7: 0.159  m1_loss_dice_7: 1.089  m1_loss_ce_8: 0.3869  m1_loss_mask_8: 0.1598  m1_loss_dice_8: 1.116  m2_loss_ce: 0.4694  m2_loss_mask: 0.1585  m2_loss_dice: 1.08  m2_loss_ce_0: 0.555  m2_loss_mask_0: 0.194  m2_loss_dice_0: 1.319  m2_loss_ce_1: 0.608  m2_loss_mask_1: 0.1815  m2_loss_dice_1: 1.224  m2_loss_ce_2: 0.5298  m2_loss_mask_2: 0.1688  m2_loss_dice_2: 1.159  m2_loss_ce_3: 0.5016  m2_loss_mask_3: 0.1648  m2_loss_dice_3: 1.136  m2_loss_ce_4: 0.4861  m2_loss_mask_4: 0.1624  m2_loss_dice_4: 1.122  m2_loss_ce_5: 0.4657  m2_loss_mask_5: 0.1608  m2_loss_dice_5: 1.112  m2_loss_ce_6: 0.4516  m2_loss_mask_6: 0.1578  m2_loss_dice_6: 1.095  m2_loss_ce_7: 0.4806  m2_loss_mask_7: 0.1603  m2_loss_dice_7: 1.077  m2_loss_ce_8: 0.4732  m2_loss_mask_8: 0.1587  m2_loss_dice_8: 1.072    time: 1.6755  last_time: 1.6513  data_time: 0.0562  last_data_time: 0.0619   lr: 0.0001  max_mem: 36791M
[10/07 09:11:03] d2.utils.events INFO:  eta: 0:12:47  iter: 539  total_loss: 36.23  m1_loss_ce: 0.4613  m1_loss_mask: 0.1539  m1_loss_dice: 1.152  m1_loss_ce_0: 0.5189  m1_loss_mask_0: 0.1729  m1_loss_dice_0: 1.352  m1_loss_ce_1: 0.5811  m1_loss_mask_1: 0.1664  m1_loss_dice_1: 1.248  m1_loss_ce_2: 0.5034  m1_loss_mask_2: 0.1592  m1_loss_dice_2: 1.229  m1_loss_ce_3: 0.4552  m1_loss_mask_3: 0.1553  m1_loss_dice_3: 1.166  m1_loss_ce_4: 0.4253  m1_loss_mask_4: 0.1528  m1_loss_dice_4: 1.169  m1_loss_ce_5: 0.4394  m1_loss_mask_5: 0.152  m1_loss_dice_5: 1.142  m1_loss_ce_6: 0.4181  m1_loss_mask_6: 0.1533  m1_loss_dice_6: 1.131  m1_loss_ce_7: 0.4079  m1_loss_mask_7: 0.1528  m1_loss_dice_7: 1.132  m1_loss_ce_8: 0.4221  m1_loss_mask_8: 0.1536  m1_loss_dice_8: 1.108  m2_loss_ce: 0.449  m2_loss_mask: 0.1483  m2_loss_dice: 1.127  m2_loss_ce_0: 0.5754  m2_loss_mask_0: 0.1786  m2_loss_dice_0: 1.383  m2_loss_ce_1: 0.622  m2_loss_mask_1: 0.1657  m2_loss_dice_1: 1.304  m2_loss_ce_2: 0.5779  m2_loss_mask_2: 0.1624  m2_loss_dice_2: 1.246  m2_loss_ce_3: 0.4981  m2_loss_mask_3: 0.158  m2_loss_dice_3: 1.213  m2_loss_ce_4: 0.4278  m2_loss_mask_4: 0.1542  m2_loss_dice_4: 1.192  m2_loss_ce_5: 0.4695  m2_loss_mask_5: 0.152  m2_loss_dice_5: 1.189  m2_loss_ce_6: 0.4472  m2_loss_mask_6: 0.1483  m2_loss_dice_6: 1.162  m2_loss_ce_7: 0.4312  m2_loss_mask_7: 0.1487  m2_loss_dice_7: 1.155  m2_loss_ce_8: 0.4514  m2_loss_mask_8: 0.1464  m2_loss_dice_8: 1.138    time: 1.6764  last_time: 1.7940  data_time: 0.0585  last_data_time: 0.1112   lr: 0.0001  max_mem: 36791M
[10/07 09:11:37] d2.utils.events INFO:  eta: 0:12:14  iter: 559  total_loss: 37.53  m1_loss_ce: 0.4922  m1_loss_mask: 0.1541  m1_loss_dice: 1.19  m1_loss_ce_0: 0.4873  m1_loss_mask_0: 0.1852  m1_loss_dice_0: 1.413  m1_loss_ce_1: 0.5459  m1_loss_mask_1: 0.1729  m1_loss_dice_1: 1.32  m1_loss_ce_2: 0.5087  m1_loss_mask_2: 0.1656  m1_loss_dice_2: 1.261  m1_loss_ce_3: 0.4934  m1_loss_mask_3: 0.1551  m1_loss_dice_3: 1.204  m1_loss_ce_4: 0.4477  m1_loss_mask_4: 0.1557  m1_loss_dice_4: 1.195  m1_loss_ce_5: 0.3712  m1_loss_mask_5: 0.1583  m1_loss_dice_5: 1.218  m1_loss_ce_6: 0.4127  m1_loss_mask_6: 0.1594  m1_loss_dice_6: 1.214  m1_loss_ce_7: 0.4033  m1_loss_mask_7: 0.1544  m1_loss_dice_7: 1.168  m1_loss_ce_8: 0.3906  m1_loss_mask_8: 0.1521  m1_loss_dice_8: 1.167  m2_loss_ce: 0.4408  m2_loss_mask: 0.1571  m2_loss_dice: 1.195  m2_loss_ce_0: 0.576  m2_loss_mask_0: 0.1894  m2_loss_dice_0: 1.398  m2_loss_ce_1: 0.6206  m2_loss_mask_1: 0.1761  m2_loss_dice_1: 1.332  m2_loss_ce_2: 0.5625  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.295  m2_loss_ce_3: 0.4897  m2_loss_mask_3: 0.1639  m2_loss_dice_3: 1.249  m2_loss_ce_4: 0.4762  m2_loss_mask_4: 0.1582  m2_loss_dice_4: 1.25  m2_loss_ce_5: 0.4381  m2_loss_mask_5: 0.1618  m2_loss_dice_5: 1.261  m2_loss_ce_6: 0.4362  m2_loss_mask_6: 0.1562  m2_loss_dice_6: 1.195  m2_loss_ce_7: 0.4428  m2_loss_mask_7: 0.1547  m2_loss_dice_7: 1.183  m2_loss_ce_8: 0.4571  m2_loss_mask_8: 0.1549  m2_loss_dice_8: 1.186    time: 1.6768  last_time: 1.6520  data_time: 0.0559  last_data_time: 0.0480   lr: 0.0001  max_mem: 36791M
[10/07 09:12:11] d2.utils.events INFO:  eta: 0:11:40  iter: 579  total_loss: 38.01  m1_loss_ce: 0.4823  m1_loss_mask: 0.1581  m1_loss_dice: 1.123  m1_loss_ce_0: 0.5629  m1_loss_mask_0: 0.1749  m1_loss_dice_0: 1.266  m1_loss_ce_1: 0.6359  m1_loss_mask_1: 0.1717  m1_loss_dice_1: 1.277  m1_loss_ce_2: 0.55  m1_loss_mask_2: 0.1595  m1_loss_dice_2: 1.227  m1_loss_ce_3: 0.5002  m1_loss_mask_3: 0.1588  m1_loss_dice_3: 1.156  m1_loss_ce_4: 0.4693  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.148  m1_loss_ce_5: 0.458  m1_loss_mask_5: 0.1552  m1_loss_dice_5: 1.168  m1_loss_ce_6: 0.453  m1_loss_mask_6: 0.1558  m1_loss_dice_6: 1.155  m1_loss_ce_7: 0.4378  m1_loss_mask_7: 0.1569  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.4393  m1_loss_mask_8: 0.1557  m1_loss_dice_8: 1.125  m2_loss_ce: 0.4584  m2_loss_mask: 0.1574  m2_loss_dice: 1.136  m2_loss_ce_0: 0.5444  m2_loss_mask_0: 0.1809  m2_loss_dice_0: 1.355  m2_loss_ce_1: 0.6379  m2_loss_mask_1: 0.1752  m2_loss_dice_1: 1.309  m2_loss_ce_2: 0.5729  m2_loss_mask_2: 0.1654  m2_loss_dice_2: 1.211  m2_loss_ce_3: 0.5064  m2_loss_mask_3: 0.1663  m2_loss_dice_3: 1.162  m2_loss_ce_4: 0.481  m2_loss_mask_4: 0.1612  m2_loss_dice_4: 1.182  m2_loss_ce_5: 0.4602  m2_loss_mask_5: 0.1593  m2_loss_dice_5: 1.142  m2_loss_ce_6: 0.4329  m2_loss_mask_6: 0.1588  m2_loss_dice_6: 1.138  m2_loss_ce_7: 0.4743  m2_loss_mask_7: 0.1599  m2_loss_dice_7: 1.171  m2_loss_ce_8: 0.4605  m2_loss_mask_8: 0.1572  m2_loss_dice_8: 1.156    time: 1.6766  last_time: 1.6918  data_time: 0.0518  last_data_time: 0.0391   lr: 0.0001  max_mem: 36791M
[10/07 09:12:45] d2.utils.events INFO:  eta: 0:11:07  iter: 599  total_loss: 36.72  m1_loss_ce: 0.4511  m1_loss_mask: 0.1583  m1_loss_dice: 1.143  m1_loss_ce_0: 0.5297  m1_loss_mask_0: 0.175  m1_loss_dice_0: 1.348  m1_loss_ce_1: 0.6007  m1_loss_mask_1: 0.1794  m1_loss_dice_1: 1.27  m1_loss_ce_2: 0.5426  m1_loss_mask_2: 0.1704  m1_loss_dice_2: 1.205  m1_loss_ce_3: 0.482  m1_loss_mask_3: 0.1624  m1_loss_dice_3: 1.139  m1_loss_ce_4: 0.4377  m1_loss_mask_4: 0.1621  m1_loss_dice_4: 1.164  m1_loss_ce_5: 0.4432  m1_loss_mask_5: 0.1619  m1_loss_dice_5: 1.162  m1_loss_ce_6: 0.4194  m1_loss_mask_6: 0.161  m1_loss_dice_6: 1.127  m1_loss_ce_7: 0.4364  m1_loss_mask_7: 0.1606  m1_loss_dice_7: 1.12  m1_loss_ce_8: 0.4484  m1_loss_mask_8: 0.1618  m1_loss_dice_8: 1.155  m2_loss_ce: 0.4515  m2_loss_mask: 0.1572  m2_loss_dice: 1.149  m2_loss_ce_0: 0.6058  m2_loss_mask_0: 0.1845  m2_loss_dice_0: 1.372  m2_loss_ce_1: 0.6204  m2_loss_mask_1: 0.1738  m2_loss_dice_1: 1.25  m2_loss_ce_2: 0.5699  m2_loss_mask_2: 0.1671  m2_loss_dice_2: 1.223  m2_loss_ce_3: 0.5085  m2_loss_mask_3: 0.1647  m2_loss_dice_3: 1.192  m2_loss_ce_4: 0.4825  m2_loss_mask_4: 0.1605  m2_loss_dice_4: 1.173  m2_loss_ce_5: 0.4629  m2_loss_mask_5: 0.1598  m2_loss_dice_5: 1.174  m2_loss_ce_6: 0.4714  m2_loss_mask_6: 0.156  m2_loss_dice_6: 1.12  m2_loss_ce_7: 0.4693  m2_loss_mask_7: 0.1563  m2_loss_dice_7: 1.151  m2_loss_ce_8: 0.4859  m2_loss_mask_8: 0.1575  m2_loss_dice_8: 1.118    time: 1.6769  last_time: 1.7867  data_time: 0.0589  last_data_time: 0.1768   lr: 0.0001  max_mem: 36791M
[10/07 09:13:18] d2.utils.events INFO:  eta: 0:10:34  iter: 619  total_loss: 35.76  m1_loss_ce: 0.463  m1_loss_mask: 0.1523  m1_loss_dice: 1.127  m1_loss_ce_0: 0.5169  m1_loss_mask_0: 0.1718  m1_loss_dice_0: 1.275  m1_loss_ce_1: 0.5524  m1_loss_mask_1: 0.1656  m1_loss_dice_1: 1.205  m1_loss_ce_2: 0.4982  m1_loss_mask_2: 0.1573  m1_loss_dice_2: 1.159  m1_loss_ce_3: 0.4655  m1_loss_mask_3: 0.1567  m1_loss_dice_3: 1.135  m1_loss_ce_4: 0.4382  m1_loss_mask_4: 0.1554  m1_loss_dice_4: 1.146  m1_loss_ce_5: 0.4251  m1_loss_mask_5: 0.1537  m1_loss_dice_5: 1.133  m1_loss_ce_6: 0.4  m1_loss_mask_6: 0.1555  m1_loss_dice_6: 1.084  m1_loss_ce_7: 0.3987  m1_loss_mask_7: 0.1566  m1_loss_dice_7: 1.109  m1_loss_ce_8: 0.402  m1_loss_mask_8: 0.1548  m1_loss_dice_8: 1.118  m2_loss_ce: 0.4191  m2_loss_mask: 0.1546  m2_loss_dice: 1.079  m2_loss_ce_0: 0.5412  m2_loss_mask_0: 0.1766  m2_loss_dice_0: 1.295  m2_loss_ce_1: 0.5796  m2_loss_mask_1: 0.1649  m2_loss_dice_1: 1.293  m2_loss_ce_2: 0.5414  m2_loss_mask_2: 0.1574  m2_loss_dice_2: 1.21  m2_loss_ce_3: 0.4633  m2_loss_mask_3: 0.1601  m2_loss_dice_3: 1.138  m2_loss_ce_4: 0.4508  m2_loss_mask_4: 0.1558  m2_loss_dice_4: 1.175  m2_loss_ce_5: 0.401  m2_loss_mask_5: 0.1536  m2_loss_dice_5: 1.123  m2_loss_ce_6: 0.3962  m2_loss_mask_6: 0.1556  m2_loss_dice_6: 1.143  m2_loss_ce_7: 0.4234  m2_loss_mask_7: 0.1541  m2_loss_dice_7: 1.114  m2_loss_ce_8: 0.435  m2_loss_mask_8: 0.1529  m2_loss_dice_8: 1.127    time: 1.6767  last_time: 1.6632  data_time: 0.0564  last_data_time: 0.0704   lr: 0.0001  max_mem: 36791M
[10/07 09:13:52] d2.utils.events INFO:  eta: 0:10:00  iter: 639  total_loss: 38.38  m1_loss_ce: 0.4842  m1_loss_mask: 0.1509  m1_loss_dice: 1.196  m1_loss_ce_0: 0.5444  m1_loss_mask_0: 0.1753  m1_loss_dice_0: 1.359  m1_loss_ce_1: 0.6192  m1_loss_mask_1: 0.1636  m1_loss_dice_1: 1.315  m1_loss_ce_2: 0.5671  m1_loss_mask_2: 0.1542  m1_loss_dice_2: 1.225  m1_loss_ce_3: 0.5021  m1_loss_mask_3: 0.1516  m1_loss_dice_3: 1.184  m1_loss_ce_4: 0.4742  m1_loss_mask_4: 0.1511  m1_loss_dice_4: 1.182  m1_loss_ce_5: 0.4839  m1_loss_mask_5: 0.1506  m1_loss_dice_5: 1.222  m1_loss_ce_6: 0.4586  m1_loss_mask_6: 0.149  m1_loss_dice_6: 1.177  m1_loss_ce_7: 0.4531  m1_loss_mask_7: 0.1495  m1_loss_dice_7: 1.173  m1_loss_ce_8: 0.4516  m1_loss_mask_8: 0.1495  m1_loss_dice_8: 1.206  m2_loss_ce: 0.4832  m2_loss_mask: 0.1464  m2_loss_dice: 1.199  m2_loss_ce_0: 0.5708  m2_loss_mask_0: 0.1706  m2_loss_dice_0: 1.431  m2_loss_ce_1: 0.6472  m2_loss_mask_1: 0.1608  m2_loss_dice_1: 1.345  m2_loss_ce_2: 0.5687  m2_loss_mask_2: 0.1559  m2_loss_dice_2: 1.275  m2_loss_ce_3: 0.5021  m2_loss_mask_3: 0.1542  m2_loss_dice_3: 1.237  m2_loss_ce_4: 0.4807  m2_loss_mask_4: 0.1513  m2_loss_dice_4: 1.221  m2_loss_ce_5: 0.4827  m2_loss_mask_5: 0.1468  m2_loss_dice_5: 1.239  m2_loss_ce_6: 0.4841  m2_loss_mask_6: 0.1475  m2_loss_dice_6: 1.209  m2_loss_ce_7: 0.4807  m2_loss_mask_7: 0.1468  m2_loss_dice_7: 1.189  m2_loss_ce_8: 0.4857  m2_loss_mask_8: 0.1462  m2_loss_dice_8: 1.193    time: 1.6768  last_time: 1.6896  data_time: 0.0508  last_data_time: 0.0583   lr: 0.0001  max_mem: 36791M
[10/07 09:14:26] d2.utils.events INFO:  eta: 0:09:27  iter: 659  total_loss: 35.7  m1_loss_ce: 0.4522  m1_loss_mask: 0.1499  m1_loss_dice: 1.098  m1_loss_ce_0: 0.4803  m1_loss_mask_0: 0.1744  m1_loss_dice_0: 1.28  m1_loss_ce_1: 0.5896  m1_loss_mask_1: 0.1603  m1_loss_dice_1: 1.23  m1_loss_ce_2: 0.4982  m1_loss_mask_2: 0.1492  m1_loss_dice_2: 1.183  m1_loss_ce_3: 0.4362  m1_loss_mask_3: 0.1499  m1_loss_dice_3: 1.132  m1_loss_ce_4: 0.394  m1_loss_mask_4: 0.1499  m1_loss_dice_4: 1.112  m1_loss_ce_5: 0.4391  m1_loss_mask_5: 0.1501  m1_loss_dice_5: 1.093  m1_loss_ce_6: 0.4259  m1_loss_mask_6: 0.1545  m1_loss_dice_6: 1.099  m1_loss_ce_7: 0.4141  m1_loss_mask_7: 0.153  m1_loss_dice_7: 1.082  m1_loss_ce_8: 0.4127  m1_loss_mask_8: 0.1501  m1_loss_dice_8: 1.101  m2_loss_ce: 0.4447  m2_loss_mask: 0.1523  m2_loss_dice: 1.112  m2_loss_ce_0: 0.5096  m2_loss_mask_0: 0.1783  m2_loss_dice_0: 1.338  m2_loss_ce_1: 0.5866  m2_loss_mask_1: 0.1626  m2_loss_dice_1: 1.271  m2_loss_ce_2: 0.5035  m2_loss_mask_2: 0.1575  m2_loss_dice_2: 1.182  m2_loss_ce_3: 0.465  m2_loss_mask_3: 0.1558  m2_loss_dice_3: 1.15  m2_loss_ce_4: 0.4266  m2_loss_mask_4: 0.1547  m2_loss_dice_4: 1.176  m2_loss_ce_5: 0.4228  m2_loss_mask_5: 0.1544  m2_loss_dice_5: 1.145  m2_loss_ce_6: 0.405  m2_loss_mask_6: 0.1519  m2_loss_dice_6: 1.137  m2_loss_ce_7: 0.4098  m2_loss_mask_7: 0.1522  m2_loss_dice_7: 1.128  m2_loss_ce_8: 0.4341  m2_loss_mask_8: 0.152  m2_loss_dice_8: 1.142    time: 1.6771  last_time: 1.6835  data_time: 0.0557  last_data_time: 0.0426   lr: 0.0001  max_mem: 36791M
[10/07 09:15:00] d2.utils.events INFO:  eta: 0:08:54  iter: 679  total_loss: 37.5  m1_loss_ce: 0.4489  m1_loss_mask: 0.159  m1_loss_dice: 1.149  m1_loss_ce_0: 0.4963  m1_loss_mask_0: 0.1804  m1_loss_dice_0: 1.312  m1_loss_ce_1: 0.5887  m1_loss_mask_1: 0.1749  m1_loss_dice_1: 1.246  m1_loss_ce_2: 0.5019  m1_loss_mask_2: 0.1618  m1_loss_dice_2: 1.249  m1_loss_ce_3: 0.4704  m1_loss_mask_3: 0.1633  m1_loss_dice_3: 1.176  m1_loss_ce_4: 0.4284  m1_loss_mask_4: 0.164  m1_loss_dice_4: 1.136  m1_loss_ce_5: 0.4268  m1_loss_mask_5: 0.1626  m1_loss_dice_5: 1.145  m1_loss_ce_6: 0.4429  m1_loss_mask_6: 0.1599  m1_loss_dice_6: 1.11  m1_loss_ce_7: 0.4238  m1_loss_mask_7: 0.1586  m1_loss_dice_7: 1.15  m1_loss_ce_8: 0.4354  m1_loss_mask_8: 0.1587  m1_loss_dice_8: 1.137  m2_loss_ce: 0.4761  m2_loss_mask: 0.159  m2_loss_dice: 1.185  m2_loss_ce_0: 0.5408  m2_loss_mask_0: 0.1893  m2_loss_dice_0: 1.434  m2_loss_ce_1: 0.6366  m2_loss_mask_1: 0.1714  m2_loss_dice_1: 1.336  m2_loss_ce_2: 0.56  m2_loss_mask_2: 0.1659  m2_loss_dice_2: 1.265  m2_loss_ce_3: 0.4871  m2_loss_mask_3: 0.1671  m2_loss_dice_3: 1.217  m2_loss_ce_4: 0.4633  m2_loss_mask_4: 0.1633  m2_loss_dice_4: 1.228  m2_loss_ce_5: 0.4984  m2_loss_mask_5: 0.1621  m2_loss_dice_5: 1.199  m2_loss_ce_6: 0.4553  m2_loss_mask_6: 0.1573  m2_loss_dice_6: 1.198  m2_loss_ce_7: 0.4568  m2_loss_mask_7: 0.1568  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4639  m2_loss_mask_8: 0.1584  m2_loss_dice_8: 1.176    time: 1.6775  last_time: 1.6565  data_time: 0.0603  last_data_time: 0.0457   lr: 0.0001  max_mem: 36791M
[10/07 09:15:34] d2.utils.events INFO:  eta: 0:08:21  iter: 699  total_loss: 38.12  m1_loss_ce: 0.4793  m1_loss_mask: 0.152  m1_loss_dice: 1.171  m1_loss_ce_0: 0.5334  m1_loss_mask_0: 0.1781  m1_loss_dice_0: 1.32  m1_loss_ce_1: 0.5646  m1_loss_mask_1: 0.1646  m1_loss_dice_1: 1.309  m1_loss_ce_2: 0.5143  m1_loss_mask_2: 0.1614  m1_loss_dice_2: 1.23  m1_loss_ce_3: 0.4567  m1_loss_mask_3: 0.1581  m1_loss_dice_3: 1.234  m1_loss_ce_4: 0.4344  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.17  m1_loss_ce_5: 0.4424  m1_loss_mask_5: 0.1538  m1_loss_dice_5: 1.158  m1_loss_ce_6: 0.4039  m1_loss_mask_6: 0.1547  m1_loss_dice_6: 1.155  m1_loss_ce_7: 0.4136  m1_loss_mask_7: 0.1536  m1_loss_dice_7: 1.163  m1_loss_ce_8: 0.4341  m1_loss_mask_8: 0.1528  m1_loss_dice_8: 1.19  m2_loss_ce: 0.4368  m2_loss_mask: 0.1477  m2_loss_dice: 1.218  m2_loss_ce_0: 0.5466  m2_loss_mask_0: 0.1845  m2_loss_dice_0: 1.406  m2_loss_ce_1: 0.6282  m2_loss_mask_1: 0.1651  m2_loss_dice_1: 1.303  m2_loss_ce_2: 0.5258  m2_loss_mask_2: 0.1562  m2_loss_dice_2: 1.273  m2_loss_ce_3: 0.4582  m2_loss_mask_3: 0.157  m2_loss_dice_3: 1.243  m2_loss_ce_4: 0.4665  m2_loss_mask_4: 0.1533  m2_loss_dice_4: 1.23  m2_loss_ce_5: 0.4814  m2_loss_mask_5: 0.1507  m2_loss_dice_5: 1.23  m2_loss_ce_6: 0.4609  m2_loss_mask_6: 0.149  m2_loss_dice_6: 1.208  m2_loss_ce_7: 0.4507  m2_loss_mask_7: 0.1492  m2_loss_dice_7: 1.216  m2_loss_ce_8: 0.4416  m2_loss_mask_8: 0.1484  m2_loss_dice_8: 1.192    time: 1.6778  last_time: 1.6891  data_time: 0.0554  last_data_time: 0.0436   lr: 0.0001  max_mem: 36791M
[10/07 09:16:07] d2.utils.events INFO:  eta: 0:07:47  iter: 719  total_loss: 35.86  m1_loss_ce: 0.4136  m1_loss_mask: 0.1535  m1_loss_dice: 1.096  m1_loss_ce_0: 0.4517  m1_loss_mask_0: 0.1864  m1_loss_dice_0: 1.271  m1_loss_ce_1: 0.5143  m1_loss_mask_1: 0.1731  m1_loss_dice_1: 1.215  m1_loss_ce_2: 0.4888  m1_loss_mask_2: 0.1636  m1_loss_dice_2: 1.197  m1_loss_ce_3: 0.4208  m1_loss_mask_3: 0.1601  m1_loss_dice_3: 1.118  m1_loss_ce_4: 0.3738  m1_loss_mask_4: 0.1611  m1_loss_dice_4: 1.118  m1_loss_ce_5: 0.3695  m1_loss_mask_5: 0.1594  m1_loss_dice_5: 1.123  m1_loss_ce_6: 0.3669  m1_loss_mask_6: 0.1573  m1_loss_dice_6: 1.109  m1_loss_ce_7: 0.3825  m1_loss_mask_7: 0.1544  m1_loss_dice_7: 1.099  m1_loss_ce_8: 0.3774  m1_loss_mask_8: 0.1559  m1_loss_dice_8: 1.104  m2_loss_ce: 0.4154  m2_loss_mask: 0.1519  m2_loss_dice: 1.115  m2_loss_ce_0: 0.5309  m2_loss_mask_0: 0.1862  m2_loss_dice_0: 1.273  m2_loss_ce_1: 0.5924  m2_loss_mask_1: 0.1721  m2_loss_dice_1: 1.254  m2_loss_ce_2: 0.5258  m2_loss_mask_2: 0.1633  m2_loss_dice_2: 1.205  m2_loss_ce_3: 0.4522  m2_loss_mask_3: 0.165  m2_loss_dice_3: 1.183  m2_loss_ce_4: 0.4362  m2_loss_mask_4: 0.1576  m2_loss_dice_4: 1.126  m2_loss_ce_5: 0.4471  m2_loss_mask_5: 0.1557  m2_loss_dice_5: 1.153  m2_loss_ce_6: 0.4367  m2_loss_mask_6: 0.1528  m2_loss_dice_6: 1.147  m2_loss_ce_7: 0.4517  m2_loss_mask_7: 0.1524  m2_loss_dice_7: 1.124  m2_loss_ce_8: 0.4213  m2_loss_mask_8: 0.1536  m2_loss_dice_8: 1.136    time: 1.6775  last_time: 1.7305  data_time: 0.0570  last_data_time: 0.1181   lr: 0.0001  max_mem: 36791M
[10/07 09:16:41] d2.utils.events INFO:  eta: 0:07:14  iter: 739  total_loss: 37.04  m1_loss_ce: 0.4584  m1_loss_mask: 0.1521  m1_loss_dice: 1.133  m1_loss_ce_0: 0.5173  m1_loss_mask_0: 0.1734  m1_loss_dice_0: 1.302  m1_loss_ce_1: 0.5358  m1_loss_mask_1: 0.1627  m1_loss_dice_1: 1.234  m1_loss_ce_2: 0.4881  m1_loss_mask_2: 0.1589  m1_loss_dice_2: 1.213  m1_loss_ce_3: 0.4607  m1_loss_mask_3: 0.1585  m1_loss_dice_3: 1.171  m1_loss_ce_4: 0.4317  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.17  m1_loss_ce_5: 0.42  m1_loss_mask_5: 0.1555  m1_loss_dice_5: 1.202  m1_loss_ce_6: 0.3794  m1_loss_mask_6: 0.1538  m1_loss_dice_6: 1.074  m1_loss_ce_7: 0.3913  m1_loss_mask_7: 0.154  m1_loss_dice_7: 1.094  m1_loss_ce_8: 0.405  m1_loss_mask_8: 0.1527  m1_loss_dice_8: 1.148  m2_loss_ce: 0.4398  m2_loss_mask: 0.1472  m2_loss_dice: 1.108  m2_loss_ce_0: 0.5426  m2_loss_mask_0: 0.1757  m2_loss_dice_0: 1.337  m2_loss_ce_1: 0.6164  m2_loss_mask_1: 0.1602  m2_loss_dice_1: 1.289  m2_loss_ce_2: 0.5491  m2_loss_mask_2: 0.1548  m2_loss_dice_2: 1.202  m2_loss_ce_3: 0.476  m2_loss_mask_3: 0.1534  m2_loss_dice_3: 1.194  m2_loss_ce_4: 0.4497  m2_loss_mask_4: 0.1492  m2_loss_dice_4: 1.179  m2_loss_ce_5: 0.4478  m2_loss_mask_5: 0.1501  m2_loss_dice_5: 1.195  m2_loss_ce_6: 0.4262  m2_loss_mask_6: 0.1497  m2_loss_dice_6: 1.172  m2_loss_ce_7: 0.4489  m2_loss_mask_7: 0.1493  m2_loss_dice_7: 1.129  m2_loss_ce_8: 0.4359  m2_loss_mask_8: 0.1476  m2_loss_dice_8: 1.14    time: 1.6778  last_time: 1.6691  data_time: 0.0553  last_data_time: 0.0456   lr: 0.0001  max_mem: 36791M
[10/07 09:17:15] d2.utils.events INFO:  eta: 0:06:40  iter: 759  total_loss: 37  m1_loss_ce: 0.5015  m1_loss_mask: 0.1478  m1_loss_dice: 1.132  m1_loss_ce_0: 0.5443  m1_loss_mask_0: 0.1669  m1_loss_dice_0: 1.314  m1_loss_ce_1: 0.5435  m1_loss_mask_1: 0.1586  m1_loss_dice_1: 1.205  m1_loss_ce_2: 0.5196  m1_loss_mask_2: 0.154  m1_loss_dice_2: 1.226  m1_loss_ce_3: 0.4555  m1_loss_mask_3: 0.1476  m1_loss_dice_3: 1.201  m1_loss_ce_4: 0.4105  m1_loss_mask_4: 0.1508  m1_loss_dice_4: 1.153  m1_loss_ce_5: 0.4241  m1_loss_mask_5: 0.1447  m1_loss_dice_5: 1.119  m1_loss_ce_6: 0.412  m1_loss_mask_6: 0.143  m1_loss_dice_6: 1.11  m1_loss_ce_7: 0.421  m1_loss_mask_7: 0.1447  m1_loss_dice_7: 1.124  m1_loss_ce_8: 0.393  m1_loss_mask_8: 0.1504  m1_loss_dice_8: 1.153  m2_loss_ce: 0.4633  m2_loss_mask: 0.1556  m2_loss_dice: 1.176  m2_loss_ce_0: 0.6038  m2_loss_mask_0: 0.1763  m2_loss_dice_0: 1.394  m2_loss_ce_1: 0.6496  m2_loss_mask_1: 0.1796  m2_loss_dice_1: 1.271  m2_loss_ce_2: 0.5917  m2_loss_mask_2: 0.164  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.5233  m2_loss_mask_3: 0.1614  m2_loss_dice_3: 1.177  m2_loss_ce_4: 0.5224  m2_loss_mask_4: 0.1623  m2_loss_dice_4: 1.188  m2_loss_ce_5: 0.469  m2_loss_mask_5: 0.1483  m2_loss_dice_5: 1.166  m2_loss_ce_6: 0.5041  m2_loss_mask_6: 0.1547  m2_loss_dice_6: 1.158  m2_loss_ce_7: 0.4642  m2_loss_mask_7: 0.1544  m2_loss_dice_7: 1.173  m2_loss_ce_8: 0.4363  m2_loss_mask_8: 0.1542  m2_loss_dice_8: 1.179    time: 1.6779  last_time: 1.6606  data_time: 0.0529  last_data_time: 0.0364   lr: 0.0001  max_mem: 36791M
[10/07 09:17:49] d2.utils.events INFO:  eta: 0:06:07  iter: 779  total_loss: 36.41  m1_loss_ce: 0.4368  m1_loss_mask: 0.1402  m1_loss_dice: 1.122  m1_loss_ce_0: 0.4641  m1_loss_mask_0: 0.1606  m1_loss_dice_0: 1.285  m1_loss_ce_1: 0.532  m1_loss_mask_1: 0.1549  m1_loss_dice_1: 1.249  m1_loss_ce_2: 0.4995  m1_loss_mask_2: 0.1432  m1_loss_dice_2: 1.183  m1_loss_ce_3: 0.4258  m1_loss_mask_3: 0.1437  m1_loss_dice_3: 1.154  m1_loss_ce_4: 0.4077  m1_loss_mask_4: 0.1449  m1_loss_dice_4: 1.104  m1_loss_ce_5: 0.404  m1_loss_mask_5: 0.1427  m1_loss_dice_5: 1.143  m1_loss_ce_6: 0.4087  m1_loss_mask_6: 0.1423  m1_loss_dice_6: 1.102  m1_loss_ce_7: 0.4075  m1_loss_mask_7: 0.1396  m1_loss_dice_7: 1.132  m1_loss_ce_8: 0.3977  m1_loss_mask_8: 0.1394  m1_loss_dice_8: 1.133  m2_loss_ce: 0.4706  m2_loss_mask: 0.1402  m2_loss_dice: 1.179  m2_loss_ce_0: 0.5672  m2_loss_mask_0: 0.1691  m2_loss_dice_0: 1.356  m2_loss_ce_1: 0.6467  m2_loss_mask_1: 0.1538  m2_loss_dice_1: 1.28  m2_loss_ce_2: 0.5744  m2_loss_mask_2: 0.1492  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.4741  m2_loss_mask_3: 0.1451  m2_loss_dice_3: 1.195  m2_loss_ce_4: 0.4795  m2_loss_mask_4: 0.1402  m2_loss_dice_4: 1.19  m2_loss_ce_5: 0.4627  m2_loss_mask_5: 0.1418  m2_loss_dice_5: 1.179  m2_loss_ce_6: 0.4592  m2_loss_mask_6: 0.1416  m2_loss_dice_6: 1.186  m2_loss_ce_7: 0.4737  m2_loss_mask_7: 0.1379  m2_loss_dice_7: 1.179  m2_loss_ce_8: 0.4607  m2_loss_mask_8: 0.1383  m2_loss_dice_8: 1.15    time: 1.6783  last_time: 1.6862  data_time: 0.0532  last_data_time: 0.0521   lr: 0.0001  max_mem: 36791M
[10/07 09:18:22] d2.utils.events INFO:  eta: 0:05:34  iter: 799  total_loss: 37.43  m1_loss_ce: 0.4883  m1_loss_mask: 0.1433  m1_loss_dice: 1.111  m1_loss_ce_0: 0.4966  m1_loss_mask_0: 0.1718  m1_loss_dice_0: 1.305  m1_loss_ce_1: 0.5669  m1_loss_mask_1: 0.1544  m1_loss_dice_1: 1.234  m1_loss_ce_2: 0.4965  m1_loss_mask_2: 0.146  m1_loss_dice_2: 1.17  m1_loss_ce_3: 0.442  m1_loss_mask_3: 0.1481  m1_loss_dice_3: 1.138  m1_loss_ce_4: 0.4037  m1_loss_mask_4: 0.1476  m1_loss_dice_4: 1.141  m1_loss_ce_5: 0.412  m1_loss_mask_5: 0.1436  m1_loss_dice_5: 1.141  m1_loss_ce_6: 0.3906  m1_loss_mask_6: 0.1444  m1_loss_dice_6: 1.148  m1_loss_ce_7: 0.377  m1_loss_mask_7: 0.1467  m1_loss_dice_7: 1.096  m1_loss_ce_8: 0.4026  m1_loss_mask_8: 0.1446  m1_loss_dice_8: 1.096  m2_loss_ce: 0.4427  m2_loss_mask: 0.1495  m2_loss_dice: 1.172  m2_loss_ce_0: 0.5809  m2_loss_mask_0: 0.173  m2_loss_dice_0: 1.344  m2_loss_ce_1: 0.6418  m2_loss_mask_1: 0.1644  m2_loss_dice_1: 1.277  m2_loss_ce_2: 0.5503  m2_loss_mask_2: 0.1567  m2_loss_dice_2: 1.256  m2_loss_ce_3: 0.5053  m2_loss_mask_3: 0.1569  m2_loss_dice_3: 1.198  m2_loss_ce_4: 0.4476  m2_loss_mask_4: 0.1536  m2_loss_dice_4: 1.179  m2_loss_ce_5: 0.4693  m2_loss_mask_5: 0.1485  m2_loss_dice_5: 1.182  m2_loss_ce_6: 0.4377  m2_loss_mask_6: 0.1508  m2_loss_dice_6: 1.193  m2_loss_ce_7: 0.4376  m2_loss_mask_7: 0.1481  m2_loss_dice_7: 1.174  m2_loss_ce_8: 0.455  m2_loss_mask_8: 0.1496  m2_loss_dice_8: 1.145    time: 1.6782  last_time: 1.7498  data_time: 0.0520  last_data_time: 0.0387   lr: 0.0001  max_mem: 36791M
[10/07 09:18:56] d2.utils.events INFO:  eta: 0:05:00  iter: 819  total_loss: 36.13  m1_loss_ce: 0.4246  m1_loss_mask: 0.1542  m1_loss_dice: 1.086  m1_loss_ce_0: 0.5335  m1_loss_mask_0: 0.1777  m1_loss_dice_0: 1.317  m1_loss_ce_1: 0.5658  m1_loss_mask_1: 0.1647  m1_loss_dice_1: 1.214  m1_loss_ce_2: 0.4991  m1_loss_mask_2: 0.1575  m1_loss_dice_2: 1.144  m1_loss_ce_3: 0.4367  m1_loss_mask_3: 0.1568  m1_loss_dice_3: 1.147  m1_loss_ce_4: 0.4059  m1_loss_mask_4: 0.1533  m1_loss_dice_4: 1.12  m1_loss_ce_5: 0.402  m1_loss_mask_5: 0.1535  m1_loss_dice_5: 1.132  m1_loss_ce_6: 0.387  m1_loss_mask_6: 0.1538  m1_loss_dice_6: 1.113  m1_loss_ce_7: 0.3886  m1_loss_mask_7: 0.153  m1_loss_dice_7: 1.106  m1_loss_ce_8: 0.3987  m1_loss_mask_8: 0.1538  m1_loss_dice_8: 1.102  m2_loss_ce: 0.4454  m2_loss_mask: 0.1473  m2_loss_dice: 1.131  m2_loss_ce_0: 0.5521  m2_loss_mask_0: 0.1817  m2_loss_dice_0: 1.321  m2_loss_ce_1: 0.5996  m2_loss_mask_1: 0.1713  m2_loss_dice_1: 1.264  m2_loss_ce_2: 0.5245  m2_loss_mask_2: 0.1588  m2_loss_dice_2: 1.225  m2_loss_ce_3: 0.4875  m2_loss_mask_3: 0.1563  m2_loss_dice_3: 1.141  m2_loss_ce_4: 0.4674  m2_loss_mask_4: 0.1519  m2_loss_dice_4: 1.163  m2_loss_ce_5: 0.4309  m2_loss_mask_5: 0.1508  m2_loss_dice_5: 1.142  m2_loss_ce_6: 0.4555  m2_loss_mask_6: 0.1484  m2_loss_dice_6: 1.147  m2_loss_ce_7: 0.4681  m2_loss_mask_7: 0.1505  m2_loss_dice_7: 1.149  m2_loss_ce_8: 0.4495  m2_loss_mask_8: 0.1496  m2_loss_dice_8: 1.163    time: 1.6783  last_time: 1.6546  data_time: 0.0535  last_data_time: 0.0435   lr: 0.0001  max_mem: 36791M
[10/07 09:19:31] d2.utils.events INFO:  eta: 0:04:27  iter: 839  total_loss: 37.96  m1_loss_ce: 0.4802  m1_loss_mask: 0.1545  m1_loss_dice: 1.177  m1_loss_ce_0: 0.4892  m1_loss_mask_0: 0.1752  m1_loss_dice_0: 1.366  m1_loss_ce_1: 0.5586  m1_loss_mask_1: 0.1598  m1_loss_dice_1: 1.272  m1_loss_ce_2: 0.4765  m1_loss_mask_2: 0.1552  m1_loss_dice_2: 1.193  m1_loss_ce_3: 0.4224  m1_loss_mask_3: 0.1521  m1_loss_dice_3: 1.195  m1_loss_ce_4: 0.413  m1_loss_mask_4: 0.1532  m1_loss_dice_4: 1.175  m1_loss_ce_5: 0.3988  m1_loss_mask_5: 0.1516  m1_loss_dice_5: 1.207  m1_loss_ce_6: 0.3858  m1_loss_mask_6: 0.1502  m1_loss_dice_6: 1.16  m1_loss_ce_7: 0.3679  m1_loss_mask_7: 0.1522  m1_loss_dice_7: 1.145  m1_loss_ce_8: 0.3816  m1_loss_mask_8: 0.1569  m1_loss_dice_8: 1.151  m2_loss_ce: 0.4294  m2_loss_mask: 0.1585  m2_loss_dice: 1.23  m2_loss_ce_0: 0.517  m2_loss_mask_0: 0.1834  m2_loss_dice_0: 1.46  m2_loss_ce_1: 0.5844  m2_loss_mask_1: 0.1786  m2_loss_dice_1: 1.361  m2_loss_ce_2: 0.4991  m2_loss_mask_2: 0.1684  m2_loss_dice_2: 1.323  m2_loss_ce_3: 0.4549  m2_loss_mask_3: 0.1643  m2_loss_dice_3: 1.303  m2_loss_ce_4: 0.4453  m2_loss_mask_4: 0.1619  m2_loss_dice_4: 1.259  m2_loss_ce_5: 0.448  m2_loss_mask_5: 0.1605  m2_loss_dice_5: 1.285  m2_loss_ce_6: 0.4274  m2_loss_mask_6: 0.1584  m2_loss_dice_6: 1.23  m2_loss_ce_7: 0.4479  m2_loss_mask_7: 0.16  m2_loss_dice_7: 1.253  m2_loss_ce_8: 0.4197  m2_loss_mask_8: 0.16  m2_loss_dice_8: 1.218    time: 1.6794  last_time: 1.6783  data_time: 0.0755  last_data_time: 0.0705   lr: 0.0001  max_mem: 36791M
[10/07 09:20:04] d2.utils.events INFO:  eta: 0:03:54  iter: 859  total_loss: 37.08  m1_loss_ce: 0.4964  m1_loss_mask: 0.146  m1_loss_dice: 1.103  m1_loss_ce_0: 0.496  m1_loss_mask_0: 0.169  m1_loss_dice_0: 1.318  m1_loss_ce_1: 0.5832  m1_loss_mask_1: 0.1577  m1_loss_dice_1: 1.214  m1_loss_ce_2: 0.5162  m1_loss_mask_2: 0.1521  m1_loss_dice_2: 1.184  m1_loss_ce_3: 0.4534  m1_loss_mask_3: 0.1477  m1_loss_dice_3: 1.14  m1_loss_ce_4: 0.4452  m1_loss_mask_4: 0.1488  m1_loss_dice_4: 1.118  m1_loss_ce_5: 0.4316  m1_loss_mask_5: 0.1478  m1_loss_dice_5: 1.133  m1_loss_ce_6: 0.4122  m1_loss_mask_6: 0.1484  m1_loss_dice_6: 1.132  m1_loss_ce_7: 0.4286  m1_loss_mask_7: 0.1452  m1_loss_dice_7: 1.086  m1_loss_ce_8: 0.4232  m1_loss_mask_8: 0.1467  m1_loss_dice_8: 1.128  m2_loss_ce: 0.4442  m2_loss_mask: 0.1494  m2_loss_dice: 1.167  m2_loss_ce_0: 0.5699  m2_loss_mask_0: 0.1773  m2_loss_dice_0: 1.331  m2_loss_ce_1: 0.614  m2_loss_mask_1: 0.1618  m2_loss_dice_1: 1.308  m2_loss_ce_2: 0.5814  m2_loss_mask_2: 0.1556  m2_loss_dice_2: 1.241  m2_loss_ce_3: 0.4929  m2_loss_mask_3: 0.1539  m2_loss_dice_3: 1.21  m2_loss_ce_4: 0.4856  m2_loss_mask_4: 0.1513  m2_loss_dice_4: 1.183  m2_loss_ce_5: 0.4629  m2_loss_mask_5: 0.1497  m2_loss_dice_5: 1.18  m2_loss_ce_6: 0.4849  m2_loss_mask_6: 0.1485  m2_loss_dice_6: 1.156  m2_loss_ce_7: 0.4344  m2_loss_mask_7: 0.1486  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.4414  m2_loss_mask_8: 0.1498  m2_loss_dice_8: 1.173    time: 1.6795  last_time: 1.6556  data_time: 0.0563  last_data_time: 0.0514   lr: 0.0001  max_mem: 36791M
[10/07 09:20:38] d2.utils.events INFO:  eta: 0:03:20  iter: 879  total_loss: 35.46  m1_loss_ce: 0.427  m1_loss_mask: 0.1401  m1_loss_dice: 1.135  m1_loss_ce_0: 0.4996  m1_loss_mask_0: 0.1697  m1_loss_dice_0: 1.334  m1_loss_ce_1: 0.5464  m1_loss_mask_1: 0.1546  m1_loss_dice_1: 1.201  m1_loss_ce_2: 0.4759  m1_loss_mask_2: 0.1423  m1_loss_dice_2: 1.132  m1_loss_ce_3: 0.4329  m1_loss_mask_3: 0.1418  m1_loss_dice_3: 1.161  m1_loss_ce_4: 0.3825  m1_loss_mask_4: 0.1416  m1_loss_dice_4: 1.083  m1_loss_ce_5: 0.4069  m1_loss_mask_5: 0.1406  m1_loss_dice_5: 1.095  m1_loss_ce_6: 0.3622  m1_loss_mask_6: 0.1385  m1_loss_dice_6: 1.098  m1_loss_ce_7: 0.3644  m1_loss_mask_7: 0.1402  m1_loss_dice_7: 1.13  m1_loss_ce_8: 0.3777  m1_loss_mask_8: 0.1411  m1_loss_dice_8: 1.096  m2_loss_ce: 0.4334  m2_loss_mask: 0.1409  m2_loss_dice: 1.178  m2_loss_ce_0: 0.5202  m2_loss_mask_0: 0.1693  m2_loss_dice_0: 1.371  m2_loss_ce_1: 0.6223  m2_loss_mask_1: 0.1581  m2_loss_dice_1: 1.3  m2_loss_ce_2: 0.5334  m2_loss_mask_2: 0.1511  m2_loss_dice_2: 1.205  m2_loss_ce_3: 0.4829  m2_loss_mask_3: 0.1487  m2_loss_dice_3: 1.156  m2_loss_ce_4: 0.4541  m2_loss_mask_4: 0.1442  m2_loss_dice_4: 1.168  m2_loss_ce_5: 0.4653  m2_loss_mask_5: 0.1449  m2_loss_dice_5: 1.166  m2_loss_ce_6: 0.4319  m2_loss_mask_6: 0.1408  m2_loss_dice_6: 1.142  m2_loss_ce_7: 0.4399  m2_loss_mask_7: 0.1423  m2_loss_dice_7: 1.17  m2_loss_ce_8: 0.4174  m2_loss_mask_8: 0.143  m2_loss_dice_8: 1.154    time: 1.6798  last_time: 1.6703  data_time: 0.0536  last_data_time: 0.0531   lr: 0.0001  max_mem: 36791M
[10/07 09:21:12] d2.utils.events INFO:  eta: 0:02:47  iter: 899  total_loss: 37.28  m1_loss_ce: 0.4343  m1_loss_mask: 0.147  m1_loss_dice: 1.153  m1_loss_ce_0: 0.5386  m1_loss_mask_0: 0.1691  m1_loss_dice_0: 1.349  m1_loss_ce_1: 0.5504  m1_loss_mask_1: 0.1641  m1_loss_dice_1: 1.252  m1_loss_ce_2: 0.5157  m1_loss_mask_2: 0.1588  m1_loss_dice_2: 1.199  m1_loss_ce_3: 0.4552  m1_loss_mask_3: 0.1541  m1_loss_dice_3: 1.178  m1_loss_ce_4: 0.4282  m1_loss_mask_4: 0.1512  m1_loss_dice_4: 1.168  m1_loss_ce_5: 0.3905  m1_loss_mask_5: 0.1488  m1_loss_dice_5: 1.134  m1_loss_ce_6: 0.4107  m1_loss_mask_6: 0.1474  m1_loss_dice_6: 1.138  m1_loss_ce_7: 0.3969  m1_loss_mask_7: 0.1489  m1_loss_dice_7: 1.149  m1_loss_ce_8: 0.4005  m1_loss_mask_8: 0.15  m1_loss_dice_8: 1.128  m2_loss_ce: 0.446  m2_loss_mask: 0.1577  m2_loss_dice: 1.142  m2_loss_ce_0: 0.5702  m2_loss_mask_0: 0.1837  m2_loss_dice_0: 1.394  m2_loss_ce_1: 0.5947  m2_loss_mask_1: 0.1721  m2_loss_dice_1: 1.278  m2_loss_ce_2: 0.5435  m2_loss_mask_2: 0.1641  m2_loss_dice_2: 1.231  m2_loss_ce_3: 0.4843  m2_loss_mask_3: 0.1619  m2_loss_dice_3: 1.17  m2_loss_ce_4: 0.4494  m2_loss_mask_4: 0.16  m2_loss_dice_4: 1.21  m2_loss_ce_5: 0.4388  m2_loss_mask_5: 0.1579  m2_loss_dice_5: 1.203  m2_loss_ce_6: 0.4385  m2_loss_mask_6: 0.1577  m2_loss_dice_6: 1.19  m2_loss_ce_7: 0.4464  m2_loss_mask_7: 0.1554  m2_loss_dice_7: 1.164  m2_loss_ce_8: 0.4161  m2_loss_mask_8: 0.1572  m2_loss_dice_8: 1.182    time: 1.6802  last_time: 1.6964  data_time: 0.0626  last_data_time: 0.0714   lr: 0.0001  max_mem: 36791M
[10/07 09:21:46] d2.utils.events INFO:  eta: 0:02:13  iter: 919  total_loss: 38.48  m1_loss_ce: 0.5066  m1_loss_mask: 0.159  m1_loss_dice: 1.197  m1_loss_ce_0: 0.5423  m1_loss_mask_0: 0.1706  m1_loss_dice_0: 1.393  m1_loss_ce_1: 0.61  m1_loss_mask_1: 0.1667  m1_loss_dice_1: 1.318  m1_loss_ce_2: 0.5505  m1_loss_mask_2: 0.1625  m1_loss_dice_2: 1.263  m1_loss_ce_3: 0.4865  m1_loss_mask_3: 0.1547  m1_loss_dice_3: 1.212  m1_loss_ce_4: 0.4418  m1_loss_mask_4: 0.1578  m1_loss_dice_4: 1.243  m1_loss_ce_5: 0.4525  m1_loss_mask_5: 0.1547  m1_loss_dice_5: 1.201  m1_loss_ce_6: 0.4548  m1_loss_mask_6: 0.15  m1_loss_dice_6: 1.159  m1_loss_ce_7: 0.4271  m1_loss_mask_7: 0.1564  m1_loss_dice_7: 1.182  m1_loss_ce_8: 0.4328  m1_loss_mask_8: 0.1563  m1_loss_dice_8: 1.156  m2_loss_ce: 0.4605  m2_loss_mask: 0.1548  m2_loss_dice: 1.206  m2_loss_ce_0: 0.582  m2_loss_mask_0: 0.1857  m2_loss_dice_0: 1.428  m2_loss_ce_1: 0.6756  m2_loss_mask_1: 0.1643  m2_loss_dice_1: 1.331  m2_loss_ce_2: 0.5782  m2_loss_mask_2: 0.1597  m2_loss_dice_2: 1.261  m2_loss_ce_3: 0.5306  m2_loss_mask_3: 0.1588  m2_loss_dice_3: 1.227  m2_loss_ce_4: 0.4918  m2_loss_mask_4: 0.1552  m2_loss_dice_4: 1.231  m2_loss_ce_5: 0.5164  m2_loss_mask_5: 0.1564  m2_loss_dice_5: 1.219  m2_loss_ce_6: 0.485  m2_loss_mask_6: 0.154  m2_loss_dice_6: 1.204  m2_loss_ce_7: 0.467  m2_loss_mask_7: 0.1556  m2_loss_dice_7: 1.215  m2_loss_ce_8: 0.4705  m2_loss_mask_8: 0.1539  m2_loss_dice_8: 1.236    time: 1.6804  last_time: 1.6420  data_time: 0.0485  last_data_time: 0.0432   lr: 0.0001  max_mem: 36791M
[10/07 09:22:20] d2.utils.events INFO:  eta: 0:01:40  iter: 939  total_loss: 36.68  m1_loss_ce: 0.4845  m1_loss_mask: 0.1607  m1_loss_dice: 1.124  m1_loss_ce_0: 0.5095  m1_loss_mask_0: 0.1818  m1_loss_dice_0: 1.3  m1_loss_ce_1: 0.5848  m1_loss_mask_1: 0.1734  m1_loss_dice_1: 1.232  m1_loss_ce_2: 0.4839  m1_loss_mask_2: 0.1636  m1_loss_dice_2: 1.197  m1_loss_ce_3: 0.4579  m1_loss_mask_3: 0.1623  m1_loss_dice_3: 1.138  m1_loss_ce_4: 0.4224  m1_loss_mask_4: 0.1644  m1_loss_dice_4: 1.113  m1_loss_ce_5: 0.4008  m1_loss_mask_5: 0.16  m1_loss_dice_5: 1.119  m1_loss_ce_6: 0.4258  m1_loss_mask_6: 0.1635  m1_loss_dice_6: 1.117  m1_loss_ce_7: 0.399  m1_loss_mask_7: 0.1625  m1_loss_dice_7: 1.13  m1_loss_ce_8: 0.4264  m1_loss_mask_8: 0.1575  m1_loss_dice_8: 1.121  m2_loss_ce: 0.456  m2_loss_mask: 0.1641  m2_loss_dice: 1.147  m2_loss_ce_0: 0.5526  m2_loss_mask_0: 0.1972  m2_loss_dice_0: 1.348  m2_loss_ce_1: 0.612  m2_loss_mask_1: 0.1789  m2_loss_dice_1: 1.298  m2_loss_ce_2: 0.5379  m2_loss_mask_2: 0.1753  m2_loss_dice_2: 1.236  m2_loss_ce_3: 0.4906  m2_loss_mask_3: 0.1742  m2_loss_dice_3: 1.178  m2_loss_ce_4: 0.4823  m2_loss_mask_4: 0.1689  m2_loss_dice_4: 1.197  m2_loss_ce_5: 0.4982  m2_loss_mask_5: 0.1661  m2_loss_dice_5: 1.161  m2_loss_ce_6: 0.4564  m2_loss_mask_6: 0.1634  m2_loss_dice_6: 1.161  m2_loss_ce_7: 0.4718  m2_loss_mask_7: 0.165  m2_loss_dice_7: 1.167  m2_loss_ce_8: 0.4702  m2_loss_mask_8: 0.163  m2_loss_dice_8: 1.16    time: 1.6803  last_time: 1.6612  data_time: 0.0599  last_data_time: 0.0580   lr: 0.0001  max_mem: 36791M
[10/07 09:22:54] d2.utils.events INFO:  eta: 0:01:06  iter: 959  total_loss: 37.68  m1_loss_ce: 0.5331  m1_loss_mask: 0.1501  m1_loss_dice: 1.14  m1_loss_ce_0: 0.5163  m1_loss_mask_0: 0.1744  m1_loss_dice_0: 1.35  m1_loss_ce_1: 0.5606  m1_loss_mask_1: 0.1628  m1_loss_dice_1: 1.245  m1_loss_ce_2: 0.5542  m1_loss_mask_2: 0.1545  m1_loss_dice_2: 1.225  m1_loss_ce_3: 0.493  m1_loss_mask_3: 0.1537  m1_loss_dice_3: 1.189  m1_loss_ce_4: 0.4311  m1_loss_mask_4: 0.153  m1_loss_dice_4: 1.164  m1_loss_ce_5: 0.4231  m1_loss_mask_5: 0.1485  m1_loss_dice_5: 1.162  m1_loss_ce_6: 0.4527  m1_loss_mask_6: 0.1512  m1_loss_dice_6: 1.163  m1_loss_ce_7: 0.4511  m1_loss_mask_7: 0.1496  m1_loss_dice_7: 1.132  m1_loss_ce_8: 0.4153  m1_loss_mask_8: 0.1492  m1_loss_dice_8: 1.126  m2_loss_ce: 0.4871  m2_loss_mask: 0.156  m2_loss_dice: 1.18  m2_loss_ce_0: 0.5691  m2_loss_mask_0: 0.1847  m2_loss_dice_0: 1.381  m2_loss_ce_1: 0.6138  m2_loss_mask_1: 0.1736  m2_loss_dice_1: 1.335  m2_loss_ce_2: 0.5699  m2_loss_mask_2: 0.1649  m2_loss_dice_2: 1.251  m2_loss_ce_3: 0.5175  m2_loss_mask_3: 0.1627  m2_loss_dice_3: 1.198  m2_loss_ce_4: 0.4665  m2_loss_mask_4: 0.1588  m2_loss_dice_4: 1.185  m2_loss_ce_5: 0.4734  m2_loss_mask_5: 0.1581  m2_loss_dice_5: 1.194  m2_loss_ce_6: 0.4722  m2_loss_mask_6: 0.1603  m2_loss_dice_6: 1.21  m2_loss_ce_7: 0.4701  m2_loss_mask_7: 0.1565  m2_loss_dice_7: 1.181  m2_loss_ce_8: 0.4674  m2_loss_mask_8: 0.1558  m2_loss_dice_8: 1.195    time: 1.6804  last_time: 1.6681  data_time: 0.0507  last_data_time: 0.0565   lr: 0.0001  max_mem: 36791M
[10/07 09:23:27] d2.utils.events INFO:  eta: 0:00:33  iter: 979  total_loss: 36.22  m1_loss_ce: 0.4535  m1_loss_mask: 0.1508  m1_loss_dice: 1.121  m1_loss_ce_0: 0.5344  m1_loss_mask_0: 0.1767  m1_loss_dice_0: 1.252  m1_loss_ce_1: 0.5311  m1_loss_mask_1: 0.1588  m1_loss_dice_1: 1.214  m1_loss_ce_2: 0.4781  m1_loss_mask_2: 0.1562  m1_loss_dice_2: 1.179  m1_loss_ce_3: 0.4223  m1_loss_mask_3: 0.1512  m1_loss_dice_3: 1.136  m1_loss_ce_4: 0.4042  m1_loss_mask_4: 0.1507  m1_loss_dice_4: 1.087  m1_loss_ce_5: 0.3844  m1_loss_mask_5: 0.1509  m1_loss_dice_5: 1.117  m1_loss_ce_6: 0.3684  m1_loss_mask_6: 0.1523  m1_loss_dice_6: 1.113  m1_loss_ce_7: 0.3762  m1_loss_mask_7: 0.1513  m1_loss_dice_7: 1.088  m1_loss_ce_8: 0.3525  m1_loss_mask_8: 0.1514  m1_loss_dice_8: 1.073  m2_loss_ce: 0.4058  m2_loss_mask: 0.1516  m2_loss_dice: 1.13  m2_loss_ce_0: 0.5457  m2_loss_mask_0: 0.1914  m2_loss_dice_0: 1.316  m2_loss_ce_1: 0.598  m2_loss_mask_1: 0.166  m2_loss_dice_1: 1.263  m2_loss_ce_2: 0.5165  m2_loss_mask_2: 0.1616  m2_loss_dice_2: 1.202  m2_loss_ce_3: 0.4577  m2_loss_mask_3: 0.1565  m2_loss_dice_3: 1.169  m2_loss_ce_4: 0.4257  m2_loss_mask_4: 0.1527  m2_loss_dice_4: 1.145  m2_loss_ce_5: 0.4206  m2_loss_mask_5: 0.1507  m2_loss_dice_5: 1.136  m2_loss_ce_6: 0.4051  m2_loss_mask_6: 0.1499  m2_loss_dice_6: 1.113  m2_loss_ce_7: 0.4255  m2_loss_mask_7: 0.1506  m2_loss_dice_7: 1.132  m2_loss_ce_8: 0.4074  m2_loss_mask_8: 0.1513  m2_loss_dice_8: 1.147    time: 1.6804  last_time: 1.6793  data_time: 0.0597  last_data_time: 0.0539   lr: 0.0001  max_mem: 36791M
[10/07 09:24:01] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Combined/cl_6_9_i_n_008_1000_2_1000_1000_L1_L2_Uncertainty/model_final.pth
[10/07 09:24:06] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 34.29  m1_loss_ce: 0.4277  m1_loss_mask: 0.1577  m1_loss_dice: 1.074  m1_loss_ce_0: 0.4792  m1_loss_mask_0: 0.1848  m1_loss_dice_0: 1.264  m1_loss_ce_1: 0.5598  m1_loss_mask_1: 0.1737  m1_loss_dice_1: 1.22  m1_loss_ce_2: 0.4919  m1_loss_mask_2: 0.1645  m1_loss_dice_2: 1.132  m1_loss_ce_3: 0.4371  m1_loss_mask_3: 0.1631  m1_loss_dice_3: 1.065  m1_loss_ce_4: 0.3953  m1_loss_mask_4: 0.1595  m1_loss_dice_4: 1.083  m1_loss_ce_5: 0.3814  m1_loss_mask_5: 0.1591  m1_loss_dice_5: 1.084  m1_loss_ce_6: 0.3866  m1_loss_mask_6: 0.1569  m1_loss_dice_6: 1.072  m1_loss_ce_7: 0.3568  m1_loss_mask_7: 0.159  m1_loss_dice_7: 1.086  m1_loss_ce_8: 0.3524  m1_loss_mask_8: 0.1586  m1_loss_dice_8: 1.055  m2_loss_ce: 0.3815  m2_loss_mask: 0.1599  m2_loss_dice: 1.094  m2_loss_ce_0: 0.5103  m2_loss_mask_0: 0.1935  m2_loss_dice_0: 1.306  m2_loss_ce_1: 0.5761  m2_loss_mask_1: 0.1835  m2_loss_dice_1: 1.22  m2_loss_ce_2: 0.4755  m2_loss_mask_2: 0.1836  m2_loss_dice_2: 1.172  m2_loss_ce_3: 0.452  m2_loss_mask_3: 0.1735  m2_loss_dice_3: 1.175  m2_loss_ce_4: 0.4235  m2_loss_mask_4: 0.1722  m2_loss_dice_4: 1.135  m2_loss_ce_5: 0.4247  m2_loss_mask_5: 0.1652  m2_loss_dice_5: 1.114  m2_loss_ce_6: 0.4069  m2_loss_mask_6: 0.1644  m2_loss_dice_6: 1.13  m2_loss_ce_7: 0.404  m2_loss_mask_7: 0.1581  m2_loss_dice_7: 1.124  m2_loss_ce_8: 0.4168  m2_loss_mask_8: 0.1592  m2_loss_dice_8: 1.153    time: 1.6802  last_time: 1.6902  data_time: 0.0494  last_data_time: 0.0502   lr: 0.0001  max_mem: 36791M
[10/07 09:24:07] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:27:56 (1.6802 s / it)
[10/07 09:24:07] d2.engine.hooks INFO: Total training time: 0:28:07 (0:00:11 on hooks)
[10/07 09:24:07] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/07 09:24:07] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/07 09:24:07] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/07 09:24:07] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/07 09:24:07] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/07 09:25:50] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalilm6gr8_ ...
[10/07 09:26:53] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 62.881 | 81.382 | 76.310 |      19       |
| Things | 55.832 | 80.354 | 69.117 |       8       |
| Stuff  | 68.008 | 82.129 | 81.541 |      11       |
[10/07 09:26:53] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.485 | 97.788 | 99.690 |     Stuff     |
| class_8  | 75.036 | 84.923 | 88.357 |     Stuff     |
| class_11 | 88.423 | 90.269 | 97.955 |     Stuff     |
| class_12 | 46.187 | 78.920 | 58.524 |     Stuff     |
| class_13 | 43.949 | 75.146 | 58.486 |     Stuff     |
| class_17 | 56.047 | 66.496 | 84.286 |     Stuff     |
| class_19 | 52.088 | 71.291 | 73.064 |     Stuff     |
| class_20 | 70.199 | 78.868 | 89.007 |     Stuff     |
| class_21 | 89.833 | 90.765 | 98.973 |     Stuff     |
| class_22 | 40.605 | 76.754 | 52.903 |     Stuff     |
| class_23 | 88.237 | 92.200 | 95.701 |     Stuff     |
| class_24 | 56.009 | 77.749 | 72.039 |    Things     |
| class_25 | 51.150 | 73.745 | 69.360 |    Things     |
| class_26 | 66.966 | 83.577 | 80.125 |    Things     |
| class_27 | 54.695 | 85.130 | 64.249 |    Things     |
| class_28 | 72.354 | 88.840 | 81.443 |    Things     |
| class_31 | 59.338 | 86.725 | 68.421 |    Things     |
| class_32 | 41.216 | 75.004 | 54.952 |    Things     |
| class_33 | 44.930 | 72.061 | 62.350 |    Things     |
[10/07 09:26:53] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/07 09:26:53] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/07 09:26:53] d2.evaluation.testing INFO: copypaste: 62.8814,81.3817,76.3097,55.8323,80.3539,69.1173,68.0081,82.1291,81.5406,97.4847,97.7881,99.6898,75.0357,84.9234,88.3569,88.4231,90.2691,97.9550,46.1872,78.9199,58.5242,43.9495,75.1457,58.4856,56.0468,66.4962,84.2857,52.0879,71.2909,73.0640,70.1986,78.8682,89.0075,89.8333,90.7652,98.9733,40.6052,76.7537,52.9032,88.2369,92.2002,95.7014,56.0094,77.7492,72.0385,51.1496,73.7455,69.3596,66.9657,83.5767,80.1248,54.6949,85.1299,64.2487,72.3544,88.8402,81.4433,59.3380,86.7248,68.4211,41.2161,75.0038,54.9521,44.9305,72.0613,62.3503
