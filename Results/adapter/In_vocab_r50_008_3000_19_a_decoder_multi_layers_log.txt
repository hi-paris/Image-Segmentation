[10/17 16:57:25] detectron2 INFO: Rank of current process: 0. World size: 1
[10/17 16:57:26] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/17 16:57:26] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_multi_layers.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/17 16:57:26] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_multi_layers.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_multi_layers
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/17 16:57:26] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_multi_layers
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/17 16:57:27] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_multi_layers/config.yaml
[10/17 16:57:27] d2.utils.env INFO: Using a generated random seed 27600395
[10/17 16:57:30] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (conv1): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv2): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU()
  (mask_pooling): MaskPooling()
  (decoder_adapter_res2): DecoderAdapter(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (norm1): LayerNorm((64, 1, 1), eps=1e-05, elementwise_affine=True)
    (norm2): LayerNorm((256, 1, 1), eps=1e-05, elementwise_affine=True)
    (relu): ReLU()
  )
  (decoder_adapter_res3): DecoderAdapter(
    (conv1): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
    (norm1): LayerNorm((64, 1, 1), eps=1e-05, elementwise_affine=True)
    (norm2): LayerNorm((512, 1, 1), eps=1e-05, elementwise_affine=True)
    (relu): ReLU()
  )
  (decoder_adapter_res4): DecoderAdapter(
    (conv1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
    (norm1): LayerNorm((64, 1, 1), eps=1e-05, elementwise_affine=True)
    (norm2): LayerNorm((1024, 1, 1), eps=1e-05, elementwise_affine=True)
    (relu): ReLU()
  )
  (void_embedding): Embedding(1, 1024)
)
[10/17 16:57:30] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/17 16:57:30] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/17 16:57:30] d2.data.build INFO: Using training sampler TrainingSampler
[10/17 16:57:30] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 16:57:30] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/17 16:57:30] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/17 16:57:30] d2.data.build INFO: Making batched data loader with batch_size=8
[10/17 16:57:30] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/17 16:57:30] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 16:57:30] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 16:57:30] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/17 16:57:30] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mbn1.{bias, running_mean, running_var, weight}[0m
[34mbn2.{bias, running_mean, running_var, weight}[0m
[34mconv1.{bias, weight}[0m
[34mconv2.{bias, weight}[0m
[34mcriterion.empty_weight[0m
[34mdecoder_adapter_res2.conv1.{bias, weight}[0m
[34mdecoder_adapter_res2.conv2.{bias, weight}[0m
[34mdecoder_adapter_res2.norm1.{bias, weight}[0m
[34mdecoder_adapter_res2.norm2.{bias, weight}[0m
[34mdecoder_adapter_res3.conv1.{bias, weight}[0m
[34mdecoder_adapter_res3.conv2.{bias, weight}[0m
[34mdecoder_adapter_res3.norm1.{bias, weight}[0m
[34mdecoder_adapter_res3.norm2.{bias, weight}[0m
[34mdecoder_adapter_res4.conv1.{bias, weight}[0m
[34mdecoder_adapter_res4.conv2.{bias, weight}[0m
[34mdecoder_adapter_res4.norm1.{bias, weight}[0m
[34mdecoder_adapter_res4.norm2.{bias, weight}[0m
[10/17 16:57:30] d2.engine.train_loop INFO: Starting training from iteration 0
[10/17 16:57:31] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2/engine/defaults.py", line 498, in run_step
    self._trainer.run_step()
  File "/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2/engine/train_loop.py", line 494, in run_step
    loss_dict = self.model(data)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip/fcclip.py", line 318, in forward
    res2 = self.decoder_adapter_res2(features['res2'])
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip/fcclip.py", line 57, in forward
    x = self.norm1(x)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/normalization.py", line 202, in forward
    return F.layer_norm(
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/functional.py", line 2576, in layer_norm
    return torch.layer_norm(input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: Given normalized_shape=[64, 1, 1], expected input with shape [*, 64, 1, 1], but got input of size[8, 64, 168, 336]
[10/17 16:57:31] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[10/17 16:57:31] d2.utils.events INFO:  iter: 0       lr: N/A  max_mem: 1571M
[10/17 16:59:05] detectron2 INFO: Rank of current process: 0. World size: 1
[10/17 16:59:06] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/17 16:59:06] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_multi_layers.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/17 16:59:06] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_multi_layers.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_multi_layers
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/17 16:59:06] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_multi_layers
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/17 16:59:06] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_multi_layers/config.yaml
[10/17 16:59:06] d2.utils.env INFO: Using a generated random seed 6979642
[10/17 16:59:09] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (conv1): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv2): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU()
  (mask_pooling): MaskPooling()
  (decoder_adapter_res2): DecoderAdapter(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (norm2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (decoder_adapter_res3): DecoderAdapter(
    (conv1): Conv2d(512, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 512, kernel_size=(1, 1), stride=(1, 1))
    (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (norm2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (decoder_adapter_res4): DecoderAdapter(
    (conv1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
    (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (norm2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
  (void_embedding): Embedding(1, 1024)
)
[10/17 16:59:09] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/17 16:59:10] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/17 16:59:10] d2.data.build INFO: Using training sampler TrainingSampler
[10/17 16:59:10] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 16:59:10] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/17 16:59:10] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/17 16:59:10] d2.data.build INFO: Making batched data loader with batch_size=8
[10/17 16:59:10] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/17 16:59:10] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 16:59:10] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 16:59:10] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/17 16:59:10] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mbn1.{bias, running_mean, running_var, weight}[0m
[34mbn2.{bias, running_mean, running_var, weight}[0m
[34mconv1.{bias, weight}[0m
[34mconv2.{bias, weight}[0m
[34mcriterion.empty_weight[0m
[34mdecoder_adapter_res2.conv1.{bias, weight}[0m
[34mdecoder_adapter_res2.conv2.{bias, weight}[0m
[34mdecoder_adapter_res2.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res2.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res3.conv1.{bias, weight}[0m
[34mdecoder_adapter_res3.conv2.{bias, weight}[0m
[34mdecoder_adapter_res3.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res3.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res4.conv1.{bias, weight}[0m
[34mdecoder_adapter_res4.conv2.{bias, weight}[0m
[34mdecoder_adapter_res4.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res4.norm2.{bias, running_mean, running_var, weight}[0m
[10/17 16:59:10] d2.engine.train_loop INFO: Starting training from iteration 0
[10/17 16:59:33] d2.utils.events INFO:  eta: 0:51:53  iter: 19  total_loss: 30.6  loss_ce: 1.116  loss_mask: 0.2781  loss_dice: 1.575  loss_ce_0: 1.322  loss_mask_0: 0.3057  loss_dice_0: 1.846  loss_ce_1: 1.293  loss_mask_1: 0.3027  loss_dice_1: 1.688  loss_ce_2: 1.123  loss_mask_2: 0.2926  loss_dice_2: 1.652  loss_ce_3: 1.121  loss_mask_3: 0.2795  loss_dice_3: 1.56  loss_ce_4: 1.134  loss_mask_4: 0.2799  loss_dice_4: 1.596  loss_ce_5: 1.053  loss_mask_5: 0.2821  loss_dice_5: 1.556  loss_ce_6: 1.112  loss_mask_6: 0.2833  loss_dice_6: 1.54  loss_ce_7: 1.082  loss_mask_7: 0.2792  loss_dice_7: 1.543  loss_ce_8: 1.09  loss_mask_8: 0.2806  loss_dice_8: 1.526    time: 1.0526  last_time: 1.0033  data_time: 0.0903  last_data_time: 0.0526   lr: 0.0001  max_mem: 31734M
[10/17 16:59:54] d2.utils.events INFO:  eta: 0:50:51  iter: 39  total_loss: 25.79  loss_ce: 0.7928  loss_mask: 0.2437  loss_dice: 1.367  loss_ce_0: 0.8237  loss_mask_0: 0.2857  loss_dice_0: 1.664  loss_ce_1: 0.9851  loss_mask_1: 0.2649  loss_dice_1: 1.518  loss_ce_2: 0.889  loss_mask_2: 0.25  loss_dice_2: 1.475  loss_ce_3: 0.821  loss_mask_3: 0.2446  loss_dice_3: 1.404  loss_ce_4: 0.7901  loss_mask_4: 0.2481  loss_dice_4: 1.412  loss_ce_5: 0.7611  loss_mask_5: 0.2499  loss_dice_5: 1.388  loss_ce_6: 0.775  loss_mask_6: 0.2445  loss_dice_6: 1.354  loss_ce_7: 0.7426  loss_mask_7: 0.2468  loss_dice_7: 1.386  loss_ce_8: 0.762  loss_mask_8: 0.2449  loss_dice_8: 1.369    time: 1.0370  last_time: 1.0098  data_time: 0.0552  last_data_time: 0.0689   lr: 0.0001  max_mem: 32280M
[10/17 17:00:15] d2.utils.events INFO:  eta: 0:50:44  iter: 59  total_loss: 25.28  loss_ce: 0.718  loss_mask: 0.2156  loss_dice: 1.428  loss_ce_0: 0.7867  loss_mask_0: 0.2516  loss_dice_0: 1.785  loss_ce_1: 0.8634  loss_mask_1: 0.2302  loss_dice_1: 1.627  loss_ce_2: 0.8126  loss_mask_2: 0.2236  loss_dice_2: 1.521  loss_ce_3: 0.7463  loss_mask_3: 0.2238  loss_dice_3: 1.49  loss_ce_4: 0.7316  loss_mask_4: 0.2194  loss_dice_4: 1.45  loss_ce_5: 0.705  loss_mask_5: 0.2176  loss_dice_5: 1.492  loss_ce_6: 0.7241  loss_mask_6: 0.2184  loss_dice_6: 1.435  loss_ce_7: 0.6885  loss_mask_7: 0.2164  loss_dice_7: 1.439  loss_ce_8: 0.7086  loss_mask_8: 0.2179  loss_dice_8: 1.435    time: 1.0387  last_time: 1.0903  data_time: 0.0613  last_data_time: 0.0581   lr: 0.0001  max_mem: 32495M
[10/17 17:00:36] d2.utils.events INFO:  eta: 0:50:15  iter: 79  total_loss: 22.53  loss_ce: 0.601  loss_mask: 0.2155  loss_dice: 1.308  loss_ce_0: 0.6947  loss_mask_0: 0.2535  loss_dice_0: 1.568  loss_ce_1: 0.837  loss_mask_1: 0.2329  loss_dice_1: 1.458  loss_ce_2: 0.7252  loss_mask_2: 0.2268  loss_dice_2: 1.396  loss_ce_3: 0.6545  loss_mask_3: 0.2238  loss_dice_3: 1.346  loss_ce_4: 0.6498  loss_mask_4: 0.2221  loss_dice_4: 1.301  loss_ce_5: 0.607  loss_mask_5: 0.2186  loss_dice_5: 1.327  loss_ce_6: 0.6156  loss_mask_6: 0.217  loss_dice_6: 1.288  loss_ce_7: 0.6153  loss_mask_7: 0.2173  loss_dice_7: 1.297  loss_ce_8: 0.5915  loss_mask_8: 0.2181  loss_dice_8: 1.3    time: 1.0361  last_time: 1.0538  data_time: 0.0597  last_data_time: 0.0650   lr: 0.0001  max_mem: 32495M
[10/17 17:00:57] d2.utils.events INFO:  eta: 0:50:04  iter: 99  total_loss: 23.24  loss_ce: 0.6033  loss_mask: 0.2  loss_dice: 1.372  loss_ce_0: 0.6806  loss_mask_0: 0.2297  loss_dice_0: 1.633  loss_ce_1: 0.7874  loss_mask_1: 0.2201  loss_dice_1: 1.53  loss_ce_2: 0.7403  loss_mask_2: 0.2087  loss_dice_2: 1.45  loss_ce_3: 0.6576  loss_mask_3: 0.2039  loss_dice_3: 1.422  loss_ce_4: 0.6155  loss_mask_4: 0.2037  loss_dice_4: 1.406  loss_ce_5: 0.6166  loss_mask_5: 0.1997  loss_dice_5: 1.405  loss_ce_6: 0.6137  loss_mask_6: 0.2002  loss_dice_6: 1.375  loss_ce_7: 0.6051  loss_mask_7: 0.2024  loss_dice_7: 1.39  loss_ce_8: 0.5693  loss_mask_8: 0.2006  loss_dice_8: 1.386    time: 1.0397  last_time: 0.9782  data_time: 0.0592  last_data_time: 0.0505   lr: 0.0001  max_mem: 33133M
[10/17 17:01:17] d2.utils.events INFO:  eta: 0:49:43  iter: 119  total_loss: 22.71  loss_ce: 0.6039  loss_mask: 0.1977  loss_dice: 1.325  loss_ce_0: 0.7044  loss_mask_0: 0.2271  loss_dice_0: 1.624  loss_ce_1: 0.8216  loss_mask_1: 0.2019  loss_dice_1: 1.479  loss_ce_2: 0.7533  loss_mask_2: 0.1994  loss_dice_2: 1.452  loss_ce_3: 0.6723  loss_mask_3: 0.1995  loss_dice_3: 1.38  loss_ce_4: 0.6448  loss_mask_4: 0.2014  loss_dice_4: 1.381  loss_ce_5: 0.6432  loss_mask_5: 0.2032  loss_dice_5: 1.335  loss_ce_6: 0.6253  loss_mask_6: 0.2031  loss_dice_6: 1.335  loss_ce_7: 0.6255  loss_mask_7: 0.2043  loss_dice_7: 1.339  loss_ce_8: 0.6324  loss_mask_8: 0.1982  loss_dice_8: 1.363    time: 1.0390  last_time: 1.0681  data_time: 0.0557  last_data_time: 0.0598   lr: 0.0001  max_mem: 33133M
[10/17 17:01:38] d2.utils.events INFO:  eta: 0:49:24  iter: 139  total_loss: 22.99  loss_ce: 0.6534  loss_mask: 0.1992  loss_dice: 1.326  loss_ce_0: 0.7385  loss_mask_0: 0.228  loss_dice_0: 1.62  loss_ce_1: 0.8063  loss_mask_1: 0.2153  loss_dice_1: 1.503  loss_ce_2: 0.7372  loss_mask_2: 0.2034  loss_dice_2: 1.4  loss_ce_3: 0.6524  loss_mask_3: 0.2008  loss_dice_3: 1.387  loss_ce_4: 0.6616  loss_mask_4: 0.2037  loss_dice_4: 1.331  loss_ce_5: 0.65  loss_mask_5: 0.2008  loss_dice_5: 1.363  loss_ce_6: 0.6034  loss_mask_6: 0.202  loss_dice_6: 1.345  loss_ce_7: 0.6473  loss_mask_7: 0.199  loss_dice_7: 1.315  loss_ce_8: 0.6353  loss_mask_8: 0.1996  loss_dice_8: 1.327    time: 1.0398  last_time: 1.0370  data_time: 0.0579  last_data_time: 0.0648   lr: 0.0001  max_mem: 33133M
[10/17 17:01:59] d2.utils.events INFO:  eta: 0:49:02  iter: 159  total_loss: 21.71  loss_ce: 0.558  loss_mask: 0.2074  loss_dice: 1.307  loss_ce_0: 0.657  loss_mask_0: 0.2315  loss_dice_0: 1.564  loss_ce_1: 0.7654  loss_mask_1: 0.2154  loss_dice_1: 1.444  loss_ce_2: 0.6531  loss_mask_2: 0.2045  loss_dice_2: 1.406  loss_ce_3: 0.6162  loss_mask_3: 0.2021  loss_dice_3: 1.331  loss_ce_4: 0.5855  loss_mask_4: 0.2026  loss_dice_4: 1.344  loss_ce_5: 0.567  loss_mask_5: 0.1996  loss_dice_5: 1.322  loss_ce_6: 0.5555  loss_mask_6: 0.1974  loss_dice_6: 1.334  loss_ce_7: 0.551  loss_mask_7: 0.1988  loss_dice_7: 1.32  loss_ce_8: 0.5454  loss_mask_8: 0.2017  loss_dice_8: 1.307    time: 1.0384  last_time: 1.0467  data_time: 0.0574  last_data_time: 0.0532   lr: 0.0001  max_mem: 33133M
[10/17 17:02:20] d2.utils.events INFO:  eta: 0:48:43  iter: 179  total_loss: 23.23  loss_ce: 0.5886  loss_mask: 0.2032  loss_dice: 1.383  loss_ce_0: 0.6562  loss_mask_0: 0.2248  loss_dice_0: 1.651  loss_ce_1: 0.748  loss_mask_1: 0.2169  loss_dice_1: 1.52  loss_ce_2: 0.6774  loss_mask_2: 0.2098  loss_dice_2: 1.454  loss_ce_3: 0.6331  loss_mask_3: 0.2099  loss_dice_3: 1.415  loss_ce_4: 0.5913  loss_mask_4: 0.2062  loss_dice_4: 1.403  loss_ce_5: 0.6097  loss_mask_5: 0.2078  loss_dice_5: 1.409  loss_ce_6: 0.6142  loss_mask_6: 0.206  loss_dice_6: 1.369  loss_ce_7: 0.6111  loss_mask_7: 0.2044  loss_dice_7: 1.384  loss_ce_8: 0.6161  loss_mask_8: 0.2018  loss_dice_8: 1.405    time: 1.0396  last_time: 1.0031  data_time: 0.0576  last_data_time: 0.0558   lr: 0.0001  max_mem: 33725M
[10/17 17:02:41] d2.utils.events INFO:  eta: 0:48:20  iter: 199  total_loss: 22.02  loss_ce: 0.553  loss_mask: 0.1875  loss_dice: 1.313  loss_ce_0: 0.6595  loss_mask_0: 0.2164  loss_dice_0: 1.596  loss_ce_1: 0.7431  loss_mask_1: 0.2066  loss_dice_1: 1.449  loss_ce_2: 0.6752  loss_mask_2: 0.1943  loss_dice_2: 1.414  loss_ce_3: 0.6238  loss_mask_3: 0.1978  loss_dice_3: 1.323  loss_ce_4: 0.6087  loss_mask_4: 0.1907  loss_dice_4: 1.305  loss_ce_5: 0.598  loss_mask_5: 0.1884  loss_dice_5: 1.337  loss_ce_6: 0.5921  loss_mask_6: 0.1862  loss_dice_6: 1.349  loss_ce_7: 0.6081  loss_mask_7: 0.187  loss_dice_7: 1.326  loss_ce_8: 0.5555  loss_mask_8: 0.1856  loss_dice_8: 1.335    time: 1.0391  last_time: 1.0268  data_time: 0.0546  last_data_time: 0.0588   lr: 0.0001  max_mem: 33725M
[10/17 17:03:02] d2.utils.events INFO:  eta: 0:48:06  iter: 219  total_loss: 22.68  loss_ce: 0.5894  loss_mask: 0.1923  loss_dice: 1.38  loss_ce_0: 0.6676  loss_mask_0: 0.2113  loss_dice_0: 1.599  loss_ce_1: 0.7453  loss_mask_1: 0.2035  loss_dice_1: 1.493  loss_ce_2: 0.6938  loss_mask_2: 0.1908  loss_dice_2: 1.447  loss_ce_3: 0.6073  loss_mask_3: 0.1913  loss_dice_3: 1.422  loss_ce_4: 0.5883  loss_mask_4: 0.1918  loss_dice_4: 1.418  loss_ce_5: 0.5905  loss_mask_5: 0.1892  loss_dice_5: 1.357  loss_ce_6: 0.5862  loss_mask_6: 0.1926  loss_dice_6: 1.372  loss_ce_7: 0.5824  loss_mask_7: 0.1894  loss_dice_7: 1.351  loss_ce_8: 0.5774  loss_mask_8: 0.1936  loss_dice_8: 1.377    time: 1.0409  last_time: 1.0345  data_time: 0.0589  last_data_time: 0.0577   lr: 0.0001  max_mem: 33725M
[10/17 17:03:23] d2.utils.events INFO:  eta: 0:47:42  iter: 239  total_loss: 21.77  loss_ce: 0.546  loss_mask: 0.188  loss_dice: 1.348  loss_ce_0: 0.6406  loss_mask_0: 0.2178  loss_dice_0: 1.626  loss_ce_1: 0.7232  loss_mask_1: 0.1944  loss_dice_1: 1.497  loss_ce_2: 0.6842  loss_mask_2: 0.1863  loss_dice_2: 1.422  loss_ce_3: 0.6076  loss_mask_3: 0.1882  loss_dice_3: 1.37  loss_ce_4: 0.5816  loss_mask_4: 0.1879  loss_dice_4: 1.355  loss_ce_5: 0.5656  loss_mask_5: 0.1895  loss_dice_5: 1.366  loss_ce_6: 0.5862  loss_mask_6: 0.1842  loss_dice_6: 1.344  loss_ce_7: 0.5671  loss_mask_7: 0.1859  loss_dice_7: 1.336  loss_ce_8: 0.5554  loss_mask_8: 0.188  loss_dice_8: 1.371    time: 1.0404  last_time: 1.0686  data_time: 0.0550  last_data_time: 0.0520   lr: 0.0001  max_mem: 33725M
[10/17 17:03:44] d2.utils.events INFO:  eta: 0:47:23  iter: 259  total_loss: 21.06  loss_ce: 0.5655  loss_mask: 0.1979  loss_dice: 1.265  loss_ce_0: 0.629  loss_mask_0: 0.23  loss_dice_0: 1.46  loss_ce_1: 0.7055  loss_mask_1: 0.2005  loss_dice_1: 1.391  loss_ce_2: 0.6549  loss_mask_2: 0.1969  loss_dice_2: 1.332  loss_ce_3: 0.5848  loss_mask_3: 0.2005  loss_dice_3: 1.286  loss_ce_4: 0.5878  loss_mask_4: 0.2008  loss_dice_4: 1.26  loss_ce_5: 0.5543  loss_mask_5: 0.2002  loss_dice_5: 1.224  loss_ce_6: 0.5449  loss_mask_6: 0.2021  loss_dice_6: 1.257  loss_ce_7: 0.5763  loss_mask_7: 0.2002  loss_dice_7: 1.24  loss_ce_8: 0.5384  loss_mask_8: 0.1965  loss_dice_8: 1.268    time: 1.0403  last_time: 1.0018  data_time: 0.0585  last_data_time: 0.0613   lr: 0.0001  max_mem: 33725M
[10/17 17:04:05] d2.utils.events INFO:  eta: 0:47:02  iter: 279  total_loss: 21.56  loss_ce: 0.5565  loss_mask: 0.1852  loss_dice: 1.291  loss_ce_0: 0.621  loss_mask_0: 0.2169  loss_dice_0: 1.553  loss_ce_1: 0.7255  loss_mask_1: 0.2002  loss_dice_1: 1.453  loss_ce_2: 0.6716  loss_mask_2: 0.1945  loss_dice_2: 1.373  loss_ce_3: 0.6117  loss_mask_3: 0.1899  loss_dice_3: 1.352  loss_ce_4: 0.5879  loss_mask_4: 0.1916  loss_dice_4: 1.331  loss_ce_5: 0.568  loss_mask_5: 0.1895  loss_dice_5: 1.324  loss_ce_6: 0.5477  loss_mask_6: 0.1879  loss_dice_6: 1.314  loss_ce_7: 0.5713  loss_mask_7: 0.1891  loss_dice_7: 1.328  loss_ce_8: 0.5362  loss_mask_8: 0.187  loss_dice_8: 1.316    time: 1.0408  last_time: 1.0744  data_time: 0.0574  last_data_time: 0.0640   lr: 0.0001  max_mem: 33725M
[10/17 17:04:26] d2.utils.events INFO:  eta: 0:46:43  iter: 299  total_loss: 22.02  loss_ce: 0.5883  loss_mask: 0.1853  loss_dice: 1.312  loss_ce_0: 0.6527  loss_mask_0: 0.2029  loss_dice_0: 1.569  loss_ce_1: 0.7033  loss_mask_1: 0.1915  loss_dice_1: 1.444  loss_ce_2: 0.6712  loss_mask_2: 0.1838  loss_dice_2: 1.421  loss_ce_3: 0.607  loss_mask_3: 0.1817  loss_dice_3: 1.387  loss_ce_4: 0.607  loss_mask_4: 0.1825  loss_dice_4: 1.363  loss_ce_5: 0.6091  loss_mask_5: 0.1802  loss_dice_5: 1.352  loss_ce_6: 0.5892  loss_mask_6: 0.1822  loss_dice_6: 1.344  loss_ce_7: 0.5988  loss_mask_7: 0.1835  loss_dice_7: 1.337  loss_ce_8: 0.6161  loss_mask_8: 0.1838  loss_dice_8: 1.307    time: 1.0421  last_time: 1.0458  data_time: 0.0659  last_data_time: 0.0581   lr: 0.0001  max_mem: 33725M
[10/17 17:04:47] d2.utils.events INFO:  eta: 0:46:23  iter: 319  total_loss: 21.18  loss_ce: 0.5278  loss_mask: 0.1775  loss_dice: 1.317  loss_ce_0: 0.6194  loss_mask_0: 0.2094  loss_dice_0: 1.573  loss_ce_1: 0.671  loss_mask_1: 0.1927  loss_dice_1: 1.43  loss_ce_2: 0.641  loss_mask_2: 0.1807  loss_dice_2: 1.353  loss_ce_3: 0.5611  loss_mask_3: 0.1778  loss_dice_3: 1.368  loss_ce_4: 0.5251  loss_mask_4: 0.1819  loss_dice_4: 1.367  loss_ce_5: 0.5608  loss_mask_5: 0.1754  loss_dice_5: 1.328  loss_ce_6: 0.5197  loss_mask_6: 0.1801  loss_dice_6: 1.305  loss_ce_7: 0.5182  loss_mask_7: 0.1783  loss_dice_7: 1.302  loss_ce_8: 0.5309  loss_mask_8: 0.179  loss_dice_8: 1.305    time: 1.0420  last_time: 1.0514  data_time: 0.0558  last_data_time: 0.0541   lr: 0.0001  max_mem: 33725M
[10/17 17:05:08] d2.utils.events INFO:  eta: 0:46:07  iter: 339  total_loss: 21.97  loss_ce: 0.5856  loss_mask: 0.1863  loss_dice: 1.328  loss_ce_0: 0.6154  loss_mask_0: 0.2158  loss_dice_0: 1.567  loss_ce_1: 0.7037  loss_mask_1: 0.1983  loss_dice_1: 1.478  loss_ce_2: 0.6851  loss_mask_2: 0.1928  loss_dice_2: 1.432  loss_ce_3: 0.6127  loss_mask_3: 0.1908  loss_dice_3: 1.393  loss_ce_4: 0.6112  loss_mask_4: 0.1929  loss_dice_4: 1.359  loss_ce_5: 0.6111  loss_mask_5: 0.191  loss_dice_5: 1.371  loss_ce_6: 0.5844  loss_mask_6: 0.1854  loss_dice_6: 1.344  loss_ce_7: 0.5796  loss_mask_7: 0.1895  loss_dice_7: 1.308  loss_ce_8: 0.5951  loss_mask_8: 0.1864  loss_dice_8: 1.34    time: 1.0429  last_time: 1.0272  data_time: 0.0579  last_data_time: 0.0594   lr: 0.0001  max_mem: 33725M
[10/17 17:05:29] d2.utils.events INFO:  eta: 0:45:46  iter: 359  total_loss: 21.43  loss_ce: 0.5505  loss_mask: 0.1921  loss_dice: 1.316  loss_ce_0: 0.6357  loss_mask_0: 0.2149  loss_dice_0: 1.555  loss_ce_1: 0.7012  loss_mask_1: 0.1998  loss_dice_1: 1.432  loss_ce_2: 0.6306  loss_mask_2: 0.1978  loss_dice_2: 1.382  loss_ce_3: 0.5935  loss_mask_3: 0.1974  loss_dice_3: 1.324  loss_ce_4: 0.5995  loss_mask_4: 0.1974  loss_dice_4: 1.339  loss_ce_5: 0.5766  loss_mask_5: 0.1982  loss_dice_5: 1.338  loss_ce_6: 0.5692  loss_mask_6: 0.195  loss_dice_6: 1.297  loss_ce_7: 0.5784  loss_mask_7: 0.1919  loss_dice_7: 1.298  loss_ce_8: 0.5508  loss_mask_8: 0.1911  loss_dice_8: 1.322    time: 1.0426  last_time: 1.0127  data_time: 0.0546  last_data_time: 0.0483   lr: 0.0001  max_mem: 33725M
[10/17 17:05:49] d2.utils.events INFO:  eta: 0:45:24  iter: 379  total_loss: 20.69  loss_ce: 0.5074  loss_mask: 0.1771  loss_dice: 1.236  loss_ce_0: 0.5775  loss_mask_0: 0.2157  loss_dice_0: 1.501  loss_ce_1: 0.6944  loss_mask_1: 0.1928  loss_dice_1: 1.414  loss_ce_2: 0.5989  loss_mask_2: 0.1857  loss_dice_2: 1.304  loss_ce_3: 0.574  loss_mask_3: 0.1798  loss_dice_3: 1.304  loss_ce_4: 0.5106  loss_mask_4: 0.1804  loss_dice_4: 1.319  loss_ce_5: 0.528  loss_mask_5: 0.1782  loss_dice_5: 1.29  loss_ce_6: 0.495  loss_mask_6: 0.18  loss_dice_6: 1.263  loss_ce_7: 0.4892  loss_mask_7: 0.1776  loss_dice_7: 1.251  loss_ce_8: 0.5455  loss_mask_8: 0.177  loss_dice_8: 1.256    time: 1.0419  last_time: 1.0807  data_time: 0.0540  last_data_time: 0.0462   lr: 0.0001  max_mem: 33725M
[10/17 17:06:11] d2.utils.events INFO:  eta: 0:45:04  iter: 399  total_loss: 21.69  loss_ce: 0.5642  loss_mask: 0.1883  loss_dice: 1.315  loss_ce_0: 0.623  loss_mask_0: 0.2047  loss_dice_0: 1.566  loss_ce_1: 0.6836  loss_mask_1: 0.2045  loss_dice_1: 1.47  loss_ce_2: 0.6155  loss_mask_2: 0.1976  loss_dice_2: 1.391  loss_ce_3: 0.5953  loss_mask_3: 0.1901  loss_dice_3: 1.343  loss_ce_4: 0.5599  loss_mask_4: 0.1927  loss_dice_4: 1.364  loss_ce_5: 0.5552  loss_mask_5: 0.1864  loss_dice_5: 1.334  loss_ce_6: 0.5473  loss_mask_6: 0.1896  loss_dice_6: 1.319  loss_ce_7: 0.5788  loss_mask_7: 0.1903  loss_dice_7: 1.299  loss_ce_8: 0.5361  loss_mask_8: 0.1891  loss_dice_8: 1.321    time: 1.0424  last_time: 1.0681  data_time: 0.0582  last_data_time: 0.0569   lr: 0.0001  max_mem: 33725M
[10/17 17:06:32] d2.utils.events INFO:  eta: 0:44:44  iter: 419  total_loss: 20.96  loss_ce: 0.5446  loss_mask: 0.1778  loss_dice: 1.249  loss_ce_0: 0.6587  loss_mask_0: 0.2062  loss_dice_0: 1.5  loss_ce_1: 0.683  loss_mask_1: 0.1907  loss_dice_1: 1.403  loss_ce_2: 0.6297  loss_mask_2: 0.1801  loss_dice_2: 1.333  loss_ce_3: 0.5799  loss_mask_3: 0.1761  loss_dice_3: 1.303  loss_ce_4: 0.5901  loss_mask_4: 0.1767  loss_dice_4: 1.283  loss_ce_5: 0.562  loss_mask_5: 0.1791  loss_dice_5: 1.272  loss_ce_6: 0.5465  loss_mask_6: 0.1757  loss_dice_6: 1.232  loss_ce_7: 0.5591  loss_mask_7: 0.1725  loss_dice_7: 1.253  loss_ce_8: 0.5285  loss_mask_8: 0.1715  loss_dice_8: 1.257    time: 1.0426  last_time: 1.0112  data_time: 0.0574  last_data_time: 0.0571   lr: 0.0001  max_mem: 33725M
[10/17 17:06:53] d2.utils.events INFO:  eta: 0:44:23  iter: 439  total_loss: 20.18  loss_ce: 0.4855  loss_mask: 0.1876  loss_dice: 1.218  loss_ce_0: 0.5698  loss_mask_0: 0.2211  loss_dice_0: 1.51  loss_ce_1: 0.6707  loss_mask_1: 0.2079  loss_dice_1: 1.343  loss_ce_2: 0.5908  loss_mask_2: 0.1966  loss_dice_2: 1.292  loss_ce_3: 0.5222  loss_mask_3: 0.1953  loss_dice_3: 1.243  loss_ce_4: 0.5162  loss_mask_4: 0.1921  loss_dice_4: 1.239  loss_ce_5: 0.5382  loss_mask_5: 0.1876  loss_dice_5: 1.234  loss_ce_6: 0.4833  loss_mask_6: 0.1888  loss_dice_6: 1.201  loss_ce_7: 0.4882  loss_mask_7: 0.1884  loss_dice_7: 1.212  loss_ce_8: 0.47  loss_mask_8: 0.1872  loss_dice_8: 1.204    time: 1.0427  last_time: 1.0296  data_time: 0.0563  last_data_time: 0.0598   lr: 0.0001  max_mem: 33725M
[10/17 17:07:14] d2.utils.events INFO:  eta: 0:44:02  iter: 459  total_loss: 21.47  loss_ce: 0.5331  loss_mask: 0.1805  loss_dice: 1.313  loss_ce_0: 0.5842  loss_mask_0: 0.2132  loss_dice_0: 1.611  loss_ce_1: 0.6831  loss_mask_1: 0.1983  loss_dice_1: 1.431  loss_ce_2: 0.6386  loss_mask_2: 0.1838  loss_dice_2: 1.402  loss_ce_3: 0.5603  loss_mask_3: 0.1902  loss_dice_3: 1.383  loss_ce_4: 0.5386  loss_mask_4: 0.1816  loss_dice_4: 1.314  loss_ce_5: 0.5357  loss_mask_5: 0.1774  loss_dice_5: 1.317  loss_ce_6: 0.5714  loss_mask_6: 0.1818  loss_dice_6: 1.304  loss_ce_7: 0.576  loss_mask_7: 0.18  loss_dice_7: 1.282  loss_ce_8: 0.5464  loss_mask_8: 0.1805  loss_dice_8: 1.303    time: 1.0433  last_time: 1.0279  data_time: 0.0599  last_data_time: 0.0439   lr: 0.0001  max_mem: 33725M
[10/17 17:07:35] d2.utils.events INFO:  eta: 0:43:41  iter: 479  total_loss: 21.3  loss_ce: 0.5406  loss_mask: 0.1792  loss_dice: 1.287  loss_ce_0: 0.5858  loss_mask_0: 0.2071  loss_dice_0: 1.52  loss_ce_1: 0.6796  loss_mask_1: 0.2017  loss_dice_1: 1.403  loss_ce_2: 0.6348  loss_mask_2: 0.1887  loss_dice_2: 1.341  loss_ce_3: 0.6101  loss_mask_3: 0.1877  loss_dice_3: 1.266  loss_ce_4: 0.5547  loss_mask_4: 0.1844  loss_dice_4: 1.296  loss_ce_5: 0.581  loss_mask_5: 0.183  loss_dice_5: 1.251  loss_ce_6: 0.5657  loss_mask_6: 0.1815  loss_dice_6: 1.29  loss_ce_7: 0.5722  loss_mask_7: 0.182  loss_dice_7: 1.268  loss_ce_8: 0.5561  loss_mask_8: 0.1809  loss_dice_8: 1.28    time: 1.0431  last_time: 1.0275  data_time: 0.0583  last_data_time: 0.0504   lr: 0.0001  max_mem: 33725M
[10/17 17:07:56] d2.utils.events INFO:  eta: 0:43:21  iter: 499  total_loss: 21.68  loss_ce: 0.556  loss_mask: 0.1665  loss_dice: 1.295  loss_ce_0: 0.6234  loss_mask_0: 0.1951  loss_dice_0: 1.562  loss_ce_1: 0.7367  loss_mask_1: 0.1826  loss_dice_1: 1.458  loss_ce_2: 0.6899  loss_mask_2: 0.172  loss_dice_2: 1.388  loss_ce_3: 0.6604  loss_mask_3: 0.1689  loss_dice_3: 1.324  loss_ce_4: 0.5929  loss_mask_4: 0.1704  loss_dice_4: 1.334  loss_ce_5: 0.5841  loss_mask_5: 0.1694  loss_dice_5: 1.334  loss_ce_6: 0.5664  loss_mask_6: 0.1676  loss_dice_6: 1.333  loss_ce_7: 0.5946  loss_mask_7: 0.1673  loss_dice_7: 1.309  loss_ce_8: 0.5694  loss_mask_8: 0.167  loss_dice_8: 1.324    time: 1.0435  last_time: 1.0706  data_time: 0.0572  last_data_time: 0.0451   lr: 0.0001  max_mem: 33725M
[10/17 17:08:16] d2.utils.events INFO:  eta: 0:42:59  iter: 519  total_loss: 21.09  loss_ce: 0.5635  loss_mask: 0.1829  loss_dice: 1.252  loss_ce_0: 0.6134  loss_mask_0: 0.2114  loss_dice_0: 1.48  loss_ce_1: 0.6899  loss_mask_1: 0.1907  loss_dice_1: 1.405  loss_ce_2: 0.6708  loss_mask_2: 0.1826  loss_dice_2: 1.361  loss_ce_3: 0.6235  loss_mask_3: 0.1821  loss_dice_3: 1.272  loss_ce_4: 0.5806  loss_mask_4: 0.1829  loss_dice_4: 1.265  loss_ce_5: 0.5767  loss_mask_5: 0.182  loss_dice_5: 1.293  loss_ce_6: 0.558  loss_mask_6: 0.1806  loss_dice_6: 1.273  loss_ce_7: 0.5809  loss_mask_7: 0.1825  loss_dice_7: 1.288  loss_ce_8: 0.5813  loss_mask_8: 0.1838  loss_dice_8: 1.256    time: 1.0430  last_time: 1.0239  data_time: 0.0544  last_data_time: 0.0632   lr: 0.0001  max_mem: 33725M
[10/17 17:08:37] d2.utils.events INFO:  eta: 0:42:39  iter: 539  total_loss: 20.3  loss_ce: 0.4725  loss_mask: 0.1762  loss_dice: 1.225  loss_ce_0: 0.5673  loss_mask_0: 0.2177  loss_dice_0: 1.449  loss_ce_1: 0.6374  loss_mask_1: 0.1969  loss_dice_1: 1.373  loss_ce_2: 0.5848  loss_mask_2: 0.1851  loss_dice_2: 1.311  loss_ce_3: 0.5144  loss_mask_3: 0.1852  loss_dice_3: 1.266  loss_ce_4: 0.5251  loss_mask_4: 0.1852  loss_dice_4: 1.251  loss_ce_5: 0.5161  loss_mask_5: 0.1829  loss_dice_5: 1.274  loss_ce_6: 0.5043  loss_mask_6: 0.1803  loss_dice_6: 1.249  loss_ce_7: 0.4726  loss_mask_7: 0.1774  loss_dice_7: 1.217  loss_ce_8: 0.4905  loss_mask_8: 0.1779  loss_dice_8: 1.261    time: 1.0428  last_time: 1.0781  data_time: 0.0539  last_data_time: 0.0487   lr: 0.0001  max_mem: 33725M
[10/17 17:08:58] d2.utils.events INFO:  eta: 0:42:18  iter: 559  total_loss: 21.09  loss_ce: 0.5119  loss_mask: 0.1819  loss_dice: 1.284  loss_ce_0: 0.5815  loss_mask_0: 0.2056  loss_dice_0: 1.525  loss_ce_1: 0.6594  loss_mask_1: 0.193  loss_dice_1: 1.43  loss_ce_2: 0.6481  loss_mask_2: 0.1897  loss_dice_2: 1.336  loss_ce_3: 0.558  loss_mask_3: 0.1862  loss_dice_3: 1.343  loss_ce_4: 0.5556  loss_mask_4: 0.1839  loss_dice_4: 1.31  loss_ce_5: 0.5311  loss_mask_5: 0.1822  loss_dice_5: 1.329  loss_ce_6: 0.519  loss_mask_6: 0.1823  loss_dice_6: 1.292  loss_ce_7: 0.528  loss_mask_7: 0.1827  loss_dice_7: 1.278  loss_ce_8: 0.5033  loss_mask_8: 0.1802  loss_dice_8: 1.279    time: 1.0432  last_time: 1.0302  data_time: 0.0580  last_data_time: 0.0537   lr: 0.0001  max_mem: 33725M
[10/17 17:09:20] d2.utils.events INFO:  eta: 0:41:58  iter: 579  total_loss: 21.15  loss_ce: 0.5893  loss_mask: 0.1698  loss_dice: 1.248  loss_ce_0: 0.6492  loss_mask_0: 0.2026  loss_dice_0: 1.492  loss_ce_1: 0.7301  loss_mask_1: 0.1836  loss_dice_1: 1.383  loss_ce_2: 0.6652  loss_mask_2: 0.1802  loss_dice_2: 1.321  loss_ce_3: 0.5943  loss_mask_3: 0.1815  loss_dice_3: 1.297  loss_ce_4: 0.5846  loss_mask_4: 0.174  loss_dice_4: 1.296  loss_ce_5: 0.6079  loss_mask_5: 0.1722  loss_dice_5: 1.301  loss_ce_6: 0.568  loss_mask_6: 0.1724  loss_dice_6: 1.247  loss_ce_7: 0.543  loss_mask_7: 0.1703  loss_dice_7: 1.244  loss_ce_8: 0.576  loss_mask_8: 0.1699  loss_dice_8: 1.28    time: 1.0439  last_time: 1.0703  data_time: 0.0622  last_data_time: 0.0698   lr: 0.0001  max_mem: 33725M
[10/17 17:09:41] d2.utils.events INFO:  eta: 0:41:38  iter: 599  total_loss: 20.96  loss_ce: 0.5495  loss_mask: 0.1816  loss_dice: 1.282  loss_ce_0: 0.598  loss_mask_0: 0.2104  loss_dice_0: 1.454  loss_ce_1: 0.673  loss_mask_1: 0.2025  loss_dice_1: 1.417  loss_ce_2: 0.612  loss_mask_2: 0.1914  loss_dice_2: 1.368  loss_ce_3: 0.588  loss_mask_3: 0.1902  loss_dice_3: 1.292  loss_ce_4: 0.5661  loss_mask_4: 0.1902  loss_dice_4: 1.268  loss_ce_5: 0.5623  loss_mask_5: 0.1854  loss_dice_5: 1.295  loss_ce_6: 0.5562  loss_mask_6: 0.183  loss_dice_6: 1.226  loss_ce_7: 0.5492  loss_mask_7: 0.1838  loss_dice_7: 1.299  loss_ce_8: 0.5642  loss_mask_8: 0.1805  loss_dice_8: 1.254    time: 1.0447  last_time: 1.0180  data_time: 0.0662  last_data_time: 0.0550   lr: 0.0001  max_mem: 33725M
[10/17 17:10:02] d2.utils.events INFO:  eta: 0:41:19  iter: 619  total_loss: 20.81  loss_ce: 0.5187  loss_mask: 0.1716  loss_dice: 1.24  loss_ce_0: 0.5967  loss_mask_0: 0.1919  loss_dice_0: 1.489  loss_ce_1: 0.6942  loss_mask_1: 0.1794  loss_dice_1: 1.397  loss_ce_2: 0.6391  loss_mask_2: 0.1718  loss_dice_2: 1.337  loss_ce_3: 0.5723  loss_mask_3: 0.1708  loss_dice_3: 1.292  loss_ce_4: 0.5374  loss_mask_4: 0.171  loss_dice_4: 1.286  loss_ce_5: 0.5526  loss_mask_5: 0.1699  loss_dice_5: 1.271  loss_ce_6: 0.5511  loss_mask_6: 0.1691  loss_dice_6: 1.227  loss_ce_7: 0.5285  loss_mask_7: 0.1688  loss_dice_7: 1.224  loss_ce_8: 0.5365  loss_mask_8: 0.1682  loss_dice_8: 1.216    time: 1.0453  last_time: 1.0626  data_time: 0.0684  last_data_time: 0.0821   lr: 0.0001  max_mem: 33725M
[10/17 17:10:23] d2.utils.events INFO:  eta: 0:40:59  iter: 639  total_loss: 19.71  loss_ce: 0.4817  loss_mask: 0.1803  loss_dice: 1.222  loss_ce_0: 0.5619  loss_mask_0: 0.2025  loss_dice_0: 1.469  loss_ce_1: 0.6602  loss_mask_1: 0.1894  loss_dice_1: 1.382  loss_ce_2: 0.5737  loss_mask_2: 0.1845  loss_dice_2: 1.331  loss_ce_3: 0.4965  loss_mask_3: 0.1846  loss_dice_3: 1.272  loss_ce_4: 0.4956  loss_mask_4: 0.1819  loss_dice_4: 1.265  loss_ce_5: 0.5102  loss_mask_5: 0.1847  loss_dice_5: 1.242  loss_ce_6: 0.518  loss_mask_6: 0.1818  loss_dice_6: 1.234  loss_ce_7: 0.4645  loss_mask_7: 0.1848  loss_dice_7: 1.227  loss_ce_8: 0.487  loss_mask_8: 0.1837  loss_dice_8: 1.254    time: 1.0454  last_time: 1.0228  data_time: 0.0565  last_data_time: 0.0539   lr: 0.0001  max_mem: 33725M
[10/17 17:10:45] d2.utils.events INFO:  eta: 0:40:38  iter: 659  total_loss: 21.04  loss_ce: 0.5184  loss_mask: 0.1605  loss_dice: 1.271  loss_ce_0: 0.6208  loss_mask_0: 0.2045  loss_dice_0: 1.518  loss_ce_1: 0.701  loss_mask_1: 0.1779  loss_dice_1: 1.409  loss_ce_2: 0.6341  loss_mask_2: 0.1697  loss_dice_2: 1.355  loss_ce_3: 0.5789  loss_mask_3: 0.1676  loss_dice_3: 1.326  loss_ce_4: 0.5533  loss_mask_4: 0.1674  loss_dice_4: 1.305  loss_ce_5: 0.5412  loss_mask_5: 0.164  loss_dice_5: 1.334  loss_ce_6: 0.5349  loss_mask_6: 0.1631  loss_dice_6: 1.259  loss_ce_7: 0.5525  loss_mask_7: 0.1658  loss_dice_7: 1.261  loss_ce_8: 0.5432  loss_mask_8: 0.1621  loss_dice_8: 1.282    time: 1.0457  last_time: 1.0634  data_time: 0.0587  last_data_time: 0.0511   lr: 0.0001  max_mem: 33725M
[10/17 17:11:06] d2.utils.events INFO:  eta: 0:40:19  iter: 679  total_loss: 20.34  loss_ce: 0.4921  loss_mask: 0.1749  loss_dice: 1.256  loss_ce_0: 0.6247  loss_mask_0: 0.2006  loss_dice_0: 1.505  loss_ce_1: 0.665  loss_mask_1: 0.1882  loss_dice_1: 1.395  loss_ce_2: 0.5879  loss_mask_2: 0.1795  loss_dice_2: 1.338  loss_ce_3: 0.5601  loss_mask_3: 0.1741  loss_dice_3: 1.25  loss_ce_4: 0.535  loss_mask_4: 0.1726  loss_dice_4: 1.283  loss_ce_5: 0.5247  loss_mask_5: 0.1744  loss_dice_5: 1.286  loss_ce_6: 0.5116  loss_mask_6: 0.1748  loss_dice_6: 1.248  loss_ce_7: 0.5079  loss_mask_7: 0.1758  loss_dice_7: 1.242  loss_ce_8: 0.5273  loss_mask_8: 0.1706  loss_dice_8: 1.238    time: 1.0461  last_time: 1.0821  data_time: 0.0611  last_data_time: 0.0728   lr: 0.0001  max_mem: 33725M
[10/17 17:11:27] d2.utils.events INFO:  eta: 0:39:58  iter: 699  total_loss: 21.4  loss_ce: 0.5577  loss_mask: 0.1738  loss_dice: 1.269  loss_ce_0: 0.6551  loss_mask_0: 0.1972  loss_dice_0: 1.491  loss_ce_1: 0.7132  loss_mask_1: 0.1889  loss_dice_1: 1.436  loss_ce_2: 0.6698  loss_mask_2: 0.1778  loss_dice_2: 1.339  loss_ce_3: 0.5947  loss_mask_3: 0.1764  loss_dice_3: 1.292  loss_ce_4: 0.5917  loss_mask_4: 0.1763  loss_dice_4: 1.318  loss_ce_5: 0.5846  loss_mask_5: 0.1764  loss_dice_5: 1.269  loss_ce_6: 0.5759  loss_mask_6: 0.177  loss_dice_6: 1.256  loss_ce_7: 0.5879  loss_mask_7: 0.1766  loss_dice_7: 1.272  loss_ce_8: 0.5772  loss_mask_8: 0.1766  loss_dice_8: 1.278    time: 1.0465  last_time: 1.0266  data_time: 0.0671  last_data_time: 0.0558   lr: 0.0001  max_mem: 33725M
[10/17 17:11:48] d2.utils.events INFO:  eta: 0:39:36  iter: 719  total_loss: 20.51  loss_ce: 0.4939  loss_mask: 0.1663  loss_dice: 1.271  loss_ce_0: 0.6131  loss_mask_0: 0.1929  loss_dice_0: 1.472  loss_ce_1: 0.7086  loss_mask_1: 0.181  loss_dice_1: 1.414  loss_ce_2: 0.5858  loss_mask_2: 0.1667  loss_dice_2: 1.374  loss_ce_3: 0.567  loss_mask_3: 0.1687  loss_dice_3: 1.32  loss_ce_4: 0.5797  loss_mask_4: 0.1705  loss_dice_4: 1.34  loss_ce_5: 0.5311  loss_mask_5: 0.1717  loss_dice_5: 1.267  loss_ce_6: 0.5085  loss_mask_6: 0.1666  loss_dice_6: 1.273  loss_ce_7: 0.5537  loss_mask_7: 0.1671  loss_dice_7: 1.282  loss_ce_8: 0.5442  loss_mask_8: 0.1669  loss_dice_8: 1.279    time: 1.0465  last_time: 1.0324  data_time: 0.0579  last_data_time: 0.0632   lr: 0.0001  max_mem: 33725M
[10/17 17:12:09] d2.utils.events INFO:  eta: 0:39:15  iter: 739  total_loss: 20.48  loss_ce: 0.5074  loss_mask: 0.1628  loss_dice: 1.274  loss_ce_0: 0.5725  loss_mask_0: 0.1992  loss_dice_0: 1.487  loss_ce_1: 0.6702  loss_mask_1: 0.1862  loss_dice_1: 1.416  loss_ce_2: 0.6414  loss_mask_2: 0.1779  loss_dice_2: 1.344  loss_ce_3: 0.5694  loss_mask_3: 0.1698  loss_dice_3: 1.274  loss_ce_4: 0.558  loss_mask_4: 0.1664  loss_dice_4: 1.308  loss_ce_5: 0.5258  loss_mask_5: 0.1679  loss_dice_5: 1.273  loss_ce_6: 0.5299  loss_mask_6: 0.163  loss_dice_6: 1.291  loss_ce_7: 0.4904  loss_mask_7: 0.1638  loss_dice_7: 1.252  loss_ce_8: 0.5153  loss_mask_8: 0.1645  loss_dice_8: 1.276    time: 1.0464  last_time: 1.0463  data_time: 0.0558  last_data_time: 0.0585   lr: 0.0001  max_mem: 33725M
[10/17 17:12:30] d2.utils.events INFO:  eta: 0:38:53  iter: 759  total_loss: 19.12  loss_ce: 0.4445  loss_mask: 0.1814  loss_dice: 1.181  loss_ce_0: 0.5479  loss_mask_0: 0.2126  loss_dice_0: 1.359  loss_ce_1: 0.5925  loss_mask_1: 0.2008  loss_dice_1: 1.317  loss_ce_2: 0.5709  loss_mask_2: 0.1912  loss_dice_2: 1.215  loss_ce_3: 0.4754  loss_mask_3: 0.1893  loss_dice_3: 1.189  loss_ce_4: 0.4692  loss_mask_4: 0.1849  loss_dice_4: 1.198  loss_ce_5: 0.4582  loss_mask_5: 0.1824  loss_dice_5: 1.196  loss_ce_6: 0.4766  loss_mask_6: 0.1817  loss_dice_6: 1.163  loss_ce_7: 0.4397  loss_mask_7: 0.1802  loss_dice_7: 1.175  loss_ce_8: 0.4453  loss_mask_8: 0.1799  loss_dice_8: 1.167    time: 1.0461  last_time: 1.0038  data_time: 0.0534  last_data_time: 0.0531   lr: 0.0001  max_mem: 33725M
[10/17 17:12:51] d2.utils.events INFO:  eta: 0:38:33  iter: 779  total_loss: 21.22  loss_ce: 0.5204  loss_mask: 0.1699  loss_dice: 1.287  loss_ce_0: 0.6428  loss_mask_0: 0.1941  loss_dice_0: 1.542  loss_ce_1: 0.6771  loss_mask_1: 0.1802  loss_dice_1: 1.403  loss_ce_2: 0.6343  loss_mask_2: 0.1795  loss_dice_2: 1.333  loss_ce_3: 0.5936  loss_mask_3: 0.1725  loss_dice_3: 1.29  loss_ce_4: 0.5681  loss_mask_4: 0.1767  loss_dice_4: 1.274  loss_ce_5: 0.5065  loss_mask_5: 0.175  loss_dice_5: 1.313  loss_ce_6: 0.5556  loss_mask_6: 0.174  loss_dice_6: 1.261  loss_ce_7: 0.5307  loss_mask_7: 0.1727  loss_dice_7: 1.239  loss_ce_8: 0.5344  loss_mask_8: 0.168  loss_dice_8: 1.276    time: 1.0461  last_time: 1.0391  data_time: 0.0568  last_data_time: 0.0553   lr: 0.0001  max_mem: 33725M
[10/17 17:13:12] d2.utils.events INFO:  eta: 0:38:12  iter: 799  total_loss: 19.47  loss_ce: 0.4733  loss_mask: 0.1718  loss_dice: 1.185  loss_ce_0: 0.585  loss_mask_0: 0.205  loss_dice_0: 1.412  loss_ce_1: 0.589  loss_mask_1: 0.1873  loss_dice_1: 1.382  loss_ce_2: 0.5532  loss_mask_2: 0.1765  loss_dice_2: 1.301  loss_ce_3: 0.5289  loss_mask_3: 0.176  loss_dice_3: 1.238  loss_ce_4: 0.4741  loss_mask_4: 0.1746  loss_dice_4: 1.198  loss_ce_5: 0.5242  loss_mask_5: 0.1722  loss_dice_5: 1.231  loss_ce_6: 0.5029  loss_mask_6: 0.1738  loss_dice_6: 1.177  loss_ce_7: 0.5046  loss_mask_7: 0.1733  loss_dice_7: 1.188  loss_ce_8: 0.496  loss_mask_8: 0.1707  loss_dice_8: 1.177    time: 1.0461  last_time: 1.0259  data_time: 0.0567  last_data_time: 0.0825   lr: 0.0001  max_mem: 33725M
[10/17 17:13:33] d2.utils.events INFO:  eta: 0:37:52  iter: 819  total_loss: 20.71  loss_ce: 0.5104  loss_mask: 0.1766  loss_dice: 1.259  loss_ce_0: 0.6091  loss_mask_0: 0.2034  loss_dice_0: 1.435  loss_ce_1: 0.6573  loss_mask_1: 0.1929  loss_dice_1: 1.383  loss_ce_2: 0.6093  loss_mask_2: 0.1856  loss_dice_2: 1.318  loss_ce_3: 0.5526  loss_mask_3: 0.1809  loss_dice_3: 1.301  loss_ce_4: 0.5404  loss_mask_4: 0.1827  loss_dice_4: 1.272  loss_ce_5: 0.5198  loss_mask_5: 0.1789  loss_dice_5: 1.263  loss_ce_6: 0.5227  loss_mask_6: 0.1805  loss_dice_6: 1.24  loss_ce_7: 0.5367  loss_mask_7: 0.1789  loss_dice_7: 1.225  loss_ce_8: 0.5389  loss_mask_8: 0.177  loss_dice_8: 1.231    time: 1.0464  last_time: 1.0550  data_time: 0.0585  last_data_time: 0.0506   lr: 0.0001  max_mem: 33906M
[10/17 17:13:54] d2.utils.events INFO:  eta: 0:37:31  iter: 839  total_loss: 20.15  loss_ce: 0.4746  loss_mask: 0.1726  loss_dice: 1.188  loss_ce_0: 0.6193  loss_mask_0: 0.2104  loss_dice_0: 1.419  loss_ce_1: 0.6351  loss_mask_1: 0.1898  loss_dice_1: 1.347  loss_ce_2: 0.6082  loss_mask_2: 0.1813  loss_dice_2: 1.308  loss_ce_3: 0.5393  loss_mask_3: 0.1761  loss_dice_3: 1.231  loss_ce_4: 0.5063  loss_mask_4: 0.1874  loss_dice_4: 1.231  loss_ce_5: 0.5036  loss_mask_5: 0.1855  loss_dice_5: 1.236  loss_ce_6: 0.5045  loss_mask_6: 0.1789  loss_dice_6: 1.201  loss_ce_7: 0.4714  loss_mask_7: 0.1788  loss_dice_7: 1.22  loss_ce_8: 0.4859  loss_mask_8: 0.1808  loss_dice_8: 1.217    time: 1.0462  last_time: 1.0496  data_time: 0.0542  last_data_time: 0.0503   lr: 0.0001  max_mem: 33906M
[10/17 17:14:14] d2.utils.events INFO:  eta: 0:37:08  iter: 859  total_loss: 20.08  loss_ce: 0.5278  loss_mask: 0.1824  loss_dice: 1.201  loss_ce_0: 0.6034  loss_mask_0: 0.2144  loss_dice_0: 1.416  loss_ce_1: 0.6747  loss_mask_1: 0.1901  loss_dice_1: 1.322  loss_ce_2: 0.6093  loss_mask_2: 0.1902  loss_dice_2: 1.268  loss_ce_3: 0.5747  loss_mask_3: 0.1894  loss_dice_3: 1.228  loss_ce_4: 0.5543  loss_mask_4: 0.1868  loss_dice_4: 1.207  loss_ce_5: 0.5348  loss_mask_5: 0.1846  loss_dice_5: 1.215  loss_ce_6: 0.5316  loss_mask_6: 0.1868  loss_dice_6: 1.189  loss_ce_7: 0.5236  loss_mask_7: 0.1841  loss_dice_7: 1.199  loss_ce_8: 0.5077  loss_mask_8: 0.183  loss_dice_8: 1.241    time: 1.0456  last_time: 1.0117  data_time: 0.0529  last_data_time: 0.0495   lr: 0.0001  max_mem: 33906M
[10/17 17:14:35] d2.utils.events INFO:  eta: 0:36:47  iter: 879  total_loss: 20.02  loss_ce: 0.4612  loss_mask: 0.1669  loss_dice: 1.238  loss_ce_0: 0.5915  loss_mask_0: 0.1947  loss_dice_0: 1.506  loss_ce_1: 0.6504  loss_mask_1: 0.1774  loss_dice_1: 1.423  loss_ce_2: 0.5639  loss_mask_2: 0.1719  loss_dice_2: 1.316  loss_ce_3: 0.5158  loss_mask_3: 0.1686  loss_dice_3: 1.291  loss_ce_4: 0.5206  loss_mask_4: 0.1678  loss_dice_4: 1.271  loss_ce_5: 0.5092  loss_mask_5: 0.1662  loss_dice_5: 1.25  loss_ce_6: 0.4752  loss_mask_6: 0.1691  loss_dice_6: 1.257  loss_ce_7: 0.4731  loss_mask_7: 0.1675  loss_dice_7: 1.275  loss_ce_8: 0.4789  loss_mask_8: 0.1677  loss_dice_8: 1.235    time: 1.0457  last_time: 1.0495  data_time: 0.0581  last_data_time: 0.0536   lr: 0.0001  max_mem: 33906M
[10/17 17:14:56] d2.utils.events INFO:  eta: 0:36:26  iter: 899  total_loss: 20.34  loss_ce: 0.487  loss_mask: 0.1872  loss_dice: 1.23  loss_ce_0: 0.5623  loss_mask_0: 0.2134  loss_dice_0: 1.522  loss_ce_1: 0.6265  loss_mask_1: 0.1967  loss_dice_1: 1.386  loss_ce_2: 0.6017  loss_mask_2: 0.1912  loss_dice_2: 1.341  loss_ce_3: 0.5202  loss_mask_3: 0.1896  loss_dice_3: 1.265  loss_ce_4: 0.5086  loss_mask_4: 0.189  loss_dice_4: 1.26  loss_ce_5: 0.4902  loss_mask_5: 0.186  loss_dice_5: 1.28  loss_ce_6: 0.5121  loss_mask_6: 0.1874  loss_dice_6: 1.263  loss_ce_7: 0.4892  loss_mask_7: 0.1865  loss_dice_7: 1.225  loss_ce_8: 0.4904  loss_mask_8: 0.1862  loss_dice_8: 1.276    time: 1.0456  last_time: 1.0496  data_time: 0.0558  last_data_time: 0.0559   lr: 0.0001  max_mem: 33906M
[10/17 17:15:17] d2.utils.events INFO:  eta: 0:36:06  iter: 919  total_loss: 20.84  loss_ce: 0.5164  loss_mask: 0.1724  loss_dice: 1.274  loss_ce_0: 0.5828  loss_mask_0: 0.19  loss_dice_0: 1.508  loss_ce_1: 0.6725  loss_mask_1: 0.183  loss_dice_1: 1.393  loss_ce_2: 0.6446  loss_mask_2: 0.1807  loss_dice_2: 1.353  loss_ce_3: 0.549  loss_mask_3: 0.1766  loss_dice_3: 1.309  loss_ce_4: 0.5209  loss_mask_4: 0.1755  loss_dice_4: 1.282  loss_ce_5: 0.5636  loss_mask_5: 0.1748  loss_dice_5: 1.259  loss_ce_6: 0.5208  loss_mask_6: 0.1725  loss_dice_6: 1.261  loss_ce_7: 0.5581  loss_mask_7: 0.1709  loss_dice_7: 1.264  loss_ce_8: 0.529  loss_mask_8: 0.1709  loss_dice_8: 1.259    time: 1.0458  last_time: 1.0122  data_time: 0.0566  last_data_time: 0.0552   lr: 0.0001  max_mem: 33906M
[10/17 17:15:38] d2.utils.events INFO:  eta: 0:35:46  iter: 939  total_loss: 20.12  loss_ce: 0.4689  loss_mask: 0.1852  loss_dice: 1.24  loss_ce_0: 0.5652  loss_mask_0: 0.2186  loss_dice_0: 1.511  loss_ce_1: 0.6374  loss_mask_1: 0.1957  loss_dice_1: 1.403  loss_ce_2: 0.6  loss_mask_2: 0.1946  loss_dice_2: 1.343  loss_ce_3: 0.5449  loss_mask_3: 0.1905  loss_dice_3: 1.248  loss_ce_4: 0.4885  loss_mask_4: 0.1897  loss_dice_4: 1.233  loss_ce_5: 0.4888  loss_mask_5: 0.187  loss_dice_5: 1.266  loss_ce_6: 0.478  loss_mask_6: 0.1857  loss_dice_6: 1.258  loss_ce_7: 0.4504  loss_mask_7: 0.1863  loss_dice_7: 1.242  loss_ce_8: 0.477  loss_mask_8: 0.1848  loss_dice_8: 1.209    time: 1.0459  last_time: 1.0499  data_time: 0.0596  last_data_time: 0.0506   lr: 0.0001  max_mem: 33906M
[10/17 17:16:00] d2.utils.events INFO:  eta: 0:35:25  iter: 959  total_loss: 19.74  loss_ce: 0.4812  loss_mask: 0.166  loss_dice: 1.198  loss_ce_0: 0.5968  loss_mask_0: 0.1938  loss_dice_0: 1.392  loss_ce_1: 0.6667  loss_mask_1: 0.1802  loss_dice_1: 1.337  loss_ce_2: 0.6302  loss_mask_2: 0.1706  loss_dice_2: 1.289  loss_ce_3: 0.545  loss_mask_3: 0.1707  loss_dice_3: 1.216  loss_ce_4: 0.5038  loss_mask_4: 0.1693  loss_dice_4: 1.24  loss_ce_5: 0.5043  loss_mask_5: 0.1695  loss_dice_5: 1.215  loss_ce_6: 0.4736  loss_mask_6: 0.167  loss_dice_6: 1.204  loss_ce_7: 0.4884  loss_mask_7: 0.1686  loss_dice_7: 1.193  loss_ce_8: 0.4773  loss_mask_8: 0.1666  loss_dice_8: 1.194    time: 1.0463  last_time: 1.0352  data_time: 0.0585  last_data_time: 0.0538   lr: 0.0001  max_mem: 33906M
[10/17 17:16:21] d2.utils.events INFO:  eta: 0:35:04  iter: 979  total_loss: 20.62  loss_ce: 0.465  loss_mask: 0.1692  loss_dice: 1.275  loss_ce_0: 0.596  loss_mask_0: 0.2008  loss_dice_0: 1.529  loss_ce_1: 0.6757  loss_mask_1: 0.1831  loss_dice_1: 1.401  loss_ce_2: 0.6164  loss_mask_2: 0.1773  loss_dice_2: 1.324  loss_ce_3: 0.569  loss_mask_3: 0.1741  loss_dice_3: 1.306  loss_ce_4: 0.5294  loss_mask_4: 0.1757  loss_dice_4: 1.335  loss_ce_5: 0.5158  loss_mask_5: 0.1716  loss_dice_5: 1.294  loss_ce_6: 0.4987  loss_mask_6: 0.1726  loss_dice_6: 1.26  loss_ce_7: 0.5079  loss_mask_7: 0.1705  loss_dice_7: 1.265  loss_ce_8: 0.4994  loss_mask_8: 0.1681  loss_dice_8: 1.287    time: 1.0463  last_time: 1.0981  data_time: 0.0576  last_data_time: 0.0610   lr: 0.0001  max_mem: 33906M
[10/17 17:16:42] d2.utils.events INFO:  eta: 0:34:43  iter: 999  total_loss: 21.22  loss_ce: 0.5189  loss_mask: 0.1674  loss_dice: 1.291  loss_ce_0: 0.6024  loss_mask_0: 0.1979  loss_dice_0: 1.535  loss_ce_1: 0.6844  loss_mask_1: 0.1795  loss_dice_1: 1.435  loss_ce_2: 0.6573  loss_mask_2: 0.1768  loss_dice_2: 1.371  loss_ce_3: 0.5872  loss_mask_3: 0.1719  loss_dice_3: 1.299  loss_ce_4: 0.5752  loss_mask_4: 0.1701  loss_dice_4: 1.319  loss_ce_5: 0.5665  loss_mask_5: 0.1692  loss_dice_5: 1.321  loss_ce_6: 0.5517  loss_mask_6: 0.1703  loss_dice_6: 1.31  loss_ce_7: 0.5101  loss_mask_7: 0.1688  loss_dice_7: 1.291  loss_ce_8: 0.5246  loss_mask_8: 0.1683  loss_dice_8: 1.296    time: 1.0463  last_time: 1.1377  data_time: 0.0575  last_data_time: 0.0593   lr: 0.0001  max_mem: 33906M
[10/17 17:17:02] d2.utils.events INFO:  eta: 0:34:22  iter: 1019  total_loss: 20.44  loss_ce: 0.526  loss_mask: 0.1693  loss_dice: 1.244  loss_ce_0: 0.6056  loss_mask_0: 0.1956  loss_dice_0: 1.426  loss_ce_1: 0.6495  loss_mask_1: 0.1916  loss_dice_1: 1.39  loss_ce_2: 0.6056  loss_mask_2: 0.1766  loss_dice_2: 1.369  loss_ce_3: 0.56  loss_mask_3: 0.1774  loss_dice_3: 1.279  loss_ce_4: 0.5192  loss_mask_4: 0.1762  loss_dice_4: 1.297  loss_ce_5: 0.5328  loss_mask_5: 0.1719  loss_dice_5: 1.298  loss_ce_6: 0.5335  loss_mask_6: 0.172  loss_dice_6: 1.259  loss_ce_7: 0.507  loss_mask_7: 0.1724  loss_dice_7: 1.259  loss_ce_8: 0.5177  loss_mask_8: 0.1714  loss_dice_8: 1.231    time: 1.0462  last_time: 1.0873  data_time: 0.0584  last_data_time: 0.0577   lr: 0.0001  max_mem: 33906M
[10/17 17:17:23] d2.utils.events INFO:  eta: 0:34:02  iter: 1039  total_loss: 20.6  loss_ce: 0.4894  loss_mask: 0.1661  loss_dice: 1.22  loss_ce_0: 0.5678  loss_mask_0: 0.2004  loss_dice_0: 1.474  loss_ce_1: 0.6575  loss_mask_1: 0.1846  loss_dice_1: 1.424  loss_ce_2: 0.5634  loss_mask_2: 0.178  loss_dice_2: 1.345  loss_ce_3: 0.5252  loss_mask_3: 0.1696  loss_dice_3: 1.306  loss_ce_4: 0.4662  loss_mask_4: 0.1704  loss_dice_4: 1.299  loss_ce_5: 0.4994  loss_mask_5: 0.1685  loss_dice_5: 1.259  loss_ce_6: 0.4833  loss_mask_6: 0.1663  loss_dice_6: 1.277  loss_ce_7: 0.4795  loss_mask_7: 0.1659  loss_dice_7: 1.249  loss_ce_8: 0.4897  loss_mask_8: 0.1643  loss_dice_8: 1.27    time: 1.0460  last_time: 1.0553  data_time: 0.0561  last_data_time: 0.0609   lr: 0.0001  max_mem: 33906M
[10/17 17:17:44] d2.utils.events INFO:  eta: 0:33:41  iter: 1059  total_loss: 19.95  loss_ce: 0.4693  loss_mask: 0.1684  loss_dice: 1.219  loss_ce_0: 0.5734  loss_mask_0: 0.197  loss_dice_0: 1.427  loss_ce_1: 0.637  loss_mask_1: 0.1839  loss_dice_1: 1.354  loss_ce_2: 0.6103  loss_mask_2: 0.1704  loss_dice_2: 1.319  loss_ce_3: 0.5289  loss_mask_3: 0.1708  loss_dice_3: 1.241  loss_ce_4: 0.5048  loss_mask_4: 0.171  loss_dice_4: 1.262  loss_ce_5: 0.5163  loss_mask_5: 0.1693  loss_dice_5: 1.235  loss_ce_6: 0.4906  loss_mask_6: 0.1691  loss_dice_6: 1.233  loss_ce_7: 0.4865  loss_mask_7: 0.1662  loss_dice_7: 1.23  loss_ce_8: 0.4899  loss_mask_8: 0.1676  loss_dice_8: 1.227    time: 1.0459  last_time: 0.9939  data_time: 0.0580  last_data_time: 0.0603   lr: 0.0001  max_mem: 33906M
[10/17 17:18:05] d2.utils.events INFO:  eta: 0:33:20  iter: 1079  total_loss: 20.54  loss_ce: 0.4877  loss_mask: 0.1821  loss_dice: 1.269  loss_ce_0: 0.6089  loss_mask_0: 0.2068  loss_dice_0: 1.485  loss_ce_1: 0.6332  loss_mask_1: 0.1987  loss_dice_1: 1.371  loss_ce_2: 0.5815  loss_mask_2: 0.1923  loss_dice_2: 1.347  loss_ce_3: 0.5382  loss_mask_3: 0.1924  loss_dice_3: 1.25  loss_ce_4: 0.5017  loss_mask_4: 0.1834  loss_dice_4: 1.259  loss_ce_5: 0.5371  loss_mask_5: 0.1861  loss_dice_5: 1.233  loss_ce_6: 0.5215  loss_mask_6: 0.1834  loss_dice_6: 1.229  loss_ce_7: 0.534  loss_mask_7: 0.1832  loss_dice_7: 1.271  loss_ce_8: 0.499  loss_mask_8: 0.1808  loss_dice_8: 1.232    time: 1.0458  last_time: 1.0419  data_time: 0.0553  last_data_time: 0.0477   lr: 0.0001  max_mem: 33906M
[10/17 17:18:26] d2.utils.events INFO:  eta: 0:32:59  iter: 1099  total_loss: 20.33  loss_ce: 0.5127  loss_mask: 0.1671  loss_dice: 1.25  loss_ce_0: 0.6101  loss_mask_0: 0.1949  loss_dice_0: 1.468  loss_ce_1: 0.6829  loss_mask_1: 0.1865  loss_dice_1: 1.395  loss_ce_2: 0.5966  loss_mask_2: 0.1739  loss_dice_2: 1.321  loss_ce_3: 0.5825  loss_mask_3: 0.1702  loss_dice_3: 1.264  loss_ce_4: 0.5409  loss_mask_4: 0.1722  loss_dice_4: 1.275  loss_ce_5: 0.5142  loss_mask_5: 0.1703  loss_dice_5: 1.276  loss_ce_6: 0.5189  loss_mask_6: 0.1676  loss_dice_6: 1.247  loss_ce_7: 0.5215  loss_mask_7: 0.169  loss_dice_7: 1.244  loss_ce_8: 0.5364  loss_mask_8: 0.1682  loss_dice_8: 1.232    time: 1.0458  last_time: 1.0672  data_time: 0.0573  last_data_time: 0.0574   lr: 0.0001  max_mem: 33906M
[10/17 17:18:47] d2.utils.events INFO:  eta: 0:32:40  iter: 1119  total_loss: 20.51  loss_ce: 0.5017  loss_mask: 0.1589  loss_dice: 1.273  loss_ce_0: 0.5864  loss_mask_0: 0.1868  loss_dice_0: 1.536  loss_ce_1: 0.632  loss_mask_1: 0.1706  loss_dice_1: 1.42  loss_ce_2: 0.6121  loss_mask_2: 0.1641  loss_dice_2: 1.338  loss_ce_3: 0.5543  loss_mask_3: 0.1609  loss_dice_3: 1.298  loss_ce_4: 0.5171  loss_mask_4: 0.1591  loss_dice_4: 1.298  loss_ce_5: 0.5377  loss_mask_5: 0.159  loss_dice_5: 1.311  loss_ce_6: 0.534  loss_mask_6: 0.1584  loss_dice_6: 1.25  loss_ce_7: 0.5112  loss_mask_7: 0.1586  loss_dice_7: 1.284  loss_ce_8: 0.5114  loss_mask_8: 0.159  loss_dice_8: 1.233    time: 1.0460  last_time: 1.0343  data_time: 0.0582  last_data_time: 0.0601   lr: 0.0001  max_mem: 33906M
[10/17 17:19:08] d2.utils.events INFO:  eta: 0:32:20  iter: 1139  total_loss: 20.33  loss_ce: 0.4826  loss_mask: 0.1707  loss_dice: 1.165  loss_ce_0: 0.5531  loss_mask_0: 0.2008  loss_dice_0: 1.402  loss_ce_1: 0.6273  loss_mask_1: 0.187  loss_dice_1: 1.329  loss_ce_2: 0.6203  loss_mask_2: 0.1745  loss_dice_2: 1.314  loss_ce_3: 0.5284  loss_mask_3: 0.1758  loss_dice_3: 1.212  loss_ce_4: 0.5177  loss_mask_4: 0.1741  loss_dice_4: 1.235  loss_ce_5: 0.5241  loss_mask_5: 0.1733  loss_dice_5: 1.209  loss_ce_6: 0.5003  loss_mask_6: 0.1729  loss_dice_6: 1.213  loss_ce_7: 0.5062  loss_mask_7: 0.1724  loss_dice_7: 1.192  loss_ce_8: 0.4831  loss_mask_8: 0.1701  loss_dice_8: 1.201    time: 1.0463  last_time: 1.0332  data_time: 0.0611  last_data_time: 0.0553   lr: 0.0001  max_mem: 33906M
[10/17 17:19:29] d2.utils.events INFO:  eta: 0:31:59  iter: 1159  total_loss: 20.2  loss_ce: 0.4566  loss_mask: 0.1637  loss_dice: 1.22  loss_ce_0: 0.5495  loss_mask_0: 0.1878  loss_dice_0: 1.485  loss_ce_1: 0.6518  loss_mask_1: 0.1786  loss_dice_1: 1.366  loss_ce_2: 0.5552  loss_mask_2: 0.1709  loss_dice_2: 1.319  loss_ce_3: 0.5371  loss_mask_3: 0.1715  loss_dice_3: 1.283  loss_ce_4: 0.5135  loss_mask_4: 0.1688  loss_dice_4: 1.283  loss_ce_5: 0.5142  loss_mask_5: 0.1644  loss_dice_5: 1.262  loss_ce_6: 0.511  loss_mask_6: 0.1652  loss_dice_6: 1.214  loss_ce_7: 0.4687  loss_mask_7: 0.1641  loss_dice_7: 1.242  loss_ce_8: 0.4763  loss_mask_8: 0.1645  loss_dice_8: 1.226    time: 1.0463  last_time: 1.0548  data_time: 0.0565  last_data_time: 0.0594   lr: 0.0001  max_mem: 33906M
[10/17 17:19:50] d2.utils.events INFO:  eta: 0:31:38  iter: 1179  total_loss: 20.11  loss_ce: 0.4731  loss_mask: 0.1658  loss_dice: 1.236  loss_ce_0: 0.6229  loss_mask_0: 0.1867  loss_dice_0: 1.443  loss_ce_1: 0.6783  loss_mask_1: 0.1876  loss_dice_1: 1.368  loss_ce_2: 0.5791  loss_mask_2: 0.1756  loss_dice_2: 1.292  loss_ce_3: 0.5607  loss_mask_3: 0.1691  loss_dice_3: 1.274  loss_ce_4: 0.4844  loss_mask_4: 0.1678  loss_dice_4: 1.262  loss_ce_5: 0.497  loss_mask_5: 0.1651  loss_dice_5: 1.232  loss_ce_6: 0.4751  loss_mask_6: 0.169  loss_dice_6: 1.231  loss_ce_7: 0.4825  loss_mask_7: 0.1677  loss_dice_7: 1.219  loss_ce_8: 0.4734  loss_mask_8: 0.1677  loss_dice_8: 1.208    time: 1.0461  last_time: 1.0697  data_time: 0.0543  last_data_time: 0.0580   lr: 0.0001  max_mem: 33906M
[10/17 17:20:11] d2.utils.events INFO:  eta: 0:31:17  iter: 1199  total_loss: 20.79  loss_ce: 0.5234  loss_mask: 0.1673  loss_dice: 1.247  loss_ce_0: 0.5983  loss_mask_0: 0.1972  loss_dice_0: 1.487  loss_ce_1: 0.6915  loss_mask_1: 0.1883  loss_dice_1: 1.368  loss_ce_2: 0.6475  loss_mask_2: 0.1742  loss_dice_2: 1.328  loss_ce_3: 0.5856  loss_mask_3: 0.1735  loss_dice_3: 1.235  loss_ce_4: 0.5586  loss_mask_4: 0.1722  loss_dice_4: 1.276  loss_ce_5: 0.5553  loss_mask_5: 0.169  loss_dice_5: 1.28  loss_ce_6: 0.5484  loss_mask_6: 0.168  loss_dice_6: 1.286  loss_ce_7: 0.5143  loss_mask_7: 0.1663  loss_dice_7: 1.237  loss_ce_8: 0.5173  loss_mask_8: 0.1664  loss_dice_8: 1.252    time: 1.0461  last_time: 1.0475  data_time: 0.0562  last_data_time: 0.0545   lr: 0.0001  max_mem: 33906M
[10/17 17:20:32] d2.utils.events INFO:  eta: 0:30:55  iter: 1219  total_loss: 19.24  loss_ce: 0.4557  loss_mask: 0.1702  loss_dice: 1.173  loss_ce_0: 0.5615  loss_mask_0: 0.1945  loss_dice_0: 1.389  loss_ce_1: 0.6006  loss_mask_1: 0.18  loss_dice_1: 1.34  loss_ce_2: 0.5341  loss_mask_2: 0.175  loss_dice_2: 1.268  loss_ce_3: 0.4949  loss_mask_3: 0.174  loss_dice_3: 1.214  loss_ce_4: 0.4953  loss_mask_4: 0.1717  loss_dice_4: 1.215  loss_ce_5: 0.4795  loss_mask_5: 0.1707  loss_dice_5: 1.234  loss_ce_6: 0.4703  loss_mask_6: 0.1715  loss_dice_6: 1.229  loss_ce_7: 0.456  loss_mask_7: 0.1703  loss_dice_7: 1.196  loss_ce_8: 0.4586  loss_mask_8: 0.1719  loss_dice_8: 1.226    time: 1.0459  last_time: 1.0456  data_time: 0.0534  last_data_time: 0.0569   lr: 0.0001  max_mem: 33906M
[10/17 17:20:53] d2.utils.events INFO:  eta: 0:30:35  iter: 1239  total_loss: 19.99  loss_ce: 0.4747  loss_mask: 0.1513  loss_dice: 1.267  loss_ce_0: 0.5619  loss_mask_0: 0.1773  loss_dice_0: 1.438  loss_ce_1: 0.6006  loss_mask_1: 0.1627  loss_dice_1: 1.389  loss_ce_2: 0.5571  loss_mask_2: 0.1526  loss_dice_2: 1.315  loss_ce_3: 0.5228  loss_mask_3: 0.1536  loss_dice_3: 1.274  loss_ce_4: 0.5124  loss_mask_4: 0.1537  loss_dice_4: 1.277  loss_ce_5: 0.4985  loss_mask_5: 0.1538  loss_dice_5: 1.301  loss_ce_6: 0.4891  loss_mask_6: 0.153  loss_dice_6: 1.255  loss_ce_7: 0.4772  loss_mask_7: 0.1509  loss_dice_7: 1.275  loss_ce_8: 0.5009  loss_mask_8: 0.151  loss_dice_8: 1.236    time: 1.0460  last_time: 1.0088  data_time: 0.0582  last_data_time: 0.0491   lr: 0.0001  max_mem: 33906M
[10/17 17:21:14] d2.utils.events INFO:  eta: 0:30:14  iter: 1259  total_loss: 19.24  loss_ce: 0.4392  loss_mask: 0.1559  loss_dice: 1.183  loss_ce_0: 0.5731  loss_mask_0: 0.1768  loss_dice_0: 1.42  loss_ce_1: 0.6192  loss_mask_1: 0.1761  loss_dice_1: 1.344  loss_ce_2: 0.583  loss_mask_2: 0.1605  loss_dice_2: 1.258  loss_ce_3: 0.531  loss_mask_3: 0.1608  loss_dice_3: 1.229  loss_ce_4: 0.5242  loss_mask_4: 0.1588  loss_dice_4: 1.185  loss_ce_5: 0.52  loss_mask_5: 0.1582  loss_dice_5: 1.167  loss_ce_6: 0.4676  loss_mask_6: 0.1581  loss_dice_6: 1.159  loss_ce_7: 0.4719  loss_mask_7: 0.1563  loss_dice_7: 1.172  loss_ce_8: 0.4554  loss_mask_8: 0.1552  loss_dice_8: 1.202    time: 1.0459  last_time: 1.0534  data_time: 0.0560  last_data_time: 0.0624   lr: 0.0001  max_mem: 33906M
[10/17 17:21:36] d2.utils.events INFO:  eta: 0:29:54  iter: 1279  total_loss: 20.05  loss_ce: 0.4704  loss_mask: 0.167  loss_dice: 1.24  loss_ce_0: 0.5464  loss_mask_0: 0.1933  loss_dice_0: 1.454  loss_ce_1: 0.6157  loss_mask_1: 0.1783  loss_dice_1: 1.398  loss_ce_2: 0.5862  loss_mask_2: 0.1689  loss_dice_2: 1.333  loss_ce_3: 0.5393  loss_mask_3: 0.1707  loss_dice_3: 1.299  loss_ce_4: 0.4958  loss_mask_4: 0.1685  loss_dice_4: 1.283  loss_ce_5: 0.5114  loss_mask_5: 0.1671  loss_dice_5: 1.264  loss_ce_6: 0.4999  loss_mask_6: 0.167  loss_dice_6: 1.227  loss_ce_7: 0.4706  loss_mask_7: 0.1656  loss_dice_7: 1.225  loss_ce_8: 0.4703  loss_mask_8: 0.1683  loss_dice_8: 1.254    time: 1.0465  last_time: 1.1373  data_time: 0.0671  last_data_time: 0.0641   lr: 0.0001  max_mem: 33906M
[10/17 17:21:57] d2.utils.events INFO:  eta: 0:29:34  iter: 1299  total_loss: 19.54  loss_ce: 0.5025  loss_mask: 0.1671  loss_dice: 1.189  loss_ce_0: 0.5531  loss_mask_0: 0.2048  loss_dice_0: 1.41  loss_ce_1: 0.6024  loss_mask_1: 0.1856  loss_dice_1: 1.347  loss_ce_2: 0.5737  loss_mask_2: 0.1788  loss_dice_2: 1.299  loss_ce_3: 0.5452  loss_mask_3: 0.1736  loss_dice_3: 1.204  loss_ce_4: 0.5225  loss_mask_4: 0.1664  loss_dice_4: 1.223  loss_ce_5: 0.5017  loss_mask_5: 0.1656  loss_dice_5: 1.226  loss_ce_6: 0.4985  loss_mask_6: 0.1637  loss_dice_6: 1.203  loss_ce_7: 0.4888  loss_mask_7: 0.1648  loss_dice_7: 1.209  loss_ce_8: 0.5019  loss_mask_8: 0.1645  loss_dice_8: 1.19    time: 1.0468  last_time: 1.1778  data_time: 0.0705  last_data_time: 0.0797   lr: 0.0001  max_mem: 33906M
[10/17 17:22:18] d2.utils.events INFO:  eta: 0:29:13  iter: 1319  total_loss: 20.7  loss_ce: 0.5321  loss_mask: 0.1731  loss_dice: 1.24  loss_ce_0: 0.5722  loss_mask_0: 0.2015  loss_dice_0: 1.498  loss_ce_1: 0.6502  loss_mask_1: 0.1848  loss_dice_1: 1.405  loss_ce_2: 0.6244  loss_mask_2: 0.1781  loss_dice_2: 1.334  loss_ce_3: 0.5715  loss_mask_3: 0.177  loss_dice_3: 1.293  loss_ce_4: 0.5553  loss_mask_4: 0.1779  loss_dice_4: 1.293  loss_ce_5: 0.5668  loss_mask_5: 0.1737  loss_dice_5: 1.285  loss_ce_6: 0.541  loss_mask_6: 0.1723  loss_dice_6: 1.259  loss_ce_7: 0.5282  loss_mask_7: 0.1733  loss_dice_7: 1.235  loss_ce_8: 0.5043  loss_mask_8: 0.1734  loss_dice_8: 1.255    time: 1.0472  last_time: 1.0720  data_time: 0.0699  last_data_time: 0.0735   lr: 0.0001  max_mem: 33906M
[10/17 17:22:40] d2.utils.events INFO:  eta: 0:28:53  iter: 1339  total_loss: 19.89  loss_ce: 0.506  loss_mask: 0.1737  loss_dice: 1.209  loss_ce_0: 0.5918  loss_mask_0: 0.1969  loss_dice_0: 1.432  loss_ce_1: 0.6477  loss_mask_1: 0.1843  loss_dice_1: 1.345  loss_ce_2: 0.5956  loss_mask_2: 0.1772  loss_dice_2: 1.251  loss_ce_3: 0.536  loss_mask_3: 0.1841  loss_dice_3: 1.233  loss_ce_4: 0.5207  loss_mask_4: 0.1776  loss_dice_4: 1.229  loss_ce_5: 0.4783  loss_mask_5: 0.1756  loss_dice_5: 1.212  loss_ce_6: 0.4914  loss_mask_6: 0.172  loss_dice_6: 1.177  loss_ce_7: 0.4856  loss_mask_7: 0.1758  loss_dice_7: 1.229  loss_ce_8: 0.5024  loss_mask_8: 0.1723  loss_dice_8: 1.212    time: 1.0474  last_time: 1.0357  data_time: 0.0691  last_data_time: 0.0900   lr: 0.0001  max_mem: 33906M
[10/17 17:23:01] d2.utils.events INFO:  eta: 0:28:32  iter: 1359  total_loss: 20.01  loss_ce: 0.465  loss_mask: 0.1613  loss_dice: 1.208  loss_ce_0: 0.5701  loss_mask_0: 0.1922  loss_dice_0: 1.435  loss_ce_1: 0.6291  loss_mask_1: 0.1713  loss_dice_1: 1.362  loss_ce_2: 0.599  loss_mask_2: 0.1626  loss_dice_2: 1.279  loss_ce_3: 0.5317  loss_mask_3: 0.1629  loss_dice_3: 1.225  loss_ce_4: 0.4988  loss_mask_4: 0.1599  loss_dice_4: 1.23  loss_ce_5: 0.4958  loss_mask_5: 0.1585  loss_dice_5: 1.206  loss_ce_6: 0.4874  loss_mask_6: 0.1601  loss_dice_6: 1.211  loss_ce_7: 0.4827  loss_mask_7: 0.1601  loss_dice_7: 1.159  loss_ce_8: 0.4805  loss_mask_8: 0.1603  loss_dice_8: 1.216    time: 1.0476  last_time: 1.0792  data_time: 0.0735  last_data_time: 0.0654   lr: 0.0001  max_mem: 33906M
[10/17 17:23:22] d2.utils.events INFO:  eta: 0:28:12  iter: 1379  total_loss: 18.65  loss_ce: 0.4263  loss_mask: 0.1696  loss_dice: 1.183  loss_ce_0: 0.5486  loss_mask_0: 0.191  loss_dice_0: 1.359  loss_ce_1: 0.5951  loss_mask_1: 0.1817  loss_dice_1: 1.32  loss_ce_2: 0.5391  loss_mask_2: 0.17  loss_dice_2: 1.257  loss_ce_3: 0.4811  loss_mask_3: 0.1702  loss_dice_3: 1.197  loss_ce_4: 0.4649  loss_mask_4: 0.1688  loss_dice_4: 1.198  loss_ce_5: 0.4427  loss_mask_5: 0.1705  loss_dice_5: 1.221  loss_ce_6: 0.4299  loss_mask_6: 0.1706  loss_dice_6: 1.192  loss_ce_7: 0.449  loss_mask_7: 0.169  loss_dice_7: 1.185  loss_ce_8: 0.4339  loss_mask_8: 0.1695  loss_dice_8: 1.166    time: 1.0478  last_time: 1.0207  data_time: 0.0729  last_data_time: 0.0653   lr: 0.0001  max_mem: 33906M
[10/17 17:23:44] d2.utils.events INFO:  eta: 0:27:52  iter: 1399  total_loss: 20.46  loss_ce: 0.4793  loss_mask: 0.1643  loss_dice: 1.244  loss_ce_0: 0.5421  loss_mask_0: 0.2  loss_dice_0: 1.539  loss_ce_1: 0.6395  loss_mask_1: 0.1897  loss_dice_1: 1.476  loss_ce_2: 0.602  loss_mask_2: 0.1738  loss_dice_2: 1.346  loss_ce_3: 0.5538  loss_mask_3: 0.1712  loss_dice_3: 1.331  loss_ce_4: 0.51  loss_mask_4: 0.1698  loss_dice_4: 1.302  loss_ce_5: 0.5042  loss_mask_5: 0.1664  loss_dice_5: 1.297  loss_ce_6: 0.4885  loss_mask_6: 0.1662  loss_dice_6: 1.235  loss_ce_7: 0.5023  loss_mask_7: 0.167  loss_dice_7: 1.249  loss_ce_8: 0.4902  loss_mask_8: 0.1641  loss_dice_8: 1.277    time: 1.0479  last_time: 1.0496  data_time: 0.0702  last_data_time: 0.0651   lr: 0.0001  max_mem: 33906M
[10/17 17:24:05] d2.utils.events INFO:  eta: 0:27:31  iter: 1419  total_loss: 20.07  loss_ce: 0.4628  loss_mask: 0.1729  loss_dice: 1.232  loss_ce_0: 0.5878  loss_mask_0: 0.1962  loss_dice_0: 1.452  loss_ce_1: 0.6218  loss_mask_1: 0.1841  loss_dice_1: 1.37  loss_ce_2: 0.5774  loss_mask_2: 0.1721  loss_dice_2: 1.313  loss_ce_3: 0.5122  loss_mask_3: 0.1731  loss_dice_3: 1.249  loss_ce_4: 0.4992  loss_mask_4: 0.1744  loss_dice_4: 1.244  loss_ce_5: 0.5092  loss_mask_5: 0.1735  loss_dice_5: 1.257  loss_ce_6: 0.4855  loss_mask_6: 0.1735  loss_dice_6: 1.221  loss_ce_7: 0.4876  loss_mask_7: 0.1767  loss_dice_7: 1.222  loss_ce_8: 0.4886  loss_mask_8: 0.1787  loss_dice_8: 1.255    time: 1.0482  last_time: 1.0335  data_time: 0.0738  last_data_time: 0.0650   lr: 0.0001  max_mem: 33906M
[10/17 17:24:26] d2.utils.events INFO:  eta: 0:27:11  iter: 1439  total_loss: 20.2  loss_ce: 0.4534  loss_mask: 0.1614  loss_dice: 1.267  loss_ce_0: 0.5789  loss_mask_0: 0.1922  loss_dice_0: 1.502  loss_ce_1: 0.615  loss_mask_1: 0.1763  loss_dice_1: 1.372  loss_ce_2: 0.5807  loss_mask_2: 0.1661  loss_dice_2: 1.323  loss_ce_3: 0.5423  loss_mask_3: 0.1633  loss_dice_3: 1.285  loss_ce_4: 0.5158  loss_mask_4: 0.163  loss_dice_4: 1.266  loss_ce_5: 0.4976  loss_mask_5: 0.1643  loss_dice_5: 1.275  loss_ce_6: 0.5097  loss_mask_6: 0.1607  loss_dice_6: 1.235  loss_ce_7: 0.505  loss_mask_7: 0.1637  loss_dice_7: 1.223  loss_ce_8: 0.4988  loss_mask_8: 0.1608  loss_dice_8: 1.246    time: 1.0485  last_time: 1.0922  data_time: 0.0704  last_data_time: 0.0695   lr: 0.0001  max_mem: 33906M
[10/17 17:24:48] d2.utils.events INFO:  eta: 0:26:51  iter: 1459  total_loss: 19.02  loss_ce: 0.4496  loss_mask: 0.1619  loss_dice: 1.169  loss_ce_0: 0.5625  loss_mask_0: 0.1925  loss_dice_0: 1.388  loss_ce_1: 0.6431  loss_mask_1: 0.1751  loss_dice_1: 1.274  loss_ce_2: 0.5877  loss_mask_2: 0.1684  loss_dice_2: 1.231  loss_ce_3: 0.526  loss_mask_3: 0.1595  loss_dice_3: 1.183  loss_ce_4: 0.4764  loss_mask_4: 0.1618  loss_dice_4: 1.193  loss_ce_5: 0.4885  loss_mask_5: 0.1579  loss_dice_5: 1.198  loss_ce_6: 0.4635  loss_mask_6: 0.1595  loss_dice_6: 1.168  loss_ce_7: 0.4751  loss_mask_7: 0.1622  loss_dice_7: 1.173  loss_ce_8: 0.4604  loss_mask_8: 0.1579  loss_dice_8: 1.16    time: 1.0486  last_time: 1.0630  data_time: 0.0716  last_data_time: 0.0765   lr: 0.0001  max_mem: 33906M
[10/17 17:25:09] d2.utils.events INFO:  eta: 0:26:31  iter: 1479  total_loss: 20.1  loss_ce: 0.4903  loss_mask: 0.1685  loss_dice: 1.247  loss_ce_0: 0.5858  loss_mask_0: 0.1852  loss_dice_0: 1.444  loss_ce_1: 0.6726  loss_mask_1: 0.1804  loss_dice_1: 1.359  loss_ce_2: 0.6009  loss_mask_2: 0.1674  loss_dice_2: 1.31  loss_ce_3: 0.552  loss_mask_3: 0.1714  loss_dice_3: 1.274  loss_ce_4: 0.5285  loss_mask_4: 0.1685  loss_dice_4: 1.278  loss_ce_5: 0.5366  loss_mask_5: 0.1676  loss_dice_5: 1.272  loss_ce_6: 0.5039  loss_mask_6: 0.1669  loss_dice_6: 1.219  loss_ce_7: 0.5033  loss_mask_7: 0.1668  loss_dice_7: 1.238  loss_ce_8: 0.5068  loss_mask_8: 0.1692  loss_dice_8: 1.264    time: 1.0488  last_time: 1.1066  data_time: 0.0716  last_data_time: 0.0788   lr: 0.0001  max_mem: 33906M
[10/17 17:25:30] d2.utils.events INFO:  eta: 0:26:10  iter: 1499  total_loss: 19.63  loss_ce: 0.4732  loss_mask: 0.1708  loss_dice: 1.152  loss_ce_0: 0.5656  loss_mask_0: 0.2022  loss_dice_0: 1.391  loss_ce_1: 0.6579  loss_mask_1: 0.1867  loss_dice_1: 1.269  loss_ce_2: 0.587  loss_mask_2: 0.1829  loss_dice_2: 1.267  loss_ce_3: 0.5637  loss_mask_3: 0.1769  loss_dice_3: 1.208  loss_ce_4: 0.5312  loss_mask_4: 0.1727  loss_dice_4: 1.192  loss_ce_5: 0.5199  loss_mask_5: 0.1732  loss_dice_5: 1.206  loss_ce_6: 0.4839  loss_mask_6: 0.1745  loss_dice_6: 1.17  loss_ce_7: 0.4849  loss_mask_7: 0.1757  loss_dice_7: 1.172  loss_ce_8: 0.4895  loss_mask_8: 0.1732  loss_dice_8: 1.175    time: 1.0491  last_time: 1.0436  data_time: 0.0700  last_data_time: 0.0910   lr: 0.0001  max_mem: 33906M
[10/17 17:25:51] d2.utils.events INFO:  eta: 0:25:50  iter: 1519  total_loss: 18.05  loss_ce: 0.4171  loss_mask: 0.1526  loss_dice: 1.144  loss_ce_0: 0.5516  loss_mask_0: 0.1906  loss_dice_0: 1.364  loss_ce_1: 0.5734  loss_mask_1: 0.1728  loss_dice_1: 1.243  loss_ce_2: 0.4931  loss_mask_2: 0.1589  loss_dice_2: 1.211  loss_ce_3: 0.4578  loss_mask_3: 0.1589  loss_dice_3: 1.163  loss_ce_4: 0.4294  loss_mask_4: 0.1575  loss_dice_4: 1.156  loss_ce_5: 0.4121  loss_mask_5: 0.1539  loss_dice_5: 1.14  loss_ce_6: 0.4338  loss_mask_6: 0.1544  loss_dice_6: 1.12  loss_ce_7: 0.4047  loss_mask_7: 0.1529  loss_dice_7: 1.13  loss_ce_8: 0.4114  loss_mask_8: 0.1526  loss_dice_8: 1.111    time: 1.0491  last_time: 1.0155  data_time: 0.0680  last_data_time: 0.0630   lr: 0.0001  max_mem: 33906M
[10/17 17:26:12] d2.utils.events INFO:  eta: 0:25:29  iter: 1539  total_loss: 19.18  loss_ce: 0.4707  loss_mask: 0.1554  loss_dice: 1.219  loss_ce_0: 0.5561  loss_mask_0: 0.1937  loss_dice_0: 1.432  loss_ce_1: 0.6332  loss_mask_1: 0.1701  loss_dice_1: 1.364  loss_ce_2: 0.5446  loss_mask_2: 0.1642  loss_dice_2: 1.317  loss_ce_3: 0.4904  loss_mask_3: 0.1609  loss_dice_3: 1.245  loss_ce_4: 0.4746  loss_mask_4: 0.16  loss_dice_4: 1.228  loss_ce_5: 0.4626  loss_mask_5: 0.1554  loss_dice_5: 1.255  loss_ce_6: 0.4679  loss_mask_6: 0.157  loss_dice_6: 1.249  loss_ce_7: 0.4584  loss_mask_7: 0.1591  loss_dice_7: 1.22  loss_ce_8: 0.4707  loss_mask_8: 0.1574  loss_dice_8: 1.217    time: 1.0491  last_time: 1.0691  data_time: 0.0635  last_data_time: 0.0557   lr: 0.0001  max_mem: 33906M
[10/17 17:26:34] d2.utils.events INFO:  eta: 0:25:08  iter: 1559  total_loss: 19.8  loss_ce: 0.4409  loss_mask: 0.1783  loss_dice: 1.25  loss_ce_0: 0.5467  loss_mask_0: 0.2133  loss_dice_0: 1.429  loss_ce_1: 0.6243  loss_mask_1: 0.1912  loss_dice_1: 1.324  loss_ce_2: 0.5519  loss_mask_2: 0.1823  loss_dice_2: 1.298  loss_ce_3: 0.4848  loss_mask_3: 0.1837  loss_dice_3: 1.266  loss_ce_4: 0.468  loss_mask_4: 0.1792  loss_dice_4: 1.283  loss_ce_5: 0.4496  loss_mask_5: 0.1788  loss_dice_5: 1.249  loss_ce_6: 0.4657  loss_mask_6: 0.1779  loss_dice_6: 1.25  loss_ce_7: 0.4369  loss_mask_7: 0.1754  loss_dice_7: 1.253  loss_ce_8: 0.4459  loss_mask_8: 0.1768  loss_dice_8: 1.244    time: 1.0494  last_time: 1.0860  data_time: 0.0728  last_data_time: 0.0703   lr: 0.0001  max_mem: 33906M
[10/17 17:26:56] d2.utils.events INFO:  eta: 0:24:47  iter: 1579  total_loss: 20.3  loss_ce: 0.5191  loss_mask: 0.1547  loss_dice: 1.259  loss_ce_0: 0.5796  loss_mask_0: 0.1796  loss_dice_0: 1.477  loss_ce_1: 0.6797  loss_mask_1: 0.1692  loss_dice_1: 1.408  loss_ce_2: 0.6171  loss_mask_2: 0.1551  loss_dice_2: 1.391  loss_ce_3: 0.5861  loss_mask_3: 0.1567  loss_dice_3: 1.335  loss_ce_4: 0.5446  loss_mask_4: 0.1538  loss_dice_4: 1.294  loss_ce_5: 0.5654  loss_mask_5: 0.1536  loss_dice_5: 1.279  loss_ce_6: 0.5294  loss_mask_6: 0.1569  loss_dice_6: 1.267  loss_ce_7: 0.5476  loss_mask_7: 0.1559  loss_dice_7: 1.229  loss_ce_8: 0.5008  loss_mask_8: 0.1551  loss_dice_8: 1.286    time: 1.0498  last_time: 1.0922  data_time: 0.0760  last_data_time: 0.0859   lr: 0.0001  max_mem: 33906M
[10/17 17:27:17] d2.utils.events INFO:  eta: 0:24:26  iter: 1599  total_loss: 19.24  loss_ce: 0.4557  loss_mask: 0.1594  loss_dice: 1.2  loss_ce_0: 0.5843  loss_mask_0: 0.1844  loss_dice_0: 1.37  loss_ce_1: 0.6486  loss_mask_1: 0.1705  loss_dice_1: 1.317  loss_ce_2: 0.5866  loss_mask_2: 0.1634  loss_dice_2: 1.25  loss_ce_3: 0.5246  loss_mask_3: 0.1625  loss_dice_3: 1.241  loss_ce_4: 0.4914  loss_mask_4: 0.1602  loss_dice_4: 1.182  loss_ce_5: 0.5123  loss_mask_5: 0.1603  loss_dice_5: 1.198  loss_ce_6: 0.4684  loss_mask_6: 0.1611  loss_dice_6: 1.187  loss_ce_7: 0.4773  loss_mask_7: 0.1601  loss_dice_7: 1.15  loss_ce_8: 0.4782  loss_mask_8: 0.1607  loss_dice_8: 1.191    time: 1.0498  last_time: 0.9954  data_time: 0.0621  last_data_time: 0.0544   lr: 0.0001  max_mem: 33906M
[10/17 17:27:38] d2.utils.events INFO:  eta: 0:24:05  iter: 1619  total_loss: 19.38  loss_ce: 0.4109  loss_mask: 0.1603  loss_dice: 1.229  loss_ce_0: 0.5354  loss_mask_0: 0.1922  loss_dice_0: 1.475  loss_ce_1: 0.5882  loss_mask_1: 0.1762  loss_dice_1: 1.323  loss_ce_2: 0.5268  loss_mask_2: 0.1687  loss_dice_2: 1.306  loss_ce_3: 0.4765  loss_mask_3: 0.1621  loss_dice_3: 1.317  loss_ce_4: 0.4558  loss_mask_4: 0.1637  loss_dice_4: 1.308  loss_ce_5: 0.4657  loss_mask_5: 0.1626  loss_dice_5: 1.274  loss_ce_6: 0.431  loss_mask_6: 0.1619  loss_dice_6: 1.223  loss_ce_7: 0.4016  loss_mask_7: 0.1619  loss_dice_7: 1.23  loss_ce_8: 0.4473  loss_mask_8: 0.1614  loss_dice_8: 1.264    time: 1.0500  last_time: 1.1384  data_time: 0.0761  last_data_time: 0.0713   lr: 0.0001  max_mem: 33906M
[10/17 17:27:59] d2.utils.events INFO:  eta: 0:23:44  iter: 1639  total_loss: 19.46  loss_ce: 0.4815  loss_mask: 0.1658  loss_dice: 1.207  loss_ce_0: 0.5764  loss_mask_0: 0.1906  loss_dice_0: 1.435  loss_ce_1: 0.6658  loss_mask_1: 0.1755  loss_dice_1: 1.343  loss_ce_2: 0.5781  loss_mask_2: 0.1746  loss_dice_2: 1.293  loss_ce_3: 0.5287  loss_mask_3: 0.1629  loss_dice_3: 1.239  loss_ce_4: 0.5043  loss_mask_4: 0.1651  loss_dice_4: 1.223  loss_ce_5: 0.5354  loss_mask_5: 0.1665  loss_dice_5: 1.214  loss_ce_6: 0.5011  loss_mask_6: 0.1686  loss_dice_6: 1.192  loss_ce_7: 0.4888  loss_mask_7: 0.1632  loss_dice_7: 1.217  loss_ce_8: 0.4982  loss_mask_8: 0.1646  loss_dice_8: 1.22    time: 1.0501  last_time: 1.0348  data_time: 0.0645  last_data_time: 0.0577   lr: 0.0001  max_mem: 33906M
[10/17 17:28:21] d2.utils.events INFO:  eta: 0:23:23  iter: 1659  total_loss: 19.38  loss_ce: 0.468  loss_mask: 0.1645  loss_dice: 1.174  loss_ce_0: 0.5788  loss_mask_0: 0.1921  loss_dice_0: 1.389  loss_ce_1: 0.6086  loss_mask_1: 0.1722  loss_dice_1: 1.353  loss_ce_2: 0.5667  loss_mask_2: 0.1705  loss_dice_2: 1.253  loss_ce_3: 0.5161  loss_mask_3: 0.1703  loss_dice_3: 1.231  loss_ce_4: 0.5084  loss_mask_4: 0.1688  loss_dice_4: 1.194  loss_ce_5: 0.4767  loss_mask_5: 0.1643  loss_dice_5: 1.21  loss_ce_6: 0.4542  loss_mask_6: 0.1654  loss_dice_6: 1.196  loss_ce_7: 0.4703  loss_mask_7: 0.1643  loss_dice_7: 1.174  loss_ce_8: 0.4759  loss_mask_8: 0.1617  loss_dice_8: 1.174    time: 1.0502  last_time: 1.0508  data_time: 0.0642  last_data_time: 0.0622   lr: 0.0001  max_mem: 33906M
[10/17 17:28:42] d2.utils.events INFO:  eta: 0:23:03  iter: 1679  total_loss: 19.18  loss_ce: 0.4295  loss_mask: 0.1664  loss_dice: 1.2  loss_ce_0: 0.5815  loss_mask_0: 0.1862  loss_dice_0: 1.412  loss_ce_1: 0.6245  loss_mask_1: 0.1722  loss_dice_1: 1.333  loss_ce_2: 0.5615  loss_mask_2: 0.1693  loss_dice_2: 1.25  loss_ce_3: 0.501  loss_mask_3: 0.1712  loss_dice_3: 1.228  loss_ce_4: 0.4652  loss_mask_4: 0.1676  loss_dice_4: 1.236  loss_ce_5: 0.4598  loss_mask_5: 0.1662  loss_dice_5: 1.204  loss_ce_6: 0.4225  loss_mask_6: 0.1664  loss_dice_6: 1.214  loss_ce_7: 0.4295  loss_mask_7: 0.1636  loss_dice_7: 1.2  loss_ce_8: 0.4521  loss_mask_8: 0.1664  loss_dice_8: 1.188    time: 1.0504  last_time: 1.1257  data_time: 0.0706  last_data_time: 0.0782   lr: 0.0001  max_mem: 33906M
[10/17 17:29:03] d2.utils.events INFO:  eta: 0:22:42  iter: 1699  total_loss: 19.61  loss_ce: 0.4041  loss_mask: 0.1632  loss_dice: 1.2  loss_ce_0: 0.5418  loss_mask_0: 0.1886  loss_dice_0: 1.466  loss_ce_1: 0.577  loss_mask_1: 0.1699  loss_dice_1: 1.344  loss_ce_2: 0.5777  loss_mask_2: 0.1675  loss_dice_2: 1.291  loss_ce_3: 0.5092  loss_mask_3: 0.1637  loss_dice_3: 1.269  loss_ce_4: 0.4575  loss_mask_4: 0.1653  loss_dice_4: 1.249  loss_ce_5: 0.4594  loss_mask_5: 0.162  loss_dice_5: 1.232  loss_ce_6: 0.4269  loss_mask_6: 0.1647  loss_dice_6: 1.235  loss_ce_7: 0.4356  loss_mask_7: 0.1624  loss_dice_7: 1.219  loss_ce_8: 0.4337  loss_mask_8: 0.1616  loss_dice_8: 1.233    time: 1.0506  last_time: 1.0801  data_time: 0.0697  last_data_time: 0.0769   lr: 0.0001  max_mem: 33906M
[10/17 17:29:24] d2.utils.events INFO:  eta: 0:22:21  iter: 1719  total_loss: 18.9  loss_ce: 0.4389  loss_mask: 0.1642  loss_dice: 1.174  loss_ce_0: 0.5314  loss_mask_0: 0.1876  loss_dice_0: 1.402  loss_ce_1: 0.6157  loss_mask_1: 0.1776  loss_dice_1: 1.31  loss_ce_2: 0.5516  loss_mask_2: 0.1722  loss_dice_2: 1.271  loss_ce_3: 0.469  loss_mask_3: 0.163  loss_dice_3: 1.237  loss_ce_4: 0.4507  loss_mask_4: 0.1618  loss_dice_4: 1.172  loss_ce_5: 0.4404  loss_mask_5: 0.1673  loss_dice_5: 1.201  loss_ce_6: 0.4255  loss_mask_6: 0.1656  loss_dice_6: 1.193  loss_ce_7: 0.4284  loss_mask_7: 0.1627  loss_dice_7: 1.183  loss_ce_8: 0.4185  loss_mask_8: 0.1638  loss_dice_8: 1.178    time: 1.0506  last_time: 1.0498  data_time: 0.0694  last_data_time: 0.0565   lr: 0.0001  max_mem: 33906M
[10/17 17:29:46] d2.utils.events INFO:  eta: 0:22:00  iter: 1739  total_loss: 18.68  loss_ce: 0.4247  loss_mask: 0.1615  loss_dice: 1.163  loss_ce_0: 0.5298  loss_mask_0: 0.1853  loss_dice_0: 1.371  loss_ce_1: 0.602  loss_mask_1: 0.1742  loss_dice_1: 1.268  loss_ce_2: 0.5531  loss_mask_2: 0.1626  loss_dice_2: 1.234  loss_ce_3: 0.4897  loss_mask_3: 0.1663  loss_dice_3: 1.185  loss_ce_4: 0.473  loss_mask_4: 0.1645  loss_dice_4: 1.173  loss_ce_5: 0.4601  loss_mask_5: 0.1633  loss_dice_5: 1.178  loss_ce_6: 0.4438  loss_mask_6: 0.1637  loss_dice_6: 1.197  loss_ce_7: 0.4399  loss_mask_7: 0.1659  loss_dice_7: 1.148  loss_ce_8: 0.4534  loss_mask_8: 0.1637  loss_dice_8: 1.141    time: 1.0507  last_time: 1.0318  data_time: 0.0740  last_data_time: 0.0788   lr: 0.0001  max_mem: 33906M
[10/17 17:30:07] d2.utils.events INFO:  eta: 0:21:41  iter: 1759  total_loss: 21.22  loss_ce: 0.5151  loss_mask: 0.1662  loss_dice: 1.323  loss_ce_0: 0.6039  loss_mask_0: 0.1909  loss_dice_0: 1.519  loss_ce_1: 0.6703  loss_mask_1: 0.177  loss_dice_1: 1.446  loss_ce_2: 0.6282  loss_mask_2: 0.1678  loss_dice_2: 1.402  loss_ce_3: 0.5649  loss_mask_3: 0.1716  loss_dice_3: 1.347  loss_ce_4: 0.5217  loss_mask_4: 0.1691  loss_dice_4: 1.362  loss_ce_5: 0.5177  loss_mask_5: 0.1676  loss_dice_5: 1.339  loss_ce_6: 0.5193  loss_mask_6: 0.1697  loss_dice_6: 1.34  loss_ce_7: 0.4972  loss_mask_7: 0.164  loss_dice_7: 1.342  loss_ce_8: 0.5052  loss_mask_8: 0.1657  loss_dice_8: 1.322    time: 1.0510  last_time: 1.0538  data_time: 0.0740  last_data_time: 0.0656   lr: 0.0001  max_mem: 33906M
[10/17 17:30:29] d2.utils.events INFO:  eta: 0:21:20  iter: 1779  total_loss: 19.04  loss_ce: 0.4507  loss_mask: 0.179  loss_dice: 1.188  loss_ce_0: 0.5694  loss_mask_0: 0.1998  loss_dice_0: 1.416  loss_ce_1: 0.5835  loss_mask_1: 0.1912  loss_dice_1: 1.315  loss_ce_2: 0.5789  loss_mask_2: 0.183  loss_dice_2: 1.261  loss_ce_3: 0.5183  loss_mask_3: 0.1803  loss_dice_3: 1.2  loss_ce_4: 0.5093  loss_mask_4: 0.1817  loss_dice_4: 1.213  loss_ce_5: 0.4616  loss_mask_5: 0.1781  loss_dice_5: 1.194  loss_ce_6: 0.4413  loss_mask_6: 0.1766  loss_dice_6: 1.154  loss_ce_7: 0.4637  loss_mask_7: 0.1767  loss_dice_7: 1.191  loss_ce_8: 0.4432  loss_mask_8: 0.176  loss_dice_8: 1.169    time: 1.0512  last_time: 1.0394  data_time: 0.0704  last_data_time: 0.0711   lr: 0.0001  max_mem: 33906M
[10/17 17:30:50] d2.utils.events INFO:  eta: 0:21:00  iter: 1799  total_loss: 19.53  loss_ce: 0.4476  loss_mask: 0.163  loss_dice: 1.198  loss_ce_0: 0.5688  loss_mask_0: 0.1816  loss_dice_0: 1.428  loss_ce_1: 0.6124  loss_mask_1: 0.171  loss_dice_1: 1.356  loss_ce_2: 0.5959  loss_mask_2: 0.1643  loss_dice_2: 1.27  loss_ce_3: 0.5251  loss_mask_3: 0.1618  loss_dice_3: 1.238  loss_ce_4: 0.493  loss_mask_4: 0.1625  loss_dice_4: 1.228  loss_ce_5: 0.4935  loss_mask_5: 0.1607  loss_dice_5: 1.223  loss_ce_6: 0.4635  loss_mask_6: 0.1614  loss_dice_6: 1.216  loss_ce_7: 0.4613  loss_mask_7: 0.1619  loss_dice_7: 1.239  loss_ce_8: 0.4755  loss_mask_8: 0.1611  loss_dice_8: 1.199    time: 1.0514  last_time: 1.0887  data_time: 0.0715  last_data_time: 0.0682   lr: 0.0001  max_mem: 33906M
[10/17 17:31:12] d2.utils.events INFO:  eta: 0:20:40  iter: 1819  total_loss: 19.64  loss_ce: 0.45  loss_mask: 0.1593  loss_dice: 1.209  loss_ce_0: 0.5528  loss_mask_0: 0.1833  loss_dice_0: 1.383  loss_ce_1: 0.6243  loss_mask_1: 0.1683  loss_dice_1: 1.316  loss_ce_2: 0.5878  loss_mask_2: 0.1648  loss_dice_2: 1.262  loss_ce_3: 0.518  loss_mask_3: 0.1616  loss_dice_3: 1.189  loss_ce_4: 0.4988  loss_mask_4: 0.1595  loss_dice_4: 1.254  loss_ce_5: 0.4814  loss_mask_5: 0.1586  loss_dice_5: 1.185  loss_ce_6: 0.4712  loss_mask_6: 0.1587  loss_dice_6: 1.205  loss_ce_7: 0.4534  loss_mask_7: 0.1587  loss_dice_7: 1.179  loss_ce_8: 0.4697  loss_mask_8: 0.1586  loss_dice_8: 1.193    time: 1.0517  last_time: 1.1070  data_time: 0.0761  last_data_time: 0.0674   lr: 0.0001  max_mem: 33906M
[10/17 17:31:33] d2.utils.events INFO:  eta: 0:20:20  iter: 1839  total_loss: 19.32  loss_ce: 0.4975  loss_mask: 0.1722  loss_dice: 1.155  loss_ce_0: 0.5747  loss_mask_0: 0.1983  loss_dice_0: 1.329  loss_ce_1: 0.6146  loss_mask_1: 0.1861  loss_dice_1: 1.287  loss_ce_2: 0.5936  loss_mask_2: 0.1759  loss_dice_2: 1.224  loss_ce_3: 0.5581  loss_mask_3: 0.1729  loss_dice_3: 1.164  loss_ce_4: 0.5425  loss_mask_4: 0.1739  loss_dice_4: 1.181  loss_ce_5: 0.5358  loss_mask_5: 0.1701  loss_dice_5: 1.152  loss_ce_6: 0.507  loss_mask_6: 0.1745  loss_dice_6: 1.136  loss_ce_7: 0.5065  loss_mask_7: 0.1735  loss_dice_7: 1.143  loss_ce_8: 0.4602  loss_mask_8: 0.1743  loss_dice_8: 1.169    time: 1.0518  last_time: 1.0538  data_time: 0.0712  last_data_time: 0.0612   lr: 0.0001  max_mem: 33906M
[10/17 17:31:54] d2.utils.events INFO:  eta: 0:20:00  iter: 1859  total_loss: 20.07  loss_ce: 0.4677  loss_mask: 0.1626  loss_dice: 1.222  loss_ce_0: 0.5819  loss_mask_0: 0.206  loss_dice_0: 1.42  loss_ce_1: 0.6179  loss_mask_1: 0.1808  loss_dice_1: 1.386  loss_ce_2: 0.5848  loss_mask_2: 0.1679  loss_dice_2: 1.302  loss_ce_3: 0.5368  loss_mask_3: 0.1653  loss_dice_3: 1.255  loss_ce_4: 0.5049  loss_mask_4: 0.1659  loss_dice_4: 1.253  loss_ce_5: 0.5041  loss_mask_5: 0.1658  loss_dice_5: 1.234  loss_ce_6: 0.4929  loss_mask_6: 0.1661  loss_dice_6: 1.237  loss_ce_7: 0.4837  loss_mask_7: 0.1668  loss_dice_7: 1.263  loss_ce_8: 0.4646  loss_mask_8: 0.165  loss_dice_8: 1.241    time: 1.0518  last_time: 1.0248  data_time: 0.0623  last_data_time: 0.0649   lr: 0.0001  max_mem: 33906M
[10/17 17:32:15] d2.utils.events INFO:  eta: 0:19:39  iter: 1879  total_loss: 19.54  loss_ce: 0.4639  loss_mask: 0.1607  loss_dice: 1.205  loss_ce_0: 0.5822  loss_mask_0: 0.1859  loss_dice_0: 1.416  loss_ce_1: 0.6352  loss_mask_1: 0.1713  loss_dice_1: 1.335  loss_ce_2: 0.5276  loss_mask_2: 0.1652  loss_dice_2: 1.272  loss_ce_3: 0.5167  loss_mask_3: 0.165  loss_dice_3: 1.219  loss_ce_4: 0.4685  loss_mask_4: 0.1638  loss_dice_4: 1.226  loss_ce_5: 0.4823  loss_mask_5: 0.1602  loss_dice_5: 1.227  loss_ce_6: 0.4658  loss_mask_6: 0.1604  loss_dice_6: 1.174  loss_ce_7: 0.433  loss_mask_7: 0.1626  loss_dice_7: 1.214  loss_ce_8: 0.4619  loss_mask_8: 0.1596  loss_dice_8: 1.209    time: 1.0519  last_time: 1.0050  data_time: 0.0645  last_data_time: 0.0429   lr: 0.0001  max_mem: 33906M
[10/17 17:32:37] d2.utils.events INFO:  eta: 0:19:18  iter: 1899  total_loss: 18.94  loss_ce: 0.4395  loss_mask: 0.1596  loss_dice: 1.202  loss_ce_0: 0.5492  loss_mask_0: 0.1896  loss_dice_0: 1.405  loss_ce_1: 0.5884  loss_mask_1: 0.1826  loss_dice_1: 1.331  loss_ce_2: 0.569  loss_mask_2: 0.1732  loss_dice_2: 1.283  loss_ce_3: 0.4784  loss_mask_3: 0.172  loss_dice_3: 1.229  loss_ce_4: 0.4579  loss_mask_4: 0.1692  loss_dice_4: 1.193  loss_ce_5: 0.4722  loss_mask_5: 0.1602  loss_dice_5: 1.195  loss_ce_6: 0.4375  loss_mask_6: 0.1626  loss_dice_6: 1.196  loss_ce_7: 0.4573  loss_mask_7: 0.1608  loss_dice_7: 1.195  loss_ce_8: 0.4617  loss_mask_8: 0.1617  loss_dice_8: 1.188    time: 1.0519  last_time: 1.1263  data_time: 0.0637  last_data_time: 0.0838   lr: 0.0001  max_mem: 33906M
[10/17 17:32:58] d2.utils.events INFO:  eta: 0:18:57  iter: 1919  total_loss: 18.85  loss_ce: 0.4215  loss_mask: 0.1664  loss_dice: 1.179  loss_ce_0: 0.5299  loss_mask_0: 0.1878  loss_dice_0: 1.373  loss_ce_1: 0.6309  loss_mask_1: 0.1747  loss_dice_1: 1.272  loss_ce_2: 0.5605  loss_mask_2: 0.1692  loss_dice_2: 1.24  loss_ce_3: 0.4738  loss_mask_3: 0.1674  loss_dice_3: 1.186  loss_ce_4: 0.4377  loss_mask_4: 0.1673  loss_dice_4: 1.215  loss_ce_5: 0.4226  loss_mask_5: 0.1666  loss_dice_5: 1.18  loss_ce_6: 0.426  loss_mask_6: 0.1686  loss_dice_6: 1.197  loss_ce_7: 0.3955  loss_mask_7: 0.1685  loss_dice_7: 1.183  loss_ce_8: 0.4019  loss_mask_8: 0.1678  loss_dice_8: 1.157    time: 1.0519  last_time: 1.0675  data_time: 0.0687  last_data_time: 0.0835   lr: 0.0001  max_mem: 33906M
[10/17 17:33:19] d2.utils.events INFO:  eta: 0:18:36  iter: 1939  total_loss: 18.87  loss_ce: 0.4367  loss_mask: 0.1546  loss_dice: 1.163  loss_ce_0: 0.5582  loss_mask_0: 0.1765  loss_dice_0: 1.4  loss_ce_1: 0.5783  loss_mask_1: 0.1653  loss_dice_1: 1.342  loss_ce_2: 0.5309  loss_mask_2: 0.1589  loss_dice_2: 1.299  loss_ce_3: 0.4579  loss_mask_3: 0.1568  loss_dice_3: 1.213  loss_ce_4: 0.4314  loss_mask_4: 0.1551  loss_dice_4: 1.172  loss_ce_5: 0.4447  loss_mask_5: 0.1518  loss_dice_5: 1.194  loss_ce_6: 0.4356  loss_mask_6: 0.1529  loss_dice_6: 1.159  loss_ce_7: 0.4311  loss_mask_7: 0.1541  loss_dice_7: 1.187  loss_ce_8: 0.4402  loss_mask_8: 0.1527  loss_dice_8: 1.16    time: 1.0521  last_time: 1.1599  data_time: 0.0731  last_data_time: 0.0804   lr: 0.0001  max_mem: 33906M
[10/17 17:33:41] d2.utils.events INFO:  eta: 0:18:16  iter: 1959  total_loss: 19.81  loss_ce: 0.4814  loss_mask: 0.159  loss_dice: 1.234  loss_ce_0: 0.5942  loss_mask_0: 0.1814  loss_dice_0: 1.46  loss_ce_1: 0.6244  loss_mask_1: 0.1716  loss_dice_1: 1.347  loss_ce_2: 0.5639  loss_mask_2: 0.1657  loss_dice_2: 1.308  loss_ce_3: 0.4994  loss_mask_3: 0.1611  loss_dice_3: 1.242  loss_ce_4: 0.5035  loss_mask_4: 0.163  loss_dice_4: 1.267  loss_ce_5: 0.4771  loss_mask_5: 0.1624  loss_dice_5: 1.263  loss_ce_6: 0.4637  loss_mask_6: 0.1612  loss_dice_6: 1.247  loss_ce_7: 0.4868  loss_mask_7: 0.1617  loss_dice_7: 1.237  loss_ce_8: 0.4796  loss_mask_8: 0.1587  loss_dice_8: 1.223    time: 1.0523  last_time: 1.0615  data_time: 0.0707  last_data_time: 0.0712   lr: 0.0001  max_mem: 33906M
[10/17 17:34:02] d2.utils.events INFO:  eta: 0:17:55  iter: 1979  total_loss: 19.39  loss_ce: 0.4731  loss_mask: 0.1603  loss_dice: 1.211  loss_ce_0: 0.5654  loss_mask_0: 0.1877  loss_dice_0: 1.4  loss_ce_1: 0.5978  loss_mask_1: 0.1644  loss_dice_1: 1.341  loss_ce_2: 0.5426  loss_mask_2: 0.1609  loss_dice_2: 1.258  loss_ce_3: 0.4939  loss_mask_3: 0.1642  loss_dice_3: 1.21  loss_ce_4: 0.4926  loss_mask_4: 0.1603  loss_dice_4: 1.245  loss_ce_5: 0.4731  loss_mask_5: 0.1601  loss_dice_5: 1.212  loss_ce_6: 0.4546  loss_mask_6: 0.1614  loss_dice_6: 1.194  loss_ce_7: 0.4501  loss_mask_7: 0.1587  loss_dice_7: 1.186  loss_ce_8: 0.4774  loss_mask_8: 0.1582  loss_dice_8: 1.194    time: 1.0525  last_time: 1.1238  data_time: 0.0769  last_data_time: 0.1456   lr: 0.0001  max_mem: 33906M
[10/17 17:34:23] d2.utils.events INFO:  eta: 0:17:34  iter: 1999  total_loss: 19.31  loss_ce: 0.4598  loss_mask: 0.1619  loss_dice: 1.182  loss_ce_0: 0.5801  loss_mask_0: 0.1924  loss_dice_0: 1.376  loss_ce_1: 0.6309  loss_mask_1: 0.1799  loss_dice_1: 1.305  loss_ce_2: 0.5771  loss_mask_2: 0.1666  loss_dice_2: 1.274  loss_ce_3: 0.5182  loss_mask_3: 0.1639  loss_dice_3: 1.227  loss_ce_4: 0.4748  loss_mask_4: 0.162  loss_dice_4: 1.215  loss_ce_5: 0.4779  loss_mask_5: 0.1616  loss_dice_5: 1.177  loss_ce_6: 0.448  loss_mask_6: 0.1612  loss_dice_6: 1.193  loss_ce_7: 0.4821  loss_mask_7: 0.1603  loss_dice_7: 1.198  loss_ce_8: 0.488  loss_mask_8: 0.16  loss_dice_8: 1.197    time: 1.0525  last_time: 1.1600  data_time: 0.0652  last_data_time: 0.0823   lr: 0.0001  max_mem: 33906M
[10/17 17:34:45] d2.utils.events INFO:  eta: 0:17:14  iter: 2019  total_loss: 19.38  loss_ce: 0.4603  loss_mask: 0.1582  loss_dice: 1.174  loss_ce_0: 0.5364  loss_mask_0: 0.1833  loss_dice_0: 1.424  loss_ce_1: 0.6136  loss_mask_1: 0.1681  loss_dice_1: 1.323  loss_ce_2: 0.5685  loss_mask_2: 0.1601  loss_dice_2: 1.303  loss_ce_3: 0.5146  loss_mask_3: 0.1591  loss_dice_3: 1.191  loss_ce_4: 0.4908  loss_mask_4: 0.1631  loss_dice_4: 1.219  loss_ce_5: 0.4837  loss_mask_5: 0.1587  loss_dice_5: 1.251  loss_ce_6: 0.4634  loss_mask_6: 0.1588  loss_dice_6: 1.233  loss_ce_7: 0.4539  loss_mask_7: 0.1572  loss_dice_7: 1.214  loss_ce_8: 0.4519  loss_mask_8: 0.1563  loss_dice_8: 1.203    time: 1.0526  last_time: 1.0502  data_time: 0.0710  last_data_time: 0.0759   lr: 0.0001  max_mem: 33906M
[10/17 17:35:06] d2.utils.events INFO:  eta: 0:16:53  iter: 2039  total_loss: 18.92  loss_ce: 0.4531  loss_mask: 0.1595  loss_dice: 1.189  loss_ce_0: 0.5524  loss_mask_0: 0.182  loss_dice_0: 1.369  loss_ce_1: 0.5948  loss_mask_1: 0.1746  loss_dice_1: 1.267  loss_ce_2: 0.5476  loss_mask_2: 0.1619  loss_dice_2: 1.26  loss_ce_3: 0.4791  loss_mask_3: 0.1646  loss_dice_3: 1.211  loss_ce_4: 0.4634  loss_mask_4: 0.1634  loss_dice_4: 1.201  loss_ce_5: 0.4887  loss_mask_5: 0.1621  loss_dice_5: 1.191  loss_ce_6: 0.4614  loss_mask_6: 0.1599  loss_dice_6: 1.196  loss_ce_7: 0.4449  loss_mask_7: 0.1618  loss_dice_7: 1.178  loss_ce_8: 0.4259  loss_mask_8: 0.1607  loss_dice_8: 1.2    time: 1.0529  last_time: 1.0957  data_time: 0.0740  last_data_time: 0.0752   lr: 0.0001  max_mem: 33906M
[10/17 17:35:27] d2.utils.events INFO:  eta: 0:16:33  iter: 2059  total_loss: 18.8  loss_ce: 0.479  loss_mask: 0.1554  loss_dice: 1.158  loss_ce_0: 0.5644  loss_mask_0: 0.1885  loss_dice_0: 1.434  loss_ce_1: 0.6249  loss_mask_1: 0.1826  loss_dice_1: 1.313  loss_ce_2: 0.5744  loss_mask_2: 0.1581  loss_dice_2: 1.254  loss_ce_3: 0.5001  loss_mask_3: 0.1547  loss_dice_3: 1.194  loss_ce_4: 0.5214  loss_mask_4: 0.1519  loss_dice_4: 1.172  loss_ce_5: 0.4707  loss_mask_5: 0.1497  loss_dice_5: 1.186  loss_ce_6: 0.469  loss_mask_6: 0.1571  loss_dice_6: 1.184  loss_ce_7: 0.4504  loss_mask_7: 0.1563  loss_dice_7: 1.154  loss_ce_8: 0.4698  loss_mask_8: 0.1539  loss_dice_8: 1.152    time: 1.0529  last_time: 1.0912  data_time: 0.0689  last_data_time: 0.0605   lr: 0.0001  max_mem: 33906M
[10/17 17:35:49] d2.utils.events INFO:  eta: 0:16:12  iter: 2079  total_loss: 19.13  loss_ce: 0.437  loss_mask: 0.1739  loss_dice: 1.187  loss_ce_0: 0.5046  loss_mask_0: 0.2005  loss_dice_0: 1.401  loss_ce_1: 0.5657  loss_mask_1: 0.1865  loss_dice_1: 1.35  loss_ce_2: 0.5425  loss_mask_2: 0.1746  loss_dice_2: 1.273  loss_ce_3: 0.4581  loss_mask_3: 0.1744  loss_dice_3: 1.214  loss_ce_4: 0.4776  loss_mask_4: 0.1729  loss_dice_4: 1.219  loss_ce_5: 0.4633  loss_mask_5: 0.174  loss_dice_5: 1.231  loss_ce_6: 0.4248  loss_mask_6: 0.1714  loss_dice_6: 1.196  loss_ce_7: 0.4066  loss_mask_7: 0.1742  loss_dice_7: 1.216  loss_ce_8: 0.4372  loss_mask_8: 0.173  loss_dice_8: 1.181    time: 1.0530  last_time: 1.0424  data_time: 0.0679  last_data_time: 0.0824   lr: 0.0001  max_mem: 33906M
[10/17 17:36:10] d2.utils.events INFO:  eta: 0:15:51  iter: 2099  total_loss: 19.8  loss_ce: 0.4666  loss_mask: 0.1586  loss_dice: 1.245  loss_ce_0: 0.5915  loss_mask_0: 0.1821  loss_dice_0: 1.456  loss_ce_1: 0.6655  loss_mask_1: 0.1726  loss_dice_1: 1.341  loss_ce_2: 0.5854  loss_mask_2: 0.1602  loss_dice_2: 1.3  loss_ce_3: 0.5036  loss_mask_3: 0.1574  loss_dice_3: 1.256  loss_ce_4: 0.4699  loss_mask_4: 0.1564  loss_dice_4: 1.265  loss_ce_5: 0.43  loss_mask_5: 0.1579  loss_dice_5: 1.255  loss_ce_6: 0.4695  loss_mask_6: 0.1576  loss_dice_6: 1.188  loss_ce_7: 0.4654  loss_mask_7: 0.1588  loss_dice_7: 1.242  loss_ce_8: 0.4986  loss_mask_8: 0.1573  loss_dice_8: 1.225    time: 1.0531  last_time: 1.0551  data_time: 0.0693  last_data_time: 0.0433   lr: 0.0001  max_mem: 33906M
[10/17 17:36:31] d2.utils.events INFO:  eta: 0:15:30  iter: 2119  total_loss: 18.91  loss_ce: 0.4467  loss_mask: 0.1577  loss_dice: 1.17  loss_ce_0: 0.5474  loss_mask_0: 0.1825  loss_dice_0: 1.4  loss_ce_1: 0.6187  loss_mask_1: 0.1732  loss_dice_1: 1.303  loss_ce_2: 0.5654  loss_mask_2: 0.1627  loss_dice_2: 1.262  loss_ce_3: 0.4585  loss_mask_3: 0.1624  loss_dice_3: 1.216  loss_ce_4: 0.4306  loss_mask_4: 0.1648  loss_dice_4: 1.201  loss_ce_5: 0.4601  loss_mask_5: 0.1623  loss_dice_5: 1.187  loss_ce_6: 0.4247  loss_mask_6: 0.1624  loss_dice_6: 1.218  loss_ce_7: 0.437  loss_mask_7: 0.1626  loss_dice_7: 1.202  loss_ce_8: 0.4452  loss_mask_8: 0.16  loss_dice_8: 1.208    time: 1.0532  last_time: 1.0501  data_time: 0.0712  last_data_time: 0.0811   lr: 0.0001  max_mem: 33906M
[10/17 17:36:52] d2.utils.events INFO:  eta: 0:15:08  iter: 2139  total_loss: 18.29  loss_ce: 0.4286  loss_mask: 0.1672  loss_dice: 1.14  loss_ce_0: 0.5556  loss_mask_0: 0.1881  loss_dice_0: 1.321  loss_ce_1: 0.5989  loss_mask_1: 0.1773  loss_dice_1: 1.282  loss_ce_2: 0.5287  loss_mask_2: 0.1722  loss_dice_2: 1.237  loss_ce_3: 0.4782  loss_mask_3: 0.1708  loss_dice_3: 1.164  loss_ce_4: 0.4603  loss_mask_4: 0.168  loss_dice_4: 1.183  loss_ce_5: 0.4349  loss_mask_5: 0.165  loss_dice_5: 1.148  loss_ce_6: 0.458  loss_mask_6: 0.1692  loss_dice_6: 1.15  loss_ce_7: 0.4368  loss_mask_7: 0.1677  loss_dice_7: 1.13  loss_ce_8: 0.4027  loss_mask_8: 0.1683  loss_dice_8: 1.139    time: 1.0531  last_time: 1.0183  data_time: 0.0665  last_data_time: 0.0615   lr: 0.0001  max_mem: 33906M
[10/17 17:37:14] d2.utils.events INFO:  eta: 0:14:48  iter: 2159  total_loss: 19.29  loss_ce: 0.4451  loss_mask: 0.1482  loss_dice: 1.174  loss_ce_0: 0.5731  loss_mask_0: 0.169  loss_dice_0: 1.398  loss_ce_1: 0.6084  loss_mask_1: 0.1617  loss_dice_1: 1.352  loss_ce_2: 0.5214  loss_mask_2: 0.1547  loss_dice_2: 1.268  loss_ce_3: 0.4859  loss_mask_3: 0.1504  loss_dice_3: 1.237  loss_ce_4: 0.4522  loss_mask_4: 0.1515  loss_dice_4: 1.231  loss_ce_5: 0.4723  loss_mask_5: 0.1515  loss_dice_5: 1.226  loss_ce_6: 0.4298  loss_mask_6: 0.1502  loss_dice_6: 1.211  loss_ce_7: 0.4541  loss_mask_7: 0.1486  loss_dice_7: 1.193  loss_ce_8: 0.4374  loss_mask_8: 0.1519  loss_dice_8: 1.2    time: 1.0534  last_time: 1.1135  data_time: 0.0770  last_data_time: 0.0897   lr: 0.0001  max_mem: 33906M
[10/17 17:37:36] d2.utils.events INFO:  eta: 0:14:27  iter: 2179  total_loss: 19.44  loss_ce: 0.4627  loss_mask: 0.1623  loss_dice: 1.19  loss_ce_0: 0.5568  loss_mask_0: 0.1919  loss_dice_0: 1.373  loss_ce_1: 0.6429  loss_mask_1: 0.1774  loss_dice_1: 1.339  loss_ce_2: 0.5496  loss_mask_2: 0.1683  loss_dice_2: 1.279  loss_ce_3: 0.4895  loss_mask_3: 0.1675  loss_dice_3: 1.193  loss_ce_4: 0.4787  loss_mask_4: 0.1675  loss_dice_4: 1.223  loss_ce_5: 0.4872  loss_mask_5: 0.1643  loss_dice_5: 1.219  loss_ce_6: 0.4713  loss_mask_6: 0.1656  loss_dice_6: 1.169  loss_ce_7: 0.458  loss_mask_7: 0.1646  loss_dice_7: 1.187  loss_ce_8: 0.4357  loss_mask_8: 0.1619  loss_dice_8: 1.192    time: 1.0537  last_time: 1.0903  data_time: 0.0706  last_data_time: 0.0931   lr: 0.0001  max_mem: 33906M
[10/17 17:37:57] d2.utils.events INFO:  eta: 0:14:06  iter: 2199  total_loss: 18.01  loss_ce: 0.4144  loss_mask: 0.1567  loss_dice: 1.136  loss_ce_0: 0.5327  loss_mask_0: 0.1831  loss_dice_0: 1.325  loss_ce_1: 0.5993  loss_mask_1: 0.1673  loss_dice_1: 1.258  loss_ce_2: 0.5481  loss_mask_2: 0.1621  loss_dice_2: 1.189  loss_ce_3: 0.4775  loss_mask_3: 0.1657  loss_dice_3: 1.128  loss_ce_4: 0.4556  loss_mask_4: 0.164  loss_dice_4: 1.126  loss_ce_5: 0.4458  loss_mask_5: 0.1609  loss_dice_5: 1.161  loss_ce_6: 0.4249  loss_mask_6: 0.1613  loss_dice_6: 1.117  loss_ce_7: 0.4156  loss_mask_7: 0.1571  loss_dice_7: 1.099  loss_ce_8: 0.4405  loss_mask_8: 0.158  loss_dice_8: 1.116    time: 1.0537  last_time: 1.0402  data_time: 0.0695  last_data_time: 0.0576   lr: 0.0001  max_mem: 33906M
[10/17 17:38:19] d2.utils.events INFO:  eta: 0:13:46  iter: 2219  total_loss: 19.65  loss_ce: 0.4868  loss_mask: 0.1744  loss_dice: 1.23  loss_ce_0: 0.5498  loss_mask_0: 0.1955  loss_dice_0: 1.447  loss_ce_1: 0.6294  loss_mask_1: 0.1892  loss_dice_1: 1.337  loss_ce_2: 0.5435  loss_mask_2: 0.1814  loss_dice_2: 1.308  loss_ce_3: 0.5136  loss_mask_3: 0.1771  loss_dice_3: 1.259  loss_ce_4: 0.4805  loss_mask_4: 0.1773  loss_dice_4: 1.294  loss_ce_5: 0.48  loss_mask_5: 0.1744  loss_dice_5: 1.261  loss_ce_6: 0.4817  loss_mask_6: 0.1739  loss_dice_6: 1.248  loss_ce_7: 0.473  loss_mask_7: 0.1733  loss_dice_7: 1.223  loss_ce_8: 0.4749  loss_mask_8: 0.1737  loss_dice_8: 1.234    time: 1.0539  last_time: 1.0983  data_time: 0.0693  last_data_time: 0.0755   lr: 0.0001  max_mem: 33906M
[10/17 17:38:40] d2.utils.events INFO:  eta: 0:13:25  iter: 2239  total_loss: 18.62  loss_ce: 0.4099  loss_mask: 0.1657  loss_dice: 1.165  loss_ce_0: 0.5098  loss_mask_0: 0.189  loss_dice_0: 1.364  loss_ce_1: 0.5838  loss_mask_1: 0.173  loss_dice_1: 1.293  loss_ce_2: 0.52  loss_mask_2: 0.1659  loss_dice_2: 1.273  loss_ce_3: 0.4736  loss_mask_3: 0.1669  loss_dice_3: 1.21  loss_ce_4: 0.4636  loss_mask_4: 0.1679  loss_dice_4: 1.181  loss_ce_5: 0.4648  loss_mask_5: 0.1659  loss_dice_5: 1.214  loss_ce_6: 0.4202  loss_mask_6: 0.1665  loss_dice_6: 1.19  loss_ce_7: 0.4279  loss_mask_7: 0.1656  loss_dice_7: 1.158  loss_ce_8: 0.4207  loss_mask_8: 0.1675  loss_dice_8: 1.191    time: 1.0540  last_time: 1.0306  data_time: 0.0737  last_data_time: 0.0696   lr: 0.0001  max_mem: 33906M
[10/17 17:39:01] d2.utils.events INFO:  eta: 0:13:04  iter: 2259  total_loss: 17.95  loss_ce: 0.4084  loss_mask: 0.1487  loss_dice: 1.161  loss_ce_0: 0.5411  loss_mask_0: 0.1682  loss_dice_0: 1.353  loss_ce_1: 0.5443  loss_mask_1: 0.1555  loss_dice_1: 1.293  loss_ce_2: 0.4743  loss_mask_2: 0.1481  loss_dice_2: 1.242  loss_ce_3: 0.4335  loss_mask_3: 0.1484  loss_dice_3: 1.169  loss_ce_4: 0.4253  loss_mask_4: 0.1458  loss_dice_4: 1.161  loss_ce_5: 0.4285  loss_mask_5: 0.1482  loss_dice_5: 1.161  loss_ce_6: 0.4066  loss_mask_6: 0.1483  loss_dice_6: 1.143  loss_ce_7: 0.3684  loss_mask_7: 0.1501  loss_dice_7: 1.127  loss_ce_8: 0.4068  loss_mask_8: 0.1484  loss_dice_8: 1.146    time: 1.0541  last_time: 1.0631  data_time: 0.0717  last_data_time: 0.0683   lr: 0.0001  max_mem: 33906M
[10/17 17:39:22] d2.utils.events INFO:  eta: 0:12:43  iter: 2279  total_loss: 17.41  loss_ce: 0.4023  loss_mask: 0.1691  loss_dice: 1.083  loss_ce_0: 0.5027  loss_mask_0: 0.194  loss_dice_0: 1.291  loss_ce_1: 0.5334  loss_mask_1: 0.176  loss_dice_1: 1.241  loss_ce_2: 0.4621  loss_mask_2: 0.1719  loss_dice_2: 1.166  loss_ce_3: 0.4077  loss_mask_3: 0.1721  loss_dice_3: 1.103  loss_ce_4: 0.3877  loss_mask_4: 0.1716  loss_dice_4: 1.107  loss_ce_5: 0.4145  loss_mask_5: 0.1704  loss_dice_5: 1.127  loss_ce_6: 0.4073  loss_mask_6: 0.1691  loss_dice_6: 1.091  loss_ce_7: 0.3985  loss_mask_7: 0.1679  loss_dice_7: 1.096  loss_ce_8: 0.4143  loss_mask_8: 0.1679  loss_dice_8: 1.111    time: 1.0541  last_time: 1.0653  data_time: 0.0733  last_data_time: 0.0611   lr: 0.0001  max_mem: 33906M
[10/17 17:39:44] d2.utils.events INFO:  eta: 0:12:21  iter: 2299  total_loss: 18.04  loss_ce: 0.3811  loss_mask: 0.1578  loss_dice: 1.122  loss_ce_0: 0.5122  loss_mask_0: 0.1882  loss_dice_0: 1.336  loss_ce_1: 0.5946  loss_mask_1: 0.1738  loss_dice_1: 1.263  loss_ce_2: 0.5231  loss_mask_2: 0.1642  loss_dice_2: 1.205  loss_ce_3: 0.4825  loss_mask_3: 0.1639  loss_dice_3: 1.166  loss_ce_4: 0.4466  loss_mask_4: 0.1642  loss_dice_4: 1.141  loss_ce_5: 0.4435  loss_mask_5: 0.1618  loss_dice_5: 1.126  loss_ce_6: 0.4115  loss_mask_6: 0.1608  loss_dice_6: 1.142  loss_ce_7: 0.3852  loss_mask_7: 0.1579  loss_dice_7: 1.13  loss_ce_8: 0.4004  loss_mask_8: 0.1597  loss_dice_8: 1.1    time: 1.0542  last_time: 1.0844  data_time: 0.0688  last_data_time: 0.0749   lr: 0.0001  max_mem: 33906M
[10/17 17:40:05] d2.utils.events INFO:  eta: 0:12:00  iter: 2319  total_loss: 18.85  loss_ce: 0.4538  loss_mask: 0.162  loss_dice: 1.164  loss_ce_0: 0.5102  loss_mask_0: 0.1825  loss_dice_0: 1.373  loss_ce_1: 0.5754  loss_mask_1: 0.172  loss_dice_1: 1.323  loss_ce_2: 0.5414  loss_mask_2: 0.1634  loss_dice_2: 1.281  loss_ce_3: 0.4999  loss_mask_3: 0.1642  loss_dice_3: 1.266  loss_ce_4: 0.4828  loss_mask_4: 0.1647  loss_dice_4: 1.229  loss_ce_5: 0.4638  loss_mask_5: 0.1639  loss_dice_5: 1.191  loss_ce_6: 0.4499  loss_mask_6: 0.1645  loss_dice_6: 1.187  loss_ce_7: 0.436  loss_mask_7: 0.1617  loss_dice_7: 1.182  loss_ce_8: 0.4523  loss_mask_8: 0.1628  loss_dice_8: 1.195    time: 1.0542  last_time: 1.0668  data_time: 0.0726  last_data_time: 0.0694   lr: 0.0001  max_mem: 33906M
[10/17 17:40:26] d2.utils.events INFO:  eta: 0:11:39  iter: 2339  total_loss: 19.38  loss_ce: 0.4399  loss_mask: 0.1547  loss_dice: 1.192  loss_ce_0: 0.5208  loss_mask_0: 0.1946  loss_dice_0: 1.457  loss_ce_1: 0.5585  loss_mask_1: 0.1701  loss_dice_1: 1.392  loss_ce_2: 0.5477  loss_mask_2: 0.1589  loss_dice_2: 1.274  loss_ce_3: 0.4564  loss_mask_3: 0.1587  loss_dice_3: 1.252  loss_ce_4: 0.4392  loss_mask_4: 0.155  loss_dice_4: 1.247  loss_ce_5: 0.4352  loss_mask_5: 0.1562  loss_dice_5: 1.222  loss_ce_6: 0.3987  loss_mask_6: 0.1546  loss_dice_6: 1.237  loss_ce_7: 0.3968  loss_mask_7: 0.1561  loss_dice_7: 1.209  loss_ce_8: 0.4292  loss_mask_8: 0.1556  loss_dice_8: 1.219    time: 1.0543  last_time: 1.0948  data_time: 0.0694  last_data_time: 0.0699   lr: 0.0001  max_mem: 33906M
[10/17 17:40:47] d2.utils.events INFO:  eta: 0:11:18  iter: 2359  total_loss: 17.87  loss_ce: 0.4434  loss_mask: 0.1608  loss_dice: 1.1  loss_ce_0: 0.5372  loss_mask_0: 0.1919  loss_dice_0: 1.27  loss_ce_1: 0.5876  loss_mask_1: 0.1761  loss_dice_1: 1.254  loss_ce_2: 0.4731  loss_mask_2: 0.1667  loss_dice_2: 1.171  loss_ce_3: 0.4528  loss_mask_3: 0.1622  loss_dice_3: 1.131  loss_ce_4: 0.4237  loss_mask_4: 0.163  loss_dice_4: 1.139  loss_ce_5: 0.4195  loss_mask_5: 0.1603  loss_dice_5: 1.1  loss_ce_6: 0.4115  loss_mask_6: 0.1601  loss_dice_6: 1.142  loss_ce_7: 0.4278  loss_mask_7: 0.1606  loss_dice_7: 1.116  loss_ce_8: 0.3898  loss_mask_8: 0.1607  loss_dice_8: 1.098    time: 1.0543  last_time: 1.0895  data_time: 0.0702  last_data_time: 0.0751   lr: 0.0001  max_mem: 33906M
[10/17 17:41:09] d2.utils.events INFO:  eta: 0:10:57  iter: 2379  total_loss: 19.44  loss_ce: 0.416  loss_mask: 0.1537  loss_dice: 1.236  loss_ce_0: 0.5509  loss_mask_0: 0.1824  loss_dice_0: 1.424  loss_ce_1: 0.56  loss_mask_1: 0.1673  loss_dice_1: 1.352  loss_ce_2: 0.4961  loss_mask_2: 0.159  loss_dice_2: 1.32  loss_ce_3: 0.4827  loss_mask_3: 0.1559  loss_dice_3: 1.284  loss_ce_4: 0.4348  loss_mask_4: 0.1547  loss_dice_4: 1.25  loss_ce_5: 0.444  loss_mask_5: 0.1509  loss_dice_5: 1.275  loss_ce_6: 0.4199  loss_mask_6: 0.1536  loss_dice_6: 1.238  loss_ce_7: 0.4314  loss_mask_7: 0.1529  loss_dice_7: 1.229  loss_ce_8: 0.4041  loss_mask_8: 0.1512  loss_dice_8: 1.237    time: 1.0545  last_time: 1.1242  data_time: 0.0734  last_data_time: 0.0682   lr: 0.0001  max_mem: 33906M
[10/17 17:41:31] d2.utils.events INFO:  eta: 0:10:36  iter: 2399  total_loss: 19.33  loss_ce: 0.4783  loss_mask: 0.1581  loss_dice: 1.216  loss_ce_0: 0.5545  loss_mask_0: 0.1876  loss_dice_0: 1.509  loss_ce_1: 0.6111  loss_mask_1: 0.1656  loss_dice_1: 1.384  loss_ce_2: 0.5498  loss_mask_2: 0.1632  loss_dice_2: 1.294  loss_ce_3: 0.4909  loss_mask_3: 0.1604  loss_dice_3: 1.288  loss_ce_4: 0.4975  loss_mask_4: 0.1622  loss_dice_4: 1.287  loss_ce_5: 0.4691  loss_mask_5: 0.1569  loss_dice_5: 1.254  loss_ce_6: 0.4413  loss_mask_6: 0.1602  loss_dice_6: 1.28  loss_ce_7: 0.4653  loss_mask_7: 0.1603  loss_dice_7: 1.221  loss_ce_8: 0.4501  loss_mask_8: 0.1598  loss_dice_8: 1.221    time: 1.0547  last_time: 1.0930  data_time: 0.0732  last_data_time: 0.0767   lr: 0.0001  max_mem: 33906M
[10/17 17:41:52] d2.utils.events INFO:  eta: 0:10:15  iter: 2419  total_loss: 19.13  loss_ce: 0.4645  loss_mask: 0.1496  loss_dice: 1.191  loss_ce_0: 0.5509  loss_mask_0: 0.1745  loss_dice_0: 1.409  loss_ce_1: 0.5745  loss_mask_1: 0.1561  loss_dice_1: 1.337  loss_ce_2: 0.5507  loss_mask_2: 0.1545  loss_dice_2: 1.284  loss_ce_3: 0.4856  loss_mask_3: 0.1547  loss_dice_3: 1.246  loss_ce_4: 0.4594  loss_mask_4: 0.1523  loss_dice_4: 1.25  loss_ce_5: 0.485  loss_mask_5: 0.151  loss_dice_5: 1.2  loss_ce_6: 0.4489  loss_mask_6: 0.1525  loss_dice_6: 1.223  loss_ce_7: 0.4545  loss_mask_7: 0.1486  loss_dice_7: 1.187  loss_ce_8: 0.4671  loss_mask_8: 0.1497  loss_dice_8: 1.203    time: 1.0548  last_time: 1.1477  data_time: 0.0713  last_data_time: 0.0698   lr: 0.0001  max_mem: 33906M
[10/17 17:42:13] d2.utils.events INFO:  eta: 0:09:54  iter: 2439  total_loss: 18.21  loss_ce: 0.4116  loss_mask: 0.1677  loss_dice: 1.156  loss_ce_0: 0.5077  loss_mask_0: 0.1966  loss_dice_0: 1.359  loss_ce_1: 0.575  loss_mask_1: 0.1806  loss_dice_1: 1.236  loss_ce_2: 0.5265  loss_mask_2: 0.18  loss_dice_2: 1.229  loss_ce_3: 0.4649  loss_mask_3: 0.175  loss_dice_3: 1.181  loss_ce_4: 0.4398  loss_mask_4: 0.173  loss_dice_4: 1.193  loss_ce_5: 0.4543  loss_mask_5: 0.1687  loss_dice_5: 1.175  loss_ce_6: 0.4031  loss_mask_6: 0.1681  loss_dice_6: 1.184  loss_ce_7: 0.3874  loss_mask_7: 0.1678  loss_dice_7: 1.145  loss_ce_8: 0.4109  loss_mask_8: 0.1687  loss_dice_8: 1.118    time: 1.0548  last_time: 1.0906  data_time: 0.0697  last_data_time: 0.0743   lr: 0.0001  max_mem: 33906M
[10/17 17:42:34] d2.utils.events INFO:  eta: 0:09:32  iter: 2459  total_loss: 19.7  loss_ce: 0.4711  loss_mask: 0.1564  loss_dice: 1.192  loss_ce_0: 0.575  loss_mask_0: 0.1796  loss_dice_0: 1.416  loss_ce_1: 0.6119  loss_mask_1: 0.1645  loss_dice_1: 1.366  loss_ce_2: 0.5772  loss_mask_2: 0.1583  loss_dice_2: 1.288  loss_ce_3: 0.4885  loss_mask_3: 0.1583  loss_dice_3: 1.243  loss_ce_4: 0.4972  loss_mask_4: 0.1605  loss_dice_4: 1.224  loss_ce_5: 0.4885  loss_mask_5: 0.1568  loss_dice_5: 1.235  loss_ce_6: 0.4499  loss_mask_6: 0.1559  loss_dice_6: 1.259  loss_ce_7: 0.475  loss_mask_7: 0.1534  loss_dice_7: 1.222  loss_ce_8: 0.4863  loss_mask_8: 0.1601  loss_dice_8: 1.222    time: 1.0548  last_time: 1.0728  data_time: 0.0694  last_data_time: 0.0799   lr: 0.0001  max_mem: 33906M
[10/17 17:42:56] d2.utils.events INFO:  eta: 0:09:11  iter: 2479  total_loss: 18.84  loss_ce: 0.4363  loss_mask: 0.1631  loss_dice: 1.153  loss_ce_0: 0.547  loss_mask_0: 0.1895  loss_dice_0: 1.407  loss_ce_1: 0.5738  loss_mask_1: 0.175  loss_dice_1: 1.337  loss_ce_2: 0.5277  loss_mask_2: 0.1721  loss_dice_2: 1.28  loss_ce_3: 0.4806  loss_mask_3: 0.1669  loss_dice_3: 1.219  loss_ce_4: 0.4583  loss_mask_4: 0.1655  loss_dice_4: 1.185  loss_ce_5: 0.4407  loss_mask_5: 0.1635  loss_dice_5: 1.213  loss_ce_6: 0.4473  loss_mask_6: 0.1659  loss_dice_6: 1.184  loss_ce_7: 0.4235  loss_mask_7: 0.1647  loss_dice_7: 1.189  loss_ce_8: 0.4124  loss_mask_8: 0.1647  loss_dice_8: 1.199    time: 1.0549  last_time: 1.0588  data_time: 0.0713  last_data_time: 0.0759   lr: 0.0001  max_mem: 33906M
[10/17 17:43:17] d2.utils.events INFO:  eta: 0:08:50  iter: 2499  total_loss: 19.41  loss_ce: 0.4638  loss_mask: 0.1555  loss_dice: 1.177  loss_ce_0: 0.5866  loss_mask_0: 0.1805  loss_dice_0: 1.414  loss_ce_1: 0.6089  loss_mask_1: 0.1662  loss_dice_1: 1.329  loss_ce_2: 0.6002  loss_mask_2: 0.164  loss_dice_2: 1.249  loss_ce_3: 0.507  loss_mask_3: 0.1608  loss_dice_3: 1.237  loss_ce_4: 0.4643  loss_mask_4: 0.1587  loss_dice_4: 1.229  loss_ce_5: 0.5072  loss_mask_5: 0.1609  loss_dice_5: 1.198  loss_ce_6: 0.4879  loss_mask_6: 0.1602  loss_dice_6: 1.213  loss_ce_7: 0.4589  loss_mask_7: 0.1594  loss_dice_7: 1.202  loss_ce_8: 0.4523  loss_mask_8: 0.1582  loss_dice_8: 1.176    time: 1.0549  last_time: 1.0459  data_time: 0.0671  last_data_time: 0.0742   lr: 0.0001  max_mem: 33906M
[10/17 17:43:38] d2.utils.events INFO:  eta: 0:08:28  iter: 2519  total_loss: 19.04  loss_ce: 0.4305  loss_mask: 0.1707  loss_dice: 1.134  loss_ce_0: 0.559  loss_mask_0: 0.1897  loss_dice_0: 1.367  loss_ce_1: 0.6019  loss_mask_1: 0.1764  loss_dice_1: 1.271  loss_ce_2: 0.5812  loss_mask_2: 0.1774  loss_dice_2: 1.202  loss_ce_3: 0.5234  loss_mask_3: 0.1764  loss_dice_3: 1.189  loss_ce_4: 0.4832  loss_mask_4: 0.1731  loss_dice_4: 1.191  loss_ce_5: 0.4638  loss_mask_5: 0.1733  loss_dice_5: 1.167  loss_ce_6: 0.4654  loss_mask_6: 0.1731  loss_dice_6: 1.144  loss_ce_7: 0.4407  loss_mask_7: 0.1729  loss_dice_7: 1.152  loss_ce_8: 0.4556  loss_mask_8: 0.1749  loss_dice_8: 1.142    time: 1.0549  last_time: 1.0393  data_time: 0.0690  last_data_time: 0.0758   lr: 0.0001  max_mem: 33906M
[10/17 17:43:59] d2.utils.events INFO:  eta: 0:08:07  iter: 2539  total_loss: 18.84  loss_ce: 0.4304  loss_mask: 0.1598  loss_dice: 1.206  loss_ce_0: 0.5155  loss_mask_0: 0.1871  loss_dice_0: 1.386  loss_ce_1: 0.5689  loss_mask_1: 0.1712  loss_dice_1: 1.31  loss_ce_2: 0.5511  loss_mask_2: 0.172  loss_dice_2: 1.269  loss_ce_3: 0.4774  loss_mask_3: 0.1625  loss_dice_3: 1.224  loss_ce_4: 0.4717  loss_mask_4: 0.1627  loss_dice_4: 1.223  loss_ce_5: 0.4614  loss_mask_5: 0.1613  loss_dice_5: 1.237  loss_ce_6: 0.4355  loss_mask_6: 0.1599  loss_dice_6: 1.188  loss_ce_7: 0.4437  loss_mask_7: 0.1593  loss_dice_7: 1.194  loss_ce_8: 0.434  loss_mask_8: 0.1609  loss_dice_8: 1.196    time: 1.0550  last_time: 1.0828  data_time: 0.0691  last_data_time: 0.0784   lr: 0.0001  max_mem: 33906M
[10/17 17:44:21] d2.utils.events INFO:  eta: 0:07:46  iter: 2559  total_loss: 19.23  loss_ce: 0.4221  loss_mask: 0.1572  loss_dice: 1.197  loss_ce_0: 0.5258  loss_mask_0: 0.1805  loss_dice_0: 1.39  loss_ce_1: 0.5707  loss_mask_1: 0.1701  loss_dice_1: 1.286  loss_ce_2: 0.5135  loss_mask_2: 0.1616  loss_dice_2: 1.26  loss_ce_3: 0.4698  loss_mask_3: 0.1598  loss_dice_3: 1.179  loss_ce_4: 0.4638  loss_mask_4: 0.1613  loss_dice_4: 1.245  loss_ce_5: 0.4525  loss_mask_5: 0.1579  loss_dice_5: 1.212  loss_ce_6: 0.4645  loss_mask_6: 0.1592  loss_dice_6: 1.168  loss_ce_7: 0.432  loss_mask_7: 0.1576  loss_dice_7: 1.204  loss_ce_8: 0.4322  loss_mask_8: 0.1555  loss_dice_8: 1.178    time: 1.0550  last_time: 1.1051  data_time: 0.0767  last_data_time: 0.0674   lr: 0.0001  max_mem: 33906M
[10/17 17:44:42] d2.utils.events INFO:  eta: 0:07:25  iter: 2579  total_loss: 19.18  loss_ce: 0.4462  loss_mask: 0.1524  loss_dice: 1.224  loss_ce_0: 0.5384  loss_mask_0: 0.1902  loss_dice_0: 1.413  loss_ce_1: 0.612  loss_mask_1: 0.176  loss_dice_1: 1.356  loss_ce_2: 0.5647  loss_mask_2: 0.1589  loss_dice_2: 1.302  loss_ce_3: 0.5043  loss_mask_3: 0.1579  loss_dice_3: 1.252  loss_ce_4: 0.4959  loss_mask_4: 0.1569  loss_dice_4: 1.249  loss_ce_5: 0.4718  loss_mask_5: 0.1561  loss_dice_5: 1.219  loss_ce_6: 0.4342  loss_mask_6: 0.1553  loss_dice_6: 1.212  loss_ce_7: 0.4499  loss_mask_7: 0.1531  loss_dice_7: 1.206  loss_ce_8: 0.4536  loss_mask_8: 0.1556  loss_dice_8: 1.207    time: 1.0552  last_time: 1.1269  data_time: 0.0723  last_data_time: 0.0741   lr: 0.0001  max_mem: 33906M
[10/17 17:45:04] d2.utils.events INFO:  eta: 0:07:04  iter: 2599  total_loss: 19.46  loss_ce: 0.452  loss_mask: 0.1518  loss_dice: 1.235  loss_ce_0: 0.5752  loss_mask_0: 0.1813  loss_dice_0: 1.429  loss_ce_1: 0.6159  loss_mask_1: 0.1628  loss_dice_1: 1.367  loss_ce_2: 0.5449  loss_mask_2: 0.1572  loss_dice_2: 1.343  loss_ce_3: 0.4815  loss_mask_3: 0.1556  loss_dice_3: 1.262  loss_ce_4: 0.4847  loss_mask_4: 0.1546  loss_dice_4: 1.279  loss_ce_5: 0.4735  loss_mask_5: 0.1539  loss_dice_5: 1.263  loss_ce_6: 0.4677  loss_mask_6: 0.1549  loss_dice_6: 1.226  loss_ce_7: 0.4511  loss_mask_7: 0.1516  loss_dice_7: 1.23  loss_ce_8: 0.4534  loss_mask_8: 0.1537  loss_dice_8: 1.242    time: 1.0553  last_time: 1.1064  data_time: 0.0733  last_data_time: 0.0822   lr: 0.0001  max_mem: 33906M
[10/17 17:45:25] d2.utils.events INFO:  eta: 0:06:43  iter: 2619  total_loss: 17.86  loss_ce: 0.3843  loss_mask: 0.1586  loss_dice: 1.12  loss_ce_0: 0.5051  loss_mask_0: 0.186  loss_dice_0: 1.322  loss_ce_1: 0.5163  loss_mask_1: 0.1649  loss_dice_1: 1.281  loss_ce_2: 0.5037  loss_mask_2: 0.1592  loss_dice_2: 1.215  loss_ce_3: 0.4522  loss_mask_3: 0.161  loss_dice_3: 1.157  loss_ce_4: 0.4208  loss_mask_4: 0.1612  loss_dice_4: 1.156  loss_ce_5: 0.3926  loss_mask_5: 0.1581  loss_dice_5: 1.149  loss_ce_6: 0.3721  loss_mask_6: 0.1599  loss_dice_6: 1.149  loss_ce_7: 0.3855  loss_mask_7: 0.1582  loss_dice_7: 1.122  loss_ce_8: 0.3802  loss_mask_8: 0.1579  loss_dice_8: 1.162    time: 1.0554  last_time: 1.0444  data_time: 0.0665  last_data_time: 0.0698   lr: 0.0001  max_mem: 33906M
[10/17 17:45:46] d2.utils.events INFO:  eta: 0:06:21  iter: 2639  total_loss: 18.24  loss_ce: 0.3901  loss_mask: 0.1602  loss_dice: 1.133  loss_ce_0: 0.5456  loss_mask_0: 0.1809  loss_dice_0: 1.326  loss_ce_1: 0.5431  loss_mask_1: 0.1607  loss_dice_1: 1.262  loss_ce_2: 0.5374  loss_mask_2: 0.1584  loss_dice_2: 1.23  loss_ce_3: 0.4726  loss_mask_3: 0.1593  loss_dice_3: 1.177  loss_ce_4: 0.4375  loss_mask_4: 0.1594  loss_dice_4: 1.175  loss_ce_5: 0.4278  loss_mask_5: 0.1635  loss_dice_5: 1.166  loss_ce_6: 0.4073  loss_mask_6: 0.1618  loss_dice_6: 1.176  loss_ce_7: 0.3987  loss_mask_7: 0.1612  loss_dice_7: 1.15  loss_ce_8: 0.4125  loss_mask_8: 0.1589  loss_dice_8: 1.127    time: 1.0554  last_time: 1.0931  data_time: 0.0670  last_data_time: 0.0646   lr: 0.0001  max_mem: 33906M
[10/17 17:46:08] d2.utils.events INFO:  eta: 0:06:00  iter: 2659  total_loss: 18.4  loss_ce: 0.3868  loss_mask: 0.1599  loss_dice: 1.154  loss_ce_0: 0.563  loss_mask_0: 0.1829  loss_dice_0: 1.344  loss_ce_1: 0.5589  loss_mask_1: 0.1694  loss_dice_1: 1.286  loss_ce_2: 0.5072  loss_mask_2: 0.1643  loss_dice_2: 1.219  loss_ce_3: 0.4833  loss_mask_3: 0.1657  loss_dice_3: 1.209  loss_ce_4: 0.426  loss_mask_4: 0.1604  loss_dice_4: 1.18  loss_ce_5: 0.4428  loss_mask_5: 0.1596  loss_dice_5: 1.198  loss_ce_6: 0.3857  loss_mask_6: 0.157  loss_dice_6: 1.189  loss_ce_7: 0.4126  loss_mask_7: 0.1584  loss_dice_7: 1.146  loss_ce_8: 0.4067  loss_mask_8: 0.1575  loss_dice_8: 1.149    time: 1.0554  last_time: 1.0542  data_time: 0.0749  last_data_time: 0.0870   lr: 0.0001  max_mem: 33906M
[10/17 17:46:29] d2.utils.events INFO:  eta: 0:05:39  iter: 2679  total_loss: 18.33  loss_ce: 0.4137  loss_mask: 0.154  loss_dice: 1.172  loss_ce_0: 0.5376  loss_mask_0: 0.1822  loss_dice_0: 1.345  loss_ce_1: 0.5569  loss_mask_1: 0.1615  loss_dice_1: 1.313  loss_ce_2: 0.538  loss_mask_2: 0.1561  loss_dice_2: 1.256  loss_ce_3: 0.4661  loss_mask_3: 0.1577  loss_dice_3: 1.198  loss_ce_4: 0.4806  loss_mask_4: 0.155  loss_dice_4: 1.166  loss_ce_5: 0.4234  loss_mask_5: 0.1547  loss_dice_5: 1.172  loss_ce_6: 0.4119  loss_mask_6: 0.153  loss_dice_6: 1.176  loss_ce_7: 0.399  loss_mask_7: 0.1531  loss_dice_7: 1.161  loss_ce_8: 0.4318  loss_mask_8: 0.1531  loss_dice_8: 1.143    time: 1.0555  last_time: 1.0636  data_time: 0.0711  last_data_time: 0.0720   lr: 0.0001  max_mem: 33906M
[10/17 17:46:50] d2.utils.events INFO:  eta: 0:05:18  iter: 2699  total_loss: 19.28  loss_ce: 0.4461  loss_mask: 0.1594  loss_dice: 1.22  loss_ce_0: 0.5483  loss_mask_0: 0.1859  loss_dice_0: 1.419  loss_ce_1: 0.608  loss_mask_1: 0.1646  loss_dice_1: 1.357  loss_ce_2: 0.5436  loss_mask_2: 0.1577  loss_dice_2: 1.314  loss_ce_3: 0.4875  loss_mask_3: 0.1614  loss_dice_3: 1.252  loss_ce_4: 0.4584  loss_mask_4: 0.1602  loss_dice_4: 1.236  loss_ce_5: 0.4654  loss_mask_5: 0.1597  loss_dice_5: 1.24  loss_ce_6: 0.4291  loss_mask_6: 0.1579  loss_dice_6: 1.225  loss_ce_7: 0.45  loss_mask_7: 0.1573  loss_dice_7: 1.203  loss_ce_8: 0.4145  loss_mask_8: 0.1594  loss_dice_8: 1.219    time: 1.0556  last_time: 1.0357  data_time: 0.0692  last_data_time: 0.0793   lr: 0.0001  max_mem: 33906M
[10/17 17:47:12] d2.utils.events INFO:  eta: 0:04:57  iter: 2719  total_loss: 18.54  loss_ce: 0.4249  loss_mask: 0.1545  loss_dice: 1.163  loss_ce_0: 0.5297  loss_mask_0: 0.1839  loss_dice_0: 1.383  loss_ce_1: 0.5846  loss_mask_1: 0.1722  loss_dice_1: 1.295  loss_ce_2: 0.53  loss_mask_2: 0.1565  loss_dice_2: 1.232  loss_ce_3: 0.4995  loss_mask_3: 0.1582  loss_dice_3: 1.19  loss_ce_4: 0.445  loss_mask_4: 0.1549  loss_dice_4: 1.179  loss_ce_5: 0.4367  loss_mask_5: 0.1534  loss_dice_5: 1.204  loss_ce_6: 0.4407  loss_mask_6: 0.1524  loss_dice_6: 1.18  loss_ce_7: 0.4458  loss_mask_7: 0.153  loss_dice_7: 1.154  loss_ce_8: 0.4853  loss_mask_8: 0.1542  loss_dice_8: 1.127    time: 1.0556  last_time: 1.1102  data_time: 0.0714  last_data_time: 0.0856   lr: 0.0001  max_mem: 33906M
[10/17 17:47:33] d2.utils.events INFO:  eta: 0:04:35  iter: 2739  total_loss: 18.78  loss_ce: 0.4114  loss_mask: 0.1576  loss_dice: 1.23  loss_ce_0: 0.5519  loss_mask_0: 0.1807  loss_dice_0: 1.391  loss_ce_1: 0.5814  loss_mask_1: 0.1671  loss_dice_1: 1.306  loss_ce_2: 0.567  loss_mask_2: 0.157  loss_dice_2: 1.245  loss_ce_3: 0.4887  loss_mask_3: 0.1571  loss_dice_3: 1.233  loss_ce_4: 0.4335  loss_mask_4: 0.1555  loss_dice_4: 1.196  loss_ce_5: 0.4332  loss_mask_5: 0.153  loss_dice_5: 1.202  loss_ce_6: 0.4138  loss_mask_6: 0.156  loss_dice_6: 1.185  loss_ce_7: 0.449  loss_mask_7: 0.1563  loss_dice_7: 1.197  loss_ce_8: 0.4446  loss_mask_8: 0.1554  loss_dice_8: 1.166    time: 1.0556  last_time: 1.0766  data_time: 0.0738  last_data_time: 0.0846   lr: 0.0001  max_mem: 33906M
[10/17 17:47:54] d2.utils.events INFO:  eta: 0:04:14  iter: 2759  total_loss: 18.99  loss_ce: 0.4198  loss_mask: 0.1646  loss_dice: 1.213  loss_ce_0: 0.467  loss_mask_0: 0.1877  loss_dice_0: 1.443  loss_ce_1: 0.5285  loss_mask_1: 0.1791  loss_dice_1: 1.351  loss_ce_2: 0.5159  loss_mask_2: 0.1639  loss_dice_2: 1.256  loss_ce_3: 0.4701  loss_mask_3: 0.1672  loss_dice_3: 1.241  loss_ce_4: 0.4297  loss_mask_4: 0.1672  loss_dice_4: 1.239  loss_ce_5: 0.4318  loss_mask_5: 0.1646  loss_dice_5: 1.225  loss_ce_6: 0.3797  loss_mask_6: 0.1643  loss_dice_6: 1.239  loss_ce_7: 0.4179  loss_mask_7: 0.1634  loss_dice_7: 1.223  loss_ce_8: 0.4157  loss_mask_8: 0.1625  loss_dice_8: 1.231    time: 1.0556  last_time: 1.0107  data_time: 0.0669  last_data_time: 0.0576   lr: 0.0001  max_mem: 33906M
[10/17 17:48:15] d2.utils.events INFO:  eta: 0:03:53  iter: 2779  total_loss: 18.03  loss_ce: 0.4042  loss_mask: 0.1596  loss_dice: 1.118  loss_ce_0: 0.5596  loss_mask_0: 0.2019  loss_dice_0: 1.319  loss_ce_1: 0.5582  loss_mask_1: 0.1803  loss_dice_1: 1.291  loss_ce_2: 0.5279  loss_mask_2: 0.166  loss_dice_2: 1.223  loss_ce_3: 0.4696  loss_mask_3: 0.1638  loss_dice_3: 1.182  loss_ce_4: 0.4381  loss_mask_4: 0.1641  loss_dice_4: 1.207  loss_ce_5: 0.4353  loss_mask_5: 0.1608  loss_dice_5: 1.141  loss_ce_6: 0.3859  loss_mask_6: 0.1617  loss_dice_6: 1.204  loss_ce_7: 0.4422  loss_mask_7: 0.1606  loss_dice_7: 1.13  loss_ce_8: 0.4163  loss_mask_8: 0.1591  loss_dice_8: 1.126    time: 1.0556  last_time: 1.0398  data_time: 0.0670  last_data_time: 0.0843   lr: 0.0001  max_mem: 33906M
[10/17 17:48:37] d2.utils.events INFO:  eta: 0:03:32  iter: 2799  total_loss: 19.13  loss_ce: 0.4512  loss_mask: 0.1555  loss_dice: 1.24  loss_ce_0: 0.574  loss_mask_0: 0.1831  loss_dice_0: 1.373  loss_ce_1: 0.6451  loss_mask_1: 0.166  loss_dice_1: 1.322  loss_ce_2: 0.5628  loss_mask_2: 0.1582  loss_dice_2: 1.222  loss_ce_3: 0.4827  loss_mask_3: 0.1588  loss_dice_3: 1.251  loss_ce_4: 0.4871  loss_mask_4: 0.1562  loss_dice_4: 1.234  loss_ce_5: 0.4604  loss_mask_5: 0.1563  loss_dice_5: 1.241  loss_ce_6: 0.4399  loss_mask_6: 0.1571  loss_dice_6: 1.246  loss_ce_7: 0.4599  loss_mask_7: 0.1541  loss_dice_7: 1.201  loss_ce_8: 0.4419  loss_mask_8: 0.1557  loss_dice_8: 1.184    time: 1.0557  last_time: 1.1586  data_time: 0.0707  last_data_time: 0.0749   lr: 0.0001  max_mem: 33906M
[10/17 17:48:58] d2.utils.events INFO:  eta: 0:03:10  iter: 2819  total_loss: 18.83  loss_ce: 0.4249  loss_mask: 0.1513  loss_dice: 1.206  loss_ce_0: 0.561  loss_mask_0: 0.1738  loss_dice_0: 1.374  loss_ce_1: 0.5579  loss_mask_1: 0.1638  loss_dice_1: 1.311  loss_ce_2: 0.5126  loss_mask_2: 0.1527  loss_dice_2: 1.268  loss_ce_3: 0.4802  loss_mask_3: 0.1545  loss_dice_3: 1.259  loss_ce_4: 0.4663  loss_mask_4: 0.1516  loss_dice_4: 1.225  loss_ce_5: 0.4625  loss_mask_5: 0.1512  loss_dice_5: 1.221  loss_ce_6: 0.4283  loss_mask_6: 0.1503  loss_dice_6: 1.216  loss_ce_7: 0.4487  loss_mask_7: 0.1513  loss_dice_7: 1.228  loss_ce_8: 0.4237  loss_mask_8: 0.151  loss_dice_8: 1.202    time: 1.0558  last_time: 1.0533  data_time: 0.0730  last_data_time: 0.0548   lr: 0.0001  max_mem: 33906M
[10/17 17:49:19] d2.utils.events INFO:  eta: 0:02:49  iter: 2839  total_loss: 18.86  loss_ce: 0.405  loss_mask: 0.155  loss_dice: 1.154  loss_ce_0: 0.5479  loss_mask_0: 0.1863  loss_dice_0: 1.359  loss_ce_1: 0.5901  loss_mask_1: 0.1732  loss_dice_1: 1.28  loss_ce_2: 0.5231  loss_mask_2: 0.1621  loss_dice_2: 1.243  loss_ce_3: 0.4611  loss_mask_3: 0.1589  loss_dice_3: 1.186  loss_ce_4: 0.4304  loss_mask_4: 0.1592  loss_dice_4: 1.189  loss_ce_5: 0.4526  loss_mask_5: 0.1551  loss_dice_5: 1.208  loss_ce_6: 0.419  loss_mask_6: 0.1563  loss_dice_6: 1.191  loss_ce_7: 0.3998  loss_mask_7: 0.1554  loss_dice_7: 1.139  loss_ce_8: 0.4097  loss_mask_8: 0.1552  loss_dice_8: 1.176    time: 1.0558  last_time: 1.1003  data_time: 0.0716  last_data_time: 0.0732   lr: 0.0001  max_mem: 33906M
[10/17 17:49:41] d2.utils.events INFO:  eta: 0:02:28  iter: 2859  total_loss: 17.67  loss_ce: 0.4018  loss_mask: 0.1552  loss_dice: 1.104  loss_ce_0: 0.5364  loss_mask_0: 0.1785  loss_dice_0: 1.306  loss_ce_1: 0.5584  loss_mask_1: 0.1696  loss_dice_1: 1.194  loss_ce_2: 0.5243  loss_mask_2: 0.1589  loss_dice_2: 1.168  loss_ce_3: 0.4607  loss_mask_3: 0.16  loss_dice_3: 1.122  loss_ce_4: 0.4216  loss_mask_4: 0.1584  loss_dice_4: 1.113  loss_ce_5: 0.4264  loss_mask_5: 0.154  loss_dice_5: 1.099  loss_ce_6: 0.4072  loss_mask_6: 0.1579  loss_dice_6: 1.119  loss_ce_7: 0.4207  loss_mask_7: 0.1549  loss_dice_7: 1.103  loss_ce_8: 0.4128  loss_mask_8: 0.1568  loss_dice_8: 1.085    time: 1.0558  last_time: 1.0865  data_time: 0.0641  last_data_time: 0.0593   lr: 0.0001  max_mem: 33906M
[10/17 17:50:02] d2.utils.events INFO:  eta: 0:02:07  iter: 2879  total_loss: 19.63  loss_ce: 0.4688  loss_mask: 0.1479  loss_dice: 1.252  loss_ce_0: 0.5473  loss_mask_0: 0.1749  loss_dice_0: 1.431  loss_ce_1: 0.6196  loss_mask_1: 0.1606  loss_dice_1: 1.399  loss_ce_2: 0.5555  loss_mask_2: 0.1516  loss_dice_2: 1.304  loss_ce_3: 0.4925  loss_mask_3: 0.1494  loss_dice_3: 1.26  loss_ce_4: 0.4807  loss_mask_4: 0.1495  loss_dice_4: 1.244  loss_ce_5: 0.4913  loss_mask_5: 0.148  loss_dice_5: 1.274  loss_ce_6: 0.4344  loss_mask_6: 0.1465  loss_dice_6: 1.232  loss_ce_7: 0.4447  loss_mask_7: 0.1464  loss_dice_7: 1.238  loss_ce_8: 0.4403  loss_mask_8: 0.1473  loss_dice_8: 1.218    time: 1.0561  last_time: 1.0457  data_time: 0.0765  last_data_time: 0.0548   lr: 0.0001  max_mem: 33906M
[10/17 17:50:24] d2.utils.events INFO:  eta: 0:01:46  iter: 2899  total_loss: 18.17  loss_ce: 0.4036  loss_mask: 0.1453  loss_dice: 1.101  loss_ce_0: 0.5293  loss_mask_0: 0.1764  loss_dice_0: 1.321  loss_ce_1: 0.5823  loss_mask_1: 0.1579  loss_dice_1: 1.294  loss_ce_2: 0.5039  loss_mask_2: 0.1505  loss_dice_2: 1.257  loss_ce_3: 0.488  loss_mask_3: 0.15  loss_dice_3: 1.157  loss_ce_4: 0.425  loss_mask_4: 0.1474  loss_dice_4: 1.203  loss_ce_5: 0.3979  loss_mask_5: 0.1465  loss_dice_5: 1.172  loss_ce_6: 0.4008  loss_mask_6: 0.1468  loss_dice_6: 1.116  loss_ce_7: 0.3898  loss_mask_7: 0.1459  loss_dice_7: 1.155  loss_ce_8: 0.4187  loss_mask_8: 0.1444  loss_dice_8: 1.142    time: 1.0562  last_time: 1.0538  data_time: 0.0705  last_data_time: 0.0837   lr: 0.0001  max_mem: 33906M
[10/17 17:50:45] d2.utils.events INFO:  eta: 0:01:24  iter: 2919  total_loss: 17.98  loss_ce: 0.3846  loss_mask: 0.1608  loss_dice: 1.151  loss_ce_0: 0.5266  loss_mask_0: 0.196  loss_dice_0: 1.331  loss_ce_1: 0.5802  loss_mask_1: 0.1708  loss_dice_1: 1.25  loss_ce_2: 0.5072  loss_mask_2: 0.1667  loss_dice_2: 1.189  loss_ce_3: 0.4712  loss_mask_3: 0.1666  loss_dice_3: 1.135  loss_ce_4: 0.4477  loss_mask_4: 0.1641  loss_dice_4: 1.142  loss_ce_5: 0.4255  loss_mask_5: 0.1598  loss_dice_5: 1.138  loss_ce_6: 0.4246  loss_mask_6: 0.1618  loss_dice_6: 1.121  loss_ce_7: 0.4145  loss_mask_7: 0.1602  loss_dice_7: 1.153  loss_ce_8: 0.396  loss_mask_8: 0.1598  loss_dice_8: 1.115    time: 1.0563  last_time: 1.0186  data_time: 0.0713  last_data_time: 0.0507   lr: 0.0001  max_mem: 33906M
[10/17 17:51:07] d2.utils.events INFO:  eta: 0:01:03  iter: 2939  total_loss: 19.22  loss_ce: 0.399  loss_mask: 0.1551  loss_dice: 1.194  loss_ce_0: 0.5639  loss_mask_0: 0.1834  loss_dice_0: 1.417  loss_ce_1: 0.5938  loss_mask_1: 0.1636  loss_dice_1: 1.342  loss_ce_2: 0.5424  loss_mask_2: 0.155  loss_dice_2: 1.307  loss_ce_3: 0.4832  loss_mask_3: 0.1591  loss_dice_3: 1.251  loss_ce_4: 0.468  loss_mask_4: 0.156  loss_dice_4: 1.264  loss_ce_5: 0.4299  loss_mask_5: 0.1533  loss_dice_5: 1.262  loss_ce_6: 0.4283  loss_mask_6: 0.1524  loss_dice_6: 1.191  loss_ce_7: 0.4016  loss_mask_7: 0.1538  loss_dice_7: 1.212  loss_ce_8: 0.422  loss_mask_8: 0.154  loss_dice_8: 1.173    time: 1.0564  last_time: 1.0495  data_time: 0.0731  last_data_time: 0.0673   lr: 0.0001  max_mem: 33906M
[10/17 17:51:29] d2.utils.events INFO:  eta: 0:00:42  iter: 2959  total_loss: 19.3  loss_ce: 0.4454  loss_mask: 0.1665  loss_dice: 1.215  loss_ce_0: 0.5317  loss_mask_0: 0.1884  loss_dice_0: 1.411  loss_ce_1: 0.5889  loss_mask_1: 0.177  loss_dice_1: 1.314  loss_ce_2: 0.5556  loss_mask_2: 0.1726  loss_dice_2: 1.298  loss_ce_3: 0.5016  loss_mask_3: 0.1702  loss_dice_3: 1.228  loss_ce_4: 0.4996  loss_mask_4: 0.1699  loss_dice_4: 1.243  loss_ce_5: 0.4739  loss_mask_5: 0.1668  loss_dice_5: 1.223  loss_ce_6: 0.4383  loss_mask_6: 0.1684  loss_dice_6: 1.245  loss_ce_7: 0.439  loss_mask_7: 0.1665  loss_dice_7: 1.215  loss_ce_8: 0.4477  loss_mask_8: 0.1652  loss_dice_8: 1.229    time: 1.0565  last_time: 1.1005  data_time: 0.0816  last_data_time: 0.0814   lr: 0.0001  max_mem: 33906M
[10/17 17:51:50] d2.utils.events INFO:  eta: 0:00:21  iter: 2979  total_loss: 19.11  loss_ce: 0.3828  loss_mask: 0.1454  loss_dice: 1.21  loss_ce_0: 0.5375  loss_mask_0: 0.1743  loss_dice_0: 1.442  loss_ce_1: 0.5685  loss_mask_1: 0.1617  loss_dice_1: 1.402  loss_ce_2: 0.529  loss_mask_2: 0.1509  loss_dice_2: 1.324  loss_ce_3: 0.4448  loss_mask_3: 0.1494  loss_dice_3: 1.31  loss_ce_4: 0.4071  loss_mask_4: 0.1485  loss_dice_4: 1.274  loss_ce_5: 0.4269  loss_mask_5: 0.1489  loss_dice_5: 1.264  loss_ce_6: 0.4202  loss_mask_6: 0.1466  loss_dice_6: 1.231  loss_ce_7: 0.4172  loss_mask_7: 0.1454  loss_dice_7: 1.26  loss_ce_8: 0.4155  loss_mask_8: 0.1467  loss_dice_8: 1.277    time: 1.0566  last_time: 1.0831  data_time: 0.0730  last_data_time: 0.0647   lr: 0.0001  max_mem: 33906M
[10/17 17:52:11] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_multi_layers/model_final.pth
[10/17 17:52:14] d2.utils.events INFO:  eta: 0:00:00  iter: 2999  total_loss: 17.43  loss_ce: 0.3835  loss_mask: 0.1512  loss_dice: 1.085  loss_ce_0: 0.4957  loss_mask_0: 0.1851  loss_dice_0: 1.279  loss_ce_1: 0.5308  loss_mask_1: 0.1629  loss_dice_1: 1.228  loss_ce_2: 0.4883  loss_mask_2: 0.1548  loss_dice_2: 1.184  loss_ce_3: 0.4584  loss_mask_3: 0.1536  loss_dice_3: 1.158  loss_ce_4: 0.3894  loss_mask_4: 0.1522  loss_dice_4: 1.171  loss_ce_5: 0.4017  loss_mask_5: 0.1511  loss_dice_5: 1.154  loss_ce_6: 0.3727  loss_mask_6: 0.1519  loss_dice_6: 1.115  loss_ce_7: 0.3594  loss_mask_7: 0.15  loss_dice_7: 1.132  loss_ce_8: 0.3924  loss_mask_8: 0.1523  loss_dice_8: 1.109    time: 1.0566  last_time: 1.0466  data_time: 0.0697  last_data_time: 0.0641   lr: 0.0001  max_mem: 33906M
[10/17 17:52:15] d2.engine.hooks INFO: Overall training speed: 2998 iterations in 0:52:47 (1.0567 s / it)
[10/17 17:52:15] d2.engine.hooks INFO: Total training time: 0:53:00 (0:00:12 on hooks)
[10/17 17:52:15] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/17 17:52:15] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/17 17:52:15] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 17:52:15] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/17 17:52:15] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/17 17:52:15] d2.evaluation.evaluator INFO: Start inference on 500 batches
[10/17 17:52:18] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0048 s/iter. Inference: 0.1420 s/iter. Eval: 0.0612 s/iter. Total: 0.2079 s/iter. ETA=0:01:41
[10/17 17:52:23] d2.evaluation.evaluator INFO: Inference done 36/500. Dataloading: 0.0055 s/iter. Inference: 0.1388 s/iter. Eval: 0.0626 s/iter. Total: 0.2070 s/iter. ETA=0:01:36
[10/17 17:52:28] d2.evaluation.evaluator INFO: Inference done 61/500. Dataloading: 0.0053 s/iter. Inference: 0.1375 s/iter. Eval: 0.0631 s/iter. Total: 0.2060 s/iter. ETA=0:01:30
[10/17 17:52:33] d2.evaluation.evaluator INFO: Inference done 86/500. Dataloading: 0.0052 s/iter. Inference: 0.1376 s/iter. Eval: 0.0632 s/iter. Total: 0.2060 s/iter. ETA=0:01:25
[10/17 17:52:38] d2.evaluation.evaluator INFO: Inference done 111/500. Dataloading: 0.0052 s/iter. Inference: 0.1373 s/iter. Eval: 0.0634 s/iter. Total: 0.2060 s/iter. ETA=0:01:20
[10/17 17:52:43] d2.evaluation.evaluator INFO: Inference done 136/500. Dataloading: 0.0052 s/iter. Inference: 0.1370 s/iter. Eval: 0.0635 s/iter. Total: 0.2058 s/iter. ETA=0:01:14
[10/17 17:52:48] d2.evaluation.evaluator INFO: Inference done 161/500. Dataloading: 0.0051 s/iter. Inference: 0.1372 s/iter. Eval: 0.0635 s/iter. Total: 0.2058 s/iter. ETA=0:01:09
[10/17 17:52:53] d2.evaluation.evaluator INFO: Inference done 186/500. Dataloading: 0.0051 s/iter. Inference: 0.1370 s/iter. Eval: 0.0635 s/iter. Total: 0.2057 s/iter. ETA=0:01:04
[10/17 17:52:59] d2.evaluation.evaluator INFO: Inference done 211/500. Dataloading: 0.0051 s/iter. Inference: 0.1372 s/iter. Eval: 0.0634 s/iter. Total: 0.2057 s/iter. ETA=0:00:59
[10/17 17:53:04] d2.evaluation.evaluator INFO: Inference done 236/500. Dataloading: 0.0051 s/iter. Inference: 0.1372 s/iter. Eval: 0.0635 s/iter. Total: 0.2058 s/iter. ETA=0:00:54
[10/17 17:53:09] d2.evaluation.evaluator INFO: Inference done 261/500. Dataloading: 0.0051 s/iter. Inference: 0.1371 s/iter. Eval: 0.0635 s/iter. Total: 0.2058 s/iter. ETA=0:00:49
[10/17 17:53:14] d2.evaluation.evaluator INFO: Inference done 286/500. Dataloading: 0.0052 s/iter. Inference: 0.1369 s/iter. Eval: 0.0635 s/iter. Total: 0.2056 s/iter. ETA=0:00:44
[10/17 17:53:19] d2.evaluation.evaluator INFO: Inference done 311/500. Dataloading: 0.0052 s/iter. Inference: 0.1368 s/iter. Eval: 0.0635 s/iter. Total: 0.2056 s/iter. ETA=0:00:38
[10/17 17:53:24] d2.evaluation.evaluator INFO: Inference done 336/500. Dataloading: 0.0053 s/iter. Inference: 0.1366 s/iter. Eval: 0.0635 s/iter. Total: 0.2055 s/iter. ETA=0:00:33
[10/17 17:53:29] d2.evaluation.evaluator INFO: Inference done 361/500. Dataloading: 0.0053 s/iter. Inference: 0.1366 s/iter. Eval: 0.0635 s/iter. Total: 0.2055 s/iter. ETA=0:00:28
[10/17 17:53:35] d2.evaluation.evaluator INFO: Inference done 387/500. Dataloading: 0.0053 s/iter. Inference: 0.1367 s/iter. Eval: 0.0631 s/iter. Total: 0.2051 s/iter. ETA=0:00:23
[10/17 17:53:40] d2.evaluation.evaluator INFO: Inference done 412/500. Dataloading: 0.0052 s/iter. Inference: 0.1367 s/iter. Eval: 0.0632 s/iter. Total: 0.2051 s/iter. ETA=0:00:18
[10/17 17:53:45] d2.evaluation.evaluator INFO: Inference done 437/500. Dataloading: 0.0052 s/iter. Inference: 0.1366 s/iter. Eval: 0.0632 s/iter. Total: 0.2051 s/iter. ETA=0:00:12
[10/17 17:53:50] d2.evaluation.evaluator INFO: Inference done 461/500. Dataloading: 0.0052 s/iter. Inference: 0.1368 s/iter. Eval: 0.0632 s/iter. Total: 0.2052 s/iter. ETA=0:00:08
[10/17 17:53:55] d2.evaluation.evaluator INFO: Inference done 485/500. Dataloading: 0.0052 s/iter. Inference: 0.1371 s/iter. Eval: 0.0632 s/iter. Total: 0.2056 s/iter. ETA=0:00:03
[10/17 17:53:58] d2.evaluation.evaluator INFO: Total inference time: 0:01:41.627140 (0.205307 s / iter per device, on 1 devices)
[10/17 17:53:58] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:07 (0.137079 s / iter per device, on 1 devices)
[10/17 17:53:58] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalygfah_e6 ...
[10/17 17:54:19] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.474 | 80.133 | 70.575 |      19       |
| Things | 49.307 | 79.617 | 61.825 |       8       |
| Stuff  | 63.414 | 80.509 | 76.939 |      11       |
[10/17 17:54:19] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.925 | 97.328 | 99.586 |     Stuff     |
| class_8  | 72.619 | 83.925 | 86.528 |     Stuff     |
| class_11 | 86.781 | 88.864 | 97.655 |     Stuff     |
| class_12 | 41.191 | 77.780 | 52.958 |     Stuff     |
| class_13 | 37.353 | 75.744 | 49.315 |     Stuff     |
| class_17 | 41.009 | 63.130 | 64.959 |     Stuff     |
| class_19 | 46.469 | 68.130 | 68.206 |     Stuff     |
| class_20 | 64.982 | 75.731 | 85.806 |     Stuff     |
| class_21 | 88.060 | 88.974 | 98.973 |     Stuff     |
| class_22 | 34.740 | 74.859 | 46.407 |     Stuff     |
| class_23 | 87.427 | 91.132 | 95.935 |     Stuff     |
| class_24 | 50.996 | 75.240 | 67.778 |    Things     |
| class_25 | 46.921 | 72.706 | 64.536 |    Things     |
| class_26 | 62.943 | 81.719 | 77.024 |    Things     |
| class_27 | 50.743 | 88.197 | 57.534 |    Things     |
| class_28 | 61.717 | 89.352 | 69.072 |    Things     |
| class_31 | 44.134 | 86.061 | 51.282 |    Things     |
| class_32 | 35.960 | 73.223 | 49.110 |    Things     |
| class_33 | 41.038 | 70.436 | 58.263 |    Things     |
[10/17 17:54:19] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[10/17 17:54:19] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/17 17:54:19] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/17 17:54:19] d2.evaluation.testing INFO: copypaste: 57.4741,80.1332,70.5752,49.3067,79.6166,61.8250,63.4141,80.5088,76.9390,96.9247,97.3277,99.5859,72.6190,83.9255,86.5279,86.7806,88.8640,97.6555,41.1905,77.7800,52.9577,37.3531,75.7437,49.3151,41.0088,63.1302,64.9590,46.4688,68.1300,68.2060,64.9822,75.7311,85.8065,88.0604,88.9739,98.9733,34.7395,74.8591,46.4066,87.4272,91.1317,95.9350,50.9960,75.2400,67.7778,46.9214,72.7056,64.5361,62.9432,81.7189,77.0241,50.7432,88.1965,57.5342,61.7173,89.3519,69.0722,44.1340,86.0613,51.2821,35.9602,73.2233,49.1103,41.0381,70.4357,58.2633
