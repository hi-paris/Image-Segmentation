[09/27 00:08:12] detectron2 INFO: Rank of current process: 0. World size: 1
[09/27 00:08:13] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2                        NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/27 00:08:13] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a2.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/27 00:08:13] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a2.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a2
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[09/27 00:08:13] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a2
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/27 00:08:13] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a2/config.yaml
[09/27 00:08:13] d2.utils.env INFO: Using a generated random seed 15464841
[09/27 00:08:17] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (adapter_res5): ConvAdapter(
      (conv1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn2): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/27 00:08:17] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/27 00:08:17] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/27 00:08:17] d2.data.build INFO: Using training sampler TrainingSampler
[09/27 00:08:17] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 00:08:17] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/27 00:08:17] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/27 00:08:17] d2.data.build INFO: Making batched data loader with batch_size=8
[09/27 00:08:17] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/27 00:08:17] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[09/27 00:08:17] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[09/27 00:08:17] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[09/27 00:08:17] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.adapter_res5.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.adapter_res5.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.adapter_res5.conv1.weight[0m
[34mbackbone.adapter_res5.conv2.weight[0m
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[09/27 00:08:17] d2.engine.train_loop INFO: Starting training from iteration 0
[09/27 00:08:41] d2.utils.events INFO:  eta: 0:16:49  iter: 19  total_loss: 32.69  loss_ce: 1.338  loss_mask: 0.2644  loss_dice: 1.522  loss_ce_0: 1.447  loss_mask_0: 0.3074  loss_dice_0: 1.774  loss_ce_1: 1.564  loss_mask_1: 0.285  loss_dice_1: 1.678  loss_ce_2: 1.466  loss_mask_2: 0.2649  loss_dice_2: 1.632  loss_ce_3: 1.427  loss_mask_3: 0.2684  loss_dice_3: 1.572  loss_ce_4: 1.391  loss_mask_4: 0.2665  loss_dice_4: 1.593  loss_ce_5: 1.311  loss_mask_5: 0.2662  loss_dice_5: 1.545  loss_ce_6: 1.32  loss_mask_6: 0.2673  loss_dice_6: 1.514  loss_ce_7: 1.282  loss_mask_7: 0.264  loss_dice_7: 1.542  loss_ce_8: 1.363  loss_mask_8: 0.2665  loss_dice_8: 1.543    time: 1.0477  last_time: 1.0317  data_time: 0.0940  last_data_time: 0.0708   lr: 0.0001  max_mem: 31887M
[09/27 00:09:02] d2.utils.events INFO:  eta: 0:16:38  iter: 39  total_loss: 26.28  loss_ce: 0.8173  loss_mask: 0.2128  loss_dice: 1.444  loss_ce_0: 0.909  loss_mask_0: 0.2537  loss_dice_0: 1.762  loss_ce_1: 0.9783  loss_mask_1: 0.243  loss_dice_1: 1.638  loss_ce_2: 0.8895  loss_mask_2: 0.2213  loss_dice_2: 1.564  loss_ce_3: 0.8422  loss_mask_3: 0.215  loss_dice_3: 1.503  loss_ce_4: 0.846  loss_mask_4: 0.2137  loss_dice_4: 1.464  loss_ce_5: 0.8178  loss_mask_5: 0.2153  loss_dice_5: 1.5  loss_ce_6: 0.8125  loss_mask_6: 0.2146  loss_dice_6: 1.473  loss_ce_7: 0.7949  loss_mask_7: 0.2106  loss_dice_7: 1.453  loss_ce_8: 0.7671  loss_mask_8: 0.2139  loss_dice_8: 1.455    time: 1.0476  last_time: 1.0477  data_time: 0.0636  last_data_time: 0.0569   lr: 0.0001  max_mem: 31887M
[09/27 00:09:24] d2.utils.events INFO:  eta: 0:16:25  iter: 59  total_loss: 24.93  loss_ce: 0.6647  loss_mask: 0.2015  loss_dice: 1.467  loss_ce_0: 0.7059  loss_mask_0: 0.2278  loss_dice_0: 1.848  loss_ce_1: 0.8788  loss_mask_1: 0.22  loss_dice_1: 1.657  loss_ce_2: 0.7349  loss_mask_2: 0.2115  loss_dice_2: 1.608  loss_ce_3: 0.7248  loss_mask_3: 0.205  loss_dice_3: 1.514  loss_ce_4: 0.726  loss_mask_4: 0.2029  loss_dice_4: 1.524  loss_ce_5: 0.6915  loss_mask_5: 0.2009  loss_dice_5: 1.506  loss_ce_6: 0.6898  loss_mask_6: 0.1994  loss_dice_6: 1.476  loss_ce_7: 0.6605  loss_mask_7: 0.2028  loss_dice_7: 1.46  loss_ce_8: 0.6767  loss_mask_8: 0.2039  loss_dice_8: 1.467    time: 1.0619  last_time: 1.0699  data_time: 0.0706  last_data_time: 0.0693   lr: 0.0001  max_mem: 32924M
[09/27 00:09:45] d2.utils.events INFO:  eta: 0:16:04  iter: 79  total_loss: 23.22  loss_ce: 0.625  loss_mask: 0.1907  loss_dice: 1.375  loss_ce_0: 0.7247  loss_mask_0: 0.2258  loss_dice_0: 1.681  loss_ce_1: 0.8477  loss_mask_1: 0.2043  loss_dice_1: 1.555  loss_ce_2: 0.7258  loss_mask_2: 0.203  loss_dice_2: 1.468  loss_ce_3: 0.6618  loss_mask_3: 0.198  loss_dice_3: 1.423  loss_ce_4: 0.6379  loss_mask_4: 0.2012  loss_dice_4: 1.396  loss_ce_5: 0.6035  loss_mask_5: 0.1979  loss_dice_5: 1.47  loss_ce_6: 0.6079  loss_mask_6: 0.1917  loss_dice_6: 1.375  loss_ce_7: 0.6303  loss_mask_7: 0.1937  loss_dice_7: 1.38  loss_ce_8: 0.5999  loss_mask_8: 0.1936  loss_dice_8: 1.37    time: 1.0591  last_time: 1.0024  data_time: 0.0636  last_data_time: 0.0665   lr: 0.0001  max_mem: 32924M
[09/27 00:10:06] d2.utils.events INFO:  eta: 0:15:42  iter: 99  total_loss: 22.37  loss_ce: 0.6251  loss_mask: 0.2093  loss_dice: 1.335  loss_ce_0: 0.732  loss_mask_0: 0.2391  loss_dice_0: 1.608  loss_ce_1: 0.7805  loss_mask_1: 0.2233  loss_dice_1: 1.469  loss_ce_2: 0.7447  loss_mask_2: 0.2125  loss_dice_2: 1.4  loss_ce_3: 0.6707  loss_mask_3: 0.2088  loss_dice_3: 1.335  loss_ce_4: 0.6479  loss_mask_4: 0.2097  loss_dice_4: 1.343  loss_ce_5: 0.6265  loss_mask_5: 0.2088  loss_dice_5: 1.361  loss_ce_6: 0.6165  loss_mask_6: 0.2101  loss_dice_6: 1.324  loss_ce_7: 0.6206  loss_mask_7: 0.2108  loss_dice_7: 1.307  loss_ce_8: 0.6065  loss_mask_8: 0.2099  loss_dice_8: 1.323    time: 1.0547  last_time: 1.0058  data_time: 0.0626  last_data_time: 0.0533   lr: 0.0001  max_mem: 32924M
[09/27 00:10:27] d2.utils.events INFO:  eta: 0:15:20  iter: 119  total_loss: 22.45  loss_ce: 0.6231  loss_mask: 0.1984  loss_dice: 1.307  loss_ce_0: 0.7364  loss_mask_0: 0.2309  loss_dice_0: 1.576  loss_ce_1: 0.8204  loss_mask_1: 0.2132  loss_dice_1: 1.468  loss_ce_2: 0.7343  loss_mask_2: 0.2139  loss_dice_2: 1.389  loss_ce_3: 0.689  loss_mask_3: 0.2035  loss_dice_3: 1.345  loss_ce_4: 0.6564  loss_mask_4: 0.2062  loss_dice_4: 1.381  loss_ce_5: 0.6539  loss_mask_5: 0.2043  loss_dice_5: 1.339  loss_ce_6: 0.6516  loss_mask_6: 0.1976  loss_dice_6: 1.322  loss_ce_7: 0.6126  loss_mask_7: 0.2  loss_dice_7: 1.322  loss_ce_8: 0.6093  loss_mask_8: 0.2004  loss_dice_8: 1.307    time: 1.0529  last_time: 1.0417  data_time: 0.0636  last_data_time: 0.0647   lr: 0.0001  max_mem: 32924M
[09/27 00:10:47] d2.utils.events INFO:  eta: 0:14:58  iter: 139  total_loss: 21.79  loss_ce: 0.6135  loss_mask: 0.2089  loss_dice: 1.286  loss_ce_0: 0.6923  loss_mask_0: 0.24  loss_dice_0: 1.61  loss_ce_1: 0.773  loss_mask_1: 0.221  loss_dice_1: 1.452  loss_ce_2: 0.7037  loss_mask_2: 0.2231  loss_dice_2: 1.384  loss_ce_3: 0.6423  loss_mask_3: 0.2143  loss_dice_3: 1.351  loss_ce_4: 0.6429  loss_mask_4: 0.2115  loss_dice_4: 1.291  loss_ce_5: 0.6194  loss_mask_5: 0.2122  loss_dice_5: 1.271  loss_ce_6: 0.6192  loss_mask_6: 0.2119  loss_dice_6: 1.305  loss_ce_7: 0.6154  loss_mask_7: 0.21  loss_dice_7: 1.296  loss_ce_8: 0.6284  loss_mask_8: 0.2111  loss_dice_8: 1.297    time: 1.0503  last_time: 1.0703  data_time: 0.0642  last_data_time: 0.0596   lr: 0.0001  max_mem: 32924M
[09/27 00:11:08] d2.utils.events INFO:  eta: 0:14:37  iter: 159  total_loss: 22.63  loss_ce: 0.5979  loss_mask: 0.1883  loss_dice: 1.333  loss_ce_0: 0.6782  loss_mask_0: 0.2201  loss_dice_0: 1.613  loss_ce_1: 0.7494  loss_mask_1: 0.2043  loss_dice_1: 1.525  loss_ce_2: 0.7221  loss_mask_2: 0.1975  loss_dice_2: 1.417  loss_ce_3: 0.6289  loss_mask_3: 0.1873  loss_dice_3: 1.398  loss_ce_4: 0.64  loss_mask_4: 0.1893  loss_dice_4: 1.368  loss_ce_5: 0.6227  loss_mask_5: 0.1954  loss_dice_5: 1.356  loss_ce_6: 0.6319  loss_mask_6: 0.196  loss_dice_6: 1.344  loss_ce_7: 0.5788  loss_mask_7: 0.1887  loss_dice_7: 1.348  loss_ce_8: 0.5943  loss_mask_8: 0.1867  loss_dice_8: 1.349    time: 1.0499  last_time: 1.0087  data_time: 0.0666  last_data_time: 0.0614   lr: 0.0001  max_mem: 32924M
[09/27 00:11:30] d2.utils.events INFO:  eta: 0:14:17  iter: 179  total_loss: 21.73  loss_ce: 0.5629  loss_mask: 0.1843  loss_dice: 1.288  loss_ce_0: 0.6449  loss_mask_0: 0.2156  loss_dice_0: 1.595  loss_ce_1: 0.7497  loss_mask_1: 0.2036  loss_dice_1: 1.505  loss_ce_2: 0.6446  loss_mask_2: 0.1912  loss_dice_2: 1.386  loss_ce_3: 0.5753  loss_mask_3: 0.1893  loss_dice_3: 1.319  loss_ce_4: 0.568  loss_mask_4: 0.1894  loss_dice_4: 1.344  loss_ce_5: 0.5772  loss_mask_5: 0.1877  loss_dice_5: 1.362  loss_ce_6: 0.552  loss_mask_6: 0.1894  loss_dice_6: 1.319  loss_ce_7: 0.5545  loss_mask_7: 0.1891  loss_dice_7: 1.346  loss_ce_8: 0.5744  loss_mask_8: 0.1848  loss_dice_8: 1.329    time: 1.0507  last_time: 1.0474  data_time: 0.0693  last_data_time: 0.0609   lr: 0.0001  max_mem: 32924M
[09/27 00:11:51] d2.utils.events INFO:  eta: 0:13:57  iter: 199  total_loss: 23.12  loss_ce: 0.5738  loss_mask: 0.1855  loss_dice: 1.39  loss_ce_0: 0.6179  loss_mask_0: 0.2127  loss_dice_0: 1.692  loss_ce_1: 0.7395  loss_mask_1: 0.2016  loss_dice_1: 1.543  loss_ce_2: 0.6685  loss_mask_2: 0.193  loss_dice_2: 1.422  loss_ce_3: 0.6043  loss_mask_3: 0.1905  loss_dice_3: 1.412  loss_ce_4: 0.5739  loss_mask_4: 0.1915  loss_dice_4: 1.369  loss_ce_5: 0.626  loss_mask_5: 0.1858  loss_dice_5: 1.4  loss_ce_6: 0.5519  loss_mask_6: 0.1872  loss_dice_6: 1.392  loss_ce_7: 0.5991  loss_mask_7: 0.1865  loss_dice_7: 1.398  loss_ce_8: 0.5699  loss_mask_8: 0.1837  loss_dice_8: 1.365    time: 1.0503  last_time: 1.0717  data_time: 0.0666  last_data_time: 0.0761   lr: 0.0001  max_mem: 32924M
[09/27 00:12:11] d2.utils.events INFO:  eta: 0:13:34  iter: 219  total_loss: 21.76  loss_ce: 0.5328  loss_mask: 0.1823  loss_dice: 1.291  loss_ce_0: 0.6209  loss_mask_0: 0.2174  loss_dice_0: 1.551  loss_ce_1: 0.7036  loss_mask_1: 0.1992  loss_dice_1: 1.428  loss_ce_2: 0.6334  loss_mask_2: 0.1884  loss_dice_2: 1.382  loss_ce_3: 0.5749  loss_mask_3: 0.1849  loss_dice_3: 1.328  loss_ce_4: 0.581  loss_mask_4: 0.1866  loss_dice_4: 1.339  loss_ce_5: 0.5792  loss_mask_5: 0.1843  loss_dice_5: 1.289  loss_ce_6: 0.5996  loss_mask_6: 0.1836  loss_dice_6: 1.296  loss_ce_7: 0.5577  loss_mask_7: 0.1831  loss_dice_7: 1.301  loss_ce_8: 0.5697  loss_mask_8: 0.1835  loss_dice_8: 1.299    time: 1.0491  last_time: 1.0252  data_time: 0.0626  last_data_time: 0.0632   lr: 0.0001  max_mem: 32924M
[09/27 00:12:32] d2.utils.events INFO:  eta: 0:13:12  iter: 239  total_loss: 21.51  loss_ce: 0.5623  loss_mask: 0.1909  loss_dice: 1.244  loss_ce_0: 0.6662  loss_mask_0: 0.2144  loss_dice_0: 1.472  loss_ce_1: 0.6977  loss_mask_1: 0.1975  loss_dice_1: 1.384  loss_ce_2: 0.6644  loss_mask_2: 0.1937  loss_dice_2: 1.316  loss_ce_3: 0.6195  loss_mask_3: 0.1961  loss_dice_3: 1.292  loss_ce_4: 0.5623  loss_mask_4: 0.1977  loss_dice_4: 1.29  loss_ce_5: 0.5988  loss_mask_5: 0.1969  loss_dice_5: 1.274  loss_ce_6: 0.5519  loss_mask_6: 0.191  loss_dice_6: 1.249  loss_ce_7: 0.5958  loss_mask_7: 0.1936  loss_dice_7: 1.264  loss_ce_8: 0.5568  loss_mask_8: 0.1909  loss_dice_8: 1.237    time: 1.0475  last_time: 1.0764  data_time: 0.0595  last_data_time: 0.0637   lr: 0.0001  max_mem: 32924M
[09/27 00:12:53] d2.utils.events INFO:  eta: 0:12:52  iter: 259  total_loss: 21.86  loss_ce: 0.5771  loss_mask: 0.1833  loss_dice: 1.306  loss_ce_0: 0.6607  loss_mask_0: 0.213  loss_dice_0: 1.561  loss_ce_1: 0.738  loss_mask_1: 0.196  loss_dice_1: 1.431  loss_ce_2: 0.6726  loss_mask_2: 0.1912  loss_dice_2: 1.394  loss_ce_3: 0.6436  loss_mask_3: 0.1871  loss_dice_3: 1.345  loss_ce_4: 0.5938  loss_mask_4: 0.1865  loss_dice_4: 1.309  loss_ce_5: 0.5746  loss_mask_5: 0.1853  loss_dice_5: 1.315  loss_ce_6: 0.5664  loss_mask_6: 0.1843  loss_dice_6: 1.34  loss_ce_7: 0.5502  loss_mask_7: 0.1832  loss_dice_7: 1.305  loss_ce_8: 0.5624  loss_mask_8: 0.1832  loss_dice_8: 1.31    time: 1.0474  last_time: 1.0660  data_time: 0.0632  last_data_time: 0.0722   lr: 0.0001  max_mem: 32924M
[09/27 00:13:14] d2.utils.events INFO:  eta: 0:12:30  iter: 279  total_loss: 21.59  loss_ce: 0.5645  loss_mask: 0.184  loss_dice: 1.26  loss_ce_0: 0.6691  loss_mask_0: 0.2214  loss_dice_0: 1.534  loss_ce_1: 0.7258  loss_mask_1: 0.1988  loss_dice_1: 1.394  loss_ce_2: 0.6442  loss_mask_2: 0.1984  loss_dice_2: 1.371  loss_ce_3: 0.6331  loss_mask_3: 0.1878  loss_dice_3: 1.316  loss_ce_4: 0.5583  loss_mask_4: 0.1876  loss_dice_4: 1.331  loss_ce_5: 0.5864  loss_mask_5: 0.1845  loss_dice_5: 1.291  loss_ce_6: 0.5769  loss_mask_6: 0.1833  loss_dice_6: 1.269  loss_ce_7: 0.5854  loss_mask_7: 0.183  loss_dice_7: 1.263  loss_ce_8: 0.5771  loss_mask_8: 0.1848  loss_dice_8: 1.277    time: 1.0469  last_time: 1.0308  data_time: 0.0623  last_data_time: 0.0601   lr: 0.0001  max_mem: 32924M
[09/27 00:13:35] d2.utils.events INFO:  eta: 0:12:09  iter: 299  total_loss: 21.46  loss_ce: 0.5265  loss_mask: 0.1998  loss_dice: 1.262  loss_ce_0: 0.6179  loss_mask_0: 0.2313  loss_dice_0: 1.534  loss_ce_1: 0.6848  loss_mask_1: 0.2181  loss_dice_1: 1.387  loss_ce_2: 0.5791  loss_mask_2: 0.2054  loss_dice_2: 1.36  loss_ce_3: 0.6102  loss_mask_3: 0.2004  loss_dice_3: 1.291  loss_ce_4: 0.579  loss_mask_4: 0.2018  loss_dice_4: 1.313  loss_ce_5: 0.5656  loss_mask_5: 0.1967  loss_dice_5: 1.298  loss_ce_6: 0.5636  loss_mask_6: 0.1986  loss_dice_6: 1.286  loss_ce_7: 0.5371  loss_mask_7: 0.1985  loss_dice_7: 1.277  loss_ce_8: 0.5357  loss_mask_8: 0.199  loss_dice_8: 1.288    time: 1.0462  last_time: 1.0658  data_time: 0.0631  last_data_time: 0.0762   lr: 0.0001  max_mem: 32924M
[09/27 00:13:56] d2.utils.events INFO:  eta: 0:11:49  iter: 319  total_loss: 22.05  loss_ce: 0.5618  loss_mask: 0.1896  loss_dice: 1.332  loss_ce_0: 0.6457  loss_mask_0: 0.2247  loss_dice_0: 1.581  loss_ce_1: 0.7374  loss_mask_1: 0.1999  loss_dice_1: 1.43  loss_ce_2: 0.6764  loss_mask_2: 0.1944  loss_dice_2: 1.386  loss_ce_3: 0.6449  loss_mask_3: 0.1977  loss_dice_3: 1.362  loss_ce_4: 0.6457  loss_mask_4: 0.1932  loss_dice_4: 1.339  loss_ce_5: 0.609  loss_mask_5: 0.1916  loss_dice_5: 1.302  loss_ce_6: 0.5887  loss_mask_6: 0.1904  loss_dice_6: 1.283  loss_ce_7: 0.5912  loss_mask_7: 0.1902  loss_dice_7: 1.296  loss_ce_8: 0.5802  loss_mask_8: 0.1918  loss_dice_8: 1.313    time: 1.0471  last_time: 1.0096  data_time: 0.0666  last_data_time: 0.0722   lr: 0.0001  max_mem: 32924M
[09/27 00:14:17] d2.utils.events INFO:  eta: 0:11:28  iter: 339  total_loss: 20.36  loss_ce: 0.5458  loss_mask: 0.1988  loss_dice: 1.192  loss_ce_0: 0.6404  loss_mask_0: 0.2165  loss_dice_0: 1.448  loss_ce_1: 0.7105  loss_mask_1: 0.2069  loss_dice_1: 1.298  loss_ce_2: 0.6345  loss_mask_2: 0.1948  loss_dice_2: 1.249  loss_ce_3: 0.6002  loss_mask_3: 0.199  loss_dice_3: 1.215  loss_ce_4: 0.5716  loss_mask_4: 0.1982  loss_dice_4: 1.233  loss_ce_5: 0.5715  loss_mask_5: 0.1946  loss_dice_5: 1.179  loss_ce_6: 0.5649  loss_mask_6: 0.1984  loss_dice_6: 1.221  loss_ce_7: 0.5502  loss_mask_7: 0.1995  loss_dice_7: 1.215  loss_ce_8: 0.559  loss_mask_8: 0.2  loss_dice_8: 1.166    time: 1.0466  last_time: 1.0586  data_time: 0.0607  last_data_time: 0.0552   lr: 0.0001  max_mem: 32924M
[09/27 00:14:38] d2.utils.events INFO:  eta: 0:11:07  iter: 359  total_loss: 21.61  loss_ce: 0.5494  loss_mask: 0.1858  loss_dice: 1.255  loss_ce_0: 0.6218  loss_mask_0: 0.2268  loss_dice_0: 1.505  loss_ce_1: 0.6738  loss_mask_1: 0.2038  loss_dice_1: 1.435  loss_ce_2: 0.6569  loss_mask_2: 0.1909  loss_dice_2: 1.375  loss_ce_3: 0.601  loss_mask_3: 0.1883  loss_dice_3: 1.303  loss_ce_4: 0.5923  loss_mask_4: 0.187  loss_dice_4: 1.331  loss_ce_5: 0.57  loss_mask_5: 0.1854  loss_dice_5: 1.265  loss_ce_6: 0.5569  loss_mask_6: 0.1874  loss_dice_6: 1.277  loss_ce_7: 0.5568  loss_mask_7: 0.1883  loss_dice_7: 1.294  loss_ce_8: 0.5613  loss_mask_8: 0.1866  loss_dice_8: 1.293    time: 1.0469  last_time: 1.0239  data_time: 0.0629  last_data_time: 0.0580   lr: 0.0001  max_mem: 32924M
[09/27 00:14:59] d2.utils.events INFO:  eta: 0:10:47  iter: 379  total_loss: 20.97  loss_ce: 0.5308  loss_mask: 0.1795  loss_dice: 1.301  loss_ce_0: 0.6457  loss_mask_0: 0.2221  loss_dice_0: 1.521  loss_ce_1: 0.6933  loss_mask_1: 0.2011  loss_dice_1: 1.416  loss_ce_2: 0.6467  loss_mask_2: 0.1861  loss_dice_2: 1.383  loss_ce_3: 0.5972  loss_mask_3: 0.1853  loss_dice_3: 1.357  loss_ce_4: 0.557  loss_mask_4: 0.1832  loss_dice_4: 1.331  loss_ce_5: 0.5442  loss_mask_5: 0.1793  loss_dice_5: 1.338  loss_ce_6: 0.5602  loss_mask_6: 0.1825  loss_dice_6: 1.31  loss_ce_7: 0.5451  loss_mask_7: 0.1808  loss_dice_7: 1.305  loss_ce_8: 0.5724  loss_mask_8: 0.1806  loss_dice_8: 1.283    time: 1.0475  last_time: 1.0206  data_time: 0.0663  last_data_time: 0.0592   lr: 0.0001  max_mem: 32924M
[09/27 00:15:20] d2.utils.events INFO:  eta: 0:10:26  iter: 399  total_loss: 20.26  loss_ce: 0.5238  loss_mask: 0.1803  loss_dice: 1.225  loss_ce_0: 0.5916  loss_mask_0: 0.2111  loss_dice_0: 1.461  loss_ce_1: 0.6307  loss_mask_1: 0.1895  loss_dice_1: 1.393  loss_ce_2: 0.6002  loss_mask_2: 0.1854  loss_dice_2: 1.33  loss_ce_3: 0.5368  loss_mask_3: 0.179  loss_dice_3: 1.256  loss_ce_4: 0.539  loss_mask_4: 0.1799  loss_dice_4: 1.227  loss_ce_5: 0.5208  loss_mask_5: 0.181  loss_dice_5: 1.285  loss_ce_6: 0.5243  loss_mask_6: 0.1783  loss_dice_6: 1.201  loss_ce_7: 0.5052  loss_mask_7: 0.181  loss_dice_7: 1.241  loss_ce_8: 0.5423  loss_mask_8: 0.1809  loss_dice_8: 1.244    time: 1.0474  last_time: 1.0340  data_time: 0.0639  last_data_time: 0.0640   lr: 0.0001  max_mem: 32924M
[09/27 00:15:41] d2.utils.events INFO:  eta: 0:10:05  iter: 419  total_loss: 22.09  loss_ce: 0.5518  loss_mask: 0.1802  loss_dice: 1.332  loss_ce_0: 0.6079  loss_mask_0: 0.2165  loss_dice_0: 1.615  loss_ce_1: 0.687  loss_mask_1: 0.1979  loss_dice_1: 1.517  loss_ce_2: 0.6595  loss_mask_2: 0.1917  loss_dice_2: 1.402  loss_ce_3: 0.5953  loss_mask_3: 0.1881  loss_dice_3: 1.36  loss_ce_4: 0.5831  loss_mask_4: 0.1877  loss_dice_4: 1.359  loss_ce_5: 0.5825  loss_mask_5: 0.186  loss_dice_5: 1.362  loss_ce_6: 0.5593  loss_mask_6: 0.1877  loss_dice_6: 1.358  loss_ce_7: 0.5549  loss_mask_7: 0.1813  loss_dice_7: 1.332  loss_ce_8: 0.558  loss_mask_8: 0.1808  loss_dice_8: 1.35    time: 1.0478  last_time: 1.0274  data_time: 0.0637  last_data_time: 0.0603   lr: 0.0001  max_mem: 32924M
[09/27 00:16:03] d2.utils.events INFO:  eta: 0:09:44  iter: 439  total_loss: 20.74  loss_ce: 0.5152  loss_mask: 0.1827  loss_dice: 1.308  loss_ce_0: 0.5882  loss_mask_0: 0.2074  loss_dice_0: 1.492  loss_ce_1: 0.6482  loss_mask_1: 0.1911  loss_dice_1: 1.39  loss_ce_2: 0.5818  loss_mask_2: 0.186  loss_dice_2: 1.362  loss_ce_3: 0.5384  loss_mask_3: 0.187  loss_dice_3: 1.353  loss_ce_4: 0.5561  loss_mask_4: 0.1815  loss_dice_4: 1.297  loss_ce_5: 0.5249  loss_mask_5: 0.1796  loss_dice_5: 1.278  loss_ce_6: 0.5143  loss_mask_6: 0.1837  loss_dice_6: 1.294  loss_ce_7: 0.505  loss_mask_7: 0.1849  loss_dice_7: 1.315  loss_ce_8: 0.5  loss_mask_8: 0.1831  loss_dice_8: 1.31    time: 1.0486  last_time: 1.0378  data_time: 0.0678  last_data_time: 0.0654   lr: 0.0001  max_mem: 32924M
[09/27 00:16:24] d2.utils.events INFO:  eta: 0:09:23  iter: 459  total_loss: 20.79  loss_ce: 0.5252  loss_mask: 0.1791  loss_dice: 1.253  loss_ce_0: 0.5613  loss_mask_0: 0.1995  loss_dice_0: 1.494  loss_ce_1: 0.6744  loss_mask_1: 0.1852  loss_dice_1: 1.404  loss_ce_2: 0.5875  loss_mask_2: 0.181  loss_dice_2: 1.361  loss_ce_3: 0.5761  loss_mask_3: 0.1826  loss_dice_3: 1.281  loss_ce_4: 0.5331  loss_mask_4: 0.1818  loss_dice_4: 1.289  loss_ce_5: 0.5345  loss_mask_5: 0.18  loss_dice_5: 1.316  loss_ce_6: 0.4759  loss_mask_6: 0.177  loss_dice_6: 1.286  loss_ce_7: 0.5051  loss_mask_7: 0.1776  loss_dice_7: 1.27  loss_ce_8: 0.5003  loss_mask_8: 0.1788  loss_dice_8: 1.265    time: 1.0483  last_time: 1.0964  data_time: 0.0620  last_data_time: 0.0723   lr: 0.0001  max_mem: 32924M
[09/27 00:16:45] d2.utils.events INFO:  eta: 0:09:03  iter: 479  total_loss: 21.12  loss_ce: 0.5446  loss_mask: 0.1813  loss_dice: 1.272  loss_ce_0: 0.6355  loss_mask_0: 0.2123  loss_dice_0: 1.51  loss_ce_1: 0.7007  loss_mask_1: 0.1965  loss_dice_1: 1.434  loss_ce_2: 0.632  loss_mask_2: 0.1938  loss_dice_2: 1.395  loss_ce_3: 0.6224  loss_mask_3: 0.19  loss_dice_3: 1.301  loss_ce_4: 0.5548  loss_mask_4: 0.1898  loss_dice_4: 1.301  loss_ce_5: 0.5555  loss_mask_5: 0.1849  loss_dice_5: 1.288  loss_ce_6: 0.5676  loss_mask_6: 0.1838  loss_dice_6: 1.274  loss_ce_7: 0.535  loss_mask_7: 0.1837  loss_dice_7: 1.273  loss_ce_8: 0.5367  loss_mask_8: 0.1837  loss_dice_8: 1.273    time: 1.0485  last_time: 1.0387  data_time: 0.0659  last_data_time: 0.0591   lr: 0.0001  max_mem: 32924M
[09/27 00:17:06] d2.utils.events INFO:  eta: 0:08:42  iter: 499  total_loss: 20.93  loss_ce: 0.5418  loss_mask: 0.1737  loss_dice: 1.265  loss_ce_0: 0.6009  loss_mask_0: 0.2039  loss_dice_0: 1.493  loss_ce_1: 0.6776  loss_mask_1: 0.1826  loss_dice_1: 1.428  loss_ce_2: 0.678  loss_mask_2: 0.1767  loss_dice_2: 1.365  loss_ce_3: 0.6109  loss_mask_3: 0.1743  loss_dice_3: 1.295  loss_ce_4: 0.5436  loss_mask_4: 0.1761  loss_dice_4: 1.321  loss_ce_5: 0.5532  loss_mask_5: 0.174  loss_dice_5: 1.31  loss_ce_6: 0.5498  loss_mask_6: 0.1745  loss_dice_6: 1.266  loss_ce_7: 0.5648  loss_mask_7: 0.1728  loss_dice_7: 1.278  loss_ce_8: 0.5357  loss_mask_8: 0.1721  loss_dice_8: 1.286    time: 1.0483  last_time: 1.0641  data_time: 0.0642  last_data_time: 0.0532   lr: 0.0001  max_mem: 32924M
[09/27 00:17:27] d2.utils.events INFO:  eta: 0:08:21  iter: 519  total_loss: 20.9  loss_ce: 0.4855  loss_mask: 0.1786  loss_dice: 1.287  loss_ce_0: 0.5962  loss_mask_0: 0.2063  loss_dice_0: 1.541  loss_ce_1: 0.6325  loss_mask_1: 0.1916  loss_dice_1: 1.452  loss_ce_2: 0.5842  loss_mask_2: 0.1833  loss_dice_2: 1.379  loss_ce_3: 0.5627  loss_mask_3: 0.183  loss_dice_3: 1.314  loss_ce_4: 0.5286  loss_mask_4: 0.1804  loss_dice_4: 1.323  loss_ce_5: 0.5241  loss_mask_5: 0.1831  loss_dice_5: 1.306  loss_ce_6: 0.5404  loss_mask_6: 0.1788  loss_dice_6: 1.263  loss_ce_7: 0.4976  loss_mask_7: 0.1784  loss_dice_7: 1.321  loss_ce_8: 0.5005  loss_mask_8: 0.1783  loss_dice_8: 1.287    time: 1.0485  last_time: 1.0289  data_time: 0.0662  last_data_time: 0.0538   lr: 0.0001  max_mem: 32924M
[09/27 00:17:48] d2.utils.events INFO:  eta: 0:08:00  iter: 539  total_loss: 20.5  loss_ce: 0.4468  loss_mask: 0.1827  loss_dice: 1.232  loss_ce_0: 0.5777  loss_mask_0: 0.212  loss_dice_0: 1.493  loss_ce_1: 0.6261  loss_mask_1: 0.1895  loss_dice_1: 1.398  loss_ce_2: 0.5778  loss_mask_2: 0.185  loss_dice_2: 1.336  loss_ce_3: 0.5507  loss_mask_3: 0.179  loss_dice_3: 1.264  loss_ce_4: 0.4892  loss_mask_4: 0.1808  loss_dice_4: 1.301  loss_ce_5: 0.4965  loss_mask_5: 0.1786  loss_dice_5: 1.284  loss_ce_6: 0.4567  loss_mask_6: 0.1794  loss_dice_6: 1.254  loss_ce_7: 0.4612  loss_mask_7: 0.1807  loss_dice_7: 1.217  loss_ce_8: 0.4592  loss_mask_8: 0.1779  loss_dice_8: 1.248    time: 1.0486  last_time: 1.0907  data_time: 0.0626  last_data_time: 0.0564   lr: 0.0001  max_mem: 32924M
[09/27 00:18:09] d2.utils.events INFO:  eta: 0:07:39  iter: 559  total_loss: 21.09  loss_ce: 0.5333  loss_mask: 0.1895  loss_dice: 1.285  loss_ce_0: 0.6267  loss_mask_0: 0.2158  loss_dice_0: 1.521  loss_ce_1: 0.6585  loss_mask_1: 0.2017  loss_dice_1: 1.401  loss_ce_2: 0.6058  loss_mask_2: 0.1943  loss_dice_2: 1.322  loss_ce_3: 0.6139  loss_mask_3: 0.1934  loss_dice_3: 1.271  loss_ce_4: 0.5545  loss_mask_4: 0.1924  loss_dice_4: 1.308  loss_ce_5: 0.523  loss_mask_5: 0.191  loss_dice_5: 1.264  loss_ce_6: 0.4878  loss_mask_6: 0.1914  loss_dice_6: 1.261  loss_ce_7: 0.4876  loss_mask_7: 0.1879  loss_dice_7: 1.265  loss_ce_8: 0.5037  loss_mask_8: 0.1856  loss_dice_8: 1.243    time: 1.0487  last_time: 1.0235  data_time: 0.0663  last_data_time: 0.0614   lr: 0.0001  max_mem: 32924M
[09/27 00:18:30] d2.utils.events INFO:  eta: 0:07:18  iter: 579  total_loss: 21.01  loss_ce: 0.5436  loss_mask: 0.1818  loss_dice: 1.216  loss_ce_0: 0.641  loss_mask_0: 0.2146  loss_dice_0: 1.458  loss_ce_1: 0.6531  loss_mask_1: 0.2038  loss_dice_1: 1.353  loss_ce_2: 0.6169  loss_mask_2: 0.1904  loss_dice_2: 1.338  loss_ce_3: 0.5797  loss_mask_3: 0.1887  loss_dice_3: 1.287  loss_ce_4: 0.5551  loss_mask_4: 0.1868  loss_dice_4: 1.258  loss_ce_5: 0.5521  loss_mask_5: 0.1868  loss_dice_5: 1.261  loss_ce_6: 0.5439  loss_mask_6: 0.1822  loss_dice_6: 1.231  loss_ce_7: 0.5258  loss_mask_7: 0.1828  loss_dice_7: 1.243  loss_ce_8: 0.5239  loss_mask_8: 0.1806  loss_dice_8: 1.243    time: 1.0488  last_time: 1.1561  data_time: 0.0641  last_data_time: 0.0798   lr: 0.0001  max_mem: 32924M
[09/27 00:18:51] d2.utils.events INFO:  eta: 0:06:57  iter: 599  total_loss: 20.82  loss_ce: 0.5214  loss_mask: 0.1724  loss_dice: 1.256  loss_ce_0: 0.6172  loss_mask_0: 0.202  loss_dice_0: 1.498  loss_ce_1: 0.6792  loss_mask_1: 0.1884  loss_dice_1: 1.393  loss_ce_2: 0.6345  loss_mask_2: 0.1834  loss_dice_2: 1.387  loss_ce_3: 0.5928  loss_mask_3: 0.1777  loss_dice_3: 1.3  loss_ce_4: 0.5459  loss_mask_4: 0.1748  loss_dice_4: 1.292  loss_ce_5: 0.5592  loss_mask_5: 0.1737  loss_dice_5: 1.297  loss_ce_6: 0.5366  loss_mask_6: 0.1735  loss_dice_6: 1.268  loss_ce_7: 0.5291  loss_mask_7: 0.1732  loss_dice_7: 1.24  loss_ce_8: 0.5434  loss_mask_8: 0.1715  loss_dice_8: 1.245    time: 1.0489  last_time: 1.1096  data_time: 0.0656  last_data_time: 0.0660   lr: 0.0001  max_mem: 32924M
[09/27 00:19:12] d2.utils.events INFO:  eta: 0:06:37  iter: 619  total_loss: 21.15  loss_ce: 0.5098  loss_mask: 0.1726  loss_dice: 1.313  loss_ce_0: 0.5671  loss_mask_0: 0.1997  loss_dice_0: 1.593  loss_ce_1: 0.681  loss_mask_1: 0.1779  loss_dice_1: 1.434  loss_ce_2: 0.6204  loss_mask_2: 0.1737  loss_dice_2: 1.365  loss_ce_3: 0.5773  loss_mask_3: 0.1708  loss_dice_3: 1.331  loss_ce_4: 0.546  loss_mask_4: 0.1699  loss_dice_4: 1.314  loss_ce_5: 0.5146  loss_mask_5: 0.1697  loss_dice_5: 1.34  loss_ce_6: 0.4995  loss_mask_6: 0.1717  loss_dice_6: 1.314  loss_ce_7: 0.4781  loss_mask_7: 0.1696  loss_dice_7: 1.294  loss_ce_8: 0.5023  loss_mask_8: 0.171  loss_dice_8: 1.319    time: 1.0493  last_time: 1.0791  data_time: 0.0658  last_data_time: 0.0605   lr: 0.0001  max_mem: 32924M
[09/27 00:19:33] d2.utils.events INFO:  eta: 0:06:16  iter: 639  total_loss: 19.63  loss_ce: 0.4512  loss_mask: 0.176  loss_dice: 1.211  loss_ce_0: 0.5452  loss_mask_0: 0.2  loss_dice_0: 1.448  loss_ce_1: 0.6266  loss_mask_1: 0.1863  loss_dice_1: 1.327  loss_ce_2: 0.585  loss_mask_2: 0.1751  loss_dice_2: 1.27  loss_ce_3: 0.5513  loss_mask_3: 0.1797  loss_dice_3: 1.241  loss_ce_4: 0.5306  loss_mask_4: 0.1747  loss_dice_4: 1.248  loss_ce_5: 0.5029  loss_mask_5: 0.1723  loss_dice_5: 1.206  loss_ce_6: 0.484  loss_mask_6: 0.1725  loss_dice_6: 1.208  loss_ce_7: 0.4677  loss_mask_7: 0.175  loss_dice_7: 1.198  loss_ce_8: 0.4689  loss_mask_8: 0.1762  loss_dice_8: 1.237    time: 1.0494  last_time: 1.0669  data_time: 0.0631  last_data_time: 0.0557   lr: 0.0001  max_mem: 32924M
[09/27 00:19:54] d2.utils.events INFO:  eta: 0:05:55  iter: 659  total_loss: 20.15  loss_ce: 0.4857  loss_mask: 0.184  loss_dice: 1.243  loss_ce_0: 0.5921  loss_mask_0: 0.2128  loss_dice_0: 1.507  loss_ce_1: 0.6045  loss_mask_1: 0.2042  loss_dice_1: 1.413  loss_ce_2: 0.5825  loss_mask_2: 0.1884  loss_dice_2: 1.31  loss_ce_3: 0.5303  loss_mask_3: 0.1906  loss_dice_3: 1.281  loss_ce_4: 0.5176  loss_mask_4: 0.1883  loss_dice_4: 1.306  loss_ce_5: 0.5062  loss_mask_5: 0.1846  loss_dice_5: 1.254  loss_ce_6: 0.4877  loss_mask_6: 0.1867  loss_dice_6: 1.234  loss_ce_7: 0.4606  loss_mask_7: 0.1854  loss_dice_7: 1.245  loss_ce_8: 0.4862  loss_mask_8: 0.1894  loss_dice_8: 1.227    time: 1.0493  last_time: 1.0263  data_time: 0.0657  last_data_time: 0.0768   lr: 0.0001  max_mem: 32924M
[09/27 00:20:16] d2.utils.events INFO:  eta: 0:05:34  iter: 679  total_loss: 20.4  loss_ce: 0.5286  loss_mask: 0.1861  loss_dice: 1.227  loss_ce_0: 0.6757  loss_mask_0: 0.2153  loss_dice_0: 1.485  loss_ce_1: 0.6677  loss_mask_1: 0.2031  loss_dice_1: 1.383  loss_ce_2: 0.6331  loss_mask_2: 0.1863  loss_dice_2: 1.34  loss_ce_3: 0.5808  loss_mask_3: 0.1872  loss_dice_3: 1.282  loss_ce_4: 0.5607  loss_mask_4: 0.1858  loss_dice_4: 1.262  loss_ce_5: 0.5534  loss_mask_5: 0.185  loss_dice_5: 1.273  loss_ce_6: 0.5483  loss_mask_6: 0.1847  loss_dice_6: 1.243  loss_ce_7: 0.5299  loss_mask_7: 0.18  loss_dice_7: 1.25  loss_ce_8: 0.5337  loss_mask_8: 0.1844  loss_dice_8: 1.235    time: 1.0499  last_time: 1.0451  data_time: 0.0659  last_data_time: 0.0621   lr: 0.0001  max_mem: 32924M
[09/27 00:20:37] d2.utils.events INFO:  eta: 0:05:13  iter: 699  total_loss: 20.73  loss_ce: 0.5407  loss_mask: 0.1772  loss_dice: 1.257  loss_ce_0: 0.6036  loss_mask_0: 0.209  loss_dice_0: 1.479  loss_ce_1: 0.6735  loss_mask_1: 0.1998  loss_dice_1: 1.422  loss_ce_2: 0.6212  loss_mask_2: 0.1857  loss_dice_2: 1.365  loss_ce_3: 0.6012  loss_mask_3: 0.1845  loss_dice_3: 1.269  loss_ce_4: 0.5412  loss_mask_4: 0.1806  loss_dice_4: 1.273  loss_ce_5: 0.5425  loss_mask_5: 0.1804  loss_dice_5: 1.265  loss_ce_6: 0.5143  loss_mask_6: 0.1806  loss_dice_6: 1.242  loss_ce_7: 0.5094  loss_mask_7: 0.1786  loss_dice_7: 1.268  loss_ce_8: 0.537  loss_mask_8: 0.1753  loss_dice_8: 1.259    time: 1.0504  last_time: 1.0699  data_time: 0.0652  last_data_time: 0.0634   lr: 0.0001  max_mem: 32924M
[09/27 00:20:58] d2.utils.events INFO:  eta: 0:04:53  iter: 719  total_loss: 20.72  loss_ce: 0.5054  loss_mask: 0.173  loss_dice: 1.282  loss_ce_0: 0.5999  loss_mask_0: 0.2002  loss_dice_0: 1.545  loss_ce_1: 0.6722  loss_mask_1: 0.1915  loss_dice_1: 1.426  loss_ce_2: 0.5827  loss_mask_2: 0.1815  loss_dice_2: 1.328  loss_ce_3: 0.5594  loss_mask_3: 0.1757  loss_dice_3: 1.334  loss_ce_4: 0.537  loss_mask_4: 0.1732  loss_dice_4: 1.326  loss_ce_5: 0.5304  loss_mask_5: 0.1707  loss_dice_5: 1.278  loss_ce_6: 0.511  loss_mask_6: 0.1735  loss_dice_6: 1.313  loss_ce_7: 0.5048  loss_mask_7: 0.1748  loss_dice_7: 1.26  loss_ce_8: 0.5059  loss_mask_8: 0.1731  loss_dice_8: 1.293    time: 1.0506  last_time: 1.0385  data_time: 0.0678  last_data_time: 0.0800   lr: 0.0001  max_mem: 32924M
[09/27 00:21:20] d2.utils.events INFO:  eta: 0:04:32  iter: 739  total_loss: 20.78  loss_ce: 0.5614  loss_mask: 0.1792  loss_dice: 1.211  loss_ce_0: 0.6121  loss_mask_0: 0.1968  loss_dice_0: 1.484  loss_ce_1: 0.6857  loss_mask_1: 0.1932  loss_dice_1: 1.423  loss_ce_2: 0.6041  loss_mask_2: 0.1795  loss_dice_2: 1.333  loss_ce_3: 0.5557  loss_mask_3: 0.1795  loss_dice_3: 1.274  loss_ce_4: 0.53  loss_mask_4: 0.1786  loss_dice_4: 1.271  loss_ce_5: 0.5346  loss_mask_5: 0.1821  loss_dice_5: 1.255  loss_ce_6: 0.5218  loss_mask_6: 0.1777  loss_dice_6: 1.274  loss_ce_7: 0.5419  loss_mask_7: 0.1748  loss_dice_7: 1.262  loss_ce_8: 0.5192  loss_mask_8: 0.1746  loss_dice_8: 1.216    time: 1.0507  last_time: 1.0053  data_time: 0.0671  last_data_time: 0.0562   lr: 0.0001  max_mem: 32924M
[09/27 00:21:41] d2.utils.events INFO:  eta: 0:04:11  iter: 759  total_loss: 20  loss_ce: 0.5128  loss_mask: 0.1767  loss_dice: 1.205  loss_ce_0: 0.6054  loss_mask_0: 0.2071  loss_dice_0: 1.416  loss_ce_1: 0.6506  loss_mask_1: 0.1861  loss_dice_1: 1.34  loss_ce_2: 0.5775  loss_mask_2: 0.179  loss_dice_2: 1.281  loss_ce_3: 0.5529  loss_mask_3: 0.1813  loss_dice_3: 1.238  loss_ce_4: 0.5034  loss_mask_4: 0.1779  loss_dice_4: 1.24  loss_ce_5: 0.493  loss_mask_5: 0.1779  loss_dice_5: 1.224  loss_ce_6: 0.4906  loss_mask_6: 0.1761  loss_dice_6: 1.185  loss_ce_7: 0.5113  loss_mask_7: 0.1764  loss_dice_7: 1.197  loss_ce_8: 0.4953  loss_mask_8: 0.1757  loss_dice_8: 1.22    time: 1.0507  last_time: 1.0707  data_time: 0.0652  last_data_time: 0.0952   lr: 0.0001  max_mem: 32924M
[09/27 00:22:02] d2.utils.events INFO:  eta: 0:03:50  iter: 779  total_loss: 20.02  loss_ce: 0.458  loss_mask: 0.1764  loss_dice: 1.243  loss_ce_0: 0.6151  loss_mask_0: 0.2027  loss_dice_0: 1.49  loss_ce_1: 0.6319  loss_mask_1: 0.1814  loss_dice_1: 1.354  loss_ce_2: 0.5636  loss_mask_2: 0.1785  loss_dice_2: 1.341  loss_ce_3: 0.5447  loss_mask_3: 0.1782  loss_dice_3: 1.263  loss_ce_4: 0.5082  loss_mask_4: 0.1742  loss_dice_4: 1.278  loss_ce_5: 0.4719  loss_mask_5: 0.1769  loss_dice_5: 1.26  loss_ce_6: 0.512  loss_mask_6: 0.1736  loss_dice_6: 1.218  loss_ce_7: 0.4854  loss_mask_7: 0.1775  loss_dice_7: 1.247  loss_ce_8: 0.4855  loss_mask_8: 0.1746  loss_dice_8: 1.263    time: 1.0509  last_time: 1.0885  data_time: 0.0660  last_data_time: 0.0536   lr: 0.0001  max_mem: 32924M
[09/27 00:22:23] d2.utils.events INFO:  eta: 0:03:29  iter: 799  total_loss: 19.98  loss_ce: 0.4824  loss_mask: 0.1742  loss_dice: 1.262  loss_ce_0: 0.5615  loss_mask_0: 0.2111  loss_dice_0: 1.461  loss_ce_1: 0.6235  loss_mask_1: 0.1876  loss_dice_1: 1.382  loss_ce_2: 0.5682  loss_mask_2: 0.1814  loss_dice_2: 1.303  loss_ce_3: 0.5229  loss_mask_3: 0.1798  loss_dice_3: 1.293  loss_ce_4: 0.4888  loss_mask_4: 0.1757  loss_dice_4: 1.255  loss_ce_5: 0.4941  loss_mask_5: 0.1767  loss_dice_5: 1.316  loss_ce_6: 0.5005  loss_mask_6: 0.178  loss_dice_6: 1.243  loss_ce_7: 0.4735  loss_mask_7: 0.1744  loss_dice_7: 1.275  loss_ce_8: 0.4781  loss_mask_8: 0.1743  loss_dice_8: 1.272    time: 1.0507  last_time: 1.0490  data_time: 0.0668  last_data_time: 0.0585   lr: 0.0001  max_mem: 32924M
[09/27 00:22:44] d2.utils.events INFO:  eta: 0:03:08  iter: 819  total_loss: 20.15  loss_ce: 0.5145  loss_mask: 0.1738  loss_dice: 1.222  loss_ce_0: 0.5652  loss_mask_0: 0.2141  loss_dice_0: 1.473  loss_ce_1: 0.6445  loss_mask_1: 0.1857  loss_dice_1: 1.373  loss_ce_2: 0.5865  loss_mask_2: 0.1755  loss_dice_2: 1.348  loss_ce_3: 0.5317  loss_mask_3: 0.1777  loss_dice_3: 1.318  loss_ce_4: 0.5126  loss_mask_4: 0.1759  loss_dice_4: 1.263  loss_ce_5: 0.5039  loss_mask_5: 0.1748  loss_dice_5: 1.258  loss_ce_6: 0.4969  loss_mask_6: 0.1744  loss_dice_6: 1.25  loss_ce_7: 0.4934  loss_mask_7: 0.1768  loss_dice_7: 1.245  loss_ce_8: 0.5113  loss_mask_8: 0.1753  loss_dice_8: 1.275    time: 1.0507  last_time: 1.0655  data_time: 0.0630  last_data_time: 0.0733   lr: 0.0001  max_mem: 32924M
[09/27 00:23:05] d2.utils.events INFO:  eta: 0:02:47  iter: 839  total_loss: 20.03  loss_ce: 0.5154  loss_mask: 0.1659  loss_dice: 1.247  loss_ce_0: 0.5947  loss_mask_0: 0.2002  loss_dice_0: 1.433  loss_ce_1: 0.6827  loss_mask_1: 0.1787  loss_dice_1: 1.411  loss_ce_2: 0.6073  loss_mask_2: 0.1671  loss_dice_2: 1.339  loss_ce_3: 0.5431  loss_mask_3: 0.1683  loss_dice_3: 1.279  loss_ce_4: 0.5271  loss_mask_4: 0.1686  loss_dice_4: 1.277  loss_ce_5: 0.5045  loss_mask_5: 0.1658  loss_dice_5: 1.264  loss_ce_6: 0.5088  loss_mask_6: 0.1652  loss_dice_6: 1.25  loss_ce_7: 0.5081  loss_mask_7: 0.1653  loss_dice_7: 1.252  loss_ce_8: 0.5194  loss_mask_8: 0.1665  loss_dice_8: 1.239    time: 1.0510  last_time: 1.0964  data_time: 0.0650  last_data_time: 0.0616   lr: 0.0001  max_mem: 32924M
[09/27 00:23:27] d2.utils.events INFO:  eta: 0:02:26  iter: 859  total_loss: 19.66  loss_ce: 0.4739  loss_mask: 0.1594  loss_dice: 1.216  loss_ce_0: 0.5784  loss_mask_0: 0.1878  loss_dice_0: 1.437  loss_ce_1: 0.6135  loss_mask_1: 0.17  loss_dice_1: 1.34  loss_ce_2: 0.5848  loss_mask_2: 0.1651  loss_dice_2: 1.29  loss_ce_3: 0.5532  loss_mask_3: 0.1648  loss_dice_3: 1.244  loss_ce_4: 0.4806  loss_mask_4: 0.1616  loss_dice_4: 1.252  loss_ce_5: 0.4971  loss_mask_5: 0.1575  loss_dice_5: 1.225  loss_ce_6: 0.5133  loss_mask_6: 0.1559  loss_dice_6: 1.206  loss_ce_7: 0.5232  loss_mask_7: 0.157  loss_dice_7: 1.222  loss_ce_8: 0.4805  loss_mask_8: 0.1585  loss_dice_8: 1.235    time: 1.0516  last_time: 1.1648  data_time: 0.0659  last_data_time: 0.0617   lr: 0.0001  max_mem: 32924M
[09/27 00:23:48] d2.utils.events INFO:  eta: 0:02:05  iter: 879  total_loss: 20.58  loss_ce: 0.5551  loss_mask: 0.1675  loss_dice: 1.247  loss_ce_0: 0.5834  loss_mask_0: 0.1943  loss_dice_0: 1.479  loss_ce_1: 0.6396  loss_mask_1: 0.1804  loss_dice_1: 1.42  loss_ce_2: 0.6281  loss_mask_2: 0.1723  loss_dice_2: 1.353  loss_ce_3: 0.5526  loss_mask_3: 0.1742  loss_dice_3: 1.277  loss_ce_4: 0.5615  loss_mask_4: 0.1711  loss_dice_4: 1.295  loss_ce_5: 0.5502  loss_mask_5: 0.1715  loss_dice_5: 1.27  loss_ce_6: 0.5541  loss_mask_6: 0.1664  loss_dice_6: 1.231  loss_ce_7: 0.5234  loss_mask_7: 0.1679  loss_dice_7: 1.248  loss_ce_8: 0.5385  loss_mask_8: 0.1698  loss_dice_8: 1.259    time: 1.0517  last_time: 1.0471  data_time: 0.0644  last_data_time: 0.0695   lr: 0.0001  max_mem: 32924M
[09/27 00:24:09] d2.utils.events INFO:  eta: 0:01:44  iter: 899  total_loss: 20.54  loss_ce: 0.5359  loss_mask: 0.1583  loss_dice: 1.255  loss_ce_0: 0.592  loss_mask_0: 0.1886  loss_dice_0: 1.419  loss_ce_1: 0.6632  loss_mask_1: 0.1761  loss_dice_1: 1.384  loss_ce_2: 0.6145  loss_mask_2: 0.1632  loss_dice_2: 1.339  loss_ce_3: 0.5501  loss_mask_3: 0.1659  loss_dice_3: 1.322  loss_ce_4: 0.5319  loss_mask_4: 0.1662  loss_dice_4: 1.283  loss_ce_5: 0.518  loss_mask_5: 0.1595  loss_dice_5: 1.282  loss_ce_6: 0.5105  loss_mask_6: 0.1591  loss_dice_6: 1.287  loss_ce_7: 0.5113  loss_mask_7: 0.1613  loss_dice_7: 1.28  loss_ce_8: 0.5099  loss_mask_8: 0.1596  loss_dice_8: 1.26    time: 1.0520  last_time: 1.1077  data_time: 0.0709  last_data_time: 0.0657   lr: 0.0001  max_mem: 32924M
[09/27 00:24:30] d2.utils.events INFO:  eta: 0:01:23  iter: 919  total_loss: 20.38  loss_ce: 0.5226  loss_mask: 0.1724  loss_dice: 1.233  loss_ce_0: 0.5519  loss_mask_0: 0.205  loss_dice_0: 1.463  loss_ce_1: 0.63  loss_mask_1: 0.1854  loss_dice_1: 1.407  loss_ce_2: 0.5809  loss_mask_2: 0.1814  loss_dice_2: 1.326  loss_ce_3: 0.5268  loss_mask_3: 0.1748  loss_dice_3: 1.292  loss_ce_4: 0.5201  loss_mask_4: 0.1759  loss_dice_4: 1.254  loss_ce_5: 0.4996  loss_mask_5: 0.1754  loss_dice_5: 1.289  loss_ce_6: 0.4827  loss_mask_6: 0.1755  loss_dice_6: 1.283  loss_ce_7: 0.51  loss_mask_7: 0.1741  loss_dice_7: 1.262  loss_ce_8: 0.544  loss_mask_8: 0.1712  loss_dice_8: 1.239    time: 1.0519  last_time: 1.0381  data_time: 0.0661  last_data_time: 0.0642   lr: 0.0001  max_mem: 32924M
[09/27 00:24:51] d2.utils.events INFO:  eta: 0:01:02  iter: 939  total_loss: 21.07  loss_ce: 0.5515  loss_mask: 0.1767  loss_dice: 1.281  loss_ce_0: 0.5707  loss_mask_0: 0.2103  loss_dice_0: 1.547  loss_ce_1: 0.6441  loss_mask_1: 0.1959  loss_dice_1: 1.4  loss_ce_2: 0.6094  loss_mask_2: 0.1766  loss_dice_2: 1.374  loss_ce_3: 0.5761  loss_mask_3: 0.1768  loss_dice_3: 1.319  loss_ce_4: 0.552  loss_mask_4: 0.1767  loss_dice_4: 1.293  loss_ce_5: 0.5399  loss_mask_5: 0.1754  loss_dice_5: 1.3  loss_ce_6: 0.5544  loss_mask_6: 0.178  loss_dice_6: 1.295  loss_ce_7: 0.5414  loss_mask_7: 0.1755  loss_dice_7: 1.264  loss_ce_8: 0.5373  loss_mask_8: 0.1754  loss_dice_8: 1.246    time: 1.0520  last_time: 1.0205  data_time: 0.0670  last_data_time: 0.0586   lr: 0.0001  max_mem: 32924M
[09/27 00:25:13] d2.utils.events INFO:  eta: 0:00:41  iter: 959  total_loss: 20.21  loss_ce: 0.4912  loss_mask: 0.1759  loss_dice: 1.22  loss_ce_0: 0.5834  loss_mask_0: 0.204  loss_dice_0: 1.505  loss_ce_1: 0.6497  loss_mask_1: 0.1913  loss_dice_1: 1.398  loss_ce_2: 0.5934  loss_mask_2: 0.1785  loss_dice_2: 1.339  loss_ce_3: 0.5406  loss_mask_3: 0.1746  loss_dice_3: 1.263  loss_ce_4: 0.4858  loss_mask_4: 0.1753  loss_dice_4: 1.303  loss_ce_5: 0.5154  loss_mask_5: 0.177  loss_dice_5: 1.242  loss_ce_6: 0.5015  loss_mask_6: 0.1784  loss_dice_6: 1.233  loss_ce_7: 0.5073  loss_mask_7: 0.175  loss_dice_7: 1.208  loss_ce_8: 0.5081  loss_mask_8: 0.1711  loss_dice_8: 1.226    time: 1.0520  last_time: 1.0434  data_time: 0.0682  last_data_time: 0.0662   lr: 0.0001  max_mem: 32924M
[09/27 00:25:34] d2.utils.events INFO:  eta: 0:00:20  iter: 979  total_loss: 19.68  loss_ce: 0.4532  loss_mask: 0.1622  loss_dice: 1.216  loss_ce_0: 0.5601  loss_mask_0: 0.1837  loss_dice_0: 1.464  loss_ce_1: 0.6268  loss_mask_1: 0.172  loss_dice_1: 1.341  loss_ce_2: 0.5569  loss_mask_2: 0.1612  loss_dice_2: 1.317  loss_ce_3: 0.5382  loss_mask_3: 0.1588  loss_dice_3: 1.277  loss_ce_4: 0.4918  loss_mask_4: 0.1582  loss_dice_4: 1.254  loss_ce_5: 0.4857  loss_mask_5: 0.1602  loss_dice_5: 1.234  loss_ce_6: 0.4951  loss_mask_6: 0.1593  loss_dice_6: 1.23  loss_ce_7: 0.4646  loss_mask_7: 0.1601  loss_dice_7: 1.222  loss_ce_8: 0.4578  loss_mask_8: 0.1606  loss_dice_8: 1.214    time: 1.0523  last_time: 1.0476  data_time: 0.0647  last_data_time: 0.0603   lr: 0.0001  max_mem: 32924M
[09/27 00:25:55] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a2/model_final.pth
[09/27 00:25:57] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 19.89  loss_ce: 0.5356  loss_mask: 0.1772  loss_dice: 1.166  loss_ce_0: 0.6231  loss_mask_0: 0.2002  loss_dice_0: 1.41  loss_ce_1: 0.6629  loss_mask_1: 0.187  loss_dice_1: 1.301  loss_ce_2: 0.6186  loss_mask_2: 0.176  loss_dice_2: 1.239  loss_ce_3: 0.5643  loss_mask_3: 0.1724  loss_dice_3: 1.195  loss_ce_4: 0.5362  loss_mask_4: 0.1722  loss_dice_4: 1.213  loss_ce_5: 0.5119  loss_mask_5: 0.17  loss_dice_5: 1.209  loss_ce_6: 0.5082  loss_mask_6: 0.1803  loss_dice_6: 1.175  loss_ce_7: 0.5303  loss_mask_7: 0.1735  loss_dice_7: 1.16  loss_ce_8: 0.5119  loss_mask_8: 0.176  loss_dice_8: 1.187    time: 1.0523  last_time: 1.0069  data_time: 0.0684  last_data_time: 0.0566   lr: 0.0001  max_mem: 32924M
[09/27 00:25:57] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:17:30 (1.0523 s / it)
[09/27 00:25:57] d2.engine.hooks INFO: Total training time: 0:17:35 (0:00:04 on hooks)
[09/27 00:25:57] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/27 00:25:57] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/27 00:25:57] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/27 00:25:57] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/27 00:25:57] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/27 00:25:57] d2.evaluation.evaluator INFO: Start inference on 500 batches
[09/27 00:26:02] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0036 s/iter. Inference: 0.2340 s/iter. Eval: 0.0652 s/iter. Total: 0.3028 s/iter. ETA=0:02:28
[09/27 00:26:07] d2.evaluation.evaluator INFO: Inference done 28/500. Dataloading: 0.0044 s/iter. Inference: 0.2344 s/iter. Eval: 0.0656 s/iter. Total: 0.3044 s/iter. ETA=0:02:23
[09/27 00:26:12] d2.evaluation.evaluator INFO: Inference done 45/500. Dataloading: 0.0045 s/iter. Inference: 0.2355 s/iter. Eval: 0.0665 s/iter. Total: 0.3066 s/iter. ETA=0:02:19
[09/27 00:26:17] d2.evaluation.evaluator INFO: Inference done 62/500. Dataloading: 0.0046 s/iter. Inference: 0.2358 s/iter. Eval: 0.0666 s/iter. Total: 0.3070 s/iter. ETA=0:02:14
[09/27 00:26:23] d2.evaluation.evaluator INFO: Inference done 79/500. Dataloading: 0.0046 s/iter. Inference: 0.2356 s/iter. Eval: 0.0665 s/iter. Total: 0.3067 s/iter. ETA=0:02:09
[09/27 00:26:28] d2.evaluation.evaluator INFO: Inference done 96/500. Dataloading: 0.0046 s/iter. Inference: 0.2356 s/iter. Eval: 0.0666 s/iter. Total: 0.3067 s/iter. ETA=0:02:03
[09/27 00:26:33] d2.evaluation.evaluator INFO: Inference done 113/500. Dataloading: 0.0045 s/iter. Inference: 0.2359 s/iter. Eval: 0.0665 s/iter. Total: 0.3070 s/iter. ETA=0:01:58
[09/27 00:26:38] d2.evaluation.evaluator INFO: Inference done 130/500. Dataloading: 0.0046 s/iter. Inference: 0.2360 s/iter. Eval: 0.0668 s/iter. Total: 0.3074 s/iter. ETA=0:01:53
[09/27 00:26:44] d2.evaluation.evaluator INFO: Inference done 147/500. Dataloading: 0.0045 s/iter. Inference: 0.2360 s/iter. Eval: 0.0667 s/iter. Total: 0.3074 s/iter. ETA=0:01:48
[09/27 00:26:49] d2.evaluation.evaluator INFO: Inference done 163/500. Dataloading: 0.0045 s/iter. Inference: 0.2376 s/iter. Eval: 0.0666 s/iter. Total: 0.3088 s/iter. ETA=0:01:44
[09/27 00:26:54] d2.evaluation.evaluator INFO: Inference done 180/500. Dataloading: 0.0045 s/iter. Inference: 0.2378 s/iter. Eval: 0.0665 s/iter. Total: 0.3089 s/iter. ETA=0:01:38
[09/27 00:26:59] d2.evaluation.evaluator INFO: Inference done 197/500. Dataloading: 0.0045 s/iter. Inference: 0.2375 s/iter. Eval: 0.0665 s/iter. Total: 0.3086 s/iter. ETA=0:01:33
[09/27 00:27:04] d2.evaluation.evaluator INFO: Inference done 214/500. Dataloading: 0.0045 s/iter. Inference: 0.2373 s/iter. Eval: 0.0664 s/iter. Total: 0.3082 s/iter. ETA=0:01:28
[09/27 00:27:10] d2.evaluation.evaluator INFO: Inference done 231/500. Dataloading: 0.0045 s/iter. Inference: 0.2374 s/iter. Eval: 0.0663 s/iter. Total: 0.3082 s/iter. ETA=0:01:22
[09/27 00:27:15] d2.evaluation.evaluator INFO: Inference done 248/500. Dataloading: 0.0045 s/iter. Inference: 0.2372 s/iter. Eval: 0.0662 s/iter. Total: 0.3080 s/iter. ETA=0:01:17
[09/27 00:27:20] d2.evaluation.evaluator INFO: Inference done 265/500. Dataloading: 0.0045 s/iter. Inference: 0.2371 s/iter. Eval: 0.0662 s/iter. Total: 0.3078 s/iter. ETA=0:01:12
[09/27 00:27:25] d2.evaluation.evaluator INFO: Inference done 282/500. Dataloading: 0.0045 s/iter. Inference: 0.2370 s/iter. Eval: 0.0662 s/iter. Total: 0.3077 s/iter. ETA=0:01:07
[09/27 00:27:30] d2.evaluation.evaluator INFO: Inference done 299/500. Dataloading: 0.0045 s/iter. Inference: 0.2367 s/iter. Eval: 0.0661 s/iter. Total: 0.3073 s/iter. ETA=0:01:01
[09/27 00:27:35] d2.evaluation.evaluator INFO: Inference done 316/500. Dataloading: 0.0045 s/iter. Inference: 0.2366 s/iter. Eval: 0.0660 s/iter. Total: 0.3071 s/iter. ETA=0:00:56
[09/27 00:27:41] d2.evaluation.evaluator INFO: Inference done 333/500. Dataloading: 0.0045 s/iter. Inference: 0.2366 s/iter. Eval: 0.0659 s/iter. Total: 0.3071 s/iter. ETA=0:00:51
[09/27 00:27:46] d2.evaluation.evaluator INFO: Inference done 350/500. Dataloading: 0.0045 s/iter. Inference: 0.2365 s/iter. Eval: 0.0660 s/iter. Total: 0.3070 s/iter. ETA=0:00:46
[09/27 00:27:51] d2.evaluation.evaluator INFO: Inference done 367/500. Dataloading: 0.0045 s/iter. Inference: 0.2364 s/iter. Eval: 0.0660 s/iter. Total: 0.3069 s/iter. ETA=0:00:40
[09/27 00:27:56] d2.evaluation.evaluator INFO: Inference done 384/500. Dataloading: 0.0045 s/iter. Inference: 0.2363 s/iter. Eval: 0.0660 s/iter. Total: 0.3069 s/iter. ETA=0:00:35
[09/27 00:28:01] d2.evaluation.evaluator INFO: Inference done 401/500. Dataloading: 0.0045 s/iter. Inference: 0.2363 s/iter. Eval: 0.0660 s/iter. Total: 0.3069 s/iter. ETA=0:00:30
[09/27 00:28:07] d2.evaluation.evaluator INFO: Inference done 418/500. Dataloading: 0.0045 s/iter. Inference: 0.2363 s/iter. Eval: 0.0660 s/iter. Total: 0.3068 s/iter. ETA=0:00:25
[09/27 00:28:12] d2.evaluation.evaluator INFO: Inference done 435/500. Dataloading: 0.0045 s/iter. Inference: 0.2362 s/iter. Eval: 0.0660 s/iter. Total: 0.3068 s/iter. ETA=0:00:19
[09/27 00:28:17] d2.evaluation.evaluator INFO: Inference done 452/500. Dataloading: 0.0045 s/iter. Inference: 0.2362 s/iter. Eval: 0.0660 s/iter. Total: 0.3067 s/iter. ETA=0:00:14
[09/27 00:28:22] d2.evaluation.evaluator INFO: Inference done 469/500. Dataloading: 0.0045 s/iter. Inference: 0.2362 s/iter. Eval: 0.0659 s/iter. Total: 0.3066 s/iter. ETA=0:00:09
[09/27 00:28:27] d2.evaluation.evaluator INFO: Inference done 486/500. Dataloading: 0.0045 s/iter. Inference: 0.2361 s/iter. Eval: 0.0659 s/iter. Total: 0.3066 s/iter. ETA=0:00:04
[09/27 00:28:32] d2.evaluation.evaluator INFO: Total inference time: 0:02:31.784211 (0.306635 s / iter per device, on 1 devices)
[09/27 00:28:32] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:56 (0.236076 s / iter per device, on 1 devices)
[09/27 00:28:32] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalpy05ue2a ...
[09/27 00:28:56] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 53.220 | 80.559 | 64.793 |      19       |
| Things | 45.301 | 80.015 | 56.325 |       8       |
| Stuff  | 58.980 | 80.954 | 70.951 |      11       |
[09/27 00:28:56] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.229 | 97.139 | 99.063 |     Stuff     |
| class_8  | 58.991 | 83.288 | 70.828 |     Stuff     |
| class_11 | 85.171 | 88.681 | 96.042 |     Stuff     |
| class_12 | 35.819 | 80.357 | 44.575 |     Stuff     |
| class_13 | 28.103 | 76.556 | 36.709 |     Stuff     |
| class_17 | 40.119 | 62.978 | 63.704 |     Stuff     |
| class_19 | 43.442 | 69.327 | 62.662 |     Stuff     |
| class_20 | 62.471 | 76.570 | 81.588 |     Stuff     |
| class_21 | 87.729 | 88.917 | 98.664 |     Stuff     |
| class_22 | 24.142 | 75.050 | 32.168 |     Stuff     |
| class_23 | 86.558 | 91.632 | 94.463 |     Stuff     |
| class_24 | 44.494 | 76.720 | 57.996 |    Things     |
| class_25 | 42.357 | 73.950 | 57.278 |    Things     |
| class_26 | 63.457 | 83.458 | 76.034 |    Things     |
| class_27 | 47.624 | 86.676 | 54.945 |    Things     |
| class_28 | 54.610 | 91.844 | 59.459 |    Things     |
| class_31 | 40.012 | 83.357 | 48.000 |    Things     |
| class_32 | 36.520 | 73.705 | 49.550 |    Things     |
| class_33 | 33.332 | 70.411 | 47.339 |    Things     |
[09/27 00:28:56] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[09/27 00:28:56] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/27 00:28:56] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/27 00:28:56] d2.evaluation.testing INFO: copypaste: 53.2201,80.5588,64.7930,45.3007,80.0152,56.3251,58.9796,80.9541,70.9514,96.2291,97.1388,99.0635,58.9914,83.2883,70.8280,85.1706,88.6809,96.0417,35.8188,80.3568,44.5748,28.1029,76.5563,36.7089,40.1194,62.9782,63.7037,43.4421,69.3273,62.6623,62.4714,76.5696,81.5877,87.7295,88.9175,98.6639,24.1419,75.0500,32.1678,86.5583,91.6317,94.4633,44.4944,76.7200,57.9958,42.3574,73.9504,57.2781,63.4566,83.4583,76.0338,47.6240,86.6756,54.9451,54.6098,91.8438,59.4595,40.0116,83.3575,48.0000,36.5205,73.7050,49.5495,33.3316,70.4106,47.3388
[10/07 23:25:46] detectron2 INFO: Rank of current process: 0. World size: 1
[10/07 23:25:47] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/07 23:25:47] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/07 23:25:47] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/07 23:25:47] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/07 23:25:47] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a/config.yaml
[10/07 23:25:47] d2.utils.env INFO: Using a generated random seed 49031775
[10/07 23:30:41] detectron2 INFO: Rank of current process: 0. World size: 1
[10/07 23:30:42] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/07 23:30:42] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/07 23:30:42] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/07 23:30:42] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/07 23:30:42] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a/config.yaml
[10/07 23:30:42] d2.utils.env INFO: Using a generated random seed 43322969
[10/07 23:30:46] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (adapters): ModuleDict(
      (stem): Adapter(
        (down_proj): Linear(in_features=64, out_features=16, bias=True)
        (up_proj): Linear(in_features=16, out_features=64, bias=True)
        (activation): ReLU()
      )
      (res2): Adapter(
        (down_proj): Linear(in_features=256, out_features=64, bias=True)
        (up_proj): Linear(in_features=64, out_features=256, bias=True)
        (activation): ReLU()
      )
      (res3): Adapter(
        (down_proj): Linear(in_features=512, out_features=128, bias=True)
        (up_proj): Linear(in_features=128, out_features=512, bias=True)
        (activation): ReLU()
      )
      (res4): Adapter(
        (down_proj): Linear(in_features=1024, out_features=256, bias=True)
        (up_proj): Linear(in_features=256, out_features=1024, bias=True)
        (activation): ReLU()
      )
      (res5): Adapter(
        (down_proj): Linear(in_features=2048, out_features=512, bias=True)
        (up_proj): Linear(in_features=512, out_features=2048, bias=True)
        (activation): ReLU()
      )
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/07 23:30:46] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/07 23:30:46] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/07 23:30:46] d2.data.build INFO: Using training sampler TrainingSampler
[10/07 23:30:46] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/07 23:30:46] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/07 23:30:46] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/07 23:30:46] d2.data.build INFO: Making batched data loader with batch_size=8
[10/07 23:30:46] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/07 23:30:46] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/07 23:30:46] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/07 23:30:49] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/07 23:30:49] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.adapters.res2.down_proj.{bias, weight}[0m
[34mbackbone.adapters.res2.up_proj.{bias, weight}[0m
[34mbackbone.adapters.res3.down_proj.{bias, weight}[0m
[34mbackbone.adapters.res3.up_proj.{bias, weight}[0m
[34mbackbone.adapters.res4.down_proj.{bias, weight}[0m
[34mbackbone.adapters.res4.up_proj.{bias, weight}[0m
[34mbackbone.adapters.res5.down_proj.{bias, weight}[0m
[34mbackbone.adapters.res5.up_proj.{bias, weight}[0m
[34mbackbone.adapters.stem.down_proj.{bias, weight}[0m
[34mbackbone.adapters.stem.up_proj.{bias, weight}[0m
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[10/07 23:30:49] d2.engine.train_loop INFO: Starting training from iteration 0
[10/07 23:31:14] d2.utils.events INFO:  eta: 0:17:37  iter: 19  total_loss: 125.9  loss_ce: 8.215  loss_mask: 0.8009  loss_dice: 3.806  loss_ce_0: 7.035  loss_mask_0: 0.7392  loss_dice_0: 3.654  loss_ce_1: 8.442  loss_mask_1: 0.7411  loss_dice_1: 3.635  loss_ce_2: 9.371  loss_mask_2: 0.7335  loss_dice_2: 3.859  loss_ce_3: 9.539  loss_mask_3: 0.7836  loss_dice_3: 3.912  loss_ce_4: 8.057  loss_mask_4: 0.756  loss_dice_4: 3.782  loss_ce_5: 8.089  loss_mask_5: 0.8039  loss_dice_5: 3.74  loss_ce_6: 8.435  loss_mask_6: 0.7363  loss_dice_6: 3.721  loss_ce_7: 8.023  loss_mask_7: 0.7713  loss_dice_7: 3.838  loss_ce_8: 7.973  loss_mask_8: 0.7677  loss_dice_8: 3.844    time: 1.0848  last_time: 1.1228  data_time: 0.1112  last_data_time: 0.0621   lr: 0.0001  max_mem: 31148M
[10/07 23:31:36] d2.utils.events INFO:  eta: 0:17:08  iter: 39  total_loss: 61.38  loss_ce: 1.258  loss_mask: 0.7172  loss_dice: 4.11  loss_ce_0: 1.6  loss_mask_0: 0.7185  loss_dice_0: 4.052  loss_ce_1: 1.213  loss_mask_1: 0.7695  loss_dice_1: 4.009  loss_ce_2: 1.239  loss_mask_2: 0.7144  loss_dice_2: 4.126  loss_ce_3: 1.261  loss_mask_3: 0.7187  loss_dice_3: 4.222  loss_ce_4: 1.202  loss_mask_4: 0.6894  loss_dice_4: 4.017  loss_ce_5: 1.199  loss_mask_5: 0.7045  loss_dice_5: 4.001  loss_ce_6: 1.175  loss_mask_6: 0.7  loss_dice_6: 4.096  loss_ce_7: 1.21  loss_mask_7: 0.7064  loss_dice_7: 4.077  loss_ce_8: 1.282  loss_mask_8: 0.7046  loss_dice_8: 4.093    time: 1.0782  last_time: 1.0542  data_time: 0.0735  last_data_time: 0.0732   lr: 0.0001  max_mem: 31148M
[10/07 23:31:57] d2.utils.events INFO:  eta: 0:16:41  iter: 59  total_loss: 59.83  loss_ce: 1.19  loss_mask: 0.7267  loss_dice: 4.095  loss_ce_0: 1.247  loss_mask_0: 0.7756  loss_dice_0: 4.07  loss_ce_1: 1.173  loss_mask_1: 0.7248  loss_dice_1: 4.042  loss_ce_2: 1.231  loss_mask_2: 0.7366  loss_dice_2: 4.098  loss_ce_3: 1.248  loss_mask_3: 0.7177  loss_dice_3: 4.084  loss_ce_4: 1.193  loss_mask_4: 0.7414  loss_dice_4: 4.072  loss_ce_5: 1.155  loss_mask_5: 0.7357  loss_dice_5: 4.073  loss_ce_6: 1.157  loss_mask_6: 0.7375  loss_dice_6: 4.099  loss_ce_7: 1.126  loss_mask_7: 0.7486  loss_dice_7: 4.1  loss_ce_8: 1.147  loss_mask_8: 0.7289  loss_dice_8: 4.079    time: 1.0722  last_time: 1.0677  data_time: 0.0670  last_data_time: 0.0687   lr: 0.0001  max_mem: 31253M
[10/07 23:32:19] d2.utils.events INFO:  eta: 0:16:20  iter: 79  total_loss: 59.89  loss_ce: 1.543  loss_mask: 0.658  loss_dice: 3.768  loss_ce_0: 1.406  loss_mask_0: 0.6928  loss_dice_0: 3.971  loss_ce_1: 1.608  loss_mask_1: 0.6657  loss_dice_1: 3.748  loss_ce_2: 1.522  loss_mask_2: 0.6758  loss_dice_2: 3.797  loss_ce_3: 1.573  loss_mask_3: 0.6582  loss_dice_3: 3.766  loss_ce_4: 1.522  loss_mask_4: 0.668  loss_dice_4: 3.798  loss_ce_5: 1.549  loss_mask_5: 0.6714  loss_dice_5: 3.761  loss_ce_6: 1.547  loss_mask_6: 0.6546  loss_dice_6: 3.785  loss_ce_7: 1.547  loss_mask_7: 0.6562  loss_dice_7: 3.8  loss_ce_8: 1.576  loss_mask_8: 0.6472  loss_dice_8: 3.782    time: 1.0736  last_time: 1.0390  data_time: 0.0688  last_data_time: 0.0640   lr: 0.0001  max_mem: 32787M
[10/07 23:32:40] d2.utils.events INFO:  eta: 0:15:53  iter: 99  total_loss: 58.34  loss_ce: 1.596  loss_mask: 0.6421  loss_dice: 3.531  loss_ce_0: 1.61  loss_mask_0: 0.6905  loss_dice_0: 3.586  loss_ce_1: 1.672  loss_mask_1: 0.6798  loss_dice_1: 3.525  loss_ce_2: 1.613  loss_mask_2: 0.6469  loss_dice_2: 3.508  loss_ce_3: 1.683  loss_mask_3: 0.6521  loss_dice_3: 3.502  loss_ce_4: 1.634  loss_mask_4: 0.6494  loss_dice_4: 3.508  loss_ce_5: 1.606  loss_mask_5: 0.6343  loss_dice_5: 3.517  loss_ce_6: 1.585  loss_mask_6: 0.6374  loss_dice_6: 3.514  loss_ce_7: 1.581  loss_mask_7: 0.6445  loss_dice_7: 3.548  loss_ce_8: 1.545  loss_mask_8: 0.6538  loss_dice_8: 3.553    time: 1.0686  last_time: 1.0607  data_time: 0.0649  last_data_time: 0.0570   lr: 0.0001  max_mem: 32787M
[10/07 23:33:01] d2.utils.events INFO:  eta: 0:15:32  iter: 119  total_loss: 57.83  loss_ce: 1.765  loss_mask: 0.5998  loss_dice: 3.446  loss_ce_0: 1.668  loss_mask_0: 0.6699  loss_dice_0: 3.486  loss_ce_1: 1.692  loss_mask_1: 0.6371  loss_dice_1: 3.447  loss_ce_2: 1.712  loss_mask_2: 0.5992  loss_dice_2: 3.487  loss_ce_3: 1.746  loss_mask_3: 0.6067  loss_dice_3: 3.458  loss_ce_4: 1.711  loss_mask_4: 0.6089  loss_dice_4: 3.456  loss_ce_5: 1.661  loss_mask_5: 0.5939  loss_dice_5: 3.475  loss_ce_6: 1.736  loss_mask_6: 0.595  loss_dice_6: 3.469  loss_ce_7: 1.71  loss_mask_7: 0.6005  loss_dice_7: 3.479  loss_ce_8: 1.704  loss_mask_8: 0.5938  loss_dice_8: 3.457    time: 1.0679  last_time: 1.0229  data_time: 0.0695  last_data_time: 0.0584   lr: 0.0001  max_mem: 32787M
[10/07 23:33:22] d2.utils.events INFO:  eta: 0:15:09  iter: 139  total_loss: 58.1  loss_ce: 1.676  loss_mask: 0.6613  loss_dice: 3.437  loss_ce_0: 1.72  loss_mask_0: 0.7032  loss_dice_0: 3.486  loss_ce_1: 1.699  loss_mask_1: 0.6712  loss_dice_1: 3.464  loss_ce_2: 1.677  loss_mask_2: 0.6333  loss_dice_2: 3.476  loss_ce_3: 1.76  loss_mask_3: 0.6539  loss_dice_3: 3.47  loss_ce_4: 1.76  loss_mask_4: 0.6548  loss_dice_4: 3.452  loss_ce_5: 1.674  loss_mask_5: 0.6493  loss_dice_5: 3.471  loss_ce_6: 1.711  loss_mask_6: 0.6627  loss_dice_6: 3.46  loss_ce_7: 1.692  loss_mask_7: 0.6623  loss_dice_7: 3.454  loss_ce_8: 1.682  loss_mask_8: 0.6657  loss_dice_8: 3.465    time: 1.0665  last_time: 1.0742  data_time: 0.0678  last_data_time: 0.0656   lr: 0.0001  max_mem: 32787M
[10/07 23:33:43] d2.utils.events INFO:  eta: 0:14:48  iter: 159  total_loss: 56.9  loss_ce: 1.616  loss_mask: 0.6697  loss_dice: 3.386  loss_ce_0: 1.666  loss_mask_0: 0.7147  loss_dice_0: 3.392  loss_ce_1: 1.647  loss_mask_1: 0.6916  loss_dice_1: 3.409  loss_ce_2: 1.631  loss_mask_2: 0.6714  loss_dice_2: 3.39  loss_ce_3: 1.66  loss_mask_3: 0.6776  loss_dice_3: 3.352  loss_ce_4: 1.663  loss_mask_4: 0.6815  loss_dice_4: 3.363  loss_ce_5: 1.619  loss_mask_5: 0.6825  loss_dice_5: 3.35  loss_ce_6: 1.615  loss_mask_6: 0.6595  loss_dice_6: 3.375  loss_ce_7: 1.603  loss_mask_7: 0.6744  loss_dice_7: 3.374  loss_ce_8: 1.626  loss_mask_8: 0.6723  loss_dice_8: 3.378    time: 1.0655  last_time: 1.0924  data_time: 0.0670  last_data_time: 0.0647   lr: 0.0001  max_mem: 32787M
[10/07 23:34:04] d2.utils.events INFO:  eta: 0:14:25  iter: 179  total_loss: 55.58  loss_ce: 1.594  loss_mask: 0.6543  loss_dice: 3.262  loss_ce_0: 1.598  loss_mask_0: 0.695  loss_dice_0: 3.298  loss_ce_1: 1.624  loss_mask_1: 0.6698  loss_dice_1: 3.298  loss_ce_2: 1.602  loss_mask_2: 0.6521  loss_dice_2: 3.283  loss_ce_3: 1.658  loss_mask_3: 0.6467  loss_dice_3: 3.254  loss_ce_4: 1.6  loss_mask_4: 0.6566  loss_dice_4: 3.267  loss_ce_5: 1.612  loss_mask_5: 0.6434  loss_dice_5: 3.303  loss_ce_6: 1.59  loss_mask_6: 0.6435  loss_dice_6: 3.273  loss_ce_7: 1.57  loss_mask_7: 0.651  loss_dice_7: 3.304  loss_ce_8: 1.549  loss_mask_8: 0.6523  loss_dice_8: 3.267    time: 1.0625  last_time: 1.0495  data_time: 0.0675  last_data_time: 0.0806   lr: 0.0001  max_mem: 32787M
[10/07 23:34:26] d2.utils.events INFO:  eta: 0:14:06  iter: 199  total_loss: 57.44  loss_ce: 1.796  loss_mask: 0.5748  loss_dice: 3.31  loss_ce_0: 1.736  loss_mask_0: 0.6093  loss_dice_0: 3.322  loss_ce_1: 1.806  loss_mask_1: 0.6011  loss_dice_1: 3.325  loss_ce_2: 1.817  loss_mask_2: 0.6002  loss_dice_2: 3.316  loss_ce_3: 1.855  loss_mask_3: 0.5953  loss_dice_3: 3.291  loss_ce_4: 1.851  loss_mask_4: 0.6009  loss_dice_4: 3.313  loss_ce_5: 1.804  loss_mask_5: 0.5706  loss_dice_5: 3.29  loss_ce_6: 1.814  loss_mask_6: 0.5723  loss_dice_6: 3.3  loss_ce_7: 1.785  loss_mask_7: 0.5726  loss_dice_7: 3.294  loss_ce_8: 1.818  loss_mask_8: 0.5825  loss_dice_8: 3.296    time: 1.0647  last_time: 1.0899  data_time: 0.0728  last_data_time: 0.0703   lr: 0.0001  max_mem: 32787M
[10/07 23:34:47] d2.utils.events INFO:  eta: 0:13:45  iter: 219  total_loss: 56.95  loss_ce: 1.692  loss_mask: 0.5779  loss_dice: 3.284  loss_ce_0: 1.672  loss_mask_0: 0.6074  loss_dice_0: 3.345  loss_ce_1: 1.7  loss_mask_1: 0.6042  loss_dice_1: 3.33  loss_ce_2: 1.679  loss_mask_2: 0.5772  loss_dice_2: 3.327  loss_ce_3: 1.719  loss_mask_3: 0.5794  loss_dice_3: 3.309  loss_ce_4: 1.682  loss_mask_4: 0.5823  loss_dice_4: 3.291  loss_ce_5: 1.719  loss_mask_5: 0.5794  loss_dice_5: 3.278  loss_ce_6: 1.719  loss_mask_6: 0.5754  loss_dice_6: 3.267  loss_ce_7: 1.752  loss_mask_7: 0.5811  loss_dice_7: 3.27  loss_ce_8: 1.745  loss_mask_8: 0.5766  loss_dice_8: 3.281    time: 1.0653  last_time: 1.1064  data_time: 0.0741  last_data_time: 0.0915   lr: 0.0001  max_mem: 32787M
[10/07 23:35:09] d2.utils.events INFO:  eta: 0:13:25  iter: 239  total_loss: 56.82  loss_ce: 1.714  loss_mask: 0.6024  loss_dice: 3.249  loss_ce_0: 1.671  loss_mask_0: 0.6335  loss_dice_0: 3.304  loss_ce_1: 1.676  loss_mask_1: 0.625  loss_dice_1: 3.28  loss_ce_2: 1.71  loss_mask_2: 0.6098  loss_dice_2: 3.28  loss_ce_3: 1.705  loss_mask_3: 0.6013  loss_dice_3: 3.247  loss_ce_4: 1.705  loss_mask_4: 0.5942  loss_dice_4: 3.246  loss_ce_5: 1.697  loss_mask_5: 0.6071  loss_dice_5: 3.255  loss_ce_6: 1.705  loss_mask_6: 0.6025  loss_dice_6: 3.251  loss_ce_7: 1.721  loss_mask_7: 0.5937  loss_dice_7: 3.259  loss_ce_8: 1.708  loss_mask_8: 0.5933  loss_dice_8: 3.256    time: 1.0664  last_time: 1.0381  data_time: 0.0765  last_data_time: 0.0607   lr: 0.0001  max_mem: 32787M
[10/07 23:35:30] d2.utils.events INFO:  eta: 0:13:04  iter: 259  total_loss: 55.17  loss_ce: 1.643  loss_mask: 0.6216  loss_dice: 3.222  loss_ce_0: 1.638  loss_mask_0: 0.6625  loss_dice_0: 3.297  loss_ce_1: 1.674  loss_mask_1: 0.645  loss_dice_1: 3.238  loss_ce_2: 1.665  loss_mask_2: 0.6221  loss_dice_2: 3.261  loss_ce_3: 1.657  loss_mask_3: 0.6121  loss_dice_3: 3.2  loss_ce_4: 1.621  loss_mask_4: 0.6081  loss_dice_4: 3.217  loss_ce_5: 1.584  loss_mask_5: 0.6293  loss_dice_5: 3.207  loss_ce_6: 1.654  loss_mask_6: 0.6216  loss_dice_6: 3.207  loss_ce_7: 1.651  loss_mask_7: 0.6219  loss_dice_7: 3.208  loss_ce_8: 1.637  loss_mask_8: 0.623  loss_dice_8: 3.221    time: 1.0661  last_time: 1.1099  data_time: 0.0734  last_data_time: 0.0859   lr: 0.0001  max_mem: 32787M
[10/07 23:35:52] d2.utils.events INFO:  eta: 0:12:42  iter: 279  total_loss: 54.78  loss_ce: 1.621  loss_mask: 0.6241  loss_dice: 3.231  loss_ce_0: 1.583  loss_mask_0: 0.6524  loss_dice_0: 3.307  loss_ce_1: 1.581  loss_mask_1: 0.6354  loss_dice_1: 3.284  loss_ce_2: 1.589  loss_mask_2: 0.6222  loss_dice_2: 3.258  loss_ce_3: 1.595  loss_mask_3: 0.617  loss_dice_3: 3.259  loss_ce_4: 1.584  loss_mask_4: 0.6257  loss_dice_4: 3.256  loss_ce_5: 1.581  loss_mask_5: 0.633  loss_dice_5: 3.246  loss_ce_6: 1.58  loss_mask_6: 0.626  loss_dice_6: 3.247  loss_ce_7: 1.598  loss_mask_7: 0.6246  loss_dice_7: 3.234  loss_ce_8: 1.56  loss_mask_8: 0.6314  loss_dice_8: 3.232    time: 1.0660  last_time: 1.0750  data_time: 0.0724  last_data_time: 0.0857   lr: 0.0001  max_mem: 32787M
[10/07 23:36:13] d2.utils.events INFO:  eta: 0:12:21  iter: 299  total_loss: 54.53  loss_ce: 1.618  loss_mask: 0.6265  loss_dice: 3.199  loss_ce_0: 1.569  loss_mask_0: 0.6586  loss_dice_0: 3.286  loss_ce_1: 1.573  loss_mask_1: 0.6359  loss_dice_1: 3.248  loss_ce_2: 1.653  loss_mask_2: 0.6182  loss_dice_2: 3.258  loss_ce_3: 1.652  loss_mask_3: 0.6148  loss_dice_3: 3.218  loss_ce_4: 1.603  loss_mask_4: 0.6198  loss_dice_4: 3.189  loss_ce_5: 1.618  loss_mask_5: 0.6214  loss_dice_5: 3.191  loss_ce_6: 1.638  loss_mask_6: 0.6114  loss_dice_6: 3.179  loss_ce_7: 1.617  loss_mask_7: 0.6254  loss_dice_7: 3.212  loss_ce_8: 1.57  loss_mask_8: 0.6253  loss_dice_8: 3.196    time: 1.0652  last_time: 1.0671  data_time: 0.0700  last_data_time: 0.0634   lr: 0.0001  max_mem: 32787M
[10/07 23:36:34] d2.utils.events INFO:  eta: 0:11:59  iter: 319  total_loss: 54.26  loss_ce: 1.61  loss_mask: 0.6533  loss_dice: 3.153  loss_ce_0: 1.592  loss_mask_0: 0.6791  loss_dice_0: 3.254  loss_ce_1: 1.653  loss_mask_1: 0.6587  loss_dice_1: 3.212  loss_ce_2: 1.656  loss_mask_2: 0.6408  loss_dice_2: 3.22  loss_ce_3: 1.661  loss_mask_3: 0.6353  loss_dice_3: 3.154  loss_ce_4: 1.675  loss_mask_4: 0.6282  loss_dice_4: 3.169  loss_ce_5: 1.637  loss_mask_5: 0.6431  loss_dice_5: 3.15  loss_ce_6: 1.641  loss_mask_6: 0.6504  loss_dice_6: 3.153  loss_ce_7: 1.652  loss_mask_7: 0.654  loss_dice_7: 3.181  loss_ce_8: 1.622  loss_mask_8: 0.6451  loss_dice_8: 3.17    time: 1.0645  last_time: 1.0471  data_time: 0.0690  last_data_time: 0.0599   lr: 0.0001  max_mem: 32787M
[10/07 23:36:55] d2.utils.events INFO:  eta: 0:11:37  iter: 339  total_loss: 53.99  loss_ce: 1.628  loss_mask: 0.6104  loss_dice: 3.151  loss_ce_0: 1.557  loss_mask_0: 0.6544  loss_dice_0: 3.253  loss_ce_1: 1.6  loss_mask_1: 0.6356  loss_dice_1: 3.179  loss_ce_2: 1.611  loss_mask_2: 0.6158  loss_dice_2: 3.183  loss_ce_3: 1.652  loss_mask_3: 0.6052  loss_dice_3: 3.153  loss_ce_4: 1.605  loss_mask_4: 0.6109  loss_dice_4: 3.131  loss_ce_5: 1.609  loss_mask_5: 0.6145  loss_dice_5: 3.15  loss_ce_6: 1.607  loss_mask_6: 0.6134  loss_dice_6: 3.146  loss_ce_7: 1.639  loss_mask_7: 0.6143  loss_dice_7: 3.152  loss_ce_8: 1.585  loss_mask_8: 0.6181  loss_dice_8: 3.14    time: 1.0639  last_time: 1.0404  data_time: 0.0735  last_data_time: 0.0646   lr: 0.0001  max_mem: 32787M
[10/07 23:37:16] d2.utils.events INFO:  eta: 0:11:16  iter: 359  total_loss: 54.28  loss_ce: 1.586  loss_mask: 0.603  loss_dice: 3.184  loss_ce_0: 1.547  loss_mask_0: 0.6567  loss_dice_0: 3.23  loss_ce_1: 1.575  loss_mask_1: 0.6209  loss_dice_1: 3.219  loss_ce_2: 1.603  loss_mask_2: 0.6137  loss_dice_2: 3.221  loss_ce_3: 1.642  loss_mask_3: 0.5994  loss_dice_3: 3.185  loss_ce_4: 1.647  loss_mask_4: 0.6072  loss_dice_4: 3.18  loss_ce_5: 1.621  loss_mask_5: 0.6035  loss_dice_5: 3.186  loss_ce_6: 1.64  loss_mask_6: 0.6038  loss_dice_6: 3.17  loss_ce_7: 1.606  loss_mask_7: 0.6032  loss_dice_7: 3.182  loss_ce_8: 1.554  loss_mask_8: 0.6056  loss_dice_8: 3.171    time: 1.0637  last_time: 1.0852  data_time: 0.0698  last_data_time: 0.0677   lr: 0.0001  max_mem: 32787M
[10/07 23:37:38] d2.utils.events INFO:  eta: 0:10:55  iter: 379  total_loss: 54.87  loss_ce: 1.642  loss_mask: 0.6343  loss_dice: 3.201  loss_ce_0: 1.546  loss_mask_0: 0.6692  loss_dice_0: 3.273  loss_ce_1: 1.669  loss_mask_1: 0.6615  loss_dice_1: 3.234  loss_ce_2: 1.655  loss_mask_2: 0.6249  loss_dice_2: 3.231  loss_ce_3: 1.716  loss_mask_3: 0.6203  loss_dice_3: 3.19  loss_ce_4: 1.705  loss_mask_4: 0.6204  loss_dice_4: 3.184  loss_ce_5: 1.69  loss_mask_5: 0.6417  loss_dice_5: 3.177  loss_ce_6: 1.667  loss_mask_6: 0.6363  loss_dice_6: 3.153  loss_ce_7: 1.678  loss_mask_7: 0.6319  loss_dice_7: 3.19  loss_ce_8: 1.667  loss_mask_8: 0.6363  loss_dice_8: 3.192    time: 1.0641  last_time: 1.0435  data_time: 0.0771  last_data_time: 0.0740   lr: 0.0001  max_mem: 32787M
[10/07 23:37:59] d2.utils.events INFO:  eta: 0:10:34  iter: 399  total_loss: 54.74  loss_ce: 1.667  loss_mask: 0.6063  loss_dice: 3.129  loss_ce_0: 1.604  loss_mask_0: 0.6533  loss_dice_0: 3.231  loss_ce_1: 1.652  loss_mask_1: 0.629  loss_dice_1: 3.187  loss_ce_2: 1.675  loss_mask_2: 0.603  loss_dice_2: 3.151  loss_ce_3: 1.731  loss_mask_3: 0.5926  loss_dice_3: 3.102  loss_ce_4: 1.698  loss_mask_4: 0.5987  loss_dice_4: 3.108  loss_ce_5: 1.667  loss_mask_5: 0.6016  loss_dice_5: 3.125  loss_ce_6: 1.678  loss_mask_6: 0.5974  loss_dice_6: 3.12  loss_ce_7: 1.662  loss_mask_7: 0.6067  loss_dice_7: 3.117  loss_ce_8: 1.705  loss_mask_8: 0.6127  loss_dice_8: 3.141    time: 1.0646  last_time: 1.0989  data_time: 0.0750  last_data_time: 0.0875   lr: 0.0001  max_mem: 32787M
[10/07 23:38:21] d2.utils.events INFO:  eta: 0:10:13  iter: 419  total_loss: 53.89  loss_ce: 1.597  loss_mask: 0.5752  loss_dice: 3.133  loss_ce_0: 1.59  loss_mask_0: 0.6318  loss_dice_0: 3.236  loss_ce_1: 1.611  loss_mask_1: 0.6016  loss_dice_1: 3.209  loss_ce_2: 1.597  loss_mask_2: 0.5818  loss_dice_2: 3.171  loss_ce_3: 1.667  loss_mask_3: 0.589  loss_dice_3: 3.11  loss_ce_4: 1.612  loss_mask_4: 0.5815  loss_dice_4: 3.143  loss_ce_5: 1.631  loss_mask_5: 0.5825  loss_dice_5: 3.147  loss_ce_6: 1.647  loss_mask_6: 0.5716  loss_dice_6: 3.123  loss_ce_7: 1.609  loss_mask_7: 0.5796  loss_dice_7: 3.12  loss_ce_8: 1.627  loss_mask_8: 0.5762  loss_dice_8: 3.144    time: 1.0649  last_time: 1.0813  data_time: 0.0813  last_data_time: 0.0704   lr: 0.0001  max_mem: 32787M
[10/07 23:38:43] d2.utils.events INFO:  eta: 0:09:52  iter: 439  total_loss: 54.3  loss_ce: 1.697  loss_mask: 0.5732  loss_dice: 3.149  loss_ce_0: 1.56  loss_mask_0: 0.6282  loss_dice_0: 3.293  loss_ce_1: 1.585  loss_mask_1: 0.5852  loss_dice_1: 3.206  loss_ce_2: 1.627  loss_mask_2: 0.5889  loss_dice_2: 3.205  loss_ce_3: 1.687  loss_mask_3: 0.5804  loss_dice_3: 3.17  loss_ce_4: 1.69  loss_mask_4: 0.5871  loss_dice_4: 3.168  loss_ce_5: 1.708  loss_mask_5: 0.5828  loss_dice_5: 3.173  loss_ce_6: 1.698  loss_mask_6: 0.5763  loss_dice_6: 3.19  loss_ce_7: 1.693  loss_mask_7: 0.5791  loss_dice_7: 3.144  loss_ce_8: 1.694  loss_mask_8: 0.5793  loss_dice_8: 3.149    time: 1.0656  last_time: 1.0512  data_time: 0.0862  last_data_time: 0.0951   lr: 0.0001  max_mem: 32787M
[10/07 23:39:04] d2.utils.events INFO:  eta: 0:09:31  iter: 459  total_loss: 53.47  loss_ce: 1.555  loss_mask: 0.5896  loss_dice: 3.163  loss_ce_0: 1.514  loss_mask_0: 0.6237  loss_dice_0: 3.249  loss_ce_1: 1.533  loss_mask_1: 0.6016  loss_dice_1: 3.169  loss_ce_2: 1.594  loss_mask_2: 0.5828  loss_dice_2: 3.158  loss_ce_3: 1.588  loss_mask_3: 0.5738  loss_dice_3: 3.124  loss_ce_4: 1.553  loss_mask_4: 0.5816  loss_dice_4: 3.143  loss_ce_5: 1.559  loss_mask_5: 0.5813  loss_dice_5: 3.129  loss_ce_6: 1.587  loss_mask_6: 0.5854  loss_dice_6: 3.147  loss_ce_7: 1.576  loss_mask_7: 0.5788  loss_dice_7: 3.147  loss_ce_8: 1.61  loss_mask_8: 0.585  loss_dice_8: 3.135    time: 1.0654  last_time: 1.0418  data_time: 0.0786  last_data_time: 0.0610   lr: 0.0001  max_mem: 32787M
[10/07 23:39:25] d2.utils.events INFO:  eta: 0:09:09  iter: 479  total_loss: 53.78  loss_ce: 1.6  loss_mask: 0.605  loss_dice: 3.075  loss_ce_0: 1.526  loss_mask_0: 0.6374  loss_dice_0: 3.198  loss_ce_1: 1.56  loss_mask_1: 0.624  loss_dice_1: 3.178  loss_ce_2: 1.601  loss_mask_2: 0.6098  loss_dice_2: 3.123  loss_ce_3: 1.617  loss_mask_3: 0.5922  loss_dice_3: 3.071  loss_ce_4: 1.59  loss_mask_4: 0.5969  loss_dice_4: 3.096  loss_ce_5: 1.602  loss_mask_5: 0.5938  loss_dice_5: 3.086  loss_ce_6: 1.653  loss_mask_6: 0.5943  loss_dice_6: 3.077  loss_ce_7: 1.645  loss_mask_7: 0.5944  loss_dice_7: 3.079  loss_ce_8: 1.639  loss_mask_8: 0.5973  loss_dice_8: 3.092    time: 1.0650  last_time: 1.0687  data_time: 0.0764  last_data_time: 0.0739   lr: 0.0001  max_mem: 32787M
[10/07 23:39:47] d2.utils.events INFO:  eta: 0:08:49  iter: 499  total_loss: 54.53  loss_ce: 1.639  loss_mask: 0.6154  loss_dice: 3.139  loss_ce_0: 1.549  loss_mask_0: 0.6502  loss_dice_0: 3.308  loss_ce_1: 1.623  loss_mask_1: 0.6236  loss_dice_1: 3.184  loss_ce_2: 1.602  loss_mask_2: 0.617  loss_dice_2: 3.149  loss_ce_3: 1.665  loss_mask_3: 0.6084  loss_dice_3: 3.082  loss_ce_4: 1.662  loss_mask_4: 0.606  loss_dice_4: 3.113  loss_ce_5: 1.66  loss_mask_5: 0.6064  loss_dice_5: 3.115  loss_ce_6: 1.651  loss_mask_6: 0.6123  loss_dice_6: 3.123  loss_ce_7: 1.628  loss_mask_7: 0.6187  loss_dice_7: 3.119  loss_ce_8: 1.64  loss_mask_8: 0.6186  loss_dice_8: 3.121    time: 1.0653  last_time: 1.1472  data_time: 0.0802  last_data_time: 0.0850   lr: 0.0001  max_mem: 32787M
[10/07 23:40:08] d2.utils.events INFO:  eta: 0:08:28  iter: 519  total_loss: 53.14  loss_ce: 1.613  loss_mask: 0.5791  loss_dice: 3.099  loss_ce_0: 1.522  loss_mask_0: 0.6205  loss_dice_0: 3.264  loss_ce_1: 1.577  loss_mask_1: 0.5894  loss_dice_1: 3.215  loss_ce_2: 1.579  loss_mask_2: 0.5777  loss_dice_2: 3.141  loss_ce_3: 1.587  loss_mask_3: 0.5698  loss_dice_3: 3.104  loss_ce_4: 1.612  loss_mask_4: 0.5765  loss_dice_4: 3.1  loss_ce_5: 1.602  loss_mask_5: 0.5881  loss_dice_5: 3.1  loss_ce_6: 1.632  loss_mask_6: 0.586  loss_dice_6: 3.1  loss_ce_7: 1.612  loss_mask_7: 0.5838  loss_dice_7: 3.098  loss_ce_8: 1.604  loss_mask_8: 0.5736  loss_dice_8: 3.124    time: 1.0656  last_time: 1.0431  data_time: 0.0825  last_data_time: 0.0891   lr: 0.0001  max_mem: 32787M
[10/07 23:40:29] d2.utils.events INFO:  eta: 0:08:07  iter: 539  total_loss: 53.16  loss_ce: 1.547  loss_mask: 0.6112  loss_dice: 3.111  loss_ce_0: 1.513  loss_mask_0: 0.6454  loss_dice_0: 3.256  loss_ce_1: 1.532  loss_mask_1: 0.6337  loss_dice_1: 3.196  loss_ce_2: 1.507  loss_mask_2: 0.6098  loss_dice_2: 3.189  loss_ce_3: 1.567  loss_mask_3: 0.6103  loss_dice_3: 3.118  loss_ce_4: 1.567  loss_mask_4: 0.6098  loss_dice_4: 3.118  loss_ce_5: 1.58  loss_mask_5: 0.6056  loss_dice_5: 3.11  loss_ce_6: 1.536  loss_mask_6: 0.6096  loss_dice_6: 3.103  loss_ce_7: 1.578  loss_mask_7: 0.6075  loss_dice_7: 3.117  loss_ce_8: 1.572  loss_mask_8: 0.6129  loss_dice_8: 3.113    time: 1.0656  last_time: 1.1041  data_time: 0.0792  last_data_time: 0.0868   lr: 0.0001  max_mem: 32787M
[10/07 23:40:51] d2.utils.events INFO:  eta: 0:07:46  iter: 559  total_loss: 53.86  loss_ce: 1.654  loss_mask: 0.6295  loss_dice: 3.126  loss_ce_0: 1.514  loss_mask_0: 0.6769  loss_dice_0: 3.271  loss_ce_1: 1.547  loss_mask_1: 0.643  loss_dice_1: 3.199  loss_ce_2: 1.607  loss_mask_2: 0.6409  loss_dice_2: 3.187  loss_ce_3: 1.627  loss_mask_3: 0.6317  loss_dice_3: 3.132  loss_ce_4: 1.625  loss_mask_4: 0.6241  loss_dice_4: 3.161  loss_ce_5: 1.649  loss_mask_5: 0.6293  loss_dice_5: 3.155  loss_ce_6: 1.662  loss_mask_6: 0.6313  loss_dice_6: 3.117  loss_ce_7: 1.639  loss_mask_7: 0.6314  loss_dice_7: 3.123  loss_ce_8: 1.638  loss_mask_8: 0.6362  loss_dice_8: 3.148    time: 1.0658  last_time: 1.0699  data_time: 0.0794  last_data_time: 0.0946   lr: 0.0001  max_mem: 32787M
[10/07 23:41:12] d2.utils.events INFO:  eta: 0:07:25  iter: 579  total_loss: 53.38  loss_ce: 1.624  loss_mask: 0.6045  loss_dice: 3.087  loss_ce_0: 1.502  loss_mask_0: 0.656  loss_dice_0: 3.212  loss_ce_1: 1.594  loss_mask_1: 0.6169  loss_dice_1: 3.168  loss_ce_2: 1.613  loss_mask_2: 0.6114  loss_dice_2: 3.108  loss_ce_3: 1.625  loss_mask_3: 0.6047  loss_dice_3: 3.089  loss_ce_4: 1.635  loss_mask_4: 0.6169  loss_dice_4: 3.105  loss_ce_5: 1.605  loss_mask_5: 0.6134  loss_dice_5: 3.103  loss_ce_6: 1.613  loss_mask_6: 0.6043  loss_dice_6: 3.101  loss_ce_7: 1.612  loss_mask_7: 0.606  loss_dice_7: 3.077  loss_ce_8: 1.603  loss_mask_8: 0.6107  loss_dice_8: 3.099    time: 1.0658  last_time: 1.0632  data_time: 0.0777  last_data_time: 0.0750   lr: 0.0001  max_mem: 32787M
[10/07 23:41:34] d2.utils.events INFO:  eta: 0:07:03  iter: 599  total_loss: 53.54  loss_ce: 1.595  loss_mask: 0.5926  loss_dice: 3.095  loss_ce_0: 1.483  loss_mask_0: 0.6387  loss_dice_0: 3.222  loss_ce_1: 1.498  loss_mask_1: 0.6171  loss_dice_1: 3.224  loss_ce_2: 1.594  loss_mask_2: 0.6133  loss_dice_2: 3.132  loss_ce_3: 1.629  loss_mask_3: 0.6091  loss_dice_3: 3.129  loss_ce_4: 1.61  loss_mask_4: 0.6054  loss_dice_4: 3.097  loss_ce_5: 1.573  loss_mask_5: 0.6082  loss_dice_5: 3.122  loss_ce_6: 1.593  loss_mask_6: 0.5958  loss_dice_6: 3.088  loss_ce_7: 1.562  loss_mask_7: 0.6016  loss_dice_7: 3.098  loss_ce_8: 1.557  loss_mask_8: 0.5953  loss_dice_8: 3.122    time: 1.0661  last_time: 1.0408  data_time: 0.0776  last_data_time: 0.0740   lr: 0.0001  max_mem: 32787M
[10/07 23:41:55] d2.utils.events INFO:  eta: 0:06:42  iter: 619  total_loss: 52.68  loss_ce: 1.547  loss_mask: 0.6072  loss_dice: 3.049  loss_ce_0: 1.48  loss_mask_0: 0.6601  loss_dice_0: 3.183  loss_ce_1: 1.509  loss_mask_1: 0.6195  loss_dice_1: 3.149  loss_ce_2: 1.541  loss_mask_2: 0.612  loss_dice_2: 3.093  loss_ce_3: 1.583  loss_mask_3: 0.6095  loss_dice_3: 3.042  loss_ce_4: 1.577  loss_mask_4: 0.6088  loss_dice_4: 3.052  loss_ce_5: 1.575  loss_mask_5: 0.6111  loss_dice_5: 3.036  loss_ce_6: 1.599  loss_mask_6: 0.6061  loss_dice_6: 3.025  loss_ce_7: 1.563  loss_mask_7: 0.6102  loss_dice_7: 3.035  loss_ce_8: 1.539  loss_mask_8: 0.6077  loss_dice_8: 3.042    time: 1.0657  last_time: 0.9991  data_time: 0.0781  last_data_time: 0.0638   lr: 0.0001  max_mem: 32787M
[10/07 23:42:16] d2.utils.events INFO:  eta: 0:06:21  iter: 639  total_loss: 52.49  loss_ce: 1.565  loss_mask: 0.6123  loss_dice: 3.017  loss_ce_0: 1.457  loss_mask_0: 0.6536  loss_dice_0: 3.179  loss_ce_1: 1.524  loss_mask_1: 0.6272  loss_dice_1: 3.119  loss_ce_2: 1.553  loss_mask_2: 0.6112  loss_dice_2: 3.105  loss_ce_3: 1.548  loss_mask_3: 0.6092  loss_dice_3: 3.079  loss_ce_4: 1.545  loss_mask_4: 0.6018  loss_dice_4: 3.054  loss_ce_5: 1.562  loss_mask_5: 0.5994  loss_dice_5: 3.044  loss_ce_6: 1.559  loss_mask_6: 0.6027  loss_dice_6: 3.063  loss_ce_7: 1.557  loss_mask_7: 0.6069  loss_dice_7: 3.055  loss_ce_8: 1.573  loss_mask_8: 0.6097  loss_dice_8: 3.047    time: 1.0660  last_time: 1.0952  data_time: 0.0793  last_data_time: 0.1318   lr: 0.0001  max_mem: 32870M
[10/07 23:42:38] d2.utils.events INFO:  eta: 0:06:00  iter: 659  total_loss: 52.83  loss_ce: 1.566  loss_mask: 0.6116  loss_dice: 3.063  loss_ce_0: 1.451  loss_mask_0: 0.6629  loss_dice_0: 3.204  loss_ce_1: 1.521  loss_mask_1: 0.6294  loss_dice_1: 3.106  loss_ce_2: 1.559  loss_mask_2: 0.6181  loss_dice_2: 3.084  loss_ce_3: 1.537  loss_mask_3: 0.6248  loss_dice_3: 3.037  loss_ce_4: 1.536  loss_mask_4: 0.6153  loss_dice_4: 3.026  loss_ce_5: 1.548  loss_mask_5: 0.6173  loss_dice_5: 3.044  loss_ce_6: 1.56  loss_mask_6: 0.6098  loss_dice_6: 3.083  loss_ce_7: 1.511  loss_mask_7: 0.6089  loss_dice_7: 3.078  loss_ce_8: 1.574  loss_mask_8: 0.6056  loss_dice_8: 3.071    time: 1.0656  last_time: 1.0425  data_time: 0.0703  last_data_time: 0.0855   lr: 0.0001  max_mem: 32870M
[10/07 23:43:00] d2.utils.events INFO:  eta: 0:05:39  iter: 679  total_loss: 52.88  loss_ce: 1.629  loss_mask: 0.5455  loss_dice: 3.059  loss_ce_0: 1.496  loss_mask_0: 0.5788  loss_dice_0: 3.153  loss_ce_1: 1.56  loss_mask_1: 0.5696  loss_dice_1: 3.139  loss_ce_2: 1.614  loss_mask_2: 0.5469  loss_dice_2: 3.081  loss_ce_3: 1.636  loss_mask_3: 0.538  loss_dice_3: 3.061  loss_ce_4: 1.595  loss_mask_4: 0.5383  loss_dice_4: 3.082  loss_ce_5: 1.601  loss_mask_5: 0.5468  loss_dice_5: 3.082  loss_ce_6: 1.617  loss_mask_6: 0.5456  loss_dice_6: 3.075  loss_ce_7: 1.598  loss_mask_7: 0.5398  loss_dice_7: 3.057  loss_ce_8: 1.629  loss_mask_8: 0.5429  loss_dice_8: 3.046    time: 1.0665  last_time: 1.1163  data_time: 0.0779  last_data_time: 0.0721   lr: 0.0001  max_mem: 32870M
[10/07 23:43:22] d2.utils.events INFO:  eta: 0:05:18  iter: 699  total_loss: 54.47  loss_ce: 1.629  loss_mask: 0.5686  loss_dice: 3.141  loss_ce_0: 1.587  loss_mask_0: 0.6209  loss_dice_0: 3.281  loss_ce_1: 1.614  loss_mask_1: 0.5978  loss_dice_1: 3.244  loss_ce_2: 1.624  loss_mask_2: 0.5939  loss_dice_2: 3.156  loss_ce_3: 1.636  loss_mask_3: 0.5863  loss_dice_3: 3.13  loss_ce_4: 1.613  loss_mask_4: 0.5841  loss_dice_4: 3.164  loss_ce_5: 1.631  loss_mask_5: 0.592  loss_dice_5: 3.13  loss_ce_6: 1.616  loss_mask_6: 0.5767  loss_dice_6: 3.135  loss_ce_7: 1.615  loss_mask_7: 0.5753  loss_dice_7: 3.158  loss_ce_8: 1.618  loss_mask_8: 0.5791  loss_dice_8: 3.136    time: 1.0673  last_time: 1.0492  data_time: 0.0749  last_data_time: 0.0748   lr: 0.0001  max_mem: 32870M
[10/07 23:43:43] d2.utils.events INFO:  eta: 0:04:57  iter: 719  total_loss: 53.48  loss_ce: 1.618  loss_mask: 0.6165  loss_dice: 3.07  loss_ce_0: 1.505  loss_mask_0: 0.6701  loss_dice_0: 3.269  loss_ce_1: 1.608  loss_mask_1: 0.6467  loss_dice_1: 3.153  loss_ce_2: 1.641  loss_mask_2: 0.6289  loss_dice_2: 3.107  loss_ce_3: 1.645  loss_mask_3: 0.6357  loss_dice_3: 3.099  loss_ce_4: 1.646  loss_mask_4: 0.6303  loss_dice_4: 3.076  loss_ce_5: 1.623  loss_mask_5: 0.6256  loss_dice_5: 3.095  loss_ce_6: 1.636  loss_mask_6: 0.6179  loss_dice_6: 3.078  loss_ce_7: 1.631  loss_mask_7: 0.6127  loss_dice_7: 3.075  loss_ce_8: 1.604  loss_mask_8: 0.6111  loss_dice_8: 3.092    time: 1.0673  last_time: 1.0506  data_time: 0.0681  last_data_time: 0.0797   lr: 0.0001  max_mem: 32870M
[10/07 23:44:05] d2.utils.events INFO:  eta: 0:04:35  iter: 739  total_loss: 53.49  loss_ce: 1.644  loss_mask: 0.5769  loss_dice: 3.038  loss_ce_0: 1.525  loss_mask_0: 0.6125  loss_dice_0: 3.194  loss_ce_1: 1.572  loss_mask_1: 0.5938  loss_dice_1: 3.137  loss_ce_2: 1.608  loss_mask_2: 0.5929  loss_dice_2: 3.138  loss_ce_3: 1.618  loss_mask_3: 0.5791  loss_dice_3: 3.095  loss_ce_4: 1.609  loss_mask_4: 0.5845  loss_dice_4: 3.062  loss_ce_5: 1.63  loss_mask_5: 0.5879  loss_dice_5: 3.08  loss_ce_6: 1.6  loss_mask_6: 0.5753  loss_dice_6: 3.062  loss_ce_7: 1.624  loss_mask_7: 0.5765  loss_dice_7: 3.075  loss_ce_8: 1.61  loss_mask_8: 0.5703  loss_dice_8: 3.056    time: 1.0676  last_time: 1.0866  data_time: 0.0718  last_data_time: 0.0833   lr: 0.0001  max_mem: 32870M
[10/07 23:44:26] d2.utils.events INFO:  eta: 0:04:14  iter: 759  total_loss: 53.9  loss_ce: 1.662  loss_mask: 0.6093  loss_dice: 3.083  loss_ce_0: 1.579  loss_mask_0: 0.6667  loss_dice_0: 3.235  loss_ce_1: 1.597  loss_mask_1: 0.633  loss_dice_1: 3.163  loss_ce_2: 1.633  loss_mask_2: 0.6293  loss_dice_2: 3.136  loss_ce_3: 1.652  loss_mask_3: 0.6333  loss_dice_3: 3.092  loss_ce_4: 1.629  loss_mask_4: 0.6108  loss_dice_4: 3.097  loss_ce_5: 1.626  loss_mask_5: 0.6149  loss_dice_5: 3.101  loss_ce_6: 1.681  loss_mask_6: 0.6092  loss_dice_6: 3.084  loss_ce_7: 1.656  loss_mask_7: 0.61  loss_dice_7: 3.107  loss_ce_8: 1.666  loss_mask_8: 0.6147  loss_dice_8: 3.076    time: 1.0677  last_time: 1.0685  data_time: 0.0740  last_data_time: 0.0777   lr: 0.0001  max_mem: 32870M
[10/07 23:44:48] d2.utils.events INFO:  eta: 0:03:53  iter: 779  total_loss: 52.36  loss_ce: 1.563  loss_mask: 0.6038  loss_dice: 3.057  loss_ce_0: 1.448  loss_mask_0: 0.6495  loss_dice_0: 3.197  loss_ce_1: 1.491  loss_mask_1: 0.6264  loss_dice_1: 3.152  loss_ce_2: 1.514  loss_mask_2: 0.615  loss_dice_2: 3.118  loss_ce_3: 1.537  loss_mask_3: 0.6005  loss_dice_3: 3.073  loss_ce_4: 1.553  loss_mask_4: 0.5911  loss_dice_4: 3.073  loss_ce_5: 1.541  loss_mask_5: 0.5929  loss_dice_5: 3.089  loss_ce_6: 1.564  loss_mask_6: 0.6034  loss_dice_6: 3.067  loss_ce_7: 1.547  loss_mask_7: 0.5988  loss_dice_7: 3.07  loss_ce_8: 1.539  loss_mask_8: 0.6059  loss_dice_8: 3.088    time: 1.0680  last_time: 1.0218  data_time: 0.0758  last_data_time: 0.0561   lr: 0.0001  max_mem: 32870M
[10/07 23:45:10] d2.utils.events INFO:  eta: 0:03:32  iter: 799  total_loss: 52.34  loss_ce: 1.624  loss_mask: 0.5985  loss_dice: 3.032  loss_ce_0: 1.509  loss_mask_0: 0.6375  loss_dice_0: 3.193  loss_ce_1: 1.562  loss_mask_1: 0.6136  loss_dice_1: 3.141  loss_ce_2: 1.59  loss_mask_2: 0.5977  loss_dice_2: 3.04  loss_ce_3: 1.61  loss_mask_3: 0.6033  loss_dice_3: 3.048  loss_ce_4: 1.626  loss_mask_4: 0.6055  loss_dice_4: 3.02  loss_ce_5: 1.563  loss_mask_5: 0.6085  loss_dice_5: 3.056  loss_ce_6: 1.58  loss_mask_6: 0.5989  loss_dice_6: 3.043  loss_ce_7: 1.598  loss_mask_7: 0.595  loss_dice_7: 3.05  loss_ce_8: 1.604  loss_mask_8: 0.5989  loss_dice_8: 3.015    time: 1.0687  last_time: 1.0510  data_time: 0.0770  last_data_time: 0.0696   lr: 0.0001  max_mem: 32870M
[10/07 23:45:32] d2.utils.events INFO:  eta: 0:03:11  iter: 819  total_loss: 52.36  loss_ce: 1.604  loss_mask: 0.5748  loss_dice: 3.057  loss_ce_0: 1.536  loss_mask_0: 0.6343  loss_dice_0: 3.233  loss_ce_1: 1.595  loss_mask_1: 0.5998  loss_dice_1: 3.174  loss_ce_2: 1.645  loss_mask_2: 0.5937  loss_dice_2: 3.105  loss_ce_3: 1.628  loss_mask_3: 0.5674  loss_dice_3: 3.043  loss_ce_4: 1.654  loss_mask_4: 0.5756  loss_dice_4: 3.061  loss_ce_5: 1.629  loss_mask_5: 0.5728  loss_dice_5: 3.07  loss_ce_6: 1.606  loss_mask_6: 0.5676  loss_dice_6: 3.065  loss_ce_7: 1.572  loss_mask_7: 0.5695  loss_dice_7: 3.065  loss_ce_8: 1.58  loss_mask_8: 0.5711  loss_dice_8: 3.07    time: 1.0698  last_time: 1.1167  data_time: 0.0812  last_data_time: 0.0862   lr: 0.0001  max_mem: 32870M
[10/07 23:45:54] d2.utils.events INFO:  eta: 0:02:50  iter: 839  total_loss: 52.38  loss_ce: 1.607  loss_mask: 0.5938  loss_dice: 3.025  loss_ce_0: 1.502  loss_mask_0: 0.6434  loss_dice_0: 3.167  loss_ce_1: 1.581  loss_mask_1: 0.6335  loss_dice_1: 3.118  loss_ce_2: 1.621  loss_mask_2: 0.6151  loss_dice_2: 3.057  loss_ce_3: 1.628  loss_mask_3: 0.6032  loss_dice_3: 3.019  loss_ce_4: 1.61  loss_mask_4: 0.5843  loss_dice_4: 3.004  loss_ce_5: 1.644  loss_mask_5: 0.58  loss_dice_5: 3.024  loss_ce_6: 1.603  loss_mask_6: 0.5803  loss_dice_6: 3.037  loss_ce_7: 1.591  loss_mask_7: 0.5882  loss_dice_7: 3.022  loss_ce_8: 1.594  loss_mask_8: 0.589  loss_dice_8: 3.016    time: 1.0709  last_time: 1.0612  data_time: 0.0839  last_data_time: 0.0602   lr: 0.0001  max_mem: 32870M
[10/07 23:46:16] d2.utils.events INFO:  eta: 0:02:29  iter: 859  total_loss: 51.85  loss_ce: 1.484  loss_mask: 0.6104  loss_dice: 3.058  loss_ce_0: 1.406  loss_mask_0: 0.6726  loss_dice_0: 3.163  loss_ce_1: 1.486  loss_mask_1: 0.6311  loss_dice_1: 3.133  loss_ce_2: 1.467  loss_mask_2: 0.6005  loss_dice_2: 3.104  loss_ce_3: 1.503  loss_mask_3: 0.6025  loss_dice_3: 3.057  loss_ce_4: 1.478  loss_mask_4: 0.6079  loss_dice_4: 3.055  loss_ce_5: 1.487  loss_mask_5: 0.6149  loss_dice_5: 3.046  loss_ce_6: 1.453  loss_mask_6: 0.612  loss_dice_6: 3.044  loss_ce_7: 1.446  loss_mask_7: 0.609  loss_dice_7: 3.041  loss_ce_8: 1.487  loss_mask_8: 0.6193  loss_dice_8: 3.03    time: 1.0712  last_time: 1.0372  data_time: 0.0704  last_data_time: 0.0571   lr: 0.0001  max_mem: 32870M
[10/07 23:46:38] d2.utils.events INFO:  eta: 0:02:07  iter: 879  total_loss: 52.78  loss_ce: 1.607  loss_mask: 0.6271  loss_dice: 3.073  loss_ce_0: 1.483  loss_mask_0: 0.6698  loss_dice_0: 3.151  loss_ce_1: 1.523  loss_mask_1: 0.6412  loss_dice_1: 3.123  loss_ce_2: 1.573  loss_mask_2: 0.6361  loss_dice_2: 3.077  loss_ce_3: 1.567  loss_mask_3: 0.626  loss_dice_3: 3.072  loss_ce_4: 1.561  loss_mask_4: 0.628  loss_dice_4: 3.045  loss_ce_5: 1.593  loss_mask_5: 0.6271  loss_dice_5: 3.065  loss_ce_6: 1.546  loss_mask_6: 0.623  loss_dice_6: 3.081  loss_ce_7: 1.575  loss_mask_7: 0.6284  loss_dice_7: 3.065  loss_ce_8: 1.608  loss_mask_8: 0.6251  loss_dice_8: 3.054    time: 1.0720  last_time: 1.1047  data_time: 0.0730  last_data_time: 0.0760   lr: 0.0001  max_mem: 32870M
[10/07 23:47:00] d2.utils.events INFO:  eta: 0:01:46  iter: 899  total_loss: 52.9  loss_ce: 1.55  loss_mask: 0.573  loss_dice: 3.079  loss_ce_0: 1.497  loss_mask_0: 0.6116  loss_dice_0: 3.219  loss_ce_1: 1.525  loss_mask_1: 0.5933  loss_dice_1: 3.157  loss_ce_2: 1.588  loss_mask_2: 0.5796  loss_dice_2: 3.124  loss_ce_3: 1.559  loss_mask_3: 0.5752  loss_dice_3: 3.111  loss_ce_4: 1.541  loss_mask_4: 0.5824  loss_dice_4: 3.088  loss_ce_5: 1.565  loss_mask_5: 0.5745  loss_dice_5: 3.079  loss_ce_6: 1.572  loss_mask_6: 0.5721  loss_dice_6: 3.072  loss_ce_7: 1.566  loss_mask_7: 0.5793  loss_dice_7: 3.082  loss_ce_8: 1.565  loss_mask_8: 0.5793  loss_dice_8: 3.063    time: 1.0723  last_time: 1.0920  data_time: 0.0660  last_data_time: 0.0622   lr: 0.0001  max_mem: 32870M
[10/07 23:47:22] d2.utils.events INFO:  eta: 0:01:25  iter: 919  total_loss: 53.36  loss_ce: 1.625  loss_mask: 0.5989  loss_dice: 3.072  loss_ce_0: 1.476  loss_mask_0: 0.6404  loss_dice_0: 3.221  loss_ce_1: 1.544  loss_mask_1: 0.6123  loss_dice_1: 3.154  loss_ce_2: 1.599  loss_mask_2: 0.6043  loss_dice_2: 3.102  loss_ce_3: 1.597  loss_mask_3: 0.6015  loss_dice_3: 3.09  loss_ce_4: 1.589  loss_mask_4: 0.6057  loss_dice_4: 3.07  loss_ce_5: 1.584  loss_mask_5: 0.6015  loss_dice_5: 3.083  loss_ce_6: 1.63  loss_mask_6: 0.6033  loss_dice_6: 3.032  loss_ce_7: 1.608  loss_mask_7: 0.6043  loss_dice_7: 3.043  loss_ce_8: 1.591  loss_mask_8: 0.5985  loss_dice_8: 3.042    time: 1.0727  last_time: 1.1207  data_time: 0.0698  last_data_time: 0.0668   lr: 0.0001  max_mem: 32870M
[10/07 23:47:44] d2.utils.events INFO:  eta: 0:01:03  iter: 939  total_loss: 52.05  loss_ce: 1.616  loss_mask: 0.5502  loss_dice: 3  loss_ce_0: 1.482  loss_mask_0: 0.5842  loss_dice_0: 3.162  loss_ce_1: 1.582  loss_mask_1: 0.5711  loss_dice_1: 3.067  loss_ce_2: 1.618  loss_mask_2: 0.5709  loss_dice_2: 3.051  loss_ce_3: 1.581  loss_mask_3: 0.5664  loss_dice_3: 2.993  loss_ce_4: 1.607  loss_mask_4: 0.5548  loss_dice_4: 2.988  loss_ce_5: 1.631  loss_mask_5: 0.5422  loss_dice_5: 2.996  loss_ce_6: 1.623  loss_mask_6: 0.544  loss_dice_6: 2.983  loss_ce_7: 1.681  loss_mask_7: 0.5419  loss_dice_7: 3  loss_ce_8: 1.59  loss_mask_8: 0.5455  loss_dice_8: 2.978    time: 1.0737  last_time: 1.1535  data_time: 0.0742  last_data_time: 0.0790   lr: 0.0001  max_mem: 32870M
[10/07 23:48:07] d2.utils.events INFO:  eta: 0:00:42  iter: 959  total_loss: 53.27  loss_ce: 1.676  loss_mask: 0.566  loss_dice: 3.09  loss_ce_0: 1.541  loss_mask_0: 0.6017  loss_dice_0: 3.229  loss_ce_1: 1.611  loss_mask_1: 0.5706  loss_dice_1: 3.168  loss_ce_2: 1.655  loss_mask_2: 0.5722  loss_dice_2: 3.149  loss_ce_3: 1.679  loss_mask_3: 0.5761  loss_dice_3: 3.07  loss_ce_4: 1.629  loss_mask_4: 0.5683  loss_dice_4: 3.065  loss_ce_5: 1.634  loss_mask_5: 0.5715  loss_dice_5: 3.08  loss_ce_6: 1.658  loss_mask_6: 0.5649  loss_dice_6: 3.06  loss_ce_7: 1.68  loss_mask_7: 0.5676  loss_dice_7: 3.089  loss_ce_8: 1.633  loss_mask_8: 0.5657  loss_dice_8: 3.049    time: 1.0745  last_time: 1.1007  data_time: 0.0884  last_data_time: 0.0682   lr: 0.0001  max_mem: 32870M
[10/07 23:48:29] d2.utils.events INFO:  eta: 0:00:21  iter: 979  total_loss: 51.87  loss_ce: 1.553  loss_mask: 0.5976  loss_dice: 2.97  loss_ce_0: 1.44  loss_mask_0: 0.6304  loss_dice_0: 3.172  loss_ce_1: 1.535  loss_mask_1: 0.6177  loss_dice_1: 3.117  loss_ce_2: 1.569  loss_mask_2: 0.6165  loss_dice_2: 3.024  loss_ce_3: 1.567  loss_mask_3: 0.5964  loss_dice_3: 3.004  loss_ce_4: 1.558  loss_mask_4: 0.5946  loss_dice_4: 3.018  loss_ce_5: 1.56  loss_mask_5: 0.6001  loss_dice_5: 2.981  loss_ce_6: 1.562  loss_mask_6: 0.5967  loss_dice_6: 2.984  loss_ce_7: 1.549  loss_mask_7: 0.5971  loss_dice_7: 2.974  loss_ce_8: 1.551  loss_mask_8: 0.5967  loss_dice_8: 3.001    time: 1.0751  last_time: 1.0496  data_time: 0.0813  last_data_time: 0.0737   lr: 0.0001  max_mem: 32870M
[10/07 23:48:51] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a/model_final.pth
[10/07 23:48:54] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 51.68  loss_ce: 1.54  loss_mask: 0.5658  loss_dice: 3.027  loss_ce_0: 1.402  loss_mask_0: 0.6383  loss_dice_0: 3.205  loss_ce_1: 1.505  loss_mask_1: 0.6123  loss_dice_1: 3.165  loss_ce_2: 1.538  loss_mask_2: 0.5885  loss_dice_2: 3.11  loss_ce_3: 1.569  loss_mask_3: 0.5725  loss_dice_3: 3.099  loss_ce_4: 1.548  loss_mask_4: 0.568  loss_dice_4: 3.066  loss_ce_5: 1.559  loss_mask_5: 0.559  loss_dice_5: 3.035  loss_ce_6: 1.563  loss_mask_6: 0.562  loss_dice_6: 3.06  loss_ce_7: 1.554  loss_mask_7: 0.5699  loss_dice_7: 3.053  loss_ce_8: 1.579  loss_mask_8: 0.5694  loss_dice_8: 3.023    time: 1.0758  last_time: 1.0855  data_time: 0.0863  last_data_time: 0.0944   lr: 0.0001  max_mem: 32870M
[10/07 23:48:54] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:17:53 (1.0758 s / it)
[10/07 23:48:54] d2.engine.hooks INFO: Total training time: 0:17:59 (0:00:06 on hooks)
[10/07 23:48:54] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/07 23:48:54] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/07 23:48:54] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/07 23:48:54] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/07 23:48:54] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/07 23:48:54] d2.evaluation.evaluator INFO: Start inference on 500 batches
[10/07 23:48:59] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0036 s/iter. Inference: 0.2321 s/iter. Eval: 0.0598 s/iter. Total: 0.2955 s/iter. ETA=0:02:24
[10/07 23:49:04] d2.evaluation.evaluator INFO: Inference done 27/500. Dataloading: 0.0049 s/iter. Inference: 0.2468 s/iter. Eval: 0.0617 s/iter. Total: 0.3135 s/iter. ETA=0:02:28
[10/07 23:49:09] d2.evaluation.evaluator INFO: Inference done 43/500. Dataloading: 0.0051 s/iter. Inference: 0.2527 s/iter. Eval: 0.0614 s/iter. Total: 0.3192 s/iter. ETA=0:02:25
[10/07 23:49:14] d2.evaluation.evaluator INFO: Inference done 58/500. Dataloading: 0.0052 s/iter. Inference: 0.2578 s/iter. Eval: 0.0624 s/iter. Total: 0.3255 s/iter. ETA=0:02:23
[10/07 23:49:19] d2.evaluation.evaluator INFO: Inference done 73/500. Dataloading: 0.0053 s/iter. Inference: 0.2597 s/iter. Eval: 0.0627 s/iter. Total: 0.3278 s/iter. ETA=0:02:19
[10/07 23:49:25] d2.evaluation.evaluator INFO: Inference done 88/500. Dataloading: 0.0053 s/iter. Inference: 0.2623 s/iter. Eval: 0.0617 s/iter. Total: 0.3294 s/iter. ETA=0:02:15
[10/07 23:49:30] d2.evaluation.evaluator INFO: Inference done 104/500. Dataloading: 0.0053 s/iter. Inference: 0.2610 s/iter. Eval: 0.0615 s/iter. Total: 0.3279 s/iter. ETA=0:02:09
[10/07 23:49:35] d2.evaluation.evaluator INFO: Inference done 120/500. Dataloading: 0.0053 s/iter. Inference: 0.2601 s/iter. Eval: 0.0615 s/iter. Total: 0.3270 s/iter. ETA=0:02:04
[10/07 23:49:40] d2.evaluation.evaluator INFO: Inference done 136/500. Dataloading: 0.0053 s/iter. Inference: 0.2601 s/iter. Eval: 0.0608 s/iter. Total: 0.3262 s/iter. ETA=0:01:58
[10/07 23:49:45] d2.evaluation.evaluator INFO: Inference done 151/500. Dataloading: 0.0053 s/iter. Inference: 0.2610 s/iter. Eval: 0.0606 s/iter. Total: 0.3270 s/iter. ETA=0:01:54
[10/07 23:49:50] d2.evaluation.evaluator INFO: Inference done 166/500. Dataloading: 0.0053 s/iter. Inference: 0.2624 s/iter. Eval: 0.0611 s/iter. Total: 0.3290 s/iter. ETA=0:01:49
[10/07 23:49:55] d2.evaluation.evaluator INFO: Inference done 182/500. Dataloading: 0.0053 s/iter. Inference: 0.2630 s/iter. Eval: 0.0610 s/iter. Total: 0.3295 s/iter. ETA=0:01:44
[10/07 23:50:01] d2.evaluation.evaluator INFO: Inference done 197/500. Dataloading: 0.0053 s/iter. Inference: 0.2651 s/iter. Eval: 0.0609 s/iter. Total: 0.3313 s/iter. ETA=0:01:40
[10/07 23:50:06] d2.evaluation.evaluator INFO: Inference done 213/500. Dataloading: 0.0053 s/iter. Inference: 0.2649 s/iter. Eval: 0.0607 s/iter. Total: 0.3310 s/iter. ETA=0:01:35
[10/07 23:50:11] d2.evaluation.evaluator INFO: Inference done 229/500. Dataloading: 0.0053 s/iter. Inference: 0.2645 s/iter. Eval: 0.0606 s/iter. Total: 0.3305 s/iter. ETA=0:01:29
[10/07 23:50:16] d2.evaluation.evaluator INFO: Inference done 245/500. Dataloading: 0.0053 s/iter. Inference: 0.2640 s/iter. Eval: 0.0605 s/iter. Total: 0.3299 s/iter. ETA=0:01:24
[10/07 23:50:21] d2.evaluation.evaluator INFO: Inference done 261/500. Dataloading: 0.0053 s/iter. Inference: 0.2632 s/iter. Eval: 0.0604 s/iter. Total: 0.3290 s/iter. ETA=0:01:18
[10/07 23:50:26] d2.evaluation.evaluator INFO: Inference done 276/500. Dataloading: 0.0053 s/iter. Inference: 0.2636 s/iter. Eval: 0.0604 s/iter. Total: 0.3293 s/iter. ETA=0:01:13
[10/07 23:50:31] d2.evaluation.evaluator INFO: Inference done 292/500. Dataloading: 0.0053 s/iter. Inference: 0.2628 s/iter. Eval: 0.0603 s/iter. Total: 0.3285 s/iter. ETA=0:01:08
[10/07 23:50:37] d2.evaluation.evaluator INFO: Inference done 308/500. Dataloading: 0.0053 s/iter. Inference: 0.2627 s/iter. Eval: 0.0602 s/iter. Total: 0.3283 s/iter. ETA=0:01:03
[10/07 23:50:42] d2.evaluation.evaluator INFO: Inference done 324/500. Dataloading: 0.0053 s/iter. Inference: 0.2628 s/iter. Eval: 0.0603 s/iter. Total: 0.3285 s/iter. ETA=0:00:57
[10/07 23:50:47] d2.evaluation.evaluator INFO: Inference done 339/500. Dataloading: 0.0053 s/iter. Inference: 0.2636 s/iter. Eval: 0.0604 s/iter. Total: 0.3294 s/iter. ETA=0:00:53
[10/07 23:50:52] d2.evaluation.evaluator INFO: Inference done 354/500. Dataloading: 0.0054 s/iter. Inference: 0.2637 s/iter. Eval: 0.0605 s/iter. Total: 0.3296 s/iter. ETA=0:00:48
[10/07 23:50:57] d2.evaluation.evaluator INFO: Inference done 370/500. Dataloading: 0.0054 s/iter. Inference: 0.2636 s/iter. Eval: 0.0605 s/iter. Total: 0.3295 s/iter. ETA=0:00:42
[10/07 23:51:02] d2.evaluation.evaluator INFO: Inference done 385/500. Dataloading: 0.0054 s/iter. Inference: 0.2637 s/iter. Eval: 0.0606 s/iter. Total: 0.3297 s/iter. ETA=0:00:37
[10/07 23:51:08] d2.evaluation.evaluator INFO: Inference done 401/500. Dataloading: 0.0054 s/iter. Inference: 0.2637 s/iter. Eval: 0.0607 s/iter. Total: 0.3298 s/iter. ETA=0:00:32
[10/07 23:51:13] d2.evaluation.evaluator INFO: Inference done 416/500. Dataloading: 0.0054 s/iter. Inference: 0.2639 s/iter. Eval: 0.0607 s/iter. Total: 0.3300 s/iter. ETA=0:00:27
[10/07 23:51:18] d2.evaluation.evaluator INFO: Inference done 432/500. Dataloading: 0.0054 s/iter. Inference: 0.2637 s/iter. Eval: 0.0608 s/iter. Total: 0.3299 s/iter. ETA=0:00:22
[10/07 23:51:23] d2.evaluation.evaluator INFO: Inference done 447/500. Dataloading: 0.0054 s/iter. Inference: 0.2638 s/iter. Eval: 0.0608 s/iter. Total: 0.3301 s/iter. ETA=0:00:17
[10/07 23:51:28] d2.evaluation.evaluator INFO: Inference done 463/500. Dataloading: 0.0054 s/iter. Inference: 0.2638 s/iter. Eval: 0.0608 s/iter. Total: 0.3300 s/iter. ETA=0:00:12
[10/07 23:51:34] d2.evaluation.evaluator INFO: Inference done 479/500. Dataloading: 0.0054 s/iter. Inference: 0.2639 s/iter. Eval: 0.0606 s/iter. Total: 0.3300 s/iter. ETA=0:00:06
[10/07 23:51:39] d2.evaluation.evaluator INFO: Inference done 494/500. Dataloading: 0.0054 s/iter. Inference: 0.2641 s/iter. Eval: 0.0607 s/iter. Total: 0.3304 s/iter. ETA=0:00:01
[10/07 23:51:41] d2.evaluation.evaluator INFO: Total inference time: 0:02:43.645880 (0.330598 s / iter per device, on 1 devices)
[10/07 23:51:41] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:10 (0.264173 s / iter per device, on 1 devices)
[10/07 23:51:41] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalq3gw86tz ...
[10/07 23:52:09] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 8.031  | 17.666 | 11.094 |      19       |
| Things | 0.034  | 7.689  | 0.055  |       8       |
| Stuff  | 13.847 | 24.922 | 19.123 |      11       |
[10/07 23:52:09] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 71.011 | 72.207 | 98.344 |     Stuff     |
| class_8  | 0.000  | 0.000  | 0.000  |     Stuff     |
| class_11 | 3.029  | 60.230 | 5.029  |     Stuff     |
| class_12 | 0.000  | 0.000  | 0.000  |     Stuff     |
| class_13 | 0.000  | 0.000  | 0.000  |     Stuff     |
| class_17 | 0.000  | 0.000  | 0.000  |     Stuff     |
| class_19 | 0.000  | 0.000  | 0.000  |     Stuff     |
| class_20 | 0.000  | 0.000  | 0.000  |     Stuff     |
| class_21 | 24.015 | 62.652 | 38.331 |     Stuff     |
| class_22 | 0.000  | 0.000  | 0.000  |     Stuff     |
| class_23 | 54.263 | 79.049 | 68.645 |     Stuff     |
| class_24 | 0.000  | 0.000  | 0.000  |    Things     |
| class_25 | 0.000  | 0.000  | 0.000  |    Things     |
| class_26 | 0.271  | 61.508 | 0.440  |    Things     |
| class_27 | 0.000  | 0.000  | 0.000  |    Things     |
| class_28 | 0.000  | 0.000  | 0.000  |    Things     |
| class_31 | 0.000  | 0.000  | 0.000  |    Things     |
| class_32 | 0.000  | 0.000  | 0.000  |    Things     |
| class_33 | 0.000  | 0.000  | 0.000  |    Things     |
[10/07 23:52:09] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[10/07 23:52:09] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/07 23:52:09] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/07 23:52:09] d2.evaluation.testing INFO: copypaste: 8.0310,17.6656,11.0941,0.0338,7.6885,0.0550,13.8471,24.9216,19.1226,71.0110,72.2069,98.3437,0.0000,0.0000,0.0000,3.0290,60.2296,5.0290,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,24.0151,62.6524,38.3308,0.0000,0.0000,0.0000,54.2631,79.0487,68.6452,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.2706,61.5081,0.4400,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000
[10/07 23:54:54] detectron2 INFO: Rank of current process: 0. World size: 1
[10/07 23:54:55] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/07 23:54:55] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/07 23:54:55] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/07 23:54:55] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/07 23:54:55] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a/config.yaml
[10/07 23:54:55] d2.utils.env INFO: Using a generated random seed 56488194
[10/07 23:56:19] detectron2 INFO: Rank of current process: 0. World size: 1
[10/07 23:56:20] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/07 23:56:20] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/07 23:56:20] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_a.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[10/07 23:56:20] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/07 23:56:20] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a/config.yaml
[10/07 23:56:20] d2.utils.env INFO: Using a generated random seed 21980721
[10/07 23:56:25] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
    (adapter_res5): ConvAdapter(
      (conv1): Conv2d(2048, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn2): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[10/07 23:56:25] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/07 23:56:26] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/07 23:56:26] d2.data.build INFO: Using training sampler TrainingSampler
[10/07 23:56:26] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/07 23:56:26] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/07 23:56:26] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/07 23:56:26] d2.data.build INFO: Making batched data loader with batch_size=8
[10/07 23:56:26] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/07 23:56:26] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/07 23:56:26] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/07 23:56:31] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/07 23:56:31] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.adapter_res5.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.adapter_res5.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.adapter_res5.conv1.weight[0m
[34mbackbone.adapter_res5.conv2.weight[0m
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[10/07 23:56:31] d2.engine.train_loop INFO: Starting training from iteration 0
[10/07 23:56:56] d2.utils.events INFO:  eta: 0:17:34  iter: 19  total_loss: 30.96  loss_ce: 1.129  loss_mask: 0.279  loss_dice: 1.523  loss_ce_0: 1.312  loss_mask_0: 0.3073  loss_dice_0: 1.795  loss_ce_1: 1.342  loss_mask_1: 0.3062  loss_dice_1: 1.672  loss_ce_2: 1.264  loss_mask_2: 0.2755  loss_dice_2: 1.597  loss_ce_3: 1.209  loss_mask_3: 0.2805  loss_dice_3: 1.568  loss_ce_4: 1.176  loss_mask_4: 0.2829  loss_dice_4: 1.542  loss_ce_5: 1.131  loss_mask_5: 0.2839  loss_dice_5: 1.526  loss_ce_6: 1.114  loss_mask_6: 0.2806  loss_dice_6: 1.548  loss_ce_7: 1.112  loss_mask_7: 0.2795  loss_dice_7: 1.495  loss_ce_8: 1.101  loss_mask_8: 0.2792  loss_dice_8: 1.506    time: 1.0897  last_time: 1.1433  data_time: 0.1240  last_data_time: 0.1024   lr: 0.0001  max_mem: 31765M
[10/07 23:57:18] d2.utils.events INFO:  eta: 0:17:28  iter: 39  total_loss: 24.9  loss_ce: 0.7213  loss_mask: 0.2336  loss_dice: 1.396  loss_ce_0: 0.8229  loss_mask_0: 0.2481  loss_dice_0: 1.695  loss_ce_1: 0.9265  loss_mask_1: 0.2501  loss_dice_1: 1.54  loss_ce_2: 0.8401  loss_mask_2: 0.2357  loss_dice_2: 1.506  loss_ce_3: 0.8148  loss_mask_3: 0.2351  loss_dice_3: 1.409  loss_ce_4: 0.7539  loss_mask_4: 0.239  loss_dice_4: 1.423  loss_ce_5: 0.7528  loss_mask_5: 0.2327  loss_dice_5: 1.405  loss_ce_6: 0.7396  loss_mask_6: 0.2311  loss_dice_6: 1.383  loss_ce_7: 0.7509  loss_mask_7: 0.2296  loss_dice_7: 1.378  loss_ce_8: 0.7304  loss_mask_8: 0.233  loss_dice_8: 1.354    time: 1.0949  last_time: 1.0791  data_time: 0.0788  last_data_time: 0.0566   lr: 0.0001  max_mem: 31765M
[10/07 23:57:40] d2.utils.events INFO:  eta: 0:17:02  iter: 59  total_loss: 23.83  loss_ce: 0.691  loss_mask: 0.211  loss_dice: 1.349  loss_ce_0: 0.791  loss_mask_0: 0.24  loss_dice_0: 1.64  loss_ce_1: 0.891  loss_mask_1: 0.225  loss_dice_1: 1.513  loss_ce_2: 0.8208  loss_mask_2: 0.2113  loss_dice_2: 1.453  loss_ce_3: 0.7634  loss_mask_3: 0.2121  loss_dice_3: 1.398  loss_ce_4: 0.7432  loss_mask_4: 0.2121  loss_dice_4: 1.413  loss_ce_5: 0.7282  loss_mask_5: 0.2089  loss_dice_5: 1.363  loss_ce_6: 0.7441  loss_mask_6: 0.2082  loss_dice_6: 1.347  loss_ce_7: 0.7146  loss_mask_7: 0.2104  loss_dice_7: 1.359  loss_ce_8: 0.6851  loss_mask_8: 0.2138  loss_dice_8: 1.344    time: 1.0957  last_time: 1.1451  data_time: 0.0822  last_data_time: 0.0907   lr: 0.0001  max_mem: 31765M
[10/07 23:58:02] d2.utils.events INFO:  eta: 0:16:45  iter: 79  total_loss: 23.63  loss_ce: 0.6856  loss_mask: 0.2164  loss_dice: 1.362  loss_ce_0: 0.7049  loss_mask_0: 0.257  loss_dice_0: 1.633  loss_ce_1: 0.8448  loss_mask_1: 0.2331  loss_dice_1: 1.553  loss_ce_2: 0.8012  loss_mask_2: 0.2303  loss_dice_2: 1.463  loss_ce_3: 0.7468  loss_mask_3: 0.2237  loss_dice_3: 1.419  loss_ce_4: 0.7014  loss_mask_4: 0.221  loss_dice_4: 1.389  loss_ce_5: 0.6967  loss_mask_5: 0.2198  loss_dice_5: 1.403  loss_ce_6: 0.7015  loss_mask_6: 0.2198  loss_dice_6: 1.381  loss_ce_7: 0.6713  loss_mask_7: 0.2193  loss_dice_7: 1.379  loss_ce_8: 0.6785  loss_mask_8: 0.2148  loss_dice_8: 1.367    time: 1.0971  last_time: 1.0704  data_time: 0.0805  last_data_time: 0.0700   lr: 0.0001  max_mem: 31765M
[10/07 23:58:24] d2.utils.events INFO:  eta: 0:16:25  iter: 99  total_loss: 23.91  loss_ce: 0.6982  loss_mask: 0.1992  loss_dice: 1.413  loss_ce_0: 0.7  loss_mask_0: 0.237  loss_dice_0: 1.72  loss_ce_1: 0.8572  loss_mask_1: 0.2151  loss_dice_1: 1.539  loss_ce_2: 0.7912  loss_mask_2: 0.2109  loss_dice_2: 1.485  loss_ce_3: 0.7336  loss_mask_3: 0.2048  loss_dice_3: 1.457  loss_ce_4: 0.7251  loss_mask_4: 0.2048  loss_dice_4: 1.393  loss_ce_5: 0.7007  loss_mask_5: 0.2001  loss_dice_5: 1.396  loss_ce_6: 0.679  loss_mask_6: 0.1998  loss_dice_6: 1.377  loss_ce_7: 0.6961  loss_mask_7: 0.2002  loss_dice_7: 1.389  loss_ce_8: 0.7147  loss_mask_8: 0.2001  loss_dice_8: 1.399    time: 1.1000  last_time: 1.1535  data_time: 0.0849  last_data_time: 0.1003   lr: 0.0001  max_mem: 31765M
[10/07 23:58:47] d2.utils.events INFO:  eta: 0:16:11  iter: 119  total_loss: 22.88  loss_ce: 0.632  loss_mask: 0.1982  loss_dice: 1.312  loss_ce_0: 0.7157  loss_mask_0: 0.2203  loss_dice_0: 1.622  loss_ce_1: 0.8321  loss_mask_1: 0.2089  loss_dice_1: 1.512  loss_ce_2: 0.7433  loss_mask_2: 0.1992  loss_dice_2: 1.452  loss_ce_3: 0.6663  loss_mask_3: 0.1943  loss_dice_3: 1.352  loss_ce_4: 0.6305  loss_mask_4: 0.2003  loss_dice_4: 1.37  loss_ce_5: 0.6305  loss_mask_5: 0.1978  loss_dice_5: 1.368  loss_ce_6: 0.6105  loss_mask_6: 0.1994  loss_dice_6: 1.339  loss_ce_7: 0.625  loss_mask_7: 0.2005  loss_dice_7: 1.354  loss_ce_8: 0.6411  loss_mask_8: 0.199  loss_dice_8: 1.305    time: 1.1038  last_time: 1.0831  data_time: 0.0872  last_data_time: 0.0916   lr: 0.0001  max_mem: 32382M
[10/07 23:59:09] d2.utils.events INFO:  eta: 0:15:48  iter: 139  total_loss: 23  loss_ce: 0.6571  loss_mask: 0.194  loss_dice: 1.342  loss_ce_0: 0.7075  loss_mask_0: 0.2223  loss_dice_0: 1.621  loss_ce_1: 0.7946  loss_mask_1: 0.2031  loss_dice_1: 1.512  loss_ce_2: 0.7412  loss_mask_2: 0.1979  loss_dice_2: 1.408  loss_ce_3: 0.6596  loss_mask_3: 0.1952  loss_dice_3: 1.34  loss_ce_4: 0.6747  loss_mask_4: 0.1948  loss_dice_4: 1.353  loss_ce_5: 0.6441  loss_mask_5: 0.1951  loss_dice_5: 1.38  loss_ce_6: 0.6358  loss_mask_6: 0.1968  loss_dice_6: 1.339  loss_ce_7: 0.65  loss_mask_7: 0.1953  loss_dice_7: 1.313  loss_ce_8: 0.641  loss_mask_8: 0.1956  loss_dice_8: 1.345    time: 1.1041  last_time: 1.0314  data_time: 0.0826  last_data_time: 0.0589   lr: 0.0001  max_mem: 32382M
[10/07 23:59:31] d2.utils.events INFO:  eta: 0:15:27  iter: 159  total_loss: 22.41  loss_ce: 0.6142  loss_mask: 0.1857  loss_dice: 1.247  loss_ce_0: 0.6674  loss_mask_0: 0.212  loss_dice_0: 1.537  loss_ce_1: 0.8121  loss_mask_1: 0.2055  loss_dice_1: 1.447  loss_ce_2: 0.7146  loss_mask_2: 0.1938  loss_dice_2: 1.375  loss_ce_3: 0.6803  loss_mask_3: 0.1903  loss_dice_3: 1.286  loss_ce_4: 0.6328  loss_mask_4: 0.1894  loss_dice_4: 1.282  loss_ce_5: 0.6274  loss_mask_5: 0.1894  loss_dice_5: 1.309  loss_ce_6: 0.6199  loss_mask_6: 0.1896  loss_dice_6: 1.297  loss_ce_7: 0.617  loss_mask_7: 0.189  loss_dice_7: 1.295  loss_ce_8: 0.5931  loss_mask_8: 0.1888  loss_dice_8: 1.257    time: 1.1056  last_time: 1.1111  data_time: 0.0855  last_data_time: 0.0772   lr: 0.0001  max_mem: 32382M
[10/07 23:59:53] d2.utils.events INFO:  eta: 0:15:04  iter: 179  total_loss: 22.04  loss_ce: 0.5785  loss_mask: 0.1934  loss_dice: 1.312  loss_ce_0: 0.6393  loss_mask_0: 0.2219  loss_dice_0: 1.534  loss_ce_1: 0.7471  loss_mask_1: 0.2037  loss_dice_1: 1.439  loss_ce_2: 0.6967  loss_mask_2: 0.2012  loss_dice_2: 1.371  loss_ce_3: 0.6166  loss_mask_3: 0.2003  loss_dice_3: 1.339  loss_ce_4: 0.6145  loss_mask_4: 0.1974  loss_dice_4: 1.322  loss_ce_5: 0.6088  loss_mask_5: 0.196  loss_dice_5: 1.322  loss_ce_6: 0.5897  loss_mask_6: 0.2007  loss_dice_6: 1.297  loss_ce_7: 0.5755  loss_mask_7: 0.1967  loss_dice_7: 1.308  loss_ce_8: 0.5873  loss_mask_8: 0.1986  loss_dice_8: 1.311    time: 1.1040  last_time: 1.1103  data_time: 0.0837  last_data_time: 0.0810   lr: 0.0001  max_mem: 32382M
[10/08 00:00:15] d2.utils.events INFO:  eta: 0:14:40  iter: 199  total_loss: 20.94  loss_ce: 0.5546  loss_mask: 0.2044  loss_dice: 1.272  loss_ce_0: 0.6698  loss_mask_0: 0.2402  loss_dice_0: 1.536  loss_ce_1: 0.7658  loss_mask_1: 0.2219  loss_dice_1: 1.398  loss_ce_2: 0.6645  loss_mask_2: 0.2121  loss_dice_2: 1.315  loss_ce_3: 0.6273  loss_mask_3: 0.2077  loss_dice_3: 1.27  loss_ce_4: 0.5752  loss_mask_4: 0.207  loss_dice_4: 1.272  loss_ce_5: 0.547  loss_mask_5: 0.2094  loss_dice_5: 1.28  loss_ce_6: 0.573  loss_mask_6: 0.2125  loss_dice_6: 1.249  loss_ce_7: 0.5437  loss_mask_7: 0.208  loss_dice_7: 1.266  loss_ce_8: 0.579  loss_mask_8: 0.21  loss_dice_8: 1.253    time: 1.1037  last_time: 1.1113  data_time: 0.0857  last_data_time: 0.1048   lr: 0.0001  max_mem: 32439M
[10/08 00:00:38] d2.utils.events INFO:  eta: 0:14:18  iter: 219  total_loss: 21.51  loss_ce: 0.5816  loss_mask: 0.1966  loss_dice: 1.281  loss_ce_0: 0.6712  loss_mask_0: 0.2239  loss_dice_0: 1.501  loss_ce_1: 0.7814  loss_mask_1: 0.2077  loss_dice_1: 1.409  loss_ce_2: 0.6788  loss_mask_2: 0.2009  loss_dice_2: 1.363  loss_ce_3: 0.6271  loss_mask_3: 0.2011  loss_dice_3: 1.288  loss_ce_4: 0.6206  loss_mask_4: 0.1954  loss_dice_4: 1.287  loss_ce_5: 0.6037  loss_mask_5: 0.1943  loss_dice_5: 1.292  loss_ce_6: 0.5868  loss_mask_6: 0.1965  loss_dice_6: 1.258  loss_ce_7: 0.5822  loss_mask_7: 0.1975  loss_dice_7: 1.276  loss_ce_8: 0.5767  loss_mask_8: 0.1962  loss_dice_8: 1.272    time: 1.1041  last_time: 1.1619  data_time: 0.0851  last_data_time: 0.1260   lr: 0.0001  max_mem: 32505M
[10/08 00:01:00] d2.utils.events INFO:  eta: 0:13:54  iter: 239  total_loss: 21.25  loss_ce: 0.5587  loss_mask: 0.2004  loss_dice: 1.299  loss_ce_0: 0.6306  loss_mask_0: 0.2276  loss_dice_0: 1.517  loss_ce_1: 0.7198  loss_mask_1: 0.2114  loss_dice_1: 1.408  loss_ce_2: 0.6534  loss_mask_2: 0.2006  loss_dice_2: 1.334  loss_ce_3: 0.599  loss_mask_3: 0.1992  loss_dice_3: 1.26  loss_ce_4: 0.5892  loss_mask_4: 0.202  loss_dice_4: 1.321  loss_ce_5: 0.5661  loss_mask_5: 0.2006  loss_dice_5: 1.305  loss_ce_6: 0.5283  loss_mask_6: 0.2007  loss_dice_6: 1.257  loss_ce_7: 0.5623  loss_mask_7: 0.1981  loss_dice_7: 1.288  loss_ce_8: 0.5548  loss_mask_8: 0.1994  loss_dice_8: 1.296    time: 1.1036  last_time: 1.1000  data_time: 0.0852  last_data_time: 0.0805   lr: 0.0001  max_mem: 32547M
[10/08 00:01:22] d2.utils.events INFO:  eta: 0:13:34  iter: 259  total_loss: 21.91  loss_ce: 0.6013  loss_mask: 0.1861  loss_dice: 1.297  loss_ce_0: 0.6769  loss_mask_0: 0.2273  loss_dice_0: 1.588  loss_ce_1: 0.7758  loss_mask_1: 0.2064  loss_dice_1: 1.438  loss_ce_2: 0.6972  loss_mask_2: 0.1938  loss_dice_2: 1.397  loss_ce_3: 0.6216  loss_mask_3: 0.186  loss_dice_3: 1.328  loss_ce_4: 0.6203  loss_mask_4: 0.1866  loss_dice_4: 1.338  loss_ce_5: 0.6108  loss_mask_5: 0.1842  loss_dice_5: 1.332  loss_ce_6: 0.6297  loss_mask_6: 0.1874  loss_dice_6: 1.344  loss_ce_7: 0.6037  loss_mask_7: 0.189  loss_dice_7: 1.312  loss_ce_8: 0.6121  loss_mask_8: 0.1901  loss_dice_8: 1.299    time: 1.1045  last_time: 1.2181  data_time: 0.0793  last_data_time: 0.0726   lr: 0.0001  max_mem: 32547M
[10/08 00:01:45] d2.utils.events INFO:  eta: 0:13:14  iter: 279  total_loss: 21.34  loss_ce: 0.5282  loss_mask: 0.1855  loss_dice: 1.312  loss_ce_0: 0.6393  loss_mask_0: 0.2128  loss_dice_0: 1.564  loss_ce_1: 0.7181  loss_mask_1: 0.1966  loss_dice_1: 1.519  loss_ce_2: 0.6199  loss_mask_2: 0.1904  loss_dice_2: 1.426  loss_ce_3: 0.5866  loss_mask_3: 0.1893  loss_dice_3: 1.337  loss_ce_4: 0.5711  loss_mask_4: 0.1858  loss_dice_4: 1.349  loss_ce_5: 0.5477  loss_mask_5: 0.1842  loss_dice_5: 1.347  loss_ce_6: 0.5598  loss_mask_6: 0.1835  loss_dice_6: 1.335  loss_ce_7: 0.5486  loss_mask_7: 0.1867  loss_dice_7: 1.377  loss_ce_8: 0.569  loss_mask_8: 0.1821  loss_dice_8: 1.343    time: 1.1074  last_time: 1.0997  data_time: 0.0906  last_data_time: 0.0723   lr: 0.0001  max_mem: 32547M
[10/08 00:02:07] d2.utils.events INFO:  eta: 0:12:52  iter: 299  total_loss: 20.1  loss_ce: 0.4943  loss_mask: 0.2006  loss_dice: 1.231  loss_ce_0: 0.595  loss_mask_0: 0.2313  loss_dice_0: 1.492  loss_ce_1: 0.6964  loss_mask_1: 0.2119  loss_dice_1: 1.428  loss_ce_2: 0.6082  loss_mask_2: 0.2013  loss_dice_2: 1.323  loss_ce_3: 0.5378  loss_mask_3: 0.1996  loss_dice_3: 1.256  loss_ce_4: 0.5179  loss_mask_4: 0.2019  loss_dice_4: 1.258  loss_ce_5: 0.5042  loss_mask_5: 0.1952  loss_dice_5: 1.263  loss_ce_6: 0.5281  loss_mask_6: 0.199  loss_dice_6: 1.248  loss_ce_7: 0.508  loss_mask_7: 0.2027  loss_dice_7: 1.25  loss_ce_8: 0.4917  loss_mask_8: 0.2016  loss_dice_8: 1.22    time: 1.1077  last_time: 1.0761  data_time: 0.0824  last_data_time: 0.0697   lr: 0.0001  max_mem: 32547M
[10/08 00:02:30] d2.utils.events INFO:  eta: 0:12:31  iter: 319  total_loss: 21.69  loss_ce: 0.5695  loss_mask: 0.1824  loss_dice: 1.326  loss_ce_0: 0.5979  loss_mask_0: 0.2167  loss_dice_0: 1.609  loss_ce_1: 0.7142  loss_mask_1: 0.1931  loss_dice_1: 1.488  loss_ce_2: 0.6897  loss_mask_2: 0.1936  loss_dice_2: 1.42  loss_ce_3: 0.62  loss_mask_3: 0.1899  loss_dice_3: 1.364  loss_ce_4: 0.5724  loss_mask_4: 0.1873  loss_dice_4: 1.394  loss_ce_5: 0.5481  loss_mask_5: 0.1843  loss_dice_5: 1.372  loss_ce_6: 0.5787  loss_mask_6: 0.1871  loss_dice_6: 1.379  loss_ce_7: 0.5848  loss_mask_7: 0.1833  loss_dice_7: 1.361  loss_ce_8: 0.5333  loss_mask_8: 0.1844  loss_dice_8: 1.335    time: 1.1077  last_time: 1.1565  data_time: 0.0862  last_data_time: 0.0965   lr: 0.0001  max_mem: 32547M
[10/08 00:02:52] d2.utils.events INFO:  eta: 0:12:08  iter: 339  total_loss: 20.75  loss_ce: 0.5554  loss_mask: 0.195  loss_dice: 1.206  loss_ce_0: 0.6026  loss_mask_0: 0.2238  loss_dice_0: 1.478  loss_ce_1: 0.711  loss_mask_1: 0.2046  loss_dice_1: 1.422  loss_ce_2: 0.6421  loss_mask_2: 0.1962  loss_dice_2: 1.319  loss_ce_3: 0.6065  loss_mask_3: 0.198  loss_dice_3: 1.272  loss_ce_4: 0.5547  loss_mask_4: 0.1967  loss_dice_4: 1.274  loss_ce_5: 0.5404  loss_mask_5: 0.195  loss_dice_5: 1.251  loss_ce_6: 0.5412  loss_mask_6: 0.195  loss_dice_6: 1.218  loss_ce_7: 0.547  loss_mask_7: 0.1964  loss_dice_7: 1.235  loss_ce_8: 0.5354  loss_mask_8: 0.1962  loss_dice_8: 1.222    time: 1.1072  last_time: 1.1962  data_time: 0.0825  last_data_time: 0.0985   lr: 0.0001  max_mem: 32547M
[10/08 00:03:14] d2.utils.events INFO:  eta: 0:11:47  iter: 359  total_loss: 21.59  loss_ce: 0.5603  loss_mask: 0.181  loss_dice: 1.255  loss_ce_0: 0.6141  loss_mask_0: 0.2169  loss_dice_0: 1.509  loss_ce_1: 0.7274  loss_mask_1: 0.1998  loss_dice_1: 1.418  loss_ce_2: 0.6244  loss_mask_2: 0.1937  loss_dice_2: 1.371  loss_ce_3: 0.6046  loss_mask_3: 0.1915  loss_dice_3: 1.289  loss_ce_4: 0.6185  loss_mask_4: 0.1869  loss_dice_4: 1.296  loss_ce_5: 0.5892  loss_mask_5: 0.1811  loss_dice_5: 1.297  loss_ce_6: 0.5834  loss_mask_6: 0.1803  loss_dice_6: 1.273  loss_ce_7: 0.568  loss_mask_7: 0.1812  loss_dice_7: 1.233  loss_ce_8: 0.5832  loss_mask_8: 0.1824  loss_dice_8: 1.267    time: 1.1081  last_time: 1.1252  data_time: 0.0926  last_data_time: 0.0870   lr: 0.0001  max_mem: 32547M
[10/08 00:03:37] d2.utils.events INFO:  eta: 0:11:25  iter: 379  total_loss: 22.16  loss_ce: 0.5698  loss_mask: 0.185  loss_dice: 1.34  loss_ce_0: 0.6512  loss_mask_0: 0.2094  loss_dice_0: 1.554  loss_ce_1: 0.7038  loss_mask_1: 0.1964  loss_dice_1: 1.453  loss_ce_2: 0.6672  loss_mask_2: 0.1969  loss_dice_2: 1.39  loss_ce_3: 0.5882  loss_mask_3: 0.1922  loss_dice_3: 1.374  loss_ce_4: 0.5522  loss_mask_4: 0.1875  loss_dice_4: 1.342  loss_ce_5: 0.5514  loss_mask_5: 0.1868  loss_dice_5: 1.366  loss_ce_6: 0.5616  loss_mask_6: 0.189  loss_dice_6: 1.323  loss_ce_7: 0.5657  loss_mask_7: 0.1866  loss_dice_7: 1.341  loss_ce_8: 0.5701  loss_mask_8: 0.184  loss_dice_8: 1.332    time: 1.1093  last_time: 1.1892  data_time: 0.0922  last_data_time: 0.1176   lr: 0.0001  max_mem: 32547M
[10/08 00:03:59] d2.utils.events INFO:  eta: 0:11:04  iter: 399  total_loss: 20.66  loss_ce: 0.5321  loss_mask: 0.1938  loss_dice: 1.254  loss_ce_0: 0.6114  loss_mask_0: 0.2432  loss_dice_0: 1.495  loss_ce_1: 0.6668  loss_mask_1: 0.2027  loss_dice_1: 1.367  loss_ce_2: 0.6193  loss_mask_2: 0.1949  loss_dice_2: 1.336  loss_ce_3: 0.5749  loss_mask_3: 0.1958  loss_dice_3: 1.282  loss_ce_4: 0.5582  loss_mask_4: 0.1949  loss_dice_4: 1.288  loss_ce_5: 0.5299  loss_mask_5: 0.1938  loss_dice_5: 1.264  loss_ce_6: 0.5429  loss_mask_6: 0.193  loss_dice_6: 1.231  loss_ce_7: 0.5125  loss_mask_7: 0.1924  loss_dice_7: 1.243  loss_ce_8: 0.5271  loss_mask_8: 0.1885  loss_dice_8: 1.216    time: 1.1104  last_time: 1.0598  data_time: 0.0927  last_data_time: 0.0661   lr: 0.0001  max_mem: 32547M
[10/08 00:04:22] d2.utils.events INFO:  eta: 0:10:42  iter: 419  total_loss: 21.21  loss_ce: 0.5281  loss_mask: 0.1657  loss_dice: 1.32  loss_ce_0: 0.588  loss_mask_0: 0.1923  loss_dice_0: 1.58  loss_ce_1: 0.6967  loss_mask_1: 0.1803  loss_dice_1: 1.481  loss_ce_2: 0.6415  loss_mask_2: 0.1748  loss_dice_2: 1.425  loss_ce_3: 0.6136  loss_mask_3: 0.1714  loss_dice_3: 1.354  loss_ce_4: 0.5861  loss_mask_4: 0.1721  loss_dice_4: 1.361  loss_ce_5: 0.5512  loss_mask_5: 0.1691  loss_dice_5: 1.343  loss_ce_6: 0.5577  loss_mask_6: 0.1697  loss_dice_6: 1.326  loss_ce_7: 0.5436  loss_mask_7: 0.1701  loss_dice_7: 1.299  loss_ce_8: 0.549  loss_mask_8: 0.1684  loss_dice_8: 1.323    time: 1.1104  last_time: 1.0904  data_time: 0.0877  last_data_time: 0.0907   lr: 0.0001  max_mem: 32547M
[10/08 00:04:44] d2.utils.events INFO:  eta: 0:10:20  iter: 439  total_loss: 21.73  loss_ce: 0.5387  loss_mask: 0.1806  loss_dice: 1.321  loss_ce_0: 0.6413  loss_mask_0: 0.2107  loss_dice_0: 1.617  loss_ce_1: 0.6604  loss_mask_1: 0.1948  loss_dice_1: 1.505  loss_ce_2: 0.6662  loss_mask_2: 0.1902  loss_dice_2: 1.419  loss_ce_3: 0.6128  loss_mask_3: 0.1885  loss_dice_3: 1.372  loss_ce_4: 0.5874  loss_mask_4: 0.1883  loss_dice_4: 1.315  loss_ce_5: 0.5798  loss_mask_5: 0.1842  loss_dice_5: 1.315  loss_ce_6: 0.5613  loss_mask_6: 0.1878  loss_dice_6: 1.312  loss_ce_7: 0.5893  loss_mask_7: 0.1815  loss_dice_7: 1.319  loss_ce_8: 0.5697  loss_mask_8: 0.1822  loss_dice_8: 1.349    time: 1.1104  last_time: 1.0698  data_time: 0.0876  last_data_time: 0.0835   lr: 0.0001  max_mem: 32547M
[10/08 00:05:06] d2.utils.events INFO:  eta: 0:09:58  iter: 459  total_loss: 20.99  loss_ce: 0.4856  loss_mask: 0.1849  loss_dice: 1.328  loss_ce_0: 0.5769  loss_mask_0: 0.2158  loss_dice_0: 1.572  loss_ce_1: 0.7175  loss_mask_1: 0.1836  loss_dice_1: 1.481  loss_ce_2: 0.6024  loss_mask_2: 0.183  loss_dice_2: 1.405  loss_ce_3: 0.5386  loss_mask_3: 0.1825  loss_dice_3: 1.33  loss_ce_4: 0.5217  loss_mask_4: 0.183  loss_dice_4: 1.338  loss_ce_5: 0.5225  loss_mask_5: 0.1827  loss_dice_5: 1.34  loss_ce_6: 0.5114  loss_mask_6: 0.1824  loss_dice_6: 1.311  loss_ce_7: 0.4887  loss_mask_7: 0.1837  loss_dice_7: 1.308  loss_ce_8: 0.4786  loss_mask_8: 0.185  loss_dice_8: 1.296    time: 1.1106  last_time: 1.1310  data_time: 0.0810  last_data_time: 0.0872   lr: 0.0001  max_mem: 32547M
[10/08 00:05:28] d2.utils.events INFO:  eta: 0:09:35  iter: 479  total_loss: 19.68  loss_ce: 0.4895  loss_mask: 0.1728  loss_dice: 1.208  loss_ce_0: 0.5709  loss_mask_0: 0.2035  loss_dice_0: 1.424  loss_ce_1: 0.6491  loss_mask_1: 0.1932  loss_dice_1: 1.346  loss_ce_2: 0.5953  loss_mask_2: 0.183  loss_dice_2: 1.284  loss_ce_3: 0.5584  loss_mask_3: 0.1829  loss_dice_3: 1.227  loss_ce_4: 0.5244  loss_mask_4: 0.1761  loss_dice_4: 1.226  loss_ce_5: 0.5046  loss_mask_5: 0.1789  loss_dice_5: 1.22  loss_ce_6: 0.4927  loss_mask_6: 0.1755  loss_dice_6: 1.248  loss_ce_7: 0.48  loss_mask_7: 0.1773  loss_dice_7: 1.197  loss_ce_8: 0.4855  loss_mask_8: 0.1751  loss_dice_8: 1.224    time: 1.1100  last_time: 1.0859  data_time: 0.0806  last_data_time: 0.0760   lr: 0.0001  max_mem: 32547M
[10/08 00:05:50] d2.utils.events INFO:  eta: 0:09:12  iter: 499  total_loss: 20.4  loss_ce: 0.5511  loss_mask: 0.1933  loss_dice: 1.241  loss_ce_0: 0.6271  loss_mask_0: 0.228  loss_dice_0: 1.464  loss_ce_1: 0.6799  loss_mask_1: 0.2106  loss_dice_1: 1.379  loss_ce_2: 0.608  loss_mask_2: 0.2031  loss_dice_2: 1.307  loss_ce_3: 0.5566  loss_mask_3: 0.1986  loss_dice_3: 1.241  loss_ce_4: 0.55  loss_mask_4: 0.1952  loss_dice_4: 1.238  loss_ce_5: 0.5342  loss_mask_5: 0.1942  loss_dice_5: 1.227  loss_ce_6: 0.5114  loss_mask_6: 0.1955  loss_dice_6: 1.211  loss_ce_7: 0.5287  loss_mask_7: 0.1958  loss_dice_7: 1.225  loss_ce_8: 0.5153  loss_mask_8: 0.193  loss_dice_8: 1.214    time: 1.1094  last_time: 1.1201  data_time: 0.0809  last_data_time: 0.0914   lr: 0.0001  max_mem: 32547M
[10/08 00:06:13] d2.utils.events INFO:  eta: 0:08:51  iter: 519  total_loss: 20.61  loss_ce: 0.5055  loss_mask: 0.1834  loss_dice: 1.268  loss_ce_0: 0.6189  loss_mask_0: 0.2216  loss_dice_0: 1.485  loss_ce_1: 0.6741  loss_mask_1: 0.1932  loss_dice_1: 1.4  loss_ce_2: 0.661  loss_mask_2: 0.1884  loss_dice_2: 1.397  loss_ce_3: 0.5664  loss_mask_3: 0.1843  loss_dice_3: 1.324  loss_ce_4: 0.5323  loss_mask_4: 0.1869  loss_dice_4: 1.336  loss_ce_5: 0.5308  loss_mask_5: 0.1823  loss_dice_5: 1.299  loss_ce_6: 0.5214  loss_mask_6: 0.1821  loss_dice_6: 1.306  loss_ce_7: 0.5022  loss_mask_7: 0.1822  loss_dice_7: 1.327  loss_ce_8: 0.5315  loss_mask_8: 0.1834  loss_dice_8: 1.312    time: 1.1098  last_time: 1.0997  data_time: 0.0860  last_data_time: 0.1048   lr: 0.0001  max_mem: 32547M
[10/08 00:06:35] d2.utils.events INFO:  eta: 0:08:29  iter: 539  total_loss: 20.69  loss_ce: 0.4832  loss_mask: 0.1801  loss_dice: 1.304  loss_ce_0: 0.5807  loss_mask_0: 0.1961  loss_dice_0: 1.515  loss_ce_1: 0.6695  loss_mask_1: 0.1899  loss_dice_1: 1.38  loss_ce_2: 0.6379  loss_mask_2: 0.1836  loss_dice_2: 1.347  loss_ce_3: 0.5601  loss_mask_3: 0.1776  loss_dice_3: 1.303  loss_ce_4: 0.529  loss_mask_4: 0.1786  loss_dice_4: 1.276  loss_ce_5: 0.5361  loss_mask_5: 0.1771  loss_dice_5: 1.29  loss_ce_6: 0.4844  loss_mask_6: 0.1781  loss_dice_6: 1.264  loss_ce_7: 0.5014  loss_mask_7: 0.1804  loss_dice_7: 1.314  loss_ce_8: 0.4906  loss_mask_8: 0.178  loss_dice_8: 1.282    time: 1.1102  last_time: 1.0765  data_time: 0.0805  last_data_time: 0.0800   lr: 0.0001  max_mem: 32547M
[10/08 00:06:57] d2.utils.events INFO:  eta: 0:08:07  iter: 559  total_loss: 21.13  loss_ce: 0.5135  loss_mask: 0.1721  loss_dice: 1.254  loss_ce_0: 0.6037  loss_mask_0: 0.2021  loss_dice_0: 1.56  loss_ce_1: 0.7018  loss_mask_1: 0.188  loss_dice_1: 1.45  loss_ce_2: 0.6278  loss_mask_2: 0.1798  loss_dice_2: 1.376  loss_ce_3: 0.5739  loss_mask_3: 0.1816  loss_dice_3: 1.316  loss_ce_4: 0.5592  loss_mask_4: 0.1794  loss_dice_4: 1.302  loss_ce_5: 0.5727  loss_mask_5: 0.1759  loss_dice_5: 1.328  loss_ce_6: 0.5168  loss_mask_6: 0.174  loss_dice_6: 1.262  loss_ce_7: 0.5237  loss_mask_7: 0.1718  loss_dice_7: 1.299  loss_ce_8: 0.5354  loss_mask_8: 0.1723  loss_dice_8: 1.301    time: 1.1101  last_time: 1.1233  data_time: 0.0845  last_data_time: 0.0980   lr: 0.0001  max_mem: 32547M
[10/08 00:07:20] d2.utils.events INFO:  eta: 0:07:45  iter: 579  total_loss: 21.79  loss_ce: 0.523  loss_mask: 0.1773  loss_dice: 1.289  loss_ce_0: 0.6382  loss_mask_0: 0.2072  loss_dice_0: 1.562  loss_ce_1: 0.681  loss_mask_1: 0.1926  loss_dice_1: 1.436  loss_ce_2: 0.6532  loss_mask_2: 0.1884  loss_dice_2: 1.381  loss_ce_3: 0.5793  loss_mask_3: 0.1869  loss_dice_3: 1.306  loss_ce_4: 0.5585  loss_mask_4: 0.1855  loss_dice_4: 1.34  loss_ce_5: 0.5808  loss_mask_5: 0.1794  loss_dice_5: 1.313  loss_ce_6: 0.5407  loss_mask_6: 0.1794  loss_dice_6: 1.314  loss_ce_7: 0.5781  loss_mask_7: 0.179  loss_dice_7: 1.288  loss_ce_8: 0.5547  loss_mask_8: 0.1777  loss_dice_8: 1.284    time: 1.1107  last_time: 1.0782  data_time: 0.0904  last_data_time: 0.0916   lr: 0.0001  max_mem: 32547M
[10/08 00:07:42] d2.utils.events INFO:  eta: 0:07:23  iter: 599  total_loss: 19.9  loss_ce: 0.4706  loss_mask: 0.1684  loss_dice: 1.213  loss_ce_0: 0.6024  loss_mask_0: 0.2053  loss_dice_0: 1.541  loss_ce_1: 0.6561  loss_mask_1: 0.1798  loss_dice_1: 1.395  loss_ce_2: 0.5692  loss_mask_2: 0.1757  loss_dice_2: 1.338  loss_ce_3: 0.5435  loss_mask_3: 0.1719  loss_dice_3: 1.267  loss_ce_4: 0.5089  loss_mask_4: 0.172  loss_dice_4: 1.293  loss_ce_5: 0.5007  loss_mask_5: 0.1719  loss_dice_5: 1.264  loss_ce_6: 0.4745  loss_mask_6: 0.1722  loss_dice_6: 1.229  loss_ce_7: 0.489  loss_mask_7: 0.1686  loss_dice_7: 1.24  loss_ce_8: 0.4812  loss_mask_8: 0.1688  loss_dice_8: 1.229    time: 1.1107  last_time: 1.1869  data_time: 0.0851  last_data_time: 0.0936   lr: 0.0001  max_mem: 32547M
[10/08 00:08:05] d2.utils.events INFO:  eta: 0:07:01  iter: 619  total_loss: 21.57  loss_ce: 0.5342  loss_mask: 0.1834  loss_dice: 1.297  loss_ce_0: 0.6706  loss_mask_0: 0.2117  loss_dice_0: 1.494  loss_ce_1: 0.6705  loss_mask_1: 0.2023  loss_dice_1: 1.404  loss_ce_2: 0.6472  loss_mask_2: 0.1897  loss_dice_2: 1.378  loss_ce_3: 0.5655  loss_mask_3: 0.1841  loss_dice_3: 1.33  loss_ce_4: 0.5541  loss_mask_4: 0.1878  loss_dice_4: 1.333  loss_ce_5: 0.5558  loss_mask_5: 0.181  loss_dice_5: 1.338  loss_ce_6: 0.5547  loss_mask_6: 0.1846  loss_dice_6: 1.297  loss_ce_7: 0.6019  loss_mask_7: 0.1811  loss_dice_7: 1.3  loss_ce_8: 0.5423  loss_mask_8: 0.1803  loss_dice_8: 1.303    time: 1.1112  last_time: 1.2433  data_time: 0.0911  last_data_time: 0.0932   lr: 0.0001  max_mem: 32547M
[10/08 00:08:27] d2.utils.events INFO:  eta: 0:06:39  iter: 639  total_loss: 20.75  loss_ce: 0.5374  loss_mask: 0.1735  loss_dice: 1.22  loss_ce_0: 0.6071  loss_mask_0: 0.1911  loss_dice_0: 1.507  loss_ce_1: 0.7247  loss_mask_1: 0.1795  loss_dice_1: 1.41  loss_ce_2: 0.6584  loss_mask_2: 0.1727  loss_dice_2: 1.316  loss_ce_3: 0.6029  loss_mask_3: 0.1707  loss_dice_3: 1.25  loss_ce_4: 0.552  loss_mask_4: 0.1748  loss_dice_4: 1.259  loss_ce_5: 0.5539  loss_mask_5: 0.1737  loss_dice_5: 1.26  loss_ce_6: 0.5711  loss_mask_6: 0.1751  loss_dice_6: 1.247  loss_ce_7: 0.5639  loss_mask_7: 0.1733  loss_dice_7: 1.256  loss_ce_8: 0.5516  loss_mask_8: 0.173  loss_dice_8: 1.254    time: 1.1116  last_time: 1.1257  data_time: 0.0911  last_data_time: 0.0903   lr: 0.0001  max_mem: 32547M
[10/08 00:08:50] d2.utils.events INFO:  eta: 0:06:17  iter: 659  total_loss: 20.65  loss_ce: 0.4821  loss_mask: 0.1922  loss_dice: 1.243  loss_ce_0: 0.5912  loss_mask_0: 0.216  loss_dice_0: 1.51  loss_ce_1: 0.656  loss_mask_1: 0.2068  loss_dice_1: 1.416  loss_ce_2: 0.5959  loss_mask_2: 0.1986  loss_dice_2: 1.334  loss_ce_3: 0.5585  loss_mask_3: 0.1986  loss_dice_3: 1.338  loss_ce_4: 0.5286  loss_mask_4: 0.1966  loss_dice_4: 1.248  loss_ce_5: 0.5223  loss_mask_5: 0.196  loss_dice_5: 1.266  loss_ce_6: 0.4894  loss_mask_6: 0.1941  loss_dice_6: 1.252  loss_ce_7: 0.48  loss_mask_7: 0.192  loss_dice_7: 1.29  loss_ce_8: 0.528  loss_mask_8: 0.1921  loss_dice_8: 1.285    time: 1.1116  last_time: 1.1550  data_time: 0.0812  last_data_time: 0.1015   lr: 0.0001  max_mem: 32547M
[10/08 00:09:12] d2.utils.events INFO:  eta: 0:05:55  iter: 679  total_loss: 20.93  loss_ce: 0.4959  loss_mask: 0.1739  loss_dice: 1.25  loss_ce_0: 0.5636  loss_mask_0: 0.2001  loss_dice_0: 1.481  loss_ce_1: 0.6827  loss_mask_1: 0.1796  loss_dice_1: 1.392  loss_ce_2: 0.6363  loss_mask_2: 0.1749  loss_dice_2: 1.328  loss_ce_3: 0.5493  loss_mask_3: 0.1743  loss_dice_3: 1.309  loss_ce_4: 0.5535  loss_mask_4: 0.1774  loss_dice_4: 1.275  loss_ce_5: 0.5626  loss_mask_5: 0.173  loss_dice_5: 1.269  loss_ce_6: 0.481  loss_mask_6: 0.1714  loss_dice_6: 1.301  loss_ce_7: 0.4813  loss_mask_7: 0.1749  loss_dice_7: 1.256  loss_ce_8: 0.501  loss_mask_8: 0.1734  loss_dice_8: 1.256    time: 1.1119  last_time: 1.1500  data_time: 0.0851  last_data_time: 0.0926   lr: 0.0001  max_mem: 32547M
[10/08 00:09:35] d2.utils.events INFO:  eta: 0:05:33  iter: 699  total_loss: 19.69  loss_ce: 0.4584  loss_mask: 0.1753  loss_dice: 1.22  loss_ce_0: 0.5729  loss_mask_0: 0.2056  loss_dice_0: 1.457  loss_ce_1: 0.6058  loss_mask_1: 0.193  loss_dice_1: 1.339  loss_ce_2: 0.553  loss_mask_2: 0.1831  loss_dice_2: 1.298  loss_ce_3: 0.5011  loss_mask_3: 0.1835  loss_dice_3: 1.277  loss_ce_4: 0.4726  loss_mask_4: 0.1806  loss_dice_4: 1.237  loss_ce_5: 0.4749  loss_mask_5: 0.1837  loss_dice_5: 1.246  loss_ce_6: 0.4753  loss_mask_6: 0.1751  loss_dice_6: 1.241  loss_ce_7: 0.4518  loss_mask_7: 0.1764  loss_dice_7: 1.187  loss_ce_8: 0.4869  loss_mask_8: 0.1756  loss_dice_8: 1.236    time: 1.1127  last_time: 1.1937  data_time: 0.0895  last_data_time: 0.0857   lr: 0.0001  max_mem: 32547M
[10/08 00:09:58] d2.utils.events INFO:  eta: 0:05:11  iter: 719  total_loss: 20.85  loss_ce: 0.5248  loss_mask: 0.171  loss_dice: 1.273  loss_ce_0: 0.5838  loss_mask_0: 0.1932  loss_dice_0: 1.524  loss_ce_1: 0.68  loss_mask_1: 0.1813  loss_dice_1: 1.378  loss_ce_2: 0.6769  loss_mask_2: 0.1766  loss_dice_2: 1.334  loss_ce_3: 0.6059  loss_mask_3: 0.1733  loss_dice_3: 1.259  loss_ce_4: 0.5745  loss_mask_4: 0.1731  loss_dice_4: 1.285  loss_ce_5: 0.5565  loss_mask_5: 0.1707  loss_dice_5: 1.263  loss_ce_6: 0.5407  loss_mask_6: 0.1706  loss_dice_6: 1.256  loss_ce_7: 0.5406  loss_mask_7: 0.1719  loss_dice_7: 1.237  loss_ce_8: 0.539  loss_mask_8: 0.1711  loss_dice_8: 1.249    time: 1.1131  last_time: 1.0965  data_time: 0.0850  last_data_time: 0.0974   lr: 0.0001  max_mem: 32547M
[10/08 00:10:21] d2.utils.events INFO:  eta: 0:04:48  iter: 739  total_loss: 20.63  loss_ce: 0.4891  loss_mask: 0.179  loss_dice: 1.288  loss_ce_0: 0.599  loss_mask_0: 0.2044  loss_dice_0: 1.494  loss_ce_1: 0.6642  loss_mask_1: 0.1856  loss_dice_1: 1.427  loss_ce_2: 0.5872  loss_mask_2: 0.1792  loss_dice_2: 1.334  loss_ce_3: 0.5755  loss_mask_3: 0.1822  loss_dice_3: 1.282  loss_ce_4: 0.5283  loss_mask_4: 0.1812  loss_dice_4: 1.295  loss_ce_5: 0.5231  loss_mask_5: 0.1772  loss_dice_5: 1.267  loss_ce_6: 0.5012  loss_mask_6: 0.178  loss_dice_6: 1.275  loss_ce_7: 0.516  loss_mask_7: 0.1782  loss_dice_7: 1.281  loss_ce_8: 0.4963  loss_mask_8: 0.1788  loss_dice_8: 1.291    time: 1.1142  last_time: 1.0723  data_time: 0.0879  last_data_time: 0.0694   lr: 0.0001  max_mem: 32547M
[10/08 00:10:44] d2.utils.events INFO:  eta: 0:04:26  iter: 759  total_loss: 20.13  loss_ce: 0.4709  loss_mask: 0.1682  loss_dice: 1.21  loss_ce_0: 0.6057  loss_mask_0: 0.2004  loss_dice_0: 1.45  loss_ce_1: 0.6312  loss_mask_1: 0.182  loss_dice_1: 1.284  loss_ce_2: 0.5938  loss_mask_2: 0.1743  loss_dice_2: 1.262  loss_ce_3: 0.5594  loss_mask_3: 0.1761  loss_dice_3: 1.226  loss_ce_4: 0.5069  loss_mask_4: 0.1727  loss_dice_4: 1.189  loss_ce_5: 0.5247  loss_mask_5: 0.1716  loss_dice_5: 1.198  loss_ce_6: 0.5067  loss_mask_6: 0.1693  loss_dice_6: 1.202  loss_ce_7: 0.5224  loss_mask_7: 0.1691  loss_dice_7: 1.197  loss_ce_8: 0.5188  loss_mask_8: 0.1679  loss_dice_8: 1.175    time: 1.1148  last_time: 1.1222  data_time: 0.0891  last_data_time: 0.0948   lr: 0.0001  max_mem: 32547M
[10/08 00:11:06] d2.utils.events INFO:  eta: 0:04:04  iter: 779  total_loss: 20.6  loss_ce: 0.5209  loss_mask: 0.1782  loss_dice: 1.265  loss_ce_0: 0.6043  loss_mask_0: 0.2117  loss_dice_0: 1.493  loss_ce_1: 0.6578  loss_mask_1: 0.1911  loss_dice_1: 1.404  loss_ce_2: 0.5919  loss_mask_2: 0.1879  loss_dice_2: 1.342  loss_ce_3: 0.5679  loss_mask_3: 0.1801  loss_dice_3: 1.3  loss_ce_4: 0.5329  loss_mask_4: 0.1791  loss_dice_4: 1.285  loss_ce_5: 0.5473  loss_mask_5: 0.1841  loss_dice_5: 1.285  loss_ce_6: 0.4988  loss_mask_6: 0.177  loss_dice_6: 1.294  loss_ce_7: 0.5313  loss_mask_7: 0.1798  loss_dice_7: 1.271  loss_ce_8: 0.5222  loss_mask_8: 0.1783  loss_dice_8: 1.261    time: 1.1153  last_time: 1.1364  data_time: 0.0830  last_data_time: 0.0902   lr: 0.0001  max_mem: 32547M
[10/08 00:11:29] d2.utils.events INFO:  eta: 0:03:42  iter: 799  total_loss: 20.53  loss_ce: 0.4958  loss_mask: 0.1695  loss_dice: 1.275  loss_ce_0: 0.6113  loss_mask_0: 0.1944  loss_dice_0: 1.508  loss_ce_1: 0.699  loss_mask_1: 0.1772  loss_dice_1: 1.378  loss_ce_2: 0.6425  loss_mask_2: 0.1717  loss_dice_2: 1.342  loss_ce_3: 0.5549  loss_mask_3: 0.1704  loss_dice_3: 1.315  loss_ce_4: 0.5341  loss_mask_4: 0.1714  loss_dice_4: 1.279  loss_ce_5: 0.5387  loss_mask_5: 0.1698  loss_dice_5: 1.258  loss_ce_6: 0.4769  loss_mask_6: 0.1727  loss_dice_6: 1.252  loss_ce_7: 0.4936  loss_mask_7: 0.1702  loss_dice_7: 1.31  loss_ce_8: 0.5321  loss_mask_8: 0.1704  loss_dice_8: 1.264    time: 1.1153  last_time: 1.0744  data_time: 0.0832  last_data_time: 0.0667   lr: 0.0001  max_mem: 32547M
[10/08 00:11:51] d2.utils.events INFO:  eta: 0:03:20  iter: 819  total_loss: 20.54  loss_ce: 0.4876  loss_mask: 0.1687  loss_dice: 1.303  loss_ce_0: 0.6384  loss_mask_0: 0.1874  loss_dice_0: 1.557  loss_ce_1: 0.6637  loss_mask_1: 0.1818  loss_dice_1: 1.398  loss_ce_2: 0.6247  loss_mask_2: 0.1777  loss_dice_2: 1.305  loss_ce_3: 0.565  loss_mask_3: 0.1724  loss_dice_3: 1.307  loss_ce_4: 0.5457  loss_mask_4: 0.172  loss_dice_4: 1.32  loss_ce_5: 0.5139  loss_mask_5: 0.167  loss_dice_5: 1.316  loss_ce_6: 0.5083  loss_mask_6: 0.1688  loss_dice_6: 1.265  loss_ce_7: 0.5274  loss_mask_7: 0.1706  loss_dice_7: 1.284  loss_ce_8: 0.5193  loss_mask_8: 0.1668  loss_dice_8: 1.287    time: 1.1154  last_time: 1.1607  data_time: 0.0865  last_data_time: 0.0943   lr: 0.0001  max_mem: 32547M
[10/08 00:12:14] d2.utils.events INFO:  eta: 0:02:58  iter: 839  total_loss: 21.11  loss_ce: 0.5216  loss_mask: 0.1773  loss_dice: 1.311  loss_ce_0: 0.596  loss_mask_0: 0.1965  loss_dice_0: 1.489  loss_ce_1: 0.6952  loss_mask_1: 0.1894  loss_dice_1: 1.391  loss_ce_2: 0.6213  loss_mask_2: 0.1832  loss_dice_2: 1.351  loss_ce_3: 0.5646  loss_mask_3: 0.183  loss_dice_3: 1.32  loss_ce_4: 0.5229  loss_mask_4: 0.1834  loss_dice_4: 1.316  loss_ce_5: 0.5635  loss_mask_5: 0.1811  loss_dice_5: 1.304  loss_ce_6: 0.5446  loss_mask_6: 0.1789  loss_dice_6: 1.307  loss_ce_7: 0.5508  loss_mask_7: 0.1795  loss_dice_7: 1.292  loss_ce_8: 0.5621  loss_mask_8: 0.1769  loss_dice_8: 1.287    time: 1.1158  last_time: 1.1505  data_time: 0.0827  last_data_time: 0.0771   lr: 0.0001  max_mem: 32547M
[10/08 00:12:36] d2.utils.events INFO:  eta: 0:02:35  iter: 859  total_loss: 20.16  loss_ce: 0.4886  loss_mask: 0.1736  loss_dice: 1.233  loss_ce_0: 0.5935  loss_mask_0: 0.2007  loss_dice_0: 1.467  loss_ce_1: 0.665  loss_mask_1: 0.1888  loss_dice_1: 1.354  loss_ce_2: 0.6549  loss_mask_2: 0.1789  loss_dice_2: 1.31  loss_ce_3: 0.6026  loss_mask_3: 0.1771  loss_dice_3: 1.238  loss_ce_4: 0.536  loss_mask_4: 0.1762  loss_dice_4: 1.239  loss_ce_5: 0.5138  loss_mask_5: 0.1749  loss_dice_5: 1.226  loss_ce_6: 0.5338  loss_mask_6: 0.1755  loss_dice_6: 1.207  loss_ce_7: 0.4921  loss_mask_7: 0.1745  loss_dice_7: 1.232  loss_ce_8: 0.4866  loss_mask_8: 0.1736  loss_dice_8: 1.228    time: 1.1159  last_time: 1.1482  data_time: 0.0862  last_data_time: 0.0936   lr: 0.0001  max_mem: 32547M
[10/08 00:12:59] d2.utils.events INFO:  eta: 0:02:13  iter: 879  total_loss: 20.98  loss_ce: 0.475  loss_mask: 0.1703  loss_dice: 1.226  loss_ce_0: 0.5479  loss_mask_0: 0.1969  loss_dice_0: 1.493  loss_ce_1: 0.6362  loss_mask_1: 0.1854  loss_dice_1: 1.41  loss_ce_2: 0.5922  loss_mask_2: 0.1742  loss_dice_2: 1.336  loss_ce_3: 0.5653  loss_mask_3: 0.1719  loss_dice_3: 1.287  loss_ce_4: 0.5562  loss_mask_4: 0.1771  loss_dice_4: 1.286  loss_ce_5: 0.5303  loss_mask_5: 0.1735  loss_dice_5: 1.276  loss_ce_6: 0.5056  loss_mask_6: 0.1733  loss_dice_6: 1.28  loss_ce_7: 0.5052  loss_mask_7: 0.1715  loss_dice_7: 1.276  loss_ce_8: 0.5249  loss_mask_8: 0.1697  loss_dice_8: 1.271    time: 1.1161  last_time: 1.1459  data_time: 0.0878  last_data_time: 0.1017   lr: 0.0001  max_mem: 32547M
[10/08 00:13:21] d2.utils.events INFO:  eta: 0:01:51  iter: 899  total_loss: 20.59  loss_ce: 0.532  loss_mask: 0.162  loss_dice: 1.248  loss_ce_0: 0.5875  loss_mask_0: 0.2005  loss_dice_0: 1.467  loss_ce_1: 0.6619  loss_mask_1: 0.1853  loss_dice_1: 1.41  loss_ce_2: 0.6473  loss_mask_2: 0.1707  loss_dice_2: 1.321  loss_ce_3: 0.5672  loss_mask_3: 0.1659  loss_dice_3: 1.263  loss_ce_4: 0.5324  loss_mask_4: 0.1627  loss_dice_4: 1.283  loss_ce_5: 0.512  loss_mask_5: 0.1631  loss_dice_5: 1.255  loss_ce_6: 0.5073  loss_mask_6: 0.1619  loss_dice_6: 1.243  loss_ce_7: 0.4969  loss_mask_7: 0.1601  loss_dice_7: 1.251  loss_ce_8: 0.4957  loss_mask_8: 0.1635  loss_dice_8: 1.247    time: 1.1163  last_time: 1.1320  data_time: 0.0860  last_data_time: 0.0871   lr: 0.0001  max_mem: 32547M
[10/08 00:13:44] d2.utils.events INFO:  eta: 0:01:29  iter: 919  total_loss: 19.72  loss_ce: 0.5  loss_mask: 0.1601  loss_dice: 1.197  loss_ce_0: 0.5596  loss_mask_0: 0.1799  loss_dice_0: 1.423  loss_ce_1: 0.6241  loss_mask_1: 0.1799  loss_dice_1: 1.342  loss_ce_2: 0.5948  loss_mask_2: 0.1632  loss_dice_2: 1.275  loss_ce_3: 0.5397  loss_mask_3: 0.1651  loss_dice_3: 1.222  loss_ce_4: 0.5324  loss_mask_4: 0.1625  loss_dice_4: 1.235  loss_ce_5: 0.5189  loss_mask_5: 0.1603  loss_dice_5: 1.231  loss_ce_6: 0.4852  loss_mask_6: 0.1571  loss_dice_6: 1.198  loss_ce_7: 0.4861  loss_mask_7: 0.1574  loss_dice_7: 1.152  loss_ce_8: 0.4727  loss_mask_8: 0.1582  loss_dice_8: 1.22    time: 1.1164  last_time: 1.1802  data_time: 0.0896  last_data_time: 0.1145   lr: 0.0001  max_mem: 32547M
[10/08 00:14:07] d2.utils.events INFO:  eta: 0:01:06  iter: 939  total_loss: 20.69  loss_ce: 0.4873  loss_mask: 0.1833  loss_dice: 1.222  loss_ce_0: 0.5528  loss_mask_0: 0.2045  loss_dice_0: 1.443  loss_ce_1: 0.6127  loss_mask_1: 0.1951  loss_dice_1: 1.361  loss_ce_2: 0.5721  loss_mask_2: 0.1879  loss_dice_2: 1.358  loss_ce_3: 0.5022  loss_mask_3: 0.1842  loss_dice_3: 1.259  loss_ce_4: 0.5076  loss_mask_4: 0.1869  loss_dice_4: 1.232  loss_ce_5: 0.5087  loss_mask_5: 0.1845  loss_dice_5: 1.265  loss_ce_6: 0.4734  loss_mask_6: 0.1832  loss_dice_6: 1.297  loss_ce_7: 0.4808  loss_mask_7: 0.1832  loss_dice_7: 1.259  loss_ce_8: 0.4777  loss_mask_8: 0.1841  loss_dice_8: 1.252    time: 1.1172  last_time: 1.3362  data_time: 0.1011  last_data_time: 0.2609   lr: 0.0001  max_mem: 32568M
[10/08 00:14:30] d2.utils.events INFO:  eta: 0:00:44  iter: 959  total_loss: 21.07  loss_ce: 0.4896  loss_mask: 0.1591  loss_dice: 1.299  loss_ce_0: 0.5905  loss_mask_0: 0.1892  loss_dice_0: 1.515  loss_ce_1: 0.6388  loss_mask_1: 0.176  loss_dice_1: 1.449  loss_ce_2: 0.6107  loss_mask_2: 0.1687  loss_dice_2: 1.392  loss_ce_3: 0.5463  loss_mask_3: 0.1684  loss_dice_3: 1.336  loss_ce_4: 0.5051  loss_mask_4: 0.1699  loss_dice_4: 1.33  loss_ce_5: 0.5379  loss_mask_5: 0.1687  loss_dice_5: 1.31  loss_ce_6: 0.5204  loss_mask_6: 0.1657  loss_dice_6: 1.287  loss_ce_7: 0.4898  loss_mask_7: 0.1651  loss_dice_7: 1.289  loss_ce_8: 0.5039  loss_mask_8: 0.164  loss_dice_8: 1.273    time: 1.1174  last_time: 1.0494  data_time: 0.0883  last_data_time: 0.0726   lr: 0.0001  max_mem: 32568M
[10/08 00:14:52] d2.utils.events INFO:  eta: 0:00:22  iter: 979  total_loss: 19.58  loss_ce: 0.4635  loss_mask: 0.169  loss_dice: 1.224  loss_ce_0: 0.5943  loss_mask_0: 0.1919  loss_dice_0: 1.438  loss_ce_1: 0.6217  loss_mask_1: 0.1813  loss_dice_1: 1.355  loss_ce_2: 0.5762  loss_mask_2: 0.1743  loss_dice_2: 1.293  loss_ce_3: 0.5111  loss_mask_3: 0.1718  loss_dice_3: 1.254  loss_ce_4: 0.5178  loss_mask_4: 0.1701  loss_dice_4: 1.228  loss_ce_5: 0.5083  loss_mask_5: 0.1692  loss_dice_5: 1.237  loss_ce_6: 0.4731  loss_mask_6: 0.1658  loss_dice_6: 1.206  loss_ce_7: 0.4731  loss_mask_7: 0.1675  loss_dice_7: 1.194  loss_ce_8: 0.4716  loss_mask_8: 0.1688  loss_dice_8: 1.226    time: 1.1175  last_time: 1.1222  data_time: 0.0881  last_data_time: 0.0673   lr: 0.0001  max_mem: 32568M
[10/08 00:15:15] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19_a/model_final.pth
[10/08 00:15:17] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 20.17  loss_ce: 0.514  loss_mask: 0.1714  loss_dice: 1.238  loss_ce_0: 0.5714  loss_mask_0: 0.2053  loss_dice_0: 1.477  loss_ce_1: 0.6154  loss_mask_1: 0.1883  loss_dice_1: 1.365  loss_ce_2: 0.5969  loss_mask_2: 0.1843  loss_dice_2: 1.284  loss_ce_3: 0.5335  loss_mask_3: 0.1786  loss_dice_3: 1.257  loss_ce_4: 0.5308  loss_mask_4: 0.1756  loss_dice_4: 1.251  loss_ce_5: 0.4974  loss_mask_5: 0.1732  loss_dice_5: 1.246  loss_ce_6: 0.5013  loss_mask_6: 0.1723  loss_dice_6: 1.228  loss_ce_7: 0.5192  loss_mask_7: 0.1713  loss_dice_7: 1.252  loss_ce_8: 0.5129  loss_mask_8: 0.1711  loss_dice_8: 1.202    time: 1.1176  last_time: 1.1399  data_time: 0.0836  last_data_time: 0.0924   lr: 0.0001  max_mem: 32568M
[10/08 00:15:18] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:18:35 (1.1176 s / it)
[10/08 00:15:18] d2.engine.hooks INFO: Total training time: 0:18:41 (0:00:06 on hooks)
[10/08 00:15:18] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/08 00:15:18] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/08 00:15:18] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/08 00:15:18] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/08 00:15:18] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/08 00:15:18] d2.evaluation.evaluator INFO: Start inference on 500 batches
[10/08 00:15:23] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0049 s/iter. Inference: 0.3030 s/iter. Eval: 0.0651 s/iter. Total: 0.3730 s/iter. ETA=0:03:02
[10/08 00:15:28] d2.evaluation.evaluator INFO: Inference done 26/500. Dataloading: 0.0052 s/iter. Inference: 0.2851 s/iter. Eval: 0.0670 s/iter. Total: 0.3573 s/iter. ETA=0:02:49
[10/08 00:15:33] d2.evaluation.evaluator INFO: Inference done 41/500. Dataloading: 0.0054 s/iter. Inference: 0.2780 s/iter. Eval: 0.0673 s/iter. Total: 0.3509 s/iter. ETA=0:02:41
[10/08 00:15:38] d2.evaluation.evaluator INFO: Inference done 56/500. Dataloading: 0.0055 s/iter. Inference: 0.2756 s/iter. Eval: 0.0671 s/iter. Total: 0.3483 s/iter. ETA=0:02:34
[10/08 00:15:43] d2.evaluation.evaluator INFO: Inference done 71/500. Dataloading: 0.0055 s/iter. Inference: 0.2727 s/iter. Eval: 0.0671 s/iter. Total: 0.3454 s/iter. ETA=0:02:28
[10/08 00:15:49] d2.evaluation.evaluator INFO: Inference done 87/500. Dataloading: 0.0055 s/iter. Inference: 0.2698 s/iter. Eval: 0.0670 s/iter. Total: 0.3425 s/iter. ETA=0:02:21
[10/08 00:15:54] d2.evaluation.evaluator INFO: Inference done 102/500. Dataloading: 0.0055 s/iter. Inference: 0.2700 s/iter. Eval: 0.0670 s/iter. Total: 0.3426 s/iter. ETA=0:02:16
[10/08 00:15:59] d2.evaluation.evaluator INFO: Inference done 117/500. Dataloading: 0.0055 s/iter. Inference: 0.2713 s/iter. Eval: 0.0670 s/iter. Total: 0.3439 s/iter. ETA=0:02:11
[10/08 00:16:04] d2.evaluation.evaluator INFO: Inference done 132/500. Dataloading: 0.0055 s/iter. Inference: 0.2719 s/iter. Eval: 0.0670 s/iter. Total: 0.3445 s/iter. ETA=0:02:06
[10/08 00:16:09] d2.evaluation.evaluator INFO: Inference done 147/500. Dataloading: 0.0055 s/iter. Inference: 0.2722 s/iter. Eval: 0.0670 s/iter. Total: 0.3448 s/iter. ETA=0:02:01
[10/08 00:16:15] d2.evaluation.evaluator INFO: Inference done 162/500. Dataloading: 0.0055 s/iter. Inference: 0.2715 s/iter. Eval: 0.0670 s/iter. Total: 0.3440 s/iter. ETA=0:01:56
[10/08 00:16:20] d2.evaluation.evaluator INFO: Inference done 177/500. Dataloading: 0.0055 s/iter. Inference: 0.2713 s/iter. Eval: 0.0669 s/iter. Total: 0.3438 s/iter. ETA=0:01:51
[10/08 00:16:25] d2.evaluation.evaluator INFO: Inference done 191/500. Dataloading: 0.0055 s/iter. Inference: 0.2729 s/iter. Eval: 0.0670 s/iter. Total: 0.3454 s/iter. ETA=0:01:46
[10/08 00:16:30] d2.evaluation.evaluator INFO: Inference done 207/500. Dataloading: 0.0055 s/iter. Inference: 0.2718 s/iter. Eval: 0.0669 s/iter. Total: 0.3443 s/iter. ETA=0:01:40
[10/08 00:16:35] d2.evaluation.evaluator INFO: Inference done 222/500. Dataloading: 0.0055 s/iter. Inference: 0.2716 s/iter. Eval: 0.0669 s/iter. Total: 0.3440 s/iter. ETA=0:01:35
[10/08 00:16:40] d2.evaluation.evaluator INFO: Inference done 236/500. Dataloading: 0.0055 s/iter. Inference: 0.2726 s/iter. Eval: 0.0669 s/iter. Total: 0.3450 s/iter. ETA=0:01:31
[10/08 00:16:45] d2.evaluation.evaluator INFO: Inference done 251/500. Dataloading: 0.0055 s/iter. Inference: 0.2724 s/iter. Eval: 0.0669 s/iter. Total: 0.3448 s/iter. ETA=0:01:25
[10/08 00:16:50] d2.evaluation.evaluator INFO: Inference done 265/500. Dataloading: 0.0055 s/iter. Inference: 0.2732 s/iter. Eval: 0.0669 s/iter. Total: 0.3456 s/iter. ETA=0:01:21
[10/08 00:16:56] d2.evaluation.evaluator INFO: Inference done 280/500. Dataloading: 0.0055 s/iter. Inference: 0.2730 s/iter. Eval: 0.0668 s/iter. Total: 0.3454 s/iter. ETA=0:01:15
[10/08 00:17:01] d2.evaluation.evaluator INFO: Inference done 295/500. Dataloading: 0.0054 s/iter. Inference: 0.2727 s/iter. Eval: 0.0668 s/iter. Total: 0.3450 s/iter. ETA=0:01:10
[10/08 00:17:06] d2.evaluation.evaluator INFO: Inference done 311/500. Dataloading: 0.0055 s/iter. Inference: 0.2721 s/iter. Eval: 0.0667 s/iter. Total: 0.3443 s/iter. ETA=0:01:05
[10/08 00:17:11] d2.evaluation.evaluator INFO: Inference done 327/500. Dataloading: 0.0055 s/iter. Inference: 0.2708 s/iter. Eval: 0.0665 s/iter. Total: 0.3428 s/iter. ETA=0:00:59
[10/08 00:17:16] d2.evaluation.evaluator INFO: Inference done 342/500. Dataloading: 0.0055 s/iter. Inference: 0.2707 s/iter. Eval: 0.0665 s/iter. Total: 0.3427 s/iter. ETA=0:00:54
[10/08 00:17:21] d2.evaluation.evaluator INFO: Inference done 358/500. Dataloading: 0.0055 s/iter. Inference: 0.2701 s/iter. Eval: 0.0665 s/iter. Total: 0.3422 s/iter. ETA=0:00:48
[10/08 00:17:26] d2.evaluation.evaluator INFO: Inference done 374/500. Dataloading: 0.0054 s/iter. Inference: 0.2693 s/iter. Eval: 0.0666 s/iter. Total: 0.3413 s/iter. ETA=0:00:43
[10/08 00:17:32] d2.evaluation.evaluator INFO: Inference done 390/500. Dataloading: 0.0054 s/iter. Inference: 0.2684 s/iter. Eval: 0.0666 s/iter. Total: 0.3405 s/iter. ETA=0:00:37
[10/08 00:17:37] d2.evaluation.evaluator INFO: Inference done 406/500. Dataloading: 0.0054 s/iter. Inference: 0.2675 s/iter. Eval: 0.0666 s/iter. Total: 0.3395 s/iter. ETA=0:00:31
[10/08 00:17:42] d2.evaluation.evaluator INFO: Inference done 421/500. Dataloading: 0.0054 s/iter. Inference: 0.2674 s/iter. Eval: 0.0666 s/iter. Total: 0.3395 s/iter. ETA=0:00:26
[10/08 00:17:47] d2.evaluation.evaluator INFO: Inference done 437/500. Dataloading: 0.0054 s/iter. Inference: 0.2666 s/iter. Eval: 0.0666 s/iter. Total: 0.3386 s/iter. ETA=0:00:21
[10/08 00:17:52] d2.evaluation.evaluator INFO: Inference done 453/500. Dataloading: 0.0054 s/iter. Inference: 0.2662 s/iter. Eval: 0.0665 s/iter. Total: 0.3383 s/iter. ETA=0:00:15
[10/08 00:17:57] d2.evaluation.evaluator INFO: Inference done 469/500. Dataloading: 0.0054 s/iter. Inference: 0.2661 s/iter. Eval: 0.0665 s/iter. Total: 0.3381 s/iter. ETA=0:00:10
[10/08 00:18:02] d2.evaluation.evaluator INFO: Inference done 483/500. Dataloading: 0.0054 s/iter. Inference: 0.2667 s/iter. Eval: 0.0665 s/iter. Total: 0.3387 s/iter. ETA=0:00:05
[10/08 00:18:08] d2.evaluation.evaluator INFO: Inference done 498/500. Dataloading: 0.0054 s/iter. Inference: 0.2671 s/iter. Eval: 0.0665 s/iter. Total: 0.3391 s/iter. ETA=0:00:00
[10/08 00:18:08] d2.evaluation.evaluator INFO: Total inference time: 0:02:47.917867 (0.339228 s / iter per device, on 1 devices)
[10/08 00:18:08] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:12 (0.267003 s / iter per device, on 1 devices)
[10/08 00:18:08] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval8cd69vzk ...
[10/08 00:18:35] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 52.264 | 80.272 | 64.118 |      19       |
| Things | 42.659 | 79.862 | 53.751 |       8       |
| Stuff  | 59.250 | 80.571 | 71.657 |      11       |
[10/08 00:18:35] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.945 | 97.450 | 99.482 |     Stuff     |
| class_8  | 61.989 | 82.583 | 75.063 |     Stuff     |
| class_11 | 84.147 | 88.243 | 95.359 |     Stuff     |
| class_12 | 27.646 | 78.956 | 35.015 |     Stuff     |
| class_13 | 29.602 | 76.631 | 38.629 |     Stuff     |
| class_17 | 43.318 | 64.014 | 67.669 |     Stuff     |
| class_19 | 42.025 | 67.732 | 62.045 |     Stuff     |
| class_20 | 61.040 | 74.905 | 81.490 |     Stuff     |
| class_21 | 87.711 | 89.274 | 98.249 |     Stuff     |
| class_22 | 29.421 | 74.832 | 39.316 |     Stuff     |
| class_23 | 87.905 | 91.655 | 95.909 |     Stuff     |
| class_24 | 49.084 | 77.275 | 63.519 |    Things     |
| class_25 | 45.599 | 74.140 | 61.504 |    Things     |
| class_26 | 61.160 | 83.202 | 73.507 |    Things     |
| class_27 | 34.257 | 85.124 | 40.244 |    Things     |
| class_28 | 39.072 | 89.214 | 43.796 |    Things     |
| class_31 | 33.377 | 83.443 | 40.000 |    Things     |
| class_32 | 40.822 | 74.646 | 54.688 |    Things     |
| class_33 | 37.899 | 71.848 | 52.749 |    Things     |
[10/08 00:18:35] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[10/08 00:18:35] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/08 00:18:35] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/08 00:18:35] d2.evaluation.testing INFO: copypaste: 52.2643,80.2720,64.1175,42.6589,79.8615,53.7509,59.2500,80.5706,71.6569,96.9449,97.4498,99.4819,61.9894,82.5833,75.0630,84.1469,88.2426,95.3586,27.6465,78.9565,35.0148,29.6022,76.6314,38.6293,43.3177,64.0140,67.6692,42.0246,67.7323,62.0451,61.0399,74.9052,81.4896,87.7114,89.2744,98.2492,29.4212,74.8322,39.3162,87.9052,91.6548,95.9091,49.0844,77.2747,63.5194,45.5992,74.1403,61.5039,61.1600,83.2025,73.5074,34.2571,85.1238,40.2439,39.0719,89.2142,43.7956,33.3771,83.4427,40.0000,40.8220,74.6460,54.6875,37.8995,71.8482,52.7494
