[10/17 13:20:40] detectron2 INFO: Rank of current process: 0. World size: 1
[10/17 13:20:41] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/17 13:20:41] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_7.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/17 13:20:41] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_7.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_advanced_7
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/17 13:20:41] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_advanced_7
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/17 13:20:41] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_advanced_7/config.yaml
[10/17 13:20:41] d2.utils.env INFO: Using a generated random seed 42359469
[10/17 13:20:45] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (decoders): ModuleList(
    (0-2): 3 x UncertaintyDecoderAdapter(
      (conv1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
      (conv2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
      (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (uncertainty_layer): Conv2d(1024, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (gate): MoEGate()
  (void_embedding): Embedding(1, 1024)
)
[10/17 13:20:45] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/17 13:20:45] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/17 13:20:45] d2.data.build INFO: Using training sampler TrainingSampler
[10/17 13:20:45] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 13:20:45] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/17 13:20:45] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/17 13:20:45] d2.data.build INFO: Making batched data loader with batch_size=8
[10/17 13:20:45] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/17 13:20:45] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 13:20:45] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 13:20:45] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/17 13:20:45] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[34mdecoders.0.conv1.{bias, weight}[0m
[34mdecoders.0.conv2.{bias, weight}[0m
[34mdecoders.0.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoders.0.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoders.0.uncertainty_layer.{bias, weight}[0m
[34mdecoders.1.conv1.{bias, weight}[0m
[34mdecoders.1.conv2.{bias, weight}[0m
[34mdecoders.1.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoders.1.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoders.1.uncertainty_layer.{bias, weight}[0m
[34mdecoders.2.conv1.{bias, weight}[0m
[34mdecoders.2.conv2.{bias, weight}[0m
[34mdecoders.2.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoders.2.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoders.2.uncertainty_layer.{bias, weight}[0m
[10/17 13:20:45] d2.engine.train_loop INFO: Starting training from iteration 0
[10/17 13:21:09] d2.utils.events INFO:  eta: 0:52:13  iter: 19  total_loss: 30.05  loss_ce: 1.127  loss_mask: 0.3021  loss_dice: 1.466  loss_ce_0: 1.317  loss_mask_0: 0.3104  loss_dice_0: 1.776  loss_ce_1: 1.413  loss_mask_1: 0.3161  loss_dice_1: 1.634  loss_ce_2: 1.311  loss_mask_2: 0.307  loss_dice_2: 1.563  loss_ce_3: 1.253  loss_mask_3: 0.3066  loss_dice_3: 1.499  loss_ce_4: 1.131  loss_mask_4: 0.2983  loss_dice_4: 1.529  loss_ce_5: 1.16  loss_mask_5: 0.3016  loss_dice_5: 1.526  loss_ce_6: 1.175  loss_mask_6: 0.3058  loss_dice_6: 1.493  loss_ce_7: 1.149  loss_mask_7: 0.3069  loss_dice_7: 1.508  loss_ce_8: 1.15  loss_mask_8: 0.2988  loss_dice_8: 1.46    time: 1.0552  last_time: 0.9945  data_time: 0.1004  last_data_time: 0.0603   lr: 0.0001  max_mem: 32249M
[10/17 13:21:30] d2.utils.events INFO:  eta: 0:51:10  iter: 39  total_loss: 25.93  loss_ce: 0.7602  loss_mask: 0.2309  loss_dice: 1.491  loss_ce_0: 0.8484  loss_mask_0: 0.257  loss_dice_0: 1.748  loss_ce_1: 0.9284  loss_mask_1: 0.2516  loss_dice_1: 1.641  loss_ce_2: 0.8458  loss_mask_2: 0.2406  loss_dice_2: 1.562  loss_ce_3: 0.8012  loss_mask_3: 0.2327  loss_dice_3: 1.529  loss_ce_4: 0.8019  loss_mask_4: 0.2297  loss_dice_4: 1.541  loss_ce_5: 0.755  loss_mask_5: 0.2324  loss_dice_5: 1.481  loss_ce_6: 0.7511  loss_mask_6: 0.2297  loss_dice_6: 1.502  loss_ce_7: 0.7565  loss_mask_7: 0.2324  loss_dice_7: 1.502  loss_ce_8: 0.8136  loss_mask_8: 0.232  loss_dice_8: 1.477    time: 1.0459  last_time: 1.0204  data_time: 0.0651  last_data_time: 0.0655   lr: 0.0001  max_mem: 32249M
[10/17 13:21:51] d2.utils.events INFO:  eta: 0:50:49  iter: 59  total_loss: 23.37  loss_ce: 0.6598  loss_mask: 0.2107  loss_dice: 1.29  loss_ce_0: 0.7334  loss_mask_0: 0.2439  loss_dice_0: 1.647  loss_ce_1: 0.8507  loss_mask_1: 0.2319  loss_dice_1: 1.493  loss_ce_2: 0.7854  loss_mask_2: 0.2167  loss_dice_2: 1.431  loss_ce_3: 0.693  loss_mask_3: 0.215  loss_dice_3: 1.372  loss_ce_4: 0.6597  loss_mask_4: 0.2116  loss_dice_4: 1.362  loss_ce_5: 0.6533  loss_mask_5: 0.2142  loss_dice_5: 1.318  loss_ce_6: 0.6861  loss_mask_6: 0.2107  loss_dice_6: 1.321  loss_ce_7: 0.6421  loss_mask_7: 0.2092  loss_dice_7: 1.363  loss_ce_8: 0.6815  loss_mask_8: 0.2074  loss_dice_8: 1.327    time: 1.0456  last_time: 1.0120  data_time: 0.0692  last_data_time: 0.0641   lr: 0.0001  max_mem: 32249M
[10/17 13:22:12] d2.utils.events INFO:  eta: 0:50:36  iter: 79  total_loss: 23.64  loss_ce: 0.6776  loss_mask: 0.226  loss_dice: 1.316  loss_ce_0: 0.7434  loss_mask_0: 0.248  loss_dice_0: 1.601  loss_ce_1: 0.8291  loss_mask_1: 0.2348  loss_dice_1: 1.518  loss_ce_2: 0.7377  loss_mask_2: 0.2232  loss_dice_2: 1.454  loss_ce_3: 0.6674  loss_mask_3: 0.2254  loss_dice_3: 1.389  loss_ce_4: 0.6973  loss_mask_4: 0.2274  loss_dice_4: 1.395  loss_ce_5: 0.6763  loss_mask_5: 0.2247  loss_dice_5: 1.392  loss_ce_6: 0.6613  loss_mask_6: 0.2247  loss_dice_6: 1.36  loss_ce_7: 0.6448  loss_mask_7: 0.2248  loss_dice_7: 1.38  loss_ce_8: 0.6213  loss_mask_8: 0.2232  loss_dice_8: 1.36    time: 1.0475  last_time: 1.0255  data_time: 0.0699  last_data_time: 0.0674   lr: 0.0001  max_mem: 32249M
[10/17 13:28:23] detectron2 INFO: Rank of current process: 0. World size: 1
[10/17 13:28:24] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/17 13:28:24] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_7.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/17 13:28:24] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_7.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_advanced_7
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/17 13:28:24] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_advanced_7
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/17 13:28:24] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_advanced_7/config.yaml
[10/17 13:28:24] d2.utils.env INFO: Using a generated random seed 25145322
[10/17 13:28:28] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (decoders): ModuleList(
    (0-2): 3 x UncertaintyDecoderAdapter(
      (conv1): Conv2d(1024, 64, kernel_size=(1, 1), stride=(1, 1))
      (conv2): Conv2d(64, 1024, kernel_size=(1, 1), stride=(1, 1))
      (norm1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (norm2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU()
      (uncertainty_layer): Conv2d(1024, 1, kernel_size=(1, 1), stride=(1, 1))
    )
  )
  (gate): MoEGate()
  (void_embedding): Embedding(1, 1024)
)
[10/17 13:28:28] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/17 13:28:28] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/17 13:28:28] d2.data.build INFO: Using training sampler TrainingSampler
[10/17 13:28:28] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 13:28:28] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/17 13:28:28] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/17 13:28:28] d2.data.build INFO: Making batched data loader with batch_size=8
[10/17 13:28:28] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/17 13:28:28] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 13:28:28] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 13:28:28] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/17 13:28:28] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[34mdecoders.0.conv1.{bias, weight}[0m
[34mdecoders.0.conv2.{bias, weight}[0m
[34mdecoders.0.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoders.0.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoders.0.uncertainty_layer.{bias, weight}[0m
[34mdecoders.1.conv1.{bias, weight}[0m
[34mdecoders.1.conv2.{bias, weight}[0m
[34mdecoders.1.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoders.1.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoders.1.uncertainty_layer.{bias, weight}[0m
[34mdecoders.2.conv1.{bias, weight}[0m
[34mdecoders.2.conv2.{bias, weight}[0m
[34mdecoders.2.norm1.{bias, running_mean, running_var, weight}[0m
[34mdecoders.2.norm2.{bias, running_mean, running_var, weight}[0m
[34mdecoders.2.uncertainty_layer.{bias, weight}[0m
[10/17 13:28:28] d2.engine.train_loop INFO: Starting training from iteration 0
[10/17 13:28:52] d2.utils.events INFO:  eta: 0:51:30  iter: 19  total_loss: 32.02  loss_ce: 1.311  loss_mask: 0.2967  loss_dice: 1.506  loss_ce_0: 1.538  loss_mask_0: 0.3239  loss_dice_0: 1.877  loss_ce_1: 1.447  loss_mask_1: 0.309  loss_dice_1: 1.712  loss_ce_2: 1.492  loss_mask_2: 0.3076  loss_dice_2: 1.634  loss_ce_3: 1.344  loss_mask_3: 0.3014  loss_dice_3: 1.607  loss_ce_4: 1.291  loss_mask_4: 0.304  loss_dice_4: 1.57  loss_ce_5: 1.233  loss_mask_5: 0.3025  loss_dice_5: 1.57  loss_ce_6: 1.249  loss_mask_6: 0.3004  loss_dice_6: 1.535  loss_ce_7: 1.254  loss_mask_7: 0.2982  loss_dice_7: 1.54  loss_ce_8: 1.218  loss_mask_8: 0.2994  loss_dice_8: 1.561    time: 1.0504  last_time: 1.0097  data_time: 0.1039  last_data_time: 0.0496   lr: 0.0001  max_mem: 31389M
[10/17 13:29:12] d2.utils.events INFO:  eta: 0:50:52  iter: 39  total_loss: 25.17  loss_ce: 0.7688  loss_mask: 0.2346  loss_dice: 1.414  loss_ce_0: 0.8233  loss_mask_0: 0.2709  loss_dice_0: 1.753  loss_ce_1: 0.9184  loss_mask_1: 0.2567  loss_dice_1: 1.577  loss_ce_2: 0.8892  loss_mask_2: 0.2386  loss_dice_2: 1.51  loss_ce_3: 0.8208  loss_mask_3: 0.2349  loss_dice_3: 1.457  loss_ce_4: 0.7642  loss_mask_4: 0.2325  loss_dice_4: 1.444  loss_ce_5: 0.767  loss_mask_5: 0.2356  loss_dice_5: 1.471  loss_ce_6: 0.7828  loss_mask_6: 0.2407  loss_dice_6: 1.399  loss_ce_7: 0.796  loss_mask_7: 0.2352  loss_dice_7: 1.403  loss_ce_8: 0.7756  loss_mask_8: 0.2367  loss_dice_8: 1.408    time: 1.0414  last_time: 1.0297  data_time: 0.0699  last_data_time: 0.0558   lr: 0.0001  max_mem: 31653M
[10/17 13:29:33] d2.utils.events INFO:  eta: 0:50:40  iter: 59  total_loss: 24.55  loss_ce: 0.7095  loss_mask: 0.2047  loss_dice: 1.397  loss_ce_0: 0.7893  loss_mask_0: 0.2296  loss_dice_0: 1.7  loss_ce_1: 0.8961  loss_mask_1: 0.2249  loss_dice_1: 1.566  loss_ce_2: 0.8099  loss_mask_2: 0.2137  loss_dice_2: 1.502  loss_ce_3: 0.7492  loss_mask_3: 0.2067  loss_dice_3: 1.435  loss_ce_4: 0.7216  loss_mask_4: 0.2061  loss_dice_4: 1.438  loss_ce_5: 0.7239  loss_mask_5: 0.2076  loss_dice_5: 1.45  loss_ce_6: 0.723  loss_mask_6: 0.2058  loss_dice_6: 1.405  loss_ce_7: 0.708  loss_mask_7: 0.202  loss_dice_7: 1.414  loss_ce_8: 0.6891  loss_mask_8: 0.2063  loss_dice_8: 1.416    time: 1.0428  last_time: 1.1279  data_time: 0.0678  last_data_time: 0.0789   lr: 0.0001  max_mem: 31797M
[10/17 13:29:55] d2.utils.events INFO:  eta: 0:50:47  iter: 79  total_loss: 24.65  loss_ce: 0.7665  loss_mask: 0.2194  loss_dice: 1.403  loss_ce_0: 0.8057  loss_mask_0: 0.2517  loss_dice_0: 1.718  loss_ce_1: 0.9149  loss_mask_1: 0.2416  loss_dice_1: 1.601  loss_ce_2: 0.8104  loss_mask_2: 0.2281  loss_dice_2: 1.479  loss_ce_3: 0.8065  loss_mask_3: 0.2217  loss_dice_3: 1.469  loss_ce_4: 0.7391  loss_mask_4: 0.2146  loss_dice_4: 1.452  loss_ce_5: 0.7216  loss_mask_5: 0.2217  loss_dice_5: 1.438  loss_ce_6: 0.6965  loss_mask_6: 0.2218  loss_dice_6: 1.401  loss_ce_7: 0.7262  loss_mask_7: 0.2215  loss_dice_7: 1.408  loss_ce_8: 0.7047  loss_mask_8: 0.2192  loss_dice_8: 1.42    time: 1.0461  last_time: 1.0591  data_time: 0.0745  last_data_time: 0.0722   lr: 0.0001  max_mem: 32308M
[10/17 13:30:16] d2.utils.events INFO:  eta: 0:50:27  iter: 99  total_loss: 22.96  loss_ce: 0.5992  loss_mask: 0.1997  loss_dice: 1.364  loss_ce_0: 0.6697  loss_mask_0: 0.226  loss_dice_0: 1.652  loss_ce_1: 0.8082  loss_mask_1: 0.2111  loss_dice_1: 1.534  loss_ce_2: 0.7432  loss_mask_2: 0.1987  loss_dice_2: 1.456  loss_ce_3: 0.6699  loss_mask_3: 0.1964  loss_dice_3: 1.398  loss_ce_4: 0.6517  loss_mask_4: 0.2006  loss_dice_4: 1.395  loss_ce_5: 0.6317  loss_mask_5: 0.1993  loss_dice_5: 1.392  loss_ce_6: 0.6233  loss_mask_6: 0.2016  loss_dice_6: 1.327  loss_ce_7: 0.6139  loss_mask_7: 0.1998  loss_dice_7: 1.368  loss_ce_8: 0.6231  loss_mask_8: 0.1997  loss_dice_8: 1.325    time: 1.0487  last_time: 1.0724  data_time: 0.0717  last_data_time: 0.0777   lr: 0.0001  max_mem: 32308M
[10/17 13:30:37] d2.utils.events INFO:  eta: 0:50:05  iter: 119  total_loss: 23.25  loss_ce: 0.6013  loss_mask: 0.2123  loss_dice: 1.356  loss_ce_0: 0.6742  loss_mask_0: 0.2439  loss_dice_0: 1.616  loss_ce_1: 0.759  loss_mask_1: 0.2195  loss_dice_1: 1.528  loss_ce_2: 0.6987  loss_mask_2: 0.2079  loss_dice_2: 1.447  loss_ce_3: 0.6473  loss_mask_3: 0.2108  loss_dice_3: 1.406  loss_ce_4: 0.6302  loss_mask_4: 0.2139  loss_dice_4: 1.405  loss_ce_5: 0.6181  loss_mask_5: 0.2093  loss_dice_5: 1.399  loss_ce_6: 0.6178  loss_mask_6: 0.209  loss_dice_6: 1.361  loss_ce_7: 0.6161  loss_mask_7: 0.2125  loss_dice_7: 1.367  loss_ce_8: 0.5985  loss_mask_8: 0.2101  loss_dice_8: 1.363    time: 1.0469  last_time: 1.0119  data_time: 0.0671  last_data_time: 0.0797   lr: 0.0001  max_mem: 32308M
[10/17 13:30:58] d2.utils.events INFO:  eta: 0:49:48  iter: 139  total_loss: 22.51  loss_ce: 0.6377  loss_mask: 0.1931  loss_dice: 1.315  loss_ce_0: 0.6708  loss_mask_0: 0.2219  loss_dice_0: 1.597  loss_ce_1: 0.7921  loss_mask_1: 0.202  loss_dice_1: 1.469  loss_ce_2: 0.7357  loss_mask_2: 0.1964  loss_dice_2: 1.422  loss_ce_3: 0.663  loss_mask_3: 0.1963  loss_dice_3: 1.355  loss_ce_4: 0.6292  loss_mask_4: 0.1902  loss_dice_4: 1.349  loss_ce_5: 0.6526  loss_mask_5: 0.1976  loss_dice_5: 1.341  loss_ce_6: 0.6219  loss_mask_6: 0.1976  loss_dice_6: 1.328  loss_ce_7: 0.6167  loss_mask_7: 0.1958  loss_dice_7: 1.289  loss_ce_8: 0.6205  loss_mask_8: 0.1957  loss_dice_8: 1.289    time: 1.0481  last_time: 1.0475  data_time: 0.0723  last_data_time: 0.0744   lr: 0.0001  max_mem: 32308M
[10/17 13:31:19] d2.utils.events INFO:  eta: 0:49:28  iter: 159  total_loss: 22.02  loss_ce: 0.5701  loss_mask: 0.1943  loss_dice: 1.301  loss_ce_0: 0.6709  loss_mask_0: 0.2307  loss_dice_0: 1.517  loss_ce_1: 0.7893  loss_mask_1: 0.2129  loss_dice_1: 1.464  loss_ce_2: 0.7078  loss_mask_2: 0.2026  loss_dice_2: 1.402  loss_ce_3: 0.623  loss_mask_3: 0.2  loss_dice_3: 1.329  loss_ce_4: 0.6257  loss_mask_4: 0.1968  loss_dice_4: 1.342  loss_ce_5: 0.6168  loss_mask_5: 0.1969  loss_dice_5: 1.32  loss_ce_6: 0.602  loss_mask_6: 0.1949  loss_dice_6: 1.308  loss_ce_7: 0.5981  loss_mask_7: 0.1961  loss_dice_7: 1.31  loss_ce_8: 0.6342  loss_mask_8: 0.1943  loss_dice_8: 1.308    time: 1.0485  last_time: 1.0413  data_time: 0.0700  last_data_time: 0.0733   lr: 0.0001  max_mem: 32308M
[10/17 13:31:40] d2.utils.events INFO:  eta: 0:49:07  iter: 179  total_loss: 21.86  loss_ce: 0.5791  loss_mask: 0.2053  loss_dice: 1.277  loss_ce_0: 0.6423  loss_mask_0: 0.2389  loss_dice_0: 1.515  loss_ce_1: 0.6983  loss_mask_1: 0.2271  loss_dice_1: 1.439  loss_ce_2: 0.6614  loss_mask_2: 0.2171  loss_dice_2: 1.375  loss_ce_3: 0.6161  loss_mask_3: 0.2129  loss_dice_3: 1.31  loss_ce_4: 0.5903  loss_mask_4: 0.2112  loss_dice_4: 1.285  loss_ce_5: 0.5842  loss_mask_5: 0.2089  loss_dice_5: 1.296  loss_ce_6: 0.5887  loss_mask_6: 0.2111  loss_dice_6: 1.304  loss_ce_7: 0.5643  loss_mask_7: 0.2096  loss_dice_7: 1.269  loss_ce_8: 0.5661  loss_mask_8: 0.2062  loss_dice_8: 1.309    time: 1.0491  last_time: 1.0596  data_time: 0.0725  last_data_time: 0.0783   lr: 0.0001  max_mem: 33360M
[10/17 13:32:01] d2.utils.events INFO:  eta: 0:48:44  iter: 199  total_loss: 21.1  loss_ce: 0.5355  loss_mask: 0.1879  loss_dice: 1.203  loss_ce_0: 0.6531  loss_mask_0: 0.2214  loss_dice_0: 1.492  loss_ce_1: 0.7113  loss_mask_1: 0.2011  loss_dice_1: 1.404  loss_ce_2: 0.6551  loss_mask_2: 0.1917  loss_dice_2: 1.374  loss_ce_3: 0.604  loss_mask_3: 0.1933  loss_dice_3: 1.256  loss_ce_4: 0.5465  loss_mask_4: 0.1933  loss_dice_4: 1.232  loss_ce_5: 0.5836  loss_mask_5: 0.1888  loss_dice_5: 1.248  loss_ce_6: 0.554  loss_mask_6: 0.1897  loss_dice_6: 1.2  loss_ce_7: 0.5274  loss_mask_7: 0.1882  loss_dice_7: 1.2  loss_ce_8: 0.5387  loss_mask_8: 0.1893  loss_dice_8: 1.218    time: 1.0484  last_time: 1.0336  data_time: 0.0682  last_data_time: 0.0553   lr: 0.0001  max_mem: 33360M
[10/17 13:32:22] d2.utils.events INFO:  eta: 0:48:23  iter: 219  total_loss: 22.48  loss_ce: 0.5862  loss_mask: 0.1841  loss_dice: 1.326  loss_ce_0: 0.6422  loss_mask_0: 0.2322  loss_dice_0: 1.541  loss_ce_1: 0.7103  loss_mask_1: 0.2079  loss_dice_1: 1.491  loss_ce_2: 0.6856  loss_mask_2: 0.1977  loss_dice_2: 1.392  loss_ce_3: 0.6279  loss_mask_3: 0.1933  loss_dice_3: 1.314  loss_ce_4: 0.6583  loss_mask_4: 0.1894  loss_dice_4: 1.347  loss_ce_5: 0.6153  loss_mask_5: 0.1849  loss_dice_5: 1.335  loss_ce_6: 0.592  loss_mask_6: 0.1901  loss_dice_6: 1.353  loss_ce_7: 0.5935  loss_mask_7: 0.1855  loss_dice_7: 1.32  loss_ce_8: 0.6058  loss_mask_8: 0.1836  loss_dice_8: 1.353    time: 1.0479  last_time: 1.0222  data_time: 0.0683  last_data_time: 0.0570   lr: 0.0001  max_mem: 33360M
[10/17 13:32:43] d2.utils.events INFO:  eta: 0:47:59  iter: 239  total_loss: 21.19  loss_ce: 0.5794  loss_mask: 0.2068  loss_dice: 1.263  loss_ce_0: 0.6252  loss_mask_0: 0.2217  loss_dice_0: 1.518  loss_ce_1: 0.7111  loss_mask_1: 0.2073  loss_dice_1: 1.407  loss_ce_2: 0.6555  loss_mask_2: 0.2074  loss_dice_2: 1.335  loss_ce_3: 0.6192  loss_mask_3: 0.205  loss_dice_3: 1.299  loss_ce_4: 0.5977  loss_mask_4: 0.2037  loss_dice_4: 1.275  loss_ce_5: 0.5908  loss_mask_5: 0.2028  loss_dice_5: 1.283  loss_ce_6: 0.5753  loss_mask_6: 0.2042  loss_dice_6: 1.261  loss_ce_7: 0.5738  loss_mask_7: 0.2063  loss_dice_7: 1.27  loss_ce_8: 0.5572  loss_mask_8: 0.2062  loss_dice_8: 1.259    time: 1.0465  last_time: 1.0013  data_time: 0.0666  last_data_time: 0.0529   lr: 0.0001  max_mem: 33360M
[10/17 13:33:03] d2.utils.events INFO:  eta: 0:47:37  iter: 259  total_loss: 21.2  loss_ce: 0.5088  loss_mask: 0.1814  loss_dice: 1.294  loss_ce_0: 0.5887  loss_mask_0: 0.2159  loss_dice_0: 1.561  loss_ce_1: 0.6705  loss_mask_1: 0.2026  loss_dice_1: 1.466  loss_ce_2: 0.6507  loss_mask_2: 0.1907  loss_dice_2: 1.387  loss_ce_3: 0.5934  loss_mask_3: 0.191  loss_dice_3: 1.349  loss_ce_4: 0.5469  loss_mask_4: 0.1885  loss_dice_4: 1.305  loss_ce_5: 0.5835  loss_mask_5: 0.1806  loss_dice_5: 1.31  loss_ce_6: 0.5329  loss_mask_6: 0.1827  loss_dice_6: 1.272  loss_ce_7: 0.5135  loss_mask_7: 0.1812  loss_dice_7: 1.239  loss_ce_8: 0.5317  loss_mask_8: 0.1788  loss_dice_8: 1.249    time: 1.0456  last_time: 1.0189  data_time: 0.0594  last_data_time: 0.0487   lr: 0.0001  max_mem: 33360M
[10/17 13:33:24] d2.utils.events INFO:  eta: 0:47:15  iter: 279  total_loss: 21.73  loss_ce: 0.5655  loss_mask: 0.1856  loss_dice: 1.313  loss_ce_0: 0.6185  loss_mask_0: 0.219  loss_dice_0: 1.554  loss_ce_1: 0.714  loss_mask_1: 0.1992  loss_dice_1: 1.495  loss_ce_2: 0.6669  loss_mask_2: 0.1912  loss_dice_2: 1.417  loss_ce_3: 0.6063  loss_mask_3: 0.1889  loss_dice_3: 1.355  loss_ce_4: 0.5748  loss_mask_4: 0.188  loss_dice_4: 1.378  loss_ce_5: 0.5966  loss_mask_5: 0.1853  loss_dice_5: 1.379  loss_ce_6: 0.5609  loss_mask_6: 0.1857  loss_dice_6: 1.34  loss_ce_7: 0.5845  loss_mask_7: 0.185  loss_dice_7: 1.326  loss_ce_8: 0.5796  loss_mask_8: 0.1873  loss_dice_8: 1.325    time: 1.0460  last_time: 1.0724  data_time: 0.0722  last_data_time: 0.0835   lr: 0.0001  max_mem: 33360M
[10/17 13:33:46] d2.utils.events INFO:  eta: 0:46:56  iter: 299  total_loss: 21.35  loss_ce: 0.5403  loss_mask: 0.2018  loss_dice: 1.296  loss_ce_0: 0.6287  loss_mask_0: 0.2258  loss_dice_0: 1.509  loss_ce_1: 0.6842  loss_mask_1: 0.214  loss_dice_1: 1.426  loss_ce_2: 0.6375  loss_mask_2: 0.2099  loss_dice_2: 1.359  loss_ce_3: 0.5703  loss_mask_3: 0.2032  loss_dice_3: 1.307  loss_ce_4: 0.5653  loss_mask_4: 0.2043  loss_dice_4: 1.312  loss_ce_5: 0.571  loss_mask_5: 0.1974  loss_dice_5: 1.321  loss_ce_6: 0.5359  loss_mask_6: 0.1964  loss_dice_6: 1.317  loss_ce_7: 0.5761  loss_mask_7: 0.2043  loss_dice_7: 1.304  loss_ce_8: 0.5452  loss_mask_8: 0.2019  loss_dice_8: 1.279    time: 1.0471  last_time: 1.0585  data_time: 0.0824  last_data_time: 0.0821   lr: 0.0001  max_mem: 33360M
[10/17 13:34:07] d2.utils.events INFO:  eta: 0:46:38  iter: 319  total_loss: 21.87  loss_ce: 0.5834  loss_mask: 0.1928  loss_dice: 1.312  loss_ce_0: 0.5948  loss_mask_0: 0.2162  loss_dice_0: 1.561  loss_ce_1: 0.712  loss_mask_1: 0.2009  loss_dice_1: 1.471  loss_ce_2: 0.663  loss_mask_2: 0.2001  loss_dice_2: 1.445  loss_ce_3: 0.6181  loss_mask_3: 0.1945  loss_dice_3: 1.363  loss_ce_4: 0.5733  loss_mask_4: 0.1947  loss_dice_4: 1.415  loss_ce_5: 0.5633  loss_mask_5: 0.1915  loss_dice_5: 1.352  loss_ce_6: 0.5663  loss_mask_6: 0.1918  loss_dice_6: 1.339  loss_ce_7: 0.5896  loss_mask_7: 0.1896  loss_dice_7: 1.33  loss_ce_8: 0.5797  loss_mask_8: 0.1894  loss_dice_8: 1.302    time: 1.0480  last_time: 1.0503  data_time: 0.0716  last_data_time: 0.0594   lr: 0.0001  max_mem: 33360M
[10/17 13:34:28] d2.utils.events INFO:  eta: 0:46:20  iter: 339  total_loss: 21.13  loss_ce: 0.5331  loss_mask: 0.1724  loss_dice: 1.287  loss_ce_0: 0.5626  loss_mask_0: 0.2003  loss_dice_0: 1.527  loss_ce_1: 0.6556  loss_mask_1: 0.1815  loss_dice_1: 1.455  loss_ce_2: 0.6034  loss_mask_2: 0.1751  loss_dice_2: 1.412  loss_ce_3: 0.5691  loss_mask_3: 0.1717  loss_dice_3: 1.348  loss_ce_4: 0.5439  loss_mask_4: 0.1704  loss_dice_4: 1.335  loss_ce_5: 0.55  loss_mask_5: 0.1717  loss_dice_5: 1.339  loss_ce_6: 0.5565  loss_mask_6: 0.1704  loss_dice_6: 1.314  loss_ce_7: 0.5438  loss_mask_7: 0.1724  loss_dice_7: 1.312  loss_ce_8: 0.5288  loss_mask_8: 0.1704  loss_dice_8: 1.307    time: 1.0490  last_time: 1.0697  data_time: 0.0715  last_data_time: 0.0931   lr: 0.0001  max_mem: 33360M
[10/17 13:34:49] d2.utils.events INFO:  eta: 0:45:59  iter: 359  total_loss: 20.68  loss_ce: 0.5341  loss_mask: 0.1909  loss_dice: 1.255  loss_ce_0: 0.5995  loss_mask_0: 0.2282  loss_dice_0: 1.54  loss_ce_1: 0.6873  loss_mask_1: 0.2216  loss_dice_1: 1.406  loss_ce_2: 0.6526  loss_mask_2: 0.1999  loss_dice_2: 1.288  loss_ce_3: 0.5853  loss_mask_3: 0.199  loss_dice_3: 1.276  loss_ce_4: 0.5629  loss_mask_4: 0.1986  loss_dice_4: 1.256  loss_ce_5: 0.5634  loss_mask_5: 0.1983  loss_dice_5: 1.243  loss_ce_6: 0.5319  loss_mask_6: 0.1925  loss_dice_6: 1.243  loss_ce_7: 0.5259  loss_mask_7: 0.193  loss_dice_7: 1.216  loss_ce_8: 0.5346  loss_mask_8: 0.1912  loss_dice_8: 1.245    time: 1.0491  last_time: 1.0259  data_time: 0.0663  last_data_time: 0.0808   lr: 0.0001  max_mem: 33360M
[10/17 13:35:11] d2.utils.events INFO:  eta: 0:45:39  iter: 379  total_loss: 20.48  loss_ce: 0.5505  loss_mask: 0.1668  loss_dice: 1.249  loss_ce_0: 0.6221  loss_mask_0: 0.1905  loss_dice_0: 1.463  loss_ce_1: 0.6745  loss_mask_1: 0.1815  loss_dice_1: 1.383  loss_ce_2: 0.6343  loss_mask_2: 0.1711  loss_dice_2: 1.354  loss_ce_3: 0.6042  loss_mask_3: 0.1711  loss_dice_3: 1.257  loss_ce_4: 0.5613  loss_mask_4: 0.1701  loss_dice_4: 1.283  loss_ce_5: 0.5519  loss_mask_5: 0.1684  loss_dice_5: 1.28  loss_ce_6: 0.5343  loss_mask_6: 0.1695  loss_dice_6: 1.237  loss_ce_7: 0.553  loss_mask_7: 0.1693  loss_dice_7: 1.243  loss_ce_8: 0.5469  loss_mask_8: 0.1674  loss_dice_8: 1.213    time: 1.0494  last_time: 1.0214  data_time: 0.0686  last_data_time: 0.0663   lr: 0.0001  max_mem: 33360M
[10/17 13:35:31] d2.utils.events INFO:  eta: 0:45:18  iter: 399  total_loss: 20.81  loss_ce: 0.5326  loss_mask: 0.1739  loss_dice: 1.265  loss_ce_0: 0.622  loss_mask_0: 0.1987  loss_dice_0: 1.489  loss_ce_1: 0.7231  loss_mask_1: 0.1845  loss_dice_1: 1.421  loss_ce_2: 0.6619  loss_mask_2: 0.1756  loss_dice_2: 1.356  loss_ce_3: 0.5517  loss_mask_3: 0.1736  loss_dice_3: 1.321  loss_ce_4: 0.5606  loss_mask_4: 0.1753  loss_dice_4: 1.284  loss_ce_5: 0.5738  loss_mask_5: 0.1734  loss_dice_5: 1.287  loss_ce_6: 0.5437  loss_mask_6: 0.1746  loss_dice_6: 1.275  loss_ce_7: 0.5387  loss_mask_7: 0.1751  loss_dice_7: 1.269  loss_ce_8: 0.5158  loss_mask_8: 0.1724  loss_dice_8: 1.265    time: 1.0492  last_time: 1.0281  data_time: 0.0695  last_data_time: 0.0742   lr: 0.0001  max_mem: 33360M
[10/17 13:35:52] d2.utils.events INFO:  eta: 0:44:58  iter: 419  total_loss: 20.63  loss_ce: 0.5159  loss_mask: 0.1841  loss_dice: 1.286  loss_ce_0: 0.6002  loss_mask_0: 0.2278  loss_dice_0: 1.515  loss_ce_1: 0.6683  loss_mask_1: 0.2104  loss_dice_1: 1.402  loss_ce_2: 0.6107  loss_mask_2: 0.1935  loss_dice_2: 1.393  loss_ce_3: 0.5408  loss_mask_3: 0.1965  loss_dice_3: 1.309  loss_ce_4: 0.5195  loss_mask_4: 0.1921  loss_dice_4: 1.305  loss_ce_5: 0.5314  loss_mask_5: 0.188  loss_dice_5: 1.283  loss_ce_6: 0.5321  loss_mask_6: 0.185  loss_dice_6: 1.331  loss_ce_7: 0.5448  loss_mask_7: 0.1855  loss_dice_7: 1.265  loss_ce_8: 0.535  loss_mask_8: 0.1838  loss_dice_8: 1.277    time: 1.0490  last_time: 1.0889  data_time: 0.0632  last_data_time: 0.0868   lr: 0.0001  max_mem: 33360M
[10/17 13:36:14] d2.utils.events INFO:  eta: 0:44:37  iter: 439  total_loss: 20.63  loss_ce: 0.5224  loss_mask: 0.1849  loss_dice: 1.213  loss_ce_0: 0.6061  loss_mask_0: 0.2087  loss_dice_0: 1.484  loss_ce_1: 0.6549  loss_mask_1: 0.1983  loss_dice_1: 1.392  loss_ce_2: 0.6154  loss_mask_2: 0.1867  loss_dice_2: 1.321  loss_ce_3: 0.5601  loss_mask_3: 0.1847  loss_dice_3: 1.262  loss_ce_4: 0.5214  loss_mask_4: 0.1839  loss_dice_4: 1.254  loss_ce_5: 0.526  loss_mask_5: 0.1853  loss_dice_5: 1.238  loss_ce_6: 0.5102  loss_mask_6: 0.1863  loss_dice_6: 1.214  loss_ce_7: 0.5059  loss_mask_7: 0.1848  loss_dice_7: 1.206  loss_ce_8: 0.5028  loss_mask_8: 0.185  loss_dice_8: 1.165    time: 1.0495  last_time: 1.0362  data_time: 0.0752  last_data_time: 0.0597   lr: 0.0001  max_mem: 33360M
[10/17 13:36:35] d2.utils.events INFO:  eta: 0:44:17  iter: 459  total_loss: 20.91  loss_ce: 0.5084  loss_mask: 0.1842  loss_dice: 1.211  loss_ce_0: 0.6133  loss_mask_0: 0.2084  loss_dice_0: 1.501  loss_ce_1: 0.7026  loss_mask_1: 0.1921  loss_dice_1: 1.415  loss_ce_2: 0.6651  loss_mask_2: 0.1849  loss_dice_2: 1.307  loss_ce_3: 0.5871  loss_mask_3: 0.1856  loss_dice_3: 1.265  loss_ce_4: 0.5524  loss_mask_4: 0.1839  loss_dice_4: 1.263  loss_ce_5: 0.5281  loss_mask_5: 0.1842  loss_dice_5: 1.243  loss_ce_6: 0.5607  loss_mask_6: 0.1839  loss_dice_6: 1.213  loss_ce_7: 0.5294  loss_mask_7: 0.1828  loss_dice_7: 1.233  loss_ce_8: 0.536  loss_mask_8: 0.1838  loss_dice_8: 1.208    time: 1.0497  last_time: 1.0588  data_time: 0.0696  last_data_time: 0.0523   lr: 0.0001  max_mem: 33360M
[10/17 13:36:56] d2.utils.events INFO:  eta: 0:43:59  iter: 479  total_loss: 21.48  loss_ce: 0.5151  loss_mask: 0.1693  loss_dice: 1.326  loss_ce_0: 0.6026  loss_mask_0: 0.201  loss_dice_0: 1.566  loss_ce_1: 0.6865  loss_mask_1: 0.1933  loss_dice_1: 1.496  loss_ce_2: 0.652  loss_mask_2: 0.1787  loss_dice_2: 1.419  loss_ce_3: 0.5992  loss_mask_3: 0.177  loss_dice_3: 1.38  loss_ce_4: 0.5598  loss_mask_4: 0.1742  loss_dice_4: 1.343  loss_ce_5: 0.55  loss_mask_5: 0.1728  loss_dice_5: 1.348  loss_ce_6: 0.5592  loss_mask_6: 0.1734  loss_dice_6: 1.308  loss_ce_7: 0.5247  loss_mask_7: 0.173  loss_dice_7: 1.295  loss_ce_8: 0.534  loss_mask_8: 0.1733  loss_dice_8: 1.294    time: 1.0503  last_time: 1.0169  data_time: 0.0687  last_data_time: 0.0766   lr: 0.0001  max_mem: 33360M
[10/17 13:37:17] d2.utils.events INFO:  eta: 0:43:39  iter: 499  total_loss: 20.8  loss_ce: 0.5156  loss_mask: 0.174  loss_dice: 1.287  loss_ce_0: 0.6372  loss_mask_0: 0.2014  loss_dice_0: 1.582  loss_ce_1: 0.704  loss_mask_1: 0.1948  loss_dice_1: 1.44  loss_ce_2: 0.6368  loss_mask_2: 0.1833  loss_dice_2: 1.404  loss_ce_3: 0.5694  loss_mask_3: 0.1806  loss_dice_3: 1.359  loss_ce_4: 0.5446  loss_mask_4: 0.1785  loss_dice_4: 1.318  loss_ce_5: 0.5383  loss_mask_5: 0.1776  loss_dice_5: 1.347  loss_ce_6: 0.542  loss_mask_6: 0.1748  loss_dice_6: 1.301  loss_ce_7: 0.5324  loss_mask_7: 0.1765  loss_dice_7: 1.289  loss_ce_8: 0.5163  loss_mask_8: 0.1768  loss_dice_8: 1.34    time: 1.0502  last_time: 1.0477  data_time: 0.0658  last_data_time: 0.0655   lr: 0.0001  max_mem: 33360M
[10/17 13:37:39] d2.utils.events INFO:  eta: 0:43:18  iter: 519  total_loss: 21.04  loss_ce: 0.5547  loss_mask: 0.1849  loss_dice: 1.284  loss_ce_0: 0.5822  loss_mask_0: 0.2102  loss_dice_0: 1.528  loss_ce_1: 0.6936  loss_mask_1: 0.1963  loss_dice_1: 1.447  loss_ce_2: 0.623  loss_mask_2: 0.1871  loss_dice_2: 1.396  loss_ce_3: 0.5573  loss_mask_3: 0.1889  loss_dice_3: 1.309  loss_ce_4: 0.5558  loss_mask_4: 0.1854  loss_dice_4: 1.348  loss_ce_5: 0.5294  loss_mask_5: 0.1855  loss_dice_5: 1.293  loss_ce_6: 0.5316  loss_mask_6: 0.1869  loss_dice_6: 1.287  loss_ce_7: 0.5211  loss_mask_7: 0.1847  loss_dice_7: 1.309  loss_ce_8: 0.5492  loss_mask_8: 0.1829  loss_dice_8: 1.255    time: 1.0509  last_time: 1.2003  data_time: 0.0719  last_data_time: 0.0676   lr: 0.0001  max_mem: 33360M
[10/17 13:38:00] d2.utils.events INFO:  eta: 0:42:58  iter: 539  total_loss: 21.16  loss_ce: 0.5668  loss_mask: 0.1625  loss_dice: 1.298  loss_ce_0: 0.5896  loss_mask_0: 0.1925  loss_dice_0: 1.574  loss_ce_1: 0.7476  loss_mask_1: 0.1797  loss_dice_1: 1.434  loss_ce_2: 0.6345  loss_mask_2: 0.1731  loss_dice_2: 1.349  loss_ce_3: 0.5904  loss_mask_3: 0.1711  loss_dice_3: 1.304  loss_ce_4: 0.5991  loss_mask_4: 0.1663  loss_dice_4: 1.325  loss_ce_5: 0.5616  loss_mask_5: 0.1611  loss_dice_5: 1.303  loss_ce_6: 0.5486  loss_mask_6: 0.159  loss_dice_6: 1.276  loss_ce_7: 0.5753  loss_mask_7: 0.1614  loss_dice_7: 1.282  loss_ce_8: 0.5473  loss_mask_8: 0.1618  loss_dice_8: 1.301    time: 1.0514  last_time: 1.0325  data_time: 0.0745  last_data_time: 0.0842   lr: 0.0001  max_mem: 33360M
[10/17 13:38:21] d2.utils.events INFO:  eta: 0:42:38  iter: 559  total_loss: 20.64  loss_ce: 0.5334  loss_mask: 0.1729  loss_dice: 1.228  loss_ce_0: 0.6066  loss_mask_0: 0.2061  loss_dice_0: 1.478  loss_ce_1: 0.6395  loss_mask_1: 0.1861  loss_dice_1: 1.413  loss_ce_2: 0.5993  loss_mask_2: 0.1802  loss_dice_2: 1.303  loss_ce_3: 0.5617  loss_mask_3: 0.1776  loss_dice_3: 1.279  loss_ce_4: 0.5287  loss_mask_4: 0.1752  loss_dice_4: 1.264  loss_ce_5: 0.526  loss_mask_5: 0.1728  loss_dice_5: 1.251  loss_ce_6: 0.493  loss_mask_6: 0.1714  loss_dice_6: 1.232  loss_ce_7: 0.5212  loss_mask_7: 0.1702  loss_dice_7: 1.252  loss_ce_8: 0.5269  loss_mask_8: 0.1719  loss_dice_8: 1.267    time: 1.0518  last_time: 1.0919  data_time: 0.0662  last_data_time: 0.0644   lr: 0.0001  max_mem: 33360M
[10/17 13:38:43] d2.utils.events INFO:  eta: 0:42:17  iter: 579  total_loss: 20.79  loss_ce: 0.5299  loss_mask: 0.1707  loss_dice: 1.235  loss_ce_0: 0.6039  loss_mask_0: 0.1975  loss_dice_0: 1.511  loss_ce_1: 0.683  loss_mask_1: 0.1828  loss_dice_1: 1.388  loss_ce_2: 0.6094  loss_mask_2: 0.1786  loss_dice_2: 1.337  loss_ce_3: 0.5477  loss_mask_3: 0.1769  loss_dice_3: 1.296  loss_ce_4: 0.535  loss_mask_4: 0.1704  loss_dice_4: 1.296  loss_ce_5: 0.5254  loss_mask_5: 0.1709  loss_dice_5: 1.275  loss_ce_6: 0.5224  loss_mask_6: 0.1678  loss_dice_6: 1.281  loss_ce_7: 0.5298  loss_mask_7: 0.1698  loss_dice_7: 1.271  loss_ce_8: 0.5188  loss_mask_8: 0.169  loss_dice_8: 1.26    time: 1.0523  last_time: 1.1051  data_time: 0.0701  last_data_time: 0.0737   lr: 0.0001  max_mem: 33360M
[10/17 13:39:04] d2.utils.events INFO:  eta: 0:41:56  iter: 599  total_loss: 21.12  loss_ce: 0.5549  loss_mask: 0.1719  loss_dice: 1.24  loss_ce_0: 0.6059  loss_mask_0: 0.2057  loss_dice_0: 1.485  loss_ce_1: 0.7159  loss_mask_1: 0.1922  loss_dice_1: 1.394  loss_ce_2: 0.6495  loss_mask_2: 0.1815  loss_dice_2: 1.321  loss_ce_3: 0.5602  loss_mask_3: 0.1763  loss_dice_3: 1.27  loss_ce_4: 0.5379  loss_mask_4: 0.175  loss_dice_4: 1.284  loss_ce_5: 0.5505  loss_mask_5: 0.1748  loss_dice_5: 1.283  loss_ce_6: 0.532  loss_mask_6: 0.1726  loss_dice_6: 1.251  loss_ce_7: 0.543  loss_mask_7: 0.1733  loss_dice_7: 1.261  loss_ce_8: 0.5184  loss_mask_8: 0.1725  loss_dice_8: 1.269    time: 1.0523  last_time: 1.0722  data_time: 0.0699  last_data_time: 0.0730   lr: 0.0001  max_mem: 33360M
[10/17 13:39:25] d2.utils.events INFO:  eta: 0:41:35  iter: 619  total_loss: 20.76  loss_ce: 0.5281  loss_mask: 0.1799  loss_dice: 1.2  loss_ce_0: 0.5897  loss_mask_0: 0.2103  loss_dice_0: 1.501  loss_ce_1: 0.7031  loss_mask_1: 0.1982  loss_dice_1: 1.367  loss_ce_2: 0.6449  loss_mask_2: 0.1872  loss_dice_2: 1.314  loss_ce_3: 0.5721  loss_mask_3: 0.1843  loss_dice_3: 1.267  loss_ce_4: 0.5637  loss_mask_4: 0.1801  loss_dice_4: 1.261  loss_ce_5: 0.5482  loss_mask_5: 0.182  loss_dice_5: 1.22  loss_ce_6: 0.5552  loss_mask_6: 0.1776  loss_dice_6: 1.222  loss_ce_7: 0.5596  loss_mask_7: 0.1777  loss_dice_7: 1.202  loss_ce_8: 0.5254  loss_mask_8: 0.1796  loss_dice_8: 1.243    time: 1.0524  last_time: 1.0501  data_time: 0.0658  last_data_time: 0.0682   lr: 0.0001  max_mem: 33360M
[10/17 13:39:46] d2.utils.events INFO:  eta: 0:41:14  iter: 639  total_loss: 21.01  loss_ce: 0.5386  loss_mask: 0.1893  loss_dice: 1.329  loss_ce_0: 0.6262  loss_mask_0: 0.2169  loss_dice_0: 1.529  loss_ce_1: 0.6828  loss_mask_1: 0.2009  loss_dice_1: 1.453  loss_ce_2: 0.6315  loss_mask_2: 0.1962  loss_dice_2: 1.392  loss_ce_3: 0.5932  loss_mask_3: 0.1925  loss_dice_3: 1.387  loss_ce_4: 0.5317  loss_mask_4: 0.1916  loss_dice_4: 1.324  loss_ce_5: 0.5426  loss_mask_5: 0.1895  loss_dice_5: 1.315  loss_ce_6: 0.5583  loss_mask_6: 0.1882  loss_dice_6: 1.334  loss_ce_7: 0.5137  loss_mask_7: 0.1925  loss_dice_7: 1.363  loss_ce_8: 0.5282  loss_mask_8: 0.1889  loss_dice_8: 1.3    time: 1.0526  last_time: 1.1061  data_time: 0.0664  last_data_time: 0.0916   lr: 0.0001  max_mem: 33360M
[10/17 13:40:07] d2.utils.events INFO:  eta: 0:40:54  iter: 659  total_loss: 21.08  loss_ce: 0.5025  loss_mask: 0.1667  loss_dice: 1.303  loss_ce_0: 0.5891  loss_mask_0: 0.1855  loss_dice_0: 1.503  loss_ce_1: 0.6505  loss_mask_1: 0.1797  loss_dice_1: 1.445  loss_ce_2: 0.6353  loss_mask_2: 0.1751  loss_dice_2: 1.378  loss_ce_3: 0.5486  loss_mask_3: 0.1746  loss_dice_3: 1.316  loss_ce_4: 0.5303  loss_mask_4: 0.1731  loss_dice_4: 1.314  loss_ce_5: 0.526  loss_mask_5: 0.1731  loss_dice_5: 1.298  loss_ce_6: 0.499  loss_mask_6: 0.1716  loss_dice_6: 1.246  loss_ce_7: 0.4839  loss_mask_7: 0.1725  loss_dice_7: 1.274  loss_ce_8: 0.4758  loss_mask_8: 0.1725  loss_dice_8: 1.268    time: 1.0527  last_time: 1.0362  data_time: 0.0699  last_data_time: 0.0534   lr: 0.0001  max_mem: 33360M
[10/17 13:40:29] d2.utils.events INFO:  eta: 0:40:33  iter: 679  total_loss: 21.67  loss_ce: 0.5762  loss_mask: 0.174  loss_dice: 1.277  loss_ce_0: 0.6853  loss_mask_0: 0.2045  loss_dice_0: 1.51  loss_ce_1: 0.7077  loss_mask_1: 0.1833  loss_dice_1: 1.426  loss_ce_2: 0.6467  loss_mask_2: 0.1749  loss_dice_2: 1.372  loss_ce_3: 0.602  loss_mask_3: 0.1734  loss_dice_3: 1.332  loss_ce_4: 0.5729  loss_mask_4: 0.1692  loss_dice_4: 1.287  loss_ce_5: 0.5608  loss_mask_5: 0.1686  loss_dice_5: 1.286  loss_ce_6: 0.5229  loss_mask_6: 0.1727  loss_dice_6: 1.299  loss_ce_7: 0.5537  loss_mask_7: 0.1734  loss_dice_7: 1.285  loss_ce_8: 0.5426  loss_mask_8: 0.173  loss_dice_8: 1.254    time: 1.0528  last_time: 1.0439  data_time: 0.0685  last_data_time: 0.0794   lr: 0.0001  max_mem: 33360M
[10/17 13:40:50] d2.utils.events INFO:  eta: 0:40:12  iter: 699  total_loss: 20.48  loss_ce: 0.4508  loss_mask: 0.1806  loss_dice: 1.283  loss_ce_0: 0.5651  loss_mask_0: 0.2031  loss_dice_0: 1.436  loss_ce_1: 0.6001  loss_mask_1: 0.1914  loss_dice_1: 1.369  loss_ce_2: 0.5854  loss_mask_2: 0.1847  loss_dice_2: 1.303  loss_ce_3: 0.4859  loss_mask_3: 0.1809  loss_dice_3: 1.248  loss_ce_4: 0.4831  loss_mask_4: 0.1796  loss_dice_4: 1.237  loss_ce_5: 0.4652  loss_mask_5: 0.1808  loss_dice_5: 1.265  loss_ce_6: 0.4669  loss_mask_6: 0.1808  loss_dice_6: 1.27  loss_ce_7: 0.4337  loss_mask_7: 0.1791  loss_dice_7: 1.254  loss_ce_8: 0.4738  loss_mask_8: 0.181  loss_dice_8: 1.231    time: 1.0529  last_time: 1.0622  data_time: 0.0673  last_data_time: 0.0812   lr: 0.0001  max_mem: 33360M
[10/17 13:41:11] d2.utils.events INFO:  eta: 0:39:52  iter: 719  total_loss: 20.9  loss_ce: 0.4978  loss_mask: 0.1727  loss_dice: 1.312  loss_ce_0: 0.5966  loss_mask_0: 0.219  loss_dice_0: 1.525  loss_ce_1: 0.6864  loss_mask_1: 0.1955  loss_dice_1: 1.4  loss_ce_2: 0.6316  loss_mask_2: 0.186  loss_dice_2: 1.377  loss_ce_3: 0.5489  loss_mask_3: 0.1824  loss_dice_3: 1.305  loss_ce_4: 0.5357  loss_mask_4: 0.1768  loss_dice_4: 1.304  loss_ce_5: 0.5457  loss_mask_5: 0.173  loss_dice_5: 1.291  loss_ce_6: 0.4991  loss_mask_6: 0.1794  loss_dice_6: 1.294  loss_ce_7: 0.489  loss_mask_7: 0.1794  loss_dice_7: 1.29  loss_ce_8: 0.5205  loss_mask_8: 0.1807  loss_dice_8: 1.293    time: 1.0531  last_time: 1.0619  data_time: 0.0705  last_data_time: 0.0636   lr: 0.0001  max_mem: 33360M
[10/17 13:41:32] d2.utils.events INFO:  eta: 0:39:31  iter: 739  total_loss: 21.55  loss_ce: 0.497  loss_mask: 0.1783  loss_dice: 1.301  loss_ce_0: 0.5916  loss_mask_0: 0.2037  loss_dice_0: 1.559  loss_ce_1: 0.6605  loss_mask_1: 0.1963  loss_dice_1: 1.485  loss_ce_2: 0.5836  loss_mask_2: 0.1821  loss_dice_2: 1.415  loss_ce_3: 0.5425  loss_mask_3: 0.1791  loss_dice_3: 1.36  loss_ce_4: 0.5532  loss_mask_4: 0.178  loss_dice_4: 1.333  loss_ce_5: 0.5153  loss_mask_5: 0.1768  loss_dice_5: 1.331  loss_ce_6: 0.523  loss_mask_6: 0.1792  loss_dice_6: 1.321  loss_ce_7: 0.4793  loss_mask_7: 0.1785  loss_dice_7: 1.293  loss_ce_8: 0.5035  loss_mask_8: 0.1782  loss_dice_8: 1.319    time: 1.0534  last_time: 1.0578  data_time: 0.0684  last_data_time: 0.0645   lr: 0.0001  max_mem: 33360M
[10/17 13:41:54] d2.utils.events INFO:  eta: 0:39:10  iter: 759  total_loss: 20.26  loss_ce: 0.5076  loss_mask: 0.1771  loss_dice: 1.253  loss_ce_0: 0.5746  loss_mask_0: 0.2072  loss_dice_0: 1.456  loss_ce_1: 0.6681  loss_mask_1: 0.1941  loss_dice_1: 1.346  loss_ce_2: 0.6192  loss_mask_2: 0.1811  loss_dice_2: 1.294  loss_ce_3: 0.5797  loss_mask_3: 0.1815  loss_dice_3: 1.257  loss_ce_4: 0.5298  loss_mask_4: 0.1828  loss_dice_4: 1.271  loss_ce_5: 0.5199  loss_mask_5: 0.1812  loss_dice_5: 1.27  loss_ce_6: 0.5231  loss_mask_6: 0.1815  loss_dice_6: 1.243  loss_ce_7: 0.4982  loss_mask_7: 0.1796  loss_dice_7: 1.203  loss_ce_8: 0.524  loss_mask_8: 0.1805  loss_dice_8: 1.225    time: 1.0534  last_time: 1.0568  data_time: 0.0675  last_data_time: 0.0735   lr: 0.0001  max_mem: 33360M
[10/17 13:42:15] d2.utils.events INFO:  eta: 0:38:50  iter: 779  total_loss: 20.48  loss_ce: 0.4878  loss_mask: 0.1686  loss_dice: 1.266  loss_ce_0: 0.6125  loss_mask_0: 0.1935  loss_dice_0: 1.49  loss_ce_1: 0.6476  loss_mask_1: 0.1816  loss_dice_1: 1.392  loss_ce_2: 0.562  loss_mask_2: 0.1705  loss_dice_2: 1.35  loss_ce_3: 0.51  loss_mask_3: 0.1728  loss_dice_3: 1.293  loss_ce_4: 0.4894  loss_mask_4: 0.1721  loss_dice_4: 1.309  loss_ce_5: 0.4948  loss_mask_5: 0.1696  loss_dice_5: 1.292  loss_ce_6: 0.4882  loss_mask_6: 0.1715  loss_dice_6: 1.25  loss_ce_7: 0.4958  loss_mask_7: 0.1674  loss_dice_7: 1.268  loss_ce_8: 0.4738  loss_mask_8: 0.166  loss_dice_8: 1.269    time: 1.0538  last_time: 1.0284  data_time: 0.0687  last_data_time: 0.0698   lr: 0.0001  max_mem: 33360M
[10/17 13:42:36] d2.utils.events INFO:  eta: 0:38:29  iter: 799  total_loss: 19.95  loss_ce: 0.4667  loss_mask: 0.1774  loss_dice: 1.186  loss_ce_0: 0.5758  loss_mask_0: 0.2041  loss_dice_0: 1.484  loss_ce_1: 0.6674  loss_mask_1: 0.1856  loss_dice_1: 1.346  loss_ce_2: 0.5972  loss_mask_2: 0.1716  loss_dice_2: 1.334  loss_ce_3: 0.5571  loss_mask_3: 0.1712  loss_dice_3: 1.248  loss_ce_4: 0.4967  loss_mask_4: 0.1692  loss_dice_4: 1.21  loss_ce_5: 0.488  loss_mask_5: 0.1738  loss_dice_5: 1.245  loss_ce_6: 0.4664  loss_mask_6: 0.1713  loss_dice_6: 1.206  loss_ce_7: 0.4627  loss_mask_7: 0.1713  loss_dice_7: 1.194  loss_ce_8: 0.472  loss_mask_8: 0.1746  loss_dice_8: 1.218    time: 1.0536  last_time: 1.0186  data_time: 0.0621  last_data_time: 0.0541   lr: 0.0001  max_mem: 33360M
[10/17 13:42:57] d2.utils.events INFO:  eta: 0:38:08  iter: 819  total_loss: 19.53  loss_ce: 0.4454  loss_mask: 0.1677  loss_dice: 1.229  loss_ce_0: 0.5635  loss_mask_0: 0.2003  loss_dice_0: 1.466  loss_ce_1: 0.6831  loss_mask_1: 0.1872  loss_dice_1: 1.369  loss_ce_2: 0.5884  loss_mask_2: 0.1758  loss_dice_2: 1.325  loss_ce_3: 0.5308  loss_mask_3: 0.1718  loss_dice_3: 1.265  loss_ce_4: 0.4999  loss_mask_4: 0.1708  loss_dice_4: 1.256  loss_ce_5: 0.5052  loss_mask_5: 0.1706  loss_dice_5: 1.227  loss_ce_6: 0.4637  loss_mask_6: 0.1711  loss_dice_6: 1.194  loss_ce_7: 0.4583  loss_mask_7: 0.171  loss_dice_7: 1.197  loss_ce_8: 0.4618  loss_mask_8: 0.1698  loss_dice_8: 1.221    time: 1.0535  last_time: 1.0789  data_time: 0.0667  last_data_time: 0.0726   lr: 0.0001  max_mem: 33360M
[10/17 13:43:18] d2.utils.events INFO:  eta: 0:37:47  iter: 839  total_loss: 19.6  loss_ce: 0.4857  loss_mask: 0.1766  loss_dice: 1.209  loss_ce_0: 0.55  loss_mask_0: 0.2125  loss_dice_0: 1.433  loss_ce_1: 0.6649  loss_mask_1: 0.1915  loss_dice_1: 1.326  loss_ce_2: 0.605  loss_mask_2: 0.1883  loss_dice_2: 1.286  loss_ce_3: 0.5086  loss_mask_3: 0.1824  loss_dice_3: 1.222  loss_ce_4: 0.5229  loss_mask_4: 0.1786  loss_dice_4: 1.232  loss_ce_5: 0.5177  loss_mask_5: 0.1751  loss_dice_5: 1.237  loss_ce_6: 0.4771  loss_mask_6: 0.1776  loss_dice_6: 1.244  loss_ce_7: 0.4614  loss_mask_7: 0.1782  loss_dice_7: 1.255  loss_ce_8: 0.4634  loss_mask_8: 0.1797  loss_dice_8: 1.241    time: 1.0535  last_time: 1.0650  data_time: 0.0708  last_data_time: 0.0747   lr: 0.0001  max_mem: 33360M
[10/17 13:43:39] d2.utils.events INFO:  eta: 0:37:26  iter: 859  total_loss: 19.92  loss_ce: 0.4832  loss_mask: 0.1751  loss_dice: 1.202  loss_ce_0: 0.5545  loss_mask_0: 0.2066  loss_dice_0: 1.469  loss_ce_1: 0.6604  loss_mask_1: 0.1878  loss_dice_1: 1.368  loss_ce_2: 0.5887  loss_mask_2: 0.1747  loss_dice_2: 1.297  loss_ce_3: 0.5096  loss_mask_3: 0.1731  loss_dice_3: 1.269  loss_ce_4: 0.5012  loss_mask_4: 0.1703  loss_dice_4: 1.259  loss_ce_5: 0.5019  loss_mask_5: 0.171  loss_dice_5: 1.247  loss_ce_6: 0.4986  loss_mask_6: 0.1703  loss_dice_6: 1.263  loss_ce_7: 0.466  loss_mask_7: 0.173  loss_dice_7: 1.22  loss_ce_8: 0.4747  loss_mask_8: 0.1736  loss_dice_8: 1.194    time: 1.0536  last_time: 1.0768  data_time: 0.0682  last_data_time: 0.0775   lr: 0.0001  max_mem: 33360M
[10/17 13:44:01] d2.utils.events INFO:  eta: 0:37:06  iter: 879  total_loss: 20.5  loss_ce: 0.4912  loss_mask: 0.1652  loss_dice: 1.302  loss_ce_0: 0.5317  loss_mask_0: 0.1971  loss_dice_0: 1.465  loss_ce_1: 0.6586  loss_mask_1: 0.1727  loss_dice_1: 1.388  loss_ce_2: 0.5915  loss_mask_2: 0.1655  loss_dice_2: 1.324  loss_ce_3: 0.5331  loss_mask_3: 0.1656  loss_dice_3: 1.294  loss_ce_4: 0.5418  loss_mask_4: 0.1645  loss_dice_4: 1.297  loss_ce_5: 0.5019  loss_mask_5: 0.1657  loss_dice_5: 1.307  loss_ce_6: 0.4933  loss_mask_6: 0.1661  loss_dice_6: 1.262  loss_ce_7: 0.4939  loss_mask_7: 0.1644  loss_dice_7: 1.246  loss_ce_8: 0.4891  loss_mask_8: 0.1666  loss_dice_8: 1.261    time: 1.0540  last_time: 1.0872  data_time: 0.0722  last_data_time: 0.0764   lr: 0.0001  max_mem: 33360M
[10/17 13:44:22] d2.utils.events INFO:  eta: 0:36:43  iter: 899  total_loss: 20.46  loss_ce: 0.4918  loss_mask: 0.1791  loss_dice: 1.236  loss_ce_0: 0.5897  loss_mask_0: 0.2077  loss_dice_0: 1.431  loss_ce_1: 0.6425  loss_mask_1: 0.1952  loss_dice_1: 1.359  loss_ce_2: 0.5711  loss_mask_2: 0.1831  loss_dice_2: 1.29  loss_ce_3: 0.5394  loss_mask_3: 0.1861  loss_dice_3: 1.27  loss_ce_4: 0.5489  loss_mask_4: 0.184  loss_dice_4: 1.266  loss_ce_5: 0.5343  loss_mask_5: 0.1835  loss_dice_5: 1.27  loss_ce_6: 0.5084  loss_mask_6: 0.1802  loss_dice_6: 1.222  loss_ce_7: 0.5003  loss_mask_7: 0.1793  loss_dice_7: 1.25  loss_ce_8: 0.4801  loss_mask_8: 0.1794  loss_dice_8: 1.223    time: 1.0536  last_time: 1.0459  data_time: 0.0680  last_data_time: 0.0702   lr: 0.0001  max_mem: 33360M
[10/17 13:44:43] d2.utils.events INFO:  eta: 0:36:22  iter: 919  total_loss: 19.9  loss_ce: 0.5026  loss_mask: 0.1727  loss_dice: 1.224  loss_ce_0: 0.5923  loss_mask_0: 0.2008  loss_dice_0: 1.421  loss_ce_1: 0.6374  loss_mask_1: 0.1883  loss_dice_1: 1.393  loss_ce_2: 0.6089  loss_mask_2: 0.1838  loss_dice_2: 1.305  loss_ce_3: 0.5609  loss_mask_3: 0.1848  loss_dice_3: 1.243  loss_ce_4: 0.5516  loss_mask_4: 0.1769  loss_dice_4: 1.26  loss_ce_5: 0.5721  loss_mask_5: 0.1766  loss_dice_5: 1.255  loss_ce_6: 0.5382  loss_mask_6: 0.1752  loss_dice_6: 1.262  loss_ce_7: 0.5309  loss_mask_7: 0.1761  loss_dice_7: 1.25  loss_ce_8: 0.505  loss_mask_8: 0.1744  loss_dice_8: 1.225    time: 1.0535  last_time: 1.0190  data_time: 0.0708  last_data_time: 0.0652   lr: 0.0001  max_mem: 33360M
[10/17 13:45:04] d2.utils.events INFO:  eta: 0:36:01  iter: 939  total_loss: 21.06  loss_ce: 0.4893  loss_mask: 0.1771  loss_dice: 1.309  loss_ce_0: 0.6106  loss_mask_0: 0.2007  loss_dice_0: 1.515  loss_ce_1: 0.6627  loss_mask_1: 0.1897  loss_dice_1: 1.424  loss_ce_2: 0.6371  loss_mask_2: 0.1806  loss_dice_2: 1.351  loss_ce_3: 0.5819  loss_mask_3: 0.179  loss_dice_3: 1.335  loss_ce_4: 0.5566  loss_mask_4: 0.1778  loss_dice_4: 1.329  loss_ce_5: 0.5154  loss_mask_5: 0.1776  loss_dice_5: 1.311  loss_ce_6: 0.5035  loss_mask_6: 0.1784  loss_dice_6: 1.278  loss_ce_7: 0.5056  loss_mask_7: 0.1765  loss_dice_7: 1.285  loss_ce_8: 0.5014  loss_mask_8: 0.1749  loss_dice_8: 1.309    time: 1.0540  last_time: 1.0922  data_time: 0.0758  last_data_time: 0.0948   lr: 0.0001  max_mem: 33360M
[10/17 13:45:25] d2.utils.events INFO:  eta: 0:35:39  iter: 959  total_loss: 20.5  loss_ce: 0.5032  loss_mask: 0.1764  loss_dice: 1.225  loss_ce_0: 0.5915  loss_mask_0: 0.2026  loss_dice_0: 1.482  loss_ce_1: 0.6388  loss_mask_1: 0.1837  loss_dice_1: 1.406  loss_ce_2: 0.6004  loss_mask_2: 0.1785  loss_dice_2: 1.313  loss_ce_3: 0.5514  loss_mask_3: 0.1789  loss_dice_3: 1.303  loss_ce_4: 0.5446  loss_mask_4: 0.1776  loss_dice_4: 1.286  loss_ce_5: 0.5568  loss_mask_5: 0.175  loss_dice_5: 1.291  loss_ce_6: 0.5162  loss_mask_6: 0.1789  loss_dice_6: 1.257  loss_ce_7: 0.5133  loss_mask_7: 0.1767  loss_dice_7: 1.279  loss_ce_8: 0.5223  loss_mask_8: 0.1756  loss_dice_8: 1.25    time: 1.0537  last_time: 1.0246  data_time: 0.0695  last_data_time: 0.0656   lr: 0.0001  max_mem: 33360M
[10/17 13:45:47] d2.utils.events INFO:  eta: 0:35:19  iter: 979  total_loss: 20.78  loss_ce: 0.5118  loss_mask: 0.1601  loss_dice: 1.235  loss_ce_0: 0.6425  loss_mask_0: 0.1828  loss_dice_0: 1.493  loss_ce_1: 0.6985  loss_mask_1: 0.1763  loss_dice_1: 1.392  loss_ce_2: 0.6372  loss_mask_2: 0.1674  loss_dice_2: 1.335  loss_ce_3: 0.5648  loss_mask_3: 0.1652  loss_dice_3: 1.267  loss_ce_4: 0.5845  loss_mask_4: 0.1647  loss_dice_4: 1.272  loss_ce_5: 0.5415  loss_mask_5: 0.1631  loss_dice_5: 1.241  loss_ce_6: 0.5324  loss_mask_6: 0.1612  loss_dice_6: 1.25  loss_ce_7: 0.5171  loss_mask_7: 0.1576  loss_dice_7: 1.216  loss_ce_8: 0.5164  loss_mask_8: 0.1584  loss_dice_8: 1.22    time: 1.0540  last_time: 1.0984  data_time: 0.0691  last_data_time: 0.0682   lr: 0.0001  max_mem: 33360M
[10/17 13:46:08] d2.utils.events INFO:  eta: 0:34:59  iter: 999  total_loss: 20.46  loss_ce: 0.5334  loss_mask: 0.1638  loss_dice: 1.242  loss_ce_0: 0.5996  loss_mask_0: 0.1985  loss_dice_0: 1.494  loss_ce_1: 0.7014  loss_mask_1: 0.1833  loss_dice_1: 1.381  loss_ce_2: 0.6522  loss_mask_2: 0.1725  loss_dice_2: 1.341  loss_ce_3: 0.5838  loss_mask_3: 0.1737  loss_dice_3: 1.318  loss_ce_4: 0.5576  loss_mask_4: 0.1694  loss_dice_4: 1.279  loss_ce_5: 0.5331  loss_mask_5: 0.1657  loss_dice_5: 1.252  loss_ce_6: 0.5315  loss_mask_6: 0.1676  loss_dice_6: 1.272  loss_ce_7: 0.5422  loss_mask_7: 0.1658  loss_dice_7: 1.227  loss_ce_8: 0.5259  loss_mask_8: 0.1664  loss_dice_8: 1.283    time: 1.0541  last_time: 1.0046  data_time: 0.0709  last_data_time: 0.0720   lr: 0.0001  max_mem: 33360M
[10/17 13:46:29] d2.utils.events INFO:  eta: 0:34:38  iter: 1019  total_loss: 19.91  loss_ce: 0.49  loss_mask: 0.1664  loss_dice: 1.241  loss_ce_0: 0.5606  loss_mask_0: 0.1998  loss_dice_0: 1.445  loss_ce_1: 0.6561  loss_mask_1: 0.182  loss_dice_1: 1.389  loss_ce_2: 0.6363  loss_mask_2: 0.1754  loss_dice_2: 1.291  loss_ce_3: 0.5351  loss_mask_3: 0.1726  loss_dice_3: 1.277  loss_ce_4: 0.5189  loss_mask_4: 0.1728  loss_dice_4: 1.257  loss_ce_5: 0.503  loss_mask_5: 0.1711  loss_dice_5: 1.261  loss_ce_6: 0.5013  loss_mask_6: 0.1685  loss_dice_6: 1.247  loss_ce_7: 0.5066  loss_mask_7: 0.1698  loss_dice_7: 1.195  loss_ce_8: 0.494  loss_mask_8: 0.1691  loss_dice_8: 1.246    time: 1.0542  last_time: 1.0005  data_time: 0.0664  last_data_time: 0.0583   lr: 0.0001  max_mem: 33360M
[10/17 13:46:51] d2.utils.events INFO:  eta: 0:34:18  iter: 1039  total_loss: 20.04  loss_ce: 0.4786  loss_mask: 0.16  loss_dice: 1.272  loss_ce_0: 0.572  loss_mask_0: 0.1985  loss_dice_0: 1.421  loss_ce_1: 0.6603  loss_mask_1: 0.1755  loss_dice_1: 1.383  loss_ce_2: 0.5763  loss_mask_2: 0.1691  loss_dice_2: 1.325  loss_ce_3: 0.5171  loss_mask_3: 0.1668  loss_dice_3: 1.262  loss_ce_4: 0.4872  loss_mask_4: 0.1689  loss_dice_4: 1.289  loss_ce_5: 0.4841  loss_mask_5: 0.1644  loss_dice_5: 1.282  loss_ce_6: 0.4678  loss_mask_6: 0.1603  loss_dice_6: 1.266  loss_ce_7: 0.448  loss_mask_7: 0.1622  loss_dice_7: 1.274  loss_ce_8: 0.4429  loss_mask_8: 0.1613  loss_dice_8: 1.261    time: 1.0543  last_time: 1.1102  data_time: 0.0703  last_data_time: 0.0922   lr: 0.0001  max_mem: 33360M
[10/17 13:47:11] d2.utils.events INFO:  eta: 0:33:57  iter: 1059  total_loss: 20.44  loss_ce: 0.4875  loss_mask: 0.1741  loss_dice: 1.228  loss_ce_0: 0.5989  loss_mask_0: 0.1949  loss_dice_0: 1.481  loss_ce_1: 0.6675  loss_mask_1: 0.1868  loss_dice_1: 1.367  loss_ce_2: 0.6147  loss_mask_2: 0.1777  loss_dice_2: 1.32  loss_ce_3: 0.5099  loss_mask_3: 0.1751  loss_dice_3: 1.263  loss_ce_4: 0.555  loss_mask_4: 0.174  loss_dice_4: 1.262  loss_ce_5: 0.5354  loss_mask_5: 0.1735  loss_dice_5: 1.254  loss_ce_6: 0.4976  loss_mask_6: 0.1713  loss_dice_6: 1.243  loss_ce_7: 0.4795  loss_mask_7: 0.1735  loss_dice_7: 1.279  loss_ce_8: 0.496  loss_mask_8: 0.1746  loss_dice_8: 1.25    time: 1.0541  last_time: 1.0718  data_time: 0.0651  last_data_time: 0.0608   lr: 0.0001  max_mem: 33360M
[10/17 13:47:32] d2.utils.events INFO:  eta: 0:33:36  iter: 1079  total_loss: 19.78  loss_ce: 0.4813  loss_mask: 0.1787  loss_dice: 1.192  loss_ce_0: 0.5339  loss_mask_0: 0.2052  loss_dice_0: 1.417  loss_ce_1: 0.6253  loss_mask_1: 0.1978  loss_dice_1: 1.306  loss_ce_2: 0.583  loss_mask_2: 0.1856  loss_dice_2: 1.285  loss_ce_3: 0.5188  loss_mask_3: 0.1843  loss_dice_3: 1.217  loss_ce_4: 0.4846  loss_mask_4: 0.1862  loss_dice_4: 1.244  loss_ce_5: 0.5075  loss_mask_5: 0.1806  loss_dice_5: 1.239  loss_ce_6: 0.5067  loss_mask_6: 0.1796  loss_dice_6: 1.18  loss_ce_7: 0.4846  loss_mask_7: 0.1809  loss_dice_7: 1.207  loss_ce_8: 0.4908  loss_mask_8: 0.18  loss_dice_8: 1.207    time: 1.0540  last_time: 1.0377  data_time: 0.0688  last_data_time: 0.0706   lr: 0.0001  max_mem: 33360M
[10/17 13:47:54] d2.utils.events INFO:  eta: 0:33:15  iter: 1099  total_loss: 20.58  loss_ce: 0.4518  loss_mask: 0.1647  loss_dice: 1.302  loss_ce_0: 0.5575  loss_mask_0: 0.1879  loss_dice_0: 1.501  loss_ce_1: 0.6154  loss_mask_1: 0.181  loss_dice_1: 1.441  loss_ce_2: 0.6064  loss_mask_2: 0.1711  loss_dice_2: 1.368  loss_ce_3: 0.5327  loss_mask_3: 0.1691  loss_dice_3: 1.314  loss_ce_4: 0.5081  loss_mask_4: 0.1701  loss_dice_4: 1.337  loss_ce_5: 0.4934  loss_mask_5: 0.1694  loss_dice_5: 1.316  loss_ce_6: 0.4685  loss_mask_6: 0.1669  loss_dice_6: 1.298  loss_ce_7: 0.445  loss_mask_7: 0.1653  loss_dice_7: 1.303  loss_ce_8: 0.4604  loss_mask_8: 0.1667  loss_dice_8: 1.307    time: 1.0541  last_time: 1.0385  data_time: 0.0699  last_data_time: 0.0649   lr: 0.0001  max_mem: 33360M
[10/17 13:48:15] d2.utils.events INFO:  eta: 0:32:54  iter: 1119  total_loss: 19.42  loss_ce: 0.4939  loss_mask: 0.1638  loss_dice: 1.201  loss_ce_0: 0.5438  loss_mask_0: 0.1945  loss_dice_0: 1.41  loss_ce_1: 0.6731  loss_mask_1: 0.1742  loss_dice_1: 1.312  loss_ce_2: 0.577  loss_mask_2: 0.1689  loss_dice_2: 1.272  loss_ce_3: 0.5097  loss_mask_3: 0.1666  loss_dice_3: 1.217  loss_ce_4: 0.5147  loss_mask_4: 0.1651  loss_dice_4: 1.251  loss_ce_5: 0.5003  loss_mask_5: 0.1635  loss_dice_5: 1.216  loss_ce_6: 0.5058  loss_mask_6: 0.1629  loss_dice_6: 1.196  loss_ce_7: 0.4662  loss_mask_7: 0.1633  loss_dice_7: 1.193  loss_ce_8: 0.4714  loss_mask_8: 0.1654  loss_dice_8: 1.207    time: 1.0539  last_time: 1.0911  data_time: 0.0661  last_data_time: 0.0733   lr: 0.0001  max_mem: 33360M
[10/17 13:48:36] d2.utils.events INFO:  eta: 0:32:33  iter: 1139  total_loss: 19.81  loss_ce: 0.4416  loss_mask: 0.1651  loss_dice: 1.211  loss_ce_0: 0.5541  loss_mask_0: 0.1902  loss_dice_0: 1.408  loss_ce_1: 0.613  loss_mask_1: 0.1739  loss_dice_1: 1.306  loss_ce_2: 0.5801  loss_mask_2: 0.1691  loss_dice_2: 1.271  loss_ce_3: 0.4935  loss_mask_3: 0.168  loss_dice_3: 1.214  loss_ce_4: 0.4925  loss_mask_4: 0.1663  loss_dice_4: 1.226  loss_ce_5: 0.4777  loss_mask_5: 0.1641  loss_dice_5: 1.201  loss_ce_6: 0.4683  loss_mask_6: 0.1643  loss_dice_6: 1.175  loss_ce_7: 0.4607  loss_mask_7: 0.1642  loss_dice_7: 1.213  loss_ce_8: 0.4807  loss_mask_8: 0.1641  loss_dice_8: 1.196    time: 1.0541  last_time: 1.0149  data_time: 0.0692  last_data_time: 0.0534   lr: 0.0001  max_mem: 33360M
[10/17 13:48:57] d2.utils.events INFO:  eta: 0:32:12  iter: 1159  total_loss: 19.32  loss_ce: 0.4523  loss_mask: 0.1691  loss_dice: 1.198  loss_ce_0: 0.573  loss_mask_0: 0.2028  loss_dice_0: 1.408  loss_ce_1: 0.6062  loss_mask_1: 0.1892  loss_dice_1: 1.332  loss_ce_2: 0.5708  loss_mask_2: 0.1773  loss_dice_2: 1.274  loss_ce_3: 0.5108  loss_mask_3: 0.1709  loss_dice_3: 1.216  loss_ce_4: 0.4657  loss_mask_4: 0.1707  loss_dice_4: 1.252  loss_ce_5: 0.4962  loss_mask_5: 0.1676  loss_dice_5: 1.224  loss_ce_6: 0.449  loss_mask_6: 0.1696  loss_dice_6: 1.174  loss_ce_7: 0.4421  loss_mask_7: 0.167  loss_dice_7: 1.196  loss_ce_8: 0.4426  loss_mask_8: 0.1657  loss_dice_8: 1.21    time: 1.0543  last_time: 1.0386  data_time: 0.0699  last_data_time: 0.0734   lr: 0.0001  max_mem: 33360M
[10/17 13:49:19] d2.utils.events INFO:  eta: 0:31:51  iter: 1179  total_loss: 19.62  loss_ce: 0.4615  loss_mask: 0.1731  loss_dice: 1.174  loss_ce_0: 0.5772  loss_mask_0: 0.1817  loss_dice_0: 1.434  loss_ce_1: 0.6311  loss_mask_1: 0.177  loss_dice_1: 1.29  loss_ce_2: 0.5781  loss_mask_2: 0.1723  loss_dice_2: 1.3  loss_ce_3: 0.5234  loss_mask_3: 0.1687  loss_dice_3: 1.233  loss_ce_4: 0.4765  loss_mask_4: 0.1715  loss_dice_4: 1.217  loss_ce_5: 0.4782  loss_mask_5: 0.1732  loss_dice_5: 1.24  loss_ce_6: 0.451  loss_mask_6: 0.175  loss_dice_6: 1.206  loss_ce_7: 0.4556  loss_mask_7: 0.1752  loss_dice_7: 1.223  loss_ce_8: 0.4526  loss_mask_8: 0.1709  loss_dice_8: 1.215    time: 1.0544  last_time: 1.1249  data_time: 0.0699  last_data_time: 0.0547   lr: 0.0001  max_mem: 33360M
[10/17 13:49:40] d2.utils.events INFO:  eta: 0:31:32  iter: 1199  total_loss: 19.87  loss_ce: 0.4715  loss_mask: 0.1603  loss_dice: 1.254  loss_ce_0: 0.5723  loss_mask_0: 0.1901  loss_dice_0: 1.474  loss_ce_1: 0.656  loss_mask_1: 0.1735  loss_dice_1: 1.412  loss_ce_2: 0.6009  loss_mask_2: 0.1626  loss_dice_2: 1.345  loss_ce_3: 0.5099  loss_mask_3: 0.1641  loss_dice_3: 1.276  loss_ce_4: 0.511  loss_mask_4: 0.1641  loss_dice_4: 1.27  loss_ce_5: 0.4869  loss_mask_5: 0.1605  loss_dice_5: 1.272  loss_ce_6: 0.4964  loss_mask_6: 0.1625  loss_dice_6: 1.27  loss_ce_7: 0.4552  loss_mask_7: 0.1626  loss_dice_7: 1.302  loss_ce_8: 0.4568  loss_mask_8: 0.1612  loss_dice_8: 1.303    time: 1.0547  last_time: 1.1187  data_time: 0.0748  last_data_time: 0.0772   lr: 0.0001  max_mem: 33360M
[10/17 13:50:02] d2.utils.events INFO:  eta: 0:31:12  iter: 1219  total_loss: 20.56  loss_ce: 0.4767  loss_mask: 0.165  loss_dice: 1.283  loss_ce_0: 0.5761  loss_mask_0: 0.1972  loss_dice_0: 1.501  loss_ce_1: 0.6811  loss_mask_1: 0.1783  loss_dice_1: 1.402  loss_ce_2: 0.5942  loss_mask_2: 0.1722  loss_dice_2: 1.363  loss_ce_3: 0.5498  loss_mask_3: 0.1674  loss_dice_3: 1.294  loss_ce_4: 0.5201  loss_mask_4: 0.1714  loss_dice_4: 1.3  loss_ce_5: 0.5348  loss_mask_5: 0.1655  loss_dice_5: 1.263  loss_ce_6: 0.4999  loss_mask_6: 0.1663  loss_dice_6: 1.294  loss_ce_7: 0.472  loss_mask_7: 0.1652  loss_dice_7: 1.287  loss_ce_8: 0.4939  loss_mask_8: 0.1655  loss_dice_8: 1.315    time: 1.0549  last_time: 1.0512  data_time: 0.0730  last_data_time: 0.0586   lr: 0.0001  max_mem: 33360M
[10/17 13:50:23] d2.utils.events INFO:  eta: 0:30:53  iter: 1239  total_loss: 20.32  loss_ce: 0.462  loss_mask: 0.1719  loss_dice: 1.269  loss_ce_0: 0.5569  loss_mask_0: 0.1935  loss_dice_0: 1.48  loss_ce_1: 0.6514  loss_mask_1: 0.1844  loss_dice_1: 1.368  loss_ce_2: 0.5996  loss_mask_2: 0.176  loss_dice_2: 1.309  loss_ce_3: 0.5448  loss_mask_3: 0.1756  loss_dice_3: 1.301  loss_ce_4: 0.5169  loss_mask_4: 0.1725  loss_dice_4: 1.282  loss_ce_5: 0.5175  loss_mask_5: 0.1678  loss_dice_5: 1.299  loss_ce_6: 0.4553  loss_mask_6: 0.1718  loss_dice_6: 1.254  loss_ce_7: 0.4504  loss_mask_7: 0.1691  loss_dice_7: 1.246  loss_ce_8: 0.4582  loss_mask_8: 0.1705  loss_dice_8: 1.291    time: 1.0549  last_time: 0.9960  data_time: 0.0690  last_data_time: 0.0750   lr: 0.0001  max_mem: 33360M
[10/17 13:50:44] d2.utils.events INFO:  eta: 0:30:32  iter: 1259  total_loss: 20.74  loss_ce: 0.5242  loss_mask: 0.1731  loss_dice: 1.274  loss_ce_0: 0.5781  loss_mask_0: 0.1995  loss_dice_0: 1.453  loss_ce_1: 0.6442  loss_mask_1: 0.1853  loss_dice_1: 1.414  loss_ce_2: 0.5807  loss_mask_2: 0.1719  loss_dice_2: 1.329  loss_ce_3: 0.5376  loss_mask_3: 0.1701  loss_dice_3: 1.275  loss_ce_4: 0.5417  loss_mask_4: 0.1699  loss_dice_4: 1.307  loss_ce_5: 0.5362  loss_mask_5: 0.1703  loss_dice_5: 1.279  loss_ce_6: 0.4607  loss_mask_6: 0.1725  loss_dice_6: 1.262  loss_ce_7: 0.4848  loss_mask_7: 0.1694  loss_dice_7: 1.258  loss_ce_8: 0.4711  loss_mask_8: 0.1719  loss_dice_8: 1.25    time: 1.0551  last_time: 1.0898  data_time: 0.0715  last_data_time: 0.0782   lr: 0.0001  max_mem: 33360M
[10/17 13:51:05] d2.utils.events INFO:  eta: 0:30:11  iter: 1279  total_loss: 19.28  loss_ce: 0.4549  loss_mask: 0.1653  loss_dice: 1.147  loss_ce_0: 0.6034  loss_mask_0: 0.1998  loss_dice_0: 1.361  loss_ce_1: 0.6032  loss_mask_1: 0.1879  loss_dice_1: 1.311  loss_ce_2: 0.5787  loss_mask_2: 0.1725  loss_dice_2: 1.235  loss_ce_3: 0.5397  loss_mask_3: 0.1679  loss_dice_3: 1.186  loss_ce_4: 0.4901  loss_mask_4: 0.1665  loss_dice_4: 1.193  loss_ce_5: 0.5067  loss_mask_5: 0.1712  loss_dice_5: 1.171  loss_ce_6: 0.4809  loss_mask_6: 0.1704  loss_dice_6: 1.157  loss_ce_7: 0.4597  loss_mask_7: 0.1685  loss_dice_7: 1.16  loss_ce_8: 0.4725  loss_mask_8: 0.1689  loss_dice_8: 1.162    time: 1.0552  last_time: 1.0310  data_time: 0.0703  last_data_time: 0.0709   lr: 0.0001  max_mem: 33360M
[10/17 13:51:27] d2.utils.events INFO:  eta: 0:29:50  iter: 1299  total_loss: 19.82  loss_ce: 0.4321  loss_mask: 0.1742  loss_dice: 1.258  loss_ce_0: 0.5704  loss_mask_0: 0.1976  loss_dice_0: 1.427  loss_ce_1: 0.6097  loss_mask_1: 0.1849  loss_dice_1: 1.316  loss_ce_2: 0.5906  loss_mask_2: 0.1736  loss_dice_2: 1.308  loss_ce_3: 0.5232  loss_mask_3: 0.176  loss_dice_3: 1.278  loss_ce_4: 0.4987  loss_mask_4: 0.1757  loss_dice_4: 1.224  loss_ce_5: 0.4888  loss_mask_5: 0.1736  loss_dice_5: 1.226  loss_ce_6: 0.4592  loss_mask_6: 0.1718  loss_dice_6: 1.249  loss_ce_7: 0.4388  loss_mask_7: 0.1746  loss_dice_7: 1.242  loss_ce_8: 0.4678  loss_mask_8: 0.1738  loss_dice_8: 1.269    time: 1.0552  last_time: 1.0066  data_time: 0.0691  last_data_time: 0.0576   lr: 0.0001  max_mem: 33360M
[10/17 13:51:48] d2.utils.events INFO:  eta: 0:29:29  iter: 1319  total_loss: 20.31  loss_ce: 0.4795  loss_mask: 0.1682  loss_dice: 1.233  loss_ce_0: 0.5727  loss_mask_0: 0.192  loss_dice_0: 1.49  loss_ce_1: 0.6527  loss_mask_1: 0.1803  loss_dice_1: 1.384  loss_ce_2: 0.6149  loss_mask_2: 0.1701  loss_dice_2: 1.332  loss_ce_3: 0.548  loss_mask_3: 0.1705  loss_dice_3: 1.257  loss_ce_4: 0.5179  loss_mask_4: 0.1695  loss_dice_4: 1.248  loss_ce_5: 0.4966  loss_mask_5: 0.1685  loss_dice_5: 1.249  loss_ce_6: 0.5  loss_mask_6: 0.169  loss_dice_6: 1.247  loss_ce_7: 0.4953  loss_mask_7: 0.1689  loss_dice_7: 1.242  loss_ce_8: 0.4778  loss_mask_8: 0.1695  loss_dice_8: 1.247    time: 1.0553  last_time: 1.1276  data_time: 0.0660  last_data_time: 0.0752   lr: 0.0001  max_mem: 33360M
[10/17 13:52:09] d2.utils.events INFO:  eta: 0:29:08  iter: 1339  total_loss: 20.29  loss_ce: 0.5141  loss_mask: 0.1679  loss_dice: 1.19  loss_ce_0: 0.5601  loss_mask_0: 0.1938  loss_dice_0: 1.477  loss_ce_1: 0.6452  loss_mask_1: 0.1799  loss_dice_1: 1.389  loss_ce_2: 0.5846  loss_mask_2: 0.1684  loss_dice_2: 1.28  loss_ce_3: 0.5375  loss_mask_3: 0.1708  loss_dice_3: 1.268  loss_ce_4: 0.5224  loss_mask_4: 0.1676  loss_dice_4: 1.25  loss_ce_5: 0.5453  loss_mask_5: 0.1661  loss_dice_5: 1.269  loss_ce_6: 0.5217  loss_mask_6: 0.1694  loss_dice_6: 1.23  loss_ce_7: 0.5066  loss_mask_7: 0.1672  loss_dice_7: 1.225  loss_ce_8: 0.4868  loss_mask_8: 0.1684  loss_dice_8: 1.183    time: 1.0553  last_time: 1.0108  data_time: 0.0607  last_data_time: 0.0528   lr: 0.0001  max_mem: 33360M
[10/17 13:52:30] d2.utils.events INFO:  eta: 0:28:47  iter: 1359  total_loss: 19.88  loss_ce: 0.4873  loss_mask: 0.1639  loss_dice: 1.186  loss_ce_0: 0.5901  loss_mask_0: 0.1929  loss_dice_0: 1.384  loss_ce_1: 0.6478  loss_mask_1: 0.1739  loss_dice_1: 1.345  loss_ce_2: 0.5894  loss_mask_2: 0.1696  loss_dice_2: 1.222  loss_ce_3: 0.5117  loss_mask_3: 0.1682  loss_dice_3: 1.222  loss_ce_4: 0.5084  loss_mask_4: 0.1638  loss_dice_4: 1.213  loss_ce_5: 0.4786  loss_mask_5: 0.1622  loss_dice_5: 1.21  loss_ce_6: 0.5046  loss_mask_6: 0.1629  loss_dice_6: 1.193  loss_ce_7: 0.5095  loss_mask_7: 0.1617  loss_dice_7: 1.184  loss_ce_8: 0.5299  loss_mask_8: 0.1607  loss_dice_8: 1.176    time: 1.0550  last_time: 0.9942  data_time: 0.0628  last_data_time: 0.0579   lr: 0.0001  max_mem: 33360M
[10/17 13:52:51] d2.utils.events INFO:  eta: 0:28:25  iter: 1379  total_loss: 18.9  loss_ce: 0.4557  loss_mask: 0.1668  loss_dice: 1.135  loss_ce_0: 0.5759  loss_mask_0: 0.1906  loss_dice_0: 1.406  loss_ce_1: 0.6123  loss_mask_1: 0.1706  loss_dice_1: 1.269  loss_ce_2: 0.5433  loss_mask_2: 0.1712  loss_dice_2: 1.223  loss_ce_3: 0.4808  loss_mask_3: 0.1701  loss_dice_3: 1.143  loss_ce_4: 0.4595  loss_mask_4: 0.1703  loss_dice_4: 1.148  loss_ce_5: 0.4457  loss_mask_5: 0.1685  loss_dice_5: 1.161  loss_ce_6: 0.4456  loss_mask_6: 0.1709  loss_dice_6: 1.143  loss_ce_7: 0.4684  loss_mask_7: 0.1659  loss_dice_7: 1.148  loss_ce_8: 0.4615  loss_mask_8: 0.1643  loss_dice_8: 1.166    time: 1.0548  last_time: 1.0353  data_time: 0.0661  last_data_time: 0.0646   lr: 0.0001  max_mem: 33360M
[10/17 13:53:12] d2.utils.events INFO:  eta: 0:28:03  iter: 1399  total_loss: 20.07  loss_ce: 0.4813  loss_mask: 0.1761  loss_dice: 1.208  loss_ce_0: 0.5155  loss_mask_0: 0.2055  loss_dice_0: 1.491  loss_ce_1: 0.5652  loss_mask_1: 0.1842  loss_dice_1: 1.356  loss_ce_2: 0.5439  loss_mask_2: 0.1789  loss_dice_2: 1.294  loss_ce_3: 0.5069  loss_mask_3: 0.18  loss_dice_3: 1.271  loss_ce_4: 0.4587  loss_mask_4: 0.178  loss_dice_4: 1.235  loss_ce_5: 0.4714  loss_mask_5: 0.1769  loss_dice_5: 1.237  loss_ce_6: 0.4558  loss_mask_6: 0.1754  loss_dice_6: 1.223  loss_ce_7: 0.4901  loss_mask_7: 0.1746  loss_dice_7: 1.244  loss_ce_8: 0.4637  loss_mask_8: 0.1763  loss_dice_8: 1.2    time: 1.0546  last_time: 1.0455  data_time: 0.0628  last_data_time: 0.0675   lr: 0.0001  max_mem: 33360M
[10/17 13:53:33] d2.utils.events INFO:  eta: 0:27:43  iter: 1419  total_loss: 20.19  loss_ce: 0.494  loss_mask: 0.1596  loss_dice: 1.218  loss_ce_0: 0.5788  loss_mask_0: 0.1891  loss_dice_0: 1.427  loss_ce_1: 0.6588  loss_mask_1: 0.1654  loss_dice_1: 1.368  loss_ce_2: 0.6297  loss_mask_2: 0.1588  loss_dice_2: 1.318  loss_ce_3: 0.5646  loss_mask_3: 0.1583  loss_dice_3: 1.286  loss_ce_4: 0.5294  loss_mask_4: 0.1604  loss_dice_4: 1.257  loss_ce_5: 0.5356  loss_mask_5: 0.16  loss_dice_5: 1.246  loss_ce_6: 0.5132  loss_mask_6: 0.1606  loss_dice_6: 1.254  loss_ce_7: 0.5082  loss_mask_7: 0.1595  loss_dice_7: 1.223  loss_ce_8: 0.5202  loss_mask_8: 0.1604  loss_dice_8: 1.212    time: 1.0547  last_time: 1.0475  data_time: 0.0708  last_data_time: 0.0510   lr: 0.0001  max_mem: 33360M
[10/17 13:53:54] d2.utils.events INFO:  eta: 0:27:21  iter: 1439  total_loss: 19.47  loss_ce: 0.4407  loss_mask: 0.1578  loss_dice: 1.214  loss_ce_0: 0.5591  loss_mask_0: 0.1962  loss_dice_0: 1.438  loss_ce_1: 0.6282  loss_mask_1: 0.1738  loss_dice_1: 1.315  loss_ce_2: 0.5592  loss_mask_2: 0.1679  loss_dice_2: 1.282  loss_ce_3: 0.5051  loss_mask_3: 0.1647  loss_dice_3: 1.224  loss_ce_4: 0.5041  loss_mask_4: 0.1619  loss_dice_4: 1.157  loss_ce_5: 0.4717  loss_mask_5: 0.1596  loss_dice_5: 1.224  loss_ce_6: 0.4621  loss_mask_6: 0.1611  loss_dice_6: 1.174  loss_ce_7: 0.4387  loss_mask_7: 0.1582  loss_dice_7: 1.211  loss_ce_8: 0.4764  loss_mask_8: 0.1601  loss_dice_8: 1.177    time: 1.0547  last_time: 1.0388  data_time: 0.0693  last_data_time: 0.0685   lr: 0.0001  max_mem: 33360M
[10/17 13:54:15] d2.utils.events INFO:  eta: 0:27:01  iter: 1459  total_loss: 19.71  loss_ce: 0.442  loss_mask: 0.1792  loss_dice: 1.231  loss_ce_0: 0.5037  loss_mask_0: 0.1919  loss_dice_0: 1.408  loss_ce_1: 0.6076  loss_mask_1: 0.1882  loss_dice_1: 1.31  loss_ce_2: 0.5449  loss_mask_2: 0.182  loss_dice_2: 1.305  loss_ce_3: 0.4891  loss_mask_3: 0.1844  loss_dice_3: 1.217  loss_ce_4: 0.4524  loss_mask_4: 0.1812  loss_dice_4: 1.231  loss_ce_5: 0.4711  loss_mask_5: 0.1823  loss_dice_5: 1.25  loss_ce_6: 0.4839  loss_mask_6: 0.1841  loss_dice_6: 1.21  loss_ce_7: 0.4254  loss_mask_7: 0.1818  loss_dice_7: 1.247  loss_ce_8: 0.4551  loss_mask_8: 0.179  loss_dice_8: 1.195    time: 1.0547  last_time: 1.0531  data_time: 0.0715  last_data_time: 0.0812   lr: 0.0001  max_mem: 33360M
[10/17 13:54:37] d2.utils.events INFO:  eta: 0:26:40  iter: 1479  total_loss: 19.99  loss_ce: 0.4872  loss_mask: 0.1553  loss_dice: 1.24  loss_ce_0: 0.579  loss_mask_0: 0.185  loss_dice_0: 1.422  loss_ce_1: 0.6428  loss_mask_1: 0.1689  loss_dice_1: 1.4  loss_ce_2: 0.5753  loss_mask_2: 0.1653  loss_dice_2: 1.329  loss_ce_3: 0.4891  loss_mask_3: 0.1596  loss_dice_3: 1.259  loss_ce_4: 0.5166  loss_mask_4: 0.1604  loss_dice_4: 1.241  loss_ce_5: 0.4981  loss_mask_5: 0.1571  loss_dice_5: 1.288  loss_ce_6: 0.5004  loss_mask_6: 0.1582  loss_dice_6: 1.289  loss_ce_7: 0.4819  loss_mask_7: 0.1564  loss_dice_7: 1.273  loss_ce_8: 0.475  loss_mask_8: 0.1563  loss_dice_8: 1.246    time: 1.0549  last_time: 1.0699  data_time: 0.0751  last_data_time: 0.0799   lr: 0.0001  max_mem: 33360M
[10/17 13:54:58] d2.utils.events INFO:  eta: 0:26:18  iter: 1499  total_loss: 19.03  loss_ce: 0.4786  loss_mask: 0.1633  loss_dice: 1.186  loss_ce_0: 0.5579  loss_mask_0: 0.196  loss_dice_0: 1.391  loss_ce_1: 0.6169  loss_mask_1: 0.1808  loss_dice_1: 1.335  loss_ce_2: 0.5557  loss_mask_2: 0.1746  loss_dice_2: 1.256  loss_ce_3: 0.478  loss_mask_3: 0.1708  loss_dice_3: 1.226  loss_ce_4: 0.4691  loss_mask_4: 0.1703  loss_dice_4: 1.206  loss_ce_5: 0.4643  loss_mask_5: 0.1671  loss_dice_5: 1.213  loss_ce_6: 0.4561  loss_mask_6: 0.164  loss_dice_6: 1.178  loss_ce_7: 0.4432  loss_mask_7: 0.1639  loss_dice_7: 1.189  loss_ce_8: 0.453  loss_mask_8: 0.1635  loss_dice_8: 1.172    time: 1.0550  last_time: 1.0523  data_time: 0.0712  last_data_time: 0.0765   lr: 0.0001  max_mem: 33360M
[10/17 13:55:19] d2.utils.events INFO:  eta: 0:25:58  iter: 1519  total_loss: 19.87  loss_ce: 0.4893  loss_mask: 0.178  loss_dice: 1.259  loss_ce_0: 0.5193  loss_mask_0: 0.1989  loss_dice_0: 1.452  loss_ce_1: 0.5768  loss_mask_1: 0.1897  loss_dice_1: 1.391  loss_ce_2: 0.5655  loss_mask_2: 0.1781  loss_dice_2: 1.338  loss_ce_3: 0.5131  loss_mask_3: 0.1808  loss_dice_3: 1.273  loss_ce_4: 0.4924  loss_mask_4: 0.1812  loss_dice_4: 1.29  loss_ce_5: 0.4956  loss_mask_5: 0.1792  loss_dice_5: 1.278  loss_ce_6: 0.4541  loss_mask_6: 0.1797  loss_dice_6: 1.263  loss_ce_7: 0.4437  loss_mask_7: 0.1787  loss_dice_7: 1.262  loss_ce_8: 0.4719  loss_mask_8: 0.18  loss_dice_8: 1.264    time: 1.0550  last_time: 1.0510  data_time: 0.0728  last_data_time: 0.0761   lr: 0.0001  max_mem: 33360M
[10/17 13:55:40] d2.utils.events INFO:  eta: 0:25:36  iter: 1539  total_loss: 18.96  loss_ce: 0.446  loss_mask: 0.1638  loss_dice: 1.181  loss_ce_0: 0.5815  loss_mask_0: 0.1845  loss_dice_0: 1.397  loss_ce_1: 0.5944  loss_mask_1: 0.1777  loss_dice_1: 1.309  loss_ce_2: 0.5546  loss_mask_2: 0.1655  loss_dice_2: 1.249  loss_ce_3: 0.5127  loss_mask_3: 0.165  loss_dice_3: 1.219  loss_ce_4: 0.4765  loss_mask_4: 0.1637  loss_dice_4: 1.218  loss_ce_5: 0.4662  loss_mask_5: 0.1619  loss_dice_5: 1.182  loss_ce_6: 0.4424  loss_mask_6: 0.1638  loss_dice_6: 1.163  loss_ce_7: 0.4311  loss_mask_7: 0.1648  loss_dice_7: 1.201  loss_ce_8: 0.4669  loss_mask_8: 0.1642  loss_dice_8: 1.147    time: 1.0550  last_time: 1.0474  data_time: 0.0681  last_data_time: 0.0766   lr: 0.0001  max_mem: 33360M
[10/17 13:56:01] d2.utils.events INFO:  eta: 0:25:14  iter: 1559  total_loss: 18.66  loss_ce: 0.4424  loss_mask: 0.1614  loss_dice: 1.18  loss_ce_0: 0.5336  loss_mask_0: 0.1905  loss_dice_0: 1.416  loss_ce_1: 0.6159  loss_mask_1: 0.1738  loss_dice_1: 1.306  loss_ce_2: 0.5702  loss_mask_2: 0.1642  loss_dice_2: 1.245  loss_ce_3: 0.4963  loss_mask_3: 0.1628  loss_dice_3: 1.185  loss_ce_4: 0.4509  loss_mask_4: 0.1645  loss_dice_4: 1.207  loss_ce_5: 0.4545  loss_mask_5: 0.1589  loss_dice_5: 1.207  loss_ce_6: 0.4324  loss_mask_6: 0.1611  loss_dice_6: 1.168  loss_ce_7: 0.4311  loss_mask_7: 0.1633  loss_dice_7: 1.175  loss_ce_8: 0.4478  loss_mask_8: 0.1605  loss_dice_8: 1.165    time: 1.0549  last_time: 1.0623  data_time: 0.0626  last_data_time: 0.0713   lr: 0.0001  max_mem: 33360M
[10/17 13:56:23] d2.utils.events INFO:  eta: 0:24:54  iter: 1579  total_loss: 19.87  loss_ce: 0.4725  loss_mask: 0.1639  loss_dice: 1.234  loss_ce_0: 0.5956  loss_mask_0: 0.1866  loss_dice_0: 1.457  loss_ce_1: 0.6524  loss_mask_1: 0.1811  loss_dice_1: 1.388  loss_ce_2: 0.578  loss_mask_2: 0.1672  loss_dice_2: 1.31  loss_ce_3: 0.5231  loss_mask_3: 0.1653  loss_dice_3: 1.279  loss_ce_4: 0.5131  loss_mask_4: 0.1613  loss_dice_4: 1.271  loss_ce_5: 0.514  loss_mask_5: 0.1655  loss_dice_5: 1.238  loss_ce_6: 0.4854  loss_mask_6: 0.1644  loss_dice_6: 1.232  loss_ce_7: 0.468  loss_mask_7: 0.161  loss_dice_7: 1.235  loss_ce_8: 0.4871  loss_mask_8: 0.1612  loss_dice_8: 1.244    time: 1.0550  last_time: 1.1222  data_time: 0.0743  last_data_time: 0.0840   lr: 0.0001  max_mem: 33360M
[10/17 13:56:44] d2.utils.events INFO:  eta: 0:24:32  iter: 1599  total_loss: 18.86  loss_ce: 0.4289  loss_mask: 0.1775  loss_dice: 1.211  loss_ce_0: 0.5525  loss_mask_0: 0.1869  loss_dice_0: 1.389  loss_ce_1: 0.5786  loss_mask_1: 0.1789  loss_dice_1: 1.321  loss_ce_2: 0.5414  loss_mask_2: 0.1799  loss_dice_2: 1.283  loss_ce_3: 0.4999  loss_mask_3: 0.1775  loss_dice_3: 1.194  loss_ce_4: 0.4621  loss_mask_4: 0.1805  loss_dice_4: 1.209  loss_ce_5: 0.4655  loss_mask_5: 0.1776  loss_dice_5: 1.228  loss_ce_6: 0.4492  loss_mask_6: 0.1785  loss_dice_6: 1.204  loss_ce_7: 0.3982  loss_mask_7: 0.1781  loss_dice_7: 1.206  loss_ce_8: 0.4058  loss_mask_8: 0.1769  loss_dice_8: 1.221    time: 1.0549  last_time: 1.0241  data_time: 0.0657  last_data_time: 0.0646   lr: 0.0001  max_mem: 33360M
[10/17 13:57:05] d2.utils.events INFO:  eta: 0:24:12  iter: 1619  total_loss: 19.64  loss_ce: 0.4322  loss_mask: 0.1758  loss_dice: 1.281  loss_ce_0: 0.5831  loss_mask_0: 0.1955  loss_dice_0: 1.48  loss_ce_1: 0.643  loss_mask_1: 0.194  loss_dice_1: 1.405  loss_ce_2: 0.5723  loss_mask_2: 0.1753  loss_dice_2: 1.356  loss_ce_3: 0.5172  loss_mask_3: 0.1758  loss_dice_3: 1.315  loss_ce_4: 0.4738  loss_mask_4: 0.1771  loss_dice_4: 1.297  loss_ce_5: 0.4517  loss_mask_5: 0.1762  loss_dice_5: 1.271  loss_ce_6: 0.4176  loss_mask_6: 0.1756  loss_dice_6: 1.279  loss_ce_7: 0.4392  loss_mask_7: 0.1795  loss_dice_7: 1.3  loss_ce_8: 0.4252  loss_mask_8: 0.1778  loss_dice_8: 1.261    time: 1.0553  last_time: 1.0255  data_time: 0.0864  last_data_time: 0.0745   lr: 0.0001  max_mem: 33360M
[10/17 13:57:27] d2.utils.events INFO:  eta: 0:23:50  iter: 1639  total_loss: 20.48  loss_ce: 0.5096  loss_mask: 0.1694  loss_dice: 1.275  loss_ce_0: 0.6048  loss_mask_0: 0.1884  loss_dice_0: 1.432  loss_ce_1: 0.673  loss_mask_1: 0.1813  loss_dice_1: 1.386  loss_ce_2: 0.6049  loss_mask_2: 0.1693  loss_dice_2: 1.323  loss_ce_3: 0.5866  loss_mask_3: 0.1741  loss_dice_3: 1.283  loss_ce_4: 0.5577  loss_mask_4: 0.1719  loss_dice_4: 1.268  loss_ce_5: 0.5154  loss_mask_5: 0.1716  loss_dice_5: 1.252  loss_ce_6: 0.4951  loss_mask_6: 0.1705  loss_dice_6: 1.273  loss_ce_7: 0.4909  loss_mask_7: 0.17  loss_dice_7: 1.252  loss_ce_8: 0.5432  loss_mask_8: 0.1672  loss_dice_8: 1.272    time: 1.0552  last_time: 1.0412  data_time: 0.0702  last_data_time: 0.0635   lr: 0.0001  max_mem: 33360M
[10/17 13:57:48] d2.utils.events INFO:  eta: 0:23:30  iter: 1659  total_loss: 19.18  loss_ce: 0.4466  loss_mask: 0.162  loss_dice: 1.186  loss_ce_0: 0.5229  loss_mask_0: 0.1848  loss_dice_0: 1.406  loss_ce_1: 0.5728  loss_mask_1: 0.1723  loss_dice_1: 1.283  loss_ce_2: 0.5283  loss_mask_2: 0.1689  loss_dice_2: 1.274  loss_ce_3: 0.4782  loss_mask_3: 0.1649  loss_dice_3: 1.196  loss_ce_4: 0.4162  loss_mask_4: 0.1655  loss_dice_4: 1.203  loss_ce_5: 0.4538  loss_mask_5: 0.1623  loss_dice_5: 1.216  loss_ce_6: 0.4147  loss_mask_6: 0.1633  loss_dice_6: 1.178  loss_ce_7: 0.4203  loss_mask_7: 0.1628  loss_dice_7: 1.213  loss_ce_8: 0.4111  loss_mask_8: 0.161  loss_dice_8: 1.17    time: 1.0553  last_time: 1.1525  data_time: 0.0700  last_data_time: 0.0522   lr: 0.0001  max_mem: 33360M
[10/17 13:58:09] d2.utils.events INFO:  eta: 0:23:09  iter: 1679  total_loss: 20.41  loss_ce: 0.4717  loss_mask: 0.1628  loss_dice: 1.295  loss_ce_0: 0.5596  loss_mask_0: 0.1966  loss_dice_0: 1.49  loss_ce_1: 0.6188  loss_mask_1: 0.1764  loss_dice_1: 1.424  loss_ce_2: 0.5521  loss_mask_2: 0.1701  loss_dice_2: 1.383  loss_ce_3: 0.5085  loss_mask_3: 0.1655  loss_dice_3: 1.341  loss_ce_4: 0.5116  loss_mask_4: 0.166  loss_dice_4: 1.327  loss_ce_5: 0.4987  loss_mask_5: 0.1613  loss_dice_5: 1.336  loss_ce_6: 0.4446  loss_mask_6: 0.1637  loss_dice_6: 1.319  loss_ce_7: 0.4515  loss_mask_7: 0.1615  loss_dice_7: 1.309  loss_ce_8: 0.4735  loss_mask_8: 0.1624  loss_dice_8: 1.319    time: 1.0554  last_time: 1.0644  data_time: 0.0731  last_data_time: 0.0791   lr: 0.0001  max_mem: 33360M
[10/17 13:58:31] d2.utils.events INFO:  eta: 0:22:48  iter: 1699  total_loss: 19.68  loss_ce: 0.4897  loss_mask: 0.1672  loss_dice: 1.194  loss_ce_0: 0.5554  loss_mask_0: 0.2071  loss_dice_0: 1.424  loss_ce_1: 0.6521  loss_mask_1: 0.1825  loss_dice_1: 1.316  loss_ce_2: 0.5798  loss_mask_2: 0.1732  loss_dice_2: 1.292  loss_ce_3: 0.5142  loss_mask_3: 0.1773  loss_dice_3: 1.238  loss_ce_4: 0.5028  loss_mask_4: 0.1719  loss_dice_4: 1.185  loss_ce_5: 0.5011  loss_mask_5: 0.1712  loss_dice_5: 1.213  loss_ce_6: 0.474  loss_mask_6: 0.17  loss_dice_6: 1.237  loss_ce_7: 0.507  loss_mask_7: 0.1681  loss_dice_7: 1.218  loss_ce_8: 0.5043  loss_mask_8: 0.1681  loss_dice_8: 1.189    time: 1.0555  last_time: 1.0663  data_time: 0.0713  last_data_time: 0.0950   lr: 0.0001  max_mem: 33360M
[10/17 13:58:52] d2.utils.events INFO:  eta: 0:22:27  iter: 1719  total_loss: 19.33  loss_ce: 0.4599  loss_mask: 0.1595  loss_dice: 1.232  loss_ce_0: 0.5651  loss_mask_0: 0.1866  loss_dice_0: 1.485  loss_ce_1: 0.6451  loss_mask_1: 0.1677  loss_dice_1: 1.345  loss_ce_2: 0.6009  loss_mask_2: 0.159  loss_dice_2: 1.301  loss_ce_3: 0.5097  loss_mask_3: 0.1613  loss_dice_3: 1.279  loss_ce_4: 0.4583  loss_mask_4: 0.1593  loss_dice_4: 1.256  loss_ce_5: 0.4871  loss_mask_5: 0.159  loss_dice_5: 1.214  loss_ce_6: 0.4372  loss_mask_6: 0.1594  loss_dice_6: 1.209  loss_ce_7: 0.4447  loss_mask_7: 0.1577  loss_dice_7: 1.241  loss_ce_8: 0.4648  loss_mask_8: 0.1582  loss_dice_8: 1.226    time: 1.0556  last_time: 1.0747  data_time: 0.0704  last_data_time: 0.0767   lr: 0.0001  max_mem: 33360M
[10/17 13:59:13] d2.utils.events INFO:  eta: 0:22:06  iter: 1739  total_loss: 18.39  loss_ce: 0.4697  loss_mask: 0.1657  loss_dice: 1.139  loss_ce_0: 0.5719  loss_mask_0: 0.1906  loss_dice_0: 1.352  loss_ce_1: 0.6385  loss_mask_1: 0.1773  loss_dice_1: 1.269  loss_ce_2: 0.5551  loss_mask_2: 0.1713  loss_dice_2: 1.219  loss_ce_3: 0.5007  loss_mask_3: 0.172  loss_dice_3: 1.179  loss_ce_4: 0.4913  loss_mask_4: 0.1677  loss_dice_4: 1.162  loss_ce_5: 0.4466  loss_mask_5: 0.1647  loss_dice_5: 1.154  loss_ce_6: 0.4667  loss_mask_6: 0.1645  loss_dice_6: 1.157  loss_ce_7: 0.4604  loss_mask_7: 0.1656  loss_dice_7: 1.15  loss_ce_8: 0.4663  loss_mask_8: 0.1643  loss_dice_8: 1.131    time: 1.0556  last_time: 1.0078  data_time: 0.0728  last_data_time: 0.0766   lr: 0.0001  max_mem: 33360M
[10/17 13:59:34] d2.utils.events INFO:  eta: 0:21:45  iter: 1759  total_loss: 18.39  loss_ce: 0.4305  loss_mask: 0.1542  loss_dice: 1.14  loss_ce_0: 0.5079  loss_mask_0: 0.181  loss_dice_0: 1.409  loss_ce_1: 0.5826  loss_mask_1: 0.1739  loss_dice_1: 1.287  loss_ce_2: 0.5036  loss_mask_2: 0.1541  loss_dice_2: 1.253  loss_ce_3: 0.467  loss_mask_3: 0.1559  loss_dice_3: 1.203  loss_ce_4: 0.4525  loss_mask_4: 0.1546  loss_dice_4: 1.18  loss_ce_5: 0.4459  loss_mask_5: 0.1534  loss_dice_5: 1.149  loss_ce_6: 0.4326  loss_mask_6: 0.1559  loss_dice_6: 1.15  loss_ce_7: 0.4122  loss_mask_7: 0.154  loss_dice_7: 1.117  loss_ce_8: 0.44  loss_mask_8: 0.1537  loss_dice_8: 1.162    time: 1.0554  last_time: 1.0426  data_time: 0.0581  last_data_time: 0.0732   lr: 0.0001  max_mem: 33360M
[10/17 13:59:55] d2.utils.events INFO:  eta: 0:21:24  iter: 1779  total_loss: 20.57  loss_ce: 0.5001  loss_mask: 0.1458  loss_dice: 1.266  loss_ce_0: 0.5702  loss_mask_0: 0.1757  loss_dice_0: 1.555  loss_ce_1: 0.6488  loss_mask_1: 0.164  loss_dice_1: 1.421  loss_ce_2: 0.5993  loss_mask_2: 0.1528  loss_dice_2: 1.365  loss_ce_3: 0.5129  loss_mask_3: 0.1493  loss_dice_3: 1.297  loss_ce_4: 0.5172  loss_mask_4: 0.1498  loss_dice_4: 1.281  loss_ce_5: 0.5174  loss_mask_5: 0.1494  loss_dice_5: 1.295  loss_ce_6: 0.4835  loss_mask_6: 0.1493  loss_dice_6: 1.248  loss_ce_7: 0.4977  loss_mask_7: 0.1483  loss_dice_7: 1.314  loss_ce_8: 0.5049  loss_mask_8: 0.1464  loss_dice_8: 1.29    time: 1.0556  last_time: 1.0774  data_time: 0.0760  last_data_time: 0.0739   lr: 0.0001  max_mem: 33360M
[10/17 14:00:16] d2.utils.events INFO:  eta: 0:21:03  iter: 1799  total_loss: 19.5  loss_ce: 0.4744  loss_mask: 0.1664  loss_dice: 1.207  loss_ce_0: 0.5453  loss_mask_0: 0.1925  loss_dice_0: 1.369  loss_ce_1: 0.6139  loss_mask_1: 0.1786  loss_dice_1: 1.307  loss_ce_2: 0.5294  loss_mask_2: 0.1746  loss_dice_2: 1.232  loss_ce_3: 0.4723  loss_mask_3: 0.1742  loss_dice_3: 1.237  loss_ce_4: 0.4681  loss_mask_4: 0.1723  loss_dice_4: 1.202  loss_ce_5: 0.4354  loss_mask_5: 0.1744  loss_dice_5: 1.194  loss_ce_6: 0.4477  loss_mask_6: 0.1683  loss_dice_6: 1.191  loss_ce_7: 0.4417  loss_mask_7: 0.1677  loss_dice_7: 1.198  loss_ce_8: 0.4277  loss_mask_8: 0.1661  loss_dice_8: 1.194    time: 1.0555  last_time: 1.0399  data_time: 0.0689  last_data_time: 0.0531   lr: 0.0001  max_mem: 33360M
[10/17 14:00:38] d2.utils.events INFO:  eta: 0:20:41  iter: 1819  total_loss: 19.03  loss_ce: 0.4517  loss_mask: 0.1613  loss_dice: 1.161  loss_ce_0: 0.5526  loss_mask_0: 0.186  loss_dice_0: 1.371  loss_ce_1: 0.5796  loss_mask_1: 0.1697  loss_dice_1: 1.319  loss_ce_2: 0.5135  loss_mask_2: 0.1608  loss_dice_2: 1.237  loss_ce_3: 0.4878  loss_mask_3: 0.1579  loss_dice_3: 1.185  loss_ce_4: 0.4597  loss_mask_4: 0.1601  loss_dice_4: 1.22  loss_ce_5: 0.4435  loss_mask_5: 0.1612  loss_dice_5: 1.211  loss_ce_6: 0.4338  loss_mask_6: 0.16  loss_dice_6: 1.156  loss_ce_7: 0.4599  loss_mask_7: 0.1582  loss_dice_7: 1.166  loss_ce_8: 0.4444  loss_mask_8: 0.1599  loss_dice_8: 1.161    time: 1.0555  last_time: 1.0341  data_time: 0.0721  last_data_time: 0.0698   lr: 0.0001  max_mem: 33431M
[10/17 14:00:59] d2.utils.events INFO:  eta: 0:20:20  iter: 1839  total_loss: 19.47  loss_ce: 0.4722  loss_mask: 0.1649  loss_dice: 1.173  loss_ce_0: 0.5445  loss_mask_0: 0.2011  loss_dice_0: 1.414  loss_ce_1: 0.6042  loss_mask_1: 0.1811  loss_dice_1: 1.359  loss_ce_2: 0.5666  loss_mask_2: 0.1746  loss_dice_2: 1.264  loss_ce_3: 0.5052  loss_mask_3: 0.1694  loss_dice_3: 1.221  loss_ce_4: 0.4917  loss_mask_4: 0.1695  loss_dice_4: 1.218  loss_ce_5: 0.4817  loss_mask_5: 0.1667  loss_dice_5: 1.22  loss_ce_6: 0.457  loss_mask_6: 0.1649  loss_dice_6: 1.189  loss_ce_7: 0.4456  loss_mask_7: 0.1664  loss_dice_7: 1.15  loss_ce_8: 0.4584  loss_mask_8: 0.1648  loss_dice_8: 1.185    time: 1.0555  last_time: 1.0461  data_time: 0.0709  last_data_time: 0.0859   lr: 0.0001  max_mem: 33431M
[10/17 14:01:20] d2.utils.events INFO:  eta: 0:20:00  iter: 1859  total_loss: 19  loss_ce: 0.4627  loss_mask: 0.1606  loss_dice: 1.213  loss_ce_0: 0.5571  loss_mask_0: 0.1884  loss_dice_0: 1.354  loss_ce_1: 0.5864  loss_mask_1: 0.1748  loss_dice_1: 1.368  loss_ce_2: 0.5582  loss_mask_2: 0.1637  loss_dice_2: 1.255  loss_ce_3: 0.5024  loss_mask_3: 0.1647  loss_dice_3: 1.194  loss_ce_4: 0.4553  loss_mask_4: 0.1641  loss_dice_4: 1.18  loss_ce_5: 0.4774  loss_mask_5: 0.1625  loss_dice_5: 1.165  loss_ce_6: 0.4684  loss_mask_6: 0.1617  loss_dice_6: 1.171  loss_ce_7: 0.4748  loss_mask_7: 0.1626  loss_dice_7: 1.179  loss_ce_8: 0.4767  loss_mask_8: 0.1602  loss_dice_8: 1.177    time: 1.0556  last_time: 1.0862  data_time: 0.0727  last_data_time: 0.0573   lr: 0.0001  max_mem: 33431M
[10/17 14:01:42] d2.utils.events INFO:  eta: 0:19:38  iter: 1879  total_loss: 19.31  loss_ce: 0.453  loss_mask: 0.1535  loss_dice: 1.224  loss_ce_0: 0.5282  loss_mask_0: 0.1928  loss_dice_0: 1.471  loss_ce_1: 0.6085  loss_mask_1: 0.1771  loss_dice_1: 1.377  loss_ce_2: 0.5465  loss_mask_2: 0.1614  loss_dice_2: 1.327  loss_ce_3: 0.4796  loss_mask_3: 0.1597  loss_dice_3: 1.244  loss_ce_4: 0.4554  loss_mask_4: 0.1585  loss_dice_4: 1.256  loss_ce_5: 0.4528  loss_mask_5: 0.1521  loss_dice_5: 1.261  loss_ce_6: 0.44  loss_mask_6: 0.1525  loss_dice_6: 1.203  loss_ce_7: 0.4337  loss_mask_7: 0.1524  loss_dice_7: 1.209  loss_ce_8: 0.4414  loss_mask_8: 0.1561  loss_dice_8: 1.204    time: 1.0557  last_time: 1.0578  data_time: 0.0755  last_data_time: 0.0850   lr: 0.0001  max_mem: 33431M
[10/17 14:02:03] d2.utils.events INFO:  eta: 0:19:18  iter: 1899  total_loss: 19.61  loss_ce: 0.4365  loss_mask: 0.1611  loss_dice: 1.211  loss_ce_0: 0.5387  loss_mask_0: 0.1797  loss_dice_0: 1.477  loss_ce_1: 0.6429  loss_mask_1: 0.1705  loss_dice_1: 1.37  loss_ce_2: 0.5609  loss_mask_2: 0.1645  loss_dice_2: 1.298  loss_ce_3: 0.4901  loss_mask_3: 0.1635  loss_dice_3: 1.297  loss_ce_4: 0.454  loss_mask_4: 0.1637  loss_dice_4: 1.266  loss_ce_5: 0.4686  loss_mask_5: 0.162  loss_dice_5: 1.296  loss_ce_6: 0.4485  loss_mask_6: 0.1636  loss_dice_6: 1.261  loss_ce_7: 0.4567  loss_mask_7: 0.1626  loss_dice_7: 1.29  loss_ce_8: 0.4657  loss_mask_8: 0.1601  loss_dice_8: 1.256    time: 1.0557  last_time: 1.0366  data_time: 0.0714  last_data_time: 0.0711   lr: 0.0001  max_mem: 33431M
[10/17 14:02:24] d2.utils.events INFO:  eta: 0:18:57  iter: 1919  total_loss: 18.43  loss_ce: 0.4144  loss_mask: 0.157  loss_dice: 1.167  loss_ce_0: 0.5243  loss_mask_0: 0.1798  loss_dice_0: 1.378  loss_ce_1: 0.5882  loss_mask_1: 0.165  loss_dice_1: 1.271  loss_ce_2: 0.5093  loss_mask_2: 0.1584  loss_dice_2: 1.242  loss_ce_3: 0.4496  loss_mask_3: 0.1594  loss_dice_3: 1.195  loss_ce_4: 0.4416  loss_mask_4: 0.1574  loss_dice_4: 1.171  loss_ce_5: 0.4386  loss_mask_5: 0.1563  loss_dice_5: 1.171  loss_ce_6: 0.4304  loss_mask_6: 0.1564  loss_dice_6: 1.173  loss_ce_7: 0.4154  loss_mask_7: 0.1578  loss_dice_7: 1.164  loss_ce_8: 0.4431  loss_mask_8: 0.1581  loss_dice_8: 1.167    time: 1.0556  last_time: 1.0329  data_time: 0.0706  last_data_time: 0.0652   lr: 0.0001  max_mem: 33431M
[10/17 14:02:45] d2.utils.events INFO:  eta: 0:18:36  iter: 1939  total_loss: 19.08  loss_ce: 0.4389  loss_mask: 0.1643  loss_dice: 1.204  loss_ce_0: 0.5283  loss_mask_0: 0.1979  loss_dice_0: 1.456  loss_ce_1: 0.6143  loss_mask_1: 0.1763  loss_dice_1: 1.359  loss_ce_2: 0.5596  loss_mask_2: 0.172  loss_dice_2: 1.294  loss_ce_3: 0.4578  loss_mask_3: 0.1689  loss_dice_3: 1.223  loss_ce_4: 0.4483  loss_mask_4: 0.1678  loss_dice_4: 1.21  loss_ce_5: 0.4419  loss_mask_5: 0.1644  loss_dice_5: 1.258  loss_ce_6: 0.4317  loss_mask_6: 0.1636  loss_dice_6: 1.207  loss_ce_7: 0.4367  loss_mask_7: 0.1642  loss_dice_7: 1.2  loss_ce_8: 0.4445  loss_mask_8: 0.1646  loss_dice_8: 1.195    time: 1.0556  last_time: 1.0518  data_time: 0.0715  last_data_time: 0.0680   lr: 0.0001  max_mem: 33431M
[10/17 14:03:06] d2.utils.events INFO:  eta: 0:18:15  iter: 1959  total_loss: 19.3  loss_ce: 0.4722  loss_mask: 0.1608  loss_dice: 1.198  loss_ce_0: 0.5578  loss_mask_0: 0.1991  loss_dice_0: 1.386  loss_ce_1: 0.6104  loss_mask_1: 0.1789  loss_dice_1: 1.336  loss_ce_2: 0.5718  loss_mask_2: 0.1724  loss_dice_2: 1.268  loss_ce_3: 0.5199  loss_mask_3: 0.1655  loss_dice_3: 1.226  loss_ce_4: 0.4876  loss_mask_4: 0.1634  loss_dice_4: 1.238  loss_ce_5: 0.4829  loss_mask_5: 0.1616  loss_dice_5: 1.214  loss_ce_6: 0.4633  loss_mask_6: 0.1598  loss_dice_6: 1.169  loss_ce_7: 0.487  loss_mask_7: 0.159  loss_dice_7: 1.164  loss_ce_8: 0.4769  loss_mask_8: 0.1593  loss_dice_8: 1.182    time: 1.0556  last_time: 1.0492  data_time: 0.0691  last_data_time: 0.0807   lr: 0.0001  max_mem: 33431M
[10/17 14:03:27] d2.utils.events INFO:  eta: 0:17:54  iter: 1979  total_loss: 18.72  loss_ce: 0.4284  loss_mask: 0.1579  loss_dice: 1.16  loss_ce_0: 0.57  loss_mask_0: 0.191  loss_dice_0: 1.368  loss_ce_1: 0.6133  loss_mask_1: 0.1716  loss_dice_1: 1.302  loss_ce_2: 0.5657  loss_mask_2: 0.1673  loss_dice_2: 1.22  loss_ce_3: 0.45  loss_mask_3: 0.1634  loss_dice_3: 1.183  loss_ce_4: 0.4512  loss_mask_4: 0.1623  loss_dice_4: 1.188  loss_ce_5: 0.4451  loss_mask_5: 0.1593  loss_dice_5: 1.151  loss_ce_6: 0.403  loss_mask_6: 0.159  loss_dice_6: 1.178  loss_ce_7: 0.4249  loss_mask_7: 0.1609  loss_dice_7: 1.144  loss_ce_8: 0.4273  loss_mask_8: 0.1581  loss_dice_8: 1.185    time: 1.0557  last_time: 1.0601  data_time: 0.0722  last_data_time: 0.0888   lr: 0.0001  max_mem: 33431M
[10/17 14:03:48] d2.utils.events INFO:  eta: 0:17:32  iter: 1999  total_loss: 19.48  loss_ce: 0.4407  loss_mask: 0.1732  loss_dice: 1.196  loss_ce_0: 0.5557  loss_mask_0: 0.1964  loss_dice_0: 1.434  loss_ce_1: 0.6118  loss_mask_1: 0.1842  loss_dice_1: 1.344  loss_ce_2: 0.5465  loss_mask_2: 0.1751  loss_dice_2: 1.275  loss_ce_3: 0.4843  loss_mask_3: 0.1757  loss_dice_3: 1.204  loss_ce_4: 0.4596  loss_mask_4: 0.174  loss_dice_4: 1.254  loss_ce_5: 0.4482  loss_mask_5: 0.1735  loss_dice_5: 1.235  loss_ce_6: 0.4344  loss_mask_6: 0.1759  loss_dice_6: 1.209  loss_ce_7: 0.4478  loss_mask_7: 0.1719  loss_dice_7: 1.197  loss_ce_8: 0.4636  loss_mask_8: 0.1736  loss_dice_8: 1.205    time: 1.0556  last_time: 1.0026  data_time: 0.0643  last_data_time: 0.0536   lr: 0.0001  max_mem: 33431M
[10/17 14:04:10] d2.utils.events INFO:  eta: 0:17:11  iter: 2019  total_loss: 18.85  loss_ce: 0.4426  loss_mask: 0.1591  loss_dice: 1.192  loss_ce_0: 0.5582  loss_mask_0: 0.1824  loss_dice_0: 1.381  loss_ce_1: 0.6071  loss_mask_1: 0.1727  loss_dice_1: 1.347  loss_ce_2: 0.5247  loss_mask_2: 0.1636  loss_dice_2: 1.275  loss_ce_3: 0.4661  loss_mask_3: 0.1656  loss_dice_3: 1.238  loss_ce_4: 0.4511  loss_mask_4: 0.1622  loss_dice_4: 1.218  loss_ce_5: 0.434  loss_mask_5: 0.1609  loss_dice_5: 1.201  loss_ce_6: 0.4445  loss_mask_6: 0.1614  loss_dice_6: 1.172  loss_ce_7: 0.4335  loss_mask_7: 0.1606  loss_dice_7: 1.169  loss_ce_8: 0.4397  loss_mask_8: 0.1615  loss_dice_8: 1.212    time: 1.0556  last_time: 1.0913  data_time: 0.0650  last_data_time: 0.0811   lr: 0.0001  max_mem: 33431M
[10/17 14:04:31] d2.utils.events INFO:  eta: 0:16:50  iter: 2039  total_loss: 19.43  loss_ce: 0.4281  loss_mask: 0.1612  loss_dice: 1.221  loss_ce_0: 0.5476  loss_mask_0: 0.1903  loss_dice_0: 1.407  loss_ce_1: 0.5439  loss_mask_1: 0.1761  loss_dice_1: 1.379  loss_ce_2: 0.512  loss_mask_2: 0.1643  loss_dice_2: 1.291  loss_ce_3: 0.4222  loss_mask_3: 0.1608  loss_dice_3: 1.246  loss_ce_4: 0.4342  loss_mask_4: 0.1605  loss_dice_4: 1.238  loss_ce_5: 0.438  loss_mask_5: 0.1604  loss_dice_5: 1.22  loss_ce_6: 0.416  loss_mask_6: 0.1619  loss_dice_6: 1.241  loss_ce_7: 0.42  loss_mask_7: 0.1609  loss_dice_7: 1.206  loss_ce_8: 0.4336  loss_mask_8: 0.1598  loss_dice_8: 1.24    time: 1.0557  last_time: 1.1280  data_time: 0.0722  last_data_time: 0.0975   lr: 0.0001  max_mem: 33431M
[10/17 14:04:52] d2.utils.events INFO:  eta: 0:16:29  iter: 2059  total_loss: 17.52  loss_ce: 0.3807  loss_mask: 0.1603  loss_dice: 1.083  loss_ce_0: 0.5577  loss_mask_0: 0.1945  loss_dice_0: 1.318  loss_ce_1: 0.5666  loss_mask_1: 0.1774  loss_dice_1: 1.221  loss_ce_2: 0.5134  loss_mask_2: 0.1687  loss_dice_2: 1.181  loss_ce_3: 0.4325  loss_mask_3: 0.1662  loss_dice_3: 1.115  loss_ce_4: 0.426  loss_mask_4: 0.1635  loss_dice_4: 1.118  loss_ce_5: 0.3949  loss_mask_5: 0.1624  loss_dice_5: 1.103  loss_ce_6: 0.3817  loss_mask_6: 0.1612  loss_dice_6: 1.118  loss_ce_7: 0.4072  loss_mask_7: 0.1571  loss_dice_7: 1.102  loss_ce_8: 0.3848  loss_mask_8: 0.161  loss_dice_8: 1.085    time: 1.0556  last_time: 1.0267  data_time: 0.0640  last_data_time: 0.0513   lr: 0.0001  max_mem: 33431M
[10/17 14:05:13] d2.utils.events INFO:  eta: 0:16:08  iter: 2079  total_loss: 19.74  loss_ce: 0.4945  loss_mask: 0.1571  loss_dice: 1.204  loss_ce_0: 0.6257  loss_mask_0: 0.178  loss_dice_0: 1.413  loss_ce_1: 0.6558  loss_mask_1: 0.1643  loss_dice_1: 1.334  loss_ce_2: 0.5943  loss_mask_2: 0.1562  loss_dice_2: 1.3  loss_ce_3: 0.5167  loss_mask_3: 0.1544  loss_dice_3: 1.25  loss_ce_4: 0.4781  loss_mask_4: 0.1544  loss_dice_4: 1.225  loss_ce_5: 0.4841  loss_mask_5: 0.1544  loss_dice_5: 1.198  loss_ce_6: 0.4932  loss_mask_6: 0.1553  loss_dice_6: 1.189  loss_ce_7: 0.4818  loss_mask_7: 0.1539  loss_dice_7: 1.229  loss_ce_8: 0.4829  loss_mask_8: 0.1548  loss_dice_8: 1.199    time: 1.0557  last_time: 1.0548  data_time: 0.0703  last_data_time: 0.0735   lr: 0.0001  max_mem: 33431M
[10/17 14:05:35] d2.utils.events INFO:  eta: 0:15:48  iter: 2099  total_loss: 19.55  loss_ce: 0.4188  loss_mask: 0.1466  loss_dice: 1.246  loss_ce_0: 0.5847  loss_mask_0: 0.1686  loss_dice_0: 1.393  loss_ce_1: 0.5823  loss_mask_1: 0.1628  loss_dice_1: 1.382  loss_ce_2: 0.55  loss_mask_2: 0.154  loss_dice_2: 1.306  loss_ce_3: 0.4822  loss_mask_3: 0.1496  loss_dice_3: 1.309  loss_ce_4: 0.464  loss_mask_4: 0.1478  loss_dice_4: 1.245  loss_ce_5: 0.4665  loss_mask_5: 0.1472  loss_dice_5: 1.28  loss_ce_6: 0.4511  loss_mask_6: 0.1476  loss_dice_6: 1.262  loss_ce_7: 0.459  loss_mask_7: 0.1455  loss_dice_7: 1.211  loss_ce_8: 0.4354  loss_mask_8: 0.1472  loss_dice_8: 1.23    time: 1.0558  last_time: 1.0982  data_time: 0.0695  last_data_time: 0.0880   lr: 0.0001  max_mem: 33431M
[10/17 14:05:56] d2.utils.events INFO:  eta: 0:15:27  iter: 2119  total_loss: 19.71  loss_ce: 0.4561  loss_mask: 0.1667  loss_dice: 1.249  loss_ce_0: 0.587  loss_mask_0: 0.1914  loss_dice_0: 1.425  loss_ce_1: 0.643  loss_mask_1: 0.1792  loss_dice_1: 1.382  loss_ce_2: 0.5644  loss_mask_2: 0.1776  loss_dice_2: 1.305  loss_ce_3: 0.478  loss_mask_3: 0.1751  loss_dice_3: 1.277  loss_ce_4: 0.4782  loss_mask_4: 0.1733  loss_dice_4: 1.292  loss_ce_5: 0.4492  loss_mask_5: 0.1712  loss_dice_5: 1.27  loss_ce_6: 0.4491  loss_mask_6: 0.1678  loss_dice_6: 1.222  loss_ce_7: 0.4499  loss_mask_7: 0.1689  loss_dice_7: 1.248  loss_ce_8: 0.4527  loss_mask_8: 0.1677  loss_dice_8: 1.254    time: 1.0559  last_time: 1.0714  data_time: 0.0657  last_data_time: 0.0728   lr: 0.0001  max_mem: 33431M
[10/17 14:06:18] d2.utils.events INFO:  eta: 0:15:06  iter: 2139  total_loss: 19.79  loss_ce: 0.4574  loss_mask: 0.1507  loss_dice: 1.244  loss_ce_0: 0.5472  loss_mask_0: 0.1792  loss_dice_0: 1.442  loss_ce_1: 0.6012  loss_mask_1: 0.1688  loss_dice_1: 1.37  loss_ce_2: 0.5264  loss_mask_2: 0.1562  loss_dice_2: 1.316  loss_ce_3: 0.5045  loss_mask_3: 0.1533  loss_dice_3: 1.253  loss_ce_4: 0.5135  loss_mask_4: 0.1511  loss_dice_4: 1.252  loss_ce_5: 0.4929  loss_mask_5: 0.1508  loss_dice_5: 1.26  loss_ce_6: 0.4968  loss_mask_6: 0.1512  loss_dice_6: 1.24  loss_ce_7: 0.4735  loss_mask_7: 0.1498  loss_dice_7: 1.283  loss_ce_8: 0.4437  loss_mask_8: 0.1515  loss_dice_8: 1.241    time: 1.0561  last_time: 1.0716  data_time: 0.0728  last_data_time: 0.0656   lr: 0.0001  max_mem: 33431M
[10/17 14:06:39] d2.utils.events INFO:  eta: 0:14:45  iter: 2159  total_loss: 18.72  loss_ce: 0.4288  loss_mask: 0.155  loss_dice: 1.166  loss_ce_0: 0.531  loss_mask_0: 0.1806  loss_dice_0: 1.392  loss_ce_1: 0.5854  loss_mask_1: 0.1643  loss_dice_1: 1.324  loss_ce_2: 0.5141  loss_mask_2: 0.1621  loss_dice_2: 1.276  loss_ce_3: 0.4542  loss_mask_3: 0.1589  loss_dice_3: 1.207  loss_ce_4: 0.4553  loss_mask_4: 0.1575  loss_dice_4: 1.195  loss_ce_5: 0.4701  loss_mask_5: 0.1527  loss_dice_5: 1.168  loss_ce_6: 0.4289  loss_mask_6: 0.1551  loss_dice_6: 1.176  loss_ce_7: 0.4436  loss_mask_7: 0.1528  loss_dice_7: 1.153  loss_ce_8: 0.4528  loss_mask_8: 0.1551  loss_dice_8: 1.209    time: 1.0561  last_time: 1.0388  data_time: 0.0718  last_data_time: 0.0545   lr: 0.0001  max_mem: 33431M
[10/17 14:07:00] d2.utils.events INFO:  eta: 0:14:24  iter: 2179  total_loss: 19.46  loss_ce: 0.488  loss_mask: 0.1664  loss_dice: 1.249  loss_ce_0: 0.522  loss_mask_0: 0.1875  loss_dice_0: 1.456  loss_ce_1: 0.5876  loss_mask_1: 0.1763  loss_dice_1: 1.398  loss_ce_2: 0.5715  loss_mask_2: 0.1695  loss_dice_2: 1.328  loss_ce_3: 0.4827  loss_mask_3: 0.168  loss_dice_3: 1.251  loss_ce_4: 0.4674  loss_mask_4: 0.1689  loss_dice_4: 1.282  loss_ce_5: 0.4824  loss_mask_5: 0.1661  loss_dice_5: 1.263  loss_ce_6: 0.4908  loss_mask_6: 0.1653  loss_dice_6: 1.219  loss_ce_7: 0.4772  loss_mask_7: 0.166  loss_dice_7: 1.244  loss_ce_8: 0.4695  loss_mask_8: 0.1675  loss_dice_8: 1.235    time: 1.0562  last_time: 1.0631  data_time: 0.0731  last_data_time: 0.0771   lr: 0.0001  max_mem: 33431M
[10/17 14:07:21] d2.utils.events INFO:  eta: 0:14:02  iter: 2199  total_loss: 18.69  loss_ce: 0.4561  loss_mask: 0.1599  loss_dice: 1.131  loss_ce_0: 0.5535  loss_mask_0: 0.1824  loss_dice_0: 1.368  loss_ce_1: 0.6109  loss_mask_1: 0.1724  loss_dice_1: 1.281  loss_ce_2: 0.5374  loss_mask_2: 0.1666  loss_dice_2: 1.231  loss_ce_3: 0.4668  loss_mask_3: 0.1657  loss_dice_3: 1.165  loss_ce_4: 0.4524  loss_mask_4: 0.1667  loss_dice_4: 1.204  loss_ce_5: 0.4536  loss_mask_5: 0.1634  loss_dice_5: 1.152  loss_ce_6: 0.4324  loss_mask_6: 0.1635  loss_dice_6: 1.138  loss_ce_7: 0.4304  loss_mask_7: 0.1624  loss_dice_7: 1.146  loss_ce_8: 0.4298  loss_mask_8: 0.1617  loss_dice_8: 1.127    time: 1.0561  last_time: 1.0263  data_time: 0.0697  last_data_time: 0.0623   lr: 0.0001  max_mem: 33431M
[10/17 14:07:42] d2.utils.events INFO:  eta: 0:13:41  iter: 2219  total_loss: 19.09  loss_ce: 0.4861  loss_mask: 0.1609  loss_dice: 1.213  loss_ce_0: 0.5493  loss_mask_0: 0.1851  loss_dice_0: 1.411  loss_ce_1: 0.5987  loss_mask_1: 0.1722  loss_dice_1: 1.391  loss_ce_2: 0.5445  loss_mask_2: 0.1628  loss_dice_2: 1.247  loss_ce_3: 0.4794  loss_mask_3: 0.1646  loss_dice_3: 1.219  loss_ce_4: 0.4429  loss_mask_4: 0.1616  loss_dice_4: 1.241  loss_ce_5: 0.4672  loss_mask_5: 0.1607  loss_dice_5: 1.226  loss_ce_6: 0.4631  loss_mask_6: 0.1616  loss_dice_6: 1.19  loss_ce_7: 0.4757  loss_mask_7: 0.16  loss_dice_7: 1.193  loss_ce_8: 0.4769  loss_mask_8: 0.1598  loss_dice_8: 1.196    time: 1.0560  last_time: 1.0671  data_time: 0.0708  last_data_time: 0.0842   lr: 0.0001  max_mem: 33431M
[10/17 14:08:04] d2.utils.events INFO:  eta: 0:13:20  iter: 2239  total_loss: 19.52  loss_ce: 0.4423  loss_mask: 0.1527  loss_dice: 1.238  loss_ce_0: 0.5589  loss_mask_0: 0.178  loss_dice_0: 1.425  loss_ce_1: 0.6037  loss_mask_1: 0.1621  loss_dice_1: 1.366  loss_ce_2: 0.5405  loss_mask_2: 0.1547  loss_dice_2: 1.293  loss_ce_3: 0.5275  loss_mask_3: 0.1515  loss_dice_3: 1.208  loss_ce_4: 0.5084  loss_mask_4: 0.1556  loss_dice_4: 1.235  loss_ce_5: 0.4836  loss_mask_5: 0.1487  loss_dice_5: 1.215  loss_ce_6: 0.4538  loss_mask_6: 0.1551  loss_dice_6: 1.203  loss_ce_7: 0.4563  loss_mask_7: 0.1521  loss_dice_7: 1.213  loss_ce_8: 0.4376  loss_mask_8: 0.1542  loss_dice_8: 1.2    time: 1.0563  last_time: 1.0179  data_time: 0.0734  last_data_time: 0.0572   lr: 0.0001  max_mem: 33431M
[10/17 14:08:26] d2.utils.events INFO:  eta: 0:12:59  iter: 2259  total_loss: 18.73  loss_ce: 0.4348  loss_mask: 0.1407  loss_dice: 1.198  loss_ce_0: 0.5228  loss_mask_0: 0.1697  loss_dice_0: 1.404  loss_ce_1: 0.5564  loss_mask_1: 0.148  loss_dice_1: 1.326  loss_ce_2: 0.5069  loss_mask_2: 0.1492  loss_dice_2: 1.272  loss_ce_3: 0.4801  loss_mask_3: 0.1448  loss_dice_3: 1.179  loss_ce_4: 0.4517  loss_mask_4: 0.1473  loss_dice_4: 1.225  loss_ce_5: 0.464  loss_mask_5: 0.1463  loss_dice_5: 1.2  loss_ce_6: 0.4379  loss_mask_6: 0.1436  loss_dice_6: 1.189  loss_ce_7: 0.4424  loss_mask_7: 0.1441  loss_dice_7: 1.209  loss_ce_8: 0.4268  loss_mask_8: 0.1463  loss_dice_8: 1.183    time: 1.0565  last_time: 1.0290  data_time: 0.0723  last_data_time: 0.0705   lr: 0.0001  max_mem: 33431M
[10/17 14:08:47] d2.utils.events INFO:  eta: 0:12:38  iter: 2279  total_loss: 18.74  loss_ce: 0.4275  loss_mask: 0.1619  loss_dice: 1.137  loss_ce_0: 0.5162  loss_mask_0: 0.1886  loss_dice_0: 1.36  loss_ce_1: 0.5549  loss_mask_1: 0.1742  loss_dice_1: 1.306  loss_ce_2: 0.5216  loss_mask_2: 0.1676  loss_dice_2: 1.208  loss_ce_3: 0.4846  loss_mask_3: 0.1672  loss_dice_3: 1.182  loss_ce_4: 0.4701  loss_mask_4: 0.1652  loss_dice_4: 1.189  loss_ce_5: 0.4229  loss_mask_5: 0.1612  loss_dice_5: 1.162  loss_ce_6: 0.4594  loss_mask_6: 0.1618  loss_dice_6: 1.162  loss_ce_7: 0.4326  loss_mask_7: 0.1617  loss_dice_7: 1.133  loss_ce_8: 0.4283  loss_mask_8: 0.162  loss_dice_8: 1.145    time: 1.0564  last_time: 1.0791  data_time: 0.0649  last_data_time: 0.0586   lr: 0.0001  max_mem: 33431M
[10/17 14:09:08] d2.utils.events INFO:  eta: 0:12:17  iter: 2299  total_loss: 19.16  loss_ce: 0.4215  loss_mask: 0.1641  loss_dice: 1.218  loss_ce_0: 0.5303  loss_mask_0: 0.1966  loss_dice_0: 1.389  loss_ce_1: 0.5928  loss_mask_1: 0.1806  loss_dice_1: 1.363  loss_ce_2: 0.5238  loss_mask_2: 0.1719  loss_dice_2: 1.285  loss_ce_3: 0.4692  loss_mask_3: 0.1657  loss_dice_3: 1.223  loss_ce_4: 0.4407  loss_mask_4: 0.1647  loss_dice_4: 1.201  loss_ce_5: 0.44  loss_mask_5: 0.1639  loss_dice_5: 1.188  loss_ce_6: 0.4359  loss_mask_6: 0.1629  loss_dice_6: 1.192  loss_ce_7: 0.4248  loss_mask_7: 0.1639  loss_dice_7: 1.206  loss_ce_8: 0.433  loss_mask_8: 0.1641  loss_dice_8: 1.231    time: 1.0565  last_time: 1.0592  data_time: 0.0723  last_data_time: 0.0718   lr: 0.0001  max_mem: 33431M
[10/17 14:09:30] d2.utils.events INFO:  eta: 0:11:56  iter: 2319  total_loss: 18.65  loss_ce: 0.4332  loss_mask: 0.16  loss_dice: 1.18  loss_ce_0: 0.5609  loss_mask_0: 0.1823  loss_dice_0: 1.376  loss_ce_1: 0.5653  loss_mask_1: 0.1718  loss_dice_1: 1.321  loss_ce_2: 0.5302  loss_mask_2: 0.1682  loss_dice_2: 1.251  loss_ce_3: 0.4595  loss_mask_3: 0.1637  loss_dice_3: 1.182  loss_ce_4: 0.4696  loss_mask_4: 0.1637  loss_dice_4: 1.188  loss_ce_5: 0.4378  loss_mask_5: 0.161  loss_dice_5: 1.204  loss_ce_6: 0.4412  loss_mask_6: 0.1617  loss_dice_6: 1.149  loss_ce_7: 0.4026  loss_mask_7: 0.1613  loss_dice_7: 1.189  loss_ce_8: 0.4268  loss_mask_8: 0.1611  loss_dice_8: 1.199    time: 1.0566  last_time: 1.0479  data_time: 0.0716  last_data_time: 0.0513   lr: 0.0001  max_mem: 33431M
[10/17 14:09:51] d2.utils.events INFO:  eta: 0:11:35  iter: 2339  total_loss: 18.23  loss_ce: 0.4312  loss_mask: 0.1579  loss_dice: 1.119  loss_ce_0: 0.55  loss_mask_0: 0.1797  loss_dice_0: 1.335  loss_ce_1: 0.6002  loss_mask_1: 0.17  loss_dice_1: 1.313  loss_ce_2: 0.5241  loss_mask_2: 0.1628  loss_dice_2: 1.237  loss_ce_3: 0.4594  loss_mask_3: 0.1615  loss_dice_3: 1.12  loss_ce_4: 0.4471  loss_mask_4: 0.1579  loss_dice_4: 1.169  loss_ce_5: 0.4428  loss_mask_5: 0.1575  loss_dice_5: 1.132  loss_ce_6: 0.4065  loss_mask_6: 0.1582  loss_dice_6: 1.152  loss_ce_7: 0.4012  loss_mask_7: 0.1572  loss_dice_7: 1.133  loss_ce_8: 0.4129  loss_mask_8: 0.1578  loss_dice_8: 1.147    time: 1.0565  last_time: 1.0482  data_time: 0.0711  last_data_time: 0.0634   lr: 0.0001  max_mem: 33431M
[10/17 14:10:12] d2.utils.events INFO:  eta: 0:11:14  iter: 2359  total_loss: 19.59  loss_ce: 0.4869  loss_mask: 0.1432  loss_dice: 1.201  loss_ce_0: 0.5631  loss_mask_0: 0.1603  loss_dice_0: 1.434  loss_ce_1: 0.6293  loss_mask_1: 0.1463  loss_dice_1: 1.392  loss_ce_2: 0.5918  loss_mask_2: 0.1429  loss_dice_2: 1.325  loss_ce_3: 0.5143  loss_mask_3: 0.1445  loss_dice_3: 1.254  loss_ce_4: 0.505  loss_mask_4: 0.1407  loss_dice_4: 1.246  loss_ce_5: 0.4578  loss_mask_5: 0.141  loss_dice_5: 1.259  loss_ce_6: 0.4668  loss_mask_6: 0.1422  loss_dice_6: 1.226  loss_ce_7: 0.4827  loss_mask_7: 0.1418  loss_dice_7: 1.251  loss_ce_8: 0.4771  loss_mask_8: 0.144  loss_dice_8: 1.222    time: 1.0567  last_time: 1.0488  data_time: 0.0709  last_data_time: 0.0622   lr: 0.0001  max_mem: 33431M
[10/17 14:10:34] d2.utils.events INFO:  eta: 0:10:53  iter: 2379  total_loss: 18.94  loss_ce: 0.4317  loss_mask: 0.1648  loss_dice: 1.16  loss_ce_0: 0.5163  loss_mask_0: 0.1889  loss_dice_0: 1.403  loss_ce_1: 0.5752  loss_mask_1: 0.1748  loss_dice_1: 1.346  loss_ce_2: 0.5479  loss_mask_2: 0.1683  loss_dice_2: 1.256  loss_ce_3: 0.4684  loss_mask_3: 0.1622  loss_dice_3: 1.19  loss_ce_4: 0.4341  loss_mask_4: 0.167  loss_dice_4: 1.248  loss_ce_5: 0.4266  loss_mask_5: 0.1597  loss_dice_5: 1.211  loss_ce_6: 0.4298  loss_mask_6: 0.1592  loss_dice_6: 1.192  loss_ce_7: 0.4361  loss_mask_7: 0.1609  loss_dice_7: 1.174  loss_ce_8: 0.4291  loss_mask_8: 0.1593  loss_dice_8: 1.212    time: 1.0568  last_time: 1.0408  data_time: 0.0717  last_data_time: 0.0815   lr: 0.0001  max_mem: 33431M
[10/17 14:10:55] d2.utils.events INFO:  eta: 0:10:32  iter: 2399  total_loss: 18.81  loss_ce: 0.4677  loss_mask: 0.167  loss_dice: 1.119  loss_ce_0: 0.5662  loss_mask_0: 0.195  loss_dice_0: 1.337  loss_ce_1: 0.586  loss_mask_1: 0.1748  loss_dice_1: 1.272  loss_ce_2: 0.5529  loss_mask_2: 0.1727  loss_dice_2: 1.213  loss_ce_3: 0.474  loss_mask_3: 0.1686  loss_dice_3: 1.16  loss_ce_4: 0.4557  loss_mask_4: 0.1695  loss_dice_4: 1.189  loss_ce_5: 0.4371  loss_mask_5: 0.1676  loss_dice_5: 1.146  loss_ce_6: 0.4218  loss_mask_6: 0.1698  loss_dice_6: 1.198  loss_ce_7: 0.4419  loss_mask_7: 0.1706  loss_dice_7: 1.179  loss_ce_8: 0.4446  loss_mask_8: 0.1687  loss_dice_8: 1.153    time: 1.0567  last_time: 1.0437  data_time: 0.0660  last_data_time: 0.0721   lr: 0.0001  max_mem: 33431M
[10/17 14:11:16] d2.utils.events INFO:  eta: 0:10:11  iter: 2419  total_loss: 18.86  loss_ce: 0.4192  loss_mask: 0.1631  loss_dice: 1.143  loss_ce_0: 0.4965  loss_mask_0: 0.1853  loss_dice_0: 1.336  loss_ce_1: 0.5862  loss_mask_1: 0.1778  loss_dice_1: 1.252  loss_ce_2: 0.5315  loss_mask_2: 0.1683  loss_dice_2: 1.216  loss_ce_3: 0.4838  loss_mask_3: 0.1669  loss_dice_3: 1.195  loss_ce_4: 0.458  loss_mask_4: 0.1666  loss_dice_4: 1.163  loss_ce_5: 0.4516  loss_mask_5: 0.166  loss_dice_5: 1.173  loss_ce_6: 0.4268  loss_mask_6: 0.1657  loss_dice_6: 1.174  loss_ce_7: 0.4352  loss_mask_7: 0.1635  loss_dice_7: 1.166  loss_ce_8: 0.4249  loss_mask_8: 0.1649  loss_dice_8: 1.168    time: 1.0567  last_time: 1.0530  data_time: 0.0696  last_data_time: 0.0841   lr: 0.0001  max_mem: 33431M
[10/17 14:11:37] d2.utils.events INFO:  eta: 0:09:50  iter: 2439  total_loss: 18.52  loss_ce: 0.4455  loss_mask: 0.1612  loss_dice: 1.162  loss_ce_0: 0.5222  loss_mask_0: 0.1788  loss_dice_0: 1.327  loss_ce_1: 0.5596  loss_mask_1: 0.1684  loss_dice_1: 1.224  loss_ce_2: 0.5232  loss_mask_2: 0.1619  loss_dice_2: 1.236  loss_ce_3: 0.487  loss_mask_3: 0.1634  loss_dice_3: 1.198  loss_ce_4: 0.4396  loss_mask_4: 0.1659  loss_dice_4: 1.13  loss_ce_5: 0.4434  loss_mask_5: 0.1633  loss_dice_5: 1.152  loss_ce_6: 0.4577  loss_mask_6: 0.1586  loss_dice_6: 1.149  loss_ce_7: 0.4314  loss_mask_7: 0.1581  loss_dice_7: 1.16  loss_ce_8: 0.436  loss_mask_8: 0.1618  loss_dice_8: 1.155    time: 1.0565  last_time: 1.0172  data_time: 0.0604  last_data_time: 0.0545   lr: 0.0001  max_mem: 33431M
[10/17 14:11:58] d2.utils.events INFO:  eta: 0:09:29  iter: 2459  total_loss: 18.86  loss_ce: 0.454  loss_mask: 0.1517  loss_dice: 1.186  loss_ce_0: 0.5465  loss_mask_0: 0.169  loss_dice_0: 1.401  loss_ce_1: 0.5925  loss_mask_1: 0.1589  loss_dice_1: 1.273  loss_ce_2: 0.5746  loss_mask_2: 0.149  loss_dice_2: 1.224  loss_ce_3: 0.4798  loss_mask_3: 0.1507  loss_dice_3: 1.189  loss_ce_4: 0.4565  loss_mask_4: 0.1518  loss_dice_4: 1.213  loss_ce_5: 0.4632  loss_mask_5: 0.1492  loss_dice_5: 1.173  loss_ce_6: 0.4311  loss_mask_6: 0.1531  loss_dice_6: 1.203  loss_ce_7: 0.443  loss_mask_7: 0.1522  loss_dice_7: 1.186  loss_ce_8: 0.4212  loss_mask_8: 0.1534  loss_dice_8: 1.162    time: 1.0565  last_time: 1.1078  data_time: 0.0706  last_data_time: 0.0750   lr: 0.0001  max_mem: 33431M
[10/17 14:12:19] d2.utils.events INFO:  eta: 0:09:08  iter: 2479  total_loss: 18.61  loss_ce: 0.4335  loss_mask: 0.1601  loss_dice: 1.119  loss_ce_0: 0.531  loss_mask_0: 0.1773  loss_dice_0: 1.321  loss_ce_1: 0.6028  loss_mask_1: 0.1723  loss_dice_1: 1.21  loss_ce_2: 0.5337  loss_mask_2: 0.1613  loss_dice_2: 1.174  loss_ce_3: 0.463  loss_mask_3: 0.1615  loss_dice_3: 1.147  loss_ce_4: 0.4505  loss_mask_4: 0.162  loss_dice_4: 1.143  loss_ce_5: 0.4272  loss_mask_5: 0.1636  loss_dice_5: 1.136  loss_ce_6: 0.4221  loss_mask_6: 0.1598  loss_dice_6: 1.125  loss_ce_7: 0.4474  loss_mask_7: 0.1569  loss_dice_7: 1.115  loss_ce_8: 0.4069  loss_mask_8: 0.1615  loss_dice_8: 1.109    time: 1.0564  last_time: 1.0769  data_time: 0.0628  last_data_time: 0.0689   lr: 0.0001  max_mem: 33431M
[10/17 14:12:40] d2.utils.events INFO:  eta: 0:08:47  iter: 2499  total_loss: 18.56  loss_ce: 0.4296  loss_mask: 0.1571  loss_dice: 1.152  loss_ce_0: 0.5146  loss_mask_0: 0.1782  loss_dice_0: 1.375  loss_ce_1: 0.5749  loss_mask_1: 0.1724  loss_dice_1: 1.322  loss_ce_2: 0.4982  loss_mask_2: 0.1623  loss_dice_2: 1.273  loss_ce_3: 0.4766  loss_mask_3: 0.1615  loss_dice_3: 1.191  loss_ce_4: 0.4471  loss_mask_4: 0.1574  loss_dice_4: 1.228  loss_ce_5: 0.4463  loss_mask_5: 0.1615  loss_dice_5: 1.222  loss_ce_6: 0.4253  loss_mask_6: 0.1576  loss_dice_6: 1.16  loss_ce_7: 0.4049  loss_mask_7: 0.1584  loss_dice_7: 1.185  loss_ce_8: 0.4385  loss_mask_8: 0.1563  loss_dice_8: 1.181    time: 1.0564  last_time: 1.1103  data_time: 0.0716  last_data_time: 0.0743   lr: 0.0001  max_mem: 33431M
[10/17 14:13:01] d2.utils.events INFO:  eta: 0:08:26  iter: 2519  total_loss: 19.27  loss_ce: 0.4342  loss_mask: 0.1541  loss_dice: 1.247  loss_ce_0: 0.5581  loss_mask_0: 0.1843  loss_dice_0: 1.421  loss_ce_1: 0.6019  loss_mask_1: 0.1676  loss_dice_1: 1.384  loss_ce_2: 0.5708  loss_mask_2: 0.1579  loss_dice_2: 1.321  loss_ce_3: 0.4954  loss_mask_3: 0.1535  loss_dice_3: 1.273  loss_ce_4: 0.4764  loss_mask_4: 0.1541  loss_dice_4: 1.229  loss_ce_5: 0.4899  loss_mask_5: 0.154  loss_dice_5: 1.253  loss_ce_6: 0.4777  loss_mask_6: 0.153  loss_dice_6: 1.206  loss_ce_7: 0.4209  loss_mask_7: 0.1545  loss_dice_7: 1.232  loss_ce_8: 0.4318  loss_mask_8: 0.1552  loss_dice_8: 1.223    time: 1.0565  last_time: 1.1012  data_time: 0.0703  last_data_time: 0.0821   lr: 0.0001  max_mem: 33431M
[10/17 14:13:22] d2.utils.events INFO:  eta: 0:08:05  iter: 2539  total_loss: 17.76  loss_ce: 0.4049  loss_mask: 0.1594  loss_dice: 1.139  loss_ce_0: 0.5151  loss_mask_0: 0.1837  loss_dice_0: 1.317  loss_ce_1: 0.55  loss_mask_1: 0.1704  loss_dice_1: 1.254  loss_ce_2: 0.5283  loss_mask_2: 0.1615  loss_dice_2: 1.19  loss_ce_3: 0.4526  loss_mask_3: 0.1593  loss_dice_3: 1.146  loss_ce_4: 0.4022  loss_mask_4: 0.1612  loss_dice_4: 1.173  loss_ce_5: 0.4318  loss_mask_5: 0.1598  loss_dice_5: 1.149  loss_ce_6: 0.4056  loss_mask_6: 0.161  loss_dice_6: 1.148  loss_ce_7: 0.3923  loss_mask_7: 0.1601  loss_dice_7: 1.12  loss_ce_8: 0.4018  loss_mask_8: 0.1574  loss_dice_8: 1.105    time: 1.0564  last_time: 1.0314  data_time: 0.0676  last_data_time: 0.0629   lr: 0.0001  max_mem: 33431M
[10/17 14:13:43] d2.utils.events INFO:  eta: 0:07:44  iter: 2559  total_loss: 18.33  loss_ce: 0.3962  loss_mask: 0.1731  loss_dice: 1.159  loss_ce_0: 0.486  loss_mask_0: 0.195  loss_dice_0: 1.366  loss_ce_1: 0.5218  loss_mask_1: 0.1854  loss_dice_1: 1.249  loss_ce_2: 0.4771  loss_mask_2: 0.1798  loss_dice_2: 1.223  loss_ce_3: 0.4448  loss_mask_3: 0.1789  loss_dice_3: 1.169  loss_ce_4: 0.4453  loss_mask_4: 0.1764  loss_dice_4: 1.175  loss_ce_5: 0.404  loss_mask_5: 0.1736  loss_dice_5: 1.16  loss_ce_6: 0.4021  loss_mask_6: 0.1719  loss_dice_6: 1.142  loss_ce_7: 0.3968  loss_mask_7: 0.1749  loss_dice_7: 1.168  loss_ce_8: 0.4085  loss_mask_8: 0.1712  loss_dice_8: 1.115    time: 1.0564  last_time: 1.0555  data_time: 0.0668  last_data_time: 0.0571   lr: 0.0001  max_mem: 33431M
[10/17 14:14:05] d2.utils.events INFO:  eta: 0:07:22  iter: 2579  total_loss: 18.21  loss_ce: 0.4283  loss_mask: 0.1441  loss_dice: 1.201  loss_ce_0: 0.5288  loss_mask_0: 0.1658  loss_dice_0: 1.374  loss_ce_1: 0.566  loss_mask_1: 0.1564  loss_dice_1: 1.334  loss_ce_2: 0.5218  loss_mask_2: 0.1482  loss_dice_2: 1.281  loss_ce_3: 0.4376  loss_mask_3: 0.1465  loss_dice_3: 1.209  loss_ce_4: 0.4166  loss_mask_4: 0.1464  loss_dice_4: 1.223  loss_ce_5: 0.4269  loss_mask_5: 0.1441  loss_dice_5: 1.21  loss_ce_6: 0.4085  loss_mask_6: 0.1432  loss_dice_6: 1.213  loss_ce_7: 0.4336  loss_mask_7: 0.1421  loss_dice_7: 1.143  loss_ce_8: 0.4339  loss_mask_8: 0.1444  loss_dice_8: 1.163    time: 1.0564  last_time: 1.1151  data_time: 0.0622  last_data_time: 0.0641   lr: 0.0001  max_mem: 33431M
[10/17 14:14:26] d2.utils.events INFO:  eta: 0:07:02  iter: 2599  total_loss: 19.79  loss_ce: 0.4892  loss_mask: 0.1538  loss_dice: 1.229  loss_ce_0: 0.6092  loss_mask_0: 0.1852  loss_dice_0: 1.46  loss_ce_1: 0.6077  loss_mask_1: 0.1705  loss_dice_1: 1.37  loss_ce_2: 0.5567  loss_mask_2: 0.1607  loss_dice_2: 1.321  loss_ce_3: 0.5329  loss_mask_3: 0.1617  loss_dice_3: 1.256  loss_ce_4: 0.5004  loss_mask_4: 0.1588  loss_dice_4: 1.275  loss_ce_5: 0.4754  loss_mask_5: 0.1575  loss_dice_5: 1.267  loss_ce_6: 0.4684  loss_mask_6: 0.1553  loss_dice_6: 1.25  loss_ce_7: 0.4814  loss_mask_7: 0.1553  loss_dice_7: 1.202  loss_ce_8: 0.4605  loss_mask_8: 0.1535  loss_dice_8: 1.228    time: 1.0565  last_time: 1.1089  data_time: 0.0720  last_data_time: 0.0743   lr: 0.0001  max_mem: 33431M
[10/17 14:14:47] d2.utils.events INFO:  eta: 0:06:40  iter: 2619  total_loss: 18.12  loss_ce: 0.4245  loss_mask: 0.1535  loss_dice: 1.129  loss_ce_0: 0.5286  loss_mask_0: 0.1789  loss_dice_0: 1.347  loss_ce_1: 0.5469  loss_mask_1: 0.1633  loss_dice_1: 1.273  loss_ce_2: 0.496  loss_mask_2: 0.1647  loss_dice_2: 1.221  loss_ce_3: 0.4476  loss_mask_3: 0.1636  loss_dice_3: 1.145  loss_ce_4: 0.4216  loss_mask_4: 0.1599  loss_dice_4: 1.148  loss_ce_5: 0.4149  loss_mask_5: 0.1582  loss_dice_5: 1.153  loss_ce_6: 0.4136  loss_mask_6: 0.1584  loss_dice_6: 1.147  loss_ce_7: 0.4065  loss_mask_7: 0.1568  loss_dice_7: 1.139  loss_ce_8: 0.4098  loss_mask_8: 0.1543  loss_dice_8: 1.124    time: 1.0564  last_time: 1.0223  data_time: 0.0677  last_data_time: 0.0517   lr: 0.0001  max_mem: 33431M
[10/17 14:15:08] d2.utils.events INFO:  eta: 0:06:19  iter: 2639  total_loss: 19.23  loss_ce: 0.4609  loss_mask: 0.1553  loss_dice: 1.205  loss_ce_0: 0.5303  loss_mask_0: 0.1781  loss_dice_0: 1.41  loss_ce_1: 0.584  loss_mask_1: 0.1654  loss_dice_1: 1.327  loss_ce_2: 0.5427  loss_mask_2: 0.1601  loss_dice_2: 1.293  loss_ce_3: 0.4811  loss_mask_3: 0.1592  loss_dice_3: 1.189  loss_ce_4: 0.4481  loss_mask_4: 0.1598  loss_dice_4: 1.231  loss_ce_5: 0.4606  loss_mask_5: 0.1556  loss_dice_5: 1.229  loss_ce_6: 0.4707  loss_mask_6: 0.1531  loss_dice_6: 1.211  loss_ce_7: 0.4344  loss_mask_7: 0.1541  loss_dice_7: 1.204  loss_ce_8: 0.4492  loss_mask_8: 0.1546  loss_dice_8: 1.19    time: 1.0564  last_time: 1.0208  data_time: 0.0659  last_data_time: 0.0524   lr: 0.0001  max_mem: 33431M
[10/17 14:15:30] d2.utils.events INFO:  eta: 0:05:58  iter: 2659  total_loss: 18.41  loss_ce: 0.4074  loss_mask: 0.1525  loss_dice: 1.145  loss_ce_0: 0.5018  loss_mask_0: 0.1677  loss_dice_0: 1.329  loss_ce_1: 0.547  loss_mask_1: 0.1586  loss_dice_1: 1.269  loss_ce_2: 0.4768  loss_mask_2: 0.1537  loss_dice_2: 1.232  loss_ce_3: 0.4295  loss_mask_3: 0.1549  loss_dice_3: 1.186  loss_ce_4: 0.4001  loss_mask_4: 0.1556  loss_dice_4: 1.191  loss_ce_5: 0.4186  loss_mask_5: 0.1512  loss_dice_5: 1.198  loss_ce_6: 0.4199  loss_mask_6: 0.1511  loss_dice_6: 1.18  loss_ce_7: 0.41  loss_mask_7: 0.1491  loss_dice_7: 1.145  loss_ce_8: 0.43  loss_mask_8: 0.1507  loss_dice_8: 1.149    time: 1.0565  last_time: 1.1687  data_time: 0.0690  last_data_time: 0.0856   lr: 0.0001  max_mem: 33431M
[10/17 14:15:51] d2.utils.events INFO:  eta: 0:05:37  iter: 2679  total_loss: 18.42  loss_ce: 0.4208  loss_mask: 0.1581  loss_dice: 1.155  loss_ce_0: 0.5336  loss_mask_0: 0.1787  loss_dice_0: 1.344  loss_ce_1: 0.599  loss_mask_1: 0.1651  loss_dice_1: 1.277  loss_ce_2: 0.5323  loss_mask_2: 0.1606  loss_dice_2: 1.243  loss_ce_3: 0.4486  loss_mask_3: 0.1616  loss_dice_3: 1.181  loss_ce_4: 0.4286  loss_mask_4: 0.1594  loss_dice_4: 1.173  loss_ce_5: 0.4168  loss_mask_5: 0.1563  loss_dice_5: 1.162  loss_ce_6: 0.4298  loss_mask_6: 0.1573  loss_dice_6: 1.189  loss_ce_7: 0.42  loss_mask_7: 0.1541  loss_dice_7: 1.141  loss_ce_8: 0.4091  loss_mask_8: 0.1575  loss_dice_8: 1.14    time: 1.0564  last_time: 1.0435  data_time: 0.0645  last_data_time: 0.0580   lr: 0.0001  max_mem: 33431M
[10/17 14:16:12] d2.utils.events INFO:  eta: 0:05:16  iter: 2699  total_loss: 18.65  loss_ce: 0.4206  loss_mask: 0.1576  loss_dice: 1.184  loss_ce_0: 0.4994  loss_mask_0: 0.1771  loss_dice_0: 1.383  loss_ce_1: 0.5432  loss_mask_1: 0.1686  loss_dice_1: 1.285  loss_ce_2: 0.5344  loss_mask_2: 0.1651  loss_dice_2: 1.237  loss_ce_3: 0.4993  loss_mask_3: 0.1643  loss_dice_3: 1.209  loss_ce_4: 0.4473  loss_mask_4: 0.1622  loss_dice_4: 1.228  loss_ce_5: 0.4248  loss_mask_5: 0.1598  loss_dice_5: 1.225  loss_ce_6: 0.4232  loss_mask_6: 0.158  loss_dice_6: 1.154  loss_ce_7: 0.4158  loss_mask_7: 0.1558  loss_dice_7: 1.189  loss_ce_8: 0.4172  loss_mask_8: 0.1561  loss_dice_8: 1.156    time: 1.0563  last_time: 1.0462  data_time: 0.0652  last_data_time: 0.0690   lr: 0.0001  max_mem: 33431M
[10/17 14:16:33] d2.utils.events INFO:  eta: 0:04:54  iter: 2719  total_loss: 18.39  loss_ce: 0.3953  loss_mask: 0.1565  loss_dice: 1.147  loss_ce_0: 0.5098  loss_mask_0: 0.1835  loss_dice_0: 1.354  loss_ce_1: 0.5423  loss_mask_1: 0.1668  loss_dice_1: 1.294  loss_ce_2: 0.5172  loss_mask_2: 0.1648  loss_dice_2: 1.26  loss_ce_3: 0.4655  loss_mask_3: 0.1614  loss_dice_3: 1.175  loss_ce_4: 0.4211  loss_mask_4: 0.1591  loss_dice_4: 1.17  loss_ce_5: 0.425  loss_mask_5: 0.159  loss_dice_5: 1.154  loss_ce_6: 0.4122  loss_mask_6: 0.157  loss_dice_6: 1.161  loss_ce_7: 0.3926  loss_mask_7: 0.1562  loss_dice_7: 1.172  loss_ce_8: 0.4044  loss_mask_8: 0.1551  loss_dice_8: 1.158    time: 1.0563  last_time: 1.0347  data_time: 0.0633  last_data_time: 0.0701   lr: 0.0001  max_mem: 33431M
[10/17 14:16:54] d2.utils.events INFO:  eta: 0:04:33  iter: 2739  total_loss: 19.17  loss_ce: 0.4318  loss_mask: 0.1605  loss_dice: 1.182  loss_ce_0: 0.5615  loss_mask_0: 0.1847  loss_dice_0: 1.384  loss_ce_1: 0.5964  loss_mask_1: 0.1705  loss_dice_1: 1.309  loss_ce_2: 0.5363  loss_mask_2: 0.1647  loss_dice_2: 1.256  loss_ce_3: 0.4769  loss_mask_3: 0.1622  loss_dice_3: 1.199  loss_ce_4: 0.4772  loss_mask_4: 0.1606  loss_dice_4: 1.182  loss_ce_5: 0.4675  loss_mask_5: 0.1615  loss_dice_5: 1.18  loss_ce_6: 0.4397  loss_mask_6: 0.1631  loss_dice_6: 1.192  loss_ce_7: 0.4458  loss_mask_7: 0.1596  loss_dice_7: 1.205  loss_ce_8: 0.4  loss_mask_8: 0.1604  loss_dice_8: 1.21    time: 1.0562  last_time: 1.0641  data_time: 0.0672  last_data_time: 0.0667   lr: 0.0001  max_mem: 33431M
[10/17 14:17:15] d2.utils.events INFO:  eta: 0:04:12  iter: 2759  total_loss: 19.41  loss_ce: 0.4163  loss_mask: 0.1645  loss_dice: 1.189  loss_ce_0: 0.5517  loss_mask_0: 0.186  loss_dice_0: 1.349  loss_ce_1: 0.555  loss_mask_1: 0.1747  loss_dice_1: 1.346  loss_ce_2: 0.514  loss_mask_2: 0.1673  loss_dice_2: 1.28  loss_ce_3: 0.4508  loss_mask_3: 0.1678  loss_dice_3: 1.273  loss_ce_4: 0.4159  loss_mask_4: 0.169  loss_dice_4: 1.274  loss_ce_5: 0.4062  loss_mask_5: 0.1662  loss_dice_5: 1.26  loss_ce_6: 0.4207  loss_mask_6: 0.1662  loss_dice_6: 1.223  loss_ce_7: 0.4159  loss_mask_7: 0.1658  loss_dice_7: 1.249  loss_ce_8: 0.4295  loss_mask_8: 0.1651  loss_dice_8: 1.214    time: 1.0562  last_time: 1.0565  data_time: 0.0721  last_data_time: 0.0725   lr: 0.0001  max_mem: 33431M
[10/17 14:17:37] d2.utils.events INFO:  eta: 0:03:51  iter: 2779  total_loss: 18.89  loss_ce: 0.4434  loss_mask: 0.1465  loss_dice: 1.192  loss_ce_0: 0.5679  loss_mask_0: 0.1711  loss_dice_0: 1.43  loss_ce_1: 0.6247  loss_mask_1: 0.1597  loss_dice_1: 1.326  loss_ce_2: 0.5577  loss_mask_2: 0.1523  loss_dice_2: 1.284  loss_ce_3: 0.5074  loss_mask_3: 0.1537  loss_dice_3: 1.236  loss_ce_4: 0.4794  loss_mask_4: 0.1516  loss_dice_4: 1.227  loss_ce_5: 0.4755  loss_mask_5: 0.1491  loss_dice_5: 1.238  loss_ce_6: 0.4345  loss_mask_6: 0.1513  loss_dice_6: 1.207  loss_ce_7: 0.4542  loss_mask_7: 0.1482  loss_dice_7: 1.194  loss_ce_8: 0.4551  loss_mask_8: 0.1473  loss_dice_8: 1.199    time: 1.0564  last_time: 1.1015  data_time: 0.0708  last_data_time: 0.0739   lr: 0.0001  max_mem: 33431M
[10/17 14:17:58] d2.utils.events INFO:  eta: 0:03:30  iter: 2799  total_loss: 17.93  loss_ce: 0.4012  loss_mask: 0.1511  loss_dice: 1.127  loss_ce_0: 0.5259  loss_mask_0: 0.1725  loss_dice_0: 1.307  loss_ce_1: 0.582  loss_mask_1: 0.1564  loss_dice_1: 1.263  loss_ce_2: 0.5256  loss_mask_2: 0.1523  loss_dice_2: 1.181  loss_ce_3: 0.4728  loss_mask_3: 0.1551  loss_dice_3: 1.15  loss_ce_4: 0.4725  loss_mask_4: 0.1562  loss_dice_4: 1.137  loss_ce_5: 0.447  loss_mask_5: 0.1516  loss_dice_5: 1.143  loss_ce_6: 0.4181  loss_mask_6: 0.1523  loss_dice_6: 1.149  loss_ce_7: 0.4079  loss_mask_7: 0.153  loss_dice_7: 1.123  loss_ce_8: 0.4155  loss_mask_8: 0.1527  loss_dice_8: 1.105    time: 1.0564  last_time: 1.1136  data_time: 0.0706  last_data_time: 0.0746   lr: 0.0001  max_mem: 33431M
[10/17 14:18:19] d2.utils.events INFO:  eta: 0:03:09  iter: 2819  total_loss: 19.33  loss_ce: 0.4749  loss_mask: 0.1449  loss_dice: 1.185  loss_ce_0: 0.52  loss_mask_0: 0.1693  loss_dice_0: 1.411  loss_ce_1: 0.5796  loss_mask_1: 0.1554  loss_dice_1: 1.308  loss_ce_2: 0.5608  loss_mask_2: 0.1506  loss_dice_2: 1.259  loss_ce_3: 0.4565  loss_mask_3: 0.1465  loss_dice_3: 1.228  loss_ce_4: 0.433  loss_mask_4: 0.1473  loss_dice_4: 1.212  loss_ce_5: 0.4211  loss_mask_5: 0.1447  loss_dice_5: 1.21  loss_ce_6: 0.4291  loss_mask_6: 0.1444  loss_dice_6: 1.208  loss_ce_7: 0.4311  loss_mask_7: 0.1444  loss_dice_7: 1.169  loss_ce_8: 0.4484  loss_mask_8: 0.1447  loss_dice_8: 1.212    time: 1.0564  last_time: 1.0454  data_time: 0.0708  last_data_time: 0.0579   lr: 0.0001  max_mem: 33431M
[10/17 14:18:41] d2.utils.events INFO:  eta: 0:02:48  iter: 2839  total_loss: 18.65  loss_ce: 0.4232  loss_mask: 0.154  loss_dice: 1.164  loss_ce_0: 0.5434  loss_mask_0: 0.1773  loss_dice_0: 1.338  loss_ce_1: 0.5447  loss_mask_1: 0.1653  loss_dice_1: 1.289  loss_ce_2: 0.5156  loss_mask_2: 0.1566  loss_dice_2: 1.228  loss_ce_3: 0.4697  loss_mask_3: 0.1577  loss_dice_3: 1.174  loss_ce_4: 0.4458  loss_mask_4: 0.1547  loss_dice_4: 1.177  loss_ce_5: 0.4416  loss_mask_5: 0.1534  loss_dice_5: 1.149  loss_ce_6: 0.4417  loss_mask_6: 0.1554  loss_dice_6: 1.186  loss_ce_7: 0.4313  loss_mask_7: 0.1538  loss_dice_7: 1.128  loss_ce_8: 0.418  loss_mask_8: 0.1542  loss_dice_8: 1.169    time: 1.0565  last_time: 1.0483  data_time: 0.0736  last_data_time: 0.0671   lr: 0.0001  max_mem: 33431M
[10/17 14:19:02] d2.utils.events INFO:  eta: 0:02:27  iter: 2859  total_loss: 17.75  loss_ce: 0.3769  loss_mask: 0.1643  loss_dice: 1.136  loss_ce_0: 0.505  loss_mask_0: 0.1884  loss_dice_0: 1.314  loss_ce_1: 0.5334  loss_mask_1: 0.1708  loss_dice_1: 1.224  loss_ce_2: 0.5173  loss_mask_2: 0.1679  loss_dice_2: 1.162  loss_ce_3: 0.4439  loss_mask_3: 0.1689  loss_dice_3: 1.126  loss_ce_4: 0.4192  loss_mask_4: 0.1661  loss_dice_4: 1.117  loss_ce_5: 0.3984  loss_mask_5: 0.1642  loss_dice_5: 1.102  loss_ce_6: 0.3751  loss_mask_6: 0.1648  loss_dice_6: 1.121  loss_ce_7: 0.3629  loss_mask_7: 0.1649  loss_dice_7: 1.093  loss_ce_8: 0.3928  loss_mask_8: 0.1647  loss_dice_8: 1.109    time: 1.0564  last_time: 1.0082  data_time: 0.0701  last_data_time: 0.0713   lr: 0.0001  max_mem: 33431M
[10/17 14:19:23] d2.utils.events INFO:  eta: 0:02:06  iter: 2879  total_loss: 18.19  loss_ce: 0.4021  loss_mask: 0.1532  loss_dice: 1.108  loss_ce_0: 0.5297  loss_mask_0: 0.1778  loss_dice_0: 1.295  loss_ce_1: 0.5235  loss_mask_1: 0.165  loss_dice_1: 1.227  loss_ce_2: 0.4827  loss_mask_2: 0.1587  loss_dice_2: 1.223  loss_ce_3: 0.4506  loss_mask_3: 0.1573  loss_dice_3: 1.161  loss_ce_4: 0.4208  loss_mask_4: 0.1547  loss_dice_4: 1.16  loss_ce_5: 0.4099  loss_mask_5: 0.1536  loss_dice_5: 1.153  loss_ce_6: 0.4023  loss_mask_6: 0.1526  loss_dice_6: 1.161  loss_ce_7: 0.3909  loss_mask_7: 0.153  loss_dice_7: 1.149  loss_ce_8: 0.4216  loss_mask_8: 0.1528  loss_dice_8: 1.15    time: 1.0564  last_time: 1.1050  data_time: 0.0666  last_data_time: 0.0686   lr: 0.0001  max_mem: 33431M
[10/17 14:19:44] d2.utils.events INFO:  eta: 0:01:45  iter: 2899  total_loss: 18.85  loss_ce: 0.4229  loss_mask: 0.1496  loss_dice: 1.168  loss_ce_0: 0.5649  loss_mask_0: 0.1738  loss_dice_0: 1.348  loss_ce_1: 0.5955  loss_mask_1: 0.1634  loss_dice_1: 1.309  loss_ce_2: 0.5439  loss_mask_2: 0.1559  loss_dice_2: 1.256  loss_ce_3: 0.4989  loss_mask_3: 0.1543  loss_dice_3: 1.214  loss_ce_4: 0.4614  loss_mask_4: 0.1505  loss_dice_4: 1.182  loss_ce_5: 0.4561  loss_mask_5: 0.1489  loss_dice_5: 1.223  loss_ce_6: 0.4326  loss_mask_6: 0.152  loss_dice_6: 1.181  loss_ce_7: 0.4439  loss_mask_7: 0.1502  loss_dice_7: 1.187  loss_ce_8: 0.408  loss_mask_8: 0.1487  loss_dice_8: 1.164    time: 1.0563  last_time: 1.0377  data_time: 0.0712  last_data_time: 0.0667   lr: 0.0001  max_mem: 33431M
[10/17 14:20:05] d2.utils.events INFO:  eta: 0:01:24  iter: 2919  total_loss: 18.55  loss_ce: 0.4391  loss_mask: 0.159  loss_dice: 1.143  loss_ce_0: 0.5549  loss_mask_0: 0.1863  loss_dice_0: 1.362  loss_ce_1: 0.561  loss_mask_1: 0.1717  loss_dice_1: 1.296  loss_ce_2: 0.5297  loss_mask_2: 0.165  loss_dice_2: 1.247  loss_ce_3: 0.4892  loss_mask_3: 0.1616  loss_dice_3: 1.168  loss_ce_4: 0.4816  loss_mask_4: 0.1584  loss_dice_4: 1.199  loss_ce_5: 0.4644  loss_mask_5: 0.1602  loss_dice_5: 1.189  loss_ce_6: 0.4137  loss_mask_6: 0.1585  loss_dice_6: 1.115  loss_ce_7: 0.4519  loss_mask_7: 0.1618  loss_dice_7: 1.152  loss_ce_8: 0.4495  loss_mask_8: 0.1577  loss_dice_8: 1.171    time: 1.0564  last_time: 1.0353  data_time: 0.0778  last_data_time: 0.0772   lr: 0.0001  max_mem: 33431M
[10/17 14:20:27] d2.utils.events INFO:  eta: 0:01:03  iter: 2939  total_loss: 19.22  loss_ce: 0.4289  loss_mask: 0.1651  loss_dice: 1.215  loss_ce_0: 0.561  loss_mask_0: 0.1886  loss_dice_0: 1.405  loss_ce_1: 0.6199  loss_mask_1: 0.175  loss_dice_1: 1.356  loss_ce_2: 0.5421  loss_mask_2: 0.1709  loss_dice_2: 1.293  loss_ce_3: 0.4548  loss_mask_3: 0.1686  loss_dice_3: 1.252  loss_ce_4: 0.4721  loss_mask_4: 0.1645  loss_dice_4: 1.262  loss_ce_5: 0.4528  loss_mask_5: 0.1637  loss_dice_5: 1.232  loss_ce_6: 0.4122  loss_mask_6: 0.164  loss_dice_6: 1.233  loss_ce_7: 0.4134  loss_mask_7: 0.1621  loss_dice_7: 1.213  loss_ce_8: 0.418  loss_mask_8: 0.1641  loss_dice_8: 1.218    time: 1.0564  last_time: 1.0384  data_time: 0.0700  last_data_time: 0.0565   lr: 0.0001  max_mem: 33431M
[10/17 14:20:48] d2.utils.events INFO:  eta: 0:00:42  iter: 2959  total_loss: 19.36  loss_ce: 0.4266  loss_mask: 0.1604  loss_dice: 1.209  loss_ce_0: 0.5307  loss_mask_0: 0.1873  loss_dice_0: 1.369  loss_ce_1: 0.5856  loss_mask_1: 0.1716  loss_dice_1: 1.361  loss_ce_2: 0.5223  loss_mask_2: 0.1623  loss_dice_2: 1.313  loss_ce_3: 0.4593  loss_mask_3: 0.1588  loss_dice_3: 1.237  loss_ce_4: 0.4493  loss_mask_4: 0.1577  loss_dice_4: 1.223  loss_ce_5: 0.4724  loss_mask_5: 0.1564  loss_dice_5: 1.231  loss_ce_6: 0.4177  loss_mask_6: 0.1587  loss_dice_6: 1.183  loss_ce_7: 0.4361  loss_mask_7: 0.1591  loss_dice_7: 1.183  loss_ce_8: 0.4547  loss_mask_8: 0.1588  loss_dice_8: 1.172    time: 1.0564  last_time: 1.0841  data_time: 0.0676  last_data_time: 0.0621   lr: 0.0001  max_mem: 33431M
[10/17 14:21:09] d2.utils.events INFO:  eta: 0:00:21  iter: 2979  total_loss: 18.72  loss_ce: 0.4124  loss_mask: 0.1549  loss_dice: 1.186  loss_ce_0: 0.5526  loss_mask_0: 0.1769  loss_dice_0: 1.349  loss_ce_1: 0.5948  loss_mask_1: 0.1658  loss_dice_1: 1.315  loss_ce_2: 0.5385  loss_mask_2: 0.1578  loss_dice_2: 1.239  loss_ce_3: 0.5088  loss_mask_3: 0.1559  loss_dice_3: 1.207  loss_ce_4: 0.4696  loss_mask_4: 0.1557  loss_dice_4: 1.224  loss_ce_5: 0.4488  loss_mask_5: 0.1532  loss_dice_5: 1.192  loss_ce_6: 0.4433  loss_mask_6: 0.1555  loss_dice_6: 1.203  loss_ce_7: 0.4381  loss_mask_7: 0.1532  loss_dice_7: 1.168  loss_ce_8: 0.4329  loss_mask_8: 0.1537  loss_dice_8: 1.17    time: 1.0564  last_time: 1.0745  data_time: 0.0746  last_data_time: 0.0729   lr: 0.0001  max_mem: 33431M
[10/17 14:21:30] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_advanced_7/model_final.pth
[10/17 14:21:33] d2.utils.events INFO:  eta: 0:00:00  iter: 2999  total_loss: 18.02  loss_ce: 0.3617  loss_mask: 0.1525  loss_dice: 1.142  loss_ce_0: 0.512  loss_mask_0: 0.1696  loss_dice_0: 1.379  loss_ce_1: 0.5329  loss_mask_1: 0.161  loss_dice_1: 1.269  loss_ce_2: 0.4871  loss_mask_2: 0.1533  loss_dice_2: 1.223  loss_ce_3: 0.4227  loss_mask_3: 0.1554  loss_dice_3: 1.206  loss_ce_4: 0.4037  loss_mask_4: 0.1519  loss_dice_4: 1.191  loss_ce_5: 0.3851  loss_mask_5: 0.1503  loss_dice_5: 1.187  loss_ce_6: 0.3687  loss_mask_6: 0.1521  loss_dice_6: 1.145  loss_ce_7: 0.3702  loss_mask_7: 0.1514  loss_dice_7: 1.143  loss_ce_8: 0.3569  loss_mask_8: 0.1531  loss_dice_8: 1.123    time: 1.0564  last_time: 1.0350  data_time: 0.0684  last_data_time: 0.0543   lr: 0.0001  max_mem: 33431M
[10/17 14:21:33] d2.engine.hooks INFO: Overall training speed: 2998 iterations in 0:52:47 (1.0564 s / it)
[10/17 14:21:33] d2.engine.hooks INFO: Total training time: 0:52:59 (0:00:12 on hooks)
[10/17 14:21:33] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/17 14:21:33] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/17 14:21:33] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 14:21:33] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/17 14:21:33] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/17 14:21:33] d2.evaluation.evaluator INFO: Start inference on 500 batches
[10/17 14:21:35] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0041 s/iter. Inference: 0.1342 s/iter. Eval: 0.0628 s/iter. Total: 0.2011 s/iter. ETA=0:01:38
[10/17 14:21:41] d2.evaluation.evaluator INFO: Inference done 36/500. Dataloading: 0.0048 s/iter. Inference: 0.1368 s/iter. Eval: 0.0629 s/iter. Total: 0.2045 s/iter. ETA=0:01:34
[10/17 14:21:46] d2.evaluation.evaluator INFO: Inference done 61/500. Dataloading: 0.0051 s/iter. Inference: 0.1375 s/iter. Eval: 0.0627 s/iter. Total: 0.2053 s/iter. ETA=0:01:30
[10/17 14:21:51] d2.evaluation.evaluator INFO: Inference done 87/500. Dataloading: 0.0052 s/iter. Inference: 0.1371 s/iter. Eval: 0.0596 s/iter. Total: 0.2019 s/iter. ETA=0:01:23
[10/17 14:21:56] d2.evaluation.evaluator INFO: Inference done 112/500. Dataloading: 0.0054 s/iter. Inference: 0.1365 s/iter. Eval: 0.0604 s/iter. Total: 0.2023 s/iter. ETA=0:01:18
[10/17 14:22:01] d2.evaluation.evaluator INFO: Inference done 137/500. Dataloading: 0.0054 s/iter. Inference: 0.1365 s/iter. Eval: 0.0610 s/iter. Total: 0.2029 s/iter. ETA=0:01:13
[10/17 14:22:06] d2.evaluation.evaluator INFO: Inference done 162/500. Dataloading: 0.0054 s/iter. Inference: 0.1368 s/iter. Eval: 0.0616 s/iter. Total: 0.2039 s/iter. ETA=0:01:08
[10/17 14:22:11] d2.evaluation.evaluator INFO: Inference done 187/500. Dataloading: 0.0055 s/iter. Inference: 0.1366 s/iter. Eval: 0.0615 s/iter. Total: 0.2036 s/iter. ETA=0:01:03
[10/17 14:22:16] d2.evaluation.evaluator INFO: Inference done 211/500. Dataloading: 0.0055 s/iter. Inference: 0.1371 s/iter. Eval: 0.0617 s/iter. Total: 0.2042 s/iter. ETA=0:00:59
[10/17 14:22:21] d2.evaluation.evaluator INFO: Inference done 235/500. Dataloading: 0.0055 s/iter. Inference: 0.1373 s/iter. Eval: 0.0619 s/iter. Total: 0.2047 s/iter. ETA=0:00:54
[10/17 14:22:27] d2.evaluation.evaluator INFO: Inference done 260/500. Dataloading: 0.0055 s/iter. Inference: 0.1375 s/iter. Eval: 0.0620 s/iter. Total: 0.2051 s/iter. ETA=0:00:49
[10/17 14:22:32] d2.evaluation.evaluator INFO: Inference done 285/500. Dataloading: 0.0056 s/iter. Inference: 0.1374 s/iter. Eval: 0.0621 s/iter. Total: 0.2052 s/iter. ETA=0:00:44
[10/17 14:22:37] d2.evaluation.evaluator INFO: Inference done 310/500. Dataloading: 0.0056 s/iter. Inference: 0.1370 s/iter. Eval: 0.0622 s/iter. Total: 0.2048 s/iter. ETA=0:00:38
[10/17 14:22:42] d2.evaluation.evaluator INFO: Inference done 335/500. Dataloading: 0.0055 s/iter. Inference: 0.1367 s/iter. Eval: 0.0623 s/iter. Total: 0.2046 s/iter. ETA=0:00:33
[10/17 14:22:47] d2.evaluation.evaluator INFO: Inference done 360/500. Dataloading: 0.0055 s/iter. Inference: 0.1369 s/iter. Eval: 0.0624 s/iter. Total: 0.2048 s/iter. ETA=0:00:28
[10/17 14:22:52] d2.evaluation.evaluator INFO: Inference done 385/500. Dataloading: 0.0055 s/iter. Inference: 0.1367 s/iter. Eval: 0.0625 s/iter. Total: 0.2048 s/iter. ETA=0:00:23
[10/17 14:22:57] d2.evaluation.evaluator INFO: Inference done 410/500. Dataloading: 0.0055 s/iter. Inference: 0.1367 s/iter. Eval: 0.0626 s/iter. Total: 0.2048 s/iter. ETA=0:00:18
[10/17 14:23:02] d2.evaluation.evaluator INFO: Inference done 435/500. Dataloading: 0.0055 s/iter. Inference: 0.1367 s/iter. Eval: 0.0627 s/iter. Total: 0.2049 s/iter. ETA=0:00:13
[10/17 14:23:08] d2.evaluation.evaluator INFO: Inference done 460/500. Dataloading: 0.0055 s/iter. Inference: 0.1367 s/iter. Eval: 0.0627 s/iter. Total: 0.2050 s/iter. ETA=0:00:08
[10/17 14:23:13] d2.evaluation.evaluator INFO: Inference done 485/500. Dataloading: 0.0055 s/iter. Inference: 0.1367 s/iter. Eval: 0.0626 s/iter. Total: 0.2049 s/iter. ETA=0:00:03
[10/17 14:23:16] d2.evaluation.evaluator INFO: Total inference time: 0:01:41.496635 (0.205044 s / iter per device, on 1 devices)
[10/17 14:23:16] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:07 (0.136664 s / iter per device, on 1 devices)
[10/17 14:23:16] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval27r518q6 ...
[10/17 14:23:38] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.500 | 79.859 | 69.546 |      19       |
| Things | 47.009 | 78.879 | 59.454 |       8       |
| Stuff  | 63.403 | 80.572 | 76.885 |      11       |
[10/17 14:23:38] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.272 | 97.574 | 99.690 |     Stuff     |
| class_8  | 72.246 | 83.319 | 86.710 |     Stuff     |
| class_11 | 86.458 | 89.091 | 97.044 |     Stuff     |
| class_12 | 41.648 | 77.873 | 53.482 |     Stuff     |
| class_13 | 34.285 | 75.918 | 45.161 |     Stuff     |
| class_17 | 41.347 | 62.796 | 65.844 |     Stuff     |
| class_19 | 47.256 | 67.525 | 69.983 |     Stuff     |
| class_20 | 65.349 | 76.540 | 85.379 |     Stuff     |
| class_21 | 88.466 | 89.572 | 98.765 |     Stuff     |
| class_22 | 36.154 | 75.028 | 48.188 |     Stuff     |
| class_23 | 86.952 | 91.058 | 95.491 |     Stuff     |
| class_24 | 48.364 | 74.517 | 64.904 |    Things     |
| class_25 | 45.495 | 72.101 | 63.099 |    Things     |
| class_26 | 62.616 | 81.128 | 77.181 |    Things     |
| class_27 | 52.904 | 88.362 | 59.873 |    Things     |
| class_28 | 56.654 | 87.375 | 64.840 |    Things     |
| class_31 | 39.119 | 85.572 | 45.714 |    Things     |
| class_32 | 31.827 | 71.741 | 44.364 |    Things     |
| class_33 | 39.090 | 70.237 | 55.655 |    Things     |
[10/17 14:23:38] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[10/17 14:23:38] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/17 14:23:38] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/17 14:23:38] d2.evaluation.testing INFO: copypaste: 56.5001,79.8593,69.5456,47.0086,78.8790,59.4537,63.4031,80.5722,76.8852,97.2715,97.5742,99.6898,72.2463,83.3192,86.7102,86.4576,89.0913,97.0438,41.6481,77.8733,53.4819,34.2854,75.9178,45.1613,41.3470,62.7958,65.8436,47.2558,67.5249,69.9828,65.3492,76.5403,85.3789,88.4664,89.5722,98.7654,36.1540,75.0276,48.1876,86.9524,91.0579,95.4913,48.3644,74.5172,64.9036,45.4949,72.1006,63.0992,62.6157,81.1279,77.1814,52.9043,88.3615,59.8726,56.6541,87.3749,64.8402,39.1185,85.5718,45.7143,31.8269,71.7409,44.3636,39.0902,70.2372,55.6546
