[10/17 14:46:40] detectron2 INFO: Rank of current process: 0. World size: 1
[10/17 14:46:41] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/17 14:46:41] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_attention_decoder.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/17 14:46:41] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_attention_decoder.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_attention
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/17 14:46:41] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_attention
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/17 14:46:41] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_attention/config.yaml
[10/17 14:46:41] d2.utils.env INFO: Using a generated random seed 41629213
[10/17 14:46:44] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (conv1): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv2): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU()
  (mask_pooling): MaskPooling()
  (decoder_adapter): AttentionDecoderAdapter(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (norm1): LayerNorm((64, 1, 1), eps=1e-05, elementwise_affine=True)
    (norm2): LayerNorm((256, 1, 1), eps=1e-05, elementwise_affine=True)
    (attention): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
    )
    (relu): ReLU()
  )
  (void_embedding): Embedding(1, 1024)
)
[10/17 14:46:44] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/17 14:46:44] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/17 14:46:44] d2.data.build INFO: Using training sampler TrainingSampler
[10/17 14:46:44] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 14:46:44] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/17 14:46:44] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/17 14:46:44] d2.data.build INFO: Making batched data loader with batch_size=8
[10/17 14:46:44] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/17 14:46:44] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 14:46:44] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 14:46:45] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/17 14:46:45] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mbn1.{bias, running_mean, running_var, weight}[0m
[34mbn2.{bias, running_mean, running_var, weight}[0m
[34mconv1.{bias, weight}[0m
[34mconv2.{bias, weight}[0m
[34mcriterion.empty_weight[0m
[34mdecoder_adapter.attention.out_proj.{bias, weight}[0m
[34mdecoder_adapter.attention.{in_proj_bias, in_proj_weight}[0m
[34mdecoder_adapter.conv1.{bias, weight}[0m
[34mdecoder_adapter.conv2.{bias, weight}[0m
[34mdecoder_adapter.norm1.{bias, weight}[0m
[34mdecoder_adapter.norm2.{bias, weight}[0m
[10/17 14:46:45] d2.engine.train_loop INFO: Starting training from iteration 0
[10/17 14:46:59] d2.engine.hooks INFO: Overall training speed: 9 iterations in 0:00:10 (1.1413 s / it)
[10/17 14:46:59] d2.engine.hooks INFO: Total training time: 0:00:10 (0:00:00 on hooks)
[10/17 14:46:59] d2.utils.events INFO:  eta: 0:50:49  iter: 11  total_loss: 36.08  loss_ce: 1.491  loss_mask: 0.3423  loss_dice: 1.524  loss_ce_0: 1.657  loss_mask_0: 0.3357  loss_dice_0: 1.766  loss_ce_1: 1.615  loss_mask_1: 0.3428  loss_dice_1: 1.709  loss_ce_2: 1.564  loss_mask_2: 0.354  loss_dice_2: 1.621  loss_ce_3: 1.49  loss_mask_3: 0.3646  loss_dice_3: 1.591  loss_ce_4: 1.533  loss_mask_4: 0.361  loss_dice_4: 1.53  loss_ce_5: 1.466  loss_mask_5: 0.3561  loss_dice_5: 1.561  loss_ce_6: 1.481  loss_mask_6: 0.3444  loss_dice_6: 1.547  loss_ce_7: 1.448  loss_mask_7: 0.3449  loss_dice_7: 1.521  loss_ce_8: 1.549  loss_mask_8: 0.3462  loss_dice_8: 1.488    time: 1.0275  last_time: 0.9999  data_time: 0.1256  last_data_time: 0.0530   lr: 0.0001  max_mem: 30660M
[10/17 14:47:29] detectron2 INFO: Rank of current process: 0. World size: 1
[10/17 14:47:31] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/17 14:47:31] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_attention_decoder.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/17 14:47:31] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_3000_a_decoder_advanced_attention_decoder.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_attention
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/17 14:47:31] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_attention
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/17 14:47:31] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_attention/config.yaml
[10/17 14:47:31] d2.utils.env INFO: Using a generated random seed 31689513
[10/17 14:47:34] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (conv1): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (conv2): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU()
  (mask_pooling): MaskPooling()
  (decoder_adapter): AttentionDecoderAdapter(
    (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1))
    (norm1): LayerNorm((64, 1, 1), eps=1e-05, elementwise_affine=True)
    (norm2): LayerNorm((256, 1, 1), eps=1e-05, elementwise_affine=True)
    (attention): MultiheadAttention(
      (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
    )
    (relu): ReLU()
  )
  (void_embedding): Embedding(1, 1024)
)
[10/17 14:47:34] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/17 14:47:34] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/17 14:47:34] d2.data.build INFO: Using training sampler TrainingSampler
[10/17 14:47:34] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 14:47:34] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/17 14:47:34] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[10/17 14:47:34] d2.data.build INFO: Making batched data loader with batch_size=8
[10/17 14:47:34] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/17 14:47:34] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 14:47:34] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[10/17 14:47:34] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/17 14:47:34] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mbn1.{bias, running_mean, running_var, weight}[0m
[34mbn2.{bias, running_mean, running_var, weight}[0m
[34mconv1.{bias, weight}[0m
[34mconv2.{bias, weight}[0m
[34mcriterion.empty_weight[0m
[34mdecoder_adapter.attention.out_proj.{bias, weight}[0m
[34mdecoder_adapter.attention.{in_proj_bias, in_proj_weight}[0m
[34mdecoder_adapter.conv1.{bias, weight}[0m
[34mdecoder_adapter.conv2.{bias, weight}[0m
[34mdecoder_adapter.norm1.{bias, weight}[0m
[34mdecoder_adapter.norm2.{bias, weight}[0m
[10/17 14:47:34] d2.engine.train_loop INFO: Starting training from iteration 0
[10/17 14:47:58] d2.utils.events INFO:  eta: 0:51:44  iter: 19  total_loss: 31.91  loss_ce: 1.147  loss_mask: 0.2878  loss_dice: 1.502  loss_ce_0: 1.295  loss_mask_0: 0.3233  loss_dice_0: 1.827  loss_ce_1: 1.404  loss_mask_1: 0.303  loss_dice_1: 1.676  loss_ce_2: 1.32  loss_mask_2: 0.2913  loss_dice_2: 1.625  loss_ce_3: 1.265  loss_mask_3: 0.2888  loss_dice_3: 1.533  loss_ce_4: 1.184  loss_mask_4: 0.293  loss_dice_4: 1.541  loss_ce_5: 1.189  loss_mask_5: 0.293  loss_dice_5: 1.524  loss_ce_6: 1.207  loss_mask_6: 0.2894  loss_dice_6: 1.482  loss_ce_7: 1.115  loss_mask_7: 0.2895  loss_dice_7: 1.515  loss_ce_8: 1.176  loss_mask_8: 0.2887  loss_dice_8: 1.482    time: 1.0387  last_time: 1.0212  data_time: 0.0937  last_data_time: 0.0655   lr: 0.0001  max_mem: 31080M
[10/17 14:48:18] d2.utils.events INFO:  eta: 0:50:48  iter: 39  total_loss: 24.25  loss_ce: 0.7522  loss_mask: 0.2334  loss_dice: 1.355  loss_ce_0: 0.8469  loss_mask_0: 0.2717  loss_dice_0: 1.623  loss_ce_1: 0.9414  loss_mask_1: 0.2556  loss_dice_1: 1.494  loss_ce_2: 0.8311  loss_mask_2: 0.2477  loss_dice_2: 1.437  loss_ce_3: 0.8299  loss_mask_3: 0.2321  loss_dice_3: 1.386  loss_ce_4: 0.7855  loss_mask_4: 0.2337  loss_dice_4: 1.387  loss_ce_5: 0.7217  loss_mask_5: 0.2331  loss_dice_5: 1.378  loss_ce_6: 0.7534  loss_mask_6: 0.2324  loss_dice_6: 1.366  loss_ce_7: 0.7733  loss_mask_7: 0.2322  loss_dice_7: 1.359  loss_ce_8: 0.756  loss_mask_8: 0.2343  loss_dice_8: 1.334    time: 1.0380  last_time: 1.0665  data_time: 0.0713  last_data_time: 0.0633   lr: 0.0001  max_mem: 32614M
[10/17 14:48:39] d2.utils.events INFO:  eta: 0:50:28  iter: 59  total_loss: 23.39  loss_ce: 0.647  loss_mask: 0.2159  loss_dice: 1.383  loss_ce_0: 0.7542  loss_mask_0: 0.2458  loss_dice_0: 1.643  loss_ce_1: 0.8806  loss_mask_1: 0.2275  loss_dice_1: 1.503  loss_ce_2: 0.8051  loss_mask_2: 0.2171  loss_dice_2: 1.432  loss_ce_3: 0.7248  loss_mask_3: 0.2153  loss_dice_3: 1.344  loss_ce_4: 0.6528  loss_mask_4: 0.2167  loss_dice_4: 1.375  loss_ce_5: 0.6883  loss_mask_5: 0.2182  loss_dice_5: 1.377  loss_ce_6: 0.6503  loss_mask_6: 0.2181  loss_dice_6: 1.355  loss_ce_7: 0.6594  loss_mask_7: 0.2173  loss_dice_7: 1.326  loss_ce_8: 0.6477  loss_mask_8: 0.2173  loss_dice_8: 1.398    time: 1.0389  last_time: 1.1075  data_time: 0.0726  last_data_time: 0.0760   lr: 0.0001  max_mem: 32614M
[10/17 14:49:00] d2.utils.events INFO:  eta: 0:50:06  iter: 79  total_loss: 23.67  loss_ce: 0.6702  loss_mask: 0.2245  loss_dice: 1.361  loss_ce_0: 0.7066  loss_mask_0: 0.2437  loss_dice_0: 1.636  loss_ce_1: 0.8868  loss_mask_1: 0.2257  loss_dice_1: 1.502  loss_ce_2: 0.777  loss_mask_2: 0.2175  loss_dice_2: 1.419  loss_ce_3: 0.71  loss_mask_3: 0.2188  loss_dice_3: 1.408  loss_ce_4: 0.6795  loss_mask_4: 0.2206  loss_dice_4: 1.412  loss_ce_5: 0.6578  loss_mask_5: 0.2192  loss_dice_5: 1.395  loss_ce_6: 0.6807  loss_mask_6: 0.2246  loss_dice_6: 1.391  loss_ce_7: 0.6347  loss_mask_7: 0.2252  loss_dice_7: 1.384  loss_ce_8: 0.6934  loss_mask_8: 0.225  loss_dice_8: 1.388    time: 1.0381  last_time: 1.0139  data_time: 0.0647  last_data_time: 0.0763   lr: 0.0001  max_mem: 32614M
[10/17 14:49:21] d2.utils.events INFO:  eta: 0:49:53  iter: 99  total_loss: 23.1  loss_ce: 0.6085  loss_mask: 0.2185  loss_dice: 1.368  loss_ce_0: 0.6502  loss_mask_0: 0.2519  loss_dice_0: 1.629  loss_ce_1: 0.8074  loss_mask_1: 0.2243  loss_dice_1: 1.459  loss_ce_2: 0.7134  loss_mask_2: 0.2255  loss_dice_2: 1.406  loss_ce_3: 0.6648  loss_mask_3: 0.2205  loss_dice_3: 1.378  loss_ce_4: 0.6929  loss_mask_4: 0.2255  loss_dice_4: 1.369  loss_ce_5: 0.6186  loss_mask_5: 0.2231  loss_dice_5: 1.359  loss_ce_6: 0.6283  loss_mask_6: 0.2214  loss_dice_6: 1.35  loss_ce_7: 0.6299  loss_mask_7: 0.2226  loss_dice_7: 1.314  loss_ce_8: 0.6474  loss_mask_8: 0.2191  loss_dice_8: 1.326    time: 1.0392  last_time: 1.0649  data_time: 0.0705  last_data_time: 0.0818   lr: 0.0001  max_mem: 32614M
[10/17 14:49:42] d2.utils.events INFO:  eta: 0:49:28  iter: 119  total_loss: 22.02  loss_ce: 0.5866  loss_mask: 0.2062  loss_dice: 1.302  loss_ce_0: 0.6923  loss_mask_0: 0.2362  loss_dice_0: 1.566  loss_ce_1: 0.7901  loss_mask_1: 0.2213  loss_dice_1: 1.435  loss_ce_2: 0.7332  loss_mask_2: 0.2106  loss_dice_2: 1.385  loss_ce_3: 0.6414  loss_mask_3: 0.2103  loss_dice_3: 1.375  loss_ce_4: 0.6124  loss_mask_4: 0.2102  loss_dice_4: 1.327  loss_ce_5: 0.6108  loss_mask_5: 0.2099  loss_dice_5: 1.318  loss_ce_6: 0.6256  loss_mask_6: 0.2076  loss_dice_6: 1.303  loss_ce_7: 0.6197  loss_mask_7: 0.207  loss_dice_7: 1.305  loss_ce_8: 0.5771  loss_mask_8: 0.2064  loss_dice_8: 1.295    time: 1.0384  last_time: 1.0548  data_time: 0.0653  last_data_time: 0.0711   lr: 0.0001  max_mem: 32614M
[10/17 14:50:03] d2.utils.events INFO:  eta: 0:49:10  iter: 139  total_loss: 22.3  loss_ce: 0.6204  loss_mask: 0.2002  loss_dice: 1.293  loss_ce_0: 0.6839  loss_mask_0: 0.2334  loss_dice_0: 1.557  loss_ce_1: 0.7582  loss_mask_1: 0.2087  loss_dice_1: 1.438  loss_ce_2: 0.6994  loss_mask_2: 0.2084  loss_dice_2: 1.41  loss_ce_3: 0.6499  loss_mask_3: 0.2108  loss_dice_3: 1.35  loss_ce_4: 0.6219  loss_mask_4: 0.2083  loss_dice_4: 1.331  loss_ce_5: 0.6244  loss_mask_5: 0.202  loss_dice_5: 1.335  loss_ce_6: 0.6078  loss_mask_6: 0.2037  loss_dice_6: 1.297  loss_ce_7: 0.6188  loss_mask_7: 0.1991  loss_dice_7: 1.28  loss_ce_8: 0.617  loss_mask_8: 0.2035  loss_dice_8: 1.296    time: 1.0389  last_time: 1.0045  data_time: 0.0684  last_data_time: 0.0494   lr: 0.0001  max_mem: 32614M
[10/17 14:50:24] d2.utils.events INFO:  eta: 0:48:52  iter: 159  total_loss: 22.25  loss_ce: 0.6109  loss_mask: 0.2005  loss_dice: 1.277  loss_ce_0: 0.6732  loss_mask_0: 0.2358  loss_dice_0: 1.538  loss_ce_1: 0.8072  loss_mask_1: 0.2185  loss_dice_1: 1.489  loss_ce_2: 0.7369  loss_mask_2: 0.2051  loss_dice_2: 1.4  loss_ce_3: 0.6517  loss_mask_3: 0.2092  loss_dice_3: 1.345  loss_ce_4: 0.6143  loss_mask_4: 0.2054  loss_dice_4: 1.361  loss_ce_5: 0.6047  loss_mask_5: 0.2017  loss_dice_5: 1.327  loss_ce_6: 0.6113  loss_mask_6: 0.2015  loss_dice_6: 1.307  loss_ce_7: 0.6031  loss_mask_7: 0.202  loss_dice_7: 1.332  loss_ce_8: 0.5916  loss_mask_8: 0.1998  loss_dice_8: 1.319    time: 1.0404  last_time: 1.0267  data_time: 0.0688  last_data_time: 0.0769   lr: 0.0001  max_mem: 32614M
[10/17 14:50:45] d2.utils.events INFO:  eta: 0:48:39  iter: 179  total_loss: 22.09  loss_ce: 0.5929  loss_mask: 0.1903  loss_dice: 1.291  loss_ce_0: 0.6572  loss_mask_0: 0.2185  loss_dice_0: 1.574  loss_ce_1: 0.78  loss_mask_1: 0.2074  loss_dice_1: 1.494  loss_ce_2: 0.6905  loss_mask_2: 0.1889  loss_dice_2: 1.379  loss_ce_3: 0.641  loss_mask_3: 0.1893  loss_dice_3: 1.304  loss_ce_4: 0.5931  loss_mask_4: 0.1882  loss_dice_4: 1.302  loss_ce_5: 0.606  loss_mask_5: 0.1878  loss_dice_5: 1.32  loss_ce_6: 0.5842  loss_mask_6: 0.1906  loss_dice_6: 1.292  loss_ce_7: 0.6402  loss_mask_7: 0.1902  loss_dice_7: 1.319  loss_ce_8: 0.6109  loss_mask_8: 0.1891  loss_dice_8: 1.297    time: 1.0429  last_time: 1.0132  data_time: 0.0732  last_data_time: 0.0618   lr: 0.0001  max_mem: 32614M
[10/17 14:51:07] d2.utils.events INFO:  eta: 0:48:29  iter: 199  total_loss: 23.41  loss_ce: 0.6507  loss_mask: 0.1757  loss_dice: 1.395  loss_ce_0: 0.6881  loss_mask_0: 0.2065  loss_dice_0: 1.657  loss_ce_1: 0.8458  loss_mask_1: 0.1919  loss_dice_1: 1.551  loss_ce_2: 0.7412  loss_mask_2: 0.177  loss_dice_2: 1.467  loss_ce_3: 0.7313  loss_mask_3: 0.1832  loss_dice_3: 1.445  loss_ce_4: 0.6959  loss_mask_4: 0.176  loss_dice_4: 1.406  loss_ce_5: 0.6703  loss_mask_5: 0.1762  loss_dice_5: 1.408  loss_ce_6: 0.6431  loss_mask_6: 0.1746  loss_dice_6: 1.396  loss_ce_7: 0.6331  loss_mask_7: 0.1775  loss_dice_7: 1.381  loss_ce_8: 0.697  loss_mask_8: 0.1751  loss_dice_8: 1.373    time: 1.0453  last_time: 1.0737  data_time: 0.0789  last_data_time: 0.0629   lr: 0.0001  max_mem: 32614M
[10/17 14:51:28] d2.utils.events INFO:  eta: 0:48:09  iter: 219  total_loss: 21.06  loss_ce: 0.5611  loss_mask: 0.1939  loss_dice: 1.248  loss_ce_0: 0.6276  loss_mask_0: 0.2247  loss_dice_0: 1.532  loss_ce_1: 0.7299  loss_mask_1: 0.2067  loss_dice_1: 1.397  loss_ce_2: 0.6403  loss_mask_2: 0.1931  loss_dice_2: 1.342  loss_ce_3: 0.5955  loss_mask_3: 0.1951  loss_dice_3: 1.301  loss_ce_4: 0.5871  loss_mask_4: 0.1919  loss_dice_4: 1.292  loss_ce_5: 0.5873  loss_mask_5: 0.1945  loss_dice_5: 1.282  loss_ce_6: 0.5719  loss_mask_6: 0.1944  loss_dice_6: 1.268  loss_ce_7: 0.5746  loss_mask_7: 0.1945  loss_dice_7: 1.277  loss_ce_8: 0.5511  loss_mask_8: 0.1945  loss_dice_8: 1.278    time: 1.0449  last_time: 1.0507  data_time: 0.0650  last_data_time: 0.0785   lr: 0.0001  max_mem: 32614M
[10/17 14:51:49] d2.utils.events INFO:  eta: 0:47:49  iter: 239  total_loss: 23.36  loss_ce: 0.6242  loss_mask: 0.1671  loss_dice: 1.381  loss_ce_0: 0.7155  loss_mask_0: 0.2065  loss_dice_0: 1.624  loss_ce_1: 0.7856  loss_mask_1: 0.1943  loss_dice_1: 1.552  loss_ce_2: 0.7218  loss_mask_2: 0.1774  loss_dice_2: 1.481  loss_ce_3: 0.6784  loss_mask_3: 0.1756  loss_dice_3: 1.385  loss_ce_4: 0.6471  loss_mask_4: 0.1689  loss_dice_4: 1.434  loss_ce_5: 0.6449  loss_mask_5: 0.1689  loss_dice_5: 1.424  loss_ce_6: 0.6379  loss_mask_6: 0.1683  loss_dice_6: 1.379  loss_ce_7: 0.6003  loss_mask_7: 0.1656  loss_dice_7: 1.381  loss_ce_8: 0.6177  loss_mask_8: 0.167  loss_dice_8: 1.353    time: 1.0463  last_time: 1.0568  data_time: 0.0760  last_data_time: 0.0728   lr: 0.0001  max_mem: 32614M
[10/17 14:52:10] d2.utils.events INFO:  eta: 0:47:28  iter: 259  total_loss: 21.51  loss_ce: 0.5512  loss_mask: 0.1887  loss_dice: 1.26  loss_ce_0: 0.5987  loss_mask_0: 0.2154  loss_dice_0: 1.53  loss_ce_1: 0.7177  loss_mask_1: 0.2014  loss_dice_1: 1.438  loss_ce_2: 0.6465  loss_mask_2: 0.197  loss_dice_2: 1.377  loss_ce_3: 0.5848  loss_mask_3: 0.192  loss_dice_3: 1.335  loss_ce_4: 0.5828  loss_mask_4: 0.1901  loss_dice_4: 1.327  loss_ce_5: 0.5703  loss_mask_5: 0.1862  loss_dice_5: 1.338  loss_ce_6: 0.5655  loss_mask_6: 0.1902  loss_dice_6: 1.266  loss_ce_7: 0.5281  loss_mask_7: 0.1892  loss_dice_7: 1.285  loss_ce_8: 0.5717  loss_mask_8: 0.1877  loss_dice_8: 1.285    time: 1.0449  last_time: 1.0603  data_time: 0.0663  last_data_time: 0.0609   lr: 0.0001  max_mem: 32614M
[10/17 14:52:30] d2.utils.events INFO:  eta: 0:47:05  iter: 279  total_loss: 21.71  loss_ce: 0.5292  loss_mask: 0.1877  loss_dice: 1.29  loss_ce_0: 0.603  loss_mask_0: 0.2325  loss_dice_0: 1.569  loss_ce_1: 0.72  loss_mask_1: 0.2097  loss_dice_1: 1.473  loss_ce_2: 0.6226  loss_mask_2: 0.1922  loss_dice_2: 1.408  loss_ce_3: 0.5846  loss_mask_3: 0.1885  loss_dice_3: 1.36  loss_ce_4: 0.5842  loss_mask_4: 0.1852  loss_dice_4: 1.306  loss_ce_5: 0.5517  loss_mask_5: 0.1876  loss_dice_5: 1.339  loss_ce_6: 0.5518  loss_mask_6: 0.1874  loss_dice_6: 1.323  loss_ce_7: 0.5881  loss_mask_7: 0.1886  loss_dice_7: 1.331  loss_ce_8: 0.5442  loss_mask_8: 0.1885  loss_dice_8: 1.311    time: 1.0445  last_time: 1.0184  data_time: 0.0698  last_data_time: 0.0588   lr: 0.0001  max_mem: 32614M
[10/17 14:52:52] d2.utils.events INFO:  eta: 0:46:46  iter: 299  total_loss: 22.33  loss_ce: 0.5842  loss_mask: 0.1916  loss_dice: 1.319  loss_ce_0: 0.6111  loss_mask_0: 0.2114  loss_dice_0: 1.515  loss_ce_1: 0.7465  loss_mask_1: 0.2033  loss_dice_1: 1.433  loss_ce_2: 0.6565  loss_mask_2: 0.1947  loss_dice_2: 1.418  loss_ce_3: 0.646  loss_mask_3: 0.1909  loss_dice_3: 1.379  loss_ce_4: 0.6362  loss_mask_4: 0.1915  loss_dice_4: 1.332  loss_ce_5: 0.5485  loss_mask_5: 0.1897  loss_dice_5: 1.35  loss_ce_6: 0.5917  loss_mask_6: 0.1915  loss_dice_6: 1.302  loss_ce_7: 0.5824  loss_mask_7: 0.1882  loss_dice_7: 1.351  loss_ce_8: 0.6285  loss_mask_8: 0.1902  loss_dice_8: 1.319    time: 1.0455  last_time: 1.0341  data_time: 0.0704  last_data_time: 0.0598   lr: 0.0001  max_mem: 32614M
[10/17 14:53:13] d2.utils.events INFO:  eta: 0:46:26  iter: 319  total_loss: 21.05  loss_ce: 0.5601  loss_mask: 0.1865  loss_dice: 1.289  loss_ce_0: 0.6426  loss_mask_0: 0.2072  loss_dice_0: 1.499  loss_ce_1: 0.6862  loss_mask_1: 0.2009  loss_dice_1: 1.441  loss_ce_2: 0.6536  loss_mask_2: 0.1962  loss_dice_2: 1.366  loss_ce_3: 0.5881  loss_mask_3: 0.1939  loss_dice_3: 1.283  loss_ce_4: 0.5771  loss_mask_4: 0.1953  loss_dice_4: 1.305  loss_ce_5: 0.5818  loss_mask_5: 0.1865  loss_dice_5: 1.297  loss_ce_6: 0.5452  loss_mask_6: 0.1862  loss_dice_6: 1.261  loss_ce_7: 0.5497  loss_mask_7: 0.1947  loss_dice_7: 1.286  loss_ce_8: 0.5394  loss_mask_8: 0.1874  loss_dice_8: 1.271    time: 1.0461  last_time: 1.0031  data_time: 0.0759  last_data_time: 0.0642   lr: 0.0001  max_mem: 32614M
[10/17 14:53:34] d2.utils.events INFO:  eta: 0:46:05  iter: 339  total_loss: 21.45  loss_ce: 0.6054  loss_mask: 0.2005  loss_dice: 1.268  loss_ce_0: 0.6831  loss_mask_0: 0.2297  loss_dice_0: 1.471  loss_ce_1: 0.773  loss_mask_1: 0.209  loss_dice_1: 1.398  loss_ce_2: 0.6898  loss_mask_2: 0.2043  loss_dice_2: 1.358  loss_ce_3: 0.6464  loss_mask_3: 0.2016  loss_dice_3: 1.334  loss_ce_4: 0.6198  loss_mask_4: 0.2021  loss_dice_4: 1.3  loss_ce_5: 0.6101  loss_mask_5: 0.2002  loss_dice_5: 1.3  loss_ce_6: 0.626  loss_mask_6: 0.2005  loss_dice_6: 1.297  loss_ce_7: 0.6175  loss_mask_7: 0.1998  loss_dice_7: 1.26  loss_ce_8: 0.5997  loss_mask_8: 0.1989  loss_dice_8: 1.256    time: 1.0461  last_time: 1.0890  data_time: 0.0689  last_data_time: 0.0647   lr: 0.0001  max_mem: 32614M
[10/17 14:53:55] d2.utils.events INFO:  eta: 0:45:46  iter: 359  total_loss: 21.08  loss_ce: 0.5417  loss_mask: 0.1866  loss_dice: 1.28  loss_ce_0: 0.6319  loss_mask_0: 0.2096  loss_dice_0: 1.459  loss_ce_1: 0.6861  loss_mask_1: 0.1981  loss_dice_1: 1.395  loss_ce_2: 0.6223  loss_mask_2: 0.1869  loss_dice_2: 1.345  loss_ce_3: 0.5826  loss_mask_3: 0.1866  loss_dice_3: 1.285  loss_ce_4: 0.5781  loss_mask_4: 0.1845  loss_dice_4: 1.306  loss_ce_5: 0.5486  loss_mask_5: 0.183  loss_dice_5: 1.282  loss_ce_6: 0.5505  loss_mask_6: 0.1857  loss_dice_6: 1.297  loss_ce_7: 0.5325  loss_mask_7: 0.1831  loss_dice_7: 1.286  loss_ce_8: 0.5495  loss_mask_8: 0.1834  loss_dice_8: 1.285    time: 1.0463  last_time: 1.0516  data_time: 0.0686  last_data_time: 0.0827   lr: 0.0001  max_mem: 32614M
[10/17 14:54:16] d2.utils.events INFO:  eta: 0:45:24  iter: 379  total_loss: 20.63  loss_ce: 0.5236  loss_mask: 0.1902  loss_dice: 1.259  loss_ce_0: 0.6044  loss_mask_0: 0.2086  loss_dice_0: 1.466  loss_ce_1: 0.687  loss_mask_1: 0.1987  loss_dice_1: 1.383  loss_ce_2: 0.6083  loss_mask_2: 0.1884  loss_dice_2: 1.326  loss_ce_3: 0.5653  loss_mask_3: 0.1911  loss_dice_3: 1.298  loss_ce_4: 0.5604  loss_mask_4: 0.1914  loss_dice_4: 1.267  loss_ce_5: 0.5775  loss_mask_5: 0.1905  loss_dice_5: 1.299  loss_ce_6: 0.5537  loss_mask_6: 0.1854  loss_dice_6: 1.223  loss_ce_7: 0.5276  loss_mask_7: 0.1881  loss_dice_7: 1.283  loss_ce_8: 0.5118  loss_mask_8: 0.1904  loss_dice_8: 1.234    time: 1.0466  last_time: 1.0229  data_time: 0.0724  last_data_time: 0.0746   lr: 0.0001  max_mem: 32614M
[10/17 14:54:37] d2.utils.events INFO:  eta: 0:45:05  iter: 399  total_loss: 21.66  loss_ce: 0.5014  loss_mask: 0.1738  loss_dice: 1.3  loss_ce_0: 0.6216  loss_mask_0: 0.1997  loss_dice_0: 1.525  loss_ce_1: 0.7059  loss_mask_1: 0.1876  loss_dice_1: 1.432  loss_ce_2: 0.6084  loss_mask_2: 0.1779  loss_dice_2: 1.355  loss_ce_3: 0.5399  loss_mask_3: 0.1771  loss_dice_3: 1.351  loss_ce_4: 0.5266  loss_mask_4: 0.1767  loss_dice_4: 1.343  loss_ce_5: 0.5646  loss_mask_5: 0.1765  loss_dice_5: 1.335  loss_ce_6: 0.5432  loss_mask_6: 0.1776  loss_dice_6: 1.308  loss_ce_7: 0.5373  loss_mask_7: 0.1751  loss_dice_7: 1.327  loss_ce_8: 0.5292  loss_mask_8: 0.1747  loss_dice_8: 1.299    time: 1.0474  last_time: 1.0351  data_time: 0.0725  last_data_time: 0.0504   lr: 0.0001  max_mem: 32614M
[10/17 14:54:59] d2.utils.events INFO:  eta: 0:44:47  iter: 419  total_loss: 22.01  loss_ce: 0.5596  loss_mask: 0.1712  loss_dice: 1.332  loss_ce_0: 0.6352  loss_mask_0: 0.2119  loss_dice_0: 1.552  loss_ce_1: 0.7241  loss_mask_1: 0.1887  loss_dice_1: 1.502  loss_ce_2: 0.6411  loss_mask_2: 0.1778  loss_dice_2: 1.465  loss_ce_3: 0.6252  loss_mask_3: 0.1737  loss_dice_3: 1.359  loss_ce_4: 0.603  loss_mask_4: 0.1736  loss_dice_4: 1.366  loss_ce_5: 0.5888  loss_mask_5: 0.1746  loss_dice_5: 1.367  loss_ce_6: 0.561  loss_mask_6: 0.1737  loss_dice_6: 1.329  loss_ce_7: 0.538  loss_mask_7: 0.1733  loss_dice_7: 1.32  loss_ce_8: 0.5688  loss_mask_8: 0.1719  loss_dice_8: 1.351    time: 1.0481  last_time: 0.9987  data_time: 0.0701  last_data_time: 0.0565   lr: 0.0001  max_mem: 32614M
[10/17 14:55:20] d2.utils.events INFO:  eta: 0:44:27  iter: 439  total_loss: 21.39  loss_ce: 0.4694  loss_mask: 0.171  loss_dice: 1.283  loss_ce_0: 0.5662  loss_mask_0: 0.1983  loss_dice_0: 1.555  loss_ce_1: 0.6532  loss_mask_1: 0.1849  loss_dice_1: 1.447  loss_ce_2: 0.5914  loss_mask_2: 0.1756  loss_dice_2: 1.374  loss_ce_3: 0.5078  loss_mask_3: 0.1724  loss_dice_3: 1.307  loss_ce_4: 0.5091  loss_mask_4: 0.1748  loss_dice_4: 1.316  loss_ce_5: 0.5076  loss_mask_5: 0.1732  loss_dice_5: 1.317  loss_ce_6: 0.4806  loss_mask_6: 0.1703  loss_dice_6: 1.296  loss_ce_7: 0.5114  loss_mask_7: 0.171  loss_dice_7: 1.309  loss_ce_8: 0.4973  loss_mask_8: 0.1711  loss_dice_8: 1.288    time: 1.0485  last_time: 1.0299  data_time: 0.0702  last_data_time: 0.0830   lr: 0.0001  max_mem: 32614M
[10/17 14:55:41] d2.utils.events INFO:  eta: 0:44:06  iter: 459  total_loss: 20.99  loss_ce: 0.5018  loss_mask: 0.1798  loss_dice: 1.265  loss_ce_0: 0.6063  loss_mask_0: 0.2176  loss_dice_0: 1.503  loss_ce_1: 0.7007  loss_mask_1: 0.1942  loss_dice_1: 1.393  loss_ce_2: 0.6393  loss_mask_2: 0.1859  loss_dice_2: 1.324  loss_ce_3: 0.5808  loss_mask_3: 0.1823  loss_dice_3: 1.275  loss_ce_4: 0.5347  loss_mask_4: 0.1825  loss_dice_4: 1.314  loss_ce_5: 0.5429  loss_mask_5: 0.1814  loss_dice_5: 1.284  loss_ce_6: 0.5443  loss_mask_6: 0.1806  loss_dice_6: 1.29  loss_ce_7: 0.51  loss_mask_7: 0.1802  loss_dice_7: 1.289  loss_ce_8: 0.5381  loss_mask_8: 0.178  loss_dice_8: 1.307    time: 1.0483  last_time: 1.0416  data_time: 0.0692  last_data_time: 0.0706   lr: 0.0001  max_mem: 32614M
[10/17 14:56:01] d2.utils.events INFO:  eta: 0:43:45  iter: 479  total_loss: 20.83  loss_ce: 0.537  loss_mask: 0.1979  loss_dice: 1.242  loss_ce_0: 0.5926  loss_mask_0: 0.2279  loss_dice_0: 1.438  loss_ce_1: 0.6985  loss_mask_1: 0.212  loss_dice_1: 1.362  loss_ce_2: 0.6615  loss_mask_2: 0.2018  loss_dice_2: 1.332  loss_ce_3: 0.5873  loss_mask_3: 0.2035  loss_dice_3: 1.276  loss_ce_4: 0.568  loss_mask_4: 0.2004  loss_dice_4: 1.307  loss_ce_5: 0.5354  loss_mask_5: 0.1962  loss_dice_5: 1.268  loss_ce_6: 0.5494  loss_mask_6: 0.1991  loss_dice_6: 1.272  loss_ce_7: 0.5677  loss_mask_7: 0.1983  loss_dice_7: 1.244  loss_ce_8: 0.5434  loss_mask_8: 0.196  loss_dice_8: 1.259    time: 1.0476  last_time: 1.0210  data_time: 0.0666  last_data_time: 0.0749   lr: 0.0001  max_mem: 32614M
[10/17 14:56:23] d2.utils.events INFO:  eta: 0:43:25  iter: 499  total_loss: 19.89  loss_ce: 0.4868  loss_mask: 0.1899  loss_dice: 1.22  loss_ce_0: 0.6111  loss_mask_0: 0.2209  loss_dice_0: 1.492  loss_ce_1: 0.6844  loss_mask_1: 0.1984  loss_dice_1: 1.379  loss_ce_2: 0.6191  loss_mask_2: 0.1936  loss_dice_2: 1.331  loss_ce_3: 0.5375  loss_mask_3: 0.1899  loss_dice_3: 1.307  loss_ce_4: 0.53  loss_mask_4: 0.1911  loss_dice_4: 1.283  loss_ce_5: 0.5184  loss_mask_5: 0.189  loss_dice_5: 1.261  loss_ce_6: 0.4928  loss_mask_6: 0.1913  loss_dice_6: 1.263  loss_ce_7: 0.5068  loss_mask_7: 0.1894  loss_dice_7: 1.248  loss_ce_8: 0.4893  loss_mask_8: 0.19  loss_dice_8: 1.234    time: 1.0478  last_time: 1.0141  data_time: 0.0727  last_data_time: 0.0489   lr: 0.0001  max_mem: 32614M
[10/17 14:56:44] d2.utils.events INFO:  eta: 0:43:05  iter: 519  total_loss: 21.92  loss_ce: 0.5581  loss_mask: 0.1853  loss_dice: 1.341  loss_ce_0: 0.6173  loss_mask_0: 0.2156  loss_dice_0: 1.515  loss_ce_1: 0.708  loss_mask_1: 0.1983  loss_dice_1: 1.416  loss_ce_2: 0.6695  loss_mask_2: 0.1934  loss_dice_2: 1.454  loss_ce_3: 0.6034  loss_mask_3: 0.1894  loss_dice_3: 1.374  loss_ce_4: 0.6024  loss_mask_4: 0.1901  loss_dice_4: 1.332  loss_ce_5: 0.5678  loss_mask_5: 0.1921  loss_dice_5: 1.328  loss_ce_6: 0.549  loss_mask_6: 0.184  loss_dice_6: 1.322  loss_ce_7: 0.549  loss_mask_7: 0.1865  loss_dice_7: 1.302  loss_ce_8: 0.5673  loss_mask_8: 0.1854  loss_dice_8: 1.316    time: 1.0483  last_time: 1.1040  data_time: 0.0697  last_data_time: 0.0940   lr: 0.0001  max_mem: 32614M
[10/17 14:57:05] d2.utils.events INFO:  eta: 0:42:47  iter: 539  total_loss: 21.53  loss_ce: 0.5432  loss_mask: 0.1735  loss_dice: 1.314  loss_ce_0: 0.6083  loss_mask_0: 0.1997  loss_dice_0: 1.554  loss_ce_1: 0.6585  loss_mask_1: 0.1867  loss_dice_1: 1.468  loss_ce_2: 0.6631  loss_mask_2: 0.1827  loss_dice_2: 1.387  loss_ce_3: 0.6052  loss_mask_3: 0.1782  loss_dice_3: 1.331  loss_ce_4: 0.5881  loss_mask_4: 0.1789  loss_dice_4: 1.353  loss_ce_5: 0.5737  loss_mask_5: 0.182  loss_dice_5: 1.358  loss_ce_6: 0.5507  loss_mask_6: 0.1753  loss_dice_6: 1.34  loss_ce_7: 0.5483  loss_mask_7: 0.1747  loss_dice_7: 1.325  loss_ce_8: 0.5738  loss_mask_8: 0.1717  loss_dice_8: 1.311    time: 1.0489  last_time: 1.1133  data_time: 0.0731  last_data_time: 0.0811   lr: 0.0001  max_mem: 32614M
[10/17 14:57:27] d2.utils.events INFO:  eta: 0:42:29  iter: 559  total_loss: 20.73  loss_ce: 0.53  loss_mask: 0.1817  loss_dice: 1.311  loss_ce_0: 0.6607  loss_mask_0: 0.2053  loss_dice_0: 1.511  loss_ce_1: 0.7086  loss_mask_1: 0.186  loss_dice_1: 1.425  loss_ce_2: 0.6645  loss_mask_2: 0.1862  loss_dice_2: 1.376  loss_ce_3: 0.5969  loss_mask_3: 0.1795  loss_dice_3: 1.327  loss_ce_4: 0.5834  loss_mask_4: 0.1809  loss_dice_4: 1.31  loss_ce_5: 0.5612  loss_mask_5: 0.1799  loss_dice_5: 1.303  loss_ce_6: 0.5431  loss_mask_6: 0.1819  loss_dice_6: 1.302  loss_ce_7: 0.551  loss_mask_7: 0.1818  loss_dice_7: 1.272  loss_ce_8: 0.55  loss_mask_8: 0.1774  loss_dice_8: 1.279    time: 1.0494  last_time: 1.0784  data_time: 0.0736  last_data_time: 0.0841   lr: 0.0001  max_mem: 32614M
[10/17 14:57:48] d2.utils.events INFO:  eta: 0:42:08  iter: 579  total_loss: 20.65  loss_ce: 0.5155  loss_mask: 0.1951  loss_dice: 1.266  loss_ce_0: 0.6053  loss_mask_0: 0.2143  loss_dice_0: 1.451  loss_ce_1: 0.6773  loss_mask_1: 0.2079  loss_dice_1: 1.343  loss_ce_2: 0.6175  loss_mask_2: 0.2041  loss_dice_2: 1.299  loss_ce_3: 0.5358  loss_mask_3: 0.2018  loss_dice_3: 1.254  loss_ce_4: 0.5803  loss_mask_4: 0.202  loss_dice_4: 1.239  loss_ce_5: 0.5212  loss_mask_5: 0.1957  loss_dice_5: 1.28  loss_ce_6: 0.5181  loss_mask_6: 0.1985  loss_dice_6: 1.245  loss_ce_7: 0.5077  loss_mask_7: 0.1955  loss_dice_7: 1.215  loss_ce_8: 0.4983  loss_mask_8: 0.1931  loss_dice_8: 1.285    time: 1.0491  last_time: 1.0508  data_time: 0.0670  last_data_time: 0.0673   lr: 0.0001  max_mem: 32614M
[10/17 14:58:09] d2.utils.events INFO:  eta: 0:41:50  iter: 599  total_loss: 21.52  loss_ce: 0.5516  loss_mask: 0.1722  loss_dice: 1.322  loss_ce_0: 0.6214  loss_mask_0: 0.1991  loss_dice_0: 1.585  loss_ce_1: 0.6852  loss_mask_1: 0.1788  loss_dice_1: 1.522  loss_ce_2: 0.6449  loss_mask_2: 0.1711  loss_dice_2: 1.46  loss_ce_3: 0.5811  loss_mask_3: 0.1679  loss_dice_3: 1.362  loss_ce_4: 0.5988  loss_mask_4: 0.1709  loss_dice_4: 1.359  loss_ce_5: 0.5466  loss_mask_5: 0.1674  loss_dice_5: 1.39  loss_ce_6: 0.5239  loss_mask_6: 0.1682  loss_dice_6: 1.318  loss_ce_7: 0.5147  loss_mask_7: 0.1741  loss_dice_7: 1.369  loss_ce_8: 0.5516  loss_mask_8: 0.1681  loss_dice_8: 1.351    time: 1.0501  last_time: 1.0781  data_time: 0.0803  last_data_time: 0.0974   lr: 0.0001  max_mem: 32614M
[10/17 14:58:31] d2.utils.events INFO:  eta: 0:41:31  iter: 619  total_loss: 20.78  loss_ce: 0.5431  loss_mask: 0.1666  loss_dice: 1.277  loss_ce_0: 0.5872  loss_mask_0: 0.1898  loss_dice_0: 1.497  loss_ce_1: 0.6552  loss_mask_1: 0.1786  loss_dice_1: 1.452  loss_ce_2: 0.6143  loss_mask_2: 0.1747  loss_dice_2: 1.388  loss_ce_3: 0.5766  loss_mask_3: 0.1693  loss_dice_3: 1.296  loss_ce_4: 0.5433  loss_mask_4: 0.1682  loss_dice_4: 1.332  loss_ce_5: 0.5252  loss_mask_5: 0.1674  loss_dice_5: 1.308  loss_ce_6: 0.5146  loss_mask_6: 0.1681  loss_dice_6: 1.297  loss_ce_7: 0.5186  loss_mask_7: 0.1678  loss_dice_7: 1.289  loss_ce_8: 0.5378  loss_mask_8: 0.1662  loss_dice_8: 1.298    time: 1.0505  last_time: 1.0547  data_time: 0.0751  last_data_time: 0.0687   lr: 0.0001  max_mem: 32614M
[10/17 14:58:52] d2.utils.events INFO:  eta: 0:41:11  iter: 639  total_loss: 21.24  loss_ce: 0.5374  loss_mask: 0.1726  loss_dice: 1.307  loss_ce_0: 0.6105  loss_mask_0: 0.1994  loss_dice_0: 1.525  loss_ce_1: 0.672  loss_mask_1: 0.19  loss_dice_1: 1.432  loss_ce_2: 0.6269  loss_mask_2: 0.1808  loss_dice_2: 1.38  loss_ce_3: 0.5915  loss_mask_3: 0.1836  loss_dice_3: 1.339  loss_ce_4: 0.551  loss_mask_4: 0.1775  loss_dice_4: 1.3  loss_ce_5: 0.5276  loss_mask_5: 0.1803  loss_dice_5: 1.352  loss_ce_6: 0.5214  loss_mask_6: 0.1745  loss_dice_6: 1.289  loss_ce_7: 0.5401  loss_mask_7: 0.1726  loss_dice_7: 1.262  loss_ce_8: 0.5195  loss_mask_8: 0.1725  loss_dice_8: 1.311    time: 1.0507  last_time: 1.0074  data_time: 0.0717  last_data_time: 0.0773   lr: 0.0001  max_mem: 32614M
[10/17 14:59:13] d2.utils.events INFO:  eta: 0:40:49  iter: 659  total_loss: 20.32  loss_ce: 0.4882  loss_mask: 0.1829  loss_dice: 1.258  loss_ce_0: 0.5746  loss_mask_0: 0.2158  loss_dice_0: 1.46  loss_ce_1: 0.6525  loss_mask_1: 0.1934  loss_dice_1: 1.349  loss_ce_2: 0.5663  loss_mask_2: 0.1884  loss_dice_2: 1.302  loss_ce_3: 0.549  loss_mask_3: 0.1829  loss_dice_3: 1.278  loss_ce_4: 0.5438  loss_mask_4: 0.1835  loss_dice_4: 1.296  loss_ce_5: 0.5125  loss_mask_5: 0.1836  loss_dice_5: 1.272  loss_ce_6: 0.5172  loss_mask_6: 0.1827  loss_dice_6: 1.228  loss_ce_7: 0.5092  loss_mask_7: 0.1831  loss_dice_7: 1.247  loss_ce_8: 0.4827  loss_mask_8: 0.181  loss_dice_8: 1.219    time: 1.0503  last_time: 1.0202  data_time: 0.0707  last_data_time: 0.0703   lr: 0.0001  max_mem: 32614M
[10/17 14:59:34] d2.utils.events INFO:  eta: 0:40:29  iter: 679  total_loss: 21.12  loss_ce: 0.5673  loss_mask: 0.1741  loss_dice: 1.321  loss_ce_0: 0.6685  loss_mask_0: 0.2028  loss_dice_0: 1.484  loss_ce_1: 0.7436  loss_mask_1: 0.1853  loss_dice_1: 1.37  loss_ce_2: 0.7144  loss_mask_2: 0.1778  loss_dice_2: 1.325  loss_ce_3: 0.6217  loss_mask_3: 0.1744  loss_dice_3: 1.295  loss_ce_4: 0.607  loss_mask_4: 0.1764  loss_dice_4: 1.297  loss_ce_5: 0.5861  loss_mask_5: 0.1727  loss_dice_5: 1.319  loss_ce_6: 0.5313  loss_mask_6: 0.1755  loss_dice_6: 1.33  loss_ce_7: 0.5724  loss_mask_7: 0.1746  loss_dice_7: 1.321  loss_ce_8: 0.5747  loss_mask_8: 0.1736  loss_dice_8: 1.321    time: 1.0506  last_time: 1.0565  data_time: 0.0734  last_data_time: 0.0730   lr: 0.0001  max_mem: 32614M
[10/17 14:59:55] d2.utils.events INFO:  eta: 0:40:07  iter: 699  total_loss: 21.09  loss_ce: 0.5175  loss_mask: 0.1708  loss_dice: 1.284  loss_ce_0: 0.5855  loss_mask_0: 0.2132  loss_dice_0: 1.523  loss_ce_1: 0.6604  loss_mask_1: 0.1889  loss_dice_1: 1.377  loss_ce_2: 0.6372  loss_mask_2: 0.1822  loss_dice_2: 1.327  loss_ce_3: 0.5445  loss_mask_3: 0.1756  loss_dice_3: 1.331  loss_ce_4: 0.5576  loss_mask_4: 0.1738  loss_dice_4: 1.309  loss_ce_5: 0.5489  loss_mask_5: 0.1726  loss_dice_5: 1.306  loss_ce_6: 0.4789  loss_mask_6: 0.173  loss_dice_6: 1.295  loss_ce_7: 0.5228  loss_mask_7: 0.1724  loss_dice_7: 1.278  loss_ce_8: 0.5243  loss_mask_8: 0.1716  loss_dice_8: 1.277    time: 1.0504  last_time: 1.0744  data_time: 0.0642  last_data_time: 0.0637   lr: 0.0001  max_mem: 32614M
[10/17 15:00:16] d2.utils.events INFO:  eta: 0:39:46  iter: 719  total_loss: 20.93  loss_ce: 0.5623  loss_mask: 0.1787  loss_dice: 1.266  loss_ce_0: 0.5798  loss_mask_0: 0.211  loss_dice_0: 1.489  loss_ce_1: 0.6642  loss_mask_1: 0.1863  loss_dice_1: 1.408  loss_ce_2: 0.6388  loss_mask_2: 0.1806  loss_dice_2: 1.341  loss_ce_3: 0.5901  loss_mask_3: 0.1831  loss_dice_3: 1.314  loss_ce_4: 0.565  loss_mask_4: 0.178  loss_dice_4: 1.311  loss_ce_5: 0.5292  loss_mask_5: 0.1786  loss_dice_5: 1.299  loss_ce_6: 0.5358  loss_mask_6: 0.178  loss_dice_6: 1.28  loss_ce_7: 0.5604  loss_mask_7: 0.1766  loss_dice_7: 1.27  loss_ce_8: 0.53  loss_mask_8: 0.1777  loss_dice_8: 1.263    time: 1.0502  last_time: 1.0497  data_time: 0.0662  last_data_time: 0.0611   lr: 0.0001  max_mem: 32614M
[10/17 15:00:37] d2.utils.events INFO:  eta: 0:39:24  iter: 739  total_loss: 20.05  loss_ce: 0.5234  loss_mask: 0.1901  loss_dice: 1.232  loss_ce_0: 0.5605  loss_mask_0: 0.2126  loss_dice_0: 1.476  loss_ce_1: 0.6128  loss_mask_1: 0.205  loss_dice_1: 1.376  loss_ce_2: 0.5845  loss_mask_2: 0.1933  loss_dice_2: 1.333  loss_ce_3: 0.5793  loss_mask_3: 0.193  loss_dice_3: 1.281  loss_ce_4: 0.5199  loss_mask_4: 0.1905  loss_dice_4: 1.277  loss_ce_5: 0.5033  loss_mask_5: 0.1869  loss_dice_5: 1.242  loss_ce_6: 0.4841  loss_mask_6: 0.1863  loss_dice_6: 1.282  loss_ce_7: 0.5108  loss_mask_7: 0.1891  loss_dice_7: 1.248  loss_ce_8: 0.4849  loss_mask_8: 0.1878  loss_dice_8: 1.253    time: 1.0501  last_time: 1.1270  data_time: 0.0660  last_data_time: 0.0607   lr: 0.0001  max_mem: 32614M
[10/17 15:00:58] d2.utils.events INFO:  eta: 0:39:03  iter: 759  total_loss: 20.5  loss_ce: 0.5279  loss_mask: 0.1667  loss_dice: 1.283  loss_ce_0: 0.6184  loss_mask_0: 0.1986  loss_dice_0: 1.456  loss_ce_1: 0.6724  loss_mask_1: 0.1932  loss_dice_1: 1.365  loss_ce_2: 0.5964  loss_mask_2: 0.1763  loss_dice_2: 1.363  loss_ce_3: 0.5772  loss_mask_3: 0.1738  loss_dice_3: 1.296  loss_ce_4: 0.5634  loss_mask_4: 0.1721  loss_dice_4: 1.278  loss_ce_5: 0.539  loss_mask_5: 0.17  loss_dice_5: 1.3  loss_ce_6: 0.541  loss_mask_6: 0.1673  loss_dice_6: 1.264  loss_ce_7: 0.5345  loss_mask_7: 0.1676  loss_dice_7: 1.24  loss_ce_8: 0.5248  loss_mask_8: 0.1673  loss_dice_8: 1.276    time: 1.0501  last_time: 0.9985  data_time: 0.0651  last_data_time: 0.0552   lr: 0.0001  max_mem: 32614M
[10/17 15:01:19] d2.utils.events INFO:  eta: 0:38:42  iter: 779  total_loss: 20.5  loss_ce: 0.5219  loss_mask: 0.1698  loss_dice: 1.256  loss_ce_0: 0.6248  loss_mask_0: 0.1914  loss_dice_0: 1.503  loss_ce_1: 0.6544  loss_mask_1: 0.1789  loss_dice_1: 1.391  loss_ce_2: 0.6276  loss_mask_2: 0.1754  loss_dice_2: 1.36  loss_ce_3: 0.5728  loss_mask_3: 0.171  loss_dice_3: 1.287  loss_ce_4: 0.5472  loss_mask_4: 0.1705  loss_dice_4: 1.301  loss_ce_5: 0.5656  loss_mask_5: 0.1705  loss_dice_5: 1.285  loss_ce_6: 0.5309  loss_mask_6: 0.1705  loss_dice_6: 1.276  loss_ce_7: 0.5087  loss_mask_7: 0.1702  loss_dice_7: 1.271  loss_ce_8: 0.515  loss_mask_8: 0.1694  loss_dice_8: 1.261    time: 1.0501  last_time: 1.0422  data_time: 0.0655  last_data_time: 0.0620   lr: 0.0001  max_mem: 32614M
[10/17 15:01:40] d2.utils.events INFO:  eta: 0:38:21  iter: 799  total_loss: 20.03  loss_ce: 0.4906  loss_mask: 0.1799  loss_dice: 1.229  loss_ce_0: 0.5368  loss_mask_0: 0.2046  loss_dice_0: 1.425  loss_ce_1: 0.6366  loss_mask_1: 0.1943  loss_dice_1: 1.342  loss_ce_2: 0.5862  loss_mask_2: 0.1861  loss_dice_2: 1.299  loss_ce_3: 0.5166  loss_mask_3: 0.1853  loss_dice_3: 1.239  loss_ce_4: 0.4927  loss_mask_4: 0.1841  loss_dice_4: 1.283  loss_ce_5: 0.506  loss_mask_5: 0.1796  loss_dice_5: 1.242  loss_ce_6: 0.4667  loss_mask_6: 0.1842  loss_dice_6: 1.205  loss_ce_7: 0.513  loss_mask_7: 0.1862  loss_dice_7: 1.201  loss_ce_8: 0.4858  loss_mask_8: 0.1776  loss_dice_8: 1.176    time: 1.0499  last_time: 1.0124  data_time: 0.0628  last_data_time: 0.0602   lr: 0.0001  max_mem: 32614M
[10/17 15:02:01] d2.utils.events INFO:  eta: 0:38:02  iter: 819  total_loss: 21.64  loss_ce: 0.5403  loss_mask: 0.1676  loss_dice: 1.324  loss_ce_0: 0.611  loss_mask_0: 0.202  loss_dice_0: 1.55  loss_ce_1: 0.6757  loss_mask_1: 0.1853  loss_dice_1: 1.499  loss_ce_2: 0.64  loss_mask_2: 0.1736  loss_dice_2: 1.407  loss_ce_3: 0.5527  loss_mask_3: 0.1699  loss_dice_3: 1.423  loss_ce_4: 0.5432  loss_mask_4: 0.1696  loss_dice_4: 1.408  loss_ce_5: 0.5572  loss_mask_5: 0.1682  loss_dice_5: 1.377  loss_ce_6: 0.5474  loss_mask_6: 0.169  loss_dice_6: 1.354  loss_ce_7: 0.5533  loss_mask_7: 0.1692  loss_dice_7: 1.369  loss_ce_8: 0.5246  loss_mask_8: 0.1667  loss_dice_8: 1.364    time: 1.0506  last_time: 1.0474  data_time: 0.0765  last_data_time: 0.0808   lr: 0.0001  max_mem: 32614M
[10/17 15:02:22] d2.utils.events INFO:  eta: 0:37:40  iter: 839  total_loss: 20.39  loss_ce: 0.5045  loss_mask: 0.1873  loss_dice: 1.269  loss_ce_0: 0.5735  loss_mask_0: 0.2283  loss_dice_0: 1.453  loss_ce_1: 0.6222  loss_mask_1: 0.2048  loss_dice_1: 1.367  loss_ce_2: 0.6037  loss_mask_2: 0.1909  loss_dice_2: 1.279  loss_ce_3: 0.5377  loss_mask_3: 0.1894  loss_dice_3: 1.247  loss_ce_4: 0.5365  loss_mask_4: 0.188  loss_dice_4: 1.25  loss_ce_5: 0.5388  loss_mask_5: 0.1907  loss_dice_5: 1.271  loss_ce_6: 0.4842  loss_mask_6: 0.1866  loss_dice_6: 1.267  loss_ce_7: 0.4938  loss_mask_7: 0.1866  loss_dice_7: 1.225  loss_ce_8: 0.523  loss_mask_8: 0.1838  loss_dice_8: 1.214    time: 1.0503  last_time: 1.0358  data_time: 0.0730  last_data_time: 0.0587   lr: 0.0001  max_mem: 32614M
[10/17 15:02:43] d2.utils.events INFO:  eta: 0:37:20  iter: 859  total_loss: 19.8  loss_ce: 0.5032  loss_mask: 0.1703  loss_dice: 1.23  loss_ce_0: 0.5854  loss_mask_0: 0.1982  loss_dice_0: 1.408  loss_ce_1: 0.639  loss_mask_1: 0.1851  loss_dice_1: 1.386  loss_ce_2: 0.6081  loss_mask_2: 0.1745  loss_dice_2: 1.327  loss_ce_3: 0.5251  loss_mask_3: 0.1745  loss_dice_3: 1.299  loss_ce_4: 0.5039  loss_mask_4: 0.177  loss_dice_4: 1.266  loss_ce_5: 0.491  loss_mask_5: 0.1769  loss_dice_5: 1.26  loss_ce_6: 0.5151  loss_mask_6: 0.1768  loss_dice_6: 1.23  loss_ce_7: 0.4858  loss_mask_7: 0.1725  loss_dice_7: 1.256  loss_ce_8: 0.5018  loss_mask_8: 0.1705  loss_dice_8: 1.243    time: 1.0504  last_time: 0.9935  data_time: 0.0703  last_data_time: 0.0584   lr: 0.0001  max_mem: 32614M
[10/17 15:03:05] d2.utils.events INFO:  eta: 0:37:00  iter: 879  total_loss: 20.27  loss_ce: 0.5407  loss_mask: 0.1718  loss_dice: 1.233  loss_ce_0: 0.5911  loss_mask_0: 0.205  loss_dice_0: 1.492  loss_ce_1: 0.6511  loss_mask_1: 0.1926  loss_dice_1: 1.379  loss_ce_2: 0.6057  loss_mask_2: 0.1837  loss_dice_2: 1.325  loss_ce_3: 0.5647  loss_mask_3: 0.1724  loss_dice_3: 1.303  loss_ce_4: 0.5568  loss_mask_4: 0.1716  loss_dice_4: 1.297  loss_ce_5: 0.5368  loss_mask_5: 0.1701  loss_dice_5: 1.309  loss_ce_6: 0.5163  loss_mask_6: 0.1713  loss_dice_6: 1.252  loss_ce_7: 0.5244  loss_mask_7: 0.1738  loss_dice_7: 1.244  loss_ce_8: 0.5475  loss_mask_8: 0.1762  loss_dice_8: 1.263    time: 1.0510  last_time: 1.1034  data_time: 0.0697  last_data_time: 0.0826   lr: 0.0001  max_mem: 32614M
[10/17 15:03:26] d2.utils.events INFO:  eta: 0:36:39  iter: 899  total_loss: 19.61  loss_ce: 0.5091  loss_mask: 0.1634  loss_dice: 1.2  loss_ce_0: 0.5706  loss_mask_0: 0.2014  loss_dice_0: 1.449  loss_ce_1: 0.6639  loss_mask_1: 0.1832  loss_dice_1: 1.311  loss_ce_2: 0.5722  loss_mask_2: 0.1708  loss_dice_2: 1.252  loss_ce_3: 0.5242  loss_mask_3: 0.1719  loss_dice_3: 1.251  loss_ce_4: 0.5105  loss_mask_4: 0.167  loss_dice_4: 1.236  loss_ce_5: 0.5038  loss_mask_5: 0.1655  loss_dice_5: 1.217  loss_ce_6: 0.5036  loss_mask_6: 0.1665  loss_dice_6: 1.215  loss_ce_7: 0.4927  loss_mask_7: 0.167  loss_dice_7: 1.2  loss_ce_8: 0.4788  loss_mask_8: 0.1649  loss_dice_8: 1.174    time: 1.0509  last_time: 1.1115  data_time: 0.0681  last_data_time: 0.0778   lr: 0.0001  max_mem: 32614M
[10/17 15:03:47] d2.utils.events INFO:  eta: 0:36:16  iter: 919  total_loss: 19.29  loss_ce: 0.507  loss_mask: 0.1834  loss_dice: 1.161  loss_ce_0: 0.5582  loss_mask_0: 0.2072  loss_dice_0: 1.44  loss_ce_1: 0.6589  loss_mask_1: 0.1946  loss_dice_1: 1.311  loss_ce_2: 0.6002  loss_mask_2: 0.1851  loss_dice_2: 1.256  loss_ce_3: 0.5278  loss_mask_3: 0.1848  loss_dice_3: 1.227  loss_ce_4: 0.5114  loss_mask_4: 0.1839  loss_dice_4: 1.195  loss_ce_5: 0.4868  loss_mask_5: 0.1821  loss_dice_5: 1.223  loss_ce_6: 0.4998  loss_mask_6: 0.1827  loss_dice_6: 1.189  loss_ce_7: 0.4924  loss_mask_7: 0.1836  loss_dice_7: 1.166  loss_ce_8: 0.4901  loss_mask_8: 0.181  loss_dice_8: 1.184    time: 1.0505  last_time: 1.0256  data_time: 0.0575  last_data_time: 0.0545   lr: 0.0001  max_mem: 32614M
[10/17 15:04:08] d2.utils.events INFO:  eta: 0:35:55  iter: 939  total_loss: 20.03  loss_ce: 0.4891  loss_mask: 0.1682  loss_dice: 1.235  loss_ce_0: 0.6005  loss_mask_0: 0.1931  loss_dice_0: 1.429  loss_ce_1: 0.6711  loss_mask_1: 0.1785  loss_dice_1: 1.365  loss_ce_2: 0.6196  loss_mask_2: 0.1682  loss_dice_2: 1.282  loss_ce_3: 0.5525  loss_mask_3: 0.1709  loss_dice_3: 1.215  loss_ce_4: 0.536  loss_mask_4: 0.1687  loss_dice_4: 1.249  loss_ce_5: 0.4988  loss_mask_5: 0.1654  loss_dice_5: 1.225  loss_ce_6: 0.5138  loss_mask_6: 0.1662  loss_dice_6: 1.198  loss_ce_7: 0.4925  loss_mask_7: 0.1691  loss_dice_7: 1.205  loss_ce_8: 0.4842  loss_mask_8: 0.167  loss_dice_8: 1.19    time: 1.0506  last_time: 1.0431  data_time: 0.0701  last_data_time: 0.0776   lr: 0.0001  max_mem: 32614M
[10/17 15:04:29] d2.utils.events INFO:  eta: 0:35:35  iter: 959  total_loss: 21.3  loss_ce: 0.5353  loss_mask: 0.1743  loss_dice: 1.3  loss_ce_0: 0.6343  loss_mask_0: 0.2009  loss_dice_0: 1.508  loss_ce_1: 0.6481  loss_mask_1: 0.1889  loss_dice_1: 1.449  loss_ce_2: 0.6123  loss_mask_2: 0.1787  loss_dice_2: 1.336  loss_ce_3: 0.5468  loss_mask_3: 0.1758  loss_dice_3: 1.325  loss_ce_4: 0.5214  loss_mask_4: 0.1714  loss_dice_4: 1.307  loss_ce_5: 0.5304  loss_mask_5: 0.1729  loss_dice_5: 1.297  loss_ce_6: 0.5227  loss_mask_6: 0.1752  loss_dice_6: 1.276  loss_ce_7: 0.4975  loss_mask_7: 0.1743  loss_dice_7: 1.295  loss_ce_8: 0.529  loss_mask_8: 0.1736  loss_dice_8: 1.296    time: 1.0510  last_time: 1.1097  data_time: 0.0701  last_data_time: 0.0966   lr: 0.0001  max_mem: 32614M
[10/17 15:04:50] d2.utils.events INFO:  eta: 0:35:13  iter: 979  total_loss: 20.3  loss_ce: 0.51  loss_mask: 0.167  loss_dice: 1.201  loss_ce_0: 0.5564  loss_mask_0: 0.1933  loss_dice_0: 1.42  loss_ce_1: 0.6356  loss_mask_1: 0.1824  loss_dice_1: 1.39  loss_ce_2: 0.5815  loss_mask_2: 0.1754  loss_dice_2: 1.261  loss_ce_3: 0.5418  loss_mask_3: 0.1648  loss_dice_3: 1.259  loss_ce_4: 0.481  loss_mask_4: 0.165  loss_dice_4: 1.25  loss_ce_5: 0.5188  loss_mask_5: 0.1644  loss_dice_5: 1.203  loss_ce_6: 0.5022  loss_mask_6: 0.1668  loss_dice_6: 1.212  loss_ce_7: 0.4951  loss_mask_7: 0.167  loss_dice_7: 1.208  loss_ce_8: 0.4754  loss_mask_8: 0.1644  loss_dice_8: 1.201    time: 1.0510  last_time: 1.0473  data_time: 0.0709  last_data_time: 0.0512   lr: 0.0001  max_mem: 32614M
[10/17 15:05:12] d2.utils.events INFO:  eta: 0:34:53  iter: 999  total_loss: 21.25  loss_ce: 0.5057  loss_mask: 0.168  loss_dice: 1.328  loss_ce_0: 0.5965  loss_mask_0: 0.1957  loss_dice_0: 1.568  loss_ce_1: 0.6439  loss_mask_1: 0.1801  loss_dice_1: 1.545  loss_ce_2: 0.6379  loss_mask_2: 0.1693  loss_dice_2: 1.421  loss_ce_3: 0.5306  loss_mask_3: 0.1684  loss_dice_3: 1.413  loss_ce_4: 0.5175  loss_mask_4: 0.169  loss_dice_4: 1.371  loss_ce_5: 0.5205  loss_mask_5: 0.1692  loss_dice_5: 1.358  loss_ce_6: 0.5166  loss_mask_6: 0.1676  loss_dice_6: 1.313  loss_ce_7: 0.5033  loss_mask_7: 0.1655  loss_dice_7: 1.324  loss_ce_8: 0.5106  loss_mask_8: 0.1682  loss_dice_8: 1.335    time: 1.0514  last_time: 1.0628  data_time: 0.0675  last_data_time: 0.0798   lr: 0.0001  max_mem: 32614M
[10/17 15:05:33] d2.utils.events INFO:  eta: 0:34:32  iter: 1019  total_loss: 19.88  loss_ce: 0.4779  loss_mask: 0.1809  loss_dice: 1.239  loss_ce_0: 0.5506  loss_mask_0: 0.2085  loss_dice_0: 1.483  loss_ce_1: 0.6578  loss_mask_1: 0.1991  loss_dice_1: 1.383  loss_ce_2: 0.5861  loss_mask_2: 0.1904  loss_dice_2: 1.295  loss_ce_3: 0.5339  loss_mask_3: 0.1838  loss_dice_3: 1.263  loss_ce_4: 0.5007  loss_mask_4: 0.1847  loss_dice_4: 1.27  loss_ce_5: 0.4973  loss_mask_5: 0.1818  loss_dice_5: 1.241  loss_ce_6: 0.4516  loss_mask_6: 0.1824  loss_dice_6: 1.21  loss_ce_7: 0.4709  loss_mask_7: 0.182  loss_dice_7: 1.225  loss_ce_8: 0.4694  loss_mask_8: 0.1787  loss_dice_8: 1.226    time: 1.0514  last_time: 1.0254  data_time: 0.0697  last_data_time: 0.0555   lr: 0.0001  max_mem: 32614M
[10/17 15:05:54] d2.utils.events INFO:  eta: 0:34:11  iter: 1039  total_loss: 19.58  loss_ce: 0.4923  loss_mask: 0.1764  loss_dice: 1.189  loss_ce_0: 0.5584  loss_mask_0: 0.2113  loss_dice_0: 1.391  loss_ce_1: 0.6552  loss_mask_1: 0.1998  loss_dice_1: 1.305  loss_ce_2: 0.6028  loss_mask_2: 0.1832  loss_dice_2: 1.255  loss_ce_3: 0.5552  loss_mask_3: 0.1818  loss_dice_3: 1.209  loss_ce_4: 0.5025  loss_mask_4: 0.1787  loss_dice_4: 1.225  loss_ce_5: 0.4864  loss_mask_5: 0.1792  loss_dice_5: 1.213  loss_ce_6: 0.4815  loss_mask_6: 0.1774  loss_dice_6: 1.161  loss_ce_7: 0.4836  loss_mask_7: 0.1794  loss_dice_7: 1.182  loss_ce_8: 0.4621  loss_mask_8: 0.1753  loss_dice_8: 1.192    time: 1.0511  last_time: 1.0750  data_time: 0.0602  last_data_time: 0.0635   lr: 0.0001  max_mem: 32614M
[10/17 15:06:15] d2.utils.events INFO:  eta: 0:33:51  iter: 1059  total_loss: 20.29  loss_ce: 0.4762  loss_mask: 0.1708  loss_dice: 1.251  loss_ce_0: 0.5978  loss_mask_0: 0.198  loss_dice_0: 1.458  loss_ce_1: 0.6617  loss_mask_1: 0.1793  loss_dice_1: 1.373  loss_ce_2: 0.5978  loss_mask_2: 0.1717  loss_dice_2: 1.295  loss_ce_3: 0.542  loss_mask_3: 0.1665  loss_dice_3: 1.292  loss_ce_4: 0.5154  loss_mask_4: 0.1694  loss_dice_4: 1.288  loss_ce_5: 0.4986  loss_mask_5: 0.1654  loss_dice_5: 1.253  loss_ce_6: 0.4967  loss_mask_6: 0.166  loss_dice_6: 1.273  loss_ce_7: 0.4855  loss_mask_7: 0.1654  loss_dice_7: 1.252  loss_ce_8: 0.457  loss_mask_8: 0.1687  loss_dice_8: 1.249    time: 1.0514  last_time: 1.0543  data_time: 0.0746  last_data_time: 0.0847   lr: 0.0001  max_mem: 32614M
[10/17 15:06:36] d2.utils.events INFO:  eta: 0:33:31  iter: 1079  total_loss: 20.75  loss_ce: 0.5284  loss_mask: 0.1806  loss_dice: 1.264  loss_ce_0: 0.5735  loss_mask_0: 0.2083  loss_dice_0: 1.465  loss_ce_1: 0.6562  loss_mask_1: 0.1963  loss_dice_1: 1.423  loss_ce_2: 0.5855  loss_mask_2: 0.1806  loss_dice_2: 1.369  loss_ce_3: 0.5721  loss_mask_3: 0.1852  loss_dice_3: 1.34  loss_ce_4: 0.5365  loss_mask_4: 0.182  loss_dice_4: 1.305  loss_ce_5: 0.5165  loss_mask_5: 0.1796  loss_dice_5: 1.302  loss_ce_6: 0.5007  loss_mask_6: 0.1777  loss_dice_6: 1.257  loss_ce_7: 0.5149  loss_mask_7: 0.1804  loss_dice_7: 1.283  loss_ce_8: 0.5101  loss_mask_8: 0.1825  loss_dice_8: 1.26    time: 1.0515  last_time: 1.0379  data_time: 0.0757  last_data_time: 0.0745   lr: 0.0001  max_mem: 32614M
[10/17 15:06:57] d2.utils.events INFO:  eta: 0:33:11  iter: 1099  total_loss: 20.18  loss_ce: 0.4849  loss_mask: 0.1699  loss_dice: 1.227  loss_ce_0: 0.6015  loss_mask_0: 0.2039  loss_dice_0: 1.46  loss_ce_1: 0.6205  loss_mask_1: 0.1812  loss_dice_1: 1.415  loss_ce_2: 0.5807  loss_mask_2: 0.1717  loss_dice_2: 1.307  loss_ce_3: 0.5097  loss_mask_3: 0.1733  loss_dice_3: 1.295  loss_ce_4: 0.542  loss_mask_4: 0.1678  loss_dice_4: 1.289  loss_ce_5: 0.5102  loss_mask_5: 0.1702  loss_dice_5: 1.307  loss_ce_6: 0.4639  loss_mask_6: 0.1727  loss_dice_6: 1.27  loss_ce_7: 0.4819  loss_mask_7: 0.1718  loss_dice_7: 1.248  loss_ce_8: 0.4873  loss_mask_8: 0.1706  loss_dice_8: 1.24    time: 1.0516  last_time: 1.0916  data_time: 0.0688  last_data_time: 0.0759   lr: 0.0001  max_mem: 32614M
[10/17 15:07:19] d2.utils.events INFO:  eta: 0:32:51  iter: 1119  total_loss: 20.67  loss_ce: 0.5175  loss_mask: 0.1783  loss_dice: 1.276  loss_ce_0: 0.6023  loss_mask_0: 0.2044  loss_dice_0: 1.513  loss_ce_1: 0.6538  loss_mask_1: 0.1928  loss_dice_1: 1.418  loss_ce_2: 0.5948  loss_mask_2: 0.1819  loss_dice_2: 1.334  loss_ce_3: 0.5408  loss_mask_3: 0.183  loss_dice_3: 1.307  loss_ce_4: 0.5079  loss_mask_4: 0.1817  loss_dice_4: 1.295  loss_ce_5: 0.507  loss_mask_5: 0.1778  loss_dice_5: 1.306  loss_ce_6: 0.4935  loss_mask_6: 0.1778  loss_dice_6: 1.275  loss_ce_7: 0.4819  loss_mask_7: 0.18  loss_dice_7: 1.271  loss_ce_8: 0.5167  loss_mask_8: 0.1772  loss_dice_8: 1.28    time: 1.0518  last_time: 1.0642  data_time: 0.0703  last_data_time: 0.0838   lr: 0.0001  max_mem: 32614M
[10/17 15:07:40] d2.utils.events INFO:  eta: 0:32:30  iter: 1139  total_loss: 19.65  loss_ce: 0.4515  loss_mask: 0.1672  loss_dice: 1.2  loss_ce_0: 0.5746  loss_mask_0: 0.192  loss_dice_0: 1.414  loss_ce_1: 0.6552  loss_mask_1: 0.1829  loss_dice_1: 1.305  loss_ce_2: 0.5551  loss_mask_2: 0.1774  loss_dice_2: 1.254  loss_ce_3: 0.5544  loss_mask_3: 0.1739  loss_dice_3: 1.225  loss_ce_4: 0.5182  loss_mask_4: 0.1731  loss_dice_4: 1.235  loss_ce_5: 0.5025  loss_mask_5: 0.1726  loss_dice_5: 1.235  loss_ce_6: 0.5073  loss_mask_6: 0.1686  loss_dice_6: 1.208  loss_ce_7: 0.4739  loss_mask_7: 0.167  loss_dice_7: 1.206  loss_ce_8: 0.4885  loss_mask_8: 0.1678  loss_dice_8: 1.184    time: 1.0517  last_time: 1.0187  data_time: 0.0685  last_data_time: 0.0756   lr: 0.0001  max_mem: 32614M
[10/17 15:08:01] d2.utils.events INFO:  eta: 0:32:09  iter: 1159  total_loss: 20.11  loss_ce: 0.4732  loss_mask: 0.1655  loss_dice: 1.239  loss_ce_0: 0.5614  loss_mask_0: 0.193  loss_dice_0: 1.489  loss_ce_1: 0.6384  loss_mask_1: 0.1763  loss_dice_1: 1.392  loss_ce_2: 0.5919  loss_mask_2: 0.1711  loss_dice_2: 1.349  loss_ce_3: 0.5238  loss_mask_3: 0.1715  loss_dice_3: 1.298  loss_ce_4: 0.4892  loss_mask_4: 0.1677  loss_dice_4: 1.284  loss_ce_5: 0.4922  loss_mask_5: 0.1664  loss_dice_5: 1.263  loss_ce_6: 0.5086  loss_mask_6: 0.1681  loss_dice_6: 1.252  loss_ce_7: 0.4701  loss_mask_7: 0.1662  loss_dice_7: 1.228  loss_ce_8: 0.4644  loss_mask_8: 0.1644  loss_dice_8: 1.277    time: 1.0517  last_time: 1.0802  data_time: 0.0693  last_data_time: 0.0665   lr: 0.0001  max_mem: 32614M
[10/17 15:08:22] d2.utils.events INFO:  eta: 0:31:47  iter: 1179  total_loss: 19.64  loss_ce: 0.4787  loss_mask: 0.1724  loss_dice: 1.203  loss_ce_0: 0.5719  loss_mask_0: 0.1913  loss_dice_0: 1.48  loss_ce_1: 0.6345  loss_mask_1: 0.1807  loss_dice_1: 1.326  loss_ce_2: 0.5819  loss_mask_2: 0.1752  loss_dice_2: 1.28  loss_ce_3: 0.5334  loss_mask_3: 0.1746  loss_dice_3: 1.245  loss_ce_4: 0.52  loss_mask_4: 0.1739  loss_dice_4: 1.207  loss_ce_5: 0.5048  loss_mask_5: 0.1723  loss_dice_5: 1.23  loss_ce_6: 0.4895  loss_mask_6: 0.1717  loss_dice_6: 1.225  loss_ce_7: 0.4728  loss_mask_7: 0.1711  loss_dice_7: 1.217  loss_ce_8: 0.4681  loss_mask_8: 0.1702  loss_dice_8: 1.229    time: 1.0516  last_time: 1.0368  data_time: 0.0699  last_data_time: 0.0442   lr: 0.0001  max_mem: 32614M
[10/17 15:08:43] d2.utils.events INFO:  eta: 0:31:26  iter: 1199  total_loss: 20.23  loss_ce: 0.476  loss_mask: 0.1726  loss_dice: 1.278  loss_ce_0: 0.5633  loss_mask_0: 0.2053  loss_dice_0: 1.479  loss_ce_1: 0.6786  loss_mask_1: 0.1856  loss_dice_1: 1.372  loss_ce_2: 0.5938  loss_mask_2: 0.1767  loss_dice_2: 1.31  loss_ce_3: 0.5463  loss_mask_3: 0.1755  loss_dice_3: 1.273  loss_ce_4: 0.5466  loss_mask_4: 0.1761  loss_dice_4: 1.294  loss_ce_5: 0.4902  loss_mask_5: 0.1747  loss_dice_5: 1.278  loss_ce_6: 0.4809  loss_mask_6: 0.174  loss_dice_6: 1.257  loss_ce_7: 0.5067  loss_mask_7: 0.175  loss_dice_7: 1.25  loss_ce_8: 0.4738  loss_mask_8: 0.1743  loss_dice_8: 1.274    time: 1.0518  last_time: 1.0463  data_time: 0.0677  last_data_time: 0.0624   lr: 0.0001  max_mem: 32614M
[10/17 15:09:04] d2.utils.events INFO:  eta: 0:31:05  iter: 1219  total_loss: 20.17  loss_ce: 0.4693  loss_mask: 0.1649  loss_dice: 1.262  loss_ce_0: 0.4907  loss_mask_0: 0.1898  loss_dice_0: 1.479  loss_ce_1: 0.6006  loss_mask_1: 0.1795  loss_dice_1: 1.378  loss_ce_2: 0.5634  loss_mask_2: 0.1706  loss_dice_2: 1.34  loss_ce_3: 0.4985  loss_mask_3: 0.1681  loss_dice_3: 1.318  loss_ce_4: 0.4707  loss_mask_4: 0.1668  loss_dice_4: 1.283  loss_ce_5: 0.4521  loss_mask_5: 0.1659  loss_dice_5: 1.307  loss_ce_6: 0.4686  loss_mask_6: 0.1679  loss_dice_6: 1.239  loss_ce_7: 0.4774  loss_mask_7: 0.1672  loss_dice_7: 1.284  loss_ce_8: 0.4907  loss_mask_8: 0.1665  loss_dice_8: 1.282    time: 1.0520  last_time: 1.0500  data_time: 0.0701  last_data_time: 0.0651   lr: 0.0001  max_mem: 32614M
[10/17 15:09:26] d2.utils.events INFO:  eta: 0:30:45  iter: 1239  total_loss: 20.93  loss_ce: 0.5295  loss_mask: 0.1766  loss_dice: 1.247  loss_ce_0: 0.6197  loss_mask_0: 0.1957  loss_dice_0: 1.498  loss_ce_1: 0.6661  loss_mask_1: 0.1895  loss_dice_1: 1.442  loss_ce_2: 0.6373  loss_mask_2: 0.1831  loss_dice_2: 1.344  loss_ce_3: 0.589  loss_mask_3: 0.1824  loss_dice_3: 1.29  loss_ce_4: 0.5363  loss_mask_4: 0.1815  loss_dice_4: 1.3  loss_ce_5: 0.5453  loss_mask_5: 0.18  loss_dice_5: 1.302  loss_ce_6: 0.5183  loss_mask_6: 0.1795  loss_dice_6: 1.278  loss_ce_7: 0.5325  loss_mask_7: 0.179  loss_dice_7: 1.302  loss_ce_8: 0.5513  loss_mask_8: 0.1751  loss_dice_8: 1.267    time: 1.0521  last_time: 1.0170  data_time: 0.0702  last_data_time: 0.0633   lr: 0.0001  max_mem: 32614M
[10/17 15:09:47] d2.utils.events INFO:  eta: 0:30:24  iter: 1259  total_loss: 20.2  loss_ce: 0.5014  loss_mask: 0.1691  loss_dice: 1.216  loss_ce_0: 0.5535  loss_mask_0: 0.1929  loss_dice_0: 1.523  loss_ce_1: 0.6688  loss_mask_1: 0.1857  loss_dice_1: 1.348  loss_ce_2: 0.6039  loss_mask_2: 0.1741  loss_dice_2: 1.298  loss_ce_3: 0.526  loss_mask_3: 0.1716  loss_dice_3: 1.229  loss_ce_4: 0.4954  loss_mask_4: 0.1718  loss_dice_4: 1.264  loss_ce_5: 0.4684  loss_mask_5: 0.1702  loss_dice_5: 1.252  loss_ce_6: 0.4815  loss_mask_6: 0.1685  loss_dice_6: 1.226  loss_ce_7: 0.4726  loss_mask_7: 0.1701  loss_dice_7: 1.235  loss_ce_8: 0.4806  loss_mask_8: 0.1687  loss_dice_8: 1.241    time: 1.0522  last_time: 1.0481  data_time: 0.0690  last_data_time: 0.0558   lr: 0.0001  max_mem: 32614M
[10/17 15:10:08] d2.utils.events INFO:  eta: 0:30:04  iter: 1279  total_loss: 20.03  loss_ce: 0.4957  loss_mask: 0.1618  loss_dice: 1.247  loss_ce_0: 0.5591  loss_mask_0: 0.1866  loss_dice_0: 1.47  loss_ce_1: 0.6927  loss_mask_1: 0.1652  loss_dice_1: 1.39  loss_ce_2: 0.6044  loss_mask_2: 0.1633  loss_dice_2: 1.357  loss_ce_3: 0.5374  loss_mask_3: 0.1652  loss_dice_3: 1.288  loss_ce_4: 0.5087  loss_mask_4: 0.1643  loss_dice_4: 1.295  loss_ce_5: 0.5161  loss_mask_5: 0.1604  loss_dice_5: 1.288  loss_ce_6: 0.5275  loss_mask_6: 0.1616  loss_dice_6: 1.252  loss_ce_7: 0.4952  loss_mask_7: 0.1613  loss_dice_7: 1.254  loss_ce_8: 0.4935  loss_mask_8: 0.1617  loss_dice_8: 1.249    time: 1.0524  last_time: 1.0854  data_time: 0.0797  last_data_time: 0.0676   lr: 0.0001  max_mem: 32614M
[10/17 15:10:30] d2.utils.events INFO:  eta: 0:29:44  iter: 1299  total_loss: 19.52  loss_ce: 0.467  loss_mask: 0.1748  loss_dice: 1.244  loss_ce_0: 0.5797  loss_mask_0: 0.1942  loss_dice_0: 1.458  loss_ce_1: 0.6276  loss_mask_1: 0.18  loss_dice_1: 1.378  loss_ce_2: 0.5813  loss_mask_2: 0.1748  loss_dice_2: 1.302  loss_ce_3: 0.522  loss_mask_3: 0.1746  loss_dice_3: 1.26  loss_ce_4: 0.5011  loss_mask_4: 0.1726  loss_dice_4: 1.269  loss_ce_5: 0.4847  loss_mask_5: 0.1733  loss_dice_5: 1.283  loss_ce_6: 0.5034  loss_mask_6: 0.1729  loss_dice_6: 1.228  loss_ce_7: 0.4737  loss_mask_7: 0.1726  loss_dice_7: 1.239  loss_ce_8: 0.452  loss_mask_8: 0.1706  loss_dice_8: 1.243    time: 1.0526  last_time: 1.0621  data_time: 0.0718  last_data_time: 0.0733   lr: 0.0001  max_mem: 32614M
[10/17 15:10:51] d2.utils.events INFO:  eta: 0:29:22  iter: 1319  total_loss: 19.43  loss_ce: 0.4513  loss_mask: 0.1784  loss_dice: 1.187  loss_ce_0: 0.5471  loss_mask_0: 0.2134  loss_dice_0: 1.372  loss_ce_1: 0.6051  loss_mask_1: 0.1969  loss_dice_1: 1.329  loss_ce_2: 0.5653  loss_mask_2: 0.185  loss_dice_2: 1.272  loss_ce_3: 0.5047  loss_mask_3: 0.1803  loss_dice_3: 1.246  loss_ce_4: 0.4563  loss_mask_4: 0.1799  loss_dice_4: 1.243  loss_ce_5: 0.4744  loss_mask_5: 0.1802  loss_dice_5: 1.187  loss_ce_6: 0.4561  loss_mask_6: 0.1809  loss_dice_6: 1.193  loss_ce_7: 0.4783  loss_mask_7: 0.1779  loss_dice_7: 1.217  loss_ce_8: 0.4414  loss_mask_8: 0.1799  loss_dice_8: 1.215    time: 1.0525  last_time: 0.9989  data_time: 0.0642  last_data_time: 0.0520   lr: 0.0001  max_mem: 32614M
[10/17 15:11:12] d2.utils.events INFO:  eta: 0:29:01  iter: 1339  total_loss: 19.26  loss_ce: 0.424  loss_mask: 0.1846  loss_dice: 1.174  loss_ce_0: 0.5331  loss_mask_0: 0.2189  loss_dice_0: 1.362  loss_ce_1: 0.6264  loss_mask_1: 0.1998  loss_dice_1: 1.28  loss_ce_2: 0.5605  loss_mask_2: 0.1878  loss_dice_2: 1.266  loss_ce_3: 0.497  loss_mask_3: 0.1873  loss_dice_3: 1.249  loss_ce_4: 0.4697  loss_mask_4: 0.1867  loss_dice_4: 1.213  loss_ce_5: 0.4746  loss_mask_5: 0.1838  loss_dice_5: 1.198  loss_ce_6: 0.4577  loss_mask_6: 0.1853  loss_dice_6: 1.181  loss_ce_7: 0.4413  loss_mask_7: 0.1865  loss_dice_7: 1.169  loss_ce_8: 0.4407  loss_mask_8: 0.1881  loss_dice_8: 1.192    time: 1.0525  last_time: 1.0154  data_time: 0.0716  last_data_time: 0.0884   lr: 0.0001  max_mem: 32614M
[10/17 15:11:33] d2.utils.events INFO:  eta: 0:28:41  iter: 1359  total_loss: 19.6  loss_ce: 0.4872  loss_mask: 0.1744  loss_dice: 1.2  loss_ce_0: 0.5865  loss_mask_0: 0.1945  loss_dice_0: 1.424  loss_ce_1: 0.6576  loss_mask_1: 0.1804  loss_dice_1: 1.323  loss_ce_2: 0.6037  loss_mask_2: 0.1695  loss_dice_2: 1.27  loss_ce_3: 0.533  loss_mask_3: 0.1683  loss_dice_3: 1.276  loss_ce_4: 0.4954  loss_mask_4: 0.1714  loss_dice_4: 1.286  loss_ce_5: 0.5069  loss_mask_5: 0.174  loss_dice_5: 1.237  loss_ce_6: 0.4757  loss_mask_6: 0.1737  loss_dice_6: 1.239  loss_ce_7: 0.4773  loss_mask_7: 0.1723  loss_dice_7: 1.231  loss_ce_8: 0.4476  loss_mask_8: 0.1735  loss_dice_8: 1.238    time: 1.0527  last_time: 1.0316  data_time: 0.0742  last_data_time: 0.0722   lr: 0.0001  max_mem: 32674M
[10/17 15:11:55] d2.utils.events INFO:  eta: 0:28:20  iter: 1379  total_loss: 20.22  loss_ce: 0.4849  loss_mask: 0.1799  loss_dice: 1.243  loss_ce_0: 0.5923  loss_mask_0: 0.2063  loss_dice_0: 1.475  loss_ce_1: 0.6034  loss_mask_1: 0.1943  loss_dice_1: 1.395  loss_ce_2: 0.5839  loss_mask_2: 0.187  loss_dice_2: 1.331  loss_ce_3: 0.5239  loss_mask_3: 0.1912  loss_dice_3: 1.279  loss_ce_4: 0.4971  loss_mask_4: 0.185  loss_dice_4: 1.265  loss_ce_5: 0.4702  loss_mask_5: 0.1802  loss_dice_5: 1.295  loss_ce_6: 0.4914  loss_mask_6: 0.1781  loss_dice_6: 1.259  loss_ce_7: 0.4752  loss_mask_7: 0.1782  loss_dice_7: 1.224  loss_ce_8: 0.4904  loss_mask_8: 0.1776  loss_dice_8: 1.244    time: 1.0528  last_time: 1.0538  data_time: 0.0729  last_data_time: 0.0723   lr: 0.0001  max_mem: 32674M
[10/17 15:12:16] d2.utils.events INFO:  eta: 0:27:59  iter: 1399  total_loss: 20.17  loss_ce: 0.4846  loss_mask: 0.1616  loss_dice: 1.242  loss_ce_0: 0.6151  loss_mask_0: 0.1832  loss_dice_0: 1.445  loss_ce_1: 0.6514  loss_mask_1: 0.1655  loss_dice_1: 1.379  loss_ce_2: 0.5962  loss_mask_2: 0.1631  loss_dice_2: 1.351  loss_ce_3: 0.5338  loss_mask_3: 0.1626  loss_dice_3: 1.299  loss_ce_4: 0.5174  loss_mask_4: 0.1615  loss_dice_4: 1.287  loss_ce_5: 0.4954  loss_mask_5: 0.1631  loss_dice_5: 1.239  loss_ce_6: 0.4862  loss_mask_6: 0.1635  loss_dice_6: 1.238  loss_ce_7: 0.4766  loss_mask_7: 0.1629  loss_dice_7: 1.233  loss_ce_8: 0.4595  loss_mask_8: 0.1622  loss_dice_8: 1.233    time: 1.0531  last_time: 1.0585  data_time: 0.0741  last_data_time: 0.0813   lr: 0.0001  max_mem: 32674M
[10/17 15:12:37] d2.utils.events INFO:  eta: 0:27:38  iter: 1419  total_loss: 19.85  loss_ce: 0.4459  loss_mask: 0.1842  loss_dice: 1.194  loss_ce_0: 0.566  loss_mask_0: 0.2073  loss_dice_0: 1.385  loss_ce_1: 0.6397  loss_mask_1: 0.1938  loss_dice_1: 1.336  loss_ce_2: 0.6054  loss_mask_2: 0.1846  loss_dice_2: 1.246  loss_ce_3: 0.5386  loss_mask_3: 0.1886  loss_dice_3: 1.224  loss_ce_4: 0.5192  loss_mask_4: 0.1834  loss_dice_4: 1.205  loss_ce_5: 0.4801  loss_mask_5: 0.1824  loss_dice_5: 1.224  loss_ce_6: 0.477  loss_mask_6: 0.1826  loss_dice_6: 1.201  loss_ce_7: 0.4745  loss_mask_7: 0.183  loss_dice_7: 1.192  loss_ce_8: 0.4872  loss_mask_8: 0.1843  loss_dice_8: 1.186    time: 1.0529  last_time: 1.0690  data_time: 0.0691  last_data_time: 0.0836   lr: 0.0001  max_mem: 32674M
[10/17 15:12:58] d2.utils.events INFO:  eta: 0:27:17  iter: 1439  total_loss: 19.72  loss_ce: 0.4235  loss_mask: 0.1586  loss_dice: 1.229  loss_ce_0: 0.5985  loss_mask_0: 0.1765  loss_dice_0: 1.461  loss_ce_1: 0.6296  loss_mask_1: 0.1614  loss_dice_1: 1.356  loss_ce_2: 0.5871  loss_mask_2: 0.1593  loss_dice_2: 1.292  loss_ce_3: 0.5313  loss_mask_3: 0.1597  loss_dice_3: 1.23  loss_ce_4: 0.4828  loss_mask_4: 0.1638  loss_dice_4: 1.248  loss_ce_5: 0.469  loss_mask_5: 0.1633  loss_dice_5: 1.237  loss_ce_6: 0.473  loss_mask_6: 0.1589  loss_dice_6: 1.194  loss_ce_7: 0.4596  loss_mask_7: 0.1613  loss_dice_7: 1.224  loss_ce_8: 0.4698  loss_mask_8: 0.1578  loss_dice_8: 1.222    time: 1.0530  last_time: 1.0172  data_time: 0.0721  last_data_time: 0.0732   lr: 0.0001  max_mem: 32674M
[10/17 15:13:20] d2.utils.events INFO:  eta: 0:26:56  iter: 1459  total_loss: 19.72  loss_ce: 0.4792  loss_mask: 0.1604  loss_dice: 1.247  loss_ce_0: 0.5865  loss_mask_0: 0.1864  loss_dice_0: 1.451  loss_ce_1: 0.6801  loss_mask_1: 0.1728  loss_dice_1: 1.374  loss_ce_2: 0.5944  loss_mask_2: 0.1674  loss_dice_2: 1.315  loss_ce_3: 0.5411  loss_mask_3: 0.1612  loss_dice_3: 1.274  loss_ce_4: 0.4971  loss_mask_4: 0.16  loss_dice_4: 1.258  loss_ce_5: 0.5025  loss_mask_5: 0.1605  loss_dice_5: 1.271  loss_ce_6: 0.4823  loss_mask_6: 0.1562  loss_dice_6: 1.234  loss_ce_7: 0.4815  loss_mask_7: 0.1598  loss_dice_7: 1.23  loss_ce_8: 0.469  loss_mask_8: 0.1603  loss_dice_8: 1.236    time: 1.0532  last_time: 1.0554  data_time: 0.0721  last_data_time: 0.0688   lr: 0.0001  max_mem: 32674M
[10/17 15:13:41] d2.utils.events INFO:  eta: 0:26:36  iter: 1479  total_loss: 19.12  loss_ce: 0.4485  loss_mask: 0.163  loss_dice: 1.192  loss_ce_0: 0.6005  loss_mask_0: 0.1905  loss_dice_0: 1.385  loss_ce_1: 0.671  loss_mask_1: 0.1707  loss_dice_1: 1.318  loss_ce_2: 0.5721  loss_mask_2: 0.1639  loss_dice_2: 1.269  loss_ce_3: 0.5594  loss_mask_3: 0.1682  loss_dice_3: 1.249  loss_ce_4: 0.47  loss_mask_4: 0.1649  loss_dice_4: 1.225  loss_ce_5: 0.4799  loss_mask_5: 0.1662  loss_dice_5: 1.243  loss_ce_6: 0.4589  loss_mask_6: 0.1623  loss_dice_6: 1.202  loss_ce_7: 0.4898  loss_mask_7: 0.1621  loss_dice_7: 1.18  loss_ce_8: 0.4802  loss_mask_8: 0.1613  loss_dice_8: 1.167    time: 1.0534  last_time: 1.0425  data_time: 0.0694  last_data_time: 0.0730   lr: 0.0001  max_mem: 32674M
[10/17 15:14:02] d2.utils.events INFO:  eta: 0:26:15  iter: 1499  total_loss: 18.59  loss_ce: 0.414  loss_mask: 0.1622  loss_dice: 1.172  loss_ce_0: 0.5309  loss_mask_0: 0.1904  loss_dice_0: 1.396  loss_ce_1: 0.6068  loss_mask_1: 0.1692  loss_dice_1: 1.298  loss_ce_2: 0.5222  loss_mask_2: 0.1665  loss_dice_2: 1.258  loss_ce_3: 0.4699  loss_mask_3: 0.1644  loss_dice_3: 1.245  loss_ce_4: 0.4717  loss_mask_4: 0.166  loss_dice_4: 1.182  loss_ce_5: 0.4489  loss_mask_5: 0.1628  loss_dice_5: 1.202  loss_ce_6: 0.4434  loss_mask_6: 0.1621  loss_dice_6: 1.185  loss_ce_7: 0.4286  loss_mask_7: 0.1595  loss_dice_7: 1.22  loss_ce_8: 0.4195  loss_mask_8: 0.1615  loss_dice_8: 1.168    time: 1.0535  last_time: 0.9945  data_time: 0.0721  last_data_time: 0.0536   lr: 0.0001  max_mem: 32674M
[10/17 15:14:23] d2.utils.events INFO:  eta: 0:25:54  iter: 1519  total_loss: 19.74  loss_ce: 0.5082  loss_mask: 0.1622  loss_dice: 1.236  loss_ce_0: 0.5686  loss_mask_0: 0.1855  loss_dice_0: 1.42  loss_ce_1: 0.633  loss_mask_1: 0.17  loss_dice_1: 1.312  loss_ce_2: 0.5562  loss_mask_2: 0.1623  loss_dice_2: 1.244  loss_ce_3: 0.548  loss_mask_3: 0.1615  loss_dice_3: 1.236  loss_ce_4: 0.5084  loss_mask_4: 0.1627  loss_dice_4: 1.254  loss_ce_5: 0.4907  loss_mask_5: 0.1603  loss_dice_5: 1.245  loss_ce_6: 0.4764  loss_mask_6: 0.1604  loss_dice_6: 1.232  loss_ce_7: 0.4688  loss_mask_7: 0.1595  loss_dice_7: 1.233  loss_ce_8: 0.472  loss_mask_8: 0.161  loss_dice_8: 1.21    time: 1.0535  last_time: 1.0275  data_time: 0.0672  last_data_time: 0.0745   lr: 0.0001  max_mem: 32674M
[10/17 15:14:44] d2.utils.events INFO:  eta: 0:25:33  iter: 1539  total_loss: 18.59  loss_ce: 0.46  loss_mask: 0.1635  loss_dice: 1.098  loss_ce_0: 0.5663  loss_mask_0: 0.1931  loss_dice_0: 1.276  loss_ce_1: 0.653  loss_mask_1: 0.1745  loss_dice_1: 1.239  loss_ce_2: 0.5882  loss_mask_2: 0.1727  loss_dice_2: 1.18  loss_ce_3: 0.5202  loss_mask_3: 0.1699  loss_dice_3: 1.117  loss_ce_4: 0.4922  loss_mask_4: 0.1696  loss_dice_4: 1.125  loss_ce_5: 0.477  loss_mask_5: 0.1678  loss_dice_5: 1.125  loss_ce_6: 0.4773  loss_mask_6: 0.1664  loss_dice_6: 1.126  loss_ce_7: 0.4482  loss_mask_7: 0.1665  loss_dice_7: 1.12  loss_ce_8: 0.4541  loss_mask_8: 0.1665  loss_dice_8: 1.138    time: 1.0534  last_time: 1.0416  data_time: 0.0654  last_data_time: 0.0699   lr: 0.0001  max_mem: 32674M
[10/17 15:15:05] d2.utils.events INFO:  eta: 0:25:11  iter: 1559  total_loss: 18.19  loss_ce: 0.3851  loss_mask: 0.1676  loss_dice: 1.169  loss_ce_0: 0.4998  loss_mask_0: 0.1901  loss_dice_0: 1.333  loss_ce_1: 0.5916  loss_mask_1: 0.1824  loss_dice_1: 1.263  loss_ce_2: 0.5101  loss_mask_2: 0.1748  loss_dice_2: 1.232  loss_ce_3: 0.4718  loss_mask_3: 0.1748  loss_dice_3: 1.168  loss_ce_4: 0.4539  loss_mask_4: 0.1712  loss_dice_4: 1.161  loss_ce_5: 0.4471  loss_mask_5: 0.1695  loss_dice_5: 1.126  loss_ce_6: 0.4375  loss_mask_6: 0.171  loss_dice_6: 1.163  loss_ce_7: 0.4008  loss_mask_7: 0.169  loss_dice_7: 1.162  loss_ce_8: 0.4389  loss_mask_8: 0.1689  loss_dice_8: 1.178    time: 1.0532  last_time: 1.0412  data_time: 0.0675  last_data_time: 0.0830   lr: 0.0001  max_mem: 32674M
[10/17 15:15:26] d2.utils.events INFO:  eta: 0:24:50  iter: 1579  total_loss: 19.55  loss_ce: 0.4726  loss_mask: 0.1616  loss_dice: 1.206  loss_ce_0: 0.568  loss_mask_0: 0.1992  loss_dice_0: 1.42  loss_ce_1: 0.6451  loss_mask_1: 0.1813  loss_dice_1: 1.345  loss_ce_2: 0.6128  loss_mask_2: 0.1786  loss_dice_2: 1.309  loss_ce_3: 0.5207  loss_mask_3: 0.1739  loss_dice_3: 1.257  loss_ce_4: 0.4975  loss_mask_4: 0.1655  loss_dice_4: 1.222  loss_ce_5: 0.477  loss_mask_5: 0.163  loss_dice_5: 1.228  loss_ce_6: 0.4809  loss_mask_6: 0.1641  loss_dice_6: 1.22  loss_ce_7: 0.461  loss_mask_7: 0.1632  loss_dice_7: 1.207  loss_ce_8: 0.4799  loss_mask_8: 0.161  loss_dice_8: 1.198    time: 1.0530  last_time: 1.0565  data_time: 0.0625  last_data_time: 0.0569   lr: 0.0001  max_mem: 32674M
[10/17 15:15:47] d2.utils.events INFO:  eta: 0:24:28  iter: 1599  total_loss: 19.43  loss_ce: 0.4623  loss_mask: 0.1537  loss_dice: 1.193  loss_ce_0: 0.5827  loss_mask_0: 0.1836  loss_dice_0: 1.433  loss_ce_1: 0.6351  loss_mask_1: 0.1707  loss_dice_1: 1.313  loss_ce_2: 0.59  loss_mask_2: 0.1615  loss_dice_2: 1.262  loss_ce_3: 0.5012  loss_mask_3: 0.1598  loss_dice_3: 1.226  loss_ce_4: 0.497  loss_mask_4: 0.1579  loss_dice_4: 1.229  loss_ce_5: 0.4656  loss_mask_5: 0.154  loss_dice_5: 1.201  loss_ce_6: 0.4789  loss_mask_6: 0.1555  loss_dice_6: 1.209  loss_ce_7: 0.4678  loss_mask_7: 0.1547  loss_dice_7: 1.18  loss_ce_8: 0.4551  loss_mask_8: 0.1561  loss_dice_8: 1.2    time: 1.0528  last_time: 1.0726  data_time: 0.0586  last_data_time: 0.0563   lr: 0.0001  max_mem: 32674M
[10/17 15:16:08] d2.utils.events INFO:  eta: 0:24:06  iter: 1619  total_loss: 18.85  loss_ce: 0.4589  loss_mask: 0.16  loss_dice: 1.145  loss_ce_0: 0.5211  loss_mask_0: 0.1874  loss_dice_0: 1.346  loss_ce_1: 0.6024  loss_mask_1: 0.1682  loss_dice_1: 1.313  loss_ce_2: 0.5385  loss_mask_2: 0.1609  loss_dice_2: 1.253  loss_ce_3: 0.4976  loss_mask_3: 0.1581  loss_dice_3: 1.188  loss_ce_4: 0.4622  loss_mask_4: 0.1602  loss_dice_4: 1.204  loss_ce_5: 0.4459  loss_mask_5: 0.1602  loss_dice_5: 1.179  loss_ce_6: 0.4335  loss_mask_6: 0.1585  loss_dice_6: 1.151  loss_ce_7: 0.4793  loss_mask_7: 0.1598  loss_dice_7: 1.17  loss_ce_8: 0.4651  loss_mask_8: 0.16  loss_dice_8: 1.161    time: 1.0526  last_time: 1.0075  data_time: 0.0598  last_data_time: 0.0722   lr: 0.0001  max_mem: 32674M
[10/17 15:16:29] d2.utils.events INFO:  eta: 0:23:45  iter: 1639  total_loss: 19.85  loss_ce: 0.4657  loss_mask: 0.1677  loss_dice: 1.208  loss_ce_0: 0.594  loss_mask_0: 0.1921  loss_dice_0: 1.436  loss_ce_1: 0.6521  loss_mask_1: 0.1825  loss_dice_1: 1.39  loss_ce_2: 0.5798  loss_mask_2: 0.1757  loss_dice_2: 1.334  loss_ce_3: 0.5198  loss_mask_3: 0.1773  loss_dice_3: 1.303  loss_ce_4: 0.5281  loss_mask_4: 0.1717  loss_dice_4: 1.285  loss_ce_5: 0.4789  loss_mask_5: 0.1693  loss_dice_5: 1.249  loss_ce_6: 0.4768  loss_mask_6: 0.1723  loss_dice_6: 1.24  loss_ce_7: 0.466  loss_mask_7: 0.1696  loss_dice_7: 1.231  loss_ce_8: 0.4511  loss_mask_8: 0.169  loss_dice_8: 1.248    time: 1.0526  last_time: 1.0721  data_time: 0.0643  last_data_time: 0.0652   lr: 0.0001  max_mem: 32674M
[10/17 15:16:50] d2.utils.events INFO:  eta: 0:23:24  iter: 1659  total_loss: 19.19  loss_ce: 0.4629  loss_mask: 0.1666  loss_dice: 1.197  loss_ce_0: 0.5571  loss_mask_0: 0.2019  loss_dice_0: 1.437  loss_ce_1: 0.6169  loss_mask_1: 0.1898  loss_dice_1: 1.319  loss_ce_2: 0.5769  loss_mask_2: 0.1774  loss_dice_2: 1.25  loss_ce_3: 0.5256  loss_mask_3: 0.1737  loss_dice_3: 1.21  loss_ce_4: 0.5075  loss_mask_4: 0.1735  loss_dice_4: 1.211  loss_ce_5: 0.4848  loss_mask_5: 0.1687  loss_dice_5: 1.214  loss_ce_6: 0.4703  loss_mask_6: 0.1697  loss_dice_6: 1.159  loss_ce_7: 0.4786  loss_mask_7: 0.1694  loss_dice_7: 1.2  loss_ce_8: 0.4834  loss_mask_8: 0.1698  loss_dice_8: 1.175    time: 1.0524  last_time: 1.0208  data_time: 0.0602  last_data_time: 0.0483   lr: 0.0001  max_mem: 32674M
[10/17 15:17:11] d2.utils.events INFO:  eta: 0:23:03  iter: 1679  total_loss: 19.98  loss_ce: 0.4558  loss_mask: 0.1554  loss_dice: 1.21  loss_ce_0: 0.5886  loss_mask_0: 0.1798  loss_dice_0: 1.47  loss_ce_1: 0.6556  loss_mask_1: 0.1684  loss_dice_1: 1.378  loss_ce_2: 0.5955  loss_mask_2: 0.1596  loss_dice_2: 1.315  loss_ce_3: 0.5343  loss_mask_3: 0.1566  loss_dice_3: 1.267  loss_ce_4: 0.5114  loss_mask_4: 0.1573  loss_dice_4: 1.273  loss_ce_5: 0.4881  loss_mask_5: 0.156  loss_dice_5: 1.235  loss_ce_6: 0.4935  loss_mask_6: 0.1577  loss_dice_6: 1.231  loss_ce_7: 0.4602  loss_mask_7: 0.1568  loss_dice_7: 1.227  loss_ce_8: 0.4452  loss_mask_8: 0.155  loss_dice_8: 1.25    time: 1.0523  last_time: 1.0541  data_time: 0.0571  last_data_time: 0.0684   lr: 0.0001  max_mem: 32674M
[10/17 15:17:32] d2.utils.events INFO:  eta: 0:22:42  iter: 1699  total_loss: 21.3  loss_ce: 0.5118  loss_mask: 0.1679  loss_dice: 1.345  loss_ce_0: 0.6344  loss_mask_0: 0.1944  loss_dice_0: 1.526  loss_ce_1: 0.7207  loss_mask_1: 0.1792  loss_dice_1: 1.473  loss_ce_2: 0.6252  loss_mask_2: 0.1734  loss_dice_2: 1.42  loss_ce_3: 0.6054  loss_mask_3: 0.1729  loss_dice_3: 1.344  loss_ce_4: 0.5536  loss_mask_4: 0.1712  loss_dice_4: 1.332  loss_ce_5: 0.5351  loss_mask_5: 0.1714  loss_dice_5: 1.335  loss_ce_6: 0.5315  loss_mask_6: 0.1686  loss_dice_6: 1.324  loss_ce_7: 0.5216  loss_mask_7: 0.1693  loss_dice_7: 1.314  loss_ce_8: 0.5232  loss_mask_8: 0.1645  loss_dice_8: 1.329    time: 1.0523  last_time: 1.0570  data_time: 0.0579  last_data_time: 0.0706   lr: 0.0001  max_mem: 32674M
[10/17 15:17:52] d2.utils.events INFO:  eta: 0:22:21  iter: 1719  total_loss: 19.21  loss_ce: 0.4678  loss_mask: 0.156  loss_dice: 1.21  loss_ce_0: 0.5521  loss_mask_0: 0.188  loss_dice_0: 1.46  loss_ce_1: 0.6098  loss_mask_1: 0.1702  loss_dice_1: 1.349  loss_ce_2: 0.5855  loss_mask_2: 0.169  loss_dice_2: 1.288  loss_ce_3: 0.5181  loss_mask_3: 0.1604  loss_dice_3: 1.265  loss_ce_4: 0.4965  loss_mask_4: 0.1597  loss_dice_4: 1.228  loss_ce_5: 0.4931  loss_mask_5: 0.1557  loss_dice_5: 1.266  loss_ce_6: 0.4565  loss_mask_6: 0.1582  loss_dice_6: 1.241  loss_ce_7: 0.4499  loss_mask_7: 0.1613  loss_dice_7: 1.231  loss_ce_8: 0.4505  loss_mask_8: 0.1602  loss_dice_8: 1.197    time: 1.0521  last_time: 1.0238  data_time: 0.0559  last_data_time: 0.0570   lr: 0.0001  max_mem: 32674M
[10/17 15:18:13] d2.utils.events INFO:  eta: 0:22:00  iter: 1739  total_loss: 20.23  loss_ce: 0.4999  loss_mask: 0.1572  loss_dice: 1.256  loss_ce_0: 0.5384  loss_mask_0: 0.1821  loss_dice_0: 1.466  loss_ce_1: 0.6397  loss_mask_1: 0.1732  loss_dice_1: 1.386  loss_ce_2: 0.6069  loss_mask_2: 0.1655  loss_dice_2: 1.341  loss_ce_3: 0.5258  loss_mask_3: 0.1626  loss_dice_3: 1.275  loss_ce_4: 0.5166  loss_mask_4: 0.1623  loss_dice_4: 1.304  loss_ce_5: 0.4877  loss_mask_5: 0.1575  loss_dice_5: 1.299  loss_ce_6: 0.5099  loss_mask_6: 0.157  loss_dice_6: 1.234  loss_ce_7: 0.4759  loss_mask_7: 0.1586  loss_dice_7: 1.262  loss_ce_8: 0.4962  loss_mask_8: 0.1572  loss_dice_8: 1.254    time: 1.0520  last_time: 1.0171  data_time: 0.0569  last_data_time: 0.0550   lr: 0.0001  max_mem: 32674M
[10/17 15:18:34] d2.utils.events INFO:  eta: 0:21:39  iter: 1759  total_loss: 20.12  loss_ce: 0.4486  loss_mask: 0.1734  loss_dice: 1.295  loss_ce_0: 0.5672  loss_mask_0: 0.1963  loss_dice_0: 1.466  loss_ce_1: 0.5976  loss_mask_1: 0.188  loss_dice_1: 1.36  loss_ce_2: 0.5451  loss_mask_2: 0.1785  loss_dice_2: 1.325  loss_ce_3: 0.5043  loss_mask_3: 0.1773  loss_dice_3: 1.304  loss_ce_4: 0.4691  loss_mask_4: 0.1757  loss_dice_4: 1.313  loss_ce_5: 0.4857  loss_mask_5: 0.1722  loss_dice_5: 1.293  loss_ce_6: 0.4841  loss_mask_6: 0.1707  loss_dice_6: 1.245  loss_ce_7: 0.4671  loss_mask_7: 0.1721  loss_dice_7: 1.292  loss_ce_8: 0.4535  loss_mask_8: 0.1718  loss_dice_8: 1.278    time: 1.0519  last_time: 1.0199  data_time: 0.0569  last_data_time: 0.0529   lr: 0.0001  max_mem: 32674M
[10/17 15:18:55] d2.utils.events INFO:  eta: 0:21:18  iter: 1779  total_loss: 19.34  loss_ce: 0.4671  loss_mask: 0.1591  loss_dice: 1.223  loss_ce_0: 0.5832  loss_mask_0: 0.1826  loss_dice_0: 1.443  loss_ce_1: 0.6433  loss_mask_1: 0.1673  loss_dice_1: 1.393  loss_ce_2: 0.6083  loss_mask_2: 0.1579  loss_dice_2: 1.264  loss_ce_3: 0.5285  loss_mask_3: 0.1566  loss_dice_3: 1.251  loss_ce_4: 0.4736  loss_mask_4: 0.1563  loss_dice_4: 1.227  loss_ce_5: 0.4872  loss_mask_5: 0.1555  loss_dice_5: 1.218  loss_ce_6: 0.4622  loss_mask_6: 0.1557  loss_dice_6: 1.208  loss_ce_7: 0.4594  loss_mask_7: 0.156  loss_dice_7: 1.216  loss_ce_8: 0.4828  loss_mask_8: 0.1578  loss_dice_8: 1.211    time: 1.0517  last_time: 1.0506  data_time: 0.0565  last_data_time: 0.0679   lr: 0.0001  max_mem: 32674M
[10/17 15:19:16] d2.utils.events INFO:  eta: 0:20:57  iter: 1799  total_loss: 18.35  loss_ce: 0.4272  loss_mask: 0.1614  loss_dice: 1.121  loss_ce_0: 0.5116  loss_mask_0: 0.1895  loss_dice_0: 1.363  loss_ce_1: 0.6119  loss_mask_1: 0.1761  loss_dice_1: 1.257  loss_ce_2: 0.5431  loss_mask_2: 0.169  loss_dice_2: 1.18  loss_ce_3: 0.48  loss_mask_3: 0.1681  loss_dice_3: 1.167  loss_ce_4: 0.4623  loss_mask_4: 0.1687  loss_dice_4: 1.128  loss_ce_5: 0.4817  loss_mask_5: 0.1634  loss_dice_5: 1.178  loss_ce_6: 0.4428  loss_mask_6: 0.1637  loss_dice_6: 1.124  loss_ce_7: 0.432  loss_mask_7: 0.1625  loss_dice_7: 1.097  loss_ce_8: 0.4551  loss_mask_8: 0.1636  loss_dice_8: 1.1    time: 1.0518  last_time: 0.9918  data_time: 0.0607  last_data_time: 0.0501   lr: 0.0001  max_mem: 32674M
[10/17 15:19:37] d2.utils.events INFO:  eta: 0:20:35  iter: 1819  total_loss: 19.19  loss_ce: 0.4359  loss_mask: 0.1749  loss_dice: 1.2  loss_ce_0: 0.537  loss_mask_0: 0.2064  loss_dice_0: 1.376  loss_ce_1: 0.5978  loss_mask_1: 0.183  loss_dice_1: 1.301  loss_ce_2: 0.5625  loss_mask_2: 0.183  loss_dice_2: 1.271  loss_ce_3: 0.5291  loss_mask_3: 0.1824  loss_dice_3: 1.243  loss_ce_4: 0.4896  loss_mask_4: 0.1829  loss_dice_4: 1.203  loss_ce_5: 0.4314  loss_mask_5: 0.1792  loss_dice_5: 1.233  loss_ce_6: 0.4645  loss_mask_6: 0.1749  loss_dice_6: 1.193  loss_ce_7: 0.4484  loss_mask_7: 0.1762  loss_dice_7: 1.183  loss_ce_8: 0.4591  loss_mask_8: 0.1742  loss_dice_8: 1.209    time: 1.0517  last_time: 1.0723  data_time: 0.0590  last_data_time: 0.0655   lr: 0.0001  max_mem: 32924M
[10/17 15:19:58] d2.utils.events INFO:  eta: 0:20:14  iter: 1839  total_loss: 19.16  loss_ce: 0.439  loss_mask: 0.1621  loss_dice: 1.209  loss_ce_0: 0.6166  loss_mask_0: 0.1825  loss_dice_0: 1.411  loss_ce_1: 0.6407  loss_mask_1: 0.1648  loss_dice_1: 1.316  loss_ce_2: 0.5535  loss_mask_2: 0.1635  loss_dice_2: 1.296  loss_ce_3: 0.4883  loss_mask_3: 0.1636  loss_dice_3: 1.257  loss_ce_4: 0.4829  loss_mask_4: 0.1628  loss_dice_4: 1.261  loss_ce_5: 0.4751  loss_mask_5: 0.1626  loss_dice_5: 1.245  loss_ce_6: 0.4223  loss_mask_6: 0.162  loss_dice_6: 1.186  loss_ce_7: 0.4898  loss_mask_7: 0.1602  loss_dice_7: 1.213  loss_ce_8: 0.4628  loss_mask_8: 0.1599  loss_dice_8: 1.223    time: 1.0517  last_time: 1.0686  data_time: 0.0577  last_data_time: 0.0550   lr: 0.0001  max_mem: 32924M
[10/17 15:20:19] d2.utils.events INFO:  eta: 0:19:53  iter: 1859  total_loss: 19.59  loss_ce: 0.4857  loss_mask: 0.1716  loss_dice: 1.214  loss_ce_0: 0.591  loss_mask_0: 0.196  loss_dice_0: 1.4  loss_ce_1: 0.631  loss_mask_1: 0.1836  loss_dice_1: 1.376  loss_ce_2: 0.5686  loss_mask_2: 0.1742  loss_dice_2: 1.306  loss_ce_3: 0.507  loss_mask_3: 0.173  loss_dice_3: 1.268  loss_ce_4: 0.5221  loss_mask_4: 0.1703  loss_dice_4: 1.25  loss_ce_5: 0.4896  loss_mask_5: 0.1745  loss_dice_5: 1.22  loss_ce_6: 0.5102  loss_mask_6: 0.1739  loss_dice_6: 1.236  loss_ce_7: 0.5043  loss_mask_7: 0.1689  loss_dice_7: 1.195  loss_ce_8: 0.5024  loss_mask_8: 0.172  loss_dice_8: 1.225    time: 1.0515  last_time: 1.0138  data_time: 0.0584  last_data_time: 0.0540   lr: 0.0001  max_mem: 32924M
[10/17 15:20:40] d2.utils.events INFO:  eta: 0:19:31  iter: 1879  total_loss: 18.67  loss_ce: 0.4717  loss_mask: 0.1693  loss_dice: 1.141  loss_ce_0: 0.5612  loss_mask_0: 0.1872  loss_dice_0: 1.351  loss_ce_1: 0.6224  loss_mask_1: 0.1784  loss_dice_1: 1.308  loss_ce_2: 0.5595  loss_mask_2: 0.1694  loss_dice_2: 1.269  loss_ce_3: 0.4928  loss_mask_3: 0.1682  loss_dice_3: 1.222  loss_ce_4: 0.4832  loss_mask_4: 0.1706  loss_dice_4: 1.206  loss_ce_5: 0.4797  loss_mask_5: 0.1684  loss_dice_5: 1.18  loss_ce_6: 0.4363  loss_mask_6: 0.1717  loss_dice_6: 1.166  loss_ce_7: 0.462  loss_mask_7: 0.1685  loss_dice_7: 1.216  loss_ce_8: 0.487  loss_mask_8: 0.168  loss_dice_8: 1.18    time: 1.0514  last_time: 1.0229  data_time: 0.0565  last_data_time: 0.0563   lr: 0.0001  max_mem: 32924M
[10/17 15:21:01] d2.utils.events INFO:  eta: 0:19:11  iter: 1899  total_loss: 19.89  loss_ce: 0.4868  loss_mask: 0.1571  loss_dice: 1.278  loss_ce_0: 0.5534  loss_mask_0: 0.1926  loss_dice_0: 1.418  loss_ce_1: 0.6331  loss_mask_1: 0.1709  loss_dice_1: 1.411  loss_ce_2: 0.5418  loss_mask_2: 0.1632  loss_dice_2: 1.375  loss_ce_3: 0.5096  loss_mask_3: 0.1641  loss_dice_3: 1.255  loss_ce_4: 0.4782  loss_mask_4: 0.1604  loss_dice_4: 1.272  loss_ce_5: 0.5063  loss_mask_5: 0.1571  loss_dice_5: 1.266  loss_ce_6: 0.4773  loss_mask_6: 0.1579  loss_dice_6: 1.248  loss_ce_7: 0.4513  loss_mask_7: 0.1568  loss_dice_7: 1.268  loss_ce_8: 0.4825  loss_mask_8: 0.1549  loss_dice_8: 1.257    time: 1.0515  last_time: 1.0586  data_time: 0.0640  last_data_time: 0.0603   lr: 0.0001  max_mem: 32924M
[10/17 15:21:22] d2.utils.events INFO:  eta: 0:18:51  iter: 1919  total_loss: 19.15  loss_ce: 0.4375  loss_mask: 0.1593  loss_dice: 1.221  loss_ce_0: 0.5739  loss_mask_0: 0.1877  loss_dice_0: 1.454  loss_ce_1: 0.616  loss_mask_1: 0.175  loss_dice_1: 1.354  loss_ce_2: 0.5561  loss_mask_2: 0.1624  loss_dice_2: 1.283  loss_ce_3: 0.4691  loss_mask_3: 0.1632  loss_dice_3: 1.256  loss_ce_4: 0.474  loss_mask_4: 0.1607  loss_dice_4: 1.265  loss_ce_5: 0.4448  loss_mask_5: 0.159  loss_dice_5: 1.264  loss_ce_6: 0.4567  loss_mask_6: 0.1615  loss_dice_6: 1.223  loss_ce_7: 0.4328  loss_mask_7: 0.1633  loss_dice_7: 1.228  loss_ce_8: 0.4271  loss_mask_8: 0.1637  loss_dice_8: 1.234    time: 1.0515  last_time: 1.0959  data_time: 0.0631  last_data_time: 0.0627   lr: 0.0001  max_mem: 32924M
[10/17 15:21:43] d2.utils.events INFO:  eta: 0:18:29  iter: 1939  total_loss: 19.4  loss_ce: 0.4948  loss_mask: 0.1578  loss_dice: 1.188  loss_ce_0: 0.5946  loss_mask_0: 0.1853  loss_dice_0: 1.41  loss_ce_1: 0.6757  loss_mask_1: 0.1644  loss_dice_1: 1.298  loss_ce_2: 0.6274  loss_mask_2: 0.159  loss_dice_2: 1.289  loss_ce_3: 0.5745  loss_mask_3: 0.1593  loss_dice_3: 1.22  loss_ce_4: 0.531  loss_mask_4: 0.1604  loss_dice_4: 1.217  loss_ce_5: 0.5008  loss_mask_5: 0.1566  loss_dice_5: 1.21  loss_ce_6: 0.4862  loss_mask_6: 0.1601  loss_dice_6: 1.204  loss_ce_7: 0.475  loss_mask_7: 0.1602  loss_dice_7: 1.203  loss_ce_8: 0.4705  loss_mask_8: 0.1571  loss_dice_8: 1.192    time: 1.0514  last_time: 1.0420  data_time: 0.0569  last_data_time: 0.0545   lr: 0.0001  max_mem: 32924M
[10/17 15:22:04] d2.utils.events INFO:  eta: 0:18:08  iter: 1959  total_loss: 19.53  loss_ce: 0.45  loss_mask: 0.1732  loss_dice: 1.265  loss_ce_0: 0.5872  loss_mask_0: 0.1919  loss_dice_0: 1.45  loss_ce_1: 0.6136  loss_mask_1: 0.1848  loss_dice_1: 1.359  loss_ce_2: 0.5518  loss_mask_2: 0.1773  loss_dice_2: 1.34  loss_ce_3: 0.504  loss_mask_3: 0.1817  loss_dice_3: 1.264  loss_ce_4: 0.4882  loss_mask_4: 0.1714  loss_dice_4: 1.291  loss_ce_5: 0.4669  loss_mask_5: 0.1716  loss_dice_5: 1.258  loss_ce_6: 0.459  loss_mask_6: 0.1734  loss_dice_6: 1.252  loss_ce_7: 0.4444  loss_mask_7: 0.1741  loss_dice_7: 1.25  loss_ce_8: 0.4442  loss_mask_8: 0.1705  loss_dice_8: 1.253    time: 1.0513  last_time: 1.0763  data_time: 0.0622  last_data_time: 0.0530   lr: 0.0001  max_mem: 32924M
[10/17 15:22:25] d2.utils.events INFO:  eta: 0:17:47  iter: 1979  total_loss: 19.32  loss_ce: 0.4458  loss_mask: 0.1701  loss_dice: 1.201  loss_ce_0: 0.5109  loss_mask_0: 0.1985  loss_dice_0: 1.415  loss_ce_1: 0.5987  loss_mask_1: 0.186  loss_dice_1: 1.333  loss_ce_2: 0.5538  loss_mask_2: 0.1805  loss_dice_2: 1.285  loss_ce_3: 0.4868  loss_mask_3: 0.1754  loss_dice_3: 1.231  loss_ce_4: 0.4563  loss_mask_4: 0.1722  loss_dice_4: 1.209  loss_ce_5: 0.4494  loss_mask_5: 0.1713  loss_dice_5: 1.224  loss_ce_6: 0.4248  loss_mask_6: 0.172  loss_dice_6: 1.193  loss_ce_7: 0.4295  loss_mask_7: 0.172  loss_dice_7: 1.258  loss_ce_8: 0.4478  loss_mask_8: 0.1714  loss_dice_8: 1.176    time: 1.0512  last_time: 1.0605  data_time: 0.0568  last_data_time: 0.0591   lr: 0.0001  max_mem: 32924M
[10/17 15:22:46] d2.utils.events INFO:  eta: 0:17:26  iter: 1999  total_loss: 18.99  loss_ce: 0.4474  loss_mask: 0.1685  loss_dice: 1.161  loss_ce_0: 0.5424  loss_mask_0: 0.1855  loss_dice_0: 1.451  loss_ce_1: 0.583  loss_mask_1: 0.182  loss_dice_1: 1.284  loss_ce_2: 0.5446  loss_mask_2: 0.1722  loss_dice_2: 1.256  loss_ce_3: 0.4998  loss_mask_3: 0.1708  loss_dice_3: 1.215  loss_ce_4: 0.4649  loss_mask_4: 0.1665  loss_dice_4: 1.207  loss_ce_5: 0.4818  loss_mask_5: 0.1683  loss_dice_5: 1.185  loss_ce_6: 0.4681  loss_mask_6: 0.1681  loss_dice_6: 1.177  loss_ce_7: 0.4713  loss_mask_7: 0.1702  loss_dice_7: 1.179  loss_ce_8: 0.4832  loss_mask_8: 0.1684  loss_dice_8: 1.174    time: 1.0511  last_time: 1.0343  data_time: 0.0550  last_data_time: 0.0537   lr: 0.0001  max_mem: 32924M
[10/17 15:23:07] d2.utils.events INFO:  eta: 0:17:04  iter: 2019  total_loss: 19.28  loss_ce: 0.4715  loss_mask: 0.1552  loss_dice: 1.173  loss_ce_0: 0.5328  loss_mask_0: 0.1747  loss_dice_0: 1.452  loss_ce_1: 0.6047  loss_mask_1: 0.1642  loss_dice_1: 1.328  loss_ce_2: 0.5494  loss_mask_2: 0.1562  loss_dice_2: 1.296  loss_ce_3: 0.5077  loss_mask_3: 0.1553  loss_dice_3: 1.205  loss_ce_4: 0.4601  loss_mask_4: 0.1539  loss_dice_4: 1.201  loss_ce_5: 0.4558  loss_mask_5: 0.1562  loss_dice_5: 1.183  loss_ce_6: 0.4791  loss_mask_6: 0.1547  loss_dice_6: 1.187  loss_ce_7: 0.4523  loss_mask_7: 0.155  loss_dice_7: 1.193  loss_ce_8: 0.4446  loss_mask_8: 0.154  loss_dice_8: 1.211    time: 1.0511  last_time: 1.0533  data_time: 0.0648  last_data_time: 0.0589   lr: 0.0001  max_mem: 32924M
[10/17 15:23:28] d2.utils.events INFO:  eta: 0:16:44  iter: 2039  total_loss: 19.27  loss_ce: 0.4679  loss_mask: 0.1701  loss_dice: 1.201  loss_ce_0: 0.542  loss_mask_0: 0.1889  loss_dice_0: 1.352  loss_ce_1: 0.6072  loss_mask_1: 0.1773  loss_dice_1: 1.309  loss_ce_2: 0.5721  loss_mask_2: 0.1719  loss_dice_2: 1.231  loss_ce_3: 0.5096  loss_mask_3: 0.1682  loss_dice_3: 1.206  loss_ce_4: 0.4814  loss_mask_4: 0.1702  loss_dice_4: 1.244  loss_ce_5: 0.4985  loss_mask_5: 0.1691  loss_dice_5: 1.211  loss_ce_6: 0.4759  loss_mask_6: 0.169  loss_dice_6: 1.157  loss_ce_7: 0.4658  loss_mask_7: 0.1695  loss_dice_7: 1.18  loss_ce_8: 0.4853  loss_mask_8: 0.1688  loss_dice_8: 1.174    time: 1.0510  last_time: 1.0234  data_time: 0.0559  last_data_time: 0.0613   lr: 0.0001  max_mem: 32924M
[10/17 15:23:49] d2.utils.events INFO:  eta: 0:16:23  iter: 2059  total_loss: 19.14  loss_ce: 0.4555  loss_mask: 0.1589  loss_dice: 1.226  loss_ce_0: 0.5177  loss_mask_0: 0.1823  loss_dice_0: 1.429  loss_ce_1: 0.5833  loss_mask_1: 0.1651  loss_dice_1: 1.382  loss_ce_2: 0.5557  loss_mask_2: 0.1591  loss_dice_2: 1.294  loss_ce_3: 0.515  loss_mask_3: 0.1584  loss_dice_3: 1.243  loss_ce_4: 0.4525  loss_mask_4: 0.1614  loss_dice_4: 1.265  loss_ce_5: 0.4695  loss_mask_5: 0.1574  loss_dice_5: 1.239  loss_ce_6: 0.4532  loss_mask_6: 0.1581  loss_dice_6: 1.222  loss_ce_7: 0.4439  loss_mask_7: 0.158  loss_dice_7: 1.203  loss_ce_8: 0.4615  loss_mask_8: 0.1589  loss_dice_8: 1.199    time: 1.0510  last_time: 1.0590  data_time: 0.0569  last_data_time: 0.0592   lr: 0.0001  max_mem: 32924M
[10/17 15:24:10] d2.utils.events INFO:  eta: 0:16:01  iter: 2079  total_loss: 18.9  loss_ce: 0.4247  loss_mask: 0.1533  loss_dice: 1.183  loss_ce_0: 0.5509  loss_mask_0: 0.1906  loss_dice_0: 1.416  loss_ce_1: 0.5971  loss_mask_1: 0.1689  loss_dice_1: 1.354  loss_ce_2: 0.5237  loss_mask_2: 0.1584  loss_dice_2: 1.281  loss_ce_3: 0.5062  loss_mask_3: 0.1596  loss_dice_3: 1.241  loss_ce_4: 0.4835  loss_mask_4: 0.1586  loss_dice_4: 1.214  loss_ce_5: 0.448  loss_mask_5: 0.1553  loss_dice_5: 1.216  loss_ce_6: 0.4436  loss_mask_6: 0.1552  loss_dice_6: 1.185  loss_ce_7: 0.4358  loss_mask_7: 0.1543  loss_dice_7: 1.218  loss_ce_8: 0.4402  loss_mask_8: 0.1541  loss_dice_8: 1.205    time: 1.0510  last_time: 1.0206  data_time: 0.0606  last_data_time: 0.0555   lr: 0.0001  max_mem: 32924M
[10/17 15:24:31] d2.utils.events INFO:  eta: 0:15:40  iter: 2099  total_loss: 19.44  loss_ce: 0.4612  loss_mask: 0.1608  loss_dice: 1.194  loss_ce_0: 0.5693  loss_mask_0: 0.1963  loss_dice_0: 1.411  loss_ce_1: 0.6128  loss_mask_1: 0.1797  loss_dice_1: 1.324  loss_ce_2: 0.5534  loss_mask_2: 0.1687  loss_dice_2: 1.302  loss_ce_3: 0.5027  loss_mask_3: 0.164  loss_dice_3: 1.243  loss_ce_4: 0.4623  loss_mask_4: 0.1639  loss_dice_4: 1.241  loss_ce_5: 0.4264  loss_mask_5: 0.1622  loss_dice_5: 1.261  loss_ce_6: 0.4442  loss_mask_6: 0.161  loss_dice_6: 1.236  loss_ce_7: 0.4405  loss_mask_7: 0.1631  loss_dice_7: 1.23  loss_ce_8: 0.4345  loss_mask_8: 0.1602  loss_dice_8: 1.252    time: 1.0509  last_time: 1.0104  data_time: 0.0584  last_data_time: 0.0539   lr: 0.0001  max_mem: 32924M
[10/17 15:24:52] d2.utils.events INFO:  eta: 0:15:19  iter: 2119  total_loss: 19.25  loss_ce: 0.4528  loss_mask: 0.1644  loss_dice: 1.174  loss_ce_0: 0.5529  loss_mask_0: 0.1929  loss_dice_0: 1.404  loss_ce_1: 0.5907  loss_mask_1: 0.1775  loss_dice_1: 1.283  loss_ce_2: 0.5516  loss_mask_2: 0.1684  loss_dice_2: 1.257  loss_ce_3: 0.4752  loss_mask_3: 0.1684  loss_dice_3: 1.215  loss_ce_4: 0.449  loss_mask_4: 0.1673  loss_dice_4: 1.251  loss_ce_5: 0.4549  loss_mask_5: 0.1623  loss_dice_5: 1.188  loss_ce_6: 0.4301  loss_mask_6: 0.1636  loss_dice_6: 1.175  loss_ce_7: 0.4341  loss_mask_7: 0.1636  loss_dice_7: 1.182  loss_ce_8: 0.4507  loss_mask_8: 0.1639  loss_dice_8: 1.186    time: 1.0508  last_time: 1.1718  data_time: 0.0571  last_data_time: 0.1074   lr: 0.0001  max_mem: 32924M
[10/17 15:25:13] d2.utils.events INFO:  eta: 0:14:59  iter: 2139  total_loss: 19.79  loss_ce: 0.4801  loss_mask: 0.1538  loss_dice: 1.236  loss_ce_0: 0.5763  loss_mask_0: 0.179  loss_dice_0: 1.497  loss_ce_1: 0.6437  loss_mask_1: 0.1641  loss_dice_1: 1.379  loss_ce_2: 0.6097  loss_mask_2: 0.1553  loss_dice_2: 1.325  loss_ce_3: 0.4981  loss_mask_3: 0.1569  loss_dice_3: 1.247  loss_ce_4: 0.4789  loss_mask_4: 0.1569  loss_dice_4: 1.259  loss_ce_5: 0.4949  loss_mask_5: 0.1533  loss_dice_5: 1.268  loss_ce_6: 0.4792  loss_mask_6: 0.1541  loss_dice_6: 1.223  loss_ce_7: 0.4617  loss_mask_7: 0.1544  loss_dice_7: 1.239  loss_ce_8: 0.4659  loss_mask_8: 0.1538  loss_dice_8: 1.226    time: 1.0508  last_time: 1.0706  data_time: 0.0614  last_data_time: 0.0485   lr: 0.0001  max_mem: 32924M
[10/17 15:25:34] d2.utils.events INFO:  eta: 0:14:37  iter: 2159  total_loss: 18.79  loss_ce: 0.4748  loss_mask: 0.1623  loss_dice: 1.145  loss_ce_0: 0.5948  loss_mask_0: 0.1948  loss_dice_0: 1.376  loss_ce_1: 0.636  loss_mask_1: 0.1741  loss_dice_1: 1.239  loss_ce_2: 0.5725  loss_mask_2: 0.1685  loss_dice_2: 1.22  loss_ce_3: 0.5285  loss_mask_3: 0.166  loss_dice_3: 1.173  loss_ce_4: 0.4792  loss_mask_4: 0.1659  loss_dice_4: 1.166  loss_ce_5: 0.4541  loss_mask_5: 0.1631  loss_dice_5: 1.178  loss_ce_6: 0.4355  loss_mask_6: 0.1649  loss_dice_6: 1.166  loss_ce_7: 0.4417  loss_mask_7: 0.164  loss_dice_7: 1.143  loss_ce_8: 0.4761  loss_mask_8: 0.1623  loss_dice_8: 1.15    time: 1.0507  last_time: 1.0377  data_time: 0.0597  last_data_time: 0.0588   lr: 0.0001  max_mem: 32924M
[10/17 15:25:54] d2.utils.events INFO:  eta: 0:14:16  iter: 2179  total_loss: 18.66  loss_ce: 0.4317  loss_mask: 0.1757  loss_dice: 1.131  loss_ce_0: 0.5277  loss_mask_0: 0.204  loss_dice_0: 1.364  loss_ce_1: 0.5602  loss_mask_1: 0.1879  loss_dice_1: 1.293  loss_ce_2: 0.5143  loss_mask_2: 0.1805  loss_dice_2: 1.255  loss_ce_3: 0.4879  loss_mask_3: 0.176  loss_dice_3: 1.169  loss_ce_4: 0.4427  loss_mask_4: 0.1782  loss_dice_4: 1.19  loss_ce_5: 0.4664  loss_mask_5: 0.1777  loss_dice_5: 1.162  loss_ce_6: 0.4507  loss_mask_6: 0.1774  loss_dice_6: 1.136  loss_ce_7: 0.4426  loss_mask_7: 0.1761  loss_dice_7: 1.143  loss_ce_8: 0.4246  loss_mask_8: 0.1767  loss_dice_8: 1.171    time: 1.0505  last_time: 1.0607  data_time: 0.0534  last_data_time: 0.0566   lr: 0.0001  max_mem: 32924M
[10/17 15:26:15] d2.utils.events INFO:  eta: 0:13:55  iter: 2199  total_loss: 19.47  loss_ce: 0.4667  loss_mask: 0.1695  loss_dice: 1.178  loss_ce_0: 0.5544  loss_mask_0: 0.1901  loss_dice_0: 1.432  loss_ce_1: 0.612  loss_mask_1: 0.177  loss_dice_1: 1.289  loss_ce_2: 0.5612  loss_mask_2: 0.1736  loss_dice_2: 1.291  loss_ce_3: 0.5063  loss_mask_3: 0.1733  loss_dice_3: 1.206  loss_ce_4: 0.4872  loss_mask_4: 0.1695  loss_dice_4: 1.23  loss_ce_5: 0.4776  loss_mask_5: 0.165  loss_dice_5: 1.239  loss_ce_6: 0.4652  loss_mask_6: 0.171  loss_dice_6: 1.218  loss_ce_7: 0.4862  loss_mask_7: 0.1729  loss_dice_7: 1.211  loss_ce_8: 0.4516  loss_mask_8: 0.1701  loss_dice_8: 1.187    time: 1.0503  last_time: 1.0751  data_time: 0.0543  last_data_time: 0.0539   lr: 0.0001  max_mem: 32924M
[10/17 15:26:36] d2.utils.events INFO:  eta: 0:13:33  iter: 2219  total_loss: 18.32  loss_ce: 0.4269  loss_mask: 0.1526  loss_dice: 1.19  loss_ce_0: 0.4961  loss_mask_0: 0.1793  loss_dice_0: 1.354  loss_ce_1: 0.6056  loss_mask_1: 0.1646  loss_dice_1: 1.302  loss_ce_2: 0.5385  loss_mask_2: 0.1578  loss_dice_2: 1.245  loss_ce_3: 0.5138  loss_mask_3: 0.1553  loss_dice_3: 1.188  loss_ce_4: 0.4457  loss_mask_4: 0.1588  loss_dice_4: 1.173  loss_ce_5: 0.43  loss_mask_5: 0.1547  loss_dice_5: 1.169  loss_ce_6: 0.4299  loss_mask_6: 0.1519  loss_dice_6: 1.191  loss_ce_7: 0.4205  loss_mask_7: 0.1515  loss_dice_7: 1.184  loss_ce_8: 0.4197  loss_mask_8: 0.1529  loss_dice_8: 1.176    time: 1.0501  last_time: 1.0309  data_time: 0.0558  last_data_time: 0.0584   lr: 0.0001  max_mem: 32924M
[10/17 15:26:56] d2.utils.events INFO:  eta: 0:13:12  iter: 2239  total_loss: 18.81  loss_ce: 0.4521  loss_mask: 0.1555  loss_dice: 1.15  loss_ce_0: 0.5676  loss_mask_0: 0.1889  loss_dice_0: 1.326  loss_ce_1: 0.5879  loss_mask_1: 0.1709  loss_dice_1: 1.289  loss_ce_2: 0.5556  loss_mask_2: 0.1628  loss_dice_2: 1.219  loss_ce_3: 0.4973  loss_mask_3: 0.1634  loss_dice_3: 1.177  loss_ce_4: 0.4592  loss_mask_4: 0.1606  loss_dice_4: 1.179  loss_ce_5: 0.4839  loss_mask_5: 0.1581  loss_dice_5: 1.199  loss_ce_6: 0.4773  loss_mask_6: 0.1567  loss_dice_6: 1.164  loss_ce_7: 0.432  loss_mask_7: 0.1594  loss_dice_7: 1.167  loss_ce_8: 0.4489  loss_mask_8: 0.1574  loss_dice_8: 1.149    time: 1.0499  last_time: 1.0981  data_time: 0.0539  last_data_time: 0.0452   lr: 0.0001  max_mem: 32924M
[10/17 15:27:17] d2.utils.events INFO:  eta: 0:12:50  iter: 2259  total_loss: 18.94  loss_ce: 0.4369  loss_mask: 0.1685  loss_dice: 1.183  loss_ce_0: 0.5546  loss_mask_0: 0.1921  loss_dice_0: 1.391  loss_ce_1: 0.6157  loss_mask_1: 0.1833  loss_dice_1: 1.304  loss_ce_2: 0.5204  loss_mask_2: 0.173  loss_dice_2: 1.255  loss_ce_3: 0.49  loss_mask_3: 0.1685  loss_dice_3: 1.205  loss_ce_4: 0.4714  loss_mask_4: 0.1693  loss_dice_4: 1.224  loss_ce_5: 0.459  loss_mask_5: 0.1711  loss_dice_5: 1.194  loss_ce_6: 0.4503  loss_mask_6: 0.166  loss_dice_6: 1.179  loss_ce_7: 0.4618  loss_mask_7: 0.1714  loss_dice_7: 1.119  loss_ce_8: 0.4509  loss_mask_8: 0.1707  loss_dice_8: 1.182    time: 1.0498  last_time: 1.0527  data_time: 0.0560  last_data_time: 0.0756   lr: 0.0001  max_mem: 32924M
[10/17 15:27:38] d2.utils.events INFO:  eta: 0:12:29  iter: 2279  total_loss: 18.06  loss_ce: 0.4172  loss_mask: 0.1548  loss_dice: 1.078  loss_ce_0: 0.5511  loss_mask_0: 0.1753  loss_dice_0: 1.304  loss_ce_1: 0.5698  loss_mask_1: 0.169  loss_dice_1: 1.231  loss_ce_2: 0.554  loss_mask_2: 0.1596  loss_dice_2: 1.157  loss_ce_3: 0.4503  loss_mask_3: 0.1563  loss_dice_3: 1.193  loss_ce_4: 0.4382  loss_mask_4: 0.1571  loss_dice_4: 1.122  loss_ce_5: 0.4434  loss_mask_5: 0.1539  loss_dice_5: 1.127  loss_ce_6: 0.4164  loss_mask_6: 0.1545  loss_dice_6: 1.111  loss_ce_7: 0.4221  loss_mask_7: 0.1554  loss_dice_7: 1.099  loss_ce_8: 0.4086  loss_mask_8: 0.1515  loss_dice_8: 1.106    time: 1.0497  last_time: 1.0213  data_time: 0.0557  last_data_time: 0.0656   lr: 0.0001  max_mem: 32924M
[10/17 15:27:59] d2.utils.events INFO:  eta: 0:12:08  iter: 2299  total_loss: 19.61  loss_ce: 0.4532  loss_mask: 0.1667  loss_dice: 1.21  loss_ce_0: 0.5458  loss_mask_0: 0.1929  loss_dice_0: 1.44  loss_ce_1: 0.6023  loss_mask_1: 0.1847  loss_dice_1: 1.334  loss_ce_2: 0.5393  loss_mask_2: 0.1768  loss_dice_2: 1.287  loss_ce_3: 0.5003  loss_mask_3: 0.1732  loss_dice_3: 1.24  loss_ce_4: 0.4632  loss_mask_4: 0.1694  loss_dice_4: 1.239  loss_ce_5: 0.4532  loss_mask_5: 0.1692  loss_dice_5: 1.252  loss_ce_6: 0.4576  loss_mask_6: 0.1697  loss_dice_6: 1.236  loss_ce_7: 0.4465  loss_mask_7: 0.1697  loss_dice_7: 1.216  loss_ce_8: 0.4636  loss_mask_8: 0.1677  loss_dice_8: 1.219    time: 1.0496  last_time: 1.0168  data_time: 0.0578  last_data_time: 0.0709   lr: 0.0001  max_mem: 32924M
[10/17 15:28:20] d2.utils.events INFO:  eta: 0:11:47  iter: 2319  total_loss: 18.87  loss_ce: 0.4466  loss_mask: 0.1559  loss_dice: 1.164  loss_ce_0: 0.5508  loss_mask_0: 0.1789  loss_dice_0: 1.393  loss_ce_1: 0.618  loss_mask_1: 0.1705  loss_dice_1: 1.298  loss_ce_2: 0.5747  loss_mask_2: 0.1638  loss_dice_2: 1.264  loss_ce_3: 0.493  loss_mask_3: 0.1583  loss_dice_3: 1.196  loss_ce_4: 0.466  loss_mask_4: 0.1582  loss_dice_4: 1.195  loss_ce_5: 0.4489  loss_mask_5: 0.1544  loss_dice_5: 1.193  loss_ce_6: 0.434  loss_mask_6: 0.1564  loss_dice_6: 1.156  loss_ce_7: 0.4356  loss_mask_7: 0.1562  loss_dice_7: 1.176  loss_ce_8: 0.4506  loss_mask_8: 0.1548  loss_dice_8: 1.13    time: 1.0496  last_time: 1.0195  data_time: 0.0563  last_data_time: 0.0563   lr: 0.0001  max_mem: 32924M
[10/17 15:28:41] d2.utils.events INFO:  eta: 0:11:27  iter: 2339  total_loss: 20.11  loss_ce: 0.4571  loss_mask: 0.1628  loss_dice: 1.219  loss_ce_0: 0.5771  loss_mask_0: 0.1827  loss_dice_0: 1.468  loss_ce_1: 0.6016  loss_mask_1: 0.1763  loss_dice_1: 1.383  loss_ce_2: 0.5504  loss_mask_2: 0.1631  loss_dice_2: 1.301  loss_ce_3: 0.5114  loss_mask_3: 0.1647  loss_dice_3: 1.244  loss_ce_4: 0.4639  loss_mask_4: 0.1649  loss_dice_4: 1.234  loss_ce_5: 0.4629  loss_mask_5: 0.1618  loss_dice_5: 1.266  loss_ce_6: 0.4557  loss_mask_6: 0.1638  loss_dice_6: 1.217  loss_ce_7: 0.4745  loss_mask_7: 0.1645  loss_dice_7: 1.227  loss_ce_8: 0.5011  loss_mask_8: 0.1639  loss_dice_8: 1.195    time: 1.0495  last_time: 1.0420  data_time: 0.0576  last_data_time: 0.0560   lr: 0.0001  max_mem: 32924M
[10/17 15:29:02] d2.utils.events INFO:  eta: 0:11:05  iter: 2359  total_loss: 19.03  loss_ce: 0.4437  loss_mask: 0.1583  loss_dice: 1.208  loss_ce_0: 0.5091  loss_mask_0: 0.1803  loss_dice_0: 1.421  loss_ce_1: 0.5767  loss_mask_1: 0.1717  loss_dice_1: 1.351  loss_ce_2: 0.5297  loss_mask_2: 0.1623  loss_dice_2: 1.26  loss_ce_3: 0.4842  loss_mask_3: 0.1602  loss_dice_3: 1.214  loss_ce_4: 0.4515  loss_mask_4: 0.1634  loss_dice_4: 1.222  loss_ce_5: 0.4462  loss_mask_5: 0.162  loss_dice_5: 1.207  loss_ce_6: 0.4143  loss_mask_6: 0.1571  loss_dice_6: 1.23  loss_ce_7: 0.4424  loss_mask_7: 0.1592  loss_dice_7: 1.212  loss_ce_8: 0.4462  loss_mask_8: 0.1579  loss_dice_8: 1.201    time: 1.0495  last_time: 1.0108  data_time: 0.0563  last_data_time: 0.0441   lr: 0.0001  max_mem: 32924M
[10/17 15:29:22] d2.utils.events INFO:  eta: 0:10:44  iter: 2379  total_loss: 17.87  loss_ce: 0.4134  loss_mask: 0.1586  loss_dice: 1.095  loss_ce_0: 0.5557  loss_mask_0: 0.1855  loss_dice_0: 1.309  loss_ce_1: 0.5743  loss_mask_1: 0.1696  loss_dice_1: 1.233  loss_ce_2: 0.52  loss_mask_2: 0.1626  loss_dice_2: 1.216  loss_ce_3: 0.4726  loss_mask_3: 0.1602  loss_dice_3: 1.155  loss_ce_4: 0.4471  loss_mask_4: 0.1621  loss_dice_4: 1.14  loss_ce_5: 0.4769  loss_mask_5: 0.1571  loss_dice_5: 1.153  loss_ce_6: 0.4237  loss_mask_6: 0.1606  loss_dice_6: 1.096  loss_ce_7: 0.4003  loss_mask_7: 0.1596  loss_dice_7: 1.132  loss_ce_8: 0.4209  loss_mask_8: 0.1588  loss_dice_8: 1.15    time: 1.0493  last_time: 1.0418  data_time: 0.0553  last_data_time: 0.0530   lr: 0.0001  max_mem: 32924M
[10/17 15:29:43] d2.utils.events INFO:  eta: 0:10:23  iter: 2399  total_loss: 18.88  loss_ce: 0.4702  loss_mask: 0.1564  loss_dice: 1.186  loss_ce_0: 0.5342  loss_mask_0: 0.1762  loss_dice_0: 1.385  loss_ce_1: 0.6044  loss_mask_1: 0.1652  loss_dice_1: 1.304  loss_ce_2: 0.5601  loss_mask_2: 0.1563  loss_dice_2: 1.244  loss_ce_3: 0.5087  loss_mask_3: 0.1594  loss_dice_3: 1.194  loss_ce_4: 0.4891  loss_mask_4: 0.1581  loss_dice_4: 1.202  loss_ce_5: 0.4559  loss_mask_5: 0.1578  loss_dice_5: 1.169  loss_ce_6: 0.4462  loss_mask_6: 0.1599  loss_dice_6: 1.182  loss_ce_7: 0.4463  loss_mask_7: 0.1585  loss_dice_7: 1.179  loss_ce_8: 0.4444  loss_mask_8: 0.1568  loss_dice_8: 1.2    time: 1.0492  last_time: 1.0572  data_time: 0.0566  last_data_time: 0.0620   lr: 0.0001  max_mem: 32924M
[10/17 15:30:04] d2.utils.events INFO:  eta: 0:10:02  iter: 2419  total_loss: 18.5  loss_ce: 0.4519  loss_mask: 0.1514  loss_dice: 1.153  loss_ce_0: 0.5164  loss_mask_0: 0.1713  loss_dice_0: 1.336  loss_ce_1: 0.5999  loss_mask_1: 0.1617  loss_dice_1: 1.255  loss_ce_2: 0.5787  loss_mask_2: 0.1511  loss_dice_2: 1.252  loss_ce_3: 0.5229  loss_mask_3: 0.1522  loss_dice_3: 1.167  loss_ce_4: 0.5041  loss_mask_4: 0.1519  loss_dice_4: 1.169  loss_ce_5: 0.4895  loss_mask_5: 0.1501  loss_dice_5: 1.17  loss_ce_6: 0.4904  loss_mask_6: 0.1495  loss_dice_6: 1.135  loss_ce_7: 0.4406  loss_mask_7: 0.1516  loss_dice_7: 1.126  loss_ce_8: 0.4674  loss_mask_8: 0.1519  loss_dice_8: 1.16    time: 1.0491  last_time: 1.0169  data_time: 0.0576  last_data_time: 0.0514   lr: 0.0001  max_mem: 32924M
[10/17 15:30:25] d2.utils.events INFO:  eta: 0:09:41  iter: 2439  total_loss: 18.88  loss_ce: 0.4178  loss_mask: 0.1674  loss_dice: 1.192  loss_ce_0: 0.4905  loss_mask_0: 0.1928  loss_dice_0: 1.474  loss_ce_1: 0.5699  loss_mask_1: 0.1872  loss_dice_1: 1.329  loss_ce_2: 0.5333  loss_mask_2: 0.17  loss_dice_2: 1.304  loss_ce_3: 0.4903  loss_mask_3: 0.1784  loss_dice_3: 1.244  loss_ce_4: 0.4501  loss_mask_4: 0.1663  loss_dice_4: 1.222  loss_ce_5: 0.4255  loss_mask_5: 0.1674  loss_dice_5: 1.229  loss_ce_6: 0.3976  loss_mask_6: 0.1665  loss_dice_6: 1.222  loss_ce_7: 0.435  loss_mask_7: 0.1656  loss_dice_7: 1.231  loss_ce_8: 0.4236  loss_mask_8: 0.1636  loss_dice_8: 1.232    time: 1.0492  last_time: 1.0076  data_time: 0.0571  last_data_time: 0.0547   lr: 0.0001  max_mem: 32924M
[10/17 15:30:46] d2.utils.events INFO:  eta: 0:09:20  iter: 2459  total_loss: 19.48  loss_ce: 0.4221  loss_mask: 0.1622  loss_dice: 1.191  loss_ce_0: 0.5464  loss_mask_0: 0.1928  loss_dice_0: 1.439  loss_ce_1: 0.6061  loss_mask_1: 0.1733  loss_dice_1: 1.317  loss_ce_2: 0.5317  loss_mask_2: 0.1666  loss_dice_2: 1.299  loss_ce_3: 0.483  loss_mask_3: 0.1675  loss_dice_3: 1.227  loss_ce_4: 0.4697  loss_mask_4: 0.1633  loss_dice_4: 1.266  loss_ce_5: 0.4514  loss_mask_5: 0.1604  loss_dice_5: 1.223  loss_ce_6: 0.4026  loss_mask_6: 0.1631  loss_dice_6: 1.254  loss_ce_7: 0.4449  loss_mask_7: 0.164  loss_dice_7: 1.223  loss_ce_8: 0.4456  loss_mask_8: 0.1616  loss_dice_8: 1.212    time: 1.0491  last_time: 1.0102  data_time: 0.0560  last_data_time: 0.0535   lr: 0.0001  max_mem: 32924M
[10/17 15:31:07] d2.utils.events INFO:  eta: 0:08:59  iter: 2479  total_loss: 19.3  loss_ce: 0.3995  loss_mask: 0.1588  loss_dice: 1.23  loss_ce_0: 0.5155  loss_mask_0: 0.1866  loss_dice_0: 1.385  loss_ce_1: 0.5882  loss_mask_1: 0.1728  loss_dice_1: 1.33  loss_ce_2: 0.5381  loss_mask_2: 0.1657  loss_dice_2: 1.318  loss_ce_3: 0.4787  loss_mask_3: 0.1629  loss_dice_3: 1.23  loss_ce_4: 0.4456  loss_mask_4: 0.161  loss_dice_4: 1.272  loss_ce_5: 0.41  loss_mask_5: 0.1593  loss_dice_5: 1.226  loss_ce_6: 0.4203  loss_mask_6: 0.1635  loss_dice_6: 1.221  loss_ce_7: 0.4132  loss_mask_7: 0.1635  loss_dice_7: 1.237  loss_ce_8: 0.4461  loss_mask_8: 0.1626  loss_dice_8: 1.203    time: 1.0490  last_time: 1.0495  data_time: 0.0553  last_data_time: 0.0514   lr: 0.0001  max_mem: 32924M
[10/17 15:31:27] d2.utils.events INFO:  eta: 0:08:38  iter: 2499  total_loss: 18.81  loss_ce: 0.4219  loss_mask: 0.1618  loss_dice: 1.166  loss_ce_0: 0.5459  loss_mask_0: 0.1905  loss_dice_0: 1.392  loss_ce_1: 0.6046  loss_mask_1: 0.174  loss_dice_1: 1.286  loss_ce_2: 0.4975  loss_mask_2: 0.1686  loss_dice_2: 1.225  loss_ce_3: 0.4638  loss_mask_3: 0.1691  loss_dice_3: 1.202  loss_ce_4: 0.4796  loss_mask_4: 0.1691  loss_dice_4: 1.179  loss_ce_5: 0.4371  loss_mask_5: 0.1608  loss_dice_5: 1.171  loss_ce_6: 0.4378  loss_mask_6: 0.1632  loss_dice_6: 1.175  loss_ce_7: 0.4184  loss_mask_7: 0.1626  loss_dice_7: 1.181  loss_ce_8: 0.4282  loss_mask_8: 0.1605  loss_dice_8: 1.15    time: 1.0489  last_time: 1.0105  data_time: 0.0552  last_data_time: 0.0513   lr: 0.0001  max_mem: 32924M
[10/17 15:31:49] d2.utils.events INFO:  eta: 0:08:18  iter: 2519  total_loss: 19.85  loss_ce: 0.4875  loss_mask: 0.1473  loss_dice: 1.262  loss_ce_0: 0.5562  loss_mask_0: 0.1783  loss_dice_0: 1.437  loss_ce_1: 0.6455  loss_mask_1: 0.1573  loss_dice_1: 1.333  loss_ce_2: 0.5575  loss_mask_2: 0.1506  loss_dice_2: 1.322  loss_ce_3: 0.4896  loss_mask_3: 0.1495  loss_dice_3: 1.301  loss_ce_4: 0.4827  loss_mask_4: 0.1543  loss_dice_4: 1.27  loss_ce_5: 0.4747  loss_mask_5: 0.1481  loss_dice_5: 1.297  loss_ce_6: 0.4441  loss_mask_6: 0.1506  loss_dice_6: 1.269  loss_ce_7: 0.4638  loss_mask_7: 0.148  loss_dice_7: 1.242  loss_ce_8: 0.4815  loss_mask_8: 0.1477  loss_dice_8: 1.25    time: 1.0490  last_time: 1.0878  data_time: 0.0646  last_data_time: 0.0730   lr: 0.0001  max_mem: 32924M
[10/17 15:32:10] d2.utils.events INFO:  eta: 0:07:57  iter: 2539  total_loss: 18.27  loss_ce: 0.4418  loss_mask: 0.162  loss_dice: 1.157  loss_ce_0: 0.5448  loss_mask_0: 0.1863  loss_dice_0: 1.292  loss_ce_1: 0.5942  loss_mask_1: 0.1728  loss_dice_1: 1.245  loss_ce_2: 0.5433  loss_mask_2: 0.1658  loss_dice_2: 1.198  loss_ce_3: 0.4795  loss_mask_3: 0.163  loss_dice_3: 1.172  loss_ce_4: 0.4403  loss_mask_4: 0.164  loss_dice_4: 1.126  loss_ce_5: 0.4333  loss_mask_5: 0.161  loss_dice_5: 1.132  loss_ce_6: 0.4139  loss_mask_6: 0.1646  loss_dice_6: 1.138  loss_ce_7: 0.4299  loss_mask_7: 0.1622  loss_dice_7: 1.153  loss_ce_8: 0.419  loss_mask_8: 0.1645  loss_dice_8: 1.151    time: 1.0490  last_time: 1.0516  data_time: 0.0643  last_data_time: 0.0787   lr: 0.0001  max_mem: 32924M
[10/17 15:32:31] d2.utils.events INFO:  eta: 0:07:36  iter: 2559  total_loss: 18.42  loss_ce: 0.3979  loss_mask: 0.1646  loss_dice: 1.15  loss_ce_0: 0.5277  loss_mask_0: 0.1897  loss_dice_0: 1.35  loss_ce_1: 0.5978  loss_mask_1: 0.1745  loss_dice_1: 1.292  loss_ce_2: 0.5164  loss_mask_2: 0.1675  loss_dice_2: 1.228  loss_ce_3: 0.4549  loss_mask_3: 0.17  loss_dice_3: 1.163  loss_ce_4: 0.4432  loss_mask_4: 0.1694  loss_dice_4: 1.168  loss_ce_5: 0.4243  loss_mask_5: 0.1661  loss_dice_5: 1.167  loss_ce_6: 0.3756  loss_mask_6: 0.169  loss_dice_6: 1.2  loss_ce_7: 0.4081  loss_mask_7: 0.1692  loss_dice_7: 1.129  loss_ce_8: 0.4196  loss_mask_8: 0.1645  loss_dice_8: 1.14    time: 1.0489  last_time: 1.0224  data_time: 0.0598  last_data_time: 0.0582   lr: 0.0001  max_mem: 32924M
[10/17 15:32:52] d2.utils.events INFO:  eta: 0:07:15  iter: 2579  total_loss: 18.28  loss_ce: 0.4461  loss_mask: 0.1573  loss_dice: 1.144  loss_ce_0: 0.5412  loss_mask_0: 0.1699  loss_dice_0: 1.345  loss_ce_1: 0.5763  loss_mask_1: 0.1639  loss_dice_1: 1.301  loss_ce_2: 0.5063  loss_mask_2: 0.1654  loss_dice_2: 1.256  loss_ce_3: 0.4487  loss_mask_3: 0.1665  loss_dice_3: 1.203  loss_ce_4: 0.4301  loss_mask_4: 0.1581  loss_dice_4: 1.196  loss_ce_5: 0.429  loss_mask_5: 0.1589  loss_dice_5: 1.175  loss_ce_6: 0.4069  loss_mask_6: 0.1573  loss_dice_6: 1.159  loss_ce_7: 0.4265  loss_mask_7: 0.158  loss_dice_7: 1.174  loss_ce_8: 0.4298  loss_mask_8: 0.1569  loss_dice_8: 1.182    time: 1.0489  last_time: 1.0765  data_time: 0.0643  last_data_time: 0.0813   lr: 0.0001  max_mem: 32924M
[10/17 15:33:13] d2.utils.events INFO:  eta: 0:06:55  iter: 2599  total_loss: 18.93  loss_ce: 0.4715  loss_mask: 0.1518  loss_dice: 1.195  loss_ce_0: 0.5515  loss_mask_0: 0.1685  loss_dice_0: 1.401  loss_ce_1: 0.6204  loss_mask_1: 0.1544  loss_dice_1: 1.332  loss_ce_2: 0.562  loss_mask_2: 0.1522  loss_dice_2: 1.307  loss_ce_3: 0.4998  loss_mask_3: 0.157  loss_dice_3: 1.225  loss_ce_4: 0.479  loss_mask_4: 0.1541  loss_dice_4: 1.232  loss_ce_5: 0.4612  loss_mask_5: 0.1525  loss_dice_5: 1.206  loss_ce_6: 0.4398  loss_mask_6: 0.1492  loss_dice_6: 1.216  loss_ce_7: 0.4549  loss_mask_7: 0.1514  loss_dice_7: 1.213  loss_ce_8: 0.4772  loss_mask_8: 0.1493  loss_dice_8: 1.207    time: 1.0490  last_time: 1.0222  data_time: 0.0637  last_data_time: 0.0624   lr: 0.0001  max_mem: 32924M
[10/17 15:33:34] d2.utils.events INFO:  eta: 0:06:34  iter: 2619  total_loss: 18.46  loss_ce: 0.3864  loss_mask: 0.1495  loss_dice: 1.194  loss_ce_0: 0.5283  loss_mask_0: 0.1668  loss_dice_0: 1.385  loss_ce_1: 0.5753  loss_mask_1: 0.1529  loss_dice_1: 1.307  loss_ce_2: 0.5212  loss_mask_2: 0.1516  loss_dice_2: 1.247  loss_ce_3: 0.4686  loss_mask_3: 0.1512  loss_dice_3: 1.228  loss_ce_4: 0.4362  loss_mask_4: 0.1494  loss_dice_4: 1.201  loss_ce_5: 0.4168  loss_mask_5: 0.1473  loss_dice_5: 1.22  loss_ce_6: 0.3972  loss_mask_6: 0.1512  loss_dice_6: 1.204  loss_ce_7: 0.3948  loss_mask_7: 0.1505  loss_dice_7: 1.191  loss_ce_8: 0.4003  loss_mask_8: 0.1529  loss_dice_8: 1.201    time: 1.0490  last_time: 1.0604  data_time: 0.0679  last_data_time: 0.0716   lr: 0.0001  max_mem: 32924M
[10/17 15:33:55] d2.utils.events INFO:  eta: 0:06:13  iter: 2639  total_loss: 18.55  loss_ce: 0.4127  loss_mask: 0.1576  loss_dice: 1.209  loss_ce_0: 0.5348  loss_mask_0: 0.1859  loss_dice_0: 1.412  loss_ce_1: 0.5924  loss_mask_1: 0.1668  loss_dice_1: 1.335  loss_ce_2: 0.5223  loss_mask_2: 0.1618  loss_dice_2: 1.272  loss_ce_3: 0.4789  loss_mask_3: 0.1597  loss_dice_3: 1.228  loss_ce_4: 0.4317  loss_mask_4: 0.1588  loss_dice_4: 1.201  loss_ce_5: 0.4352  loss_mask_5: 0.1582  loss_dice_5: 1.207  loss_ce_6: 0.4366  loss_mask_6: 0.1574  loss_dice_6: 1.2  loss_ce_7: 0.4346  loss_mask_7: 0.1573  loss_dice_7: 1.241  loss_ce_8: 0.4512  loss_mask_8: 0.157  loss_dice_8: 1.184    time: 1.0490  last_time: 1.0600  data_time: 0.0703  last_data_time: 0.0738   lr: 0.0001  max_mem: 32924M
[10/17 15:34:16] d2.utils.events INFO:  eta: 0:05:53  iter: 2659  total_loss: 19.97  loss_ce: 0.4461  loss_mask: 0.1504  loss_dice: 1.263  loss_ce_0: 0.5064  loss_mask_0: 0.1719  loss_dice_0: 1.538  loss_ce_1: 0.6075  loss_mask_1: 0.1617  loss_dice_1: 1.416  loss_ce_2: 0.5484  loss_mask_2: 0.1551  loss_dice_2: 1.38  loss_ce_3: 0.4561  loss_mask_3: 0.1542  loss_dice_3: 1.321  loss_ce_4: 0.4656  loss_mask_4: 0.1531  loss_dice_4: 1.284  loss_ce_5: 0.4495  loss_mask_5: 0.1518  loss_dice_5: 1.338  loss_ce_6: 0.3937  loss_mask_6: 0.151  loss_dice_6: 1.302  loss_ce_7: 0.4377  loss_mask_7: 0.1509  loss_dice_7: 1.279  loss_ce_8: 0.4248  loss_mask_8: 0.1509  loss_dice_8: 1.318    time: 1.0491  last_time: 1.0430  data_time: 0.0584  last_data_time: 0.0506   lr: 0.0001  max_mem: 32924M
[10/17 15:34:37] d2.utils.events INFO:  eta: 0:05:32  iter: 2679  total_loss: 18.74  loss_ce: 0.4212  loss_mask: 0.1554  loss_dice: 1.124  loss_ce_0: 0.5505  loss_mask_0: 0.1918  loss_dice_0: 1.346  loss_ce_1: 0.5952  loss_mask_1: 0.1721  loss_dice_1: 1.267  loss_ce_2: 0.5269  loss_mask_2: 0.1624  loss_dice_2: 1.196  loss_ce_3: 0.4843  loss_mask_3: 0.1631  loss_dice_3: 1.176  loss_ce_4: 0.4501  loss_mask_4: 0.1611  loss_dice_4: 1.149  loss_ce_5: 0.4522  loss_mask_5: 0.159  loss_dice_5: 1.114  loss_ce_6: 0.4086  loss_mask_6: 0.158  loss_dice_6: 1.165  loss_ce_7: 0.4327  loss_mask_7: 0.1596  loss_dice_7: 1.143  loss_ce_8: 0.4381  loss_mask_8: 0.1588  loss_dice_8: 1.153    time: 1.0491  last_time: 1.0625  data_time: 0.0591  last_data_time: 0.0574   lr: 0.0001  max_mem: 32924M
[10/17 15:34:58] d2.utils.events INFO:  eta: 0:05:11  iter: 2699  total_loss: 18.92  loss_ce: 0.4222  loss_mask: 0.1537  loss_dice: 1.196  loss_ce_0: 0.5378  loss_mask_0: 0.1856  loss_dice_0: 1.378  loss_ce_1: 0.6109  loss_mask_1: 0.1695  loss_dice_1: 1.345  loss_ce_2: 0.5623  loss_mask_2: 0.1576  loss_dice_2: 1.265  loss_ce_3: 0.4829  loss_mask_3: 0.1567  loss_dice_3: 1.24  loss_ce_4: 0.454  loss_mask_4: 0.1567  loss_dice_4: 1.189  loss_ce_5: 0.4469  loss_mask_5: 0.1549  loss_dice_5: 1.227  loss_ce_6: 0.4426  loss_mask_6: 0.1546  loss_dice_6: 1.207  loss_ce_7: 0.4365  loss_mask_7: 0.154  loss_dice_7: 1.207  loss_ce_8: 0.4322  loss_mask_8: 0.1543  loss_dice_8: 1.19    time: 1.0490  last_time: 1.0775  data_time: 0.0580  last_data_time: 0.0549   lr: 0.0001  max_mem: 32924M
[10/17 15:35:19] d2.utils.events INFO:  eta: 0:04:50  iter: 2719  total_loss: 18.84  loss_ce: 0.4109  loss_mask: 0.1566  loss_dice: 1.211  loss_ce_0: 0.5247  loss_mask_0: 0.1825  loss_dice_0: 1.394  loss_ce_1: 0.6108  loss_mask_1: 0.1722  loss_dice_1: 1.285  loss_ce_2: 0.5418  loss_mask_2: 0.1571  loss_dice_2: 1.236  loss_ce_3: 0.5011  loss_mask_3: 0.1561  loss_dice_3: 1.188  loss_ce_4: 0.4488  loss_mask_4: 0.1559  loss_dice_4: 1.168  loss_ce_5: 0.4125  loss_mask_5: 0.1583  loss_dice_5: 1.19  loss_ce_6: 0.4198  loss_mask_6: 0.157  loss_dice_6: 1.197  loss_ce_7: 0.4454  loss_mask_7: 0.1582  loss_dice_7: 1.192  loss_ce_8: 0.4473  loss_mask_8: 0.1582  loss_dice_8: 1.173    time: 1.0490  last_time: 1.0516  data_time: 0.0631  last_data_time: 0.0666   lr: 0.0001  max_mem: 32924M
[10/17 15:35:40] d2.utils.events INFO:  eta: 0:04:30  iter: 2739  total_loss: 18.25  loss_ce: 0.427  loss_mask: 0.1638  loss_dice: 1.137  loss_ce_0: 0.5136  loss_mask_0: 0.1863  loss_dice_0: 1.322  loss_ce_1: 0.5418  loss_mask_1: 0.168  loss_dice_1: 1.277  loss_ce_2: 0.4935  loss_mask_2: 0.1626  loss_dice_2: 1.189  loss_ce_3: 0.4672  loss_mask_3: 0.1605  loss_dice_3: 1.154  loss_ce_4: 0.4314  loss_mask_4: 0.1619  loss_dice_4: 1.136  loss_ce_5: 0.4111  loss_mask_5: 0.1595  loss_dice_5: 1.177  loss_ce_6: 0.393  loss_mask_6: 0.1618  loss_dice_6: 1.163  loss_ce_7: 0.3926  loss_mask_7: 0.1623  loss_dice_7: 1.144  loss_ce_8: 0.4207  loss_mask_8: 0.1622  loss_dice_8: 1.15    time: 1.0490  last_time: 1.0573  data_time: 0.0568  last_data_time: 0.0655   lr: 0.0001  max_mem: 32924M
[10/17 15:36:01] d2.utils.events INFO:  eta: 0:04:09  iter: 2759  total_loss: 17.92  loss_ce: 0.4359  loss_mask: 0.1507  loss_dice: 1.125  loss_ce_0: 0.5431  loss_mask_0: 0.178  loss_dice_0: 1.364  loss_ce_1: 0.6198  loss_mask_1: 0.1659  loss_dice_1: 1.281  loss_ce_2: 0.5698  loss_mask_2: 0.1569  loss_dice_2: 1.225  loss_ce_3: 0.4814  loss_mask_3: 0.1545  loss_dice_3: 1.175  loss_ce_4: 0.4677  loss_mask_4: 0.1539  loss_dice_4: 1.159  loss_ce_5: 0.4603  loss_mask_5: 0.153  loss_dice_5: 1.176  loss_ce_6: 0.4615  loss_mask_6: 0.1542  loss_dice_6: 1.171  loss_ce_7: 0.4486  loss_mask_7: 0.1526  loss_dice_7: 1.162  loss_ce_8: 0.459  loss_mask_8: 0.1511  loss_dice_8: 1.126    time: 1.0489  last_time: 1.0100  data_time: 0.0585  last_data_time: 0.0564   lr: 0.0001  max_mem: 32924M
[10/17 15:36:22] d2.utils.events INFO:  eta: 0:03:48  iter: 2779  total_loss: 18.63  loss_ce: 0.3986  loss_mask: 0.1459  loss_dice: 1.182  loss_ce_0: 0.5167  loss_mask_0: 0.1702  loss_dice_0: 1.437  loss_ce_1: 0.5586  loss_mask_1: 0.1598  loss_dice_1: 1.323  loss_ce_2: 0.4984  loss_mask_2: 0.1489  loss_dice_2: 1.245  loss_ce_3: 0.4589  loss_mask_3: 0.1496  loss_dice_3: 1.202  loss_ce_4: 0.4366  loss_mask_4: 0.1462  loss_dice_4: 1.218  loss_ce_5: 0.428  loss_mask_5: 0.1456  loss_dice_5: 1.201  loss_ce_6: 0.4105  loss_mask_6: 0.1479  loss_dice_6: 1.187  loss_ce_7: 0.394  loss_mask_7: 0.1471  loss_dice_7: 1.202  loss_ce_8: 0.3784  loss_mask_8: 0.149  loss_dice_8: 1.207    time: 1.0490  last_time: 1.0310  data_time: 0.0673  last_data_time: 0.0759   lr: 0.0001  max_mem: 32924M
[10/17 15:36:43] d2.utils.events INFO:  eta: 0:03:27  iter: 2799  total_loss: 19.28  loss_ce: 0.4464  loss_mask: 0.1627  loss_dice: 1.246  loss_ce_0: 0.5365  loss_mask_0: 0.1869  loss_dice_0: 1.42  loss_ce_1: 0.6089  loss_mask_1: 0.1708  loss_dice_1: 1.343  loss_ce_2: 0.5369  loss_mask_2: 0.1653  loss_dice_2: 1.303  loss_ce_3: 0.4823  loss_mask_3: 0.1653  loss_dice_3: 1.246  loss_ce_4: 0.451  loss_mask_4: 0.1651  loss_dice_4: 1.281  loss_ce_5: 0.4565  loss_mask_5: 0.1623  loss_dice_5: 1.257  loss_ce_6: 0.409  loss_mask_6: 0.1643  loss_dice_6: 1.273  loss_ce_7: 0.4156  loss_mask_7: 0.1614  loss_dice_7: 1.253  loss_ce_8: 0.4262  loss_mask_8: 0.161  loss_dice_8: 1.246    time: 1.0490  last_time: 1.0304  data_time: 0.0626  last_data_time: 0.0456   lr: 0.0001  max_mem: 32924M
[10/17 15:37:04] d2.utils.events INFO:  eta: 0:03:07  iter: 2819  total_loss: 19.16  loss_ce: 0.4667  loss_mask: 0.1502  loss_dice: 1.177  loss_ce_0: 0.5419  loss_mask_0: 0.1726  loss_dice_0: 1.434  loss_ce_1: 0.6038  loss_mask_1: 0.1624  loss_dice_1: 1.318  loss_ce_2: 0.5427  loss_mask_2: 0.1593  loss_dice_2: 1.259  loss_ce_3: 0.4941  loss_mask_3: 0.1539  loss_dice_3: 1.207  loss_ce_4: 0.4794  loss_mask_4: 0.1548  loss_dice_4: 1.2  loss_ce_5: 0.4492  loss_mask_5: 0.1524  loss_dice_5: 1.183  loss_ce_6: 0.4288  loss_mask_6: 0.1541  loss_dice_6: 1.234  loss_ce_7: 0.4764  loss_mask_7: 0.1547  loss_dice_7: 1.2  loss_ce_8: 0.4509  loss_mask_8: 0.1537  loss_dice_8: 1.202    time: 1.0490  last_time: 1.0314  data_time: 0.0586  last_data_time: 0.0581   lr: 0.0001  max_mem: 32924M
[10/17 15:37:25] d2.utils.events INFO:  eta: 0:02:46  iter: 2839  total_loss: 17.68  loss_ce: 0.3975  loss_mask: 0.1528  loss_dice: 1.095  loss_ce_0: 0.5238  loss_mask_0: 0.1735  loss_dice_0: 1.295  loss_ce_1: 0.574  loss_mask_1: 0.1633  loss_dice_1: 1.216  loss_ce_2: 0.5135  loss_mask_2: 0.1568  loss_dice_2: 1.172  loss_ce_3: 0.4408  loss_mask_3: 0.1546  loss_dice_3: 1.164  loss_ce_4: 0.3933  loss_mask_4: 0.1562  loss_dice_4: 1.148  loss_ce_5: 0.3992  loss_mask_5: 0.1513  loss_dice_5: 1.174  loss_ce_6: 0.3826  loss_mask_6: 0.1547  loss_dice_6: 1.13  loss_ce_7: 0.3834  loss_mask_7: 0.1548  loss_dice_7: 1.152  loss_ce_8: 0.3689  loss_mask_8: 0.1539  loss_dice_8: 1.143    time: 1.0489  last_time: 1.0237  data_time: 0.0571  last_data_time: 0.0553   lr: 0.0001  max_mem: 32924M
[10/17 15:37:46] d2.utils.events INFO:  eta: 0:02:25  iter: 2859  total_loss: 18.04  loss_ce: 0.3862  loss_mask: 0.1576  loss_dice: 1.136  loss_ce_0: 0.5398  loss_mask_0: 0.1998  loss_dice_0: 1.309  loss_ce_1: 0.6011  loss_mask_1: 0.1733  loss_dice_1: 1.243  loss_ce_2: 0.5367  loss_mask_2: 0.1607  loss_dice_2: 1.147  loss_ce_3: 0.4492  loss_mask_3: 0.1629  loss_dice_3: 1.155  loss_ce_4: 0.4291  loss_mask_4: 0.1634  loss_dice_4: 1.123  loss_ce_5: 0.3958  loss_mask_5: 0.1586  loss_dice_5: 1.16  loss_ce_6: 0.4017  loss_mask_6: 0.1581  loss_dice_6: 1.135  loss_ce_7: 0.3881  loss_mask_7: 0.1592  loss_dice_7: 1.135  loss_ce_8: 0.3838  loss_mask_8: 0.1587  loss_dice_8: 1.118    time: 1.0489  last_time: 1.0254  data_time: 0.0619  last_data_time: 0.0503   lr: 0.0001  max_mem: 32924M
[10/17 15:38:07] d2.utils.events INFO:  eta: 0:02:04  iter: 2879  total_loss: 20  loss_ce: 0.4552  loss_mask: 0.1505  loss_dice: 1.266  loss_ce_0: 0.5905  loss_mask_0: 0.1699  loss_dice_0: 1.44  loss_ce_1: 0.641  loss_mask_1: 0.1577  loss_dice_1: 1.383  loss_ce_2: 0.5773  loss_mask_2: 0.1506  loss_dice_2: 1.326  loss_ce_3: 0.529  loss_mask_3: 0.1472  loss_dice_3: 1.28  loss_ce_4: 0.5198  loss_mask_4: 0.1458  loss_dice_4: 1.291  loss_ce_5: 0.4943  loss_mask_5: 0.148  loss_dice_5: 1.269  loss_ce_6: 0.4792  loss_mask_6: 0.1498  loss_dice_6: 1.288  loss_ce_7: 0.4779  loss_mask_7: 0.1487  loss_dice_7: 1.241  loss_ce_8: 0.4711  loss_mask_8: 0.1494  loss_dice_8: 1.253    time: 1.0489  last_time: 1.0281  data_time: 0.0608  last_data_time: 0.0578   lr: 0.0001  max_mem: 32924M
[10/17 15:38:28] d2.utils.events INFO:  eta: 0:01:43  iter: 2899  total_loss: 18.74  loss_ce: 0.4086  loss_mask: 0.1565  loss_dice: 1.175  loss_ce_0: 0.4824  loss_mask_0: 0.1821  loss_dice_0: 1.347  loss_ce_1: 0.5534  loss_mask_1: 0.1688  loss_dice_1: 1.29  loss_ce_2: 0.5218  loss_mask_2: 0.1627  loss_dice_2: 1.275  loss_ce_3: 0.4408  loss_mask_3: 0.1683  loss_dice_3: 1.206  loss_ce_4: 0.4245  loss_mask_4: 0.1618  loss_dice_4: 1.224  loss_ce_5: 0.4345  loss_mask_5: 0.1588  loss_dice_5: 1.167  loss_ce_6: 0.4143  loss_mask_6: 0.1627  loss_dice_6: 1.191  loss_ce_7: 0.4069  loss_mask_7: 0.1615  loss_dice_7: 1.199  loss_ce_8: 0.4082  loss_mask_8: 0.1605  loss_dice_8: 1.195    time: 1.0489  last_time: 1.0594  data_time: 0.0568  last_data_time: 0.0503   lr: 0.0001  max_mem: 32924M
[10/17 15:38:49] d2.utils.events INFO:  eta: 0:01:23  iter: 2919  total_loss: 18.94  loss_ce: 0.4026  loss_mask: 0.1687  loss_dice: 1.202  loss_ce_0: 0.5151  loss_mask_0: 0.189  loss_dice_0: 1.412  loss_ce_1: 0.58  loss_mask_1: 0.18  loss_dice_1: 1.304  loss_ce_2: 0.542  loss_mask_2: 0.1737  loss_dice_2: 1.27  loss_ce_3: 0.4612  loss_mask_3: 0.1705  loss_dice_3: 1.197  loss_ce_4: 0.446  loss_mask_4: 0.1696  loss_dice_4: 1.24  loss_ce_5: 0.4088  loss_mask_5: 0.1671  loss_dice_5: 1.206  loss_ce_6: 0.4335  loss_mask_6: 0.1687  loss_dice_6: 1.221  loss_ce_7: 0.3774  loss_mask_7: 0.1686  loss_dice_7: 1.201  loss_ce_8: 0.4209  loss_mask_8: 0.17  loss_dice_8: 1.211    time: 1.0488  last_time: 0.9865  data_time: 0.0623  last_data_time: 0.0528   lr: 0.0001  max_mem: 32924M
[10/17 15:39:10] d2.utils.events INFO:  eta: 0:01:02  iter: 2939  total_loss: 19.04  loss_ce: 0.4221  loss_mask: 0.168  loss_dice: 1.194  loss_ce_0: 0.5288  loss_mask_0: 0.2034  loss_dice_0: 1.415  loss_ce_1: 0.5828  loss_mask_1: 0.1856  loss_dice_1: 1.351  loss_ce_2: 0.5555  loss_mask_2: 0.1802  loss_dice_2: 1.314  loss_ce_3: 0.4893  loss_mask_3: 0.1768  loss_dice_3: 1.25  loss_ce_4: 0.4711  loss_mask_4: 0.1765  loss_dice_4: 1.259  loss_ce_5: 0.4683  loss_mask_5: 0.1726  loss_dice_5: 1.255  loss_ce_6: 0.444  loss_mask_6: 0.1734  loss_dice_6: 1.254  loss_ce_7: 0.4555  loss_mask_7: 0.1712  loss_dice_7: 1.209  loss_ce_8: 0.4396  loss_mask_8: 0.1698  loss_dice_8: 1.22    time: 1.0487  last_time: 1.0163  data_time: 0.0544  last_data_time: 0.0520   lr: 0.0001  max_mem: 32924M
[10/17 15:39:30] d2.utils.events INFO:  eta: 0:00:41  iter: 2959  total_loss: 17.76  loss_ce: 0.3849  loss_mask: 0.1597  loss_dice: 1.135  loss_ce_0: 0.4875  loss_mask_0: 0.1829  loss_dice_0: 1.297  loss_ce_1: 0.5746  loss_mask_1: 0.1714  loss_dice_1: 1.231  loss_ce_2: 0.4799  loss_mask_2: 0.1625  loss_dice_2: 1.204  loss_ce_3: 0.438  loss_mask_3: 0.1618  loss_dice_3: 1.166  loss_ce_4: 0.4416  loss_mask_4: 0.1596  loss_dice_4: 1.136  loss_ce_5: 0.416  loss_mask_5: 0.1602  loss_dice_5: 1.159  loss_ce_6: 0.3875  loss_mask_6: 0.1605  loss_dice_6: 1.168  loss_ce_7: 0.3877  loss_mask_7: 0.159  loss_dice_7: 1.147  loss_ce_8: 0.3921  loss_mask_8: 0.1585  loss_dice_8: 1.138    time: 1.0486  last_time: 1.0498  data_time: 0.0547  last_data_time: 0.0481   lr: 0.0001  max_mem: 32924M
[10/17 15:39:51] d2.utils.events INFO:  eta: 0:00:20  iter: 2979  total_loss: 18.63  loss_ce: 0.3983  loss_mask: 0.1572  loss_dice: 1.234  loss_ce_0: 0.5105  loss_mask_0: 0.1791  loss_dice_0: 1.394  loss_ce_1: 0.6061  loss_mask_1: 0.1646  loss_dice_1: 1.306  loss_ce_2: 0.5108  loss_mask_2: 0.161  loss_dice_2: 1.239  loss_ce_3: 0.4774  loss_mask_3: 0.1604  loss_dice_3: 1.209  loss_ce_4: 0.4558  loss_mask_4: 0.1553  loss_dice_4: 1.231  loss_ce_5: 0.4329  loss_mask_5: 0.1522  loss_dice_5: 1.215  loss_ce_6: 0.415  loss_mask_6: 0.1554  loss_dice_6: 1.233  loss_ce_7: 0.4035  loss_mask_7: 0.1566  loss_dice_7: 1.237  loss_ce_8: 0.4185  loss_mask_8: 0.1567  loss_dice_8: 1.277    time: 1.0485  last_time: 1.0507  data_time: 0.0579  last_data_time: 0.0857   lr: 0.0001  max_mem: 32924M
[10/17 15:40:12] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_3000_19_a_decoder_attention/model_final.pth
[10/17 15:40:14] d2.utils.events INFO:  eta: 0:00:00  iter: 2999  total_loss: 18.71  loss_ce: 0.379  loss_mask: 0.1634  loss_dice: 1.174  loss_ce_0: 0.5151  loss_mask_0: 0.1856  loss_dice_0: 1.333  loss_ce_1: 0.608  loss_mask_1: 0.1706  loss_dice_1: 1.252  loss_ce_2: 0.5156  loss_mask_2: 0.1702  loss_dice_2: 1.226  loss_ce_3: 0.4601  loss_mask_3: 0.1656  loss_dice_3: 1.165  loss_ce_4: 0.4459  loss_mask_4: 0.166  loss_dice_4: 1.184  loss_ce_5: 0.4438  loss_mask_5: 0.1662  loss_dice_5: 1.169  loss_ce_6: 0.4138  loss_mask_6: 0.1617  loss_dice_6: 1.192  loss_ce_7: 0.4188  loss_mask_7: 0.166  loss_dice_7: 1.158  loss_ce_8: 0.4235  loss_mask_8: 0.164  loss_dice_8: 1.184    time: 1.0484  last_time: 1.0305  data_time: 0.0538  last_data_time: 0.0485   lr: 0.0001  max_mem: 32924M
[10/17 15:40:14] d2.engine.hooks INFO: Overall training speed: 2998 iterations in 0:52:23 (1.0484 s / it)
[10/17 15:40:14] d2.engine.hooks INFO: Total training time: 0:52:35 (0:00:12 on hooks)
[10/17 15:40:14] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/17 15:40:14] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/17 15:40:14] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/17 15:40:14] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/17 15:40:14] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/17 15:40:14] d2.evaluation.evaluator INFO: Start inference on 500 batches
[10/17 15:40:17] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0044 s/iter. Inference: 0.1294 s/iter. Eval: 0.0425 s/iter. Total: 0.1764 s/iter. ETA=0:01:26
[10/17 15:40:22] d2.evaluation.evaluator INFO: Inference done 39/500. Dataloading: 0.0054 s/iter. Inference: 0.1307 s/iter. Eval: 0.0458 s/iter. Total: 0.1820 s/iter. ETA=0:01:23
[10/17 15:40:27] d2.evaluation.evaluator INFO: Inference done 65/500. Dataloading: 0.0057 s/iter. Inference: 0.1317 s/iter. Eval: 0.0504 s/iter. Total: 0.1878 s/iter. ETA=0:01:21
[10/17 15:40:32] d2.evaluation.evaluator INFO: Inference done 90/500. Dataloading: 0.0056 s/iter. Inference: 0.1329 s/iter. Eval: 0.0544 s/iter. Total: 0.1929 s/iter. ETA=0:01:19
[10/17 15:40:37] d2.evaluation.evaluator INFO: Inference done 115/500. Dataloading: 0.0056 s/iter. Inference: 0.1338 s/iter. Eval: 0.0551 s/iter. Total: 0.1945 s/iter. ETA=0:01:14
[10/17 15:40:43] d2.evaluation.evaluator INFO: Inference done 140/500. Dataloading: 0.0056 s/iter. Inference: 0.1355 s/iter. Eval: 0.0554 s/iter. Total: 0.1965 s/iter. ETA=0:01:10
[10/17 15:40:48] d2.evaluation.evaluator INFO: Inference done 166/500. Dataloading: 0.0056 s/iter. Inference: 0.1350 s/iter. Eval: 0.0559 s/iter. Total: 0.1966 s/iter. ETA=0:01:05
[10/17 15:40:53] d2.evaluation.evaluator INFO: Inference done 191/500. Dataloading: 0.0056 s/iter. Inference: 0.1349 s/iter. Eval: 0.0568 s/iter. Total: 0.1973 s/iter. ETA=0:01:00
[10/17 15:40:58] d2.evaluation.evaluator INFO: Inference done 217/500. Dataloading: 0.0055 s/iter. Inference: 0.1347 s/iter. Eval: 0.0569 s/iter. Total: 0.1971 s/iter. ETA=0:00:55
[10/17 15:41:03] d2.evaluation.evaluator INFO: Inference done 242/500. Dataloading: 0.0057 s/iter. Inference: 0.1346 s/iter. Eval: 0.0576 s/iter. Total: 0.1980 s/iter. ETA=0:00:51
[10/17 15:41:08] d2.evaluation.evaluator INFO: Inference done 267/500. Dataloading: 0.0057 s/iter. Inference: 0.1349 s/iter. Eval: 0.0580 s/iter. Total: 0.1986 s/iter. ETA=0:00:46
[10/17 15:41:13] d2.evaluation.evaluator INFO: Inference done 292/500. Dataloading: 0.0056 s/iter. Inference: 0.1347 s/iter. Eval: 0.0585 s/iter. Total: 0.1989 s/iter. ETA=0:00:41
[10/17 15:41:18] d2.evaluation.evaluator INFO: Inference done 317/500. Dataloading: 0.0056 s/iter. Inference: 0.1345 s/iter. Eval: 0.0589 s/iter. Total: 0.1990 s/iter. ETA=0:00:36
[10/17 15:41:23] d2.evaluation.evaluator INFO: Inference done 342/500. Dataloading: 0.0056 s/iter. Inference: 0.1348 s/iter. Eval: 0.0592 s/iter. Total: 0.1996 s/iter. ETA=0:00:31
[10/17 15:41:28] d2.evaluation.evaluator INFO: Inference done 367/500. Dataloading: 0.0056 s/iter. Inference: 0.1347 s/iter. Eval: 0.0595 s/iter. Total: 0.1999 s/iter. ETA=0:00:26
[10/17 15:41:33] d2.evaluation.evaluator INFO: Inference done 392/500. Dataloading: 0.0056 s/iter. Inference: 0.1347 s/iter. Eval: 0.0598 s/iter. Total: 0.2001 s/iter. ETA=0:00:21
[10/17 15:41:39] d2.evaluation.evaluator INFO: Inference done 417/500. Dataloading: 0.0056 s/iter. Inference: 0.1347 s/iter. Eval: 0.0601 s/iter. Total: 0.2005 s/iter. ETA=0:00:16
[10/17 15:41:44] d2.evaluation.evaluator INFO: Inference done 442/500. Dataloading: 0.0056 s/iter. Inference: 0.1347 s/iter. Eval: 0.0604 s/iter. Total: 0.2006 s/iter. ETA=0:00:11
[10/17 15:41:49] d2.evaluation.evaluator INFO: Inference done 467/500. Dataloading: 0.0056 s/iter. Inference: 0.1348 s/iter. Eval: 0.0605 s/iter. Total: 0.2009 s/iter. ETA=0:00:06
[10/17 15:41:54] d2.evaluation.evaluator INFO: Inference done 492/500. Dataloading: 0.0055 s/iter. Inference: 0.1348 s/iter. Eval: 0.0607 s/iter. Total: 0.2010 s/iter. ETA=0:00:01
[10/17 15:41:56] d2.evaluation.evaluator INFO: Total inference time: 0:01:39.572694 (0.201157 s / iter per device, on 1 devices)
[10/17 15:41:56] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:06 (0.134690 s / iter per device, on 1 devices)
[10/17 15:41:56] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalfab2eujd ...
[10/17 15:42:18] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.375 | 79.951 | 70.542 |      19       |
| Things | 49.732 | 79.470 | 62.470 |       8       |
| Stuff  | 62.933 | 80.301 | 76.414 |      11       |
[10/17 15:42:18] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.409 | 96.910 | 99.483 |     Stuff     |
| class_8  | 73.236 | 82.867 | 88.377 |     Stuff     |
| class_11 | 87.165 | 88.793 | 98.167 |     Stuff     |
| class_12 | 42.909 | 76.897 | 55.801 |     Stuff     |
| class_13 | 34.685 | 76.636 | 45.260 |     Stuff     |
| class_17 | 37.043 | 62.374 | 59.388 |     Stuff     |
| class_19 | 45.981 | 67.462 | 68.158 |     Stuff     |
| class_20 | 64.431 | 76.124 | 84.640 |     Stuff     |
| class_21 | 88.217 | 89.504 | 98.563 |     Stuff     |
| class_22 | 35.005 | 74.923 | 46.721 |     Stuff     |
| class_23 | 87.184 | 90.825 | 95.991 |     Stuff     |
| class_24 | 50.381 | 74.448 | 67.672 |    Things     |
| class_25 | 46.970 | 72.011 | 65.226 |    Things     |
| class_26 | 64.319 | 81.714 | 78.712 |    Things     |
| class_27 | 50.349 | 88.378 | 56.970 |    Things     |
| class_28 | 64.397 | 89.082 | 72.289 |    Things     |
| class_31 | 44.395 | 86.570 | 51.282 |    Things     |
| class_32 | 35.047 | 73.365 | 47.771 |    Things     |
| class_33 | 41.999 | 70.192 | 59.835 |    Things     |
[10/17 15:42:18] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[10/17 15:42:18] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/17 15:42:18] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/17 15:42:18] d2.evaluation.testing INFO: copypaste: 57.3748,79.9514,70.5424,49.7320,79.4701,62.4696,62.9332,80.3013,76.4136,96.4088,96.9099,99.4829,73.2358,82.8673,88.3772,87.1652,88.7928,98.1670,42.9092,76.8967,55.8011,34.6853,76.6357,45.2599,37.0427,62.3743,59.3878,45.9809,67.4619,68.1583,64.4312,76.1237,84.6402,88.2175,89.5040,98.5626,35.0051,74.9231,46.7213,87.1841,90.8254,95.9908,50.3807,74.4480,67.6723,46.9703,72.0112,65.2263,64.3187,81.7142,78.7117,50.3486,88.3778,56.9697,64.3967,89.0821,72.2892,44.3951,86.5704,51.2821,35.0469,73.3649,47.7707,41.9993,70.1924,59.8346
