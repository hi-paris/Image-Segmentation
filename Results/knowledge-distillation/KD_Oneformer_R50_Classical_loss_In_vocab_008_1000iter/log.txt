[07/23 09:27:08] detectron2 INFO: Rank of current process: 0. World size: 2
[07/23 09:27:09] detectron2 INFO: Environment info:
-------------------------------  ---------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.10.12 (main, Mar 22 2024, 16:50:05) [GCC 11.4.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/FC/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.2
detectron2 arch flags            8.0
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.2.1+cu121 @/home/ids/gbrison/FC/venv/lib/python3.10/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           10.2.0
torchvision                      0.17.1+cu121 @/home/ids/gbrison/FC/venv/lib/python3.10/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.9.0
-------------------------------  ---------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.2 (Git Hash 2dc95a2ad0841e29db8b22fbccaf3e5da7992b01)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.9.2
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=8.9.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.2.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[07/23 09:27:09] detectron2 INFO: Command line arguments: Namespace(config_file='/home/ids/gbrison/FC/fc-clip/configs/coco/panoptic-segmentation/fcclip/r50_KD.yaml', resume=False, eval_only=False, num_gpus=2, num_machines=1, machine_rank=0, dist_url='tcp://127.0.0.1:54928', opts=[])
[07/23 09:27:09] detectron2 INFO: Contents of args.config_file=/home/ids/gbrison/FC/fc-clip/configs/coco/panoptic-segmentation/fcclip/r50_KD.yaml:
[38;5;204m_BASE_[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m./fcclip_convnext_large_eval_ade20k_r50.yaml[39m

[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2560[39m

[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m19[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ids/gbrison/FC/fc-clip/fcclip_cocopan_r50.pth[39m
[38;5;15m  [39m[38;5;204mWEIGHTS_Teacher [39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/tsi/hi-paris/models/oneformer/mapillary_pretrain_250_16_convnext_l_oneformer_cityscapes_90k.pth[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/tsi/hi-paris/FCCLIP_results/All_results/KD_results/KD_Oneformer_R50_Classical_loss_In_vocab_008_1000iter[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("openvocab_cityscapes_fine_panoptic_train",)[39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m("openvocab_cityscapes_fine_panoptic_val",)[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m

[07/23 09:27:09] detectron2 INFO: Running with full config:
[38;5;204mCUDNN_BENCHMARK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;204mDATALOADER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mASPECT_RATIO_GROUPING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mFILTER_EMPTY_ANNOTATIONS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mNUM_WORKERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m  [39m[38;5;204mREPEAT_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSAMPLER_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mTrainingSampler[39m
[38;5;204mDATASETS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mPRECOMPUTED_PROPOSAL_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPROPOSAL_FILES_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mopenvocab_cityscapes_fine_panoptic_val[39m
[38;5;15m  [39m[38;5;204mTRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mopenvocab_cityscapes_fine_panoptic_train[39m
[38;5;204mGLOBAL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mHACK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;204mINPUT[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mCOLOR_AUG_SSD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mCROP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mMINIMUM_INST_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSINGLE_CATEGORY_MAX_AREA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mSIZE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m    [39m[38;5;204mTYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mrelative_range[39m
[38;5;15m  [39m[38;5;204mDATASET_MAPPER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcoco_panoptic_lsj[39m
[38;5;15m  [39m[38;5;204mFORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRGB[39m
[38;5;15m  [39m[38;5;204mIMAGE_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMASK_FORMAT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mpolygon[39m
[38;5;15m  [39m[38;5;204mMAX_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2560[39m
[38;5;15m  [39m[38;5;204mMAX_SIZE_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1333[39m
[38;5;15m  [39m[38;5;204mMIN_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m  [39m[38;5;204mMIN_SIZE_TRAIN_SAMPLING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mchoice[39m
[38;5;15m  [39m[38;5;204mRANDOM_FLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhorizontal[39m
[38;5;15m  [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mMODEL[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mANCHOR_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mANGLES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-90[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m90[39m
[38;5;15m    [39m[38;5;204mASPECT_RATIOS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mDefaultAnchorGenerator[39m
[38;5;15m    [39m[38;5;204mOFFSET[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mSIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m128[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m  [39m[38;5;204mBACKBONE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFREEZE_AT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mCLIP[39m
[38;5;15m  [39m[38;5;204mDEVICE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mcuda[39m
[38;5;15m  [39m[38;5;204mFC_CLIP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_MODEL_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRN50[39m
[38;5;15m    [39m[38;5;204mCLIP_PRETRAINED_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mopenai[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mENSEMBLE_ON_VALID_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mGEOMETRIC_ENSEMBLE_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;204mGEOMETRIC_ENSEMBLE_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m  [39m[38;5;204mFPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mFUSE_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msum[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mOUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m  [39m[38;5;204mKEYPOINT_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mLOAD_PROPOSALS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMASK_FORMER[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLASS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mDEC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m    [39m[38;5;204mDEEP_SUPERVISION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mDICE_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mDIM_FEEDFORWARD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2048[39m
[38;5;15m    [39m[38;5;204mDROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mENFORCE_INPUT_PROJ[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mHIDDEN_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mIMPORTANCE_SAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.75[39m
[38;5;15m    [39m[38;5;204mMASK_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;204mNHEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mNO_OBJECT_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mNUM_OBJECT_QUERIES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m250[39m
[38;5;15m    [39m[38;5;204mOVERSAMPLE_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3.0[39m
[38;5;15m    [39m[38;5;204mPRE_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mSIZE_DIVISIBILITY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m32[39m
[38;5;15m    [39m[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mINSTANCE_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mOBJECT_MASK_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESHOLD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.8[39m
[38;5;15m      [39m[38;5;204mPANOPTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mSEMANTIC_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mSEM_SEG_POSTPROCESSING_BEFORE_INFERENCE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mTRAIN_NUM_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12544[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMultiScaleMaskedTransformerDecoder[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_IN_FEATURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mmulti_scale_pixel_decoder[39m
[38;5;15m  [39m[38;5;204mMASK_ON[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mMETA_ARCHITECTURE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFCCLIP[39m
[38;5;15m  [39m[38;5;204mPANOPTIC_FPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCOMBINE[39m[38;5;15m:[39m
[38;5;15m      [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m      [39m[38;5;204mINSTANCES_CONFIDENCE_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mOVERLAP_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m      [39m[38;5;204mSTUFF_AREA_LIMIT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4096[39m
[38;5;15m    [39m[38;5;204mINSTANCE_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mPIXEL_MEAN[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m122.7709383[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m116.7460125[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m104.09373615[39m
[38;5;15m  [39m[38;5;204mPIXEL_STD[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m68.5005327[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m66.6321579[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m70.32316305[39m
[38;5;15m  [39m[38;5;204mPROPOSAL_GENERATOR[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mMIN_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRPN[39m
[38;5;15m  [39m[38;5;204mRESNETS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mDEFORM_MODULATED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEFORM_NUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mDEFORM_ON_PER_STAGE[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mDEPTH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFrozenBN[39m
[38;5;15m    [39m[38;5;204mNUM_GROUPS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mRES2_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mRES4_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_DILATION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mRES5_MULTI_GRID[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mSTEM_OUT_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m    [39m[38;5;204mSTEM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mbasic[39m
[38;5;15m    [39m[38;5;204mSTRIDE_IN_1X1[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWIDTH_PER_GROUP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m64[39m
[38;5;15m  [39m[38;5;204mRETINANET[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m&id002[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_ALPHA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mFOCAL_LOSS_GAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mp7[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mNUM_CONVS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRIOR_PROB[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_LOSS_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mTOPK_CANDIDATES_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mROI_BOX_CASCADE_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m&id001[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m5.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m20.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m10.0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m30.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m      [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m15.0[39m
[38;5;15m    [39m[38;5;204mIOUS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m  [39m[38;5;204mROI_BOX_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id001[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_BBOX_REG[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mFC_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1024[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_FREQ_WEIGHT_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mFED_LOSS_NUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m50[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mNUM_FC[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mTRAIN_ON_PRED_BOXES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_FED_LOSS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mUSE_SIGMOID_CE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mROI_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mRes5ROIHeads[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m80[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.25[39m
[38;5;15m    [39m[38;5;204mPROPOSAL_APPEND_GT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mSCORE_THRESH_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mROI_KEYPOINT_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m512[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMIN_KEYPOINTS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mKRCNNConvDeconvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNUM_KEYPOINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m17[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mROI_MASK_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLS_AGNOSTIC_MASK[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mCONV_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMaskRCNNConvUpsampleHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;186m'[39m[38;5;186m'[39m
[38;5;15m    [39m[38;5;204mNUM_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_RESOLUTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m14[39m
[38;5;15m    [39m[38;5;204mPOOLER_SAMPLING_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;204mPOOLER_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mROIAlignV2[39m
[38;5;15m  [39m[38;5;204mRPN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mBATCH_SIZE_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141msmooth_l1[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_LOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mBBOX_REG_WEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m*id002[39m
[38;5;15m    [39m[38;5;204mBOUNDARY_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mCONV_DIMS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;204mHEAD_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mStandardRPNHead[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;204mIOU_LABELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1[39m
[38;5;15m    [39m[38;5;204mIOU_THRESHOLDS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mNMS_THRESH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.7[39m
[38;5;15m    [39m[38;5;204mPOSITIVE_FRACTION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.5[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;204mPOST_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TEST[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6000[39m
[38;5;15m    [39m[38;5;204mPRE_NMS_TOPK_TRAIN[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m12000[39m
[38;5;15m    [39m[38;5;204mSMOOTH_L1_BETA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mSEM_SEG_HEAD[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mASPP_CHANNELS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mASPP_DILATIONS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m18[39m
[38;5;15m    [39m[38;5;204mASPP_DROPOUT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m    [39m[38;5;204mCOMMON_STRIDE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mCONVS_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mDEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mDEFORMABLE_TRANSFORMER_ENCODER_N_HEADS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m    [39m[38;5;204mDEFORMABLE_TRANSFORMER_ENCODER_N_POINTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mIGNORE_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m255[39m
[38;5;15m    [39m[38;5;204mIN_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mLOSS_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mhard_pixel_mining[39m
[38;5;15m    [39m[38;5;204mLOSS_WEIGHT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m    [39m[38;5;204mMASK_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m256[39m
[38;5;15m    [39m[38;5;204mNAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mFCCLIPHead[39m
[38;5;15m    [39m[38;5;204mNORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mGN[39m
[38;5;15m    [39m[38;5;204mNUM_CLASSES[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m19[39m
[38;5;15m    [39m[38;5;204mPIXEL_DECODER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mMSDeformAttnPixelDecoder[39m
[38;5;15m    [39m[38;5;204mPROJECT_CHANNELS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m48[39m
[38;5;15m    [39m[38;5;204mPROJECT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;204mTRANSFORMER_ENC_LAYERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;204mUSE_DEPTHWISE_SEPARABLE_CONV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSWIN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mAPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mATTN_DROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mDEPTHS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;15m    [39m[38;5;204mDROP_PATH_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.3[39m
[38;5;15m    [39m[38;5;204mDROP_RATE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m    [39m[38;5;204mEMBED_DIM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m96[39m
[38;5;15m    [39m[38;5;204mMLP_RATIO[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4.0[39m
[38;5;15m    [39m[38;5;204mNUM_HEADS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m6[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m12[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m24[39m
[38;5;15m    [39m[38;5;204mOUT_FEATURES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres2[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres3[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres4[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141mres5[39m
[38;5;15m    [39m[38;5;204mPATCH_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mPATCH_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4[39m
[38;5;15m    [39m[38;5;204mPRETRAIN_IMG_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m224[39m
[38;5;15m    [39m[38;5;204mQKV_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mQK_SCALE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m    [39m[38;5;204mUSE_CHECKPOINT[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mWINDOW_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m7[39m
[38;5;15m  [39m[38;5;204mWEIGHTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/home/ids/gbrison/FC/fc-clip/fcclip_cocopan_r50.pth[39m
[38;5;15m  [39m[38;5;204mWEIGHTS_Teacher[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/tsi/hi-paris/models/oneformer/mapillary_pretrain_250_16_convnext_l_oneformer_cityscapes_90k.pth[39m
[38;5;204mOUTPUT_DIR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m/tsi/hi-paris/FCCLIP_results/All_results/KD_results/KD_Oneformer_R50_Classical_loss_In_vocab_008_1000iter[39m
[38;5;204mSEED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m-1[39m
[38;5;204mSOLVER[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAMP[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m  [39m[38;5;204mBACKBONE_MULTIPLIER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mBASE_LR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0001[39m
[38;5;15m  [39m[38;5;204mBASE_LR_END[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mBIAS_LR_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mCHECKPOINT_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m5000[39m
[38;5;15m  [39m[38;5;204mCLIP_GRADIENTS[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mCLIP_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfull_model[39m
[38;5;15m    [39m[38;5;204mCLIP_VALUE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.01[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mNORM_TYPE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2.0[39m
[38;5;15m  [39m[38;5;204mGAMMA[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.1[39m
[38;5;15m  [39m[38;5;204mIMS_PER_BATCH[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m8[39m
[38;5;15m  [39m[38;5;204mLR_SCHEDULER_NAME[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mWarmupMultiStepLR[39m
[38;5;15m  [39m[38;5;204mMAX_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mMOMENTUM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mNESTEROV[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mNUM_DECAYS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m3[39m
[38;5;15m  [39m[38;5;204mOPTIMIZER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mADAMW[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_CONSTANT_ENDING[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mPOLY_LR_POWER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.9[39m
[38;5;15m  [39m[38;5;204mREFERENCE_WORLD_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m
[38;5;15m  [39m[38;5;204mRESCALE_INTERVAL[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m  [39m[38;5;204mSTEPS[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m327778[39m
[38;5;15m  [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m355092[39m
[38;5;15m  [39m[38;5;204mWARMUP_FACTOR[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1.0[39m
[38;5;15m  [39m[38;5;204mWARMUP_ITERS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m10[39m
[38;5;15m  [39m[38;5;204mWARMUP_METHOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mlinear[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.05[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_BIAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mnull[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_EMBED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;15m  [39m[38;5;204mWEIGHT_DECAY_NORM[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0.0[39m
[38;5;204mTEST[39m[38;5;15m:[39m
[38;5;15m  [39m[38;5;204mAUG[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mFLIP[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mtrue[39m
[38;5;15m    [39m[38;5;204mMAX_SIZE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m4000[39m
[38;5;15m    [39m[38;5;204mMIN_SIZES[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m400[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m500[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m600[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m700[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m800[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m900[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1100[39m
[38;5;15m    [39m[38;5;15m-[39m[38;5;15m [39m[38;5;141m1200[39m
[38;5;15m  [39m[38;5;204mDETECTIONS_PER_IMAGE[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m100[39m
[38;5;15m  [39m[38;5;204mEVAL_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m1000[39m
[38;5;15m  [39m[38;5;204mEXPECTED_RESULTS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mKEYPOINT_OKS_SIGMAS[39m[38;5;15m:[39m[38;5;15m [39m[38;5;15m[[39m[38;5;15m][39m
[38;5;15m  [39m[38;5;204mPRECISE_BN[39m[38;5;15m:[39m
[38;5;15m    [39m[38;5;204mENABLED[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141mfalse[39m
[38;5;15m    [39m[38;5;204mNUM_ITER[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m200[39m
[38;5;204mVERSION[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m2[39m
[38;5;204mVIS_PERIOD[39m[38;5;15m:[39m[38;5;15m [39m[38;5;141m0[39m

[07/23 09:27:09] detectron2 INFO: Full config saved to /tsi/hi-paris/FCCLIP_results/All_results/KD_results/KD_Oneformer_R50_Classical_loss_In_vocab_008_1000iter/config.yaml
[07/23 09:27:09] d2.utils.env INFO: Using a generated random seed 13856760
[07/23 09:27:21] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[07/23 09:27:21] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[07/23 09:27:21] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[07/23 09:27:21] d2.data.build INFO: Using training sampler TrainingSampler
[07/23 09:27:21] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[07/23 09:27:21] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[07/23 09:27:21] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[07/23 09:27:21] d2.data.build INFO: Making batched data loader with batch_size=4
[07/23 09:27:21] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[07/23 09:27:32] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[07/23 09:27:32] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/FC/fc-clip/fcclip_cocopan_r50.pth ...
[07/23 09:27:32] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/FC/fc-clip/fcclip_cocopan_r50.pth ...
[07/23 09:27:33] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[07/23 09:27:33] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[07/23 09:27:33] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/FC/fc-clip/fcclip_cocopan_r50.pth ...
[07/23 09:27:33] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/FC/fc-clip/fcclip_cocopan_r50.pth ...
[07/23 09:27:33] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[07/23 09:27:33] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[07/23 09:28:00] d2.utils.events INFO:  eta: 0:18:29  iter: 19  total_loss: 64.95  loss_ce: 3.246  loss_mask: 0.2723  loss_dice: 1.473  loss_ce_0: 1.775  loss_mask_0: 0.302  loss_dice_0: 1.78  loss_ce_1: 1.739  loss_mask_1: 0.2948  loss_dice_1: 1.638  loss_ce_2: 1.788  loss_mask_2: 0.2832  loss_dice_2: 1.597  loss_ce_3: 1.554  loss_mask_3: 0.2783  loss_dice_3: 1.524  loss_ce_4: 1.525  loss_mask_4: 0.281  loss_dice_4: 1.514  loss_ce_5: 1.51  loss_mask_5: 0.286  loss_dice_5: 1.529  loss_ce_6: 1.584  loss_mask_6: 0.2738  loss_dice_6: 1.494  loss_ce_7: 2.117  loss_mask_7: 0.2789  loss_dice_7: 1.486  loss_ce_8: 2.542  loss_mask_8: 0.2818  loss_dice_8: 1.491  distillation_loss: 26.7    time: 1.1383  last_time: 1.1490  data_time: 0.1604  last_data_time: 0.0185   lr: 0.0001  max_mem: 20311M
[07/23 09:28:23] d2.utils.events INFO:  eta: 0:18:04  iter: 39  total_loss: 35.89  loss_ce: 1.986  loss_mask: 0.2068  loss_dice: 1.487  loss_ce_0: 1.166  loss_mask_0: 0.2524  loss_dice_0: 1.74  loss_ce_1: 1.1  loss_mask_1: 0.2299  loss_dice_1: 1.621  loss_ce_2: 1.03  loss_mask_2: 0.2294  loss_dice_2: 1.532  loss_ce_3: 0.9806  loss_mask_3: 0.2195  loss_dice_3: 1.49  loss_ce_4: 0.9674  loss_mask_4: 0.2165  loss_dice_4: 1.506  loss_ce_5: 0.9107  loss_mask_5: 0.2175  loss_dice_5: 1.486  loss_ce_6: 0.9283  loss_mask_6: 0.2108  loss_dice_6: 1.469  loss_ce_7: 0.9607  loss_mask_7: 0.2105  loss_dice_7: 1.463  loss_ce_8: 0.9675  loss_mask_8: 0.215  loss_dice_8: 1.461  distillation_loss: 6.444    time: 1.1345  last_time: 1.1008  data_time: 0.0236  last_data_time: 0.0176   lr: 0.0001  max_mem: 20425M
[07/23 09:28:45] d2.utils.events INFO:  eta: 0:17:39  iter: 59  total_loss: 30.6  loss_ce: 1.251  loss_mask: 0.231  loss_dice: 1.346  loss_ce_0: 0.8589  loss_mask_0: 0.2603  loss_dice_0: 1.63  loss_ce_1: 0.9187  loss_mask_1: 0.2476  loss_dice_1: 1.458  loss_ce_2: 0.8342  loss_mask_2: 0.2377  loss_dice_2: 1.424  loss_ce_3: 0.7838  loss_mask_3: 0.2375  loss_dice_3: 1.391  loss_ce_4: 0.759  loss_mask_4: 0.2362  loss_dice_4: 1.419  loss_ce_5: 0.7604  loss_mask_5: 0.2334  loss_dice_5: 1.366  loss_ce_6: 0.7781  loss_mask_6: 0.2297  loss_dice_6: 1.336  loss_ce_7: 0.7978  loss_mask_7: 0.2362  loss_dice_7: 1.315  loss_ce_8: 0.7906  loss_mask_8: 0.2365  loss_dice_8: 1.376  distillation_loss: 4.972    time: 1.1297  last_time: 1.1160  data_time: 0.0191  last_data_time: 0.0225   lr: 0.0001  max_mem: 20425M
[07/23 09:29:08] d2.utils.events INFO:  eta: 0:17:16  iter: 79  total_loss: 28.45  loss_ce: 1.058  loss_mask: 0.1993  loss_dice: 1.348  loss_ce_0: 0.8355  loss_mask_0: 0.2432  loss_dice_0: 1.526  loss_ce_1: 0.8945  loss_mask_1: 0.2258  loss_dice_1: 1.456  loss_ce_2: 0.8357  loss_mask_2: 0.2083  loss_dice_2: 1.411  loss_ce_3: 0.787  loss_mask_3: 0.2075  loss_dice_3: 1.348  loss_ce_4: 0.7564  loss_mask_4: 0.2047  loss_dice_4: 1.341  loss_ce_5: 0.7043  loss_mask_5: 0.2072  loss_dice_5: 1.328  loss_ce_6: 0.736  loss_mask_6: 0.2044  loss_dice_6: 1.338  loss_ce_7: 0.7137  loss_mask_7: 0.205  loss_dice_7: 1.325  loss_ce_8: 0.7372  loss_mask_8: 0.2028  loss_dice_8: 1.32  distillation_loss: 4.624    time: 1.1291  last_time: 1.1249  data_time: 0.0204  last_data_time: 0.0239   lr: 0.0001  max_mem: 20425M
[07/23 09:29:30] d2.utils.events INFO:  eta: 0:16:53  iter: 99  total_loss: 28.87  loss_ce: 0.9998  loss_mask: 0.1992  loss_dice: 1.379  loss_ce_0: 0.7651  loss_mask_0: 0.2266  loss_dice_0: 1.626  loss_ce_1: 0.8874  loss_mask_1: 0.2092  loss_dice_1: 1.492  loss_ce_2: 0.8249  loss_mask_2: 0.2035  loss_dice_2: 1.469  loss_ce_3: 0.7449  loss_mask_3: 0.1985  loss_dice_3: 1.397  loss_ce_4: 0.7225  loss_mask_4: 0.2014  loss_dice_4: 1.403  loss_ce_5: 0.7188  loss_mask_5: 0.1993  loss_dice_5: 1.403  loss_ce_6: 0.7317  loss_mask_6: 0.1984  loss_dice_6: 1.367  loss_ce_7: 0.7131  loss_mask_7: 0.1998  loss_dice_7: 1.372  loss_ce_8: 0.7293  loss_mask_8: 0.2016  loss_dice_8: 1.392  distillation_loss: 4.54    time: 1.1296  last_time: 1.1232  data_time: 0.0210  last_data_time: 0.0175   lr: 0.0001  max_mem: 20688M
[07/23 09:29:53] d2.utils.events INFO:  eta: 0:16:31  iter: 119  total_loss: 27.37  loss_ce: 0.927  loss_mask: 0.2009  loss_dice: 1.326  loss_ce_0: 0.7226  loss_mask_0: 0.2392  loss_dice_0: 1.558  loss_ce_1: 0.8247  loss_mask_1: 0.2196  loss_dice_1: 1.488  loss_ce_2: 0.7681  loss_mask_2: 0.2083  loss_dice_2: 1.403  loss_ce_3: 0.6878  loss_mask_3: 0.2089  loss_dice_3: 1.355  loss_ce_4: 0.6847  loss_mask_4: 0.2051  loss_dice_4: 1.323  loss_ce_5: 0.6433  loss_mask_5: 0.2046  loss_dice_5: 1.312  loss_ce_6: 0.6582  loss_mask_6: 0.2055  loss_dice_6: 1.309  loss_ce_7: 0.6334  loss_mask_7: 0.2069  loss_dice_7: 1.326  loss_ce_8: 0.6496  loss_mask_8: 0.2027  loss_dice_8: 1.31  distillation_loss: 4.308    time: 1.1296  last_time: 1.1222  data_time: 0.0204  last_data_time: 0.0191   lr: 0.0001  max_mem: 20887M
[07/23 09:30:16] d2.utils.events INFO:  eta: 0:16:09  iter: 139  total_loss: 27.91  loss_ce: 0.9014  loss_mask: 0.1922  loss_dice: 1.331  loss_ce_0: 0.7602  loss_mask_0: 0.2261  loss_dice_0: 1.606  loss_ce_1: 0.863  loss_mask_1: 0.2084  loss_dice_1: 1.486  loss_ce_2: 0.7636  loss_mask_2: 0.1939  loss_dice_2: 1.428  loss_ce_3: 0.7154  loss_mask_3: 0.1956  loss_dice_3: 1.372  loss_ce_4: 0.7023  loss_mask_4: 0.1969  loss_dice_4: 1.387  loss_ce_5: 0.6803  loss_mask_5: 0.1961  loss_dice_5: 1.352  loss_ce_6: 0.6436  loss_mask_6: 0.194  loss_dice_6: 1.352  loss_ce_7: 0.6596  loss_mask_7: 0.195  loss_dice_7: 1.364  loss_ce_8: 0.6562  loss_mask_8: 0.1948  loss_dice_8: 1.338  distillation_loss: 4.264    time: 1.1306  last_time: 1.1248  data_time: 0.0199  last_data_time: 0.0227   lr: 0.0001  max_mem: 21240M
[07/23 09:30:39] d2.utils.events INFO:  eta: 0:15:47  iter: 159  total_loss: 27.63  loss_ce: 0.8259  loss_mask: 0.2025  loss_dice: 1.353  loss_ce_0: 0.7203  loss_mask_0: 0.2323  loss_dice_0: 1.617  loss_ce_1: 0.8053  loss_mask_1: 0.2136  loss_dice_1: 1.503  loss_ce_2: 0.7482  loss_mask_2: 0.2056  loss_dice_2: 1.424  loss_ce_3: 0.6962  loss_mask_3: 0.2024  loss_dice_3: 1.377  loss_ce_4: 0.6878  loss_mask_4: 0.2059  loss_dice_4: 1.385  loss_ce_5: 0.6483  loss_mask_5: 0.2039  loss_dice_5: 1.391  loss_ce_6: 0.6496  loss_mask_6: 0.2018  loss_dice_6: 1.357  loss_ce_7: 0.6348  loss_mask_7: 0.2044  loss_dice_7: 1.341  loss_ce_8: 0.6532  loss_mask_8: 0.2043  loss_dice_8: 1.368  distillation_loss: 4.169    time: 1.1306  last_time: 1.1356  data_time: 0.0204  last_data_time: 0.0189   lr: 0.0001  max_mem: 21240M
[07/23 09:31:01] d2.utils.events INFO:  eta: 0:15:25  iter: 179  total_loss: 27.16  loss_ce: 0.8765  loss_mask: 0.1884  loss_dice: 1.248  loss_ce_0: 0.6892  loss_mask_0: 0.2235  loss_dice_0: 1.546  loss_ce_1: 0.8098  loss_mask_1: 0.2033  loss_dice_1: 1.413  loss_ce_2: 0.743  loss_mask_2: 0.1914  loss_dice_2: 1.336  loss_ce_3: 0.7033  loss_mask_3: 0.1908  loss_dice_3: 1.29  loss_ce_4: 0.6627  loss_mask_4: 0.1926  loss_dice_4: 1.282  loss_ce_5: 0.6217  loss_mask_5: 0.1854  loss_dice_5: 1.281  loss_ce_6: 0.6544  loss_mask_6: 0.1866  loss_dice_6: 1.253  loss_ce_7: 0.6317  loss_mask_7: 0.1858  loss_dice_7: 1.248  loss_ce_8: 0.6428  loss_mask_8: 0.1828  loss_dice_8: 1.286  distillation_loss: 4.4    time: 1.1309  last_time: 1.1126  data_time: 0.0213  last_data_time: 0.0226   lr: 0.0001  max_mem: 21240M
[07/23 09:31:24] d2.utils.events INFO:  eta: 0:15:03  iter: 199  total_loss: 27.57  loss_ce: 0.8268  loss_mask: 0.1935  loss_dice: 1.4  loss_ce_0: 0.6969  loss_mask_0: 0.224  loss_dice_0: 1.633  loss_ce_1: 0.8029  loss_mask_1: 0.2121  loss_dice_1: 1.554  loss_ce_2: 0.7701  loss_mask_2: 0.1987  loss_dice_2: 1.509  loss_ce_3: 0.683  loss_mask_3: 0.2006  loss_dice_3: 1.419  loss_ce_4: 0.6565  loss_mask_4: 0.2003  loss_dice_4: 1.421  loss_ce_5: 0.6377  loss_mask_5: 0.1972  loss_dice_5: 1.412  loss_ce_6: 0.633  loss_mask_6: 0.1962  loss_dice_6: 1.362  loss_ce_7: 0.6059  loss_mask_7: 0.2013  loss_dice_7: 1.36  loss_ce_8: 0.6526  loss_mask_8: 0.2021  loss_dice_8: 1.395  distillation_loss: 4.146    time: 1.1316  last_time: 1.1310  data_time: 0.0206  last_data_time: 0.0225   lr: 0.0001  max_mem: 21414M
[07/23 09:31:47] d2.utils.events INFO:  eta: 0:14:40  iter: 219  total_loss: 27.17  loss_ce: 0.8687  loss_mask: 0.1934  loss_dice: 1.312  loss_ce_0: 0.6572  loss_mask_0: 0.2247  loss_dice_0: 1.593  loss_ce_1: 0.7957  loss_mask_1: 0.2086  loss_dice_1: 1.491  loss_ce_2: 0.7567  loss_mask_2: 0.1993  loss_dice_2: 1.418  loss_ce_3: 0.6922  loss_mask_3: 0.2025  loss_dice_3: 1.339  loss_ce_4: 0.6345  loss_mask_4: 0.1948  loss_dice_4: 1.336  loss_ce_5: 0.6478  loss_mask_5: 0.1978  loss_dice_5: 1.369  loss_ce_6: 0.6303  loss_mask_6: 0.2016  loss_dice_6: 1.32  loss_ce_7: 0.6339  loss_mask_7: 0.198  loss_dice_7: 1.319  loss_ce_8: 0.6292  loss_mask_8: 0.1969  loss_dice_8: 1.315  distillation_loss: 3.977    time: 1.1324  last_time: 1.1246  data_time: 0.0225  last_data_time: 0.0204   lr: 0.0001  max_mem: 21414M
[07/23 09:32:10] d2.utils.events INFO:  eta: 0:14:18  iter: 239  total_loss: 25.06  loss_ce: 0.769  loss_mask: 0.1775  loss_dice: 1.185  loss_ce_0: 0.6376  loss_mask_0: 0.2075  loss_dice_0: 1.43  loss_ce_1: 0.717  loss_mask_1: 0.1891  loss_dice_1: 1.323  loss_ce_2: 0.6703  loss_mask_2: 0.1855  loss_dice_2: 1.253  loss_ce_3: 0.617  loss_mask_3: 0.1839  loss_dice_3: 1.236  loss_ce_4: 0.5767  loss_mask_4: 0.1869  loss_dice_4: 1.22  loss_ce_5: 0.5693  loss_mask_5: 0.1837  loss_dice_5: 1.196  loss_ce_6: 0.6022  loss_mask_6: 0.1822  loss_dice_6: 1.211  loss_ce_7: 0.5641  loss_mask_7: 0.1801  loss_dice_7: 1.207  loss_ce_8: 0.5963  loss_mask_8: 0.1804  loss_dice_8: 1.189  distillation_loss: 4.013    time: 1.1321  last_time: 1.1637  data_time: 0.0208  last_data_time: 0.0213   lr: 0.0001  max_mem: 21414M
[07/23 09:32:32] d2.utils.events INFO:  eta: 0:13:55  iter: 259  total_loss: 26  loss_ce: 0.7601  loss_mask: 0.1913  loss_dice: 1.259  loss_ce_0: 0.6402  loss_mask_0: 0.2199  loss_dice_0: 1.585  loss_ce_1: 0.6896  loss_mask_1: 0.2093  loss_dice_1: 1.43  loss_ce_2: 0.6676  loss_mask_2: 0.2048  loss_dice_2: 1.386  loss_ce_3: 0.6099  loss_mask_3: 0.2001  loss_dice_3: 1.283  loss_ce_4: 0.5849  loss_mask_4: 0.1975  loss_dice_4: 1.301  loss_ce_5: 0.5953  loss_mask_5: 0.1973  loss_dice_5: 1.33  loss_ce_6: 0.5557  loss_mask_6: 0.1951  loss_dice_6: 1.328  loss_ce_7: 0.6037  loss_mask_7: 0.1963  loss_dice_7: 1.293  loss_ce_8: 0.5688  loss_mask_8: 0.1947  loss_dice_8: 1.326  distillation_loss: 4.06    time: 1.1320  last_time: 1.1349  data_time: 0.0205  last_data_time: 0.0170   lr: 0.0001  max_mem: 21414M
[07/23 09:32:55] d2.utils.events INFO:  eta: 0:13:33  iter: 279  total_loss: 26.59  loss_ce: 0.8216  loss_mask: 0.1819  loss_dice: 1.289  loss_ce_0: 0.6839  loss_mask_0: 0.2098  loss_dice_0: 1.567  loss_ce_1: 0.7463  loss_mask_1: 0.1961  loss_dice_1: 1.5  loss_ce_2: 0.717  loss_mask_2: 0.1872  loss_dice_2: 1.403  loss_ce_3: 0.6709  loss_mask_3: 0.187  loss_dice_3: 1.347  loss_ce_4: 0.6406  loss_mask_4: 0.1871  loss_dice_4: 1.311  loss_ce_5: 0.6162  loss_mask_5: 0.1841  loss_dice_5: 1.316  loss_ce_6: 0.6216  loss_mask_6: 0.1847  loss_dice_6: 1.3  loss_ce_7: 0.5969  loss_mask_7: 0.1845  loss_dice_7: 1.298  loss_ce_8: 0.615  loss_mask_8: 0.1864  loss_dice_8: 1.294  distillation_loss: 4.02    time: 1.1325  last_time: 1.1206  data_time: 0.0206  last_data_time: 0.0206   lr: 0.0001  max_mem: 21414M
[07/23 09:33:18] d2.utils.events INFO:  eta: 0:13:10  iter: 299  total_loss: 25.37  loss_ce: 0.7549  loss_mask: 0.1813  loss_dice: 1.282  loss_ce_0: 0.6336  loss_mask_0: 0.2018  loss_dice_0: 1.505  loss_ce_1: 0.7317  loss_mask_1: 0.1908  loss_dice_1: 1.392  loss_ce_2: 0.6752  loss_mask_2: 0.1914  loss_dice_2: 1.349  loss_ce_3: 0.6329  loss_mask_3: 0.186  loss_dice_3: 1.269  loss_ce_4: 0.6163  loss_mask_4: 0.1849  loss_dice_4: 1.272  loss_ce_5: 0.6068  loss_mask_5: 0.1819  loss_dice_5: 1.282  loss_ce_6: 0.5787  loss_mask_6: 0.1798  loss_dice_6: 1.262  loss_ce_7: 0.5819  loss_mask_7: 0.1851  loss_dice_7: 1.271  loss_ce_8: 0.6044  loss_mask_8: 0.1808  loss_dice_8: 1.266  distillation_loss: 3.941    time: 1.1326  last_time: 1.1251  data_time: 0.0209  last_data_time: 0.0215   lr: 0.0001  max_mem: 21414M
[07/23 09:33:41] d2.utils.events INFO:  eta: 0:12:48  iter: 319  total_loss: 25.36  loss_ce: 0.7527  loss_mask: 0.1877  loss_dice: 1.261  loss_ce_0: 0.6523  loss_mask_0: 0.2239  loss_dice_0: 1.557  loss_ce_1: 0.7493  loss_mask_1: 0.2107  loss_dice_1: 1.415  loss_ce_2: 0.6652  loss_mask_2: 0.2012  loss_dice_2: 1.364  loss_ce_3: 0.6393  loss_mask_3: 0.1906  loss_dice_3: 1.267  loss_ce_4: 0.5984  loss_mask_4: 0.1936  loss_dice_4: 1.29  loss_ce_5: 0.6069  loss_mask_5: 0.1934  loss_dice_5: 1.293  loss_ce_6: 0.5687  loss_mask_6: 0.1965  loss_dice_6: 1.272  loss_ce_7: 0.5484  loss_mask_7: 0.1962  loss_dice_7: 1.293  loss_ce_8: 0.5893  loss_mask_8: 0.1948  loss_dice_8: 1.266  distillation_loss: 3.971    time: 1.1326  last_time: 1.1313  data_time: 0.0207  last_data_time: 0.0195   lr: 0.0001  max_mem: 21414M
[07/23 09:34:04] d2.utils.events INFO:  eta: 0:12:26  iter: 339  total_loss: 26.21  loss_ce: 0.7606  loss_mask: 0.1815  loss_dice: 1.309  loss_ce_0: 0.6685  loss_mask_0: 0.2093  loss_dice_0: 1.682  loss_ce_1: 0.7074  loss_mask_1: 0.193  loss_dice_1: 1.538  loss_ce_2: 0.679  loss_mask_2: 0.1881  loss_dice_2: 1.458  loss_ce_3: 0.5991  loss_mask_3: 0.1858  loss_dice_3: 1.402  loss_ce_4: 0.5538  loss_mask_4: 0.1884  loss_dice_4: 1.39  loss_ce_5: 0.5842  loss_mask_5: 0.1851  loss_dice_5: 1.408  loss_ce_6: 0.5437  loss_mask_6: 0.1856  loss_dice_6: 1.357  loss_ce_7: 0.549  loss_mask_7: 0.1859  loss_dice_7: 1.325  loss_ce_8: 0.5539  loss_mask_8: 0.1857  loss_dice_8: 1.355  distillation_loss: 3.953    time: 1.1331  last_time: 1.1395  data_time: 0.0217  last_data_time: 0.0201   lr: 0.0001  max_mem: 21414M
[07/23 09:34:26] d2.utils.events INFO:  eta: 0:12:03  iter: 359  total_loss: 25.88  loss_ce: 0.7986  loss_mask: 0.189  loss_dice: 1.307  loss_ce_0: 0.6386  loss_mask_0: 0.2211  loss_dice_0: 1.56  loss_ce_1: 0.6987  loss_mask_1: 0.2044  loss_dice_1: 1.437  loss_ce_2: 0.662  loss_mask_2: 0.1947  loss_dice_2: 1.392  loss_ce_3: 0.6233  loss_mask_3: 0.1937  loss_dice_3: 1.35  loss_ce_4: 0.6038  loss_mask_4: 0.1919  loss_dice_4: 1.298  loss_ce_5: 0.5869  loss_mask_5: 0.1894  loss_dice_5: 1.303  loss_ce_6: 0.5983  loss_mask_6: 0.1894  loss_dice_6: 1.271  loss_ce_7: 0.5571  loss_mask_7: 0.1892  loss_dice_7: 1.299  loss_ce_8: 0.5909  loss_mask_8: 0.1906  loss_dice_8: 1.312  distillation_loss: 3.876    time: 1.1334  last_time: 1.1530  data_time: 0.0216  last_data_time: 0.0327   lr: 0.0001  max_mem: 21859M
[07/23 09:34:49] d2.utils.events INFO:  eta: 0:11:41  iter: 379  total_loss: 27.05  loss_ce: 0.8104  loss_mask: 0.1584  loss_dice: 1.331  loss_ce_0: 0.6935  loss_mask_0: 0.1885  loss_dice_0: 1.642  loss_ce_1: 0.7277  loss_mask_1: 0.1775  loss_dice_1: 1.535  loss_ce_2: 0.665  loss_mask_2: 0.1705  loss_dice_2: 1.457  loss_ce_3: 0.5993  loss_mask_3: 0.1673  loss_dice_3: 1.376  loss_ce_4: 0.6029  loss_mask_4: 0.1646  loss_dice_4: 1.372  loss_ce_5: 0.5941  loss_mask_5: 0.1648  loss_dice_5: 1.389  loss_ce_6: 0.5946  loss_mask_6: 0.1651  loss_dice_6: 1.33  loss_ce_7: 0.5928  loss_mask_7: 0.1618  loss_dice_7: 1.339  loss_ce_8: 0.5981  loss_mask_8: 0.1606  loss_dice_8: 1.361  distillation_loss: 3.978    time: 1.1344  last_time: 1.1563  data_time: 0.0227  last_data_time: 0.0204   lr: 0.0001  max_mem: 21859M
[07/23 09:35:12] d2.utils.events INFO:  eta: 0:11:18  iter: 399  total_loss: 24.99  loss_ce: 0.7693  loss_mask: 0.1701  loss_dice: 1.214  loss_ce_0: 0.6036  loss_mask_0: 0.2024  loss_dice_0: 1.427  loss_ce_1: 0.7174  loss_mask_1: 0.185  loss_dice_1: 1.337  loss_ce_2: 0.6526  loss_mask_2: 0.1711  loss_dice_2: 1.308  loss_ce_3: 0.6156  loss_mask_3: 0.1753  loss_dice_3: 1.239  loss_ce_4: 0.592  loss_mask_4: 0.1759  loss_dice_4: 1.263  loss_ce_5: 0.5802  loss_mask_5: 0.1767  loss_dice_5: 1.213  loss_ce_6: 0.5734  loss_mask_6: 0.1714  loss_dice_6: 1.196  loss_ce_7: 0.5633  loss_mask_7: 0.1704  loss_dice_7: 1.226  loss_ce_8: 0.585  loss_mask_8: 0.17  loss_dice_8: 1.215  distillation_loss: 3.885    time: 1.1344  last_time: 1.1480  data_time: 0.0221  last_data_time: 0.0235   lr: 0.0001  max_mem: 21859M
[07/23 09:35:35] d2.utils.events INFO:  eta: 0:10:56  iter: 419  total_loss: 24.56  loss_ce: 0.728  loss_mask: 0.1934  loss_dice: 1.23  loss_ce_0: 0.6281  loss_mask_0: 0.2169  loss_dice_0: 1.419  loss_ce_1: 0.6624  loss_mask_1: 0.2147  loss_dice_1: 1.353  loss_ce_2: 0.5891  loss_mask_2: 0.1986  loss_dice_2: 1.307  loss_ce_3: 0.5327  loss_mask_3: 0.1959  loss_dice_3: 1.253  loss_ce_4: 0.5176  loss_mask_4: 0.1981  loss_dice_4: 1.277  loss_ce_5: 0.5258  loss_mask_5: 0.1939  loss_dice_5: 1.232  loss_ce_6: 0.5094  loss_mask_6: 0.1974  loss_dice_6: 1.247  loss_ce_7: 0.5142  loss_mask_7: 0.1932  loss_dice_7: 1.219  loss_ce_8: 0.5024  loss_mask_8: 0.1956  loss_dice_8: 1.236  distillation_loss: 3.921    time: 1.1345  last_time: 1.1356  data_time: 0.0229  last_data_time: 0.0224   lr: 0.0001  max_mem: 21859M
[07/23 09:35:58] d2.utils.events INFO:  eta: 0:10:33  iter: 439  total_loss: 25.05  loss_ce: 0.7528  loss_mask: 0.1845  loss_dice: 1.233  loss_ce_0: 0.6482  loss_mask_0: 0.2143  loss_dice_0: 1.458  loss_ce_1: 0.7512  loss_mask_1: 0.2033  loss_dice_1: 1.339  loss_ce_2: 0.6449  loss_mask_2: 0.1885  loss_dice_2: 1.325  loss_ce_3: 0.628  loss_mask_3: 0.1888  loss_dice_3: 1.259  loss_ce_4: 0.5629  loss_mask_4: 0.1854  loss_dice_4: 1.244  loss_ce_5: 0.5611  loss_mask_5: 0.1839  loss_dice_5: 1.24  loss_ce_6: 0.5468  loss_mask_6: 0.1838  loss_dice_6: 1.234  loss_ce_7: 0.5744  loss_mask_7: 0.186  loss_dice_7: 1.235  loss_ce_8: 0.5428  loss_mask_8: 0.1843  loss_dice_8: 1.216  distillation_loss: 3.949    time: 1.1346  last_time: 1.1324  data_time: 0.0209  last_data_time: 0.0187   lr: 0.0001  max_mem: 21859M
[07/23 09:36:21] d2.utils.events INFO:  eta: 0:10:11  iter: 459  total_loss: 26.51  loss_ce: 0.8185  loss_mask: 0.1771  loss_dice: 1.317  loss_ce_0: 0.6781  loss_mask_0: 0.2025  loss_dice_0: 1.578  loss_ce_1: 0.7673  loss_mask_1: 0.1944  loss_dice_1: 1.486  loss_ce_2: 0.6661  loss_mask_2: 0.1811  loss_dice_2: 1.443  loss_ce_3: 0.6062  loss_mask_3: 0.1836  loss_dice_3: 1.395  loss_ce_4: 0.582  loss_mask_4: 0.18  loss_dice_4: 1.332  loss_ce_5: 0.5771  loss_mask_5: 0.1795  loss_dice_5: 1.373  loss_ce_6: 0.5779  loss_mask_6: 0.1792  loss_dice_6: 1.319  loss_ce_7: 0.5541  loss_mask_7: 0.1815  loss_dice_7: 1.346  loss_ce_8: 0.5888  loss_mask_8: 0.1813  loss_dice_8: 1.34  distillation_loss: 3.962    time: 1.1354  last_time: 1.1437  data_time: 0.0232  last_data_time: 0.0209   lr: 0.0001  max_mem: 21859M
[07/23 09:36:44] d2.utils.events INFO:  eta: 0:09:48  iter: 479  total_loss: 25.38  loss_ce: 0.7985  loss_mask: 0.1786  loss_dice: 1.301  loss_ce_0: 0.6363  loss_mask_0: 0.2045  loss_dice_0: 1.529  loss_ce_1: 0.7731  loss_mask_1: 0.1912  loss_dice_1: 1.42  loss_ce_2: 0.6987  loss_mask_2: 0.1813  loss_dice_2: 1.372  loss_ce_3: 0.6404  loss_mask_3: 0.1821  loss_dice_3: 1.321  loss_ce_4: 0.6024  loss_mask_4: 0.1822  loss_dice_4: 1.302  loss_ce_5: 0.6038  loss_mask_5: 0.1808  loss_dice_5: 1.302  loss_ce_6: 0.6076  loss_mask_6: 0.1806  loss_dice_6: 1.274  loss_ce_7: 0.5883  loss_mask_7: 0.1804  loss_dice_7: 1.275  loss_ce_8: 0.5918  loss_mask_8: 0.1798  loss_dice_8: 1.276  distillation_loss: 3.96    time: 1.1356  last_time: 1.1564  data_time: 0.0227  last_data_time: 0.0245   lr: 0.0001  max_mem: 21859M
[07/23 09:37:07] d2.utils.events INFO:  eta: 0:09:26  iter: 499  total_loss: 25.21  loss_ce: 0.6892  loss_mask: 0.1732  loss_dice: 1.273  loss_ce_0: 0.6151  loss_mask_0: 0.1916  loss_dice_0: 1.491  loss_ce_1: 0.6747  loss_mask_1: 0.1909  loss_dice_1: 1.403  loss_ce_2: 0.6272  loss_mask_2: 0.1765  loss_dice_2: 1.36  loss_ce_3: 0.5853  loss_mask_3: 0.1801  loss_dice_3: 1.368  loss_ce_4: 0.5442  loss_mask_4: 0.179  loss_dice_4: 1.352  loss_ce_5: 0.5602  loss_mask_5: 0.1768  loss_dice_5: 1.308  loss_ce_6: 0.5066  loss_mask_6: 0.1781  loss_dice_6: 1.317  loss_ce_7: 0.5315  loss_mask_7: 0.176  loss_dice_7: 1.296  loss_ce_8: 0.509  loss_mask_8: 0.1754  loss_dice_8: 1.295  distillation_loss: 3.829    time: 1.1358  last_time: 1.1154  data_time: 0.0236  last_data_time: 0.0220   lr: 0.0001  max_mem: 21859M
[07/23 09:37:30] d2.utils.events INFO:  eta: 0:09:04  iter: 519  total_loss: 24.38  loss_ce: 0.7062  loss_mask: 0.1736  loss_dice: 1.252  loss_ce_0: 0.6569  loss_mask_0: 0.1992  loss_dice_0: 1.464  loss_ce_1: 0.7249  loss_mask_1: 0.1921  loss_dice_1: 1.36  loss_ce_2: 0.6141  loss_mask_2: 0.1758  loss_dice_2: 1.327  loss_ce_3: 0.5882  loss_mask_3: 0.183  loss_dice_3: 1.234  loss_ce_4: 0.5562  loss_mask_4: 0.1798  loss_dice_4: 1.258  loss_ce_5: 0.5409  loss_mask_5: 0.1759  loss_dice_5: 1.243  loss_ce_6: 0.5372  loss_mask_6: 0.1741  loss_dice_6: 1.222  loss_ce_7: 0.5445  loss_mask_7: 0.1742  loss_dice_7: 1.214  loss_ce_8: 0.5467  loss_mask_8: 0.1739  loss_dice_8: 1.22  distillation_loss: 3.845    time: 1.1363  last_time: 1.1409  data_time: 0.0249  last_data_time: 0.0234   lr: 0.0001  max_mem: 21859M
[07/23 09:37:52] d2.utils.events INFO:  eta: 0:08:41  iter: 539  total_loss: 25.96  loss_ce: 0.7405  loss_mask: 0.1719  loss_dice: 1.289  loss_ce_0: 0.647  loss_mask_0: 0.2241  loss_dice_0: 1.519  loss_ce_1: 0.7034  loss_mask_1: 0.1978  loss_dice_1: 1.406  loss_ce_2: 0.6361  loss_mask_2: 0.1829  loss_dice_2: 1.357  loss_ce_3: 0.622  loss_mask_3: 0.1855  loss_dice_3: 1.294  loss_ce_4: 0.5756  loss_mask_4: 0.1796  loss_dice_4: 1.313  loss_ce_5: 0.595  loss_mask_5: 0.1773  loss_dice_5: 1.286  loss_ce_6: 0.5657  loss_mask_6: 0.1761  loss_dice_6: 1.295  loss_ce_7: 0.5643  loss_mask_7: 0.1748  loss_dice_7: 1.299  loss_ce_8: 0.5359  loss_mask_8: 0.1741  loss_dice_8: 1.281  distillation_loss: 3.893    time: 1.1364  last_time: 1.1552  data_time: 0.0243  last_data_time: 0.0243   lr: 0.0001  max_mem: 21859M
[07/23 09:38:15] d2.utils.events INFO:  eta: 0:08:18  iter: 559  total_loss: 25.32  loss_ce: 0.8027  loss_mask: 0.1827  loss_dice: 1.24  loss_ce_0: 0.6552  loss_mask_0: 0.202  loss_dice_0: 1.459  loss_ce_1: 0.7063  loss_mask_1: 0.1947  loss_dice_1: 1.373  loss_ce_2: 0.6624  loss_mask_2: 0.1861  loss_dice_2: 1.316  loss_ce_3: 0.5956  loss_mask_3: 0.1865  loss_dice_3: 1.277  loss_ce_4: 0.5598  loss_mask_4: 0.1887  loss_dice_4: 1.255  loss_ce_5: 0.5634  loss_mask_5: 0.1851  loss_dice_5: 1.268  loss_ce_6: 0.5412  loss_mask_6: 0.183  loss_dice_6: 1.274  loss_ce_7: 0.5472  loss_mask_7: 0.182  loss_dice_7: 1.262  loss_ce_8: 0.5691  loss_mask_8: 0.1816  loss_dice_8: 1.235  distillation_loss: 3.873    time: 1.1364  last_time: 1.1399  data_time: 0.0238  last_data_time: 0.0309   lr: 0.0001  max_mem: 21859M
[07/23 09:38:38] d2.utils.events INFO:  eta: 0:07:56  iter: 579  total_loss: 24.64  loss_ce: 0.7163  loss_mask: 0.1691  loss_dice: 1.264  loss_ce_0: 0.6042  loss_mask_0: 0.1954  loss_dice_0: 1.493  loss_ce_1: 0.6763  loss_mask_1: 0.1792  loss_dice_1: 1.4  loss_ce_2: 0.6221  loss_mask_2: 0.1698  loss_dice_2: 1.343  loss_ce_3: 0.5514  loss_mask_3: 0.172  loss_dice_3: 1.304  loss_ce_4: 0.5314  loss_mask_4: 0.1729  loss_dice_4: 1.263  loss_ce_5: 0.5314  loss_mask_5: 0.1717  loss_dice_5: 1.276  loss_ce_6: 0.5143  loss_mask_6: 0.1703  loss_dice_6: 1.263  loss_ce_7: 0.5306  loss_mask_7: 0.1712  loss_dice_7: 1.256  loss_ce_8: 0.5516  loss_mask_8: 0.1726  loss_dice_8: 1.293  distillation_loss: 3.849    time: 1.1366  last_time: 1.1331  data_time: 0.0257  last_data_time: 0.0424   lr: 0.0001  max_mem: 21859M
[07/23 09:39:01] d2.utils.events INFO:  eta: 0:07:33  iter: 599  total_loss: 24.22  loss_ce: 0.699  loss_mask: 0.1848  loss_dice: 1.234  loss_ce_0: 0.5957  loss_mask_0: 0.2201  loss_dice_0: 1.434  loss_ce_1: 0.6872  loss_mask_1: 0.1973  loss_dice_1: 1.333  loss_ce_2: 0.6153  loss_mask_2: 0.1958  loss_dice_2: 1.263  loss_ce_3: 0.5956  loss_mask_3: 0.1886  loss_dice_3: 1.23  loss_ce_4: 0.5312  loss_mask_4: 0.1879  loss_dice_4: 1.214  loss_ce_5: 0.5431  loss_mask_5: 0.1874  loss_dice_5: 1.208  loss_ce_6: 0.5465  loss_mask_6: 0.1892  loss_dice_6: 1.199  loss_ce_7: 0.5096  loss_mask_7: 0.1877  loss_dice_7: 1.207  loss_ce_8: 0.5265  loss_mask_8: 0.1883  loss_dice_8: 1.193  distillation_loss: 3.84    time: 1.1364  last_time: 1.1444  data_time: 0.0258  last_data_time: 0.0293   lr: 0.0001  max_mem: 21859M
[07/23 09:39:24] d2.utils.events INFO:  eta: 0:07:10  iter: 619  total_loss: 24.29  loss_ce: 0.7369  loss_mask: 0.1668  loss_dice: 1.225  loss_ce_0: 0.5906  loss_mask_0: 0.1973  loss_dice_0: 1.458  loss_ce_1: 0.6944  loss_mask_1: 0.182  loss_dice_1: 1.372  loss_ce_2: 0.6289  loss_mask_2: 0.1765  loss_dice_2: 1.266  loss_ce_3: 0.566  loss_mask_3: 0.1726  loss_dice_3: 1.25  loss_ce_4: 0.5667  loss_mask_4: 0.1744  loss_dice_4: 1.251  loss_ce_5: 0.5312  loss_mask_5: 0.174  loss_dice_5: 1.235  loss_ce_6: 0.5071  loss_mask_6: 0.168  loss_dice_6: 1.218  loss_ce_7: 0.5289  loss_mask_7: 0.1721  loss_dice_7: 1.231  loss_ce_8: 0.5413  loss_mask_8: 0.1682  loss_dice_8: 1.243  distillation_loss: 3.759    time: 1.1365  last_time: 1.1542  data_time: 0.0252  last_data_time: 0.0225   lr: 0.0001  max_mem: 21859M
[07/23 09:39:47] d2.utils.events INFO:  eta: 0:06:48  iter: 639  total_loss: 26.26  loss_ce: 0.7576  loss_mask: 0.1666  loss_dice: 1.334  loss_ce_0: 0.6073  loss_mask_0: 0.2064  loss_dice_0: 1.603  loss_ce_1: 0.7047  loss_mask_1: 0.1874  loss_dice_1: 1.503  loss_ce_2: 0.6583  loss_mask_2: 0.1753  loss_dice_2: 1.44  loss_ce_3: 0.6351  loss_mask_3: 0.171  loss_dice_3: 1.413  loss_ce_4: 0.5983  loss_mask_4: 0.1712  loss_dice_4: 1.408  loss_ce_5: 0.5687  loss_mask_5: 0.1702  loss_dice_5: 1.366  loss_ce_6: 0.5843  loss_mask_6: 0.1686  loss_dice_6: 1.344  loss_ce_7: 0.577  loss_mask_7: 0.1697  loss_dice_7: 1.345  loss_ce_8: 0.549  loss_mask_8: 0.1671  loss_dice_8: 1.329  distillation_loss: 3.834    time: 1.1368  last_time: 1.1667  data_time: 0.0263  last_data_time: 0.0330   lr: 0.0001  max_mem: 21859M
[07/23 09:40:10] d2.utils.events INFO:  eta: 0:06:25  iter: 659  total_loss: 25.54  loss_ce: 0.7298  loss_mask: 0.1824  loss_dice: 1.299  loss_ce_0: 0.603  loss_mask_0: 0.2112  loss_dice_0: 1.562  loss_ce_1: 0.6999  loss_mask_1: 0.1967  loss_dice_1: 1.464  loss_ce_2: 0.6424  loss_mask_2: 0.1871  loss_dice_2: 1.373  loss_ce_3: 0.6155  loss_mask_3: 0.1843  loss_dice_3: 1.347  loss_ce_4: 0.5636  loss_mask_4: 0.1857  loss_dice_4: 1.34  loss_ce_5: 0.5733  loss_mask_5: 0.1851  loss_dice_5: 1.336  loss_ce_6: 0.5404  loss_mask_6: 0.1827  loss_dice_6: 1.299  loss_ce_7: 0.5436  loss_mask_7: 0.1841  loss_dice_7: 1.309  loss_ce_8: 0.5628  loss_mask_8: 0.1843  loss_dice_8: 1.31  distillation_loss: 3.702    time: 1.1372  last_time: 1.1398  data_time: 0.0251  last_data_time: 0.0315   lr: 0.0001  max_mem: 21859M
[07/23 09:40:33] d2.utils.events INFO:  eta: 0:06:03  iter: 679  total_loss: 24.66  loss_ce: 0.7081  loss_mask: 0.1797  loss_dice: 1.274  loss_ce_0: 0.6104  loss_mask_0: 0.2059  loss_dice_0: 1.531  loss_ce_1: 0.6493  loss_mask_1: 0.1958  loss_dice_1: 1.402  loss_ce_2: 0.59  loss_mask_2: 0.1874  loss_dice_2: 1.34  loss_ce_3: 0.5546  loss_mask_3: 0.1878  loss_dice_3: 1.311  loss_ce_4: 0.5363  loss_mask_4: 0.1834  loss_dice_4: 1.272  loss_ce_5: 0.5293  loss_mask_5: 0.1813  loss_dice_5: 1.265  loss_ce_6: 0.5429  loss_mask_6: 0.1823  loss_dice_6: 1.268  loss_ce_7: 0.5416  loss_mask_7: 0.1825  loss_dice_7: 1.282  loss_ce_8: 0.539  loss_mask_8: 0.1824  loss_dice_8: 1.281  distillation_loss: 3.874    time: 1.1377  last_time: 1.1155  data_time: 0.0264  last_data_time: 0.0207   lr: 0.0001  max_mem: 21859M
[07/23 09:40:56] d2.utils.events INFO:  eta: 0:05:40  iter: 699  total_loss: 25.26  loss_ce: 0.7004  loss_mask: 0.1796  loss_dice: 1.259  loss_ce_0: 0.622  loss_mask_0: 0.2099  loss_dice_0: 1.491  loss_ce_1: 0.691  loss_mask_1: 0.1975  loss_dice_1: 1.442  loss_ce_2: 0.646  loss_mask_2: 0.1867  loss_dice_2: 1.388  loss_ce_3: 0.584  loss_mask_3: 0.1879  loss_dice_3: 1.291  loss_ce_4: 0.5487  loss_mask_4: 0.1843  loss_dice_4: 1.318  loss_ce_5: 0.5385  loss_mask_5: 0.185  loss_dice_5: 1.284  loss_ce_6: 0.5203  loss_mask_6: 0.1853  loss_dice_6: 1.284  loss_ce_7: 0.5404  loss_mask_7: 0.1845  loss_dice_7: 1.258  loss_ce_8: 0.529  loss_mask_8: 0.1832  loss_dice_8: 1.269  distillation_loss: 3.815    time: 1.1376  last_time: 1.1284  data_time: 0.0231  last_data_time: 0.0238   lr: 0.0001  max_mem: 21859M
[07/23 09:41:19] d2.utils.events INFO:  eta: 0:05:17  iter: 719  total_loss: 24.79  loss_ce: 0.7745  loss_mask: 0.1772  loss_dice: 1.24  loss_ce_0: 0.6756  loss_mask_0: 0.2013  loss_dice_0: 1.51  loss_ce_1: 0.733  loss_mask_1: 0.2013  loss_dice_1: 1.39  loss_ce_2: 0.6922  loss_mask_2: 0.1894  loss_dice_2: 1.333  loss_ce_3: 0.5958  loss_mask_3: 0.1901  loss_dice_3: 1.293  loss_ce_4: 0.5925  loss_mask_4: 0.1819  loss_dice_4: 1.298  loss_ce_5: 0.5502  loss_mask_5: 0.1824  loss_dice_5: 1.295  loss_ce_6: 0.5559  loss_mask_6: 0.1803  loss_dice_6: 1.28  loss_ce_7: 0.5785  loss_mask_7: 0.1816  loss_dice_7: 1.272  loss_ce_8: 0.5678  loss_mask_8: 0.1759  loss_dice_8: 1.262  distillation_loss: 3.796    time: 1.1380  last_time: 1.1438  data_time: 0.0282  last_data_time: 0.0234   lr: 0.0001  max_mem: 21859M
[07/23 09:41:42] d2.utils.events INFO:  eta: 0:04:55  iter: 739  total_loss: 24.35  loss_ce: 0.6969  loss_mask: 0.1782  loss_dice: 1.23  loss_ce_0: 0.583  loss_mask_0: 0.2138  loss_dice_0: 1.43  loss_ce_1: 0.6744  loss_mask_1: 0.1891  loss_dice_1: 1.321  loss_ce_2: 0.6025  loss_mask_2: 0.1819  loss_dice_2: 1.268  loss_ce_3: 0.5516  loss_mask_3: 0.1831  loss_dice_3: 1.256  loss_ce_4: 0.5201  loss_mask_4: 0.1784  loss_dice_4: 1.235  loss_ce_5: 0.5303  loss_mask_5: 0.1774  loss_dice_5: 1.218  loss_ce_6: 0.5291  loss_mask_6: 0.1793  loss_dice_6: 1.222  loss_ce_7: 0.5211  loss_mask_7: 0.1789  loss_dice_7: 1.205  loss_ce_8: 0.5148  loss_mask_8: 0.1776  loss_dice_8: 1.18  distillation_loss: 3.742    time: 1.1381  last_time: 1.1514  data_time: 0.0244  last_data_time: 0.0220   lr: 0.0001  max_mem: 21859M
[07/23 09:42:05] d2.utils.events INFO:  eta: 0:04:32  iter: 759  total_loss: 25.06  loss_ce: 0.7486  loss_mask: 0.179  loss_dice: 1.245  loss_ce_0: 0.6422  loss_mask_0: 0.2038  loss_dice_0: 1.485  loss_ce_1: 0.6788  loss_mask_1: 0.1896  loss_dice_1: 1.377  loss_ce_2: 0.6264  loss_mask_2: 0.187  loss_dice_2: 1.337  loss_ce_3: 0.5505  loss_mask_3: 0.1814  loss_dice_3: 1.329  loss_ce_4: 0.5405  loss_mask_4: 0.1833  loss_dice_4: 1.301  loss_ce_5: 0.5337  loss_mask_5: 0.1803  loss_dice_5: 1.333  loss_ce_6: 0.5278  loss_mask_6: 0.1808  loss_dice_6: 1.243  loss_ce_7: 0.5034  loss_mask_7: 0.1787  loss_dice_7: 1.257  loss_ce_8: 0.5057  loss_mask_8: 0.1801  loss_dice_8: 1.261  distillation_loss: 3.683    time: 1.1382  last_time: 1.1278  data_time: 0.0251  last_data_time: 0.0208   lr: 0.0001  max_mem: 21859M
[07/23 09:42:28] d2.utils.events INFO:  eta: 0:04:09  iter: 779  total_loss: 24.26  loss_ce: 0.7096  loss_mask: 0.1734  loss_dice: 1.263  loss_ce_0: 0.6112  loss_mask_0: 0.1983  loss_dice_0: 1.52  loss_ce_1: 0.6484  loss_mask_1: 0.1871  loss_dice_1: 1.4  loss_ce_2: 0.6031  loss_mask_2: 0.18  loss_dice_2: 1.354  loss_ce_3: 0.5576  loss_mask_3: 0.1784  loss_dice_3: 1.305  loss_ce_4: 0.5179  loss_mask_4: 0.1832  loss_dice_4: 1.297  loss_ce_5: 0.5051  loss_mask_5: 0.171  loss_dice_5: 1.27  loss_ce_6: 0.5128  loss_mask_6: 0.1744  loss_dice_6: 1.272  loss_ce_7: 0.5025  loss_mask_7: 0.1749  loss_dice_7: 1.246  loss_ce_8: 0.5149  loss_mask_8: 0.1675  loss_dice_8: 1.251  distillation_loss: 3.657    time: 1.1384  last_time: 1.1400  data_time: 0.0258  last_data_time: 0.0201   lr: 0.0001  max_mem: 21859M
[07/23 09:42:50] d2.utils.events INFO:  eta: 0:03:47  iter: 799  total_loss: 23.72  loss_ce: 0.6937  loss_mask: 0.1825  loss_dice: 1.199  loss_ce_0: 0.6203  loss_mask_0: 0.2129  loss_dice_0: 1.435  loss_ce_1: 0.7102  loss_mask_1: 0.1967  loss_dice_1: 1.331  loss_ce_2: 0.6021  loss_mask_2: 0.1885  loss_dice_2: 1.24  loss_ce_3: 0.5747  loss_mask_3: 0.1854  loss_dice_3: 1.222  loss_ce_4: 0.5278  loss_mask_4: 0.1867  loss_dice_4: 1.217  loss_ce_5: 0.5181  loss_mask_5: 0.1846  loss_dice_5: 1.187  loss_ce_6: 0.4869  loss_mask_6: 0.1852  loss_dice_6: 1.191  loss_ce_7: 0.5125  loss_mask_7: 0.1864  loss_dice_7: 1.177  loss_ce_8: 0.5051  loss_mask_8: 0.1853  loss_dice_8: 1.173  distillation_loss: 3.727    time: 1.1385  last_time: 1.1363  data_time: 0.0229  last_data_time: 0.0223   lr: 0.0001  max_mem: 21859M
[07/23 09:43:13] d2.utils.events INFO:  eta: 0:03:24  iter: 819  total_loss: 24.71  loss_ce: 0.6979  loss_mask: 0.1725  loss_dice: 1.256  loss_ce_0: 0.6384  loss_mask_0: 0.196  loss_dice_0: 1.434  loss_ce_1: 0.711  loss_mask_1: 0.1836  loss_dice_1: 1.359  loss_ce_2: 0.6077  loss_mask_2: 0.1771  loss_dice_2: 1.327  loss_ce_3: 0.5649  loss_mask_3: 0.1754  loss_dice_3: 1.266  loss_ce_4: 0.5534  loss_mask_4: 0.1736  loss_dice_4: 1.255  loss_ce_5: 0.5296  loss_mask_5: 0.1732  loss_dice_5: 1.276  loss_ce_6: 0.512  loss_mask_6: 0.1756  loss_dice_6: 1.208  loss_ce_7: 0.5128  loss_mask_7: 0.1747  loss_dice_7: 1.239  loss_ce_8: 0.5354  loss_mask_8: 0.1734  loss_dice_8: 1.208  distillation_loss: 3.748    time: 1.1385  last_time: 1.1194  data_time: 0.0237  last_data_time: 0.0210   lr: 0.0001  max_mem: 21859M
[07/23 09:43:36] d2.utils.events INFO:  eta: 0:03:01  iter: 839  total_loss: 24.27  loss_ce: 0.7839  loss_mask: 0.1532  loss_dice: 1.243  loss_ce_0: 0.6244  loss_mask_0: 0.1811  loss_dice_0: 1.445  loss_ce_1: 0.6822  loss_mask_1: 0.1783  loss_dice_1: 1.408  loss_ce_2: 0.6192  loss_mask_2: 0.161  loss_dice_2: 1.326  loss_ce_3: 0.5897  loss_mask_3: 0.1557  loss_dice_3: 1.294  loss_ce_4: 0.5525  loss_mask_4: 0.1551  loss_dice_4: 1.263  loss_ce_5: 0.5415  loss_mask_5: 0.1532  loss_dice_5: 1.274  loss_ce_6: 0.5146  loss_mask_6: 0.1533  loss_dice_6: 1.252  loss_ce_7: 0.5104  loss_mask_7: 0.1532  loss_dice_7: 1.252  loss_ce_8: 0.5429  loss_mask_8: 0.1505  loss_dice_8: 1.243  distillation_loss: 3.666    time: 1.1386  last_time: 1.1450  data_time: 0.0249  last_data_time: 0.0315   lr: 0.0001  max_mem: 21859M
[07/23 09:43:59] d2.utils.events INFO:  eta: 0:02:38  iter: 859  total_loss: 24.88  loss_ce: 0.7766  loss_mask: 0.172  loss_dice: 1.267  loss_ce_0: 0.6794  loss_mask_0: 0.1991  loss_dice_0: 1.491  loss_ce_1: 0.7417  loss_mask_1: 0.1865  loss_dice_1: 1.431  loss_ce_2: 0.6738  loss_mask_2: 0.1841  loss_dice_2: 1.337  loss_ce_3: 0.6032  loss_mask_3: 0.1751  loss_dice_3: 1.311  loss_ce_4: 0.6158  loss_mask_4: 0.1751  loss_dice_4: 1.288  loss_ce_5: 0.5765  loss_mask_5: 0.1722  loss_dice_5: 1.261  loss_ce_6: 0.5715  loss_mask_6: 0.1736  loss_dice_6: 1.257  loss_ce_7: 0.5842  loss_mask_7: 0.1736  loss_dice_7: 1.249  loss_ce_8: 0.5758  loss_mask_8: 0.1746  loss_dice_8: 1.261  distillation_loss: 3.718    time: 1.1387  last_time: 1.1215  data_time: 0.0250  last_data_time: 0.0315   lr: 0.0001  max_mem: 21859M
[07/23 09:44:22] d2.utils.events INFO:  eta: 0:02:16  iter: 879  total_loss: 24.4  loss_ce: 0.7256  loss_mask: 0.1659  loss_dice: 1.234  loss_ce_0: 0.6378  loss_mask_0: 0.1991  loss_dice_0: 1.43  loss_ce_1: 0.6953  loss_mask_1: 0.1768  loss_dice_1: 1.363  loss_ce_2: 0.6541  loss_mask_2: 0.1742  loss_dice_2: 1.339  loss_ce_3: 0.5893  loss_mask_3: 0.1671  loss_dice_3: 1.266  loss_ce_4: 0.5359  loss_mask_4: 0.1689  loss_dice_4: 1.28  loss_ce_5: 0.533  loss_mask_5: 0.1663  loss_dice_5: 1.254  loss_ce_6: 0.543  loss_mask_6: 0.1662  loss_dice_6: 1.26  loss_ce_7: 0.5409  loss_mask_7: 0.1682  loss_dice_7: 1.233  loss_ce_8: 0.532  loss_mask_8: 0.1677  loss_dice_8: 1.215  distillation_loss: 3.717    time: 1.1388  last_time: 1.1584  data_time: 0.0240  last_data_time: 0.0216   lr: 0.0001  max_mem: 21859M
[07/23 09:44:45] d2.utils.events INFO:  eta: 0:01:53  iter: 899  total_loss: 23.58  loss_ce: 0.7038  loss_mask: 0.1664  loss_dice: 1.152  loss_ce_0: 0.6356  loss_mask_0: 0.1909  loss_dice_0: 1.402  loss_ce_1: 0.6674  loss_mask_1: 0.1829  loss_dice_1: 1.313  loss_ce_2: 0.6256  loss_mask_2: 0.1702  loss_dice_2: 1.243  loss_ce_3: 0.5416  loss_mask_3: 0.169  loss_dice_3: 1.2  loss_ce_4: 0.5366  loss_mask_4: 0.1693  loss_dice_4: 1.222  loss_ce_5: 0.5266  loss_mask_5: 0.1675  loss_dice_5: 1.206  loss_ce_6: 0.4957  loss_mask_6: 0.167  loss_dice_6: 1.184  loss_ce_7: 0.5193  loss_mask_7: 0.1688  loss_dice_7: 1.178  loss_ce_8: 0.5162  loss_mask_8: 0.164  loss_dice_8: 1.165  distillation_loss: 3.669    time: 1.1388  last_time: 1.1372  data_time: 0.0251  last_data_time: 0.0230   lr: 0.0001  max_mem: 21859M
[07/23 09:45:08] d2.utils.events INFO:  eta: 0:01:30  iter: 919  total_loss: 25.07  loss_ce: 0.7355  loss_mask: 0.167  loss_dice: 1.311  loss_ce_0: 0.5473  loss_mask_0: 0.1952  loss_dice_0: 1.463  loss_ce_1: 0.6554  loss_mask_1: 0.1829  loss_dice_1: 1.423  loss_ce_2: 0.6023  loss_mask_2: 0.166  loss_dice_2: 1.37  loss_ce_3: 0.5518  loss_mask_3: 0.1658  loss_dice_3: 1.316  loss_ce_4: 0.5059  loss_mask_4: 0.1657  loss_dice_4: 1.344  loss_ce_5: 0.5095  loss_mask_5: 0.1635  loss_dice_5: 1.32  loss_ce_6: 0.4845  loss_mask_6: 0.1633  loss_dice_6: 1.255  loss_ce_7: 0.5135  loss_mask_7: 0.164  loss_dice_7: 1.279  loss_ce_8: 0.5068  loss_mask_8: 0.1623  loss_dice_8: 1.279  distillation_loss: 3.815    time: 1.1390  last_time: 1.1295  data_time: 0.0253  last_data_time: 0.0305   lr: 0.0001  max_mem: 21859M
[07/23 09:45:31] d2.utils.events INFO:  eta: 0:01:08  iter: 939  total_loss: 24.27  loss_ce: 0.6435  loss_mask: 0.1659  loss_dice: 1.276  loss_ce_0: 0.5782  loss_mask_0: 0.1919  loss_dice_0: 1.5  loss_ce_1: 0.6672  loss_mask_1: 0.1811  loss_dice_1: 1.372  loss_ce_2: 0.6128  loss_mask_2: 0.1699  loss_dice_2: 1.317  loss_ce_3: 0.5538  loss_mask_3: 0.1697  loss_dice_3: 1.314  loss_ce_4: 0.5625  loss_mask_4: 0.1725  loss_dice_4: 1.328  loss_ce_5: 0.5063  loss_mask_5: 0.1711  loss_dice_5: 1.29  loss_ce_6: 0.5114  loss_mask_6: 0.1699  loss_dice_6: 1.249  loss_ce_7: 0.5052  loss_mask_7: 0.1689  loss_dice_7: 1.23  loss_ce_8: 0.5101  loss_mask_8: 0.1655  loss_dice_8: 1.255  distillation_loss: 3.715    time: 1.1392  last_time: 1.1598  data_time: 0.0249  last_data_time: 0.0294   lr: 0.0001  max_mem: 21859M
[07/23 09:45:54] d2.utils.events INFO:  eta: 0:00:45  iter: 959  total_loss: 23.41  loss_ce: 0.6343  loss_mask: 0.1937  loss_dice: 1.199  loss_ce_0: 0.6082  loss_mask_0: 0.2183  loss_dice_0: 1.408  loss_ce_1: 0.6531  loss_mask_1: 0.2104  loss_dice_1: 1.31  loss_ce_2: 0.6021  loss_mask_2: 0.1934  loss_dice_2: 1.255  loss_ce_3: 0.5235  loss_mask_3: 0.1927  loss_dice_3: 1.199  loss_ce_4: 0.5069  loss_mask_4: 0.1956  loss_dice_4: 1.202  loss_ce_5: 0.497  loss_mask_5: 0.1943  loss_dice_5: 1.172  loss_ce_6: 0.4584  loss_mask_6: 0.1935  loss_dice_6: 1.201  loss_ce_7: 0.4516  loss_mask_7: 0.1947  loss_dice_7: 1.175  loss_ce_8: 0.4641  loss_mask_8: 0.1947  loss_dice_8: 1.227  distillation_loss: 3.746    time: 1.1391  last_time: 1.1225  data_time: 0.0250  last_data_time: 0.0230   lr: 0.0001  max_mem: 21859M
[07/23 09:46:17] d2.utils.events INFO:  eta: 0:00:22  iter: 979  total_loss: 24.45  loss_ce: 0.6864  loss_mask: 0.1629  loss_dice: 1.238  loss_ce_0: 0.5977  loss_mask_0: 0.2048  loss_dice_0: 1.433  loss_ce_1: 0.6623  loss_mask_1: 0.1873  loss_dice_1: 1.324  loss_ce_2: 0.5916  loss_mask_2: 0.1687  loss_dice_2: 1.269  loss_ce_3: 0.5478  loss_mask_3: 0.1723  loss_dice_3: 1.261  loss_ce_4: 0.5015  loss_mask_4: 0.1674  loss_dice_4: 1.247  loss_ce_5: 0.529  loss_mask_5: 0.1693  loss_dice_5: 1.234  loss_ce_6: 0.5308  loss_mask_6: 0.1675  loss_dice_6: 1.205  loss_ce_7: 0.4996  loss_mask_7: 0.1644  loss_dice_7: 1.227  loss_ce_8: 0.5154  loss_mask_8: 0.1663  loss_dice_8: 1.22  distillation_loss: 3.747    time: 1.1391  last_time: 1.2162  data_time: 0.0233  last_data_time: 0.0224   lr: 0.0001  max_mem: 21859M
[07/23 09:46:40] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/FCCLIP_results/All_results/KD_results/KD_Oneformer_R50_Classical_loss_In_vocab_008_1000iter/model_final.pth
[07/23 09:46:42] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 25.26  loss_ce: 0.6801  loss_mask: 0.1751  loss_dice: 1.351  loss_ce_0: 0.686  loss_mask_0: 0.2035  loss_dice_0: 1.511  loss_ce_1: 0.6603  loss_mask_1: 0.1885  loss_dice_1: 1.451  loss_ce_2: 0.601  loss_mask_2: 0.1722  loss_dice_2: 1.432  loss_ce_3: 0.5503  loss_mask_3: 0.1747  loss_dice_3: 1.352  loss_ce_4: 0.5471  loss_mask_4: 0.1753  loss_dice_4: 1.376  loss_ce_5: 0.5331  loss_mask_5: 0.1741  loss_dice_5: 1.314  loss_ce_6: 0.4909  loss_mask_6: 0.1763  loss_dice_6: 1.347  loss_ce_7: 0.5192  loss_mask_7: 0.1758  loss_dice_7: 1.337  loss_ce_8: 0.5325  loss_mask_8: 0.1759  loss_dice_8: 1.326  distillation_loss: 3.751    time: 1.1393  last_time: 1.1578  data_time: 0.0268  last_data_time: 0.0322   lr: 0.0001  max_mem: 21859M
[07/23 09:46:42] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:18:56 (1.1393 s / it)
[07/23 09:46:42] d2.engine.hooks INFO: Total training time: 0:19:02 (0:00:05 on hooks)
[07/23 09:46:42] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[07/23 09:46:42] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[07/23 09:46:42] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[07/23 09:46:42] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[07/23 09:46:42] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[07/23 09:47:52] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalctu7ln8q ...
[07/23 09:50:30] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 53.484 | 80.760 | 65.058 |      19       |
| Things | 44.713 | 80.557 | 55.725 |       8       |
| Stuff  | 59.862 | 80.907 | 71.846 |      11       |
[07/23 09:50:30] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.969 | 97.271 | 99.690 |     Stuff     |
| class_8  | 74.019 | 83.962 | 88.158 |     Stuff     |
| class_11 | 86.956 | 89.330 | 97.342 |     Stuff     |
| class_12 | 16.987 | 77.856 | 21.818 |     Stuff     |
| class_13 | 21.151 | 75.319 | 28.082 |     Stuff     |
| class_17 | 40.516 | 63.112 | 64.198 |     Stuff     |
| class_19 | 43.955 | 69.668 | 63.093 |     Stuff     |
| class_20 | 62.922 | 75.935 | 82.863 |     Stuff     |
| class_21 | 89.155 | 89.709 | 99.383 |     Stuff     |
| class_22 | 37.625 | 76.200 | 49.377 |     Stuff     |
| class_23 | 88.231 | 91.616 | 96.305 |     Stuff     |
| class_24 | 50.253 | 76.487 | 65.702 |    Things     |
| class_25 | 41.061 | 74.096 | 55.416 |    Things     |
| class_26 | 64.519 | 82.752 | 77.966 |    Things     |
| class_27 | 48.096 | 86.783 | 55.422 |    Things     |
| class_28 | 60.949 | 90.372 | 67.442 |    Things     |
| class_31 | 13.996 | 87.475 | 16.000 |    Things     |
| class_32 | 37.696 | 75.393 | 50.000 |    Things     |
| class_33 | 41.135 | 71.101 | 57.854 |    Things     |
[07/23 09:50:30] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[07/23 09:50:30] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[07/23 09:50:30] d2.evaluation.testing INFO: copypaste: 53.4838,80.7599,65.0584,44.7131,80.5573,55.7252,59.8625,80.9072,71.8461,96.9694,97.2712,99.6898,74.0187,83.9615,88.1579,86.9555,89.3303,97.3415,16.9868,77.8562,21.8182,21.1513,75.3193,28.0822,40.5165,63.1122,64.1975,43.9554,69.6678,63.0928,62.9223,75.9351,82.8633,89.1555,89.7092,99.3827,37.6251,76.2002,49.3766,88.2307,91.6161,96.3048,50.2531,76.4867,65.7017,41.0606,74.0958,55.4156,64.5186,82.7522,77.9661,48.0964,86.7827,55.4217,60.9486,90.3721,67.4419,13.9960,87.4752,16.0000,37.6963,75.3927,50.0000,41.1349,71.1008,57.8544
