[10/18 08:31:20] detectron2 INFO: Rank of current process: 0. World size: 1
[10/18 08:31:21] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/18 08:31:21] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_008_19_3000_adapter_decoder.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/18 08:31:21] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_008_19_3000_adapter_decoder.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/18 08:31:21] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/18 08:31:21] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder/config.yaml
[10/18 08:31:21] d2.utils.env INFO: Using a generated random seed 22125922
[10/18 08:31:25] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
  (decoder_adapter_res4): DecoderAdapter(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (conv2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
    (norm1): LayerNorm((256, 1, 1), eps=1e-05, elementwise_affine=True)
    (norm2): LayerNorm((1024, 1, 1), eps=1e-05, elementwise_affine=True)
    (relu): ReLU()
  )
)
[10/18 08:31:25] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/18 08:31:25] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/18 08:31:25] d2.data.build INFO: Using training sampler TrainingSampler
[10/18 08:31:25] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/18 08:31:25] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/18 08:31:25] d2.data.common INFO: Serialized dataset takes 2.16 MiB
[10/18 08:31:25] d2.data.build INFO: Making batched data loader with batch_size=8
[10/18 08:31:25] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/18 08:31:25] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[10/18 08:31:25] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[10/18 08:31:26] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/18 08:31:26] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[34mdecoder_adapter_res4.conv1.{bias, weight}[0m
[34mdecoder_adapter_res4.conv2.{bias, weight}[0m
[34mdecoder_adapter_res4.norm1.{bias, weight}[0m
[34mdecoder_adapter_res4.norm2.{bias, weight}[0m
[10/18 08:31:26] d2.engine.train_loop INFO: Starting training from iteration 0
[10/18 08:31:27] d2.engine.train_loop ERROR: Exception during training:
Traceback (most recent call last):
  File "/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2/engine/train_loop.py", line 155, in train
    self.run_step()
  File "/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2/engine/defaults.py", line 498, in run_step
    self._trainer.run_step()
  File "/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2/engine/train_loop.py", line 494, in run_step
    loss_dict = self.model(data)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip/fcclip.py", line 341, in forward
    features['res4'] = self.decoder_adapter_res4(res4_features)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip/fcclip.py", line 59, in forward
    x = self.norm1(x)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/modules/normalization.py", line 202, in forward
    return F.layer_norm(
  File "/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch/nn/functional.py", line 2576, in layer_norm
    return torch.layer_norm(input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: Given normalized_shape=[256, 1, 1], expected input with shape [*, 256, 1, 1], but got input of size[8, 256, 42, 84]
[10/18 08:31:27] d2.engine.hooks INFO: Total training time: 0:00:01 (0:00:00 on hooks)
[10/18 08:31:27] d2.utils.events INFO:  iter: 0       lr: N/A  max_mem: 1550M
[10/18 08:35:29] detectron2 INFO: Rank of current process: 0. World size: 1
[10/18 08:35:30] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/18 08:35:30] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_008_19_3000_adapter_decoder.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/18 08:35:30] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_008_19_3000_adapter_decoder.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/18 08:35:30] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/18 08:35:30] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder/config.yaml
[10/18 08:35:30] d2.utils.env INFO: Using a generated random seed 30840864
[10/18 08:35:33] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
  (decoder_adapter_res4): DecoderAdapter(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
    (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
)
[10/18 08:35:33] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/18 08:35:33] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/18 08:35:33] d2.data.build INFO: Using training sampler TrainingSampler
[10/18 08:35:33] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/18 08:35:33] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/18 08:35:33] d2.data.common INFO: Serialized dataset takes 2.16 MiB
[10/18 08:35:33] d2.data.build INFO: Making batched data loader with batch_size=8
[10/18 08:35:33] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/18 08:35:33] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[10/18 08:35:33] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[10/18 08:35:33] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/18 08:35:33] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[34mdecoder_adapter_res4.bn1.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res4.bn2.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res4.conv1.{bias, weight}[0m
[34mdecoder_adapter_res4.conv2.{bias, weight}[0m
[10/18 08:35:33] d2.engine.train_loop INFO: Starting training from iteration 0
[10/18 08:35:54] d2.utils.events INFO:  eta: 0:44:44  iter: 19  total_loss: 27.32  loss_ce: 0.5497  loss_mask: 0.6895  loss_dice: 1.453  loss_ce_0: 0.5947  loss_mask_0: 0.7585  loss_dice_0: 1.679  loss_ce_1: 0.5655  loss_mask_1: 0.729  loss_dice_1: 1.59  loss_ce_2: 0.5748  loss_mask_2: 0.7184  loss_dice_2: 1.545  loss_ce_3: 0.5646  loss_mask_3: 0.7049  loss_dice_3: 1.504  loss_ce_4: 0.5338  loss_mask_4: 0.6928  loss_dice_4: 1.506  loss_ce_5: 0.5189  loss_mask_5: 0.6845  loss_dice_5: 1.496  loss_ce_6: 0.5352  loss_mask_6: 0.676  loss_dice_6: 1.445  loss_ce_7: 0.5254  loss_mask_7: 0.6839  loss_dice_7: 1.486  loss_ce_8: 0.5271  loss_mask_8: 0.6905  loss_dice_8: 1.489    time: 0.9099  last_time: 0.9047  data_time: 0.0620  last_data_time: 0.0312   lr: 0.0001  max_mem: 30044M
[10/18 08:36:13] d2.utils.events INFO:  eta: 0:45:03  iter: 39  total_loss: 21.37  loss_ce: 0.2522  loss_mask: 0.5419  loss_dice: 1.28  loss_ce_0: 0.3047  loss_mask_0: 0.5773  loss_dice_0: 1.508  loss_ce_1: 0.3364  loss_mask_1: 0.5566  loss_dice_1: 1.395  loss_ce_2: 0.3439  loss_mask_2: 0.5507  loss_dice_2: 1.338  loss_ce_3: 0.3173  loss_mask_3: 0.5457  loss_dice_3: 1.291  loss_ce_4: 0.2772  loss_mask_4: 0.5506  loss_dice_4: 1.335  loss_ce_5: 0.307  loss_mask_5: 0.5429  loss_dice_5: 1.316  loss_ce_6: 0.2857  loss_mask_6: 0.534  loss_dice_6: 1.291  loss_ce_7: 0.267  loss_mask_7: 0.537  loss_dice_7: 1.296  loss_ce_8: 0.2625  loss_mask_8: 0.5376  loss_dice_8: 1.308    time: 0.9164  last_time: 0.9263  data_time: 0.0351  last_data_time: 0.0311   lr: 0.0001  max_mem: 30045M
[10/18 08:36:31] d2.utils.events INFO:  eta: 0:44:51  iter: 59  total_loss: 20.84  loss_ce: 0.2641  loss_mask: 0.5027  loss_dice: 1.218  loss_ce_0: 0.2889  loss_mask_0: 0.5279  loss_dice_0: 1.42  loss_ce_1: 0.3156  loss_mask_1: 0.5146  loss_dice_1: 1.355  loss_ce_2: 0.3102  loss_mask_2: 0.5062  loss_dice_2: 1.288  loss_ce_3: 0.2945  loss_mask_3: 0.5143  loss_dice_3: 1.234  loss_ce_4: 0.3003  loss_mask_4: 0.5161  loss_dice_4: 1.256  loss_ce_5: 0.2711  loss_mask_5: 0.5183  loss_dice_5: 1.254  loss_ce_6: 0.2806  loss_mask_6: 0.5078  loss_dice_6: 1.244  loss_ce_7: 0.2745  loss_mask_7: 0.5162  loss_dice_7: 1.245  loss_ce_8: 0.2443  loss_mask_8: 0.5067  loss_dice_8: 1.22    time: 0.9208  last_time: 0.9777  data_time: 0.0335  last_data_time: 0.0317   lr: 0.0001  max_mem: 30045M
[10/18 08:36:50] d2.utils.events INFO:  eta: 0:44:51  iter: 79  total_loss: 20.08  loss_ce: 0.2365  loss_mask: 0.4837  loss_dice: 1.219  loss_ce_0: 0.2364  loss_mask_0: 0.5227  loss_dice_0: 1.425  loss_ce_1: 0.2867  loss_mask_1: 0.5059  loss_dice_1: 1.319  loss_ce_2: 0.3096  loss_mask_2: 0.4966  loss_dice_2: 1.267  loss_ce_3: 0.2833  loss_mask_3: 0.4836  loss_dice_3: 1.234  loss_ce_4: 0.285  loss_mask_4: 0.4924  loss_dice_4: 1.241  loss_ce_5: 0.2597  loss_mask_5: 0.4888  loss_dice_5: 1.211  loss_ce_6: 0.2599  loss_mask_6: 0.4965  loss_dice_6: 1.237  loss_ce_7: 0.243  loss_mask_7: 0.4983  loss_dice_7: 1.227  loss_ce_8: 0.2392  loss_mask_8: 0.4897  loss_dice_8: 1.241    time: 0.9240  last_time: 0.9379  data_time: 0.0322  last_data_time: 0.0404   lr: 0.0001  max_mem: 30045M
[10/18 08:37:09] d2.utils.events INFO:  eta: 0:44:43  iter: 99  total_loss: 19.39  loss_ce: 0.2482  loss_mask: 0.4419  loss_dice: 1.184  loss_ce_0: 0.2373  loss_mask_0: 0.4736  loss_dice_0: 1.337  loss_ce_1: 0.2986  loss_mask_1: 0.4638  loss_dice_1: 1.269  loss_ce_2: 0.2733  loss_mask_2: 0.4485  loss_dice_2: 1.218  loss_ce_3: 0.2751  loss_mask_3: 0.4515  loss_dice_3: 1.193  loss_ce_4: 0.2497  loss_mask_4: 0.4461  loss_dice_4: 1.178  loss_ce_5: 0.2054  loss_mask_5: 0.4416  loss_dice_5: 1.179  loss_ce_6: 0.2368  loss_mask_6: 0.4466  loss_dice_6: 1.165  loss_ce_7: 0.2404  loss_mask_7: 0.4473  loss_dice_7: 1.2  loss_ce_8: 0.2347  loss_mask_8: 0.439  loss_dice_8: 1.165    time: 0.9287  last_time: 0.9385  data_time: 0.0329  last_data_time: 0.0384   lr: 0.0001  max_mem: 30045M
[10/18 08:37:28] d2.utils.events INFO:  eta: 0:44:27  iter: 119  total_loss: 19.07  loss_ce: 0.2265  loss_mask: 0.4781  loss_dice: 1.129  loss_ce_0: 0.2007  loss_mask_0: 0.5372  loss_dice_0: 1.289  loss_ce_1: 0.2834  loss_mask_1: 0.5151  loss_dice_1: 1.219  loss_ce_2: 0.2541  loss_mask_2: 0.4917  loss_dice_2: 1.169  loss_ce_3: 0.259  loss_mask_3: 0.4839  loss_dice_3: 1.183  loss_ce_4: 0.235  loss_mask_4: 0.4885  loss_dice_4: 1.157  loss_ce_5: 0.2233  loss_mask_5: 0.4844  loss_dice_5: 1.203  loss_ce_6: 0.2404  loss_mask_6: 0.4814  loss_dice_6: 1.165  loss_ce_7: 0.2402  loss_mask_7: 0.4787  loss_dice_7: 1.152  loss_ce_8: 0.2311  loss_mask_8: 0.4778  loss_dice_8: 1.146    time: 0.9290  last_time: 0.9347  data_time: 0.0362  last_data_time: 0.0372   lr: 0.0001  max_mem: 30045M
[10/18 08:37:46] d2.utils.events INFO:  eta: 0:44:09  iter: 139  total_loss: 19.37  loss_ce: 0.2192  loss_mask: 0.4902  loss_dice: 1.134  loss_ce_0: 0.2426  loss_mask_0: 0.5392  loss_dice_0: 1.306  loss_ce_1: 0.2791  loss_mask_1: 0.5057  loss_dice_1: 1.217  loss_ce_2: 0.281  loss_mask_2: 0.4928  loss_dice_2: 1.19  loss_ce_3: 0.2872  loss_mask_3: 0.4926  loss_dice_3: 1.148  loss_ce_4: 0.2655  loss_mask_4: 0.4817  loss_dice_4: 1.16  loss_ce_5: 0.2677  loss_mask_5: 0.4831  loss_dice_5: 1.147  loss_ce_6: 0.2407  loss_mask_6: 0.4937  loss_dice_6: 1.125  loss_ce_7: 0.2276  loss_mask_7: 0.4925  loss_dice_7: 1.128  loss_ce_8: 0.2305  loss_mask_8: 0.4886  loss_dice_8: 1.13    time: 0.9280  last_time: 0.9179  data_time: 0.0344  last_data_time: 0.0306   lr: 0.0001  max_mem: 30045M
[10/18 08:38:05] d2.utils.events INFO:  eta: 0:43:48  iter: 159  total_loss: 18.27  loss_ce: 0.2237  loss_mask: 0.5062  loss_dice: 1.113  loss_ce_0: 0.1893  loss_mask_0: 0.537  loss_dice_0: 1.27  loss_ce_1: 0.2801  loss_mask_1: 0.5189  loss_dice_1: 1.126  loss_ce_2: 0.2235  loss_mask_2: 0.5033  loss_dice_2: 1.119  loss_ce_3: 0.2126  loss_mask_3: 0.5159  loss_dice_3: 1.104  loss_ce_4: 0.2219  loss_mask_4: 0.5017  loss_dice_4: 1.107  loss_ce_5: 0.1988  loss_mask_5: 0.4985  loss_dice_5: 1.102  loss_ce_6: 0.2139  loss_mask_6: 0.5038  loss_dice_6: 1.087  loss_ce_7: 0.1957  loss_mask_7: 0.5037  loss_dice_7: 1.093  loss_ce_8: 0.2128  loss_mask_8: 0.5042  loss_dice_8: 1.122    time: 0.9261  last_time: 0.8998  data_time: 0.0326  last_data_time: 0.0389   lr: 0.0001  max_mem: 30045M
[10/18 08:38:23] d2.utils.events INFO:  eta: 0:43:29  iter: 179  total_loss: 17.99  loss_ce: 0.2375  loss_mask: 0.4535  loss_dice: 1.102  loss_ce_0: 0.1906  loss_mask_0: 0.493  loss_dice_0: 1.249  loss_ce_1: 0.2508  loss_mask_1: 0.4722  loss_dice_1: 1.174  loss_ce_2: 0.2322  loss_mask_2: 0.4466  loss_dice_2: 1.142  loss_ce_3: 0.2343  loss_mask_3: 0.4442  loss_dice_3: 1.146  loss_ce_4: 0.2286  loss_mask_4: 0.4532  loss_dice_4: 1.138  loss_ce_5: 0.2072  loss_mask_5: 0.4534  loss_dice_5: 1.134  loss_ce_6: 0.2145  loss_mask_6: 0.4501  loss_dice_6: 1.107  loss_ce_7: 0.2056  loss_mask_7: 0.454  loss_dice_7: 1.103  loss_ce_8: 0.2002  loss_mask_8: 0.4589  loss_dice_8: 1.105    time: 0.9261  last_time: 0.9474  data_time: 0.0340  last_data_time: 0.0312   lr: 0.0001  max_mem: 30048M
[10/18 08:38:42] d2.utils.events INFO:  eta: 0:43:14  iter: 199  total_loss: 18.52  loss_ce: 0.2357  loss_mask: 0.4557  loss_dice: 1.103  loss_ce_0: 0.2083  loss_mask_0: 0.5146  loss_dice_0: 1.286  loss_ce_1: 0.2702  loss_mask_1: 0.4828  loss_dice_1: 1.171  loss_ce_2: 0.2484  loss_mask_2: 0.4786  loss_dice_2: 1.137  loss_ce_3: 0.2461  loss_mask_3: 0.4627  loss_dice_3: 1.125  loss_ce_4: 0.2484  loss_mask_4: 0.465  loss_dice_4: 1.103  loss_ce_5: 0.2292  loss_mask_5: 0.4518  loss_dice_5: 1.127  loss_ce_6: 0.2374  loss_mask_6: 0.4505  loss_dice_6: 1.095  loss_ce_7: 0.219  loss_mask_7: 0.4606  loss_dice_7: 1.08  loss_ce_8: 0.2323  loss_mask_8: 0.4516  loss_dice_8: 1.092    time: 0.9294  last_time: 0.9875  data_time: 0.0318  last_data_time: 0.0321   lr: 0.0001  max_mem: 30048M
[10/18 08:39:01] d2.utils.events INFO:  eta: 0:42:57  iter: 219  total_loss: 18.15  loss_ce: 0.2199  loss_mask: 0.4601  loss_dice: 1.055  loss_ce_0: 0.1996  loss_mask_0: 0.5091  loss_dice_0: 1.229  loss_ce_1: 0.2418  loss_mask_1: 0.4857  loss_dice_1: 1.162  loss_ce_2: 0.2368  loss_mask_2: 0.4649  loss_dice_2: 1.148  loss_ce_3: 0.2434  loss_mask_3: 0.468  loss_dice_3: 1.117  loss_ce_4: 0.2345  loss_mask_4: 0.4529  loss_dice_4: 1.097  loss_ce_5: 0.2278  loss_mask_5: 0.4575  loss_dice_5: 1.1  loss_ce_6: 0.1943  loss_mask_6: 0.4628  loss_dice_6: 1.07  loss_ce_7: 0.2114  loss_mask_7: 0.4617  loss_dice_7: 1.07  loss_ce_8: 0.2118  loss_mask_8: 0.4689  loss_dice_8: 1.096    time: 0.9314  last_time: 0.9486  data_time: 0.0312  last_data_time: 0.0305   lr: 0.0001  max_mem: 30048M
[10/18 08:39:20] d2.utils.events INFO:  eta: 0:42:39  iter: 239  total_loss: 17.07  loss_ce: 0.2195  loss_mask: 0.4051  loss_dice: 1.055  loss_ce_0: 0.2034  loss_mask_0: 0.4661  loss_dice_0: 1.187  loss_ce_1: 0.2386  loss_mask_1: 0.4412  loss_dice_1: 1.153  loss_ce_2: 0.2474  loss_mask_2: 0.4245  loss_dice_2: 1.097  loss_ce_3: 0.2329  loss_mask_3: 0.4099  loss_dice_3: 1.081  loss_ce_4: 0.2259  loss_mask_4: 0.4092  loss_dice_4: 1.074  loss_ce_5: 0.2104  loss_mask_5: 0.4045  loss_dice_5: 1.053  loss_ce_6: 0.2395  loss_mask_6: 0.4074  loss_dice_6: 1.041  loss_ce_7: 0.213  loss_mask_7: 0.4026  loss_dice_7: 1.06  loss_ce_8: 0.243  loss_mask_8: 0.4004  loss_dice_8: 1.059    time: 0.9325  last_time: 0.9448  data_time: 0.0335  last_data_time: 0.0313   lr: 0.0001  max_mem: 30048M
[10/18 08:39:39] d2.utils.events INFO:  eta: 0:42:22  iter: 259  total_loss: 18.36  loss_ce: 0.2231  loss_mask: 0.4528  loss_dice: 1.099  loss_ce_0: 0.1883  loss_mask_0: 0.5108  loss_dice_0: 1.271  loss_ce_1: 0.2477  loss_mask_1: 0.4768  loss_dice_1: 1.217  loss_ce_2: 0.2359  loss_mask_2: 0.4725  loss_dice_2: 1.148  loss_ce_3: 0.2626  loss_mask_3: 0.4499  loss_dice_3: 1.112  loss_ce_4: 0.2432  loss_mask_4: 0.4509  loss_dice_4: 1.117  loss_ce_5: 0.2249  loss_mask_5: 0.4502  loss_dice_5: 1.1  loss_ce_6: 0.2312  loss_mask_6: 0.452  loss_dice_6: 1.109  loss_ce_7: 0.2304  loss_mask_7: 0.4552  loss_dice_7: 1.11  loss_ce_8: 0.2244  loss_mask_8: 0.4522  loss_dice_8: 1.096    time: 0.9320  last_time: 0.9443  data_time: 0.0375  last_data_time: 0.0411   lr: 0.0001  max_mem: 30048M
[10/18 08:39:57] d2.utils.events INFO:  eta: 0:42:01  iter: 279  total_loss: 16.94  loss_ce: 0.1946  loss_mask: 0.4167  loss_dice: 1.04  loss_ce_0: 0.1865  loss_mask_0: 0.4418  loss_dice_0: 1.181  loss_ce_1: 0.2132  loss_mask_1: 0.4265  loss_dice_1: 1.111  loss_ce_2: 0.2379  loss_mask_2: 0.4213  loss_dice_2: 1.059  loss_ce_3: 0.2472  loss_mask_3: 0.4158  loss_dice_3: 1.035  loss_ce_4: 0.2318  loss_mask_4: 0.4143  loss_dice_4: 1.039  loss_ce_5: 0.2131  loss_mask_5: 0.411  loss_dice_5: 1.024  loss_ce_6: 0.2256  loss_mask_6: 0.411  loss_dice_6: 1.024  loss_ce_7: 0.2019  loss_mask_7: 0.414  loss_dice_7: 1.019  loss_ce_8: 0.2144  loss_mask_8: 0.4106  loss_dice_8: 1.035    time: 0.9311  last_time: 0.8957  data_time: 0.0348  last_data_time: 0.0315   lr: 0.0001  max_mem: 30048M
[10/18 08:40:16] d2.utils.events INFO:  eta: 0:41:41  iter: 299  total_loss: 17.83  loss_ce: 0.2639  loss_mask: 0.4387  loss_dice: 1.068  loss_ce_0: 0.189  loss_mask_0: 0.4697  loss_dice_0: 1.222  loss_ce_1: 0.2423  loss_mask_1: 0.4589  loss_dice_1: 1.157  loss_ce_2: 0.2463  loss_mask_2: 0.4487  loss_dice_2: 1.118  loss_ce_3: 0.2678  loss_mask_3: 0.448  loss_dice_3: 1.098  loss_ce_4: 0.2413  loss_mask_4: 0.4439  loss_dice_4: 1.099  loss_ce_5: 0.2496  loss_mask_5: 0.4414  loss_dice_5: 1.104  loss_ce_6: 0.2235  loss_mask_6: 0.4458  loss_dice_6: 1.085  loss_ce_7: 0.2573  loss_mask_7: 0.4477  loss_dice_7: 1.092  loss_ce_8: 0.2557  loss_mask_8: 0.438  loss_dice_8: 1.094    time: 0.9297  last_time: 0.8997  data_time: 0.0376  last_data_time: 0.0326   lr: 0.0001  max_mem: 30048M
[10/18 08:40:34] d2.utils.events INFO:  eta: 0:41:22  iter: 319  total_loss: 17.67  loss_ce: 0.2376  loss_mask: 0.4585  loss_dice: 1.072  loss_ce_0: 0.2045  loss_mask_0: 0.4924  loss_dice_0: 1.226  loss_ce_1: 0.2147  loss_mask_1: 0.4643  loss_dice_1: 1.143  loss_ce_2: 0.2155  loss_mask_2: 0.4697  loss_dice_2: 1.106  loss_ce_3: 0.2558  loss_mask_3: 0.4644  loss_dice_3: 1.083  loss_ce_4: 0.2138  loss_mask_4: 0.4679  loss_dice_4: 1.112  loss_ce_5: 0.2218  loss_mask_5: 0.4575  loss_dice_5: 1.064  loss_ce_6: 0.2125  loss_mask_6: 0.4585  loss_dice_6: 1.078  loss_ce_7: 0.2326  loss_mask_7: 0.4597  loss_dice_7: 1.089  loss_ce_8: 0.2267  loss_mask_8: 0.4582  loss_dice_8: 1.078    time: 0.9296  last_time: 0.9258  data_time: 0.0359  last_data_time: 0.0397   lr: 0.0001  max_mem: 30048M
[10/18 08:40:53] d2.utils.events INFO:  eta: 0:41:04  iter: 339  total_loss: 17.84  loss_ce: 0.2296  loss_mask: 0.4248  loss_dice: 1.078  loss_ce_0: 0.2037  loss_mask_0: 0.4689  loss_dice_0: 1.219  loss_ce_1: 0.2416  loss_mask_1: 0.4322  loss_dice_1: 1.193  loss_ce_2: 0.266  loss_mask_2: 0.422  loss_dice_2: 1.13  loss_ce_3: 0.2371  loss_mask_3: 0.4109  loss_dice_3: 1.097  loss_ce_4: 0.206  loss_mask_4: 0.4181  loss_dice_4: 1.111  loss_ce_5: 0.2213  loss_mask_5: 0.4165  loss_dice_5: 1.111  loss_ce_6: 0.2215  loss_mask_6: 0.419  loss_dice_6: 1.09  loss_ce_7: 0.2262  loss_mask_7: 0.4229  loss_dice_7: 1.084  loss_ce_8: 0.204  loss_mask_8: 0.4201  loss_dice_8: 1.099    time: 0.9301  last_time: 0.9818  data_time: 0.0348  last_data_time: 0.0294   lr: 0.0001  max_mem: 30048M
[10/18 08:41:12] d2.utils.events INFO:  eta: 0:40:46  iter: 359  total_loss: 17.79  loss_ce: 0.2178  loss_mask: 0.4265  loss_dice: 1.088  loss_ce_0: 0.2156  loss_mask_0: 0.4631  loss_dice_0: 1.203  loss_ce_1: 0.2377  loss_mask_1: 0.4523  loss_dice_1: 1.168  loss_ce_2: 0.2729  loss_mask_2: 0.4275  loss_dice_2: 1.133  loss_ce_3: 0.2619  loss_mask_3: 0.428  loss_dice_3: 1.096  loss_ce_4: 0.2605  loss_mask_4: 0.4287  loss_dice_4: 1.098  loss_ce_5: 0.2298  loss_mask_5: 0.4247  loss_dice_5: 1.112  loss_ce_6: 0.2427  loss_mask_6: 0.4296  loss_dice_6: 1.085  loss_ce_7: 0.2238  loss_mask_7: 0.4256  loss_dice_7: 1.081  loss_ce_8: 0.2518  loss_mask_8: 0.4301  loss_dice_8: 1.082    time: 0.9305  last_time: 0.9247  data_time: 0.0341  last_data_time: 0.0314   lr: 0.0001  max_mem: 30048M
[10/18 08:41:31] d2.utils.events INFO:  eta: 0:40:28  iter: 379  total_loss: 17.78  loss_ce: 0.2227  loss_mask: 0.4081  loss_dice: 1.091  loss_ce_0: 0.2324  loss_mask_0: 0.4456  loss_dice_0: 1.209  loss_ce_1: 0.2581  loss_mask_1: 0.4382  loss_dice_1: 1.153  loss_ce_2: 0.2637  loss_mask_2: 0.422  loss_dice_2: 1.089  loss_ce_3: 0.271  loss_mask_3: 0.4106  loss_dice_3: 1.095  loss_ce_4: 0.2124  loss_mask_4: 0.4179  loss_dice_4: 1.113  loss_ce_5: 0.2157  loss_mask_5: 0.4184  loss_dice_5: 1.083  loss_ce_6: 0.2549  loss_mask_6: 0.411  loss_dice_6: 1.072  loss_ce_7: 0.2291  loss_mask_7: 0.407  loss_dice_7: 1.099  loss_ce_8: 0.2174  loss_mask_8: 0.4074  loss_dice_8: 1.113    time: 0.9304  last_time: 0.9340  data_time: 0.0343  last_data_time: 0.0391   lr: 0.0001  max_mem: 30048M
[10/18 08:41:49] d2.utils.events INFO:  eta: 0:40:10  iter: 399  total_loss: 17.15  loss_ce: 0.2129  loss_mask: 0.3964  loss_dice: 1.029  loss_ce_0: 0.1682  loss_mask_0: 0.4335  loss_dice_0: 1.152  loss_ce_1: 0.2271  loss_mask_1: 0.4192  loss_dice_1: 1.09  loss_ce_2: 0.2214  loss_mask_2: 0.4112  loss_dice_2: 1.089  loss_ce_3: 0.2179  loss_mask_3: 0.4083  loss_dice_3: 1.071  loss_ce_4: 0.217  loss_mask_4: 0.4079  loss_dice_4: 1.065  loss_ce_5: 0.1961  loss_mask_5: 0.3969  loss_dice_5: 1.048  loss_ce_6: 0.1759  loss_mask_6: 0.4077  loss_dice_6: 1.03  loss_ce_7: 0.1883  loss_mask_7: 0.4075  loss_dice_7: 1.048  loss_ce_8: 0.2056  loss_mask_8: 0.3988  loss_dice_8: 1.039    time: 0.9306  last_time: 0.9194  data_time: 0.0357  last_data_time: 0.0298   lr: 0.0001  max_mem: 30048M
[10/18 08:42:08] d2.utils.events INFO:  eta: 0:39:53  iter: 419  total_loss: 16.69  loss_ce: 0.2139  loss_mask: 0.416  loss_dice: 0.9771  loss_ce_0: 0.184  loss_mask_0: 0.436  loss_dice_0: 1.127  loss_ce_1: 0.2514  loss_mask_1: 0.426  loss_dice_1: 1.048  loss_ce_2: 0.2374  loss_mask_2: 0.4197  loss_dice_2: 1.042  loss_ce_3: 0.2564  loss_mask_3: 0.4246  loss_dice_3: 1.022  loss_ce_4: 0.2205  loss_mask_4: 0.4121  loss_dice_4: 1.008  loss_ce_5: 0.2381  loss_mask_5: 0.4218  loss_dice_5: 1.008  loss_ce_6: 0.2139  loss_mask_6: 0.4173  loss_dice_6: 0.9968  loss_ce_7: 0.2197  loss_mask_7: 0.4229  loss_dice_7: 0.9951  loss_ce_8: 0.2237  loss_mask_8: 0.4122  loss_dice_8: 0.9794    time: 0.9308  last_time: 0.9416  data_time: 0.0348  last_data_time: 0.0392   lr: 0.0001  max_mem: 30048M
[10/18 08:42:27] d2.utils.events INFO:  eta: 0:39:36  iter: 439  total_loss: 17.04  loss_ce: 0.1914  loss_mask: 0.4361  loss_dice: 1.045  loss_ce_0: 0.1822  loss_mask_0: 0.4604  loss_dice_0: 1.201  loss_ce_1: 0.2029  loss_mask_1: 0.4459  loss_dice_1: 1.126  loss_ce_2: 0.1902  loss_mask_2: 0.4475  loss_dice_2: 1.095  loss_ce_3: 0.2118  loss_mask_3: 0.4485  loss_dice_3: 1.054  loss_ce_4: 0.1722  loss_mask_4: 0.4437  loss_dice_4: 1.054  loss_ce_5: 0.1943  loss_mask_5: 0.4382  loss_dice_5: 1.077  loss_ce_6: 0.1819  loss_mask_6: 0.4405  loss_dice_6: 1.063  loss_ce_7: 0.174  loss_mask_7: 0.434  loss_dice_7: 1.045  loss_ce_8: 0.1857  loss_mask_8: 0.4441  loss_dice_8: 1.056    time: 0.9312  last_time: 0.9784  data_time: 0.0355  last_data_time: 0.0308   lr: 0.0001  max_mem: 30048M
[10/18 08:42:46] d2.utils.events INFO:  eta: 0:39:20  iter: 459  total_loss: 15.78  loss_ce: 0.185  loss_mask: 0.3852  loss_dice: 0.9638  loss_ce_0: 0.1528  loss_mask_0: 0.4231  loss_dice_0: 1.12  loss_ce_1: 0.1917  loss_mask_1: 0.4013  loss_dice_1: 1.006  loss_ce_2: 0.2082  loss_mask_2: 0.3944  loss_dice_2: 1.01  loss_ce_3: 0.2  loss_mask_3: 0.394  loss_dice_3: 1.002  loss_ce_4: 0.1887  loss_mask_4: 0.3955  loss_dice_4: 0.9902  loss_ce_5: 0.18  loss_mask_5: 0.3924  loss_dice_5: 0.9936  loss_ce_6: 0.1739  loss_mask_6: 0.3859  loss_dice_6: 0.9665  loss_ce_7: 0.1965  loss_mask_7: 0.3844  loss_dice_7: 0.9637  loss_ce_8: 0.1769  loss_mask_8: 0.3871  loss_dice_8: 0.9496    time: 0.9321  last_time: 0.9416  data_time: 0.0329  last_data_time: 0.0350   lr: 0.0001  max_mem: 30048M
[10/18 08:43:05] d2.utils.events INFO:  eta: 0:39:02  iter: 479  total_loss: 16.59  loss_ce: 0.1902  loss_mask: 0.3875  loss_dice: 1.018  loss_ce_0: 0.1614  loss_mask_0: 0.4085  loss_dice_0: 1.188  loss_ce_1: 0.2069  loss_mask_1: 0.4032  loss_dice_1: 1.106  loss_ce_2: 0.2094  loss_mask_2: 0.392  loss_dice_2: 1.084  loss_ce_3: 0.2272  loss_mask_3: 0.3927  loss_dice_3: 1.068  loss_ce_4: 0.2136  loss_mask_4: 0.3919  loss_dice_4: 1.051  loss_ce_5: 0.1895  loss_mask_5: 0.3858  loss_dice_5: 1.036  loss_ce_6: 0.1804  loss_mask_6: 0.3874  loss_dice_6: 1.025  loss_ce_7: 0.194  loss_mask_7: 0.3795  loss_dice_7: 1.034  loss_ce_8: 0.1822  loss_mask_8: 0.3819  loss_dice_8: 1.051    time: 0.9322  last_time: 0.9826  data_time: 0.0347  last_data_time: 0.0308   lr: 0.0001  max_mem: 30048M
[10/18 08:43:23] d2.utils.events INFO:  eta: 0:38:42  iter: 499  total_loss: 16.77  loss_ce: 0.1841  loss_mask: 0.4019  loss_dice: 0.9945  loss_ce_0: 0.1704  loss_mask_0: 0.4512  loss_dice_0: 1.132  loss_ce_1: 0.1911  loss_mask_1: 0.4397  loss_dice_1: 1.099  loss_ce_2: 0.2108  loss_mask_2: 0.4151  loss_dice_2: 1.054  loss_ce_3: 0.2101  loss_mask_3: 0.4155  loss_dice_3: 1.016  loss_ce_4: 0.1939  loss_mask_4: 0.4112  loss_dice_4: 1.011  loss_ce_5: 0.1748  loss_mask_5: 0.4169  loss_dice_5: 1.016  loss_ce_6: 0.1739  loss_mask_6: 0.4137  loss_dice_6: 1.008  loss_ce_7: 0.189  loss_mask_7: 0.4074  loss_dice_7: 1.009  loss_ce_8: 0.1709  loss_mask_8: 0.4022  loss_dice_8: 0.9877    time: 0.9317  last_time: 0.9037  data_time: 0.0331  last_data_time: 0.0318   lr: 0.0001  max_mem: 30048M
[10/18 08:43:42] d2.utils.events INFO:  eta: 0:38:25  iter: 519  total_loss: 16.35  loss_ce: 0.1913  loss_mask: 0.4047  loss_dice: 0.9958  loss_ce_0: 0.1934  loss_mask_0: 0.4608  loss_dice_0: 1.14  loss_ce_1: 0.2024  loss_mask_1: 0.4351  loss_dice_1: 1.077  loss_ce_2: 0.2041  loss_mask_2: 0.4098  loss_dice_2: 1.058  loss_ce_3: 0.1855  loss_mask_3: 0.4172  loss_dice_3: 1.036  loss_ce_4: 0.2096  loss_mask_4: 0.407  loss_dice_4: 1.011  loss_ce_5: 0.1922  loss_mask_5: 0.4017  loss_dice_5: 1.007  loss_ce_6: 0.2017  loss_mask_6: 0.4029  loss_dice_6: 1.017  loss_ce_7: 0.2106  loss_mask_7: 0.4027  loss_dice_7: 1.005  loss_ce_8: 0.2039  loss_mask_8: 0.4037  loss_dice_8: 0.9977    time: 0.9324  last_time: 0.9878  data_time: 0.0329  last_data_time: 0.0320   lr: 0.0001  max_mem: 30048M
[10/18 08:44:01] d2.utils.events INFO:  eta: 0:38:05  iter: 539  total_loss: 16.65  loss_ce: 0.176  loss_mask: 0.4057  loss_dice: 0.9762  loss_ce_0: 0.1473  loss_mask_0: 0.4589  loss_dice_0: 1.122  loss_ce_1: 0.2006  loss_mask_1: 0.4333  loss_dice_1: 1.058  loss_ce_2: 0.1752  loss_mask_2: 0.4137  loss_dice_2: 1.032  loss_ce_3: 0.1995  loss_mask_3: 0.4251  loss_dice_3: 1.016  loss_ce_4: 0.175  loss_mask_4: 0.4186  loss_dice_4: 1.008  loss_ce_5: 0.1781  loss_mask_5: 0.4162  loss_dice_5: 0.996  loss_ce_6: 0.1672  loss_mask_6: 0.4089  loss_dice_6: 0.9914  loss_ce_7: 0.1625  loss_mask_7: 0.4135  loss_dice_7: 0.9912  loss_ce_8: 0.1661  loss_mask_8: 0.4074  loss_dice_8: 0.9885    time: 0.9321  last_time: 0.9226  data_time: 0.0355  last_data_time: 0.0302   lr: 0.0001  max_mem: 30048M
[10/18 08:44:20] d2.utils.events INFO:  eta: 0:37:48  iter: 559  total_loss: 16.26  loss_ce: 0.1834  loss_mask: 0.3984  loss_dice: 0.9843  loss_ce_0: 0.165  loss_mask_0: 0.4497  loss_dice_0: 1.094  loss_ce_1: 0.1991  loss_mask_1: 0.4172  loss_dice_1: 1.054  loss_ce_2: 0.1943  loss_mask_2: 0.3987  loss_dice_2: 1.023  loss_ce_3: 0.2257  loss_mask_3: 0.4029  loss_dice_3: 1.006  loss_ce_4: 0.1772  loss_mask_4: 0.4001  loss_dice_4: 1  loss_ce_5: 0.2066  loss_mask_5: 0.3967  loss_dice_5: 0.9924  loss_ce_6: 0.1566  loss_mask_6: 0.4037  loss_dice_6: 0.9736  loss_ce_7: 0.1589  loss_mask_7: 0.3992  loss_dice_7: 0.9796  loss_ce_8: 0.1541  loss_mask_8: 0.3944  loss_dice_8: 0.979    time: 0.9325  last_time: 0.9444  data_time: 0.0365  last_data_time: 0.0376   lr: 0.0001  max_mem: 30048M
[10/18 08:45:48] detectron2 INFO: Rank of current process: 0. World size: 1
[10/18 08:45:49] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[10/18 08:45:49] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_008_19_3000_adapter_decoder.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[10/18 08:45:49] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_008_19_3000_adapter_decoder.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 3000
TEST:
  EVAL_PERIOD: 3000


[10/18 08:45:49] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 3000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 3000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[10/18 08:45:49] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder/config.yaml
[10/18 08:45:49] d2.utils.env INFO: Using a generated random seed 50057519
[10/18 08:45:52] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
  (decoder_adapter_res4): DecoderAdapter(
    (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (conv2): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1))
    (bn2): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (relu): ReLU()
  )
)
[10/18 08:45:52] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[10/18 08:45:53] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[10/18 08:45:53] d2.data.build INFO: Using training sampler TrainingSampler
[10/18 08:45:53] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/18 08:45:53] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[10/18 08:45:53] d2.data.common INFO: Serialized dataset takes 2.16 MiB
[10/18 08:45:53] d2.data.build INFO: Making batched data loader with batch_size=8
[10/18 08:45:53] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[10/18 08:45:53] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[10/18 08:45:53] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[10/18 08:45:53] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[10/18 08:45:53] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[34mdecoder_adapter_res4.bn1.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res4.bn2.{bias, running_mean, running_var, weight}[0m
[34mdecoder_adapter_res4.conv1.{bias, weight}[0m
[34mdecoder_adapter_res4.conv2.{bias, weight}[0m
[10/18 08:45:53] d2.engine.train_loop INFO: Starting training from iteration 0
[10/18 08:46:14] d2.utils.events INFO:  eta: 0:45:31  iter: 19  total_loss: 28.15  loss_ce: 0.5993  loss_mask: 0.649  loss_dice: 1.477  loss_ce_0: 0.6225  loss_mask_0: 0.7298  loss_dice_0: 1.752  loss_ce_1: 0.6426  loss_mask_1: 0.6931  loss_dice_1: 1.636  loss_ce_2: 0.6189  loss_mask_2: 0.6578  loss_dice_2: 1.606  loss_ce_3: 0.6187  loss_mask_3: 0.6442  loss_dice_3: 1.546  loss_ce_4: 0.6099  loss_mask_4: 0.6466  loss_dice_4: 1.567  loss_ce_5: 0.5852  loss_mask_5: 0.6785  loss_dice_5: 1.529  loss_ce_6: 0.5972  loss_mask_6: 0.654  loss_dice_6: 1.514  loss_ce_7: 0.6174  loss_mask_7: 0.655  loss_dice_7: 1.512  loss_ce_8: 0.6018  loss_mask_8: 0.6658  loss_dice_8: 1.515    time: 0.9277  last_time: 0.9469  data_time: 0.0715  last_data_time: 0.0312   lr: 0.0001  max_mem: 30044M
[10/18 08:46:32] d2.utils.events INFO:  eta: 0:44:57  iter: 39  total_loss: 21.53  loss_ce: 0.3208  loss_mask: 0.535  loss_dice: 1.213  loss_ce_0: 0.3623  loss_mask_0: 0.578  loss_dice_0: 1.488  loss_ce_1: 0.4244  loss_mask_1: 0.5686  loss_dice_1: 1.343  loss_ce_2: 0.4018  loss_mask_2: 0.5438  loss_dice_2: 1.258  loss_ce_3: 0.3584  loss_mask_3: 0.5443  loss_dice_3: 1.22  loss_ce_4: 0.3247  loss_mask_4: 0.542  loss_dice_4: 1.238  loss_ce_5: 0.3384  loss_mask_5: 0.5447  loss_dice_5: 1.237  loss_ce_6: 0.3395  loss_mask_6: 0.5384  loss_dice_6: 1.22  loss_ce_7: 0.3297  loss_mask_7: 0.5419  loss_dice_7: 1.202  loss_ce_8: 0.3367  loss_mask_8: 0.5376  loss_dice_8: 1.208    time: 0.9263  last_time: 0.9426  data_time: 0.0326  last_data_time: 0.0416   lr: 0.0001  max_mem: 30045M
[10/18 08:46:51] d2.utils.events INFO:  eta: 0:45:09  iter: 59  total_loss: 20.36  loss_ce: 0.2111  loss_mask: 0.5201  loss_dice: 1.199  loss_ce_0: 0.2541  loss_mask_0: 0.5742  loss_dice_0: 1.402  loss_ce_1: 0.3085  loss_mask_1: 0.5428  loss_dice_1: 1.33  loss_ce_2: 0.2872  loss_mask_2: 0.5437  loss_dice_2: 1.27  loss_ce_3: 0.2665  loss_mask_3: 0.5324  loss_dice_3: 1.208  loss_ce_4: 0.237  loss_mask_4: 0.5403  loss_dice_4: 1.196  loss_ce_5: 0.2358  loss_mask_5: 0.5206  loss_dice_5: 1.209  loss_ce_6: 0.2421  loss_mask_6: 0.5247  loss_dice_6: 1.222  loss_ce_7: 0.2115  loss_mask_7: 0.5201  loss_dice_7: 1.211  loss_ce_8: 0.2063  loss_mask_8: 0.5202  loss_dice_8: 1.22    time: 0.9259  last_time: 0.8977  data_time: 0.0343  last_data_time: 0.0308   lr: 0.0001  max_mem: 30045M
[10/18 08:47:10] d2.utils.events INFO:  eta: 0:44:54  iter: 79  total_loss: 19.19  loss_ce: 0.2508  loss_mask: 0.4902  loss_dice: 1.155  loss_ce_0: 0.2499  loss_mask_0: 0.5409  loss_dice_0: 1.276  loss_ce_1: 0.2769  loss_mask_1: 0.4926  loss_dice_1: 1.248  loss_ce_2: 0.2797  loss_mask_2: 0.4933  loss_dice_2: 1.186  loss_ce_3: 0.2743  loss_mask_3: 0.486  loss_dice_3: 1.162  loss_ce_4: 0.2709  loss_mask_4: 0.4723  loss_dice_4: 1.141  loss_ce_5: 0.2608  loss_mask_5: 0.477  loss_dice_5: 1.175  loss_ce_6: 0.2785  loss_mask_6: 0.4747  loss_dice_6: 1.139  loss_ce_7: 0.2654  loss_mask_7: 0.4805  loss_dice_7: 1.15  loss_ce_8: 0.2549  loss_mask_8: 0.4738  loss_dice_8: 1.14    time: 0.9248  last_time: 0.9120  data_time: 0.0366  last_data_time: 0.0386   lr: 0.0001  max_mem: 30045M
[10/18 08:47:28] d2.utils.events INFO:  eta: 0:44:42  iter: 99  total_loss: 19.17  loss_ce: 0.2409  loss_mask: 0.4421  loss_dice: 1.162  loss_ce_0: 0.2225  loss_mask_0: 0.4896  loss_dice_0: 1.36  loss_ce_1: 0.2619  loss_mask_1: 0.4711  loss_dice_1: 1.264  loss_ce_2: 0.2639  loss_mask_2: 0.4662  loss_dice_2: 1.203  loss_ce_3: 0.2785  loss_mask_3: 0.4637  loss_dice_3: 1.166  loss_ce_4: 0.2565  loss_mask_4: 0.4593  loss_dice_4: 1.178  loss_ce_5: 0.2304  loss_mask_5: 0.4601  loss_dice_5: 1.146  loss_ce_6: 0.2329  loss_mask_6: 0.4493  loss_dice_6: 1.162  loss_ce_7: 0.253  loss_mask_7: 0.4373  loss_dice_7: 1.178  loss_ce_8: 0.2163  loss_mask_8: 0.4471  loss_dice_8: 1.154    time: 0.9248  last_time: 0.9431  data_time: 0.0344  last_data_time: 0.0307   lr: 0.0001  max_mem: 30045M
[10/18 08:47:47] d2.utils.events INFO:  eta: 0:44:29  iter: 119  total_loss: 18.9  loss_ce: 0.2772  loss_mask: 0.4706  loss_dice: 1.11  loss_ce_0: 0.2687  loss_mask_0: 0.4959  loss_dice_0: 1.259  loss_ce_1: 0.2922  loss_mask_1: 0.4774  loss_dice_1: 1.195  loss_ce_2: 0.2699  loss_mask_2: 0.4856  loss_dice_2: 1.159  loss_ce_3: 0.2921  loss_mask_3: 0.4648  loss_dice_3: 1.134  loss_ce_4: 0.2759  loss_mask_4: 0.4692  loss_dice_4: 1.134  loss_ce_5: 0.2599  loss_mask_5: 0.456  loss_dice_5: 1.116  loss_ce_6: 0.2495  loss_mask_6: 0.467  loss_dice_6: 1.125  loss_ce_7: 0.2539  loss_mask_7: 0.4645  loss_dice_7: 1.105  loss_ce_8: 0.2507  loss_mask_8: 0.4654  loss_dice_8: 1.115    time: 0.9274  last_time: 0.9874  data_time: 0.0345  last_data_time: 0.0303   lr: 0.0001  max_mem: 30045M
[10/18 08:48:06] d2.utils.events INFO:  eta: 0:44:13  iter: 139  total_loss: 18.97  loss_ce: 0.2585  loss_mask: 0.4636  loss_dice: 1.153  loss_ce_0: 0.2211  loss_mask_0: 0.5089  loss_dice_0: 1.319  loss_ce_1: 0.2907  loss_mask_1: 0.4904  loss_dice_1: 1.254  loss_ce_2: 0.2845  loss_mask_2: 0.4774  loss_dice_2: 1.215  loss_ce_3: 0.2336  loss_mask_3: 0.4652  loss_dice_3: 1.185  loss_ce_4: 0.2294  loss_mask_4: 0.4735  loss_dice_4: 1.169  loss_ce_5: 0.2228  loss_mask_5: 0.4647  loss_dice_5: 1.163  loss_ce_6: 0.2191  loss_mask_6: 0.4748  loss_dice_6: 1.16  loss_ce_7: 0.2402  loss_mask_7: 0.4688  loss_dice_7: 1.144  loss_ce_8: 0.2239  loss_mask_8: 0.4637  loss_dice_8: 1.129    time: 0.9312  last_time: 0.9633  data_time: 0.0312  last_data_time: 0.0317   lr: 0.0001  max_mem: 30045M
[10/18 08:48:25] d2.utils.events INFO:  eta: 0:44:00  iter: 159  total_loss: 18.39  loss_ce: 0.2267  loss_mask: 0.4442  loss_dice: 1.065  loss_ce_0: 0.2253  loss_mask_0: 0.5174  loss_dice_0: 1.268  loss_ce_1: 0.2528  loss_mask_1: 0.484  loss_dice_1: 1.189  loss_ce_2: 0.2587  loss_mask_2: 0.4706  loss_dice_2: 1.167  loss_ce_3: 0.2477  loss_mask_3: 0.4268  loss_dice_3: 1.119  loss_ce_4: 0.2482  loss_mask_4: 0.4243  loss_dice_4: 1.126  loss_ce_5: 0.2428  loss_mask_5: 0.4265  loss_dice_5: 1.101  loss_ce_6: 0.256  loss_mask_6: 0.4268  loss_dice_6: 1.078  loss_ce_7: 0.2477  loss_mask_7: 0.4472  loss_dice_7: 1.074  loss_ce_8: 0.2105  loss_mask_8: 0.4434  loss_dice_8: 1.096    time: 0.9345  last_time: 0.9762  data_time: 0.0318  last_data_time: 0.0314   lr: 0.0001  max_mem: 30045M
[10/18 08:48:44] d2.utils.events INFO:  eta: 0:43:42  iter: 179  total_loss: 18.51  loss_ce: 0.2114  loss_mask: 0.4279  loss_dice: 1.085  loss_ce_0: 0.1904  loss_mask_0: 0.4693  loss_dice_0: 1.27  loss_ce_1: 0.258  loss_mask_1: 0.4402  loss_dice_1: 1.199  loss_ce_2: 0.2402  loss_mask_2: 0.4368  loss_dice_2: 1.158  loss_ce_3: 0.2579  loss_mask_3: 0.4273  loss_dice_3: 1.114  loss_ce_4: 0.2454  loss_mask_4: 0.4233  loss_dice_4: 1.145  loss_ce_5: 0.2178  loss_mask_5: 0.4255  loss_dice_5: 1.105  loss_ce_6: 0.2176  loss_mask_6: 0.4273  loss_dice_6: 1.094  loss_ce_7: 0.2028  loss_mask_7: 0.4303  loss_dice_7: 1.09  loss_ce_8: 0.2242  loss_mask_8: 0.4282  loss_dice_8: 1.105    time: 0.9343  last_time: 0.9320  data_time: 0.0339  last_data_time: 0.0383   lr: 0.0001  max_mem: 30048M
[10/18 08:49:03] d2.utils.events INFO:  eta: 0:43:22  iter: 199  total_loss: 18.04  loss_ce: 0.205  loss_mask: 0.4442  loss_dice: 1.06  loss_ce_0: 0.2227  loss_mask_0: 0.471  loss_dice_0: 1.197  loss_ce_1: 0.2547  loss_mask_1: 0.4558  loss_dice_1: 1.143  loss_ce_2: 0.254  loss_mask_2: 0.4563  loss_dice_2: 1.124  loss_ce_3: 0.2387  loss_mask_3: 0.4438  loss_dice_3: 1.093  loss_ce_4: 0.2388  loss_mask_4: 0.4471  loss_dice_4: 1.083  loss_ce_5: 0.2043  loss_mask_5: 0.4456  loss_dice_5: 1.097  loss_ce_6: 0.213  loss_mask_6: 0.4474  loss_dice_6: 1.058  loss_ce_7: 0.2118  loss_mask_7: 0.4398  loss_dice_7: 1.066  loss_ce_8: 0.2046  loss_mask_8: 0.4439  loss_dice_8: 1.083    time: 0.9332  last_time: 0.9303  data_time: 0.0365  last_data_time: 0.0370   lr: 0.0001  max_mem: 30048M
[10/18 08:49:21] d2.utils.events INFO:  eta: 0:43:04  iter: 219  total_loss: 17.69  loss_ce: 0.1939  loss_mask: 0.4132  loss_dice: 1.106  loss_ce_0: 0.1975  loss_mask_0: 0.4588  loss_dice_0: 1.242  loss_ce_1: 0.218  loss_mask_1: 0.4486  loss_dice_1: 1.195  loss_ce_2: 0.2129  loss_mask_2: 0.4254  loss_dice_2: 1.108  loss_ce_3: 0.2165  loss_mask_3: 0.4264  loss_dice_3: 1.098  loss_ce_4: 0.2149  loss_mask_4: 0.4157  loss_dice_4: 1.103  loss_ce_5: 0.1952  loss_mask_5: 0.4109  loss_dice_5: 1.086  loss_ce_6: 0.1878  loss_mask_6: 0.4112  loss_dice_6: 1.083  loss_ce_7: 0.1906  loss_mask_7: 0.4087  loss_dice_7: 1.108  loss_ce_8: 0.1836  loss_mask_8: 0.4161  loss_dice_8: 1.096    time: 0.9334  last_time: 0.9102  data_time: 0.0328  last_data_time: 0.0379   lr: 0.0001  max_mem: 30048M
[10/18 08:49:40] d2.utils.events INFO:  eta: 0:42:41  iter: 239  total_loss: 18.63  loss_ce: 0.2089  loss_mask: 0.4551  loss_dice: 1.106  loss_ce_0: 0.1819  loss_mask_0: 0.5015  loss_dice_0: 1.262  loss_ce_1: 0.257  loss_mask_1: 0.4637  loss_dice_1: 1.198  loss_ce_2: 0.2585  loss_mask_2: 0.4528  loss_dice_2: 1.154  loss_ce_3: 0.2403  loss_mask_3: 0.4519  loss_dice_3: 1.144  loss_ce_4: 0.2316  loss_mask_4: 0.4536  loss_dice_4: 1.148  loss_ce_5: 0.2371  loss_mask_5: 0.4503  loss_dice_5: 1.11  loss_ce_6: 0.2371  loss_mask_6: 0.4566  loss_dice_6: 1.092  loss_ce_7: 0.2083  loss_mask_7: 0.4527  loss_dice_7: 1.092  loss_ce_8: 0.2315  loss_mask_8: 0.4468  loss_dice_8: 1.102    time: 0.9331  last_time: 0.8979  data_time: 0.0345  last_data_time: 0.0325   lr: 0.0001  max_mem: 30048M
[10/18 08:49:58] d2.utils.events INFO:  eta: 0:42:23  iter: 259  total_loss: 17.92  loss_ce: 0.1947  loss_mask: 0.4366  loss_dice: 1.082  loss_ce_0: 0.1782  loss_mask_0: 0.4738  loss_dice_0: 1.257  loss_ce_1: 0.2286  loss_mask_1: 0.4706  loss_dice_1: 1.174  loss_ce_2: 0.2188  loss_mask_2: 0.4446  loss_dice_2: 1.168  loss_ce_3: 0.2174  loss_mask_3: 0.4462  loss_dice_3: 1.121  loss_ce_4: 0.2103  loss_mask_4: 0.4444  loss_dice_4: 1.131  loss_ce_5: 0.2195  loss_mask_5: 0.4408  loss_dice_5: 1.103  loss_ce_6: 0.209  loss_mask_6: 0.4361  loss_dice_6: 1.12  loss_ce_7: 0.2023  loss_mask_7: 0.4374  loss_dice_7: 1.12  loss_ce_8: 0.197  loss_mask_8: 0.4415  loss_dice_8: 1.12    time: 0.9323  last_time: 0.9337  data_time: 0.0340  last_data_time: 0.0394   lr: 0.0001  max_mem: 30048M
[10/18 08:50:17] d2.utils.events INFO:  eta: 0:42:08  iter: 279  total_loss: 17.14  loss_ce: 0.2273  loss_mask: 0.3976  loss_dice: 1.044  loss_ce_0: 0.2138  loss_mask_0: 0.4372  loss_dice_0: 1.179  loss_ce_1: 0.2471  loss_mask_1: 0.4192  loss_dice_1: 1.087  loss_ce_2: 0.229  loss_mask_2: 0.4143  loss_dice_2: 1.066  loss_ce_3: 0.24  loss_mask_3: 0.4096  loss_dice_3: 1.05  loss_ce_4: 0.2118  loss_mask_4: 0.4018  loss_dice_4: 1.046  loss_ce_5: 0.215  loss_mask_5: 0.4071  loss_dice_5: 1.05  loss_ce_6: 0.2092  loss_mask_6: 0.406  loss_dice_6: 1.046  loss_ce_7: 0.2233  loss_mask_7: 0.4057  loss_dice_7: 1.038  loss_ce_8: 0.2122  loss_mask_8: 0.4016  loss_dice_8: 1.031    time: 0.9324  last_time: 0.9088  data_time: 0.0332  last_data_time: 0.0310   lr: 0.0001  max_mem: 30048M
[10/18 08:50:36] d2.utils.events INFO:  eta: 0:41:51  iter: 299  total_loss: 17.92  loss_ce: 0.2249  loss_mask: 0.424  loss_dice: 1.069  loss_ce_0: 0.223  loss_mask_0: 0.479  loss_dice_0: 1.157  loss_ce_1: 0.2388  loss_mask_1: 0.4595  loss_dice_1: 1.131  loss_ce_2: 0.2587  loss_mask_2: 0.4298  loss_dice_2: 1.111  loss_ce_3: 0.2677  loss_mask_3: 0.4293  loss_dice_3: 1.073  loss_ce_4: 0.2203  loss_mask_4: 0.4334  loss_dice_4: 1.091  loss_ce_5: 0.2375  loss_mask_5: 0.4256  loss_dice_5: 1.063  loss_ce_6: 0.2135  loss_mask_6: 0.4236  loss_dice_6: 1.076  loss_ce_7: 0.207  loss_mask_7: 0.4354  loss_dice_7: 1.092  loss_ce_8: 0.2392  loss_mask_8: 0.4228  loss_dice_8: 1.084    time: 0.9327  last_time: 0.9329  data_time: 0.0333  last_data_time: 0.0379   lr: 0.0001  max_mem: 30048M
[10/18 08:50:55] d2.utils.events INFO:  eta: 0:41:35  iter: 319  total_loss: 17.86  loss_ce: 0.2197  loss_mask: 0.4485  loss_dice: 1.063  loss_ce_0: 0.1876  loss_mask_0: 0.4967  loss_dice_0: 1.169  loss_ce_1: 0.2357  loss_mask_1: 0.4715  loss_dice_1: 1.123  loss_ce_2: 0.2149  loss_mask_2: 0.4644  loss_dice_2: 1.09  loss_ce_3: 0.2275  loss_mask_3: 0.4543  loss_dice_3: 1.079  loss_ce_4: 0.2202  loss_mask_4: 0.4595  loss_dice_4: 1.069  loss_ce_5: 0.2271  loss_mask_5: 0.4534  loss_dice_5: 1.096  loss_ce_6: 0.1958  loss_mask_6: 0.4467  loss_dice_6: 1.066  loss_ce_7: 0.2313  loss_mask_7: 0.4506  loss_dice_7: 1.063  loss_ce_8: 0.2019  loss_mask_8: 0.4502  loss_dice_8: 1.044    time: 0.9334  last_time: 0.9475  data_time: 0.0339  last_data_time: 0.0402   lr: 0.0001  max_mem: 30048M
[10/18 08:51:14] d2.utils.events INFO:  eta: 0:41:18  iter: 339  total_loss: 17.46  loss_ce: 0.2038  loss_mask: 0.4266  loss_dice: 1.056  loss_ce_0: 0.1993  loss_mask_0: 0.4835  loss_dice_0: 1.169  loss_ce_1: 0.2214  loss_mask_1: 0.4459  loss_dice_1: 1.116  loss_ce_2: 0.2191  loss_mask_2: 0.4474  loss_dice_2: 1.081  loss_ce_3: 0.2494  loss_mask_3: 0.4355  loss_dice_3: 1.043  loss_ce_4: 0.2288  loss_mask_4: 0.4336  loss_dice_4: 1.076  loss_ce_5: 0.1891  loss_mask_5: 0.4323  loss_dice_5: 1.093  loss_ce_6: 0.2311  loss_mask_6: 0.4367  loss_dice_6: 1.047  loss_ce_7: 0.2081  loss_mask_7: 0.4288  loss_dice_7: 1.041  loss_ce_8: 0.2132  loss_mask_8: 0.4289  loss_dice_8: 1.042    time: 0.9339  last_time: 0.9365  data_time: 0.0336  last_data_time: 0.0402   lr: 0.0001  max_mem: 30048M
[10/18 08:51:33] d2.utils.events INFO:  eta: 0:41:00  iter: 359  total_loss: 16.72  loss_ce: 0.2447  loss_mask: 0.4188  loss_dice: 0.9969  loss_ce_0: 0.1941  loss_mask_0: 0.484  loss_dice_0: 1.177  loss_ce_1: 0.2293  loss_mask_1: 0.4617  loss_dice_1: 1.087  loss_ce_2: 0.2585  loss_mask_2: 0.431  loss_dice_2: 1.078  loss_ce_3: 0.2479  loss_mask_3: 0.4276  loss_dice_3: 1.057  loss_ce_4: 0.2285  loss_mask_4: 0.4247  loss_dice_4: 1.045  loss_ce_5: 0.2313  loss_mask_5: 0.4179  loss_dice_5: 1.044  loss_ce_6: 0.2312  loss_mask_6: 0.4178  loss_dice_6: 1.039  loss_ce_7: 0.2121  loss_mask_7: 0.4205  loss_dice_7: 1.024  loss_ce_8: 0.2104  loss_mask_8: 0.4202  loss_dice_8: 1.042    time: 0.9349  last_time: 0.9720  data_time: 0.0341  last_data_time: 0.0301   lr: 0.0001  max_mem: 30048M
[10/18 08:51:52] d2.utils.events INFO:  eta: 0:40:42  iter: 379  total_loss: 17.52  loss_ce: 0.2247  loss_mask: 0.4315  loss_dice: 1.065  loss_ce_0: 0.1951  loss_mask_0: 0.4848  loss_dice_0: 1.196  loss_ce_1: 0.2218  loss_mask_1: 0.4514  loss_dice_1: 1.155  loss_ce_2: 0.2288  loss_mask_2: 0.4537  loss_dice_2: 1.124  loss_ce_3: 0.2346  loss_mask_3: 0.4377  loss_dice_3: 1.095  loss_ce_4: 0.2213  loss_mask_4: 0.4285  loss_dice_4: 1.078  loss_ce_5: 0.1861  loss_mask_5: 0.4254  loss_dice_5: 1.093  loss_ce_6: 0.2147  loss_mask_6: 0.4261  loss_dice_6: 1.076  loss_ce_7: 0.2228  loss_mask_7: 0.4347  loss_dice_7: 1.08  loss_ce_8: 0.1816  loss_mask_8: 0.4357  loss_dice_8: 1.066    time: 0.9356  last_time: 0.9261  data_time: 0.0323  last_data_time: 0.0326   lr: 0.0001  max_mem: 30048M
[10/18 08:52:11] d2.utils.events INFO:  eta: 0:40:24  iter: 399  total_loss: 15.9  loss_ce: 0.1914  loss_mask: 0.3986  loss_dice: 0.9476  loss_ce_0: 0.1888  loss_mask_0: 0.4336  loss_dice_0: 1.091  loss_ce_1: 0.1633  loss_mask_1: 0.4219  loss_dice_1: 1.059  loss_ce_2: 0.1961  loss_mask_2: 0.4066  loss_dice_2: 0.9913  loss_ce_3: 0.2036  loss_mask_3: 0.3992  loss_dice_3: 0.9927  loss_ce_4: 0.1848  loss_mask_4: 0.4044  loss_dice_4: 0.9743  loss_ce_5: 0.1966  loss_mask_5: 0.3942  loss_dice_5: 0.9558  loss_ce_6: 0.1666  loss_mask_6: 0.3946  loss_dice_6: 0.9601  loss_ce_7: 0.1754  loss_mask_7: 0.398  loss_dice_7: 0.9572  loss_ce_8: 0.1883  loss_mask_8: 0.4015  loss_dice_8: 0.9701    time: 0.9355  last_time: 0.9384  data_time: 0.0340  last_data_time: 0.0381   lr: 0.0001  max_mem: 30048M
[10/18 08:52:30] d2.utils.events INFO:  eta: 0:40:06  iter: 419  total_loss: 16.44  loss_ce: 0.179  loss_mask: 0.3857  loss_dice: 0.9907  loss_ce_0: 0.1939  loss_mask_0: 0.4253  loss_dice_0: 1.135  loss_ce_1: 0.2398  loss_mask_1: 0.4018  loss_dice_1: 1.072  loss_ce_2: 0.216  loss_mask_2: 0.3921  loss_dice_2: 1.052  loss_ce_3: 0.2108  loss_mask_3: 0.3918  loss_dice_3: 1.016  loss_ce_4: 0.1909  loss_mask_4: 0.3936  loss_dice_4: 1.01  loss_ce_5: 0.2136  loss_mask_5: 0.3886  loss_dice_5: 0.9849  loss_ce_6: 0.1877  loss_mask_6: 0.388  loss_dice_6: 0.9924  loss_ce_7: 0.1852  loss_mask_7: 0.3847  loss_dice_7: 0.966  loss_ce_8: 0.1778  loss_mask_8: 0.3922  loss_dice_8: 0.9712    time: 0.9357  last_time: 0.9447  data_time: 0.0363  last_data_time: 0.0405   lr: 0.0001  max_mem: 30048M
[10/18 08:52:48] d2.utils.events INFO:  eta: 0:39:46  iter: 439  total_loss: 16.2  loss_ce: 0.1722  loss_mask: 0.3823  loss_dice: 1.001  loss_ce_0: 0.1699  loss_mask_0: 0.4321  loss_dice_0: 1.148  loss_ce_1: 0.1978  loss_mask_1: 0.417  loss_dice_1: 1.127  loss_ce_2: 0.1955  loss_mask_2: 0.4004  loss_dice_2: 1.077  loss_ce_3: 0.1878  loss_mask_3: 0.3994  loss_dice_3: 1.043  loss_ce_4: 0.205  loss_mask_4: 0.3913  loss_dice_4: 1.029  loss_ce_5: 0.1772  loss_mask_5: 0.3913  loss_dice_5: 1.035  loss_ce_6: 0.1776  loss_mask_6: 0.3831  loss_dice_6: 1.001  loss_ce_7: 0.1739  loss_mask_7: 0.3848  loss_dice_7: 1.009  loss_ce_8: 0.1936  loss_mask_8: 0.3818  loss_dice_8: 1.004    time: 0.9352  last_time: 0.9020  data_time: 0.0325  last_data_time: 0.0315   lr: 0.0001  max_mem: 30048M
[10/18 08:53:08] d2.utils.events INFO:  eta: 0:39:30  iter: 459  total_loss: 16.64  loss_ce: 0.2236  loss_mask: 0.3894  loss_dice: 0.9992  loss_ce_0: 0.1782  loss_mask_0: 0.4442  loss_dice_0: 1.123  loss_ce_1: 0.2369  loss_mask_1: 0.4243  loss_dice_1: 1.072  loss_ce_2: 0.2519  loss_mask_2: 0.3998  loss_dice_2: 1.041  loss_ce_3: 0.2388  loss_mask_3: 0.3965  loss_dice_3: 1.01  loss_ce_4: 0.2144  loss_mask_4: 0.3998  loss_dice_4: 1.016  loss_ce_5: 0.2357  loss_mask_5: 0.3953  loss_dice_5: 1.014  loss_ce_6: 0.2224  loss_mask_6: 0.3897  loss_dice_6: 0.9911  loss_ce_7: 0.2045  loss_mask_7: 0.3949  loss_dice_7: 1.004  loss_ce_8: 0.2186  loss_mask_8: 0.3928  loss_dice_8: 1.015    time: 0.9369  last_time: 0.9685  data_time: 0.0324  last_data_time: 0.0310   lr: 0.0001  max_mem: 30048M
[10/18 08:53:26] d2.utils.events INFO:  eta: 0:39:11  iter: 479  total_loss: 16.96  loss_ce: 0.2116  loss_mask: 0.4171  loss_dice: 0.9928  loss_ce_0: 0.1751  loss_mask_0: 0.471  loss_dice_0: 1.16  loss_ce_1: 0.2421  loss_mask_1: 0.4484  loss_dice_1: 1.099  loss_ce_2: 0.232  loss_mask_2: 0.4278  loss_dice_2: 1.032  loss_ce_3: 0.2341  loss_mask_3: 0.4208  loss_dice_3: 1.045  loss_ce_4: 0.2257  loss_mask_4: 0.4167  loss_dice_4: 1.026  loss_ce_5: 0.2128  loss_mask_5: 0.4124  loss_dice_5: 1.006  loss_ce_6: 0.2097  loss_mask_6: 0.4129  loss_dice_6: 1.014  loss_ce_7: 0.2115  loss_mask_7: 0.4172  loss_dice_7: 0.9943  loss_ce_8: 0.2143  loss_mask_8: 0.419  loss_dice_8: 0.9961    time: 0.9367  last_time: 0.9449  data_time: 0.0346  last_data_time: 0.0409   lr: 0.0001  max_mem: 30048M
[10/18 08:53:45] d2.utils.events INFO:  eta: 0:38:51  iter: 499  total_loss: 17.47  loss_ce: 0.2249  loss_mask: 0.4193  loss_dice: 0.9878  loss_ce_0: 0.2269  loss_mask_0: 0.4605  loss_dice_0: 1.141  loss_ce_1: 0.2454  loss_mask_1: 0.4429  loss_dice_1: 1.076  loss_ce_2: 0.2363  loss_mask_2: 0.431  loss_dice_2: 1.061  loss_ce_3: 0.2229  loss_mask_3: 0.4304  loss_dice_3: 1.041  loss_ce_4: 0.2412  loss_mask_4: 0.4258  loss_dice_4: 1.044  loss_ce_5: 0.2157  loss_mask_5: 0.4225  loss_dice_5: 1.031  loss_ce_6: 0.2042  loss_mask_6: 0.4152  loss_dice_6: 1.033  loss_ce_7: 0.2143  loss_mask_7: 0.4245  loss_dice_7: 1.028  loss_ce_8: 0.2169  loss_mask_8: 0.428  loss_dice_8: 1.018    time: 0.9362  last_time: 0.9144  data_time: 0.0357  last_data_time: 0.0395   lr: 0.0001  max_mem: 30048M
[10/18 08:54:03] d2.utils.events INFO:  eta: 0:38:31  iter: 519  total_loss: 16.67  loss_ce: 0.2013  loss_mask: 0.3835  loss_dice: 0.9823  loss_ce_0: 0.19  loss_mask_0: 0.4063  loss_dice_0: 1.124  loss_ce_1: 0.2221  loss_mask_1: 0.3929  loss_dice_1: 1.078  loss_ce_2: 0.2226  loss_mask_2: 0.3825  loss_dice_2: 1.037  loss_ce_3: 0.2401  loss_mask_3: 0.3828  loss_dice_3: 1.01  loss_ce_4: 0.218  loss_mask_4: 0.3779  loss_dice_4: 1.021  loss_ce_5: 0.2139  loss_mask_5: 0.3827  loss_dice_5: 0.9976  loss_ce_6: 0.2154  loss_mask_6: 0.3839  loss_dice_6: 1.007  loss_ce_7: 0.1865  loss_mask_7: 0.3828  loss_dice_7: 0.9904  loss_ce_8: 0.201  loss_mask_8: 0.3803  loss_dice_8: 1.008    time: 0.9357  last_time: 0.9093  data_time: 0.0349  last_data_time: 0.0382   lr: 0.0001  max_mem: 30048M
[10/18 08:54:22] d2.utils.events INFO:  eta: 0:38:13  iter: 539  total_loss: 15.97  loss_ce: 0.1803  loss_mask: 0.4015  loss_dice: 0.9638  loss_ce_0: 0.1708  loss_mask_0: 0.4535  loss_dice_0: 1.127  loss_ce_1: 0.178  loss_mask_1: 0.4331  loss_dice_1: 1.066  loss_ce_2: 0.1781  loss_mask_2: 0.4163  loss_dice_2: 1.028  loss_ce_3: 0.1876  loss_mask_3: 0.4307  loss_dice_3: 1  loss_ce_4: 0.21  loss_mask_4: 0.4141  loss_dice_4: 0.9679  loss_ce_5: 0.1674  loss_mask_5: 0.4079  loss_dice_5: 1.011  loss_ce_6: 0.171  loss_mask_6: 0.4025  loss_dice_6: 0.9735  loss_ce_7: 0.1704  loss_mask_7: 0.4021  loss_dice_7: 0.9786  loss_ce_8: 0.1892  loss_mask_8: 0.3946  loss_dice_8: 0.9796    time: 0.9357  last_time: 0.9205  data_time: 0.0340  last_data_time: 0.0381   lr: 0.0001  max_mem: 30048M
[10/18 08:54:41] d2.utils.events INFO:  eta: 0:37:54  iter: 559  total_loss: 16.11  loss_ce: 0.2114  loss_mask: 0.3829  loss_dice: 0.9676  loss_ce_0: 0.1956  loss_mask_0: 0.4291  loss_dice_0: 1.128  loss_ce_1: 0.2237  loss_mask_1: 0.4138  loss_dice_1: 1.055  loss_ce_2: 0.224  loss_mask_2: 0.405  loss_dice_2: 1.002  loss_ce_3: 0.2305  loss_mask_3: 0.3961  loss_dice_3: 0.9957  loss_ce_4: 0.2108  loss_mask_4: 0.3895  loss_dice_4: 1.002  loss_ce_5: 0.2135  loss_mask_5: 0.3978  loss_dice_5: 0.9899  loss_ce_6: 0.2118  loss_mask_6: 0.383  loss_dice_6: 0.962  loss_ce_7: 0.1894  loss_mask_7: 0.3901  loss_dice_7: 0.9747  loss_ce_8: 0.204  loss_mask_8: 0.3834  loss_dice_8: 0.9592    time: 0.9354  last_time: 0.9123  data_time: 0.0350  last_data_time: 0.0298   lr: 0.0001  max_mem: 30048M
[10/18 08:54:59] d2.utils.events INFO:  eta: 0:37:35  iter: 579  total_loss: 16.23  loss_ce: 0.1837  loss_mask: 0.4  loss_dice: 1.014  loss_ce_0: 0.1444  loss_mask_0: 0.433  loss_dice_0: 1.11  loss_ce_1: 0.1954  loss_mask_1: 0.4322  loss_dice_1: 1.069  loss_ce_2: 0.1937  loss_mask_2: 0.41  loss_dice_2: 1.029  loss_ce_3: 0.2102  loss_mask_3: 0.3972  loss_dice_3: 1.018  loss_ce_4: 0.2199  loss_mask_4: 0.3977  loss_dice_4: 1.023  loss_ce_5: 0.1714  loss_mask_5: 0.3997  loss_dice_5: 1.018  loss_ce_6: 0.1769  loss_mask_6: 0.3988  loss_dice_6: 1.006  loss_ce_7: 0.1788  loss_mask_7: 0.3982  loss_dice_7: 1.02  loss_ce_8: 0.1744  loss_mask_8: 0.401  loss_dice_8: 0.9979    time: 0.9352  last_time: 0.9067  data_time: 0.0331  last_data_time: 0.0323   lr: 0.0001  max_mem: 30048M
[10/18 08:55:18] d2.utils.events INFO:  eta: 0:37:17  iter: 599  total_loss: 17.08  loss_ce: 0.2031  loss_mask: 0.4166  loss_dice: 0.9961  loss_ce_0: 0.1976  loss_mask_0: 0.4522  loss_dice_0: 1.14  loss_ce_1: 0.1981  loss_mask_1: 0.4304  loss_dice_1: 1.091  loss_ce_2: 0.2023  loss_mask_2: 0.408  loss_dice_2: 1.07  loss_ce_3: 0.2183  loss_mask_3: 0.4117  loss_dice_3: 1.043  loss_ce_4: 0.2051  loss_mask_4: 0.4131  loss_dice_4: 1.04  loss_ce_5: 0.2067  loss_mask_5: 0.4151  loss_dice_5: 1.027  loss_ce_6: 0.2076  loss_mask_6: 0.4155  loss_dice_6: 1.005  loss_ce_7: 0.1896  loss_mask_7: 0.4201  loss_dice_7: 0.9931  loss_ce_8: 0.1831  loss_mask_8: 0.4124  loss_dice_8: 1.015    time: 0.9357  last_time: 0.9384  data_time: 0.0315  last_data_time: 0.0316   lr: 0.0001  max_mem: 30048M
[10/18 08:55:37] d2.utils.events INFO:  eta: 0:36:58  iter: 619  total_loss: 17.1  loss_ce: 0.2169  loss_mask: 0.3951  loss_dice: 1.036  loss_ce_0: 0.2008  loss_mask_0: 0.4545  loss_dice_0: 1.196  loss_ce_1: 0.2429  loss_mask_1: 0.4162  loss_dice_1: 1.078  loss_ce_2: 0.2794  loss_mask_2: 0.4073  loss_dice_2: 1.053  loss_ce_3: 0.2644  loss_mask_3: 0.4  loss_dice_3: 1.054  loss_ce_4: 0.2455  loss_mask_4: 0.4039  loss_dice_4: 1.044  loss_ce_5: 0.2075  loss_mask_5: 0.4112  loss_dice_5: 1.042  loss_ce_6: 0.1996  loss_mask_6: 0.401  loss_dice_6: 1.019  loss_ce_7: 0.2255  loss_mask_7: 0.4058  loss_dice_7: 1.031  loss_ce_8: 0.2089  loss_mask_8: 0.4012  loss_dice_8: 1.033    time: 0.9359  last_time: 0.9999  data_time: 0.0315  last_data_time: 0.0310   lr: 0.0001  max_mem: 30048M
[10/18 08:55:56] d2.utils.events INFO:  eta: 0:36:40  iter: 639  total_loss: 17.01  loss_ce: 0.1787  loss_mask: 0.4126  loss_dice: 0.9925  loss_ce_0: 0.1769  loss_mask_0: 0.4698  loss_dice_0: 1.144  loss_ce_1: 0.2097  loss_mask_1: 0.4476  loss_dice_1: 1.106  loss_ce_2: 0.2234  loss_mask_2: 0.4324  loss_dice_2: 1.053  loss_ce_3: 0.1949  loss_mask_3: 0.4257  loss_dice_3: 1.044  loss_ce_4: 0.2049  loss_mask_4: 0.431  loss_dice_4: 1.026  loss_ce_5: 0.1949  loss_mask_5: 0.4316  loss_dice_5: 1.018  loss_ce_6: 0.1751  loss_mask_6: 0.426  loss_dice_6: 1.017  loss_ce_7: 0.1916  loss_mask_7: 0.4182  loss_dice_7: 1.018  loss_ce_8: 0.1692  loss_mask_8: 0.4237  loss_dice_8: 0.9919    time: 0.9361  last_time: 0.9796  data_time: 0.0334  last_data_time: 0.0299   lr: 0.0001  max_mem: 30048M
[10/18 08:56:15] d2.utils.events INFO:  eta: 0:36:21  iter: 659  total_loss: 16.3  loss_ce: 0.1823  loss_mask: 0.3989  loss_dice: 0.9893  loss_ce_0: 0.1705  loss_mask_0: 0.4338  loss_dice_0: 1.099  loss_ce_1: 0.2007  loss_mask_1: 0.4096  loss_dice_1: 1.055  loss_ce_2: 0.2165  loss_mask_2: 0.4011  loss_dice_2: 1.011  loss_ce_3: 0.1962  loss_mask_3: 0.3991  loss_dice_3: 1.02  loss_ce_4: 0.1969  loss_mask_4: 0.4004  loss_dice_4: 1.026  loss_ce_5: 0.1727  loss_mask_5: 0.4023  loss_dice_5: 1.008  loss_ce_6: 0.1856  loss_mask_6: 0.3915  loss_dice_6: 0.998  loss_ce_7: 0.1805  loss_mask_7: 0.3977  loss_dice_7: 0.9955  loss_ce_8: 0.1807  loss_mask_8: 0.3914  loss_dice_8: 0.9968    time: 0.9359  last_time: 0.9820  data_time: 0.0366  last_data_time: 0.0322   lr: 0.0001  max_mem: 30048M
[10/18 08:56:34] d2.utils.events INFO:  eta: 0:36:02  iter: 679  total_loss: 16.09  loss_ce: 0.1747  loss_mask: 0.403  loss_dice: 1.013  loss_ce_0: 0.1639  loss_mask_0: 0.4216  loss_dice_0: 1.112  loss_ce_1: 0.1818  loss_mask_1: 0.407  loss_dice_1: 1.081  loss_ce_2: 0.1879  loss_mask_2: 0.4079  loss_dice_2: 1.047  loss_ce_3: 0.2011  loss_mask_3: 0.4003  loss_dice_3: 1.03  loss_ce_4: 0.1937  loss_mask_4: 0.4065  loss_dice_4: 1.031  loss_ce_5: 0.1693  loss_mask_5: 0.4014  loss_dice_5: 1.036  loss_ce_6: 0.1617  loss_mask_6: 0.3986  loss_dice_6: 1.025  loss_ce_7: 0.1605  loss_mask_7: 0.4054  loss_dice_7: 1.02  loss_ce_8: 0.1731  loss_mask_8: 0.4072  loss_dice_8: 1.019    time: 0.9359  last_time: 0.9059  data_time: 0.0332  last_data_time: 0.0333   lr: 0.0001  max_mem: 30049M
[10/18 08:56:52] d2.utils.events INFO:  eta: 0:35:44  iter: 699  total_loss: 16.34  loss_ce: 0.1742  loss_mask: 0.3955  loss_dice: 0.9956  loss_ce_0: 0.1937  loss_mask_0: 0.4451  loss_dice_0: 1.098  loss_ce_1: 0.2456  loss_mask_1: 0.3998  loss_dice_1: 1.044  loss_ce_2: 0.1971  loss_mask_2: 0.3954  loss_dice_2: 1.042  loss_ce_3: 0.2189  loss_mask_3: 0.3906  loss_dice_3: 1.004  loss_ce_4: 0.2155  loss_mask_4: 0.3929  loss_dice_4: 1.016  loss_ce_5: 0.2044  loss_mask_5: 0.3972  loss_dice_5: 1.006  loss_ce_6: 0.1752  loss_mask_6: 0.3953  loss_dice_6: 0.9953  loss_ce_7: 0.1629  loss_mask_7: 0.4001  loss_dice_7: 1.003  loss_ce_8: 0.1697  loss_mask_8: 0.398  loss_dice_8: 0.9783    time: 0.9356  last_time: 0.8969  data_time: 0.0338  last_data_time: 0.0297   lr: 0.0001  max_mem: 30049M
[10/18 08:57:11] d2.utils.events INFO:  eta: 0:35:25  iter: 719  total_loss: 16.58  loss_ce: 0.1733  loss_mask: 0.3927  loss_dice: 1.002  loss_ce_0: 0.2094  loss_mask_0: 0.4193  loss_dice_0: 1.104  loss_ce_1: 0.1994  loss_mask_1: 0.4132  loss_dice_1: 1.051  loss_ce_2: 0.2222  loss_mask_2: 0.4034  loss_dice_2: 1.027  loss_ce_3: 0.195  loss_mask_3: 0.3993  loss_dice_3: 0.9859  loss_ce_4: 0.2367  loss_mask_4: 0.4078  loss_dice_4: 1.019  loss_ce_5: 0.2031  loss_mask_5: 0.408  loss_dice_5: 0.9958  loss_ce_6: 0.1607  loss_mask_6: 0.4088  loss_dice_6: 0.9927  loss_ce_7: 0.1562  loss_mask_7: 0.4003  loss_dice_7: 0.9862  loss_ce_8: 0.1671  loss_mask_8: 0.3939  loss_dice_8: 0.9866    time: 0.9354  last_time: 0.9127  data_time: 0.0325  last_data_time: 0.0309   lr: 0.0001  max_mem: 30049M
[10/18 08:57:30] d2.utils.events INFO:  eta: 0:35:06  iter: 739  total_loss: 16.17  loss_ce: 0.1819  loss_mask: 0.3833  loss_dice: 0.9602  loss_ce_0: 0.1986  loss_mask_0: 0.4127  loss_dice_0: 1.118  loss_ce_1: 0.2134  loss_mask_1: 0.3975  loss_dice_1: 1.047  loss_ce_2: 0.2234  loss_mask_2: 0.3927  loss_dice_2: 1.013  loss_ce_3: 0.2216  loss_mask_3: 0.3914  loss_dice_3: 0.9765  loss_ce_4: 0.23  loss_mask_4: 0.3869  loss_dice_4: 0.9837  loss_ce_5: 0.1931  loss_mask_5: 0.3882  loss_dice_5: 0.9971  loss_ce_6: 0.2071  loss_mask_6: 0.3835  loss_dice_6: 0.9745  loss_ce_7: 0.1883  loss_mask_7: 0.3853  loss_dice_7: 0.9674  loss_ce_8: 0.2069  loss_mask_8: 0.3903  loss_dice_8: 0.9729    time: 0.9355  last_time: 0.9574  data_time: 0.0347  last_data_time: 0.0363   lr: 0.0001  max_mem: 30049M
[10/18 08:57:48] d2.utils.events INFO:  eta: 0:34:48  iter: 759  total_loss: 15.1  loss_ce: 0.1412  loss_mask: 0.3777  loss_dice: 0.9397  loss_ce_0: 0.1699  loss_mask_0: 0.4089  loss_dice_0: 1.062  loss_ce_1: 0.1759  loss_mask_1: 0.3845  loss_dice_1: 0.994  loss_ce_2: 0.1698  loss_mask_2: 0.3673  loss_dice_2: 0.982  loss_ce_3: 0.1868  loss_mask_3: 0.3763  loss_dice_3: 0.9555  loss_ce_4: 0.1496  loss_mask_4: 0.3658  loss_dice_4: 0.9704  loss_ce_5: 0.1477  loss_mask_5: 0.3714  loss_dice_5: 0.982  loss_ce_6: 0.1284  loss_mask_6: 0.3709  loss_dice_6: 0.9455  loss_ce_7: 0.1492  loss_mask_7: 0.3748  loss_dice_7: 0.949  loss_ce_8: 0.1504  loss_mask_8: 0.3781  loss_dice_8: 0.9732    time: 0.9355  last_time: 0.9314  data_time: 0.0336  last_data_time: 0.0391   lr: 0.0001  max_mem: 30049M
[10/18 08:58:07] d2.utils.events INFO:  eta: 0:34:29  iter: 779  total_loss: 15.84  loss_ce: 0.1766  loss_mask: 0.3671  loss_dice: 0.9742  loss_ce_0: 0.1797  loss_mask_0: 0.4129  loss_dice_0: 1.082  loss_ce_1: 0.2119  loss_mask_1: 0.3939  loss_dice_1: 0.9963  loss_ce_2: 0.2095  loss_mask_2: 0.3719  loss_dice_2: 0.9795  loss_ce_3: 0.1896  loss_mask_3: 0.3657  loss_dice_3: 1.007  loss_ce_4: 0.1897  loss_mask_4: 0.3622  loss_dice_4: 0.9844  loss_ce_5: 0.1857  loss_mask_5: 0.3572  loss_dice_5: 0.962  loss_ce_6: 0.1819  loss_mask_6: 0.3549  loss_dice_6: 0.9525  loss_ce_7: 0.1786  loss_mask_7: 0.3641  loss_dice_7: 0.9747  loss_ce_8: 0.1635  loss_mask_8: 0.3622  loss_dice_8: 0.9693    time: 0.9357  last_time: 0.9336  data_time: 0.0325  last_data_time: 0.0322   lr: 0.0001  max_mem: 30049M
[10/18 08:58:26] d2.utils.events INFO:  eta: 0:34:11  iter: 799  total_loss: 14.72  loss_ce: 0.1665  loss_mask: 0.3692  loss_dice: 0.8941  loss_ce_0: 0.1878  loss_mask_0: 0.4014  loss_dice_0: 1.006  loss_ce_1: 0.1919  loss_mask_1: 0.3833  loss_dice_1: 0.9477  loss_ce_2: 0.2098  loss_mask_2: 0.38  loss_dice_2: 0.9303  loss_ce_3: 0.1859  loss_mask_3: 0.3821  loss_dice_3: 0.902  loss_ce_4: 0.1801  loss_mask_4: 0.3677  loss_dice_4: 0.8889  loss_ce_5: 0.1819  loss_mask_5: 0.3723  loss_dice_5: 0.9071  loss_ce_6: 0.1693  loss_mask_6: 0.3713  loss_dice_6: 0.8668  loss_ce_7: 0.1774  loss_mask_7: 0.3709  loss_dice_7: 0.8928  loss_ce_8: 0.1738  loss_mask_8: 0.3707  loss_dice_8: 0.8985    time: 0.9359  last_time: 0.9452  data_time: 0.0323  last_data_time: 0.0311   lr: 0.0001  max_mem: 30049M
[10/18 08:58:45] d2.utils.events INFO:  eta: 0:33:52  iter: 819  total_loss: 15.46  loss_ce: 0.1826  loss_mask: 0.4024  loss_dice: 0.9439  loss_ce_0: 0.16  loss_mask_0: 0.4463  loss_dice_0: 1.074  loss_ce_1: 0.1939  loss_mask_1: 0.4045  loss_dice_1: 1.012  loss_ce_2: 0.1956  loss_mask_2: 0.3991  loss_dice_2: 0.9626  loss_ce_3: 0.2141  loss_mask_3: 0.3965  loss_dice_3: 0.9626  loss_ce_4: 0.1898  loss_mask_4: 0.3868  loss_dice_4: 0.9605  loss_ce_5: 0.1805  loss_mask_5: 0.3925  loss_dice_5: 0.9594  loss_ce_6: 0.2013  loss_mask_6: 0.4057  loss_dice_6: 0.9396  loss_ce_7: 0.1853  loss_mask_7: 0.3963  loss_dice_7: 0.958  loss_ce_8: 0.1781  loss_mask_8: 0.397  loss_dice_8: 0.9481    time: 0.9356  last_time: 0.9836  data_time: 0.0353  last_data_time: 0.0314   lr: 0.0001  max_mem: 30049M
[10/18 08:59:03] d2.utils.events INFO:  eta: 0:33:33  iter: 839  total_loss: 15.9  loss_ce: 0.1691  loss_mask: 0.3618  loss_dice: 0.9675  loss_ce_0: 0.162  loss_mask_0: 0.4176  loss_dice_0: 1.1  loss_ce_1: 0.2194  loss_mask_1: 0.3722  loss_dice_1: 1.024  loss_ce_2: 0.237  loss_mask_2: 0.3643  loss_dice_2: 1.011  loss_ce_3: 0.1803  loss_mask_3: 0.3648  loss_dice_3: 1.002  loss_ce_4: 0.1957  loss_mask_4: 0.3705  loss_dice_4: 0.9893  loss_ce_5: 0.179  loss_mask_5: 0.3609  loss_dice_5: 0.9881  loss_ce_6: 0.1649  loss_mask_6: 0.3599  loss_dice_6: 0.9791  loss_ce_7: 0.1691  loss_mask_7: 0.3601  loss_dice_7: 0.9829  loss_ce_8: 0.1699  loss_mask_8: 0.3601  loss_dice_8: 0.9794    time: 0.9354  last_time: 0.9647  data_time: 0.0334  last_data_time: 0.0299   lr: 0.0001  max_mem: 30049M
[10/18 08:59:23] d2.utils.events INFO:  eta: 0:33:15  iter: 859  total_loss: 15.11  loss_ce: 0.1523  loss_mask: 0.3718  loss_dice: 0.9401  loss_ce_0: 0.176  loss_mask_0: 0.4227  loss_dice_0: 1.024  loss_ce_1: 0.1786  loss_mask_1: 0.4026  loss_dice_1: 0.9898  loss_ce_2: 0.1704  loss_mask_2: 0.375  loss_dice_2: 0.9619  loss_ce_3: 0.1667  loss_mask_3: 0.3675  loss_dice_3: 0.9503  loss_ce_4: 0.1652  loss_mask_4: 0.3669  loss_dice_4: 0.94  loss_ce_5: 0.1741  loss_mask_5: 0.3689  loss_dice_5: 0.9702  loss_ce_6: 0.1441  loss_mask_6: 0.369  loss_dice_6: 0.9588  loss_ce_7: 0.1503  loss_mask_7: 0.3743  loss_dice_7: 0.9453  loss_ce_8: 0.154  loss_mask_8: 0.3647  loss_dice_8: 0.9464    time: 0.9359  last_time: 0.9598  data_time: 0.0311  last_data_time: 0.0308   lr: 0.0001  max_mem: 30049M
[10/18 08:59:41] d2.utils.events INFO:  eta: 0:32:56  iter: 879  total_loss: 15.17  loss_ce: 0.1368  loss_mask: 0.3589  loss_dice: 0.952  loss_ce_0: 0.1682  loss_mask_0: 0.3818  loss_dice_0: 1.067  loss_ce_1: 0.2136  loss_mask_1: 0.3805  loss_dice_1: 0.9985  loss_ce_2: 0.1858  loss_mask_2: 0.3592  loss_dice_2: 0.9973  loss_ce_3: 0.1905  loss_mask_3: 0.3699  loss_dice_3: 0.9565  loss_ce_4: 0.1722  loss_mask_4: 0.3615  loss_dice_4: 0.9544  loss_ce_5: 0.1471  loss_mask_5: 0.3587  loss_dice_5: 0.9614  loss_ce_6: 0.1381  loss_mask_6: 0.3647  loss_dice_6: 0.9675  loss_ce_7: 0.1506  loss_mask_7: 0.3642  loss_dice_7: 0.9588  loss_ce_8: 0.1651  loss_mask_8: 0.3527  loss_dice_8: 0.939    time: 0.9358  last_time: 0.9868  data_time: 0.0346  last_data_time: 0.0334   lr: 0.0001  max_mem: 30049M
[10/18 09:00:00] d2.utils.events INFO:  eta: 0:32:37  iter: 899  total_loss: 15.06  loss_ce: 0.1615  loss_mask: 0.3772  loss_dice: 0.9504  loss_ce_0: 0.1542  loss_mask_0: 0.4012  loss_dice_0: 1.101  loss_ce_1: 0.1826  loss_mask_1: 0.3892  loss_dice_1: 1.027  loss_ce_2: 0.1902  loss_mask_2: 0.3744  loss_dice_2: 0.9945  loss_ce_3: 0.1431  loss_mask_3: 0.3742  loss_dice_3: 0.9858  loss_ce_4: 0.1542  loss_mask_4: 0.3767  loss_dice_4: 0.9735  loss_ce_5: 0.1222  loss_mask_5: 0.3782  loss_dice_5: 0.9563  loss_ce_6: 0.125  loss_mask_6: 0.3774  loss_dice_6: 0.9564  loss_ce_7: 0.1449  loss_mask_7: 0.3705  loss_dice_7: 0.9494  loss_ce_8: 0.1526  loss_mask_8: 0.3694  loss_dice_8: 0.9674    time: 0.9354  last_time: 0.9188  data_time: 0.0327  last_data_time: 0.0370   lr: 0.0001  max_mem: 30049M
[10/18 09:00:19] d2.utils.events INFO:  eta: 0:32:19  iter: 919  total_loss: 14.99  loss_ce: 0.1669  loss_mask: 0.3722  loss_dice: 0.933  loss_ce_0: 0.1621  loss_mask_0: 0.4225  loss_dice_0: 1.036  loss_ce_1: 0.1847  loss_mask_1: 0.3908  loss_dice_1: 0.9817  loss_ce_2: 0.1791  loss_mask_2: 0.3801  loss_dice_2: 0.9845  loss_ce_3: 0.1773  loss_mask_3: 0.3847  loss_dice_3: 0.9449  loss_ce_4: 0.1516  loss_mask_4: 0.3808  loss_dice_4: 0.9515  loss_ce_5: 0.1407  loss_mask_5: 0.3688  loss_dice_5: 0.9741  loss_ce_6: 0.1589  loss_mask_6: 0.38  loss_dice_6: 0.9384  loss_ce_7: 0.1645  loss_mask_7: 0.3747  loss_dice_7: 0.9483  loss_ce_8: 0.1484  loss_mask_8: 0.3735  loss_dice_8: 0.9361    time: 0.9355  last_time: 0.9051  data_time: 0.0341  last_data_time: 0.0309   lr: 0.0001  max_mem: 30049M
[10/18 09:00:37] d2.utils.events INFO:  eta: 0:31:59  iter: 939  total_loss: 15.64  loss_ce: 0.1556  loss_mask: 0.3555  loss_dice: 0.9259  loss_ce_0: 0.1736  loss_mask_0: 0.4048  loss_dice_0: 1.022  loss_ce_1: 0.1888  loss_mask_1: 0.3676  loss_dice_1: 0.9875  loss_ce_2: 0.1892  loss_mask_2: 0.3589  loss_dice_2: 0.9391  loss_ce_3: 0.1622  loss_mask_3: 0.3574  loss_dice_3: 0.9586  loss_ce_4: 0.1744  loss_mask_4: 0.3575  loss_dice_4: 0.9494  loss_ce_5: 0.1415  loss_mask_5: 0.3576  loss_dice_5: 0.9339  loss_ce_6: 0.1688  loss_mask_6: 0.3534  loss_dice_6: 0.9415  loss_ce_7: 0.1625  loss_mask_7: 0.3565  loss_dice_7: 0.9351  loss_ce_8: 0.1874  loss_mask_8: 0.3539  loss_dice_8: 0.9271    time: 0.9350  last_time: 0.9136  data_time: 0.0341  last_data_time: 0.0379   lr: 0.0001  max_mem: 30049M
[10/18 09:00:55] d2.utils.events INFO:  eta: 0:31:40  iter: 959  total_loss: 14.95  loss_ce: 0.1523  loss_mask: 0.3821  loss_dice: 0.9199  loss_ce_0: 0.1789  loss_mask_0: 0.42  loss_dice_0: 1.067  loss_ce_1: 0.1834  loss_mask_1: 0.4007  loss_dice_1: 0.9967  loss_ce_2: 0.1783  loss_mask_2: 0.387  loss_dice_2: 0.9601  loss_ce_3: 0.168  loss_mask_3: 0.3912  loss_dice_3: 0.9566  loss_ce_4: 0.1667  loss_mask_4: 0.3879  loss_dice_4: 0.929  loss_ce_5: 0.1572  loss_mask_5: 0.3868  loss_dice_5: 0.9388  loss_ce_6: 0.1612  loss_mask_6: 0.3862  loss_dice_6: 0.9387  loss_ce_7: 0.1604  loss_mask_7: 0.3872  loss_dice_7: 0.9367  loss_ce_8: 0.1929  loss_mask_8: 0.3906  loss_dice_8: 0.9445    time: 0.9347  last_time: 0.9098  data_time: 0.0344  last_data_time: 0.0382   lr: 0.0001  max_mem: 30049M
[10/18 09:01:14] d2.utils.events INFO:  eta: 0:31:21  iter: 979  total_loss: 15.53  loss_ce: 0.156  loss_mask: 0.4008  loss_dice: 0.9461  loss_ce_0: 0.1516  loss_mask_0: 0.4483  loss_dice_0: 1.063  loss_ce_1: 0.1702  loss_mask_1: 0.4174  loss_dice_1: 1.012  loss_ce_2: 0.1679  loss_mask_2: 0.3993  loss_dice_2: 0.9758  loss_ce_3: 0.1822  loss_mask_3: 0.3993  loss_dice_3: 0.9554  loss_ce_4: 0.1677  loss_mask_4: 0.3917  loss_dice_4: 0.9745  loss_ce_5: 0.1668  loss_mask_5: 0.3953  loss_dice_5: 0.9571  loss_ce_6: 0.159  loss_mask_6: 0.3885  loss_dice_6: 0.9543  loss_ce_7: 0.1452  loss_mask_7: 0.3967  loss_dice_7: 0.9679  loss_ce_8: 0.1477  loss_mask_8: 0.3986  loss_dice_8: 0.972    time: 0.9342  last_time: 0.9126  data_time: 0.0347  last_data_time: 0.0397   lr: 0.0001  max_mem: 30049M
[10/18 09:01:32] d2.utils.events INFO:  eta: 0:31:02  iter: 999  total_loss: 15.7  loss_ce: 0.1865  loss_mask: 0.3832  loss_dice: 0.9684  loss_ce_0: 0.1729  loss_mask_0: 0.4178  loss_dice_0: 1.072  loss_ce_1: 0.231  loss_mask_1: 0.3967  loss_dice_1: 1.039  loss_ce_2: 0.1931  loss_mask_2: 0.403  loss_dice_2: 1.005  loss_ce_3: 0.1724  loss_mask_3: 0.3947  loss_dice_3: 0.9945  loss_ce_4: 0.2047  loss_mask_4: 0.3918  loss_dice_4: 0.9774  loss_ce_5: 0.1678  loss_mask_5: 0.3912  loss_dice_5: 0.9919  loss_ce_6: 0.1778  loss_mask_6: 0.3891  loss_dice_6: 0.9945  loss_ce_7: 0.1917  loss_mask_7: 0.3836  loss_dice_7: 1.004  loss_ce_8: 0.1815  loss_mask_8: 0.394  loss_dice_8: 0.9943    time: 0.9340  last_time: 0.9139  data_time: 0.0331  last_data_time: 0.0302   lr: 0.0001  max_mem: 30049M
[10/18 09:01:51] d2.utils.events INFO:  eta: 0:30:44  iter: 1019  total_loss: 15.29  loss_ce: 0.1718  loss_mask: 0.3805  loss_dice: 0.9389  loss_ce_0: 0.2058  loss_mask_0: 0.4102  loss_dice_0: 1.049  loss_ce_1: 0.1918  loss_mask_1: 0.3888  loss_dice_1: 1.006  loss_ce_2: 0.1738  loss_mask_2: 0.3854  loss_dice_2: 0.9708  loss_ce_3: 0.1735  loss_mask_3: 0.3853  loss_dice_3: 0.9626  loss_ce_4: 0.1449  loss_mask_4: 0.3741  loss_dice_4: 0.9548  loss_ce_5: 0.152  loss_mask_5: 0.3818  loss_dice_5: 0.9416  loss_ce_6: 0.1409  loss_mask_6: 0.383  loss_dice_6: 0.9489  loss_ce_7: 0.175  loss_mask_7: 0.3832  loss_dice_7: 0.937  loss_ce_8: 0.1486  loss_mask_8: 0.3815  loss_dice_8: 0.9519    time: 0.9345  last_time: 0.9656  data_time: 0.0315  last_data_time: 0.0314   lr: 0.0001  max_mem: 30049M
[10/18 09:02:10] d2.utils.events INFO:  eta: 0:30:26  iter: 1039  total_loss: 15.08  loss_ce: 0.1345  loss_mask: 0.376  loss_dice: 0.9699  loss_ce_0: 0.1561  loss_mask_0: 0.4113  loss_dice_0: 1.048  loss_ce_1: 0.1784  loss_mask_1: 0.3933  loss_dice_1: 1.02  loss_ce_2: 0.171  loss_mask_2: 0.3886  loss_dice_2: 0.9691  loss_ce_3: 0.1579  loss_mask_3: 0.3868  loss_dice_3: 0.9791  loss_ce_4: 0.1454  loss_mask_4: 0.3809  loss_dice_4: 0.9807  loss_ce_5: 0.141  loss_mask_5: 0.3835  loss_dice_5: 0.9588  loss_ce_6: 0.1532  loss_mask_6: 0.38  loss_dice_6: 0.9717  loss_ce_7: 0.1497  loss_mask_7: 0.3812  loss_dice_7: 0.9699  loss_ce_8: 0.1384  loss_mask_8: 0.3767  loss_dice_8: 0.9573    time: 0.9348  last_time: 0.9467  data_time: 0.0336  last_data_time: 0.0308   lr: 0.0001  max_mem: 30049M
[10/18 09:02:29] d2.utils.events INFO:  eta: 0:30:08  iter: 1059  total_loss: 15.35  loss_ce: 0.1485  loss_mask: 0.3697  loss_dice: 0.9473  loss_ce_0: 0.1603  loss_mask_0: 0.4151  loss_dice_0: 1.05  loss_ce_1: 0.2152  loss_mask_1: 0.4006  loss_dice_1: 1.01  loss_ce_2: 0.1901  loss_mask_2: 0.3813  loss_dice_2: 0.9778  loss_ce_3: 0.1421  loss_mask_3: 0.3716  loss_dice_3: 0.9714  loss_ce_4: 0.1571  loss_mask_4: 0.3705  loss_dice_4: 0.9614  loss_ce_5: 0.1576  loss_mask_5: 0.3698  loss_dice_5: 0.943  loss_ce_6: 0.1464  loss_mask_6: 0.3657  loss_dice_6: 0.9363  loss_ce_7: 0.1627  loss_mask_7: 0.3683  loss_dice_7: 0.9407  loss_ce_8: 0.1506  loss_mask_8: 0.3654  loss_dice_8: 0.938    time: 0.9349  last_time: 0.9192  data_time: 0.0317  last_data_time: 0.0318   lr: 0.0001  max_mem: 30049M
[10/18 09:02:48] d2.utils.events INFO:  eta: 0:29:50  iter: 1079  total_loss: 14.65  loss_ce: 0.1363  loss_mask: 0.3599  loss_dice: 0.9293  loss_ce_0: 0.1473  loss_mask_0: 0.4043  loss_dice_0: 1.058  loss_ce_1: 0.1487  loss_mask_1: 0.3813  loss_dice_1: 0.9844  loss_ce_2: 0.148  loss_mask_2: 0.3645  loss_dice_2: 0.9724  loss_ce_3: 0.1375  loss_mask_3: 0.3639  loss_dice_3: 0.9486  loss_ce_4: 0.1387  loss_mask_4: 0.366  loss_dice_4: 0.9296  loss_ce_5: 0.1225  loss_mask_5: 0.3585  loss_dice_5: 0.9216  loss_ce_6: 0.1282  loss_mask_6: 0.3603  loss_dice_6: 0.9508  loss_ce_7: 0.1106  loss_mask_7: 0.3623  loss_dice_7: 0.9397  loss_ce_8: 0.1325  loss_mask_8: 0.3595  loss_dice_8: 0.9288    time: 0.9348  last_time: 0.9039  data_time: 0.0335  last_data_time: 0.0307   lr: 0.0001  max_mem: 30049M
[10/18 09:03:07] d2.utils.events INFO:  eta: 0:29:33  iter: 1099  total_loss: 15.54  loss_ce: 0.1627  loss_mask: 0.3831  loss_dice: 0.9878  loss_ce_0: 0.164  loss_mask_0: 0.4272  loss_dice_0: 1.054  loss_ce_1: 0.1796  loss_mask_1: 0.4067  loss_dice_1: 1.045  loss_ce_2: 0.1829  loss_mask_2: 0.3843  loss_dice_2: 1.006  loss_ce_3: 0.1863  loss_mask_3: 0.386  loss_dice_3: 1.021  loss_ce_4: 0.1639  loss_mask_4: 0.3851  loss_dice_4: 1.033  loss_ce_5: 0.1568  loss_mask_5: 0.3844  loss_dice_5: 1.009  loss_ce_6: 0.1389  loss_mask_6: 0.3832  loss_dice_6: 0.9788  loss_ce_7: 0.1541  loss_mask_7: 0.381  loss_dice_7: 0.9786  loss_ce_8: 0.149  loss_mask_8: 0.3824  loss_dice_8: 0.9823    time: 0.9350  last_time: 0.9136  data_time: 0.0335  last_data_time: 0.0389   lr: 0.0001  max_mem: 30049M
[10/18 09:03:25] d2.utils.events INFO:  eta: 0:29:13  iter: 1119  total_loss: 15.7  loss_ce: 0.1276  loss_mask: 0.3942  loss_dice: 0.9742  loss_ce_0: 0.1834  loss_mask_0: 0.443  loss_dice_0: 1.073  loss_ce_1: 0.2008  loss_mask_1: 0.4173  loss_dice_1: 1.025  loss_ce_2: 0.203  loss_mask_2: 0.4166  loss_dice_2: 1.019  loss_ce_3: 0.165  loss_mask_3: 0.4195  loss_dice_3: 0.9884  loss_ce_4: 0.1604  loss_mask_4: 0.4184  loss_dice_4: 0.9953  loss_ce_5: 0.1754  loss_mask_5: 0.4222  loss_dice_5: 0.9903  loss_ce_6: 0.1504  loss_mask_6: 0.3934  loss_dice_6: 0.9842  loss_ce_7: 0.1506  loss_mask_7: 0.4081  loss_dice_7: 1  loss_ce_8: 0.1364  loss_mask_8: 0.3973  loss_dice_8: 0.9679    time: 0.9346  last_time: 0.9212  data_time: 0.0334  last_data_time: 0.0315   lr: 0.0001  max_mem: 30049M
[10/18 09:03:45] d2.utils.events INFO:  eta: 0:28:55  iter: 1139  total_loss: 14.86  loss_ce: 0.1295  loss_mask: 0.3624  loss_dice: 0.9303  loss_ce_0: 0.1566  loss_mask_0: 0.3985  loss_dice_0: 1.044  loss_ce_1: 0.1798  loss_mask_1: 0.3761  loss_dice_1: 0.994  loss_ce_2: 0.1543  loss_mask_2: 0.3801  loss_dice_2: 0.9643  loss_ce_3: 0.1401  loss_mask_3: 0.3672  loss_dice_3: 0.9476  loss_ce_4: 0.1561  loss_mask_4: 0.3641  loss_dice_4: 0.9424  loss_ce_5: 0.1547  loss_mask_5: 0.3584  loss_dice_5: 0.9309  loss_ce_6: 0.1423  loss_mask_6: 0.3578  loss_dice_6: 0.9204  loss_ce_7: 0.13  loss_mask_7: 0.3598  loss_dice_7: 0.933  loss_ce_8: 0.1273  loss_mask_8: 0.3625  loss_dice_8: 0.9211    time: 0.9350  last_time: 0.9299  data_time: 0.0321  last_data_time: 0.0308   lr: 0.0001  max_mem: 30049M
[10/18 09:04:04] d2.utils.events INFO:  eta: 0:28:36  iter: 1159  total_loss: 14.57  loss_ce: 0.1303  loss_mask: 0.3553  loss_dice: 0.9056  loss_ce_0: 0.1742  loss_mask_0: 0.3978  loss_dice_0: 1.026  loss_ce_1: 0.1795  loss_mask_1: 0.3833  loss_dice_1: 0.972  loss_ce_2: 0.1632  loss_mask_2: 0.3676  loss_dice_2: 0.9129  loss_ce_3: 0.1452  loss_mask_3: 0.3592  loss_dice_3: 0.9195  loss_ce_4: 0.15  loss_mask_4: 0.3572  loss_dice_4: 0.9332  loss_ce_5: 0.1432  loss_mask_5: 0.3555  loss_dice_5: 0.9001  loss_ce_6: 0.1407  loss_mask_6: 0.3558  loss_dice_6: 0.8956  loss_ce_7: 0.1434  loss_mask_7: 0.3598  loss_dice_7: 0.9025  loss_ce_8: 0.1246  loss_mask_8: 0.3594  loss_dice_8: 0.8894    time: 0.9353  last_time: 0.9871  data_time: 0.0311  last_data_time: 0.0310   lr: 0.0001  max_mem: 30049M
[10/18 09:04:23] d2.utils.events INFO:  eta: 0:28:18  iter: 1179  total_loss: 14.45  loss_ce: 0.1329  loss_mask: 0.3688  loss_dice: 0.9317  loss_ce_0: 0.1306  loss_mask_0: 0.388  loss_dice_0: 0.998  loss_ce_1: 0.1612  loss_mask_1: 0.3863  loss_dice_1: 0.9368  loss_ce_2: 0.1367  loss_mask_2: 0.3751  loss_dice_2: 0.9245  loss_ce_3: 0.1467  loss_mask_3: 0.3685  loss_dice_3: 0.9135  loss_ce_4: 0.1391  loss_mask_4: 0.3712  loss_dice_4: 0.93  loss_ce_5: 0.1255  loss_mask_5: 0.3673  loss_dice_5: 0.9101  loss_ce_6: 0.1242  loss_mask_6: 0.3699  loss_dice_6: 0.9205  loss_ce_7: 0.1405  loss_mask_7: 0.3692  loss_dice_7: 0.9023  loss_ce_8: 0.125  loss_mask_8: 0.373  loss_dice_8: 0.9181    time: 0.9355  last_time: 0.9836  data_time: 0.0310  last_data_time: 0.0312   lr: 0.0001  max_mem: 30049M
[10/18 09:04:41] d2.utils.events INFO:  eta: 0:28:00  iter: 1199  total_loss: 14.7  loss_ce: 0.1288  loss_mask: 0.3724  loss_dice: 0.9158  loss_ce_0: 0.1416  loss_mask_0: 0.4095  loss_dice_0: 1.005  loss_ce_1: 0.1667  loss_mask_1: 0.3885  loss_dice_1: 0.9483  loss_ce_2: 0.1399  loss_mask_2: 0.3858  loss_dice_2: 0.9349  loss_ce_3: 0.1462  loss_mask_3: 0.3767  loss_dice_3: 0.9247  loss_ce_4: 0.1569  loss_mask_4: 0.38  loss_dice_4: 0.9115  loss_ce_5: 0.1468  loss_mask_5: 0.3793  loss_dice_5: 0.9221  loss_ce_6: 0.1375  loss_mask_6: 0.3742  loss_dice_6: 0.9261  loss_ce_7: 0.1333  loss_mask_7: 0.3721  loss_dice_7: 0.9137  loss_ce_8: 0.1186  loss_mask_8: 0.3767  loss_dice_8: 0.9002    time: 0.9355  last_time: 0.9543  data_time: 0.0345  last_data_time: 0.0320   lr: 0.0001  max_mem: 30049M
[10/18 09:05:00] d2.utils.events INFO:  eta: 0:27:41  iter: 1219  total_loss: 14.28  loss_ce: 0.1301  loss_mask: 0.3582  loss_dice: 0.883  loss_ce_0: 0.1757  loss_mask_0: 0.3858  loss_dice_0: 1.017  loss_ce_1: 0.1785  loss_mask_1: 0.3525  loss_dice_1: 0.9662  loss_ce_2: 0.2056  loss_mask_2: 0.3571  loss_dice_2: 0.9274  loss_ce_3: 0.1508  loss_mask_3: 0.3608  loss_dice_3: 0.8861  loss_ce_4: 0.159  loss_mask_4: 0.3554  loss_dice_4: 0.9016  loss_ce_5: 0.1489  loss_mask_5: 0.3449  loss_dice_5: 0.912  loss_ce_6: 0.1418  loss_mask_6: 0.3538  loss_dice_6: 0.8741  loss_ce_7: 0.1296  loss_mask_7: 0.3533  loss_dice_7: 0.8844  loss_ce_8: 0.1331  loss_mask_8: 0.361  loss_dice_8: 0.8837    time: 0.9357  last_time: 0.9833  data_time: 0.0314  last_data_time: 0.0304   lr: 0.0001  max_mem: 30049M
[10/18 09:05:19] d2.utils.events INFO:  eta: 0:27:23  iter: 1239  total_loss: 14.39  loss_ce: 0.1585  loss_mask: 0.3366  loss_dice: 0.8459  loss_ce_0: 0.1942  loss_mask_0: 0.36  loss_dice_0: 0.9949  loss_ce_1: 0.1989  loss_mask_1: 0.3432  loss_dice_1: 0.9449  loss_ce_2: 0.2208  loss_mask_2: 0.3427  loss_dice_2: 0.9227  loss_ce_3: 0.1973  loss_mask_3: 0.3394  loss_dice_3: 0.8796  loss_ce_4: 0.1745  loss_mask_4: 0.3412  loss_dice_4: 0.9022  loss_ce_5: 0.1617  loss_mask_5: 0.337  loss_dice_5: 0.9164  loss_ce_6: 0.163  loss_mask_6: 0.335  loss_dice_6: 0.8811  loss_ce_7: 0.1574  loss_mask_7: 0.3369  loss_dice_7: 0.896  loss_ce_8: 0.1563  loss_mask_8: 0.3333  loss_dice_8: 0.8898    time: 0.9357  last_time: 0.9508  data_time: 0.0328  last_data_time: 0.0320   lr: 0.0001  max_mem: 30049M
[10/18 09:05:38] d2.utils.events INFO:  eta: 0:27:05  iter: 1259  total_loss: 14.46  loss_ce: 0.151  loss_mask: 0.3669  loss_dice: 0.8937  loss_ce_0: 0.171  loss_mask_0: 0.3846  loss_dice_0: 1.022  loss_ce_1: 0.1746  loss_mask_1: 0.3751  loss_dice_1: 0.9751  loss_ce_2: 0.1736  loss_mask_2: 0.3776  loss_dice_2: 0.9289  loss_ce_3: 0.1626  loss_mask_3: 0.3667  loss_dice_3: 0.9242  loss_ce_4: 0.167  loss_mask_4: 0.3579  loss_dice_4: 0.9185  loss_ce_5: 0.1685  loss_mask_5: 0.3609  loss_dice_5: 0.9032  loss_ce_6: 0.1529  loss_mask_6: 0.3586  loss_dice_6: 0.904  loss_ce_7: 0.1512  loss_mask_7: 0.3667  loss_dice_7: 0.8957  loss_ce_8: 0.1485  loss_mask_8: 0.3631  loss_dice_8: 0.9046    time: 0.9359  last_time: 0.9487  data_time: 0.0331  last_data_time: 0.0320   lr: 0.0001  max_mem: 30049M
[10/18 09:05:57] d2.utils.events INFO:  eta: 0:26:47  iter: 1279  total_loss: 14.31  loss_ce: 0.1573  loss_mask: 0.3443  loss_dice: 0.8657  loss_ce_0: 0.1937  loss_mask_0: 0.3717  loss_dice_0: 0.978  loss_ce_1: 0.1776  loss_mask_1: 0.3542  loss_dice_1: 0.9269  loss_ce_2: 0.1926  loss_mask_2: 0.3465  loss_dice_2: 0.9074  loss_ce_3: 0.1935  loss_mask_3: 0.3386  loss_dice_3: 0.9147  loss_ce_4: 0.184  loss_mask_4: 0.3393  loss_dice_4: 0.8656  loss_ce_5: 0.1925  loss_mask_5: 0.3391  loss_dice_5: 0.8661  loss_ce_6: 0.1557  loss_mask_6: 0.3389  loss_dice_6: 0.8751  loss_ce_7: 0.1698  loss_mask_7: 0.3403  loss_dice_7: 0.8736  loss_ce_8: 0.1469  loss_mask_8: 0.3397  loss_dice_8: 0.8882    time: 0.9359  last_time: 0.9455  data_time: 0.0354  last_data_time: 0.0399   lr: 0.0001  max_mem: 30049M
[10/18 09:06:16] d2.utils.events INFO:  eta: 0:26:28  iter: 1299  total_loss: 15.14  loss_ce: 0.1325  loss_mask: 0.3455  loss_dice: 0.9542  loss_ce_0: 0.1737  loss_mask_0: 0.3992  loss_dice_0: 1.037  loss_ce_1: 0.1722  loss_mask_1: 0.3753  loss_dice_1: 0.9971  loss_ce_2: 0.168  loss_mask_2: 0.3481  loss_dice_2: 0.975  loss_ce_3: 0.1559  loss_mask_3: 0.3488  loss_dice_3: 0.9618  loss_ce_4: 0.1653  loss_mask_4: 0.345  loss_dice_4: 0.9742  loss_ce_5: 0.1505  loss_mask_5: 0.3391  loss_dice_5: 0.9344  loss_ce_6: 0.148  loss_mask_6: 0.3444  loss_dice_6: 0.9456  loss_ce_7: 0.1677  loss_mask_7: 0.3431  loss_dice_7: 0.9307  loss_ce_8: 0.1636  loss_mask_8: 0.3449  loss_dice_8: 0.944    time: 0.9361  last_time: 0.9446  data_time: 0.0328  last_data_time: 0.0319   lr: 0.0001  max_mem: 30049M
[10/18 09:06:35] d2.utils.events INFO:  eta: 0:26:09  iter: 1319  total_loss: 14.95  loss_ce: 0.1391  loss_mask: 0.3573  loss_dice: 0.9577  loss_ce_0: 0.1472  loss_mask_0: 0.3873  loss_dice_0: 1.03  loss_ce_1: 0.1703  loss_mask_1: 0.3681  loss_dice_1: 1.008  loss_ce_2: 0.1717  loss_mask_2: 0.3644  loss_dice_2: 0.9676  loss_ce_3: 0.1642  loss_mask_3: 0.3627  loss_dice_3: 0.9705  loss_ce_4: 0.1369  loss_mask_4: 0.3617  loss_dice_4: 0.9486  loss_ce_5: 0.137  loss_mask_5: 0.3674  loss_dice_5: 0.9724  loss_ce_6: 0.1358  loss_mask_6: 0.3596  loss_dice_6: 0.9755  loss_ce_7: 0.1311  loss_mask_7: 0.3575  loss_dice_7: 0.9745  loss_ce_8: 0.1355  loss_mask_8: 0.3565  loss_dice_8: 0.9504    time: 0.9362  last_time: 0.9499  data_time: 0.0323  last_data_time: 0.0379   lr: 0.0001  max_mem: 30049M
[10/18 09:06:54] d2.utils.events INFO:  eta: 0:25:50  iter: 1339  total_loss: 14.62  loss_ce: 0.1468  loss_mask: 0.367  loss_dice: 0.8934  loss_ce_0: 0.1653  loss_mask_0: 0.4182  loss_dice_0: 1.037  loss_ce_1: 0.1849  loss_mask_1: 0.3933  loss_dice_1: 0.9556  loss_ce_2: 0.1893  loss_mask_2: 0.357  loss_dice_2: 0.9324  loss_ce_3: 0.1704  loss_mask_3: 0.3588  loss_dice_3: 0.9259  loss_ce_4: 0.1447  loss_mask_4: 0.3536  loss_dice_4: 0.9407  loss_ce_5: 0.1515  loss_mask_5: 0.3568  loss_dice_5: 0.8945  loss_ce_6: 0.1459  loss_mask_6: 0.3706  loss_dice_6: 0.9247  loss_ce_7: 0.1625  loss_mask_7: 0.3657  loss_dice_7: 0.9162  loss_ce_8: 0.1505  loss_mask_8: 0.3674  loss_dice_8: 0.9205    time: 0.9362  last_time: 0.9455  data_time: 0.0320  last_data_time: 0.0383   lr: 0.0001  max_mem: 30049M
[10/18 09:07:12] d2.utils.events INFO:  eta: 0:25:31  iter: 1359  total_loss: 14.63  loss_ce: 0.1547  loss_mask: 0.3549  loss_dice: 0.9103  loss_ce_0: 0.1754  loss_mask_0: 0.3939  loss_dice_0: 1.019  loss_ce_1: 0.1848  loss_mask_1: 0.3537  loss_dice_1: 0.9858  loss_ce_2: 0.1726  loss_mask_2: 0.3536  loss_dice_2: 0.9373  loss_ce_3: 0.1684  loss_mask_3: 0.3483  loss_dice_3: 0.8954  loss_ce_4: 0.1689  loss_mask_4: 0.3509  loss_dice_4: 0.9248  loss_ce_5: 0.158  loss_mask_5: 0.3536  loss_dice_5: 0.9113  loss_ce_6: 0.1559  loss_mask_6: 0.3502  loss_dice_6: 0.8984  loss_ce_7: 0.1365  loss_mask_7: 0.3535  loss_dice_7: 0.9259  loss_ce_8: 0.1429  loss_mask_8: 0.3543  loss_dice_8: 0.9166    time: 0.9361  last_time: 0.9279  data_time: 0.0366  last_data_time: 0.0388   lr: 0.0001  max_mem: 30049M
[10/18 09:07:31] d2.utils.events INFO:  eta: 0:25:12  iter: 1379  total_loss: 13.95  loss_ce: 0.1297  loss_mask: 0.3381  loss_dice: 0.8915  loss_ce_0: 0.1465  loss_mask_0: 0.355  loss_dice_0: 0.9936  loss_ce_1: 0.177  loss_mask_1: 0.3411  loss_dice_1: 0.9222  loss_ce_2: 0.1578  loss_mask_2: 0.3467  loss_dice_2: 0.9123  loss_ce_3: 0.1725  loss_mask_3: 0.3457  loss_dice_3: 0.8874  loss_ce_4: 0.1518  loss_mask_4: 0.3449  loss_dice_4: 0.9065  loss_ce_5: 0.1409  loss_mask_5: 0.3418  loss_dice_5: 0.899  loss_ce_6: 0.1267  loss_mask_6: 0.3381  loss_dice_6: 0.8971  loss_ce_7: 0.1209  loss_mask_7: 0.3388  loss_dice_7: 0.8935  loss_ce_8: 0.1293  loss_mask_8: 0.3396  loss_dice_8: 0.8954    time: 0.9360  last_time: 0.9089  data_time: 0.0359  last_data_time: 0.0303   lr: 0.0001  max_mem: 30049M
[10/18 09:07:50] d2.utils.events INFO:  eta: 0:24:53  iter: 1399  total_loss: 14.28  loss_ce: 0.118  loss_mask: 0.352  loss_dice: 0.8907  loss_ce_0: 0.1478  loss_mask_0: 0.3894  loss_dice_0: 0.9824  loss_ce_1: 0.18  loss_mask_1: 0.3697  loss_dice_1: 0.9404  loss_ce_2: 0.1686  loss_mask_2: 0.3542  loss_dice_2: 0.9049  loss_ce_3: 0.1528  loss_mask_3: 0.3527  loss_dice_3: 0.8763  loss_ce_4: 0.1436  loss_mask_4: 0.354  loss_dice_4: 0.8695  loss_ce_5: 0.1421  loss_mask_5: 0.3456  loss_dice_5: 0.8983  loss_ce_6: 0.1243  loss_mask_6: 0.3499  loss_dice_6: 0.8962  loss_ce_7: 0.1274  loss_mask_7: 0.3561  loss_dice_7: 0.8936  loss_ce_8: 0.1246  loss_mask_8: 0.3503  loss_dice_8: 0.8852    time: 0.9361  last_time: 0.9491  data_time: 0.0326  last_data_time: 0.0287   lr: 0.0001  max_mem: 30049M
[10/18 09:08:09] d2.utils.events INFO:  eta: 0:24:34  iter: 1419  total_loss: 13.99  loss_ce: 0.1505  loss_mask: 0.3222  loss_dice: 0.8841  loss_ce_0: 0.153  loss_mask_0: 0.3607  loss_dice_0: 0.9658  loss_ce_1: 0.1813  loss_mask_1: 0.3417  loss_dice_1: 0.9134  loss_ce_2: 0.178  loss_mask_2: 0.3305  loss_dice_2: 0.9101  loss_ce_3: 0.1783  loss_mask_3: 0.3294  loss_dice_3: 0.8868  loss_ce_4: 0.162  loss_mask_4: 0.3287  loss_dice_4: 0.8915  loss_ce_5: 0.1569  loss_mask_5: 0.3289  loss_dice_5: 0.889  loss_ce_6: 0.1514  loss_mask_6: 0.3214  loss_dice_6: 0.8608  loss_ce_7: 0.1488  loss_mask_7: 0.3217  loss_dice_7: 0.8848  loss_ce_8: 0.1504  loss_mask_8: 0.3241  loss_dice_8: 0.8776    time: 0.9362  last_time: 0.9297  data_time: 0.0326  last_data_time: 0.0306   lr: 0.0001  max_mem: 30049M
[10/18 09:08:28] d2.utils.events INFO:  eta: 0:24:17  iter: 1439  total_loss: 14.67  loss_ce: 0.117  loss_mask: 0.3777  loss_dice: 0.9212  loss_ce_0: 0.1303  loss_mask_0: 0.4029  loss_dice_0: 1.013  loss_ce_1: 0.1558  loss_mask_1: 0.375  loss_dice_1: 0.9658  loss_ce_2: 0.1491  loss_mask_2: 0.376  loss_dice_2: 0.9283  loss_ce_3: 0.1415  loss_mask_3: 0.3768  loss_dice_3: 0.9122  loss_ce_4: 0.1213  loss_mask_4: 0.3825  loss_dice_4: 0.9365  loss_ce_5: 0.1162  loss_mask_5: 0.3831  loss_dice_5: 0.9287  loss_ce_6: 0.1297  loss_mask_6: 0.3777  loss_dice_6: 0.893  loss_ce_7: 0.1077  loss_mask_7: 0.3708  loss_dice_7: 0.9163  loss_ce_8: 0.1026  loss_mask_8: 0.3745  loss_dice_8: 0.9121    time: 0.9364  last_time: 0.9006  data_time: 0.0331  last_data_time: 0.0294   lr: 0.0001  max_mem: 30049M
[10/18 09:08:46] d2.utils.events INFO:  eta: 0:23:56  iter: 1459  total_loss: 14.68  loss_ce: 0.1365  loss_mask: 0.3956  loss_dice: 0.9042  loss_ce_0: 0.1637  loss_mask_0: 0.426  loss_dice_0: 1.025  loss_ce_1: 0.1614  loss_mask_1: 0.4006  loss_dice_1: 0.9636  loss_ce_2: 0.1521  loss_mask_2: 0.3905  loss_dice_2: 0.946  loss_ce_3: 0.1466  loss_mask_3: 0.3776  loss_dice_3: 0.9139  loss_ce_4: 0.1326  loss_mask_4: 0.3915  loss_dice_4: 0.9162  loss_ce_5: 0.1246  loss_mask_5: 0.3945  loss_dice_5: 0.9068  loss_ce_6: 0.1439  loss_mask_6: 0.386  loss_dice_6: 0.8979  loss_ce_7: 0.1252  loss_mask_7: 0.3819  loss_dice_7: 0.9039  loss_ce_8: 0.1272  loss_mask_8: 0.3861  loss_dice_8: 0.882    time: 0.9363  last_time: 0.9282  data_time: 0.0343  last_data_time: 0.0315   lr: 0.0001  max_mem: 30049M
[10/18 09:09:05] d2.utils.events INFO:  eta: 0:23:36  iter: 1479  total_loss: 14.7  loss_ce: 0.1231  loss_mask: 0.3549  loss_dice: 0.9153  loss_ce_0: 0.1654  loss_mask_0: 0.3846  loss_dice_0: 1.011  loss_ce_1: 0.1842  loss_mask_1: 0.3771  loss_dice_1: 0.9627  loss_ce_2: 0.1605  loss_mask_2: 0.3692  loss_dice_2: 0.946  loss_ce_3: 0.163  loss_mask_3: 0.3526  loss_dice_3: 0.9309  loss_ce_4: 0.1445  loss_mask_4: 0.3516  loss_dice_4: 0.9184  loss_ce_5: 0.1404  loss_mask_5: 0.3553  loss_dice_5: 0.9384  loss_ce_6: 0.13  loss_mask_6: 0.3523  loss_dice_6: 0.9272  loss_ce_7: 0.1413  loss_mask_7: 0.3569  loss_dice_7: 0.9206  loss_ce_8: 0.1373  loss_mask_8: 0.3523  loss_dice_8: 0.9134    time: 0.9360  last_time: 0.9019  data_time: 0.0337  last_data_time: 0.0302   lr: 0.0001  max_mem: 30049M
[10/18 09:09:24] d2.utils.events INFO:  eta: 0:23:19  iter: 1499  total_loss: 13.28  loss_ce: 0.1009  loss_mask: 0.345  loss_dice: 0.8943  loss_ce_0: 0.1354  loss_mask_0: 0.3748  loss_dice_0: 0.9731  loss_ce_1: 0.1517  loss_mask_1: 0.351  loss_dice_1: 0.9153  loss_ce_2: 0.1591  loss_mask_2: 0.3503  loss_dice_2: 0.9029  loss_ce_3: 0.1135  loss_mask_3: 0.3433  loss_dice_3: 0.8993  loss_ce_4: 0.1035  loss_mask_4: 0.348  loss_dice_4: 0.8595  loss_ce_5: 0.1081  loss_mask_5: 0.3451  loss_dice_5: 0.8891  loss_ce_6: 0.1106  loss_mask_6: 0.3471  loss_dice_6: 0.8603  loss_ce_7: 0.1073  loss_mask_7: 0.3507  loss_dice_7: 0.8573  loss_ce_8: 0.1053  loss_mask_8: 0.3517  loss_dice_8: 0.8691    time: 0.9360  last_time: 0.9781  data_time: 0.0346  last_data_time: 0.0314   lr: 0.0001  max_mem: 30049M
[10/18 09:09:42] d2.utils.events INFO:  eta: 0:23:01  iter: 1519  total_loss: 13.76  loss_ce: 0.1069  loss_mask: 0.3542  loss_dice: 0.8447  loss_ce_0: 0.1243  loss_mask_0: 0.4044  loss_dice_0: 0.9424  loss_ce_1: 0.1532  loss_mask_1: 0.3749  loss_dice_1: 0.9067  loss_ce_2: 0.1368  loss_mask_2: 0.3633  loss_dice_2: 0.8767  loss_ce_3: 0.1221  loss_mask_3: 0.3556  loss_dice_3: 0.8915  loss_ce_4: 0.1233  loss_mask_4: 0.3558  loss_dice_4: 0.8978  loss_ce_5: 0.1112  loss_mask_5: 0.356  loss_dice_5: 0.8757  loss_ce_6: 0.1142  loss_mask_6: 0.3574  loss_dice_6: 0.866  loss_ce_7: 0.103  loss_mask_7: 0.3567  loss_dice_7: 0.8708  loss_ce_8: 0.093  loss_mask_8: 0.353  loss_dice_8: 0.8762    time: 0.9360  last_time: 0.9342  data_time: 0.0357  last_data_time: 0.0373   lr: 0.0001  max_mem: 30049M
[10/18 09:10:01] d2.utils.events INFO:  eta: 0:22:43  iter: 1539  total_loss: 13.42  loss_ce: 0.1342  loss_mask: 0.331  loss_dice: 0.8531  loss_ce_0: 0.1817  loss_mask_0: 0.3681  loss_dice_0: 0.9444  loss_ce_1: 0.1826  loss_mask_1: 0.3488  loss_dice_1: 0.9085  loss_ce_2: 0.1727  loss_mask_2: 0.3388  loss_dice_2: 0.8769  loss_ce_3: 0.151  loss_mask_3: 0.3359  loss_dice_3: 0.8721  loss_ce_4: 0.1713  loss_mask_4: 0.3199  loss_dice_4: 0.8446  loss_ce_5: 0.1396  loss_mask_5: 0.3275  loss_dice_5: 0.8686  loss_ce_6: 0.137  loss_mask_6: 0.3282  loss_dice_6: 0.8696  loss_ce_7: 0.1427  loss_mask_7: 0.3279  loss_dice_7: 0.8474  loss_ce_8: 0.1273  loss_mask_8: 0.3331  loss_dice_8: 0.8541    time: 0.9361  last_time: 0.9266  data_time: 0.0337  last_data_time: 0.0318   lr: 0.0001  max_mem: 30049M
[10/18 09:10:21] d2.utils.events INFO:  eta: 0:22:25  iter: 1559  total_loss: 12.96  loss_ce: 0.1078  loss_mask: 0.3302  loss_dice: 0.7972  loss_ce_0: 0.1528  loss_mask_0: 0.3542  loss_dice_0: 0.8857  loss_ce_1: 0.1543  loss_mask_1: 0.3377  loss_dice_1: 0.8748  loss_ce_2: 0.1332  loss_mask_2: 0.34  loss_dice_2: 0.8555  loss_ce_3: 0.1185  loss_mask_3: 0.3415  loss_dice_3: 0.8351  loss_ce_4: 0.1025  loss_mask_4: 0.3348  loss_dice_4: 0.8214  loss_ce_5: 0.1144  loss_mask_5: 0.3351  loss_dice_5: 0.8507  loss_ce_6: 0.1055  loss_mask_6: 0.3346  loss_dice_6: 0.8099  loss_ce_7: 0.1013  loss_mask_7: 0.3287  loss_dice_7: 0.8295  loss_ce_8: 0.1013  loss_mask_8: 0.329  loss_dice_8: 0.8268    time: 0.9365  last_time: 0.9585  data_time: 0.0341  last_data_time: 0.0299   lr: 0.0001  max_mem: 30049M
[10/18 09:10:40] d2.utils.events INFO:  eta: 0:22:07  iter: 1579  total_loss: 14.1  loss_ce: 0.1134  loss_mask: 0.3519  loss_dice: 0.8661  loss_ce_0: 0.1405  loss_mask_0: 0.3651  loss_dice_0: 0.9863  loss_ce_1: 0.1763  loss_mask_1: 0.3649  loss_dice_1: 0.9583  loss_ce_2: 0.1305  loss_mask_2: 0.3541  loss_dice_2: 0.9067  loss_ce_3: 0.1324  loss_mask_3: 0.3621  loss_dice_3: 0.8935  loss_ce_4: 0.1123  loss_mask_4: 0.3547  loss_dice_4: 0.8917  loss_ce_5: 0.1279  loss_mask_5: 0.3531  loss_dice_5: 0.9088  loss_ce_6: 0.1193  loss_mask_6: 0.3527  loss_dice_6: 0.8868  loss_ce_7: 0.1283  loss_mask_7: 0.3483  loss_dice_7: 0.908  loss_ce_8: 0.1026  loss_mask_8: 0.3475  loss_dice_8: 0.8928    time: 0.9367  last_time: 0.9476  data_time: 0.0336  last_data_time: 0.0305   lr: 0.0001  max_mem: 30049M
[10/18 09:10:59] d2.utils.events INFO:  eta: 0:21:47  iter: 1599  total_loss: 13.77  loss_ce: 0.1334  loss_mask: 0.337  loss_dice: 0.8346  loss_ce_0: 0.1487  loss_mask_0: 0.3705  loss_dice_0: 0.9577  loss_ce_1: 0.1601  loss_mask_1: 0.3563  loss_dice_1: 0.9204  loss_ce_2: 0.1712  loss_mask_2: 0.3474  loss_dice_2: 0.8962  loss_ce_3: 0.1828  loss_mask_3: 0.3391  loss_dice_3: 0.8795  loss_ce_4: 0.1517  loss_mask_4: 0.3442  loss_dice_4: 0.8879  loss_ce_5: 0.1276  loss_mask_5: 0.3421  loss_dice_5: 0.8983  loss_ce_6: 0.1386  loss_mask_6: 0.338  loss_dice_6: 0.8601  loss_ce_7: 0.1339  loss_mask_7: 0.338  loss_dice_7: 0.872  loss_ce_8: 0.1373  loss_mask_8: 0.3376  loss_dice_8: 0.8624    time: 0.9367  last_time: 0.9922  data_time: 0.0345  last_data_time: 0.0398   lr: 0.0001  max_mem: 30049M
[10/18 09:11:17] d2.utils.events INFO:  eta: 0:21:29  iter: 1619  total_loss: 14.38  loss_ce: 0.1108  loss_mask: 0.3688  loss_dice: 0.8868  loss_ce_0: 0.1243  loss_mask_0: 0.4099  loss_dice_0: 0.99  loss_ce_1: 0.144  loss_mask_1: 0.3892  loss_dice_1: 0.9263  loss_ce_2: 0.1389  loss_mask_2: 0.3839  loss_dice_2: 0.9155  loss_ce_3: 0.1302  loss_mask_3: 0.374  loss_dice_3: 0.9061  loss_ce_4: 0.1218  loss_mask_4: 0.3771  loss_dice_4: 0.9004  loss_ce_5: 0.1166  loss_mask_5: 0.3727  loss_dice_5: 0.9038  loss_ce_6: 0.1205  loss_mask_6: 0.3743  loss_dice_6: 0.9  loss_ce_7: 0.1057  loss_mask_7: 0.374  loss_dice_7: 0.8891  loss_ce_8: 0.09906  loss_mask_8: 0.3711  loss_dice_8: 0.8949    time: 0.9366  last_time: 0.9086  data_time: 0.0347  last_data_time: 0.0350   lr: 0.0001  max_mem: 30049M
[10/18 09:11:36] d2.utils.events INFO:  eta: 0:21:09  iter: 1639  total_loss: 14.21  loss_ce: 0.135  loss_mask: 0.3484  loss_dice: 0.8531  loss_ce_0: 0.1534  loss_mask_0: 0.3699  loss_dice_0: 0.9116  loss_ce_1: 0.1588  loss_mask_1: 0.3518  loss_dice_1: 0.9273  loss_ce_2: 0.1498  loss_mask_2: 0.3457  loss_dice_2: 0.881  loss_ce_3: 0.1514  loss_mask_3: 0.3479  loss_dice_3: 0.8746  loss_ce_4: 0.1314  loss_mask_4: 0.3474  loss_dice_4: 0.8762  loss_ce_5: 0.1272  loss_mask_5: 0.3459  loss_dice_5: 0.8619  loss_ce_6: 0.1414  loss_mask_6: 0.3489  loss_dice_6: 0.856  loss_ce_7: 0.1386  loss_mask_7: 0.3539  loss_dice_7: 0.8474  loss_ce_8: 0.1298  loss_mask_8: 0.3455  loss_dice_8: 0.8559    time: 0.9364  last_time: 0.9033  data_time: 0.0348  last_data_time: 0.0310   lr: 0.0001  max_mem: 30049M
[10/18 09:11:54] d2.utils.events INFO:  eta: 0:20:50  iter: 1659  total_loss: 14.15  loss_ce: 0.1401  loss_mask: 0.3436  loss_dice: 0.8963  loss_ce_0: 0.1414  loss_mask_0: 0.3856  loss_dice_0: 0.9955  loss_ce_1: 0.1597  loss_mask_1: 0.352  loss_dice_1: 0.9314  loss_ce_2: 0.1566  loss_mask_2: 0.3398  loss_dice_2: 0.9199  loss_ce_3: 0.1519  loss_mask_3: 0.332  loss_dice_3: 0.8945  loss_ce_4: 0.1244  loss_mask_4: 0.3549  loss_dice_4: 0.9075  loss_ce_5: 0.1428  loss_mask_5: 0.3431  loss_dice_5: 0.9168  loss_ce_6: 0.1386  loss_mask_6: 0.3453  loss_dice_6: 0.9019  loss_ce_7: 0.1318  loss_mask_7: 0.34  loss_dice_7: 0.8974  loss_ce_8: 0.1346  loss_mask_8: 0.3373  loss_dice_8: 0.8892    time: 0.9361  last_time: 0.9471  data_time: 0.0358  last_data_time: 0.0387   lr: 0.0001  max_mem: 30049M
[10/18 09:12:13] d2.utils.events INFO:  eta: 0:20:32  iter: 1679  total_loss: 14.27  loss_ce: 0.1422  loss_mask: 0.3362  loss_dice: 0.8854  loss_ce_0: 0.1779  loss_mask_0: 0.3622  loss_dice_0: 0.9824  loss_ce_1: 0.1866  loss_mask_1: 0.3439  loss_dice_1: 0.9255  loss_ce_2: 0.183  loss_mask_2: 0.3417  loss_dice_2: 0.9171  loss_ce_3: 0.1448  loss_mask_3: 0.335  loss_dice_3: 0.8868  loss_ce_4: 0.146  loss_mask_4: 0.3329  loss_dice_4: 0.8992  loss_ce_5: 0.1432  loss_mask_5: 0.334  loss_dice_5: 0.878  loss_ce_6: 0.1391  loss_mask_6: 0.3382  loss_dice_6: 0.9012  loss_ce_7: 0.1309  loss_mask_7: 0.3355  loss_dice_7: 0.8855  loss_ce_8: 0.1382  loss_mask_8: 0.3378  loss_dice_8: 0.8893    time: 0.9361  last_time: 0.9390  data_time: 0.0349  last_data_time: 0.0313   lr: 0.0001  max_mem: 30049M
[10/18 09:12:32] d2.utils.events INFO:  eta: 0:20:14  iter: 1699  total_loss: 14.06  loss_ce: 0.118  loss_mask: 0.333  loss_dice: 0.8704  loss_ce_0: 0.1799  loss_mask_0: 0.3834  loss_dice_0: 0.963  loss_ce_1: 0.1728  loss_mask_1: 0.3673  loss_dice_1: 0.9144  loss_ce_2: 0.1361  loss_mask_2: 0.3417  loss_dice_2: 0.9143  loss_ce_3: 0.1424  loss_mask_3: 0.3425  loss_dice_3: 0.8519  loss_ce_4: 0.136  loss_mask_4: 0.3384  loss_dice_4: 0.8718  loss_ce_5: 0.1209  loss_mask_5: 0.3456  loss_dice_5: 0.883  loss_ce_6: 0.1459  loss_mask_6: 0.3305  loss_dice_6: 0.851  loss_ce_7: 0.1177  loss_mask_7: 0.3354  loss_dice_7: 0.8532  loss_ce_8: 0.1151  loss_mask_8: 0.3348  loss_dice_8: 0.8594    time: 0.9364  last_time: 0.9636  data_time: 0.0331  last_data_time: 0.0309   lr: 0.0001  max_mem: 30049M
[10/18 09:12:51] d2.utils.events INFO:  eta: 0:19:56  iter: 1719  total_loss: 13.88  loss_ce: 0.1333  loss_mask: 0.3387  loss_dice: 0.9014  loss_ce_0: 0.1639  loss_mask_0: 0.3607  loss_dice_0: 0.9848  loss_ce_1: 0.1856  loss_mask_1: 0.3587  loss_dice_1: 0.9481  loss_ce_2: 0.1615  loss_mask_2: 0.3497  loss_dice_2: 0.9269  loss_ce_3: 0.1889  loss_mask_3: 0.3422  loss_dice_3: 0.9072  loss_ce_4: 0.1526  loss_mask_4: 0.3406  loss_dice_4: 0.894  loss_ce_5: 0.1541  loss_mask_5: 0.3368  loss_dice_5: 0.8911  loss_ce_6: 0.1399  loss_mask_6: 0.3438  loss_dice_6: 0.9111  loss_ce_7: 0.1471  loss_mask_7: 0.3443  loss_dice_7: 0.8934  loss_ce_8: 0.1387  loss_mask_8: 0.3419  loss_dice_8: 0.8882    time: 0.9364  last_time: 0.9507  data_time: 0.0325  last_data_time: 0.0402   lr: 0.0001  max_mem: 30049M
[10/18 09:13:10] d2.utils.events INFO:  eta: 0:19:38  iter: 1739  total_loss: 13.55  loss_ce: 0.1313  loss_mask: 0.3259  loss_dice: 0.8502  loss_ce_0: 0.1341  loss_mask_0: 0.3556  loss_dice_0: 0.9595  loss_ce_1: 0.1659  loss_mask_1: 0.3509  loss_dice_1: 0.9045  loss_ce_2: 0.124  loss_mask_2: 0.3357  loss_dice_2: 0.8534  loss_ce_3: 0.1404  loss_mask_3: 0.3303  loss_dice_3: 0.8804  loss_ce_4: 0.1303  loss_mask_4: 0.3256  loss_dice_4: 0.8464  loss_ce_5: 0.1317  loss_mask_5: 0.3307  loss_dice_5: 0.8692  loss_ce_6: 0.1269  loss_mask_6: 0.3304  loss_dice_6: 0.8437  loss_ce_7: 0.1348  loss_mask_7: 0.3321  loss_dice_7: 0.8375  loss_ce_8: 0.118  loss_mask_8: 0.3263  loss_dice_8: 0.8368    time: 0.9365  last_time: 0.9486  data_time: 0.0326  last_data_time: 0.0303   lr: 0.0001  max_mem: 30049M
[10/18 09:13:29] d2.utils.events INFO:  eta: 0:19:19  iter: 1759  total_loss: 13.7  loss_ce: 0.1233  loss_mask: 0.3328  loss_dice: 0.8635  loss_ce_0: 0.1592  loss_mask_0: 0.3757  loss_dice_0: 0.9567  loss_ce_1: 0.1564  loss_mask_1: 0.3528  loss_dice_1: 0.8993  loss_ce_2: 0.1403  loss_mask_2: 0.339  loss_dice_2: 0.8967  loss_ce_3: 0.1514  loss_mask_3: 0.337  loss_dice_3: 0.8816  loss_ce_4: 0.1378  loss_mask_4: 0.3317  loss_dice_4: 0.8798  loss_ce_5: 0.1249  loss_mask_5: 0.3308  loss_dice_5: 0.8897  loss_ce_6: 0.1328  loss_mask_6: 0.3316  loss_dice_6: 0.8619  loss_ce_7: 0.125  loss_mask_7: 0.3352  loss_dice_7: 0.8577  loss_ce_8: 0.1396  loss_mask_8: 0.3321  loss_dice_8: 0.872    time: 0.9365  last_time: 0.9049  data_time: 0.0334  last_data_time: 0.0309   lr: 0.0001  max_mem: 30049M
[10/18 09:13:47] d2.utils.events INFO:  eta: 0:19:00  iter: 1779  total_loss: 14.01  loss_ce: 0.1325  loss_mask: 0.3577  loss_dice: 0.8764  loss_ce_0: 0.1365  loss_mask_0: 0.3919  loss_dice_0: 0.9851  loss_ce_1: 0.1709  loss_mask_1: 0.3748  loss_dice_1: 0.9231  loss_ce_2: 0.1508  loss_mask_2: 0.3638  loss_dice_2: 0.9319  loss_ce_3: 0.1535  loss_mask_3: 0.3632  loss_dice_3: 0.9005  loss_ce_4: 0.1496  loss_mask_4: 0.3605  loss_dice_4: 0.887  loss_ce_5: 0.1223  loss_mask_5: 0.3653  loss_dice_5: 0.8886  loss_ce_6: 0.1279  loss_mask_6: 0.3616  loss_dice_6: 0.8909  loss_ce_7: 0.1242  loss_mask_7: 0.3596  loss_dice_7: 0.8875  loss_ce_8: 0.1418  loss_mask_8: 0.3627  loss_dice_8: 0.8532    time: 0.9365  last_time: 0.9796  data_time: 0.0327  last_data_time: 0.0316   lr: 0.0001  max_mem: 30049M
[10/18 09:14:06] d2.utils.events INFO:  eta: 0:18:41  iter: 1799  total_loss: 13.64  loss_ce: 0.1149  loss_mask: 0.3553  loss_dice: 0.8569  loss_ce_0: 0.1156  loss_mask_0: 0.3867  loss_dice_0: 0.9855  loss_ce_1: 0.1474  loss_mask_1: 0.3699  loss_dice_1: 0.8921  loss_ce_2: 0.1181  loss_mask_2: 0.3537  loss_dice_2: 0.9  loss_ce_3: 0.136  loss_mask_3: 0.3616  loss_dice_3: 0.8706  loss_ce_4: 0.1376  loss_mask_4: 0.3512  loss_dice_4: 0.8934  loss_ce_5: 0.1185  loss_mask_5: 0.3504  loss_dice_5: 0.8804  loss_ce_6: 0.1092  loss_mask_6: 0.3477  loss_dice_6: 0.85  loss_ce_7: 0.1166  loss_mask_7: 0.3482  loss_dice_7: 0.855  loss_ce_8: 0.1315  loss_mask_8: 0.3536  loss_dice_8: 0.8535    time: 0.9366  last_time: 0.9082  data_time: 0.0318  last_data_time: 0.0305   lr: 0.0001  max_mem: 30049M
[10/18 09:14:25] d2.utils.events INFO:  eta: 0:18:22  iter: 1819  total_loss: 14.13  loss_ce: 0.1405  loss_mask: 0.3403  loss_dice: 0.8913  loss_ce_0: 0.1577  loss_mask_0: 0.3806  loss_dice_0: 0.9795  loss_ce_1: 0.1854  loss_mask_1: 0.3564  loss_dice_1: 0.9808  loss_ce_2: 0.1703  loss_mask_2: 0.3484  loss_dice_2: 0.9257  loss_ce_3: 0.1819  loss_mask_3: 0.3501  loss_dice_3: 0.8957  loss_ce_4: 0.1592  loss_mask_4: 0.3427  loss_dice_4: 0.9134  loss_ce_5: 0.1583  loss_mask_5: 0.3436  loss_dice_5: 0.8894  loss_ce_6: 0.137  loss_mask_6: 0.3437  loss_dice_6: 0.9023  loss_ce_7: 0.1413  loss_mask_7: 0.3419  loss_dice_7: 0.8991  loss_ce_8: 0.1487  loss_mask_8: 0.3412  loss_dice_8: 0.8998    time: 0.9366  last_time: 0.9044  data_time: 0.0321  last_data_time: 0.0308   lr: 0.0001  max_mem: 30049M
[10/18 09:14:44] d2.utils.events INFO:  eta: 0:18:04  iter: 1839  total_loss: 14.63  loss_ce: 0.1219  loss_mask: 0.3759  loss_dice: 0.9242  loss_ce_0: 0.1503  loss_mask_0: 0.4149  loss_dice_0: 1.021  loss_ce_1: 0.1568  loss_mask_1: 0.39  loss_dice_1: 0.9744  loss_ce_2: 0.1453  loss_mask_2: 0.3842  loss_dice_2: 0.9338  loss_ce_3: 0.1268  loss_mask_3: 0.3662  loss_dice_3: 0.9187  loss_ce_4: 0.1542  loss_mask_4: 0.3567  loss_dice_4: 0.9316  loss_ce_5: 0.1511  loss_mask_5: 0.3608  loss_dice_5: 0.9111  loss_ce_6: 0.127  loss_mask_6: 0.3702  loss_dice_6: 0.9274  loss_ce_7: 0.1237  loss_mask_7: 0.3757  loss_dice_7: 0.9279  loss_ce_8: 0.1235  loss_mask_8: 0.3733  loss_dice_8: 0.9198    time: 0.9364  last_time: 0.9050  data_time: 0.0306  last_data_time: 0.0302   lr: 0.0001  max_mem: 30049M
[10/18 09:15:03] d2.utils.events INFO:  eta: 0:17:45  iter: 1859  total_loss: 13.89  loss_ce: 0.1282  loss_mask: 0.3453  loss_dice: 0.878  loss_ce_0: 0.1554  loss_mask_0: 0.3848  loss_dice_0: 0.9886  loss_ce_1: 0.1642  loss_mask_1: 0.3653  loss_dice_1: 0.9343  loss_ce_2: 0.1484  loss_mask_2: 0.3529  loss_dice_2: 0.8785  loss_ce_3: 0.1574  loss_mask_3: 0.3501  loss_dice_3: 0.9036  loss_ce_4: 0.1376  loss_mask_4: 0.3496  loss_dice_4: 0.8902  loss_ce_5: 0.1303  loss_mask_5: 0.3506  loss_dice_5: 0.8959  loss_ce_6: 0.1274  loss_mask_6: 0.3485  loss_dice_6: 0.8962  loss_ce_7: 0.142  loss_mask_7: 0.3462  loss_dice_7: 0.8959  loss_ce_8: 0.1342  loss_mask_8: 0.3448  loss_dice_8: 0.9004    time: 0.9365  last_time: 0.9515  data_time: 0.0313  last_data_time: 0.0322   lr: 0.0001  max_mem: 30049M
[10/18 09:15:22] d2.utils.events INFO:  eta: 0:17:27  iter: 1879  total_loss: 13.32  loss_ce: 0.1207  loss_mask: 0.3175  loss_dice: 0.8495  loss_ce_0: 0.1568  loss_mask_0: 0.3485  loss_dice_0: 0.9409  loss_ce_1: 0.1501  loss_mask_1: 0.3293  loss_dice_1: 0.8928  loss_ce_2: 0.1242  loss_mask_2: 0.3249  loss_dice_2: 0.8765  loss_ce_3: 0.1527  loss_mask_3: 0.3248  loss_dice_3: 0.8654  loss_ce_4: 0.1246  loss_mask_4: 0.3236  loss_dice_4: 0.8763  loss_ce_5: 0.1277  loss_mask_5: 0.3206  loss_dice_5: 0.8815  loss_ce_6: 0.1115  loss_mask_6: 0.3147  loss_dice_6: 0.857  loss_ce_7: 0.108  loss_mask_7: 0.3196  loss_dice_7: 0.8699  loss_ce_8: 0.1335  loss_mask_8: 0.3189  loss_dice_8: 0.8582    time: 0.9367  last_time: 0.9470  data_time: 0.0313  last_data_time: 0.0318   lr: 0.0001  max_mem: 30049M
[10/18 09:15:41] d2.utils.events INFO:  eta: 0:17:09  iter: 1899  total_loss: 12.72  loss_ce: 0.08045  loss_mask: 0.3198  loss_dice: 0.8303  loss_ce_0: 0.1233  loss_mask_0: 0.3439  loss_dice_0: 0.9156  loss_ce_1: 0.1326  loss_mask_1: 0.3231  loss_dice_1: 0.8806  loss_ce_2: 0.1013  loss_mask_2: 0.3336  loss_dice_2: 0.8675  loss_ce_3: 0.0848  loss_mask_3: 0.3243  loss_dice_3: 0.8612  loss_ce_4: 0.1033  loss_mask_4: 0.3083  loss_dice_4: 0.8631  loss_ce_5: 0.08918  loss_mask_5: 0.3127  loss_dice_5: 0.8599  loss_ce_6: 0.08515  loss_mask_6: 0.3152  loss_dice_6: 0.8356  loss_ce_7: 0.08423  loss_mask_7: 0.3124  loss_dice_7: 0.8313  loss_ce_8: 0.07799  loss_mask_8: 0.3134  loss_dice_8: 0.8357    time: 0.9368  last_time: 0.9332  data_time: 0.0319  last_data_time: 0.0398   lr: 0.0001  max_mem: 30049M
[10/18 09:15:59] d2.utils.events INFO:  eta: 0:16:50  iter: 1919  total_loss: 13.6  loss_ce: 0.1174  loss_mask: 0.3247  loss_dice: 0.8139  loss_ce_0: 0.1425  loss_mask_0: 0.3792  loss_dice_0: 0.9364  loss_ce_1: 0.1528  loss_mask_1: 0.341  loss_dice_1: 0.8892  loss_ce_2: 0.1449  loss_mask_2: 0.3376  loss_dice_2: 0.8791  loss_ce_3: 0.137  loss_mask_3: 0.3458  loss_dice_3: 0.8368  loss_ce_4: 0.1318  loss_mask_4: 0.3349  loss_dice_4: 0.8334  loss_ce_5: 0.1135  loss_mask_5: 0.3337  loss_dice_5: 0.8053  loss_ce_6: 0.1418  loss_mask_6: 0.3319  loss_dice_6: 0.7973  loss_ce_7: 0.1224  loss_mask_7: 0.3245  loss_dice_7: 0.8083  loss_ce_8: 0.1131  loss_mask_8: 0.327  loss_dice_8: 0.8317    time: 0.9367  last_time: 0.9135  data_time: 0.0336  last_data_time: 0.0304   lr: 0.0001  max_mem: 30049M
[10/18 09:16:18] d2.utils.events INFO:  eta: 0:16:32  iter: 1939  total_loss: 14.33  loss_ce: 0.1103  loss_mask: 0.3561  loss_dice: 0.8708  loss_ce_0: 0.1422  loss_mask_0: 0.3852  loss_dice_0: 0.9702  loss_ce_1: 0.1746  loss_mask_1: 0.3645  loss_dice_1: 0.9214  loss_ce_2: 0.1489  loss_mask_2: 0.3605  loss_dice_2: 0.8918  loss_ce_3: 0.1427  loss_mask_3: 0.3567  loss_dice_3: 0.8772  loss_ce_4: 0.141  loss_mask_4: 0.3511  loss_dice_4: 0.8587  loss_ce_5: 0.1226  loss_mask_5: 0.3518  loss_dice_5: 0.8673  loss_ce_6: 0.1119  loss_mask_6: 0.3508  loss_dice_6: 0.859  loss_ce_7: 0.121  loss_mask_7: 0.352  loss_dice_7: 0.8558  loss_ce_8: 0.1031  loss_mask_8: 0.3552  loss_dice_8: 0.8634    time: 0.9367  last_time: 0.9151  data_time: 0.0356  last_data_time: 0.0393   lr: 0.0001  max_mem: 30049M
[10/18 09:16:36] d2.utils.events INFO:  eta: 0:16:13  iter: 1959  total_loss: 13.51  loss_ce: 0.1221  loss_mask: 0.3331  loss_dice: 0.8559  loss_ce_0: 0.1314  loss_mask_0: 0.3574  loss_dice_0: 0.9498  loss_ce_1: 0.1443  loss_mask_1: 0.3386  loss_dice_1: 0.9032  loss_ce_2: 0.1418  loss_mask_2: 0.3355  loss_dice_2: 0.8791  loss_ce_3: 0.1431  loss_mask_3: 0.3231  loss_dice_3: 0.8529  loss_ce_4: 0.1303  loss_mask_4: 0.3261  loss_dice_4: 0.8469  loss_ce_5: 0.1177  loss_mask_5: 0.331  loss_dice_5: 0.8574  loss_ce_6: 0.1092  loss_mask_6: 0.3324  loss_dice_6: 0.8568  loss_ce_7: 0.1157  loss_mask_7: 0.3301  loss_dice_7: 0.8553  loss_ce_8: 0.105  loss_mask_8: 0.3297  loss_dice_8: 0.8397    time: 0.9365  last_time: 0.9128  data_time: 0.0340  last_data_time: 0.0397   lr: 0.0001  max_mem: 30049M
[10/18 09:16:55] d2.utils.events INFO:  eta: 0:15:54  iter: 1979  total_loss: 14.04  loss_ce: 0.1095  loss_mask: 0.3396  loss_dice: 0.8826  loss_ce_0: 0.1463  loss_mask_0: 0.3708  loss_dice_0: 0.9446  loss_ce_1: 0.1596  loss_mask_1: 0.3414  loss_dice_1: 0.9114  loss_ce_2: 0.1613  loss_mask_2: 0.3392  loss_dice_2: 0.906  loss_ce_3: 0.1347  loss_mask_3: 0.3416  loss_dice_3: 0.8955  loss_ce_4: 0.1515  loss_mask_4: 0.3396  loss_dice_4: 0.8746  loss_ce_5: 0.1486  loss_mask_5: 0.339  loss_dice_5: 0.9015  loss_ce_6: 0.1137  loss_mask_6: 0.3347  loss_dice_6: 0.8743  loss_ce_7: 0.1115  loss_mask_7: 0.3361  loss_dice_7: 0.8829  loss_ce_8: 0.1197  loss_mask_8: 0.3299  loss_dice_8: 0.892    time: 0.9362  last_time: 0.9046  data_time: 0.0319  last_data_time: 0.0323   lr: 0.0001  max_mem: 30049M
[10/18 09:17:13] d2.utils.events INFO:  eta: 0:15:36  iter: 1999  total_loss: 13.79  loss_ce: 0.112  loss_mask: 0.3424  loss_dice: 0.8694  loss_ce_0: 0.154  loss_mask_0: 0.3662  loss_dice_0: 0.9414  loss_ce_1: 0.1527  loss_mask_1: 0.3408  loss_dice_1: 0.89  loss_ce_2: 0.1426  loss_mask_2: 0.3395  loss_dice_2: 0.8883  loss_ce_3: 0.1417  loss_mask_3: 0.3444  loss_dice_3: 0.8755  loss_ce_4: 0.1208  loss_mask_4: 0.3448  loss_dice_4: 0.8678  loss_ce_5: 0.1283  loss_mask_5: 0.3393  loss_dice_5: 0.8821  loss_ce_6: 0.1231  loss_mask_6: 0.337  loss_dice_6: 0.8597  loss_ce_7: 0.1123  loss_mask_7: 0.3389  loss_dice_7: 0.8474  loss_ce_8: 0.1012  loss_mask_8: 0.3378  loss_dice_8: 0.8572    time: 0.9360  last_time: 0.9366  data_time: 0.0332  last_data_time: 0.0310   lr: 0.0001  max_mem: 30049M
[10/18 09:17:32] d2.utils.events INFO:  eta: 0:15:16  iter: 2019  total_loss: 13.2  loss_ce: 0.08895  loss_mask: 0.3381  loss_dice: 0.8751  loss_ce_0: 0.1366  loss_mask_0: 0.3501  loss_dice_0: 0.9478  loss_ce_1: 0.1472  loss_mask_1: 0.3383  loss_dice_1: 0.897  loss_ce_2: 0.1533  loss_mask_2: 0.33  loss_dice_2: 0.8752  loss_ce_3: 0.1284  loss_mask_3: 0.3272  loss_dice_3: 0.8845  loss_ce_4: 0.1198  loss_mask_4: 0.3287  loss_dice_4: 0.8787  loss_ce_5: 0.1241  loss_mask_5: 0.3331  loss_dice_5: 0.8784  loss_ce_6: 0.1068  loss_mask_6: 0.3246  loss_dice_6: 0.8594  loss_ce_7: 0.122  loss_mask_7: 0.3278  loss_dice_7: 0.8581  loss_ce_8: 0.1114  loss_mask_8: 0.3338  loss_dice_8: 0.8634    time: 0.9359  last_time: 0.9345  data_time: 0.0352  last_data_time: 0.0318   lr: 0.0001  max_mem: 30049M
[10/18 09:17:51] d2.utils.events INFO:  eta: 0:14:57  iter: 2039  total_loss: 13.64  loss_ce: 0.09334  loss_mask: 0.3466  loss_dice: 0.8846  loss_ce_0: 0.1256  loss_mask_0: 0.3768  loss_dice_0: 0.9692  loss_ce_1: 0.1545  loss_mask_1: 0.3656  loss_dice_1: 0.9079  loss_ce_2: 0.1241  loss_mask_2: 0.3522  loss_dice_2: 0.9242  loss_ce_3: 0.1275  loss_mask_3: 0.3462  loss_dice_3: 0.8947  loss_ce_4: 0.1192  loss_mask_4: 0.3493  loss_dice_4: 0.9094  loss_ce_5: 0.1055  loss_mask_5: 0.3483  loss_dice_5: 0.8782  loss_ce_6: 0.08945  loss_mask_6: 0.351  loss_dice_6: 0.8894  loss_ce_7: 0.08985  loss_mask_7: 0.3512  loss_dice_7: 0.8792  loss_ce_8: 0.08957  loss_mask_8: 0.3551  loss_dice_8: 0.8871    time: 0.9360  last_time: 0.9388  data_time: 0.0342  last_data_time: 0.0310   lr: 0.0001  max_mem: 30049M
[10/18 09:18:09] d2.utils.events INFO:  eta: 0:14:38  iter: 2059  total_loss: 13.28  loss_ce: 0.106  loss_mask: 0.3348  loss_dice: 0.8386  loss_ce_0: 0.1529  loss_mask_0: 0.3674  loss_dice_0: 0.9321  loss_ce_1: 0.1485  loss_mask_1: 0.3623  loss_dice_1: 0.8789  loss_ce_2: 0.1449  loss_mask_2: 0.3453  loss_dice_2: 0.8494  loss_ce_3: 0.1271  loss_mask_3: 0.3348  loss_dice_3: 0.8454  loss_ce_4: 0.1428  loss_mask_4: 0.3385  loss_dice_4: 0.8392  loss_ce_5: 0.1106  loss_mask_5: 0.3361  loss_dice_5: 0.8474  loss_ce_6: 0.1153  loss_mask_6: 0.3316  loss_dice_6: 0.8384  loss_ce_7: 0.1098  loss_mask_7: 0.3343  loss_dice_7: 0.8292  loss_ce_8: 0.1129  loss_mask_8: 0.3349  loss_dice_8: 0.8312    time: 0.9360  last_time: 0.9104  data_time: 0.0353  last_data_time: 0.0360   lr: 0.0001  max_mem: 30049M
[10/18 09:18:28] d2.utils.events INFO:  eta: 0:14:19  iter: 2079  total_loss: 12.94  loss_ce: 0.1067  loss_mask: 0.3214  loss_dice: 0.8285  loss_ce_0: 0.1476  loss_mask_0: 0.3706  loss_dice_0: 0.9345  loss_ce_1: 0.1568  loss_mask_1: 0.3393  loss_dice_1: 0.8896  loss_ce_2: 0.1324  loss_mask_2: 0.3323  loss_dice_2: 0.8762  loss_ce_3: 0.1304  loss_mask_3: 0.3379  loss_dice_3: 0.8574  loss_ce_4: 0.1151  loss_mask_4: 0.3238  loss_dice_4: 0.8465  loss_ce_5: 0.1097  loss_mask_5: 0.3235  loss_dice_5: 0.863  loss_ce_6: 0.1029  loss_mask_6: 0.3213  loss_dice_6: 0.8491  loss_ce_7: 0.1099  loss_mask_7: 0.3208  loss_dice_7: 0.8513  loss_ce_8: 0.1145  loss_mask_8: 0.3229  loss_dice_8: 0.8414    time: 0.9359  last_time: 0.9478  data_time: 0.0352  last_data_time: 0.0387   lr: 0.0001  max_mem: 30049M
[10/18 09:18:46] d2.utils.events INFO:  eta: 0:14:00  iter: 2099  total_loss: 13.3  loss_ce: 0.1332  loss_mask: 0.3299  loss_dice: 0.8774  loss_ce_0: 0.1689  loss_mask_0: 0.3413  loss_dice_0: 0.9525  loss_ce_1: 0.1908  loss_mask_1: 0.3384  loss_dice_1: 0.8804  loss_ce_2: 0.1758  loss_mask_2: 0.341  loss_dice_2: 0.8802  loss_ce_3: 0.1534  loss_mask_3: 0.3268  loss_dice_3: 0.8795  loss_ce_4: 0.1401  loss_mask_4: 0.3224  loss_dice_4: 0.881  loss_ce_5: 0.1253  loss_mask_5: 0.3251  loss_dice_5: 0.8856  loss_ce_6: 0.128  loss_mask_6: 0.3267  loss_dice_6: 0.8875  loss_ce_7: 0.1301  loss_mask_7: 0.3256  loss_dice_7: 0.8765  loss_ce_8: 0.1306  loss_mask_8: 0.3248  loss_dice_8: 0.8301    time: 0.9357  last_time: 0.9132  data_time: 0.0313  last_data_time: 0.0314   lr: 0.0001  max_mem: 30049M
[10/18 09:19:05] d2.utils.events INFO:  eta: 0:13:42  iter: 2119  total_loss: 14.22  loss_ce: 0.1129  loss_mask: 0.3348  loss_dice: 0.9102  loss_ce_0: 0.154  loss_mask_0: 0.366  loss_dice_0: 0.9557  loss_ce_1: 0.1338  loss_mask_1: 0.3526  loss_dice_1: 0.9477  loss_ce_2: 0.1183  loss_mask_2: 0.3495  loss_dice_2: 0.9496  loss_ce_3: 0.1483  loss_mask_3: 0.3468  loss_dice_3: 0.9034  loss_ce_4: 0.1025  loss_mask_4: 0.3416  loss_dice_4: 0.9315  loss_ce_5: 0.11  loss_mask_5: 0.3357  loss_dice_5: 0.9295  loss_ce_6: 0.1096  loss_mask_6: 0.3366  loss_dice_6: 0.9059  loss_ce_7: 0.103  loss_mask_7: 0.3316  loss_dice_7: 0.8983  loss_ce_8: 0.1135  loss_mask_8: 0.3356  loss_dice_8: 0.926    time: 0.9356  last_time: 0.9513  data_time: 0.0336  last_data_time: 0.0310   lr: 0.0001  max_mem: 30049M
[10/18 09:19:24] d2.utils.events INFO:  eta: 0:13:23  iter: 2139  total_loss: 13.38  loss_ce: 0.1214  loss_mask: 0.3406  loss_dice: 0.8647  loss_ce_0: 0.1509  loss_mask_0: 0.3755  loss_dice_0: 0.9448  loss_ce_1: 0.1397  loss_mask_1: 0.3586  loss_dice_1: 0.9128  loss_ce_2: 0.1379  loss_mask_2: 0.3451  loss_dice_2: 0.9026  loss_ce_3: 0.1274  loss_mask_3: 0.3398  loss_dice_3: 0.8712  loss_ce_4: 0.1344  loss_mask_4: 0.3385  loss_dice_4: 0.8866  loss_ce_5: 0.1177  loss_mask_5: 0.3379  loss_dice_5: 0.8663  loss_ce_6: 0.1244  loss_mask_6: 0.3412  loss_dice_6: 0.8617  loss_ce_7: 0.1219  loss_mask_7: 0.3421  loss_dice_7: 0.8696  loss_ce_8: 0.1347  loss_mask_8: 0.3403  loss_dice_8: 0.8804    time: 0.9355  last_time: 0.9321  data_time: 0.0359  last_data_time: 0.0313   lr: 0.0001  max_mem: 30049M
[10/18 09:19:43] d2.utils.events INFO:  eta: 0:13:04  iter: 2159  total_loss: 12.83  loss_ce: 0.1286  loss_mask: 0.3153  loss_dice: 0.7947  loss_ce_0: 0.1388  loss_mask_0: 0.3445  loss_dice_0: 0.9067  loss_ce_1: 0.1533  loss_mask_1: 0.3252  loss_dice_1: 0.8679  loss_ce_2: 0.1375  loss_mask_2: 0.3267  loss_dice_2: 0.837  loss_ce_3: 0.1351  loss_mask_3: 0.3228  loss_dice_3: 0.815  loss_ce_4: 0.1467  loss_mask_4: 0.3202  loss_dice_4: 0.8025  loss_ce_5: 0.1141  loss_mask_5: 0.3213  loss_dice_5: 0.8154  loss_ce_6: 0.1152  loss_mask_6: 0.3204  loss_dice_6: 0.8156  loss_ce_7: 0.114  loss_mask_7: 0.3217  loss_dice_7: 0.802  loss_ce_8: 0.1258  loss_mask_8: 0.3169  loss_dice_8: 0.7895    time: 0.9357  last_time: 0.9150  data_time: 0.0316  last_data_time: 0.0315   lr: 0.0001  max_mem: 30049M
[10/18 09:20:01] d2.utils.events INFO:  eta: 0:12:45  iter: 2179  total_loss: 13.48  loss_ce: 0.1015  loss_mask: 0.3349  loss_dice: 0.8485  loss_ce_0: 0.1265  loss_mask_0: 0.363  loss_dice_0: 0.9385  loss_ce_1: 0.1541  loss_mask_1: 0.3509  loss_dice_1: 0.9044  loss_ce_2: 0.1348  loss_mask_2: 0.3424  loss_dice_2: 0.8668  loss_ce_3: 0.1197  loss_mask_3: 0.3365  loss_dice_3: 0.8637  loss_ce_4: 0.1249  loss_mask_4: 0.3378  loss_dice_4: 0.8674  loss_ce_5: 0.1292  loss_mask_5: 0.3329  loss_dice_5: 0.8691  loss_ce_6: 0.114  loss_mask_6: 0.3336  loss_dice_6: 0.8714  loss_ce_7: 0.1132  loss_mask_7: 0.3363  loss_dice_7: 0.8695  loss_ce_8: 0.1085  loss_mask_8: 0.3393  loss_dice_8: 0.8704    time: 0.9357  last_time: 0.9291  data_time: 0.0318  last_data_time: 0.0312   lr: 0.0001  max_mem: 30049M
[10/18 09:20:20] d2.utils.events INFO:  eta: 0:12:26  iter: 2199  total_loss: 13.55  loss_ce: 0.1239  loss_mask: 0.327  loss_dice: 0.8618  loss_ce_0: 0.1255  loss_mask_0: 0.367  loss_dice_0: 0.9649  loss_ce_1: 0.1446  loss_mask_1: 0.3401  loss_dice_1: 0.9257  loss_ce_2: 0.1075  loss_mask_2: 0.339  loss_dice_2: 0.9173  loss_ce_3: 0.1257  loss_mask_3: 0.331  loss_dice_3: 0.8792  loss_ce_4: 0.1006  loss_mask_4: 0.3333  loss_dice_4: 0.8991  loss_ce_5: 0.1088  loss_mask_5: 0.3327  loss_dice_5: 0.8912  loss_ce_6: 0.09503  loss_mask_6: 0.3328  loss_dice_6: 0.8851  loss_ce_7: 0.1052  loss_mask_7: 0.3317  loss_dice_7: 0.8778  loss_ce_8: 0.1089  loss_mask_8: 0.3301  loss_dice_8: 0.8655    time: 0.9357  last_time: 0.9154  data_time: 0.0328  last_data_time: 0.0419   lr: 0.0001  max_mem: 30049M
[10/18 09:20:39] d2.utils.events INFO:  eta: 0:12:07  iter: 2219  total_loss: 13.58  loss_ce: 0.1094  loss_mask: 0.3295  loss_dice: 0.8701  loss_ce_0: 0.1549  loss_mask_0: 0.3549  loss_dice_0: 0.93  loss_ce_1: 0.1538  loss_mask_1: 0.3418  loss_dice_1: 0.9005  loss_ce_2: 0.1353  loss_mask_2: 0.3369  loss_dice_2: 0.8978  loss_ce_3: 0.1334  loss_mask_3: 0.3383  loss_dice_3: 0.8772  loss_ce_4: 0.1308  loss_mask_4: 0.3319  loss_dice_4: 0.8777  loss_ce_5: 0.115  loss_mask_5: 0.329  loss_dice_5: 0.874  loss_ce_6: 0.1178  loss_mask_6: 0.3371  loss_dice_6: 0.8758  loss_ce_7: 0.1049  loss_mask_7: 0.3365  loss_dice_7: 0.8818  loss_ce_8: 0.1245  loss_mask_8: 0.3298  loss_dice_8: 0.8839    time: 0.9357  last_time: 0.9516  data_time: 0.0319  last_data_time: 0.0316   lr: 0.0001  max_mem: 30049M
[10/18 09:20:57] d2.utils.events INFO:  eta: 0:11:49  iter: 2239  total_loss: 13.6  loss_ce: 0.1299  loss_mask: 0.3307  loss_dice: 0.8374  loss_ce_0: 0.1544  loss_mask_0: 0.3596  loss_dice_0: 0.935  loss_ce_1: 0.1612  loss_mask_1: 0.3461  loss_dice_1: 0.9011  loss_ce_2: 0.1508  loss_mask_2: 0.3289  loss_dice_2: 0.8629  loss_ce_3: 0.1461  loss_mask_3: 0.3316  loss_dice_3: 0.8506  loss_ce_4: 0.1498  loss_mask_4: 0.3377  loss_dice_4: 0.842  loss_ce_5: 0.1496  loss_mask_5: 0.327  loss_dice_5: 0.8414  loss_ce_6: 0.1347  loss_mask_6: 0.3269  loss_dice_6: 0.8483  loss_ce_7: 0.1319  loss_mask_7: 0.332  loss_dice_7: 0.8502  loss_ce_8: 0.1478  loss_mask_8: 0.3273  loss_dice_8: 0.8487    time: 0.9356  last_time: 0.9482  data_time: 0.0329  last_data_time: 0.0302   lr: 0.0001  max_mem: 30049M
[10/18 09:21:16] d2.utils.events INFO:  eta: 0:11:30  iter: 2259  total_loss: 12.79  loss_ce: 0.121  loss_mask: 0.305  loss_dice: 0.8034  loss_ce_0: 0.1457  loss_mask_0: 0.3288  loss_dice_0: 0.9052  loss_ce_1: 0.1622  loss_mask_1: 0.3167  loss_dice_1: 0.865  loss_ce_2: 0.1304  loss_mask_2: 0.304  loss_dice_2: 0.8563  loss_ce_3: 0.1231  loss_mask_3: 0.3005  loss_dice_3: 0.82  loss_ce_4: 0.1325  loss_mask_4: 0.3026  loss_dice_4: 0.8262  loss_ce_5: 0.1175  loss_mask_5: 0.3001  loss_dice_5: 0.8097  loss_ce_6: 0.1131  loss_mask_6: 0.3055  loss_dice_6: 0.8139  loss_ce_7: 0.1085  loss_mask_7: 0.3035  loss_dice_7: 0.8071  loss_ce_8: 0.1058  loss_mask_8: 0.3064  loss_dice_8: 0.8053    time: 0.9356  last_time: 0.9874  data_time: 0.0318  last_data_time: 0.0323   lr: 0.0001  max_mem: 30049M
[10/18 09:21:35] d2.utils.events INFO:  eta: 0:11:11  iter: 2279  total_loss: 13.12  loss_ce: 0.1078  loss_mask: 0.3177  loss_dice: 0.8287  loss_ce_0: 0.1238  loss_mask_0: 0.3496  loss_dice_0: 0.9298  loss_ce_1: 0.1532  loss_mask_1: 0.3287  loss_dice_1: 0.8618  loss_ce_2: 0.1309  loss_mask_2: 0.3196  loss_dice_2: 0.8566  loss_ce_3: 0.1207  loss_mask_3: 0.3168  loss_dice_3: 0.8711  loss_ce_4: 0.1106  loss_mask_4: 0.3227  loss_dice_4: 0.8453  loss_ce_5: 0.1146  loss_mask_5: 0.316  loss_dice_5: 0.8729  loss_ce_6: 0.1031  loss_mask_6: 0.3312  loss_dice_6: 0.865  loss_ce_7: 0.0889  loss_mask_7: 0.3205  loss_dice_7: 0.8462  loss_ce_8: 0.09545  loss_mask_8: 0.3136  loss_dice_8: 0.8561    time: 0.9357  last_time: 0.9029  data_time: 0.0322  last_data_time: 0.0303   lr: 0.0001  max_mem: 30049M
[10/18 09:21:54] d2.utils.events INFO:  eta: 0:10:53  iter: 2299  total_loss: 13.1  loss_ce: 0.08565  loss_mask: 0.3302  loss_dice: 0.8298  loss_ce_0: 0.1227  loss_mask_0: 0.3669  loss_dice_0: 0.9563  loss_ce_1: 0.1347  loss_mask_1: 0.3488  loss_dice_1: 0.9118  loss_ce_2: 0.1225  loss_mask_2: 0.3386  loss_dice_2: 0.9041  loss_ce_3: 0.1145  loss_mask_3: 0.3374  loss_dice_3: 0.8819  loss_ce_4: 0.103  loss_mask_4: 0.3328  loss_dice_4: 0.8751  loss_ce_5: 0.09784  loss_mask_5: 0.3331  loss_dice_5: 0.8606  loss_ce_6: 0.09268  loss_mask_6: 0.3272  loss_dice_6: 0.8792  loss_ce_7: 0.08753  loss_mask_7: 0.329  loss_dice_7: 0.8468  loss_ce_8: 0.07768  loss_mask_8: 0.3284  loss_dice_8: 0.8709    time: 0.9357  last_time: 0.9345  data_time: 0.0359  last_data_time: 0.0370   lr: 0.0001  max_mem: 30049M
[10/18 09:22:13] d2.utils.events INFO:  eta: 0:10:34  iter: 2319  total_loss: 12.93  loss_ce: 0.101  loss_mask: 0.3189  loss_dice: 0.7972  loss_ce_0: 0.1276  loss_mask_0: 0.3668  loss_dice_0: 0.929  loss_ce_1: 0.1221  loss_mask_1: 0.3396  loss_dice_1: 0.882  loss_ce_2: 0.1066  loss_mask_2: 0.3332  loss_dice_2: 0.8321  loss_ce_3: 0.1127  loss_mask_3: 0.3252  loss_dice_3: 0.8056  loss_ce_4: 0.1058  loss_mask_4: 0.3242  loss_dice_4: 0.8016  loss_ce_5: 0.09161  loss_mask_5: 0.3239  loss_dice_5: 0.8097  loss_ce_6: 0.09371  loss_mask_6: 0.3187  loss_dice_6: 0.7932  loss_ce_7: 0.1136  loss_mask_7: 0.3214  loss_dice_7: 0.8108  loss_ce_8: 0.1098  loss_mask_8: 0.3133  loss_dice_8: 0.7996    time: 0.9357  last_time: 0.9289  data_time: 0.0350  last_data_time: 0.0313   lr: 0.0001  max_mem: 30049M
[10/18 09:22:32] d2.utils.events INFO:  eta: 0:10:15  iter: 2339  total_loss: 13.16  loss_ce: 0.1021  loss_mask: 0.3224  loss_dice: 0.8283  loss_ce_0: 0.1182  loss_mask_0: 0.3717  loss_dice_0: 0.9398  loss_ce_1: 0.1201  loss_mask_1: 0.3391  loss_dice_1: 0.9028  loss_ce_2: 0.1259  loss_mask_2: 0.335  loss_dice_2: 0.8721  loss_ce_3: 0.1352  loss_mask_3: 0.3246  loss_dice_3: 0.846  loss_ce_4: 0.1111  loss_mask_4: 0.3294  loss_dice_4: 0.8504  loss_ce_5: 0.1022  loss_mask_5: 0.3299  loss_dice_5: 0.8393  loss_ce_6: 0.1122  loss_mask_6: 0.3234  loss_dice_6: 0.8378  loss_ce_7: 0.09926  loss_mask_7: 0.3268  loss_dice_7: 0.8451  loss_ce_8: 0.1082  loss_mask_8: 0.3256  loss_dice_8: 0.8587    time: 0.9357  last_time: 0.9137  data_time: 0.0345  last_data_time: 0.0304   lr: 0.0001  max_mem: 30049M
[10/18 09:22:50] d2.utils.events INFO:  eta: 0:09:56  iter: 2359  total_loss: 12.56  loss_ce: 0.1042  loss_mask: 0.3236  loss_dice: 0.7991  loss_ce_0: 0.1348  loss_mask_0: 0.3558  loss_dice_0: 0.9164  loss_ce_1: 0.1452  loss_mask_1: 0.3379  loss_dice_1: 0.8916  loss_ce_2: 0.1243  loss_mask_2: 0.3228  loss_dice_2: 0.8579  loss_ce_3: 0.1341  loss_mask_3: 0.3228  loss_dice_3: 0.812  loss_ce_4: 0.1416  loss_mask_4: 0.3229  loss_dice_4: 0.8292  loss_ce_5: 0.1178  loss_mask_5: 0.3232  loss_dice_5: 0.8329  loss_ce_6: 0.118  loss_mask_6: 0.3253  loss_dice_6: 0.8219  loss_ce_7: 0.108  loss_mask_7: 0.3243  loss_dice_7: 0.8387  loss_ce_8: 0.1043  loss_mask_8: 0.3219  loss_dice_8: 0.8146    time: 0.9356  last_time: 0.9386  data_time: 0.0348  last_data_time: 0.0314   lr: 0.0001  max_mem: 30049M
[10/18 09:23:09] d2.utils.events INFO:  eta: 0:09:38  iter: 2379  total_loss: 12.49  loss_ce: 0.1109  loss_mask: 0.3233  loss_dice: 0.8222  loss_ce_0: 0.1154  loss_mask_0: 0.3611  loss_dice_0: 0.884  loss_ce_1: 0.1287  loss_mask_1: 0.3354  loss_dice_1: 0.8727  loss_ce_2: 0.1059  loss_mask_2: 0.3357  loss_dice_2: 0.8362  loss_ce_3: 0.1171  loss_mask_3: 0.3255  loss_dice_3: 0.816  loss_ce_4: 0.1115  loss_mask_4: 0.3256  loss_dice_4: 0.8316  loss_ce_5: 0.1128  loss_mask_5: 0.3299  loss_dice_5: 0.8288  loss_ce_6: 0.08637  loss_mask_6: 0.3233  loss_dice_6: 0.8033  loss_ce_7: 0.07952  loss_mask_7: 0.3244  loss_dice_7: 0.8174  loss_ce_8: 0.1009  loss_mask_8: 0.3242  loss_dice_8: 0.8113    time: 0.9357  last_time: 0.9802  data_time: 0.0327  last_data_time: 0.0310   lr: 0.0001  max_mem: 30049M
[10/18 09:23:28] d2.utils.events INFO:  eta: 0:09:20  iter: 2399  total_loss: 13.14  loss_ce: 0.08812  loss_mask: 0.3327  loss_dice: 0.827  loss_ce_0: 0.1337  loss_mask_0: 0.3746  loss_dice_0: 0.9246  loss_ce_1: 0.1593  loss_mask_1: 0.3408  loss_dice_1: 0.878  loss_ce_2: 0.1352  loss_mask_2: 0.3282  loss_dice_2: 0.8555  loss_ce_3: 0.1371  loss_mask_3: 0.3456  loss_dice_3: 0.8495  loss_ce_4: 0.1125  loss_mask_4: 0.3362  loss_dice_4: 0.8274  loss_ce_5: 0.1013  loss_mask_5: 0.334  loss_dice_5: 0.8413  loss_ce_6: 0.1118  loss_mask_6: 0.3347  loss_dice_6: 0.8384  loss_ce_7: 0.09388  loss_mask_7: 0.3369  loss_dice_7: 0.8512  loss_ce_8: 0.0887  loss_mask_8: 0.3324  loss_dice_8: 0.8311    time: 0.9359  last_time: 0.9110  data_time: 0.0312  last_data_time: 0.0318   lr: 0.0001  max_mem: 30049M
[10/18 09:23:47] d2.utils.events INFO:  eta: 0:09:01  iter: 2419  total_loss: 13.48  loss_ce: 0.08168  loss_mask: 0.3317  loss_dice: 0.8556  loss_ce_0: 0.1452  loss_mask_0: 0.3508  loss_dice_0: 0.9413  loss_ce_1: 0.1416  loss_mask_1: 0.3435  loss_dice_1: 0.9111  loss_ce_2: 0.09753  loss_mask_2: 0.3368  loss_dice_2: 0.8966  loss_ce_3: 0.1163  loss_mask_3: 0.335  loss_dice_3: 0.8678  loss_ce_4: 0.1053  loss_mask_4: 0.3305  loss_dice_4: 0.8626  loss_ce_5: 0.1033  loss_mask_5: 0.3303  loss_dice_5: 0.8593  loss_ce_6: 0.08713  loss_mask_6: 0.3299  loss_dice_6: 0.8578  loss_ce_7: 0.1033  loss_mask_7: 0.3268  loss_dice_7: 0.8587  loss_ce_8: 0.1129  loss_mask_8: 0.3288  loss_dice_8: 0.862    time: 0.9359  last_time: 0.9469  data_time: 0.0337  last_data_time: 0.0304   lr: 0.0001  max_mem: 30049M
[10/18 09:24:06] d2.utils.events INFO:  eta: 0:08:42  iter: 2439  total_loss: 13.43  loss_ce: 0.1197  loss_mask: 0.335  loss_dice: 0.8537  loss_ce_0: 0.148  loss_mask_0: 0.3624  loss_dice_0: 0.9444  loss_ce_1: 0.1613  loss_mask_1: 0.3399  loss_dice_1: 0.9173  loss_ce_2: 0.1436  loss_mask_2: 0.3346  loss_dice_2: 0.8868  loss_ce_3: 0.1276  loss_mask_3: 0.3376  loss_dice_3: 0.8659  loss_ce_4: 0.13  loss_mask_4: 0.3324  loss_dice_4: 0.8623  loss_ce_5: 0.1157  loss_mask_5: 0.3346  loss_dice_5: 0.8671  loss_ce_6: 0.1225  loss_mask_6: 0.3348  loss_dice_6: 0.8673  loss_ce_7: 0.1303  loss_mask_7: 0.3295  loss_dice_7: 0.8544  loss_ce_8: 0.1048  loss_mask_8: 0.3334  loss_dice_8: 0.8669    time: 0.9359  last_time: 0.9293  data_time: 0.0334  last_data_time: 0.0319   lr: 0.0001  max_mem: 30049M
[10/18 09:24:25] d2.utils.events INFO:  eta: 0:08:23  iter: 2459  total_loss: 13.18  loss_ce: 0.1227  loss_mask: 0.3432  loss_dice: 0.8212  loss_ce_0: 0.1454  loss_mask_0: 0.3735  loss_dice_0: 0.9051  loss_ce_1: 0.1526  loss_mask_1: 0.3588  loss_dice_1: 0.8664  loss_ce_2: 0.1361  loss_mask_2: 0.3419  loss_dice_2: 0.8433  loss_ce_3: 0.1276  loss_mask_3: 0.3428  loss_dice_3: 0.8333  loss_ce_4: 0.1185  loss_mask_4: 0.3463  loss_dice_4: 0.8361  loss_ce_5: 0.1127  loss_mask_5: 0.3434  loss_dice_5: 0.8277  loss_ce_6: 0.1183  loss_mask_6: 0.3443  loss_dice_6: 0.8197  loss_ce_7: 0.1052  loss_mask_7: 0.3386  loss_dice_7: 0.8216  loss_ce_8: 0.1027  loss_mask_8: 0.3407  loss_dice_8: 0.8197    time: 0.9358  last_time: 0.9825  data_time: 0.0363  last_data_time: 0.0328   lr: 0.0001  max_mem: 30049M
[10/18 09:24:44] d2.utils.events INFO:  eta: 0:08:05  iter: 2479  total_loss: 12.91  loss_ce: 0.1034  loss_mask: 0.3178  loss_dice: 0.8166  loss_ce_0: 0.1466  loss_mask_0: 0.3556  loss_dice_0: 0.9408  loss_ce_1: 0.1419  loss_mask_1: 0.3298  loss_dice_1: 0.8635  loss_ce_2: 0.1376  loss_mask_2: 0.3224  loss_dice_2: 0.8477  loss_ce_3: 0.1322  loss_mask_3: 0.3193  loss_dice_3: 0.855  loss_ce_4: 0.1066  loss_mask_4: 0.3195  loss_dice_4: 0.8235  loss_ce_5: 0.1015  loss_mask_5: 0.318  loss_dice_5: 0.8235  loss_ce_6: 0.1129  loss_mask_6: 0.3184  loss_dice_6: 0.8142  loss_ce_7: 0.1064  loss_mask_7: 0.3154  loss_dice_7: 0.8091  loss_ce_8: 0.1049  loss_mask_8: 0.3193  loss_dice_8: 0.8193    time: 0.9360  last_time: 0.9782  data_time: 0.0312  last_data_time: 0.0311   lr: 0.0001  max_mem: 30049M
[10/18 09:25:03] d2.utils.events INFO:  eta: 0:07:47  iter: 2499  total_loss: 12.6  loss_ce: 0.09056  loss_mask: 0.3245  loss_dice: 0.8499  loss_ce_0: 0.1061  loss_mask_0: 0.3609  loss_dice_0: 0.921  loss_ce_1: 0.1398  loss_mask_1: 0.3519  loss_dice_1: 0.9006  loss_ce_2: 0.1143  loss_mask_2: 0.3499  loss_dice_2: 0.8599  loss_ce_3: 0.114  loss_mask_3: 0.3268  loss_dice_3: 0.8592  loss_ce_4: 0.09857  loss_mask_4: 0.3286  loss_dice_4: 0.8457  loss_ce_5: 0.08933  loss_mask_5: 0.3258  loss_dice_5: 0.8271  loss_ce_6: 0.09152  loss_mask_6: 0.322  loss_dice_6: 0.8277  loss_ce_7: 0.09193  loss_mask_7: 0.3255  loss_dice_7: 0.8275  loss_ce_8: 0.0855  loss_mask_8: 0.3246  loss_dice_8: 0.8417    time: 0.9360  last_time: 0.9184  data_time: 0.0321  last_data_time: 0.0314   lr: 0.0001  max_mem: 30049M
[10/18 09:25:21] d2.utils.events INFO:  eta: 0:07:28  iter: 2519  total_loss: 12.51  loss_ce: 0.1205  loss_mask: 0.319  loss_dice: 0.7972  loss_ce_0: 0.1218  loss_mask_0: 0.3441  loss_dice_0: 0.8768  loss_ce_1: 0.1362  loss_mask_1: 0.3268  loss_dice_1: 0.8411  loss_ce_2: 0.1282  loss_mask_2: 0.3206  loss_dice_2: 0.801  loss_ce_3: 0.1328  loss_mask_3: 0.3183  loss_dice_3: 0.7918  loss_ce_4: 0.1117  loss_mask_4: 0.3204  loss_dice_4: 0.7841  loss_ce_5: 0.1144  loss_mask_5: 0.3165  loss_dice_5: 0.8021  loss_ce_6: 0.09862  loss_mask_6: 0.3208  loss_dice_6: 0.8087  loss_ce_7: 0.1078  loss_mask_7: 0.3187  loss_dice_7: 0.7994  loss_ce_8: 0.1015  loss_mask_8: 0.3212  loss_dice_8: 0.8014    time: 0.9361  last_time: 0.9530  data_time: 0.0331  last_data_time: 0.0310   lr: 0.0001  max_mem: 30049M
[10/18 09:25:40] d2.utils.events INFO:  eta: 0:07:09  iter: 2539  total_loss: 13.47  loss_ce: 0.1414  loss_mask: 0.3469  loss_dice: 0.8294  loss_ce_0: 0.1428  loss_mask_0: 0.3747  loss_dice_0: 0.9302  loss_ce_1: 0.1751  loss_mask_1: 0.3498  loss_dice_1: 0.8948  loss_ce_2: 0.1592  loss_mask_2: 0.3416  loss_dice_2: 0.868  loss_ce_3: 0.1468  loss_mask_3: 0.342  loss_dice_3: 0.8471  loss_ce_4: 0.131  loss_mask_4: 0.3445  loss_dice_4: 0.846  loss_ce_5: 0.1371  loss_mask_5: 0.3408  loss_dice_5: 0.843  loss_ce_6: 0.1081  loss_mask_6: 0.3439  loss_dice_6: 0.8387  loss_ce_7: 0.1079  loss_mask_7: 0.3378  loss_dice_7: 0.8239  loss_ce_8: 0.1218  loss_mask_8: 0.3391  loss_dice_8: 0.8195    time: 0.9360  last_time: 0.9050  data_time: 0.0333  last_data_time: 0.0309   lr: 0.0001  max_mem: 30049M
[10/18 09:25:59] d2.utils.events INFO:  eta: 0:06:50  iter: 2559  total_loss: 12.7  loss_ce: 0.09366  loss_mask: 0.3186  loss_dice: 0.8168  loss_ce_0: 0.1213  loss_mask_0: 0.3536  loss_dice_0: 0.9201  loss_ce_1: 0.1405  loss_mask_1: 0.3279  loss_dice_1: 0.8579  loss_ce_2: 0.1299  loss_mask_2: 0.3205  loss_dice_2: 0.811  loss_ce_3: 0.123  loss_mask_3: 0.3283  loss_dice_3: 0.8161  loss_ce_4: 0.1066  loss_mask_4: 0.3278  loss_dice_4: 0.8199  loss_ce_5: 0.1141  loss_mask_5: 0.3254  loss_dice_5: 0.8057  loss_ce_6: 0.09885  loss_mask_6: 0.3214  loss_dice_6: 0.8116  loss_ce_7: 0.08909  loss_mask_7: 0.3221  loss_dice_7: 0.8164  loss_ce_8: 0.1053  loss_mask_8: 0.3177  loss_dice_8: 0.7962    time: 0.9361  last_time: 0.9414  data_time: 0.0316  last_data_time: 0.0308   lr: 0.0001  max_mem: 30049M
[10/18 09:26:18] d2.utils.events INFO:  eta: 0:06:32  iter: 2579  total_loss: 13.77  loss_ce: 0.106  loss_mask: 0.3348  loss_dice: 0.8565  loss_ce_0: 0.1327  loss_mask_0: 0.3904  loss_dice_0: 0.9531  loss_ce_1: 0.1533  loss_mask_1: 0.3502  loss_dice_1: 0.9399  loss_ce_2: 0.1214  loss_mask_2: 0.3436  loss_dice_2: 0.9097  loss_ce_3: 0.1188  loss_mask_3: 0.3433  loss_dice_3: 0.8885  loss_ce_4: 0.1265  loss_mask_4: 0.3429  loss_dice_4: 0.8912  loss_ce_5: 0.1211  loss_mask_5: 0.3466  loss_dice_5: 0.8713  loss_ce_6: 0.1143  loss_mask_6: 0.3489  loss_dice_6: 0.8798  loss_ce_7: 0.1185  loss_mask_7: 0.3443  loss_dice_7: 0.874  loss_ce_8: 0.1065  loss_mask_8: 0.3387  loss_dice_8: 0.8706    time: 0.9362  last_time: 0.9155  data_time: 0.0331  last_data_time: 0.0392   lr: 0.0001  max_mem: 30049M
[10/18 09:26:37] d2.utils.events INFO:  eta: 0:06:13  iter: 2599  total_loss: 12.84  loss_ce: 0.08505  loss_mask: 0.3167  loss_dice: 0.8476  loss_ce_0: 0.1344  loss_mask_0: 0.3476  loss_dice_0: 0.9181  loss_ce_1: 0.1267  loss_mask_1: 0.3254  loss_dice_1: 0.8818  loss_ce_2: 0.134  loss_mask_2: 0.3222  loss_dice_2: 0.8682  loss_ce_3: 0.1094  loss_mask_3: 0.3172  loss_dice_3: 0.855  loss_ce_4: 0.09185  loss_mask_4: 0.3233  loss_dice_4: 0.8339  loss_ce_5: 0.09841  loss_mask_5: 0.3161  loss_dice_5: 0.8318  loss_ce_6: 0.1023  loss_mask_6: 0.321  loss_dice_6: 0.8506  loss_ce_7: 0.1178  loss_mask_7: 0.3188  loss_dice_7: 0.8321  loss_ce_8: 0.08639  loss_mask_8: 0.3201  loss_dice_8: 0.8297    time: 0.9361  last_time: 0.9440  data_time: 0.0337  last_data_time: 0.0386   lr: 0.0001  max_mem: 30049M
[10/18 09:26:55] d2.utils.events INFO:  eta: 0:05:54  iter: 2619  total_loss: 12.69  loss_ce: 0.09788  loss_mask: 0.3142  loss_dice: 0.813  loss_ce_0: 0.1069  loss_mask_0: 0.3368  loss_dice_0: 0.8829  loss_ce_1: 0.1246  loss_mask_1: 0.3189  loss_dice_1: 0.8491  loss_ce_2: 0.1152  loss_mask_2: 0.3149  loss_dice_2: 0.8318  loss_ce_3: 0.1001  loss_mask_3: 0.3097  loss_dice_3: 0.7905  loss_ce_4: 0.09738  loss_mask_4: 0.3159  loss_dice_4: 0.8084  loss_ce_5: 0.1137  loss_mask_5: 0.3118  loss_dice_5: 0.8171  loss_ce_6: 0.09422  loss_mask_6: 0.3124  loss_dice_6: 0.8166  loss_ce_7: 0.1019  loss_mask_7: 0.3118  loss_dice_7: 0.8151  loss_ce_8: 0.09369  loss_mask_8: 0.3119  loss_dice_8: 0.7967    time: 0.9360  last_time: 0.9134  data_time: 0.0337  last_data_time: 0.0399   lr: 0.0001  max_mem: 30049M
[10/18 09:27:14] d2.utils.events INFO:  eta: 0:05:36  iter: 2639  total_loss: 12.6  loss_ce: 0.1009  loss_mask: 0.3042  loss_dice: 0.7907  loss_ce_0: 0.1159  loss_mask_0: 0.335  loss_dice_0: 0.8827  loss_ce_1: 0.1276  loss_mask_1: 0.324  loss_dice_1: 0.858  loss_ce_2: 0.1114  loss_mask_2: 0.3142  loss_dice_2: 0.8329  loss_ce_3: 0.102  loss_mask_3: 0.3142  loss_dice_3: 0.8186  loss_ce_4: 0.1094  loss_mask_4: 0.3056  loss_dice_4: 0.8338  loss_ce_5: 0.1005  loss_mask_5: 0.3011  loss_dice_5: 0.8131  loss_ce_6: 0.1081  loss_mask_6: 0.3103  loss_dice_6: 0.8299  loss_ce_7: 0.08991  loss_mask_7: 0.3059  loss_dice_7: 0.8314  loss_ce_8: 0.09725  loss_mask_8: 0.3078  loss_dice_8: 0.8212    time: 0.9360  last_time: 0.9803  data_time: 0.0343  last_data_time: 0.0315   lr: 0.0001  max_mem: 30049M
[10/18 09:27:33] d2.utils.events INFO:  eta: 0:05:17  iter: 2659  total_loss: 12.72  loss_ce: 0.09092  loss_mask: 0.3245  loss_dice: 0.7815  loss_ce_0: 0.1292  loss_mask_0: 0.3562  loss_dice_0: 0.8942  loss_ce_1: 0.1388  loss_mask_1: 0.3354  loss_dice_1: 0.8473  loss_ce_2: 0.1147  loss_mask_2: 0.3332  loss_dice_2: 0.8273  loss_ce_3: 0.09951  loss_mask_3: 0.3282  loss_dice_3: 0.8106  loss_ce_4: 0.1056  loss_mask_4: 0.332  loss_dice_4: 0.8065  loss_ce_5: 0.09131  loss_mask_5: 0.33  loss_dice_5: 0.8027  loss_ce_6: 0.09481  loss_mask_6: 0.325  loss_dice_6: 0.8082  loss_ce_7: 0.09032  loss_mask_7: 0.3243  loss_dice_7: 0.7938  loss_ce_8: 0.09  loss_mask_8: 0.3251  loss_dice_8: 0.7788    time: 0.9361  last_time: 0.9806  data_time: 0.0318  last_data_time: 0.0296   lr: 0.0001  max_mem: 30049M
[10/18 09:27:52] d2.utils.events INFO:  eta: 0:04:59  iter: 2679  total_loss: 12.48  loss_ce: 0.09249  loss_mask: 0.3087  loss_dice: 0.8064  loss_ce_0: 0.1124  loss_mask_0: 0.3428  loss_dice_0: 0.9067  loss_ce_1: 0.1179  loss_mask_1: 0.3192  loss_dice_1: 0.8708  loss_ce_2: 0.0979  loss_mask_2: 0.3124  loss_dice_2: 0.8357  loss_ce_3: 0.1068  loss_mask_3: 0.3079  loss_dice_3: 0.8308  loss_ce_4: 0.08575  loss_mask_4: 0.3073  loss_dice_4: 0.8327  loss_ce_5: 0.09031  loss_mask_5: 0.3075  loss_dice_5: 0.8231  loss_ce_6: 0.08269  loss_mask_6: 0.3091  loss_dice_6: 0.8245  loss_ce_7: 0.09072  loss_mask_7: 0.307  loss_dice_7: 0.8114  loss_ce_8: 0.08098  loss_mask_8: 0.3061  loss_dice_8: 0.818    time: 0.9361  last_time: 0.9040  data_time: 0.0322  last_data_time: 0.0304   lr: 0.0001  max_mem: 30049M
[10/18 09:28:10] d2.utils.events INFO:  eta: 0:04:39  iter: 2699  total_loss: 12.21  loss_ce: 0.07448  loss_mask: 0.3139  loss_dice: 0.7963  loss_ce_0: 0.1406  loss_mask_0: 0.3405  loss_dice_0: 0.8698  loss_ce_1: 0.1326  loss_mask_1: 0.323  loss_dice_1: 0.8412  loss_ce_2: 0.1303  loss_mask_2: 0.3181  loss_dice_2: 0.8192  loss_ce_3: 0.1047  loss_mask_3: 0.3193  loss_dice_3: 0.798  loss_ce_4: 0.1035  loss_mask_4: 0.3139  loss_dice_4: 0.8001  loss_ce_5: 0.1044  loss_mask_5: 0.3151  loss_dice_5: 0.7966  loss_ce_6: 0.09186  loss_mask_6: 0.3118  loss_dice_6: 0.8072  loss_ce_7: 0.1044  loss_mask_7: 0.3144  loss_dice_7: 0.8026  loss_ce_8: 0.08152  loss_mask_8: 0.3127  loss_dice_8: 0.8042    time: 0.9360  last_time: 0.9282  data_time: 0.0350  last_data_time: 0.0379   lr: 0.0001  max_mem: 30049M
[10/18 09:28:29] d2.utils.events INFO:  eta: 0:04:21  iter: 2719  total_loss: 12.79  loss_ce: 0.08973  loss_mask: 0.3324  loss_dice: 0.8  loss_ce_0: 0.1137  loss_mask_0: 0.3635  loss_dice_0: 0.8923  loss_ce_1: 0.1349  loss_mask_1: 0.3365  loss_dice_1: 0.8548  loss_ce_2: 0.1102  loss_mask_2: 0.3329  loss_dice_2: 0.8256  loss_ce_3: 0.1252  loss_mask_3: 0.33  loss_dice_3: 0.8178  loss_ce_4: 0.1013  loss_mask_4: 0.3296  loss_dice_4: 0.812  loss_ce_5: 0.1124  loss_mask_5: 0.3321  loss_dice_5: 0.7952  loss_ce_6: 0.09303  loss_mask_6: 0.332  loss_dice_6: 0.7823  loss_ce_7: 0.09581  loss_mask_7: 0.333  loss_dice_7: 0.8028  loss_ce_8: 0.08253  loss_mask_8: 0.3321  loss_dice_8: 0.8062    time: 0.9360  last_time: 0.9451  data_time: 0.0322  last_data_time: 0.0320   lr: 0.0001  max_mem: 30049M
[10/18 09:28:48] d2.utils.events INFO:  eta: 0:04:02  iter: 2739  total_loss: 11.74  loss_ce: 0.095  loss_mask: 0.2967  loss_dice: 0.7823  loss_ce_0: 0.1226  loss_mask_0: 0.3373  loss_dice_0: 0.8549  loss_ce_1: 0.109  loss_mask_1: 0.3182  loss_dice_1: 0.8546  loss_ce_2: 0.1031  loss_mask_2: 0.3045  loss_dice_2: 0.7991  loss_ce_3: 0.09458  loss_mask_3: 0.303  loss_dice_3: 0.7923  loss_ce_4: 0.09278  loss_mask_4: 0.3057  loss_dice_4: 0.7915  loss_ce_5: 0.1034  loss_mask_5: 0.2976  loss_dice_5: 0.7873  loss_ce_6: 0.08733  loss_mask_6: 0.2966  loss_dice_6: 0.77  loss_ce_7: 0.08982  loss_mask_7: 0.3  loss_dice_7: 0.7698  loss_ce_8: 0.112  loss_mask_8: 0.3015  loss_dice_8: 0.7717    time: 0.9359  last_time: 0.9691  data_time: 0.0321  last_data_time: 0.0318   lr: 0.0001  max_mem: 30049M
[10/18 09:29:06] d2.utils.events INFO:  eta: 0:03:43  iter: 2759  total_loss: 12.37  loss_ce: 0.0731  loss_mask: 0.3132  loss_dice: 0.8197  loss_ce_0: 0.1086  loss_mask_0: 0.3481  loss_dice_0: 0.8835  loss_ce_1: 0.1071  loss_mask_1: 0.3248  loss_dice_1: 0.8554  loss_ce_2: 0.09263  loss_mask_2: 0.3197  loss_dice_2: 0.8382  loss_ce_3: 0.08063  loss_mask_3: 0.3124  loss_dice_3: 0.8109  loss_ce_4: 0.1013  loss_mask_4: 0.309  loss_dice_4: 0.813  loss_ce_5: 0.0726  loss_mask_5: 0.3066  loss_dice_5: 0.8189  loss_ce_6: 0.08182  loss_mask_6: 0.3074  loss_dice_6: 0.7998  loss_ce_7: 0.07368  loss_mask_7: 0.3063  loss_dice_7: 0.8099  loss_ce_8: 0.06538  loss_mask_8: 0.3081  loss_dice_8: 0.8121    time: 0.9359  last_time: 0.9662  data_time: 0.0360  last_data_time: 0.0316   lr: 0.0001  max_mem: 30049M
[10/18 09:29:25] d2.utils.events INFO:  eta: 0:03:25  iter: 2779  total_loss: 11.85  loss_ce: 0.08563  loss_mask: 0.3058  loss_dice: 0.7726  loss_ce_0: 0.1012  loss_mask_0: 0.3334  loss_dice_0: 0.8549  loss_ce_1: 0.09499  loss_mask_1: 0.3108  loss_dice_1: 0.8132  loss_ce_2: 0.1167  loss_mask_2: 0.3115  loss_dice_2: 0.8097  loss_ce_3: 0.1005  loss_mask_3: 0.3137  loss_dice_3: 0.802  loss_ce_4: 0.1015  loss_mask_4: 0.3068  loss_dice_4: 0.7797  loss_ce_5: 0.09651  loss_mask_5: 0.3051  loss_dice_5: 0.8008  loss_ce_6: 0.07798  loss_mask_6: 0.3048  loss_dice_6: 0.7908  loss_ce_7: 0.08535  loss_mask_7: 0.3033  loss_dice_7: 0.7901  loss_ce_8: 0.088  loss_mask_8: 0.3053  loss_dice_8: 0.7937    time: 0.9360  last_time: 0.9302  data_time: 0.0339  last_data_time: 0.0389   lr: 0.0001  max_mem: 30049M
[10/18 09:29:45] d2.utils.events INFO:  eta: 0:03:06  iter: 2799  total_loss: 12.43  loss_ce: 0.07917  loss_mask: 0.3197  loss_dice: 0.8294  loss_ce_0: 0.1211  loss_mask_0: 0.3539  loss_dice_0: 0.9141  loss_ce_1: 0.1367  loss_mask_1: 0.3221  loss_dice_1: 0.8649  loss_ce_2: 0.121  loss_mask_2: 0.3177  loss_dice_2: 0.8668  loss_ce_3: 0.09925  loss_mask_3: 0.3182  loss_dice_3: 0.8415  loss_ce_4: 0.08702  loss_mask_4: 0.3155  loss_dice_4: 0.8405  loss_ce_5: 0.0781  loss_mask_5: 0.3273  loss_dice_5: 0.8323  loss_ce_6: 0.08679  loss_mask_6: 0.3173  loss_dice_6: 0.8381  loss_ce_7: 0.0836  loss_mask_7: 0.3169  loss_dice_7: 0.8392  loss_ce_8: 0.08111  loss_mask_8: 0.3151  loss_dice_8: 0.8547    time: 0.9362  last_time: 0.9145  data_time: 0.0327  last_data_time: 0.0304   lr: 0.0001  max_mem: 30049M
[10/18 09:30:03] d2.utils.events INFO:  eta: 0:02:47  iter: 2819  total_loss: 12.29  loss_ce: 0.08646  loss_mask: 0.3237  loss_dice: 0.7998  loss_ce_0: 0.1022  loss_mask_0: 0.3574  loss_dice_0: 0.8645  loss_ce_1: 0.1189  loss_mask_1: 0.331  loss_dice_1: 0.839  loss_ce_2: 0.09497  loss_mask_2: 0.3253  loss_dice_2: 0.8488  loss_ce_3: 0.1021  loss_mask_3: 0.3243  loss_dice_3: 0.8187  loss_ce_4: 0.09015  loss_mask_4: 0.3252  loss_dice_4: 0.8263  loss_ce_5: 0.0902  loss_mask_5: 0.3213  loss_dice_5: 0.8031  loss_ce_6: 0.1025  loss_mask_6: 0.322  loss_dice_6: 0.8096  loss_ce_7: 0.08294  loss_mask_7: 0.3205  loss_dice_7: 0.7982  loss_ce_8: 0.07395  loss_mask_8: 0.322  loss_dice_8: 0.7906    time: 0.9361  last_time: 0.9313  data_time: 0.0339  last_data_time: 0.0396   lr: 0.0001  max_mem: 30049M
[10/18 09:30:22] d2.utils.events INFO:  eta: 0:02:29  iter: 2839  total_loss: 12.67  loss_ce: 0.1063  loss_mask: 0.3254  loss_dice: 0.8501  loss_ce_0: 0.1181  loss_mask_0: 0.3525  loss_dice_0: 0.8765  loss_ce_1: 0.139  loss_mask_1: 0.339  loss_dice_1: 0.8538  loss_ce_2: 0.1205  loss_mask_2: 0.3286  loss_dice_2: 0.8285  loss_ce_3: 0.1282  loss_mask_3: 0.3271  loss_dice_3: 0.8546  loss_ce_4: 0.1117  loss_mask_4: 0.3262  loss_dice_4: 0.8235  loss_ce_5: 0.1092  loss_mask_5: 0.3307  loss_dice_5: 0.8274  loss_ce_6: 0.1099  loss_mask_6: 0.3292  loss_dice_6: 0.828  loss_ce_7: 0.1264  loss_mask_7: 0.3287  loss_dice_7: 0.8288  loss_ce_8: 0.09062  loss_mask_8: 0.3276  loss_dice_8: 0.8341    time: 0.9361  last_time: 0.9133  data_time: 0.0338  last_data_time: 0.0380   lr: 0.0001  max_mem: 30049M
[10/18 09:30:40] d2.utils.events INFO:  eta: 0:02:10  iter: 2859  total_loss: 13.16  loss_ce: 0.1018  loss_mask: 0.3158  loss_dice: 0.827  loss_ce_0: 0.1205  loss_mask_0: 0.3467  loss_dice_0: 0.9707  loss_ce_1: 0.121  loss_mask_1: 0.3307  loss_dice_1: 0.912  loss_ce_2: 0.1133  loss_mask_2: 0.3239  loss_dice_2: 0.8719  loss_ce_3: 0.1167  loss_mask_3: 0.3146  loss_dice_3: 0.8517  loss_ce_4: 0.1072  loss_mask_4: 0.3133  loss_dice_4: 0.8481  loss_ce_5: 0.1161  loss_mask_5: 0.3138  loss_dice_5: 0.8509  loss_ce_6: 0.0966  loss_mask_6: 0.3165  loss_dice_6: 0.8363  loss_ce_7: 0.1036  loss_mask_7: 0.317  loss_dice_7: 0.8551  loss_ce_8: 0.09395  loss_mask_8: 0.3149  loss_dice_8: 0.8563    time: 0.9359  last_time: 0.9126  data_time: 0.0355  last_data_time: 0.0388   lr: 0.0001  max_mem: 30049M
[10/18 09:30:59] d2.utils.events INFO:  eta: 0:01:51  iter: 2879  total_loss: 12.88  loss_ce: 0.08397  loss_mask: 0.3259  loss_dice: 0.8299  loss_ce_0: 0.1376  loss_mask_0: 0.357  loss_dice_0: 0.8924  loss_ce_1: 0.1286  loss_mask_1: 0.3344  loss_dice_1: 0.8596  loss_ce_2: 0.1223  loss_mask_2: 0.328  loss_dice_2: 0.8356  loss_ce_3: 0.1017  loss_mask_3: 0.3308  loss_dice_3: 0.8341  loss_ce_4: 0.1113  loss_mask_4: 0.3254  loss_dice_4: 0.8392  loss_ce_5: 0.1013  loss_mask_5: 0.3253  loss_dice_5: 0.8399  loss_ce_6: 0.1055  loss_mask_6: 0.3285  loss_dice_6: 0.8128  loss_ce_7: 0.08343  loss_mask_7: 0.3242  loss_dice_7: 0.831  loss_ce_8: 0.08385  loss_mask_8: 0.328  loss_dice_8: 0.8218    time: 0.9359  last_time: 0.9467  data_time: 0.0338  last_data_time: 0.0314   lr: 0.0001  max_mem: 30049M
[10/18 09:31:18] d2.utils.events INFO:  eta: 0:01:33  iter: 2899  total_loss: 12.53  loss_ce: 0.09655  loss_mask: 0.3135  loss_dice: 0.7798  loss_ce_0: 0.1152  loss_mask_0: 0.3271  loss_dice_0: 0.8678  loss_ce_1: 0.1248  loss_mask_1: 0.3163  loss_dice_1: 0.8537  loss_ce_2: 0.1117  loss_mask_2: 0.314  loss_dice_2: 0.8192  loss_ce_3: 0.1002  loss_mask_3: 0.3121  loss_dice_3: 0.8134  loss_ce_4: 0.1073  loss_mask_4: 0.3102  loss_dice_4: 0.7947  loss_ce_5: 0.08475  loss_mask_5: 0.3072  loss_dice_5: 0.8075  loss_ce_6: 0.09303  loss_mask_6: 0.3098  loss_dice_6: 0.8008  loss_ce_7: 0.09397  loss_mask_7: 0.3104  loss_dice_7: 0.7915  loss_ce_8: 0.09189  loss_mask_8: 0.3058  loss_dice_8: 0.7792    time: 0.9359  last_time: 0.9292  data_time: 0.0346  last_data_time: 0.0372   lr: 0.0001  max_mem: 30049M
[10/18 09:31:37] d2.utils.events INFO:  eta: 0:01:14  iter: 2919  total_loss: 12.87  loss_ce: 0.0783  loss_mask: 0.3247  loss_dice: 0.8388  loss_ce_0: 0.1174  loss_mask_0: 0.3551  loss_dice_0: 0.9042  loss_ce_1: 0.1258  loss_mask_1: 0.3405  loss_dice_1: 0.8464  loss_ce_2: 0.1013  loss_mask_2: 0.3376  loss_dice_2: 0.8493  loss_ce_3: 0.1135  loss_mask_3: 0.3323  loss_dice_3: 0.8276  loss_ce_4: 0.09451  loss_mask_4: 0.3326  loss_dice_4: 0.8524  loss_ce_5: 0.1001  loss_mask_5: 0.328  loss_dice_5: 0.8369  loss_ce_6: 0.08758  loss_mask_6: 0.3251  loss_dice_6: 0.8294  loss_ce_7: 0.1046  loss_mask_7: 0.3264  loss_dice_7: 0.8131  loss_ce_8: 0.08547  loss_mask_8: 0.3254  loss_dice_8: 0.8368    time: 0.9360  last_time: 0.9738  data_time: 0.0342  last_data_time: 0.0332   lr: 0.0001  max_mem: 30049M
[10/18 09:31:56] d2.utils.events INFO:  eta: 0:00:55  iter: 2939  total_loss: 12.96  loss_ce: 0.1099  loss_mask: 0.3261  loss_dice: 0.7942  loss_ce_0: 0.1355  loss_mask_0: 0.3468  loss_dice_0: 0.8904  loss_ce_1: 0.1531  loss_mask_1: 0.3326  loss_dice_1: 0.8514  loss_ce_2: 0.1462  loss_mask_2: 0.3279  loss_dice_2: 0.8422  loss_ce_3: 0.1106  loss_mask_3: 0.3351  loss_dice_3: 0.8123  loss_ce_4: 0.1219  loss_mask_4: 0.3358  loss_dice_4: 0.8259  loss_ce_5: 0.09087  loss_mask_5: 0.3323  loss_dice_5: 0.8099  loss_ce_6: 0.1013  loss_mask_6: 0.3322  loss_dice_6: 0.8184  loss_ce_7: 0.1063  loss_mask_7: 0.3286  loss_dice_7: 0.8146  loss_ce_8: 0.113  loss_mask_8: 0.3215  loss_dice_8: 0.8106    time: 0.9362  last_time: 0.9622  data_time: 0.0315  last_data_time: 0.0306   lr: 0.0001  max_mem: 30049M
[10/18 09:32:14] d2.utils.events INFO:  eta: 0:00:37  iter: 2959  total_loss: 12.93  loss_ce: 0.09053  loss_mask: 0.3078  loss_dice: 0.7989  loss_ce_0: 0.1478  loss_mask_0: 0.3343  loss_dice_0: 0.8966  loss_ce_1: 0.1487  loss_mask_1: 0.3224  loss_dice_1: 0.8669  loss_ce_2: 0.117  loss_mask_2: 0.3177  loss_dice_2: 0.8453  loss_ce_3: 0.1119  loss_mask_3: 0.3138  loss_dice_3: 0.7913  loss_ce_4: 0.1248  loss_mask_4: 0.3107  loss_dice_4: 0.8192  loss_ce_5: 0.1115  loss_mask_5: 0.3108  loss_dice_5: 0.7801  loss_ce_6: 0.1129  loss_mask_6: 0.3122  loss_dice_6: 0.8074  loss_ce_7: 0.1074  loss_mask_7: 0.3082  loss_dice_7: 0.7989  loss_ce_8: 0.1081  loss_mask_8: 0.3068  loss_dice_8: 0.8004    time: 0.9360  last_time: 0.9055  data_time: 0.0357  last_data_time: 0.0316   lr: 0.0001  max_mem: 30049M
[10/18 09:32:33] d2.utils.events INFO:  eta: 0:00:18  iter: 2979  total_loss: 13.23  loss_ce: 0.1053  loss_mask: 0.3272  loss_dice: 0.8776  loss_ce_0: 0.1428  loss_mask_0: 0.3568  loss_dice_0: 0.9137  loss_ce_1: 0.1454  loss_mask_1: 0.334  loss_dice_1: 0.8866  loss_ce_2: 0.1382  loss_mask_2: 0.326  loss_dice_2: 0.8819  loss_ce_3: 0.1279  loss_mask_3: 0.3274  loss_dice_3: 0.8779  loss_ce_4: 0.1195  loss_mask_4: 0.3243  loss_dice_4: 0.882  loss_ce_5: 0.1005  loss_mask_5: 0.3245  loss_dice_5: 0.8852  loss_ce_6: 0.1061  loss_mask_6: 0.3225  loss_dice_6: 0.8838  loss_ce_7: 0.1157  loss_mask_7: 0.3189  loss_dice_7: 0.8722  loss_ce_8: 0.1035  loss_mask_8: 0.3262  loss_dice_8: 0.8594    time: 0.9359  last_time: 0.9117  data_time: 0.0352  last_data_time: 0.0379   lr: 0.0001  max_mem: 30049M
[10/18 09:32:51] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_3000_19_adapter_decoder/model_final.pth
[10/18 09:32:53] d2.utils.events INFO:  eta: 0:00:00  iter: 2999  total_loss: 12.18  loss_ce: 0.06011  loss_mask: 0.3022  loss_dice: 0.7997  loss_ce_0: 0.0923  loss_mask_0: 0.3265  loss_dice_0: 0.8667  loss_ce_1: 0.09449  loss_mask_1: 0.308  loss_dice_1: 0.8172  loss_ce_2: 0.07017  loss_mask_2: 0.3068  loss_dice_2: 0.8148  loss_ce_3: 0.0769  loss_mask_3: 0.3039  loss_dice_3: 0.7831  loss_ce_4: 0.07956  loss_mask_4: 0.3029  loss_dice_4: 0.7892  loss_ce_5: 0.05918  loss_mask_5: 0.3051  loss_dice_5: 0.7772  loss_ce_6: 0.05867  loss_mask_6: 0.3061  loss_dice_6: 0.7877  loss_ce_7: 0.06678  loss_mask_7: 0.3053  loss_dice_7: 0.7753  loss_ce_8: 0.08105  loss_mask_8: 0.303  loss_dice_8: 0.7918    time: 0.9358  last_time: 0.9039  data_time: 0.0327  last_data_time: 0.0312   lr: 0.0001  max_mem: 30049M
[10/18 09:32:54] d2.engine.hooks INFO: Overall training speed: 2998 iterations in 0:46:45 (0.9358 s / it)
[10/18 09:32:54] d2.engine.hooks INFO: Total training time: 0:46:56 (0:00:10 on hooks)
[10/18 09:32:54] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[10/18 09:32:54] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[10/18 09:32:54] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[10/18 09:32:54] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[10/18 09:32:54] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[10/18 09:32:54] d2.evaluation.evaluator INFO: Start inference on 500 batches
[10/18 09:32:57] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0035 s/iter. Inference: 0.1866 s/iter. Eval: 0.0556 s/iter. Total: 0.2457 s/iter. ETA=0:02:00
[10/18 09:33:02] d2.evaluation.evaluator INFO: Inference done 32/500. Dataloading: 0.0043 s/iter. Inference: 0.1867 s/iter. Eval: 0.0560 s/iter. Total: 0.2470 s/iter. ETA=0:01:55
[10/18 09:33:08] d2.evaluation.evaluator INFO: Inference done 53/500. Dataloading: 0.0044 s/iter. Inference: 0.1873 s/iter. Eval: 0.0566 s/iter. Total: 0.2483 s/iter. ETA=0:01:50
[10/18 09:33:13] d2.evaluation.evaluator INFO: Inference done 74/500. Dataloading: 0.0044 s/iter. Inference: 0.1871 s/iter. Eval: 0.0569 s/iter. Total: 0.2484 s/iter. ETA=0:01:45
[10/18 09:33:18] d2.evaluation.evaluator INFO: Inference done 94/500. Dataloading: 0.0044 s/iter. Inference: 0.1878 s/iter. Eval: 0.0571 s/iter. Total: 0.2493 s/iter. ETA=0:01:41
[10/18 09:33:23] d2.evaluation.evaluator INFO: Inference done 114/500. Dataloading: 0.0044 s/iter. Inference: 0.1879 s/iter. Eval: 0.0575 s/iter. Total: 0.2498 s/iter. ETA=0:01:36
[10/18 09:33:28] d2.evaluation.evaluator INFO: Inference done 134/500. Dataloading: 0.0044 s/iter. Inference: 0.1883 s/iter. Eval: 0.0574 s/iter. Total: 0.2501 s/iter. ETA=0:01:31
[10/18 09:33:33] d2.evaluation.evaluator INFO: Inference done 154/500. Dataloading: 0.0044 s/iter. Inference: 0.1886 s/iter. Eval: 0.0574 s/iter. Total: 0.2504 s/iter. ETA=0:01:26
[10/18 09:33:38] d2.evaluation.evaluator INFO: Inference done 175/500. Dataloading: 0.0044 s/iter. Inference: 0.1885 s/iter. Eval: 0.0574 s/iter. Total: 0.2503 s/iter. ETA=0:01:21
[10/18 09:33:43] d2.evaluation.evaluator INFO: Inference done 195/500. Dataloading: 0.0044 s/iter. Inference: 0.1887 s/iter. Eval: 0.0574 s/iter. Total: 0.2505 s/iter. ETA=0:01:16
[10/18 09:33:48] d2.evaluation.evaluator INFO: Inference done 215/500. Dataloading: 0.0044 s/iter. Inference: 0.1889 s/iter. Eval: 0.0572 s/iter. Total: 0.2506 s/iter. ETA=0:01:11
[10/18 09:33:53] d2.evaluation.evaluator INFO: Inference done 235/500. Dataloading: 0.0044 s/iter. Inference: 0.1890 s/iter. Eval: 0.0571 s/iter. Total: 0.2506 s/iter. ETA=0:01:06
[10/18 09:33:58] d2.evaluation.evaluator INFO: Inference done 256/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0571 s/iter. Total: 0.2504 s/iter. ETA=0:01:01
[10/18 09:34:04] d2.evaluation.evaluator INFO: Inference done 277/500. Dataloading: 0.0044 s/iter. Inference: 0.1887 s/iter. Eval: 0.0572 s/iter. Total: 0.2503 s/iter. ETA=0:00:55
[10/18 09:34:09] d2.evaluation.evaluator INFO: Inference done 297/500. Dataloading: 0.0044 s/iter. Inference: 0.1886 s/iter. Eval: 0.0573 s/iter. Total: 0.2503 s/iter. ETA=0:00:50
[10/18 09:34:14] d2.evaluation.evaluator INFO: Inference done 318/500. Dataloading: 0.0044 s/iter. Inference: 0.1887 s/iter. Eval: 0.0572 s/iter. Total: 0.2503 s/iter. ETA=0:00:45
[10/18 09:34:19] d2.evaluation.evaluator INFO: Inference done 338/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0572 s/iter. Total: 0.2505 s/iter. ETA=0:00:40
[10/18 09:34:24] d2.evaluation.evaluator INFO: Inference done 358/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0573 s/iter. Total: 0.2505 s/iter. ETA=0:00:35
[10/18 09:34:29] d2.evaluation.evaluator INFO: Inference done 378/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0573 s/iter. Total: 0.2506 s/iter. ETA=0:00:30
[10/18 09:34:34] d2.evaluation.evaluator INFO: Inference done 398/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0574 s/iter. Total: 0.2506 s/iter. ETA=0:00:25
[10/18 09:34:39] d2.evaluation.evaluator INFO: Inference done 418/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0574 s/iter. Total: 0.2506 s/iter. ETA=0:00:20
[10/18 09:34:44] d2.evaluation.evaluator INFO: Inference done 438/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0574 s/iter. Total: 0.2507 s/iter. ETA=0:00:15
[10/18 09:34:49] d2.evaluation.evaluator INFO: Inference done 459/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0574 s/iter. Total: 0.2506 s/iter. ETA=0:00:10
[10/18 09:34:54] d2.evaluation.evaluator INFO: Inference done 479/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0574 s/iter. Total: 0.2507 s/iter. ETA=0:00:05
[10/18 09:34:59] d2.evaluation.evaluator INFO: Inference done 499/500. Dataloading: 0.0044 s/iter. Inference: 0.1888 s/iter. Eval: 0.0574 s/iter. Total: 0.2507 s/iter. ETA=0:00:00
[10/18 09:35:00] d2.evaluation.evaluator INFO: Total inference time: 0:02:04.156957 (0.250822 s / iter per device, on 1 devices)
[10/18 09:35:00] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:33 (0.188815 s / iter per device, on 1 devices)
[10/18 09:35:00] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalbq5tl1i4 ...
[10/18 09:35:23] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 38.156 | 47.371 | 45.818 |      19       |
| Things | 0.000  | 0.000  | 0.000  |       8       |
| Stuff  | 65.905 | 81.823 | 79.141 |      11       |
[10/18 09:35:23] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.212 | 97.923 | 99.275 |     Stuff     |
| class_8  | 71.330 | 83.491 | 85.435 |     Stuff     |
| class_11 | 87.314 | 89.598 | 97.452 |     Stuff     |
| class_12 | 41.718 | 78.327 | 53.261 |     Stuff     |
| class_13 | 39.130 | 75.888 | 51.562 |     Stuff     |
| class_17 | 54.109 | 67.636 | 80.000 |     Stuff     |
| class_19 | 50.701 | 69.624 | 72.821 |     Stuff     |
| class_20 | 67.131 | 78.015 | 86.049 |     Stuff     |
| class_21 | 89.739 | 90.481 | 99.180 |     Stuff     |
| class_22 | 38.353 | 76.706 | 50.000 |     Stuff     |
| class_23 | 88.222 | 92.368 | 95.512 |     Stuff     |
| class_24 | 0.000  | 0.000  | 0.000  |    Things     |
| class_25 | 0.000  | 0.000  | 0.000  |    Things     |
| class_26 | 0.000  | 0.000  | 0.000  |    Things     |
| class_27 | 0.000  | 0.000  | 0.000  |    Things     |
| class_28 | 0.000  | 0.000  | 0.000  |    Things     |
| class_31 | 0.000  | 0.000  | 0.000  |    Things     |
| class_32 | 0.000  | 0.000  | 0.000  |    Things     |
| class_33 | 0.000  | 0.000  | 0.000  |    Things     |
[10/18 09:35:23] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[10/18 09:35:23] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[10/18 09:35:23] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[10/18 09:35:23] d2.evaluation.testing INFO: copypaste: 38.1558,47.3714,45.8182,0.0000,0.0000,0.0000,65.9055,81.8233,79.1406,97.2124,97.9227,99.2746,71.3301,83.4907,85.4348,87.3145,89.5978,97.4516,41.7176,78.3270,53.2609,39.1298,75.8880,51.5625,54.1090,67.6362,80.0000,50.7008,69.6244,72.8205,67.1313,78.0152,86.0490,89.7394,90.4811,99.1803,38.3528,76.7056,50.0000,88.2225,92.3679,95.5121,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000
