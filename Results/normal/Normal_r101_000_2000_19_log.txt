[09/10 14:02:04] detectron2 INFO: Rank of current process: 0. World size: 1
[09/10 14:02:06] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   535.113.01
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/10 14:02:06] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r101_exp_19_2000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/10 14:02:06] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r101_exp_19_2000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r101.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r101_000_2000_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 2000
TEST:
  EVAL_PERIOD: 2000


[09/10 14:02:06] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN101
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 512
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r101_000_2000_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/10 14:02:06] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/r101_000_2000_19/config.yaml
[09/10 14:02:06] d2.utils.env INFO: Using a generated random seed 7979450
[09/10 14:02:14] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (6): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (7): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (8): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (9): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (10): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (11): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (12): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (13): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (14): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (15): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (16): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (17): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (18): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (19): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (20): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (21): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (22): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=512, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=512, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 512)
)
[09/10 14:02:14] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/10 14:02:14] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/10 14:02:14] d2.data.build INFO: Using training sampler TrainingSampler
[09/10 14:02:14] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/10 14:02:14] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/10 14:02:15] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/10 14:02:15] d2.data.build INFO: Making batched data loader with batch_size=8
[09/10 14:02:15] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/10 14:02:15] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth ...
[09/10 14:02:15] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth ...
[09/10 14:02:17] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[09/10 14:02:17] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.10.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.10.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.10.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.10.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.10.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.10.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.11.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.11.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.11.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.11.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.11.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.11.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.12.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.12.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.12.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.12.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.12.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.12.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.13.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.13.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.13.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.13.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.13.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.13.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.14.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.14.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.14.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.14.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.14.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.14.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.15.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.15.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.15.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.15.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.15.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.15.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.16.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.16.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.16.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.16.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.16.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.16.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.17.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.17.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.17.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.17.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.17.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.17.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.18.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.18.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.18.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.18.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.18.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.18.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.19.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.19.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.19.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.19.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.19.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.19.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.20.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.20.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.20.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.20.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.20.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.20.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.21.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.21.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.21.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.21.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.21.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.21.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.22.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.22.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.22.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.22.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.22.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.22.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.6.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.6.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.6.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.6.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.6.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.6.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.7.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.7.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.7.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.7.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.7.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.7.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.8.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.8.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.8.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.8.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.8.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.8.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.9.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.9.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.9.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.9.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.9.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.9.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[09/10 14:02:17] d2.engine.train_loop INFO: Starting training from iteration 0
[09/10 14:02:46] d2.utils.events INFO:  eta: 0:38:08  iter: 19  total_loss: 31.21  loss_ce: 1.213  loss_mask: 0.266  loss_dice: 1.487  loss_ce_0: 1.363  loss_mask_0: 0.3101  loss_dice_0: 1.825  loss_ce_1: 1.344  loss_mask_1: 0.2995  loss_dice_1: 1.651  loss_ce_2: 1.298  loss_mask_2: 0.2853  loss_dice_2: 1.641  loss_ce_3: 1.238  loss_mask_3: 0.2826  loss_dice_3: 1.528  loss_ce_4: 1.196  loss_mask_4: 0.2775  loss_dice_4: 1.521  loss_ce_5: 1.169  loss_mask_5: 0.2778  loss_dice_5: 1.555  loss_ce_6: 1.194  loss_mask_6: 0.2677  loss_dice_6: 1.492  loss_ce_7: 1.199  loss_mask_7: 0.2687  loss_dice_7: 1.523  loss_ce_8: 1.176  loss_mask_8: 0.2641  loss_dice_8: 1.49    time: 1.1677  last_time: 1.1165  data_time: 0.1030  last_data_time: 0.0519   lr: 0.0001  max_mem: 31374M
[09/10 14:03:09] d2.utils.events INFO:  eta: 0:37:35  iter: 39  total_loss: 24.46  loss_ce: 0.7149  loss_mask: 0.2223  loss_dice: 1.409  loss_ce_0: 0.7876  loss_mask_0: 0.2461  loss_dice_0: 1.662  loss_ce_1: 0.8647  loss_mask_1: 0.238  loss_dice_1: 1.539  loss_ce_2: 0.8089  loss_mask_2: 0.2329  loss_dice_2: 1.494  loss_ce_3: 0.7556  loss_mask_3: 0.2236  loss_dice_3: 1.42  loss_ce_4: 0.7411  loss_mask_4: 0.2246  loss_dice_4: 1.47  loss_ce_5: 0.7502  loss_mask_5: 0.2263  loss_dice_5: 1.423  loss_ce_6: 0.7344  loss_mask_6: 0.2204  loss_dice_6: 1.381  loss_ce_7: 0.7114  loss_mask_7: 0.2234  loss_dice_7: 1.395  loss_ce_8: 0.7273  loss_mask_8: 0.2236  loss_dice_8: 1.419    time: 1.1559  last_time: 1.0898  data_time: 0.0475  last_data_time: 0.0517   lr: 0.0001  max_mem: 31374M
[09/10 14:03:32] d2.utils.events INFO:  eta: 0:37:22  iter: 59  total_loss: 24.29  loss_ce: 0.6671  loss_mask: 0.2098  loss_dice: 1.378  loss_ce_0: 0.7564  loss_mask_0: 0.2387  loss_dice_0: 1.702  loss_ce_1: 0.8544  loss_mask_1: 0.2263  loss_dice_1: 1.519  loss_ce_2: 0.7701  loss_mask_2: 0.2162  loss_dice_2: 1.473  loss_ce_3: 0.7549  loss_mask_3: 0.2114  loss_dice_3: 1.421  loss_ce_4: 0.7243  loss_mask_4: 0.2049  loss_dice_4: 1.396  loss_ce_5: 0.7174  loss_mask_5: 0.2074  loss_dice_5: 1.413  loss_ce_6: 0.7151  loss_mask_6: 0.215  loss_dice_6: 1.387  loss_ce_7: 0.6632  loss_mask_7: 0.2092  loss_dice_7: 1.392  loss_ce_8: 0.6931  loss_mask_8: 0.209  loss_dice_8: 1.359    time: 1.1600  last_time: 1.2003  data_time: 0.0501  last_data_time: 0.0467   lr: 0.0001  max_mem: 32309M
[09/10 14:03:55] d2.utils.events INFO:  eta: 0:36:55  iter: 79  total_loss: 22.57  loss_ce: 0.6119  loss_mask: 0.2071  loss_dice: 1.289  loss_ce_0: 0.6769  loss_mask_0: 0.2391  loss_dice_0: 1.569  loss_ce_1: 0.7423  loss_mask_1: 0.2286  loss_dice_1: 1.451  loss_ce_2: 0.7164  loss_mask_2: 0.2073  loss_dice_2: 1.373  loss_ce_3: 0.676  loss_mask_3: 0.2097  loss_dice_3: 1.339  loss_ce_4: 0.6067  loss_mask_4: 0.2033  loss_dice_4: 1.339  loss_ce_5: 0.5967  loss_mask_5: 0.205  loss_dice_5: 1.328  loss_ce_6: 0.6029  loss_mask_6: 0.2089  loss_dice_6: 1.278  loss_ce_7: 0.5967  loss_mask_7: 0.21  loss_dice_7: 1.289  loss_ce_8: 0.6239  loss_mask_8: 0.2083  loss_dice_8: 1.295    time: 1.1574  last_time: 1.1175  data_time: 0.0484  last_data_time: 0.0441   lr: 0.0001  max_mem: 32309M
[09/10 14:04:18] d2.utils.events INFO:  eta: 0:36:33  iter: 99  total_loss: 23.14  loss_ce: 0.6212  loss_mask: 0.2026  loss_dice: 1.379  loss_ce_0: 0.6838  loss_mask_0: 0.2341  loss_dice_0: 1.635  loss_ce_1: 0.8107  loss_mask_1: 0.215  loss_dice_1: 1.539  loss_ce_2: 0.7312  loss_mask_2: 0.2124  loss_dice_2: 1.48  loss_ce_3: 0.681  loss_mask_3: 0.2121  loss_dice_3: 1.431  loss_ce_4: 0.6616  loss_mask_4: 0.2062  loss_dice_4: 1.419  loss_ce_5: 0.5981  loss_mask_5: 0.2043  loss_dice_5: 1.425  loss_ce_6: 0.6244  loss_mask_6: 0.207  loss_dice_6: 1.383  loss_ce_7: 0.625  loss_mask_7: 0.2032  loss_dice_7: 1.379  loss_ce_8: 0.6081  loss_mask_8: 0.2018  loss_dice_8: 1.385    time: 1.1568  last_time: 1.2257  data_time: 0.0523  last_data_time: 0.0430   lr: 0.0001  max_mem: 32309M
[09/10 14:04:42] d2.utils.events INFO:  eta: 0:36:10  iter: 119  total_loss: 23.21  loss_ce: 0.6099  loss_mask: 0.2129  loss_dice: 1.361  loss_ce_0: 0.7053  loss_mask_0: 0.2345  loss_dice_0: 1.611  loss_ce_1: 0.7372  loss_mask_1: 0.2258  loss_dice_1: 1.544  loss_ce_2: 0.6979  loss_mask_2: 0.2114  loss_dice_2: 1.432  loss_ce_3: 0.657  loss_mask_3: 0.2124  loss_dice_3: 1.391  loss_ce_4: 0.6153  loss_mask_4: 0.2149  loss_dice_4: 1.347  loss_ce_5: 0.6246  loss_mask_5: 0.2127  loss_dice_5: 1.386  loss_ce_6: 0.6152  loss_mask_6: 0.2123  loss_dice_6: 1.393  loss_ce_7: 0.6133  loss_mask_7: 0.2064  loss_dice_7: 1.352  loss_ce_8: 0.6022  loss_mask_8: 0.2103  loss_dice_8: 1.351    time: 1.1571  last_time: 1.1637  data_time: 0.0541  last_data_time: 0.0404   lr: 0.0001  max_mem: 32309M
[09/10 14:05:05] d2.utils.events INFO:  eta: 0:35:45  iter: 139  total_loss: 20.8  loss_ce: 0.5212  loss_mask: 0.1894  loss_dice: 1.265  loss_ce_0: 0.6007  loss_mask_0: 0.2199  loss_dice_0: 1.49  loss_ce_1: 0.6716  loss_mask_1: 0.2064  loss_dice_1: 1.402  loss_ce_2: 0.6161  loss_mask_2: 0.1984  loss_dice_2: 1.321  loss_ce_3: 0.5406  loss_mask_3: 0.1953  loss_dice_3: 1.314  loss_ce_4: 0.513  loss_mask_4: 0.1954  loss_dice_4: 1.286  loss_ce_5: 0.4877  loss_mask_5: 0.1953  loss_dice_5: 1.298  loss_ce_6: 0.4891  loss_mask_6: 0.1938  loss_dice_6: 1.269  loss_ce_7: 0.4987  loss_mask_7: 0.1919  loss_dice_7: 1.266  loss_ce_8: 0.502  loss_mask_8: 0.1892  loss_dice_8: 1.261    time: 1.1560  last_time: 1.2413  data_time: 0.0498  last_data_time: 0.0534   lr: 0.0001  max_mem: 32309M
[09/10 14:05:28] d2.utils.events INFO:  eta: 0:35:22  iter: 159  total_loss: 22.52  loss_ce: 0.6028  loss_mask: 0.192  loss_dice: 1.35  loss_ce_0: 0.6629  loss_mask_0: 0.2317  loss_dice_0: 1.562  loss_ce_1: 0.7298  loss_mask_1: 0.2098  loss_dice_1: 1.45  loss_ce_2: 0.674  loss_mask_2: 0.2048  loss_dice_2: 1.436  loss_ce_3: 0.6109  loss_mask_3: 0.1942  loss_dice_3: 1.358  loss_ce_4: 0.617  loss_mask_4: 0.195  loss_dice_4: 1.371  loss_ce_5: 0.587  loss_mask_5: 0.1935  loss_dice_5: 1.365  loss_ce_6: 0.6099  loss_mask_6: 0.1923  loss_dice_6: 1.329  loss_ce_7: 0.6007  loss_mask_7: 0.1929  loss_dice_7: 1.369  loss_ce_8: 0.6034  loss_mask_8: 0.192  loss_dice_8: 1.353    time: 1.1558  last_time: 1.1126  data_time: 0.0466  last_data_time: 0.0539   lr: 0.0001  max_mem: 32309M
[09/10 14:05:51] d2.utils.events INFO:  eta: 0:34:59  iter: 179  total_loss: 22.7  loss_ce: 0.5591  loss_mask: 0.199  loss_dice: 1.297  loss_ce_0: 0.6909  loss_mask_0: 0.2295  loss_dice_0: 1.579  loss_ce_1: 0.7616  loss_mask_1: 0.2132  loss_dice_1: 1.493  loss_ce_2: 0.7124  loss_mask_2: 0.2077  loss_dice_2: 1.413  loss_ce_3: 0.6312  loss_mask_3: 0.2037  loss_dice_3: 1.363  loss_ce_4: 0.6013  loss_mask_4: 0.2031  loss_dice_4: 1.342  loss_ce_5: 0.5944  loss_mask_5: 0.201  loss_dice_5: 1.343  loss_ce_6: 0.6096  loss_mask_6: 0.1991  loss_dice_6: 1.333  loss_ce_7: 0.5697  loss_mask_7: 0.2006  loss_dice_7: 1.316  loss_ce_8: 0.5893  loss_mask_8: 0.2008  loss_dice_8: 1.329    time: 1.1564  last_time: 1.1340  data_time: 0.0548  last_data_time: 0.0468   lr: 0.0001  max_mem: 32309M
[09/10 14:06:14] d2.utils.events INFO:  eta: 0:34:34  iter: 199  total_loss: 19.97  loss_ce: 0.5292  loss_mask: 0.2015  loss_dice: 1.224  loss_ce_0: 0.6253  loss_mask_0: 0.2328  loss_dice_0: 1.424  loss_ce_1: 0.6576  loss_mask_1: 0.2117  loss_dice_1: 1.328  loss_ce_2: 0.5949  loss_mask_2: 0.2046  loss_dice_2: 1.25  loss_ce_3: 0.5559  loss_mask_3: 0.1998  loss_dice_3: 1.226  loss_ce_4: 0.5222  loss_mask_4: 0.2001  loss_dice_4: 1.238  loss_ce_5: 0.5456  loss_mask_5: 0.1976  loss_dice_5: 1.211  loss_ce_6: 0.5553  loss_mask_6: 0.2009  loss_dice_6: 1.199  loss_ce_7: 0.5183  loss_mask_7: 0.2002  loss_dice_7: 1.209  loss_ce_8: 0.5186  loss_mask_8: 0.2017  loss_dice_8: 1.219    time: 1.1559  last_time: 1.0934  data_time: 0.0457  last_data_time: 0.0498   lr: 0.0001  max_mem: 32309M
[09/10 14:06:37] d2.utils.events INFO:  eta: 0:34:05  iter: 219  total_loss: 22  loss_ce: 0.5785  loss_mask: 0.187  loss_dice: 1.291  loss_ce_0: 0.6542  loss_mask_0: 0.2127  loss_dice_0: 1.539  loss_ce_1: 0.7205  loss_mask_1: 0.1973  loss_dice_1: 1.448  loss_ce_2: 0.6465  loss_mask_2: 0.1883  loss_dice_2: 1.408  loss_ce_3: 0.6226  loss_mask_3: 0.1867  loss_dice_3: 1.317  loss_ce_4: 0.5778  loss_mask_4: 0.1887  loss_dice_4: 1.326  loss_ce_5: 0.6062  loss_mask_5: 0.1884  loss_dice_5: 1.322  loss_ce_6: 0.582  loss_mask_6: 0.1911  loss_dice_6: 1.307  loss_ce_7: 0.5707  loss_mask_7: 0.1864  loss_dice_7: 1.323  loss_ce_8: 0.5741  loss_mask_8: 0.1884  loss_dice_8: 1.339    time: 1.1548  last_time: 1.1105  data_time: 0.0529  last_data_time: 0.0517   lr: 0.0001  max_mem: 32309M
[09/10 14:07:01] d2.utils.events INFO:  eta: 0:33:46  iter: 239  total_loss: 21.74  loss_ce: 0.5503  loss_mask: 0.1813  loss_dice: 1.309  loss_ce_0: 0.5991  loss_mask_0: 0.2047  loss_dice_0: 1.566  loss_ce_1: 0.6963  loss_mask_1: 0.1974  loss_dice_1: 1.476  loss_ce_2: 0.656  loss_mask_2: 0.1898  loss_dice_2: 1.389  loss_ce_3: 0.599  loss_mask_3: 0.1847  loss_dice_3: 1.334  loss_ce_4: 0.5739  loss_mask_4: 0.1863  loss_dice_4: 1.326  loss_ce_5: 0.5789  loss_mask_5: 0.1849  loss_dice_5: 1.321  loss_ce_6: 0.5573  loss_mask_6: 0.1839  loss_dice_6: 1.329  loss_ce_7: 0.5406  loss_mask_7: 0.1828  loss_dice_7: 1.331  loss_ce_8: 0.5842  loss_mask_8: 0.1802  loss_dice_8: 1.309    time: 1.1557  last_time: 1.1874  data_time: 0.0540  last_data_time: 0.0587   lr: 0.0001  max_mem: 32309M
[09/10 14:07:24] d2.utils.events INFO:  eta: 0:33:24  iter: 259  total_loss: 21.32  loss_ce: 0.5368  loss_mask: 0.1859  loss_dice: 1.322  loss_ce_0: 0.619  loss_mask_0: 0.2128  loss_dice_0: 1.525  loss_ce_1: 0.6817  loss_mask_1: 0.2025  loss_dice_1: 1.444  loss_ce_2: 0.6352  loss_mask_2: 0.1958  loss_dice_2: 1.377  loss_ce_3: 0.5942  loss_mask_3: 0.1954  loss_dice_3: 1.325  loss_ce_4: 0.5293  loss_mask_4: 0.1945  loss_dice_4: 1.342  loss_ce_5: 0.5398  loss_mask_5: 0.1927  loss_dice_5: 1.372  loss_ce_6: 0.5207  loss_mask_6: 0.1915  loss_dice_6: 1.314  loss_ce_7: 0.5364  loss_mask_7: 0.1889  loss_dice_7: 1.309  loss_ce_8: 0.5244  loss_mask_8: 0.1892  loss_dice_8: 1.313    time: 1.1564  last_time: 1.1747  data_time: 0.0498  last_data_time: 0.0465   lr: 0.0001  max_mem: 32309M
[09/10 14:07:47] d2.utils.events INFO:  eta: 0:33:00  iter: 279  total_loss: 21.57  loss_ce: 0.5225  loss_mask: 0.1796  loss_dice: 1.316  loss_ce_0: 0.6271  loss_mask_0: 0.2158  loss_dice_0: 1.528  loss_ce_1: 0.7016  loss_mask_1: 0.1969  loss_dice_1: 1.457  loss_ce_2: 0.6316  loss_mask_2: 0.1892  loss_dice_2: 1.4  loss_ce_3: 0.5756  loss_mask_3: 0.1876  loss_dice_3: 1.337  loss_ce_4: 0.5589  loss_mask_4: 0.1866  loss_dice_4: 1.373  loss_ce_5: 0.5757  loss_mask_5: 0.1784  loss_dice_5: 1.379  loss_ce_6: 0.5492  loss_mask_6: 0.1837  loss_dice_6: 1.317  loss_ce_7: 0.5559  loss_mask_7: 0.1778  loss_dice_7: 1.352  loss_ce_8: 0.5285  loss_mask_8: 0.1802  loss_dice_8: 1.331    time: 1.1562  last_time: 1.2747  data_time: 0.0503  last_data_time: 0.0580   lr: 0.0001  max_mem: 32309M
[09/10 14:08:10] d2.utils.events INFO:  eta: 0:32:38  iter: 299  total_loss: 21.52  loss_ce: 0.5481  loss_mask: 0.1855  loss_dice: 1.295  loss_ce_0: 0.6123  loss_mask_0: 0.2186  loss_dice_0: 1.54  loss_ce_1: 0.6967  loss_mask_1: 0.2002  loss_dice_1: 1.488  loss_ce_2: 0.6177  loss_mask_2: 0.1905  loss_dice_2: 1.385  loss_ce_3: 0.6212  loss_mask_3: 0.1907  loss_dice_3: 1.376  loss_ce_4: 0.5707  loss_mask_4: 0.1873  loss_dice_4: 1.306  loss_ce_5: 0.5399  loss_mask_5: 0.1874  loss_dice_5: 1.336  loss_ce_6: 0.5647  loss_mask_6: 0.1868  loss_dice_6: 1.304  loss_ce_7: 0.5388  loss_mask_7: 0.1833  loss_dice_7: 1.305  loss_ce_8: 0.5347  loss_mask_8: 0.1876  loss_dice_8: 1.334    time: 1.1558  last_time: 1.1333  data_time: 0.0528  last_data_time: 0.0557   lr: 0.0001  max_mem: 32309M
[09/10 14:08:33] d2.utils.events INFO:  eta: 0:32:14  iter: 319  total_loss: 21.34  loss_ce: 0.5751  loss_mask: 0.1895  loss_dice: 1.287  loss_ce_0: 0.6196  loss_mask_0: 0.2115  loss_dice_0: 1.497  loss_ce_1: 0.7442  loss_mask_1: 0.1964  loss_dice_1: 1.401  loss_ce_2: 0.6492  loss_mask_2: 0.1897  loss_dice_2: 1.367  loss_ce_3: 0.639  loss_mask_3: 0.1861  loss_dice_3: 1.296  loss_ce_4: 0.5795  loss_mask_4: 0.1872  loss_dice_4: 1.322  loss_ce_5: 0.6068  loss_mask_5: 0.1838  loss_dice_5: 1.294  loss_ce_6: 0.6098  loss_mask_6: 0.1846  loss_dice_6: 1.277  loss_ce_7: 0.5755  loss_mask_7: 0.1843  loss_dice_7: 1.293  loss_ce_8: 0.5828  loss_mask_8: 0.1861  loss_dice_8: 1.263    time: 1.1559  last_time: 1.1612  data_time: 0.0483  last_data_time: 0.0428   lr: 0.0001  max_mem: 32309M
[09/10 14:08:57] d2.utils.events INFO:  eta: 0:31:52  iter: 339  total_loss: 21.33  loss_ce: 0.563  loss_mask: 0.1887  loss_dice: 1.276  loss_ce_0: 0.6632  loss_mask_0: 0.2241  loss_dice_0: 1.505  loss_ce_1: 0.6918  loss_mask_1: 0.2141  loss_dice_1: 1.441  loss_ce_2: 0.6296  loss_mask_2: 0.1974  loss_dice_2: 1.37  loss_ce_3: 0.571  loss_mask_3: 0.1952  loss_dice_3: 1.289  loss_ce_4: 0.6054  loss_mask_4: 0.1929  loss_dice_4: 1.307  loss_ce_5: 0.6016  loss_mask_5: 0.1899  loss_dice_5: 1.277  loss_ce_6: 0.583  loss_mask_6: 0.1887  loss_dice_6: 1.299  loss_ce_7: 0.5502  loss_mask_7: 0.1907  loss_dice_7: 1.316  loss_ce_8: 0.5509  loss_mask_8: 0.19  loss_dice_8: 1.327    time: 1.1560  last_time: 1.2087  data_time: 0.0514  last_data_time: 0.0559   lr: 0.0001  max_mem: 32309M
[09/10 14:09:19] d2.utils.events INFO:  eta: 0:31:27  iter: 359  total_loss: 20.58  loss_ce: 0.5317  loss_mask: 0.1957  loss_dice: 1.29  loss_ce_0: 0.5863  loss_mask_0: 0.2244  loss_dice_0: 1.499  loss_ce_1: 0.7084  loss_mask_1: 0.2115  loss_dice_1: 1.346  loss_ce_2: 0.6151  loss_mask_2: 0.2004  loss_dice_2: 1.324  loss_ce_3: 0.5711  loss_mask_3: 0.2022  loss_dice_3: 1.274  loss_ce_4: 0.5448  loss_mask_4: 0.1963  loss_dice_4: 1.322  loss_ce_5: 0.5466  loss_mask_5: 0.1891  loss_dice_5: 1.275  loss_ce_6: 0.5182  loss_mask_6: 0.1923  loss_dice_6: 1.249  loss_ce_7: 0.5365  loss_mask_7: 0.1983  loss_dice_7: 1.286  loss_ce_8: 0.5607  loss_mask_8: 0.191  loss_dice_8: 1.264    time: 1.1551  last_time: 1.1027  data_time: 0.0497  last_data_time: 0.0433   lr: 0.0001  max_mem: 32309M
[09/10 14:09:43] d2.utils.events INFO:  eta: 0:31:03  iter: 379  total_loss: 21.34  loss_ce: 0.5545  loss_mask: 0.1904  loss_dice: 1.34  loss_ce_0: 0.603  loss_mask_0: 0.2141  loss_dice_0: 1.51  loss_ce_1: 0.7049  loss_mask_1: 0.2018  loss_dice_1: 1.43  loss_ce_2: 0.6163  loss_mask_2: 0.1952  loss_dice_2: 1.397  loss_ce_3: 0.5845  loss_mask_3: 0.1934  loss_dice_3: 1.364  loss_ce_4: 0.5454  loss_mask_4: 0.1919  loss_dice_4: 1.33  loss_ce_5: 0.5362  loss_mask_5: 0.1913  loss_dice_5: 1.35  loss_ce_6: 0.5706  loss_mask_6: 0.1874  loss_dice_6: 1.296  loss_ce_7: 0.5253  loss_mask_7: 0.1887  loss_dice_7: 1.319  loss_ce_8: 0.5424  loss_mask_8: 0.1882  loss_dice_8: 1.296    time: 1.1550  last_time: 1.1619  data_time: 0.0521  last_data_time: 0.0441   lr: 0.0001  max_mem: 32309M
[09/10 14:10:06] d2.utils.events INFO:  eta: 0:30:39  iter: 399  total_loss: 20.79  loss_ce: 0.5237  loss_mask: 0.1896  loss_dice: 1.222  loss_ce_0: 0.5889  loss_mask_0: 0.218  loss_dice_0: 1.417  loss_ce_1: 0.708  loss_mask_1: 0.2012  loss_dice_1: 1.332  loss_ce_2: 0.5923  loss_mask_2: 0.1937  loss_dice_2: 1.271  loss_ce_3: 0.546  loss_mask_3: 0.1906  loss_dice_3: 1.241  loss_ce_4: 0.5313  loss_mask_4: 0.1917  loss_dice_4: 1.253  loss_ce_5: 0.5575  loss_mask_5: 0.188  loss_dice_5: 1.261  loss_ce_6: 0.5254  loss_mask_6: 0.1896  loss_dice_6: 1.212  loss_ce_7: 0.5114  loss_mask_7: 0.1942  loss_dice_7: 1.269  loss_ce_8: 0.5009  loss_mask_8: 0.1902  loss_dice_8: 1.225    time: 1.1550  last_time: 1.1785  data_time: 0.0486  last_data_time: 0.0411   lr: 0.0001  max_mem: 32309M
[09/10 14:10:29] d2.utils.events INFO:  eta: 0:30:18  iter: 419  total_loss: 20.92  loss_ce: 0.4961  loss_mask: 0.1839  loss_dice: 1.315  loss_ce_0: 0.5957  loss_mask_0: 0.2051  loss_dice_0: 1.558  loss_ce_1: 0.6834  loss_mask_1: 0.1928  loss_dice_1: 1.45  loss_ce_2: 0.5903  loss_mask_2: 0.1797  loss_dice_2: 1.392  loss_ce_3: 0.5408  loss_mask_3: 0.1804  loss_dice_3: 1.305  loss_ce_4: 0.527  loss_mask_4: 0.1824  loss_dice_4: 1.28  loss_ce_5: 0.5217  loss_mask_5: 0.1832  loss_dice_5: 1.285  loss_ce_6: 0.494  loss_mask_6: 0.1812  loss_dice_6: 1.27  loss_ce_7: 0.4994  loss_mask_7: 0.1841  loss_dice_7: 1.272  loss_ce_8: 0.4883  loss_mask_8: 0.183  loss_dice_8: 1.285    time: 1.1558  last_time: 1.1424  data_time: 0.0497  last_data_time: 0.0477   lr: 0.0001  max_mem: 32309M
[09/10 14:10:53] d2.utils.events INFO:  eta: 0:29:56  iter: 439  total_loss: 20.58  loss_ce: 0.5535  loss_mask: 0.1662  loss_dice: 1.261  loss_ce_0: 0.5952  loss_mask_0: 0.1921  loss_dice_0: 1.499  loss_ce_1: 0.6565  loss_mask_1: 0.1805  loss_dice_1: 1.438  loss_ce_2: 0.5693  loss_mask_2: 0.1671  loss_dice_2: 1.346  loss_ce_3: 0.5483  loss_mask_3: 0.167  loss_dice_3: 1.335  loss_ce_4: 0.5573  loss_mask_4: 0.1663  loss_dice_4: 1.276  loss_ce_5: 0.5295  loss_mask_5: 0.1645  loss_dice_5: 1.298  loss_ce_6: 0.5497  loss_mask_6: 0.1657  loss_dice_6: 1.285  loss_ce_7: 0.5125  loss_mask_7: 0.1664  loss_dice_7: 1.289  loss_ce_8: 0.5266  loss_mask_8: 0.1655  loss_dice_8: 1.264    time: 1.1567  last_time: 1.1367  data_time: 0.0501  last_data_time: 0.0689   lr: 0.0001  max_mem: 32309M
[09/10 14:11:16] d2.utils.events INFO:  eta: 0:29:34  iter: 459  total_loss: 20.59  loss_ce: 0.5217  loss_mask: 0.183  loss_dice: 1.275  loss_ce_0: 0.5909  loss_mask_0: 0.2096  loss_dice_0: 1.466  loss_ce_1: 0.6782  loss_mask_1: 0.1992  loss_dice_1: 1.382  loss_ce_2: 0.6474  loss_mask_2: 0.1844  loss_dice_2: 1.337  loss_ce_3: 0.5856  loss_mask_3: 0.1832  loss_dice_3: 1.287  loss_ce_4: 0.5761  loss_mask_4: 0.1829  loss_dice_4: 1.24  loss_ce_5: 0.5546  loss_mask_5: 0.1844  loss_dice_5: 1.304  loss_ce_6: 0.541  loss_mask_6: 0.184  loss_dice_6: 1.257  loss_ce_7: 0.5492  loss_mask_7: 0.1829  loss_dice_7: 1.225  loss_ce_8: 0.5357  loss_mask_8: 0.1837  loss_dice_8: 1.226    time: 1.1572  last_time: 1.1511  data_time: 0.0470  last_data_time: 0.0488   lr: 0.0001  max_mem: 32309M
[09/10 14:11:40] d2.utils.events INFO:  eta: 0:29:12  iter: 479  total_loss: 20.39  loss_ce: 0.4961  loss_mask: 0.1737  loss_dice: 1.236  loss_ce_0: 0.6202  loss_mask_0: 0.2024  loss_dice_0: 1.441  loss_ce_1: 0.6446  loss_mask_1: 0.1877  loss_dice_1: 1.386  loss_ce_2: 0.585  loss_mask_2: 0.1796  loss_dice_2: 1.341  loss_ce_3: 0.5215  loss_mask_3: 0.179  loss_dice_3: 1.32  loss_ce_4: 0.5107  loss_mask_4: 0.1772  loss_dice_4: 1.257  loss_ce_5: 0.4961  loss_mask_5: 0.1742  loss_dice_5: 1.282  loss_ce_6: 0.5073  loss_mask_6: 0.1735  loss_dice_6: 1.24  loss_ce_7: 0.4821  loss_mask_7: 0.1733  loss_dice_7: 1.249  loss_ce_8: 0.5226  loss_mask_8: 0.1714  loss_dice_8: 1.251    time: 1.1580  last_time: 1.1519  data_time: 0.0485  last_data_time: 0.0573   lr: 0.0001  max_mem: 32309M
[09/10 14:12:03] d2.utils.events INFO:  eta: 0:28:48  iter: 499  total_loss: 20.61  loss_ce: 0.5055  loss_mask: 0.1784  loss_dice: 1.246  loss_ce_0: 0.6028  loss_mask_0: 0.2122  loss_dice_0: 1.463  loss_ce_1: 0.6544  loss_mask_1: 0.1899  loss_dice_1: 1.426  loss_ce_2: 0.5932  loss_mask_2: 0.1822  loss_dice_2: 1.332  loss_ce_3: 0.5546  loss_mask_3: 0.1787  loss_dice_3: 1.26  loss_ce_4: 0.4984  loss_mask_4: 0.1807  loss_dice_4: 1.272  loss_ce_5: 0.5403  loss_mask_5: 0.1771  loss_dice_5: 1.283  loss_ce_6: 0.5183  loss_mask_6: 0.1766  loss_dice_6: 1.23  loss_ce_7: 0.523  loss_mask_7: 0.1765  loss_dice_7: 1.229  loss_ce_8: 0.527  loss_mask_8: 0.1759  loss_dice_8: 1.244    time: 1.1574  last_time: 1.1487  data_time: 0.0510  last_data_time: 0.0560   lr: 0.0001  max_mem: 32329M
[09/10 14:12:26] d2.utils.events INFO:  eta: 0:28:25  iter: 519  total_loss: 20.19  loss_ce: 0.5229  loss_mask: 0.1815  loss_dice: 1.278  loss_ce_0: 0.5927  loss_mask_0: 0.2136  loss_dice_0: 1.471  loss_ce_1: 0.6425  loss_mask_1: 0.193  loss_dice_1: 1.403  loss_ce_2: 0.5888  loss_mask_2: 0.1865  loss_dice_2: 1.358  loss_ce_3: 0.5448  loss_mask_3: 0.1832  loss_dice_3: 1.304  loss_ce_4: 0.546  loss_mask_4: 0.1832  loss_dice_4: 1.292  loss_ce_5: 0.5023  loss_mask_5: 0.1838  loss_dice_5: 1.295  loss_ce_6: 0.5064  loss_mask_6: 0.1769  loss_dice_6: 1.287  loss_ce_7: 0.4928  loss_mask_7: 0.1789  loss_dice_7: 1.305  loss_ce_8: 0.4961  loss_mask_8: 0.18  loss_dice_8: 1.246    time: 1.1577  last_time: 1.1682  data_time: 0.0500  last_data_time: 0.0528   lr: 0.0001  max_mem: 32329M
[09/10 14:12:49] d2.utils.events INFO:  eta: 0:28:03  iter: 539  total_loss: 20.92  loss_ce: 0.5038  loss_mask: 0.1925  loss_dice: 1.262  loss_ce_0: 0.6112  loss_mask_0: 0.2192  loss_dice_0: 1.466  loss_ce_1: 0.674  loss_mask_1: 0.2026  loss_dice_1: 1.414  loss_ce_2: 0.5967  loss_mask_2: 0.1981  loss_dice_2: 1.334  loss_ce_3: 0.5664  loss_mask_3: 0.1918  loss_dice_3: 1.296  loss_ce_4: 0.5682  loss_mask_4: 0.1932  loss_dice_4: 1.284  loss_ce_5: 0.5215  loss_mask_5: 0.1916  loss_dice_5: 1.296  loss_ce_6: 0.5501  loss_mask_6: 0.1946  loss_dice_6: 1.255  loss_ce_7: 0.5387  loss_mask_7: 0.1909  loss_dice_7: 1.277  loss_ce_8: 0.5394  loss_mask_8: 0.1973  loss_dice_8: 1.281    time: 1.1579  last_time: 1.1994  data_time: 0.0494  last_data_time: 0.0488   lr: 0.0001  max_mem: 32329M
[09/10 14:13:13] d2.utils.events INFO:  eta: 0:27:41  iter: 559  total_loss: 20  loss_ce: 0.4494  loss_mask: 0.1683  loss_dice: 1.262  loss_ce_0: 0.5521  loss_mask_0: 0.1945  loss_dice_0: 1.477  loss_ce_1: 0.6348  loss_mask_1: 0.177  loss_dice_1: 1.399  loss_ce_2: 0.5535  loss_mask_2: 0.1693  loss_dice_2: 1.322  loss_ce_3: 0.5242  loss_mask_3: 0.1724  loss_dice_3: 1.266  loss_ce_4: 0.4611  loss_mask_4: 0.1709  loss_dice_4: 1.289  loss_ce_5: 0.4578  loss_mask_5: 0.167  loss_dice_5: 1.263  loss_ce_6: 0.4735  loss_mask_6: 0.1693  loss_dice_6: 1.267  loss_ce_7: 0.4579  loss_mask_7: 0.1685  loss_dice_7: 1.281  loss_ce_8: 0.4371  loss_mask_8: 0.1704  loss_dice_8: 1.273    time: 1.1583  last_time: 1.1931  data_time: 0.0554  last_data_time: 0.0589   lr: 0.0001  max_mem: 32643M
[09/10 14:13:36] d2.utils.events INFO:  eta: 0:27:18  iter: 579  total_loss: 20.74  loss_ce: 0.5693  loss_mask: 0.1705  loss_dice: 1.261  loss_ce_0: 0.5853  loss_mask_0: 0.2062  loss_dice_0: 1.491  loss_ce_1: 0.6729  loss_mask_1: 0.1858  loss_dice_1: 1.423  loss_ce_2: 0.6485  loss_mask_2: 0.1738  loss_dice_2: 1.355  loss_ce_3: 0.601  loss_mask_3: 0.1769  loss_dice_3: 1.297  loss_ce_4: 0.5588  loss_mask_4: 0.1751  loss_dice_4: 1.312  loss_ce_5: 0.5375  loss_mask_5: 0.1731  loss_dice_5: 1.275  loss_ce_6: 0.5384  loss_mask_6: 0.1739  loss_dice_6: 1.255  loss_ce_7: 0.55  loss_mask_7: 0.1723  loss_dice_7: 1.289  loss_ce_8: 0.572  loss_mask_8: 0.1731  loss_dice_8: 1.283    time: 1.1587  last_time: 1.2717  data_time: 0.0556  last_data_time: 0.0538   lr: 0.0001  max_mem: 32643M
[09/10 14:14:00] d2.utils.events INFO:  eta: 0:26:56  iter: 599  total_loss: 19.4  loss_ce: 0.4949  loss_mask: 0.1727  loss_dice: 1.214  loss_ce_0: 0.5739  loss_mask_0: 0.2049  loss_dice_0: 1.374  loss_ce_1: 0.642  loss_mask_1: 0.1891  loss_dice_1: 1.317  loss_ce_2: 0.586  loss_mask_2: 0.173  loss_dice_2: 1.294  loss_ce_3: 0.5577  loss_mask_3: 0.1747  loss_dice_3: 1.232  loss_ce_4: 0.5342  loss_mask_4: 0.1749  loss_dice_4: 1.264  loss_ce_5: 0.5133  loss_mask_5: 0.1732  loss_dice_5: 1.219  loss_ce_6: 0.4704  loss_mask_6: 0.1727  loss_dice_6: 1.246  loss_ce_7: 0.505  loss_mask_7: 0.1726  loss_dice_7: 1.17  loss_ce_8: 0.4753  loss_mask_8: 0.17  loss_dice_8: 1.22    time: 1.1595  last_time: 1.1889  data_time: 0.0526  last_data_time: 0.0477   lr: 0.0001  max_mem: 32643M
[09/10 14:14:24] d2.utils.events INFO:  eta: 0:26:33  iter: 619  total_loss: 20.44  loss_ce: 0.5429  loss_mask: 0.1731  loss_dice: 1.258  loss_ce_0: 0.5848  loss_mask_0: 0.2074  loss_dice_0: 1.454  loss_ce_1: 0.717  loss_mask_1: 0.1917  loss_dice_1: 1.4  loss_ce_2: 0.6089  loss_mask_2: 0.184  loss_dice_2: 1.312  loss_ce_3: 0.5878  loss_mask_3: 0.1768  loss_dice_3: 1.297  loss_ce_4: 0.5713  loss_mask_4: 0.1778  loss_dice_4: 1.301  loss_ce_5: 0.5134  loss_mask_5: 0.1751  loss_dice_5: 1.292  loss_ce_6: 0.5521  loss_mask_6: 0.1752  loss_dice_6: 1.261  loss_ce_7: 0.5125  loss_mask_7: 0.1753  loss_dice_7: 1.269  loss_ce_8: 0.489  loss_mask_8: 0.1737  loss_dice_8: 1.311    time: 1.1603  last_time: 1.1755  data_time: 0.0516  last_data_time: 0.0667   lr: 0.0001  max_mem: 32643M
[09/10 14:14:47] d2.utils.events INFO:  eta: 0:26:11  iter: 639  total_loss: 20.68  loss_ce: 0.5138  loss_mask: 0.1673  loss_dice: 1.29  loss_ce_0: 0.5938  loss_mask_0: 0.1934  loss_dice_0: 1.52  loss_ce_1: 0.7023  loss_mask_1: 0.1844  loss_dice_1: 1.42  loss_ce_2: 0.6029  loss_mask_2: 0.1773  loss_dice_2: 1.349  loss_ce_3: 0.596  loss_mask_3: 0.1739  loss_dice_3: 1.296  loss_ce_4: 0.5373  loss_mask_4: 0.17  loss_dice_4: 1.304  loss_ce_5: 0.5648  loss_mask_5: 0.1722  loss_dice_5: 1.302  loss_ce_6: 0.5309  loss_mask_6: 0.1688  loss_dice_6: 1.278  loss_ce_7: 0.5327  loss_mask_7: 0.1692  loss_dice_7: 1.285  loss_ce_8: 0.5335  loss_mask_8: 0.1701  loss_dice_8: 1.278    time: 1.1608  last_time: 1.1327  data_time: 0.0587  last_data_time: 0.0707   lr: 0.0001  max_mem: 32643M
[09/10 14:15:11] d2.utils.events INFO:  eta: 0:25:48  iter: 659  total_loss: 19.98  loss_ce: 0.5108  loss_mask: 0.1789  loss_dice: 1.274  loss_ce_0: 0.5788  loss_mask_0: 0.2018  loss_dice_0: 1.491  loss_ce_1: 0.6657  loss_mask_1: 0.1862  loss_dice_1: 1.386  loss_ce_2: 0.611  loss_mask_2: 0.1818  loss_dice_2: 1.336  loss_ce_3: 0.551  loss_mask_3: 0.1794  loss_dice_3: 1.267  loss_ce_4: 0.5153  loss_mask_4: 0.1787  loss_dice_4: 1.278  loss_ce_5: 0.5091  loss_mask_5: 0.1755  loss_dice_5: 1.264  loss_ce_6: 0.525  loss_mask_6: 0.1758  loss_dice_6: 1.224  loss_ce_7: 0.5131  loss_mask_7: 0.1786  loss_dice_7: 1.28  loss_ce_8: 0.5116  loss_mask_8: 0.1774  loss_dice_8: 1.233    time: 1.1614  last_time: 1.1901  data_time: 0.0473  last_data_time: 0.0437   lr: 0.0001  max_mem: 32643M
[09/10 14:15:35] d2.utils.events INFO:  eta: 0:25:25  iter: 679  total_loss: 19.89  loss_ce: 0.47  loss_mask: 0.1831  loss_dice: 1.211  loss_ce_0: 0.5963  loss_mask_0: 0.2189  loss_dice_0: 1.378  loss_ce_1: 0.6755  loss_mask_1: 0.2067  loss_dice_1: 1.346  loss_ce_2: 0.5862  loss_mask_2: 0.1936  loss_dice_2: 1.325  loss_ce_3: 0.5529  loss_mask_3: 0.1903  loss_dice_3: 1.24  loss_ce_4: 0.5115  loss_mask_4: 0.1873  loss_dice_4: 1.259  loss_ce_5: 0.5124  loss_mask_5: 0.1841  loss_dice_5: 1.241  loss_ce_6: 0.4976  loss_mask_6: 0.1866  loss_dice_6: 1.231  loss_ce_7: 0.5096  loss_mask_7: 0.1824  loss_dice_7: 1.242  loss_ce_8: 0.4913  loss_mask_8: 0.1825  loss_dice_8: 1.259    time: 1.1620  last_time: 1.3277  data_time: 0.0482  last_data_time: 0.0476   lr: 0.0001  max_mem: 32643M
[09/10 14:15:58] d2.utils.events INFO:  eta: 0:25:02  iter: 699  total_loss: 19.53  loss_ce: 0.4866  loss_mask: 0.1884  loss_dice: 1.204  loss_ce_0: 0.5566  loss_mask_0: 0.2123  loss_dice_0: 1.395  loss_ce_1: 0.637  loss_mask_1: 0.1944  loss_dice_1: 1.342  loss_ce_2: 0.5747  loss_mask_2: 0.197  loss_dice_2: 1.27  loss_ce_3: 0.5486  loss_mask_3: 0.1883  loss_dice_3: 1.205  loss_ce_4: 0.4961  loss_mask_4: 0.1888  loss_dice_4: 1.209  loss_ce_5: 0.5151  loss_mask_5: 0.1863  loss_dice_5: 1.209  loss_ce_6: 0.4949  loss_mask_6: 0.1866  loss_dice_6: 1.201  loss_ce_7: 0.4879  loss_mask_7: 0.1898  loss_dice_7: 1.206  loss_ce_8: 0.4723  loss_mask_8: 0.1881  loss_dice_8: 1.207    time: 1.1623  last_time: 1.1461  data_time: 0.0476  last_data_time: 0.0453   lr: 0.0001  max_mem: 32643M
[09/10 14:16:22] d2.utils.events INFO:  eta: 0:24:40  iter: 719  total_loss: 20.39  loss_ce: 0.4937  loss_mask: 0.1631  loss_dice: 1.31  loss_ce_0: 0.6336  loss_mask_0: 0.1861  loss_dice_0: 1.478  loss_ce_1: 0.6561  loss_mask_1: 0.1707  loss_dice_1: 1.411  loss_ce_2: 0.5776  loss_mask_2: 0.1666  loss_dice_2: 1.354  loss_ce_3: 0.5707  loss_mask_3: 0.1661  loss_dice_3: 1.291  loss_ce_4: 0.581  loss_mask_4: 0.1652  loss_dice_4: 1.296  loss_ce_5: 0.5283  loss_mask_5: 0.1614  loss_dice_5: 1.294  loss_ce_6: 0.5354  loss_mask_6: 0.1595  loss_dice_6: 1.284  loss_ce_7: 0.4966  loss_mask_7: 0.1586  loss_dice_7: 1.276  loss_ce_8: 0.4984  loss_mask_8: 0.1591  loss_dice_8: 1.294    time: 1.1630  last_time: 1.2403  data_time: 0.0558  last_data_time: 0.0538   lr: 0.0001  max_mem: 32643M
[09/10 14:16:46] d2.utils.events INFO:  eta: 0:24:18  iter: 739  total_loss: 20.5  loss_ce: 0.489  loss_mask: 0.1732  loss_dice: 1.206  loss_ce_0: 0.5761  loss_mask_0: 0.1984  loss_dice_0: 1.453  loss_ce_1: 0.6882  loss_mask_1: 0.1884  loss_dice_1: 1.39  loss_ce_2: 0.5959  loss_mask_2: 0.1737  loss_dice_2: 1.313  loss_ce_3: 0.5684  loss_mask_3: 0.1734  loss_dice_3: 1.293  loss_ce_4: 0.5163  loss_mask_4: 0.1732  loss_dice_4: 1.264  loss_ce_5: 0.5422  loss_mask_5: 0.1709  loss_dice_5: 1.258  loss_ce_6: 0.5225  loss_mask_6: 0.1737  loss_dice_6: 1.248  loss_ce_7: 0.5141  loss_mask_7: 0.1734  loss_dice_7: 1.258  loss_ce_8: 0.5168  loss_mask_8: 0.1701  loss_dice_8: 1.247    time: 1.1634  last_time: 1.1613  data_time: 0.0509  last_data_time: 0.0464   lr: 0.0001  max_mem: 32643M
[09/10 14:17:09] d2.utils.events INFO:  eta: 0:23:55  iter: 759  total_loss: 20.67  loss_ce: 0.4626  loss_mask: 0.1643  loss_dice: 1.294  loss_ce_0: 0.5616  loss_mask_0: 0.1949  loss_dice_0: 1.551  loss_ce_1: 0.6004  loss_mask_1: 0.1904  loss_dice_1: 1.427  loss_ce_2: 0.5886  loss_mask_2: 0.173  loss_dice_2: 1.351  loss_ce_3: 0.5339  loss_mask_3: 0.1708  loss_dice_3: 1.294  loss_ce_4: 0.4929  loss_mask_4: 0.1688  loss_dice_4: 1.293  loss_ce_5: 0.5171  loss_mask_5: 0.167  loss_dice_5: 1.291  loss_ce_6: 0.5281  loss_mask_6: 0.1666  loss_dice_6: 1.288  loss_ce_7: 0.4993  loss_mask_7: 0.1651  loss_dice_7: 1.303  loss_ce_8: 0.488  loss_mask_8: 0.1643  loss_dice_8: 1.284    time: 1.1638  last_time: 1.2524  data_time: 0.0515  last_data_time: 0.0480   lr: 0.0001  max_mem: 32643M
[09/10 14:17:33] d2.utils.events INFO:  eta: 0:23:33  iter: 779  total_loss: 19.8  loss_ce: 0.5181  loss_mask: 0.1739  loss_dice: 1.205  loss_ce_0: 0.6113  loss_mask_0: 0.2052  loss_dice_0: 1.399  loss_ce_1: 0.6301  loss_mask_1: 0.186  loss_dice_1: 1.301  loss_ce_2: 0.5846  loss_mask_2: 0.1791  loss_dice_2: 1.239  loss_ce_3: 0.5466  loss_mask_3: 0.1735  loss_dice_3: 1.255  loss_ce_4: 0.543  loss_mask_4: 0.1723  loss_dice_4: 1.266  loss_ce_5: 0.5146  loss_mask_5: 0.1713  loss_dice_5: 1.216  loss_ce_6: 0.495  loss_mask_6: 0.1731  loss_dice_6: 1.179  loss_ce_7: 0.5123  loss_mask_7: 0.1717  loss_dice_7: 1.208  loss_ce_8: 0.5245  loss_mask_8: 0.1749  loss_dice_8: 1.191    time: 1.1646  last_time: 1.1730  data_time: 0.0502  last_data_time: 0.0481   lr: 0.0001  max_mem: 32643M
[09/10 14:17:57] d2.utils.events INFO:  eta: 0:23:10  iter: 799  total_loss: 20.33  loss_ce: 0.5304  loss_mask: 0.1802  loss_dice: 1.254  loss_ce_0: 0.6022  loss_mask_0: 0.2088  loss_dice_0: 1.385  loss_ce_1: 0.6744  loss_mask_1: 0.197  loss_dice_1: 1.36  loss_ce_2: 0.6276  loss_mask_2: 0.1864  loss_dice_2: 1.285  loss_ce_3: 0.5828  loss_mask_3: 0.1881  loss_dice_3: 1.249  loss_ce_4: 0.5338  loss_mask_4: 0.1842  loss_dice_4: 1.251  loss_ce_5: 0.5249  loss_mask_5: 0.1877  loss_dice_5: 1.253  loss_ce_6: 0.5392  loss_mask_6: 0.1816  loss_dice_6: 1.226  loss_ce_7: 0.5252  loss_mask_7: 0.1826  loss_dice_7: 1.205  loss_ce_8: 0.5299  loss_mask_8: 0.1806  loss_dice_8: 1.21    time: 1.1650  last_time: 1.2008  data_time: 0.0610  last_data_time: 0.0484   lr: 0.0001  max_mem: 32643M
[09/10 14:18:20] d2.utils.events INFO:  eta: 0:22:47  iter: 819  total_loss: 18.82  loss_ce: 0.4774  loss_mask: 0.1787  loss_dice: 1.158  loss_ce_0: 0.5547  loss_mask_0: 0.2212  loss_dice_0: 1.332  loss_ce_1: 0.6401  loss_mask_1: 0.1984  loss_dice_1: 1.31  loss_ce_2: 0.538  loss_mask_2: 0.1856  loss_dice_2: 1.225  loss_ce_3: 0.5314  loss_mask_3: 0.1874  loss_dice_3: 1.175  loss_ce_4: 0.4846  loss_mask_4: 0.184  loss_dice_4: 1.198  loss_ce_5: 0.4764  loss_mask_5: 0.1837  loss_dice_5: 1.157  loss_ce_6: 0.45  loss_mask_6: 0.182  loss_dice_6: 1.129  loss_ce_7: 0.47  loss_mask_7: 0.1831  loss_dice_7: 1.155  loss_ce_8: 0.4606  loss_mask_8: 0.182  loss_dice_8: 1.136    time: 1.1648  last_time: 1.1178  data_time: 0.0474  last_data_time: 0.0440   lr: 0.0001  max_mem: 32643M
[09/10 14:18:43] d2.utils.events INFO:  eta: 0:22:24  iter: 839  total_loss: 19.57  loss_ce: 0.4681  loss_mask: 0.174  loss_dice: 1.179  loss_ce_0: 0.5292  loss_mask_0: 0.1926  loss_dice_0: 1.392  loss_ce_1: 0.62  loss_mask_1: 0.1818  loss_dice_1: 1.277  loss_ce_2: 0.5777  loss_mask_2: 0.1718  loss_dice_2: 1.238  loss_ce_3: 0.5074  loss_mask_3: 0.1748  loss_dice_3: 1.189  loss_ce_4: 0.4916  loss_mask_4: 0.172  loss_dice_4: 1.166  loss_ce_5: 0.5  loss_mask_5: 0.1712  loss_dice_5: 1.219  loss_ce_6: 0.4566  loss_mask_6: 0.1716  loss_dice_6: 1.211  loss_ce_7: 0.4593  loss_mask_7: 0.1739  loss_dice_7: 1.154  loss_ce_8: 0.4908  loss_mask_8: 0.1722  loss_dice_8: 1.156    time: 1.1647  last_time: 1.1142  data_time: 0.0528  last_data_time: 0.0583   lr: 0.0001  max_mem: 32643M
[09/10 14:19:07] d2.utils.events INFO:  eta: 0:22:01  iter: 859  total_loss: 20.66  loss_ce: 0.5042  loss_mask: 0.1616  loss_dice: 1.286  loss_ce_0: 0.5908  loss_mask_0: 0.1983  loss_dice_0: 1.465  loss_ce_1: 0.6607  loss_mask_1: 0.1786  loss_dice_1: 1.369  loss_ce_2: 0.5916  loss_mask_2: 0.1648  loss_dice_2: 1.334  loss_ce_3: 0.5431  loss_mask_3: 0.1662  loss_dice_3: 1.304  loss_ce_4: 0.6163  loss_mask_4: 0.162  loss_dice_4: 1.29  loss_ce_5: 0.5459  loss_mask_5: 0.1616  loss_dice_5: 1.282  loss_ce_6: 0.5356  loss_mask_6: 0.1612  loss_dice_6: 1.289  loss_ce_7: 0.5312  loss_mask_7: 0.1623  loss_dice_7: 1.245  loss_ce_8: 0.5286  loss_mask_8: 0.1616  loss_dice_8: 1.276    time: 1.1647  last_time: 1.2129  data_time: 0.0574  last_data_time: 0.0454   lr: 0.0001  max_mem: 32643M
[09/10 14:19:31] d2.utils.events INFO:  eta: 0:21:39  iter: 879  total_loss: 20.79  loss_ce: 0.5421  loss_mask: 0.1565  loss_dice: 1.291  loss_ce_0: 0.6158  loss_mask_0: 0.1813  loss_dice_0: 1.524  loss_ce_1: 0.6939  loss_mask_1: 0.1685  loss_dice_1: 1.393  loss_ce_2: 0.6258  loss_mask_2: 0.1627  loss_dice_2: 1.361  loss_ce_3: 0.5423  loss_mask_3: 0.1628  loss_dice_3: 1.296  loss_ce_4: 0.5372  loss_mask_4: 0.1626  loss_dice_4: 1.294  loss_ce_5: 0.5409  loss_mask_5: 0.157  loss_dice_5: 1.291  loss_ce_6: 0.5316  loss_mask_6: 0.1599  loss_dice_6: 1.31  loss_ce_7: 0.5086  loss_mask_7: 0.1586  loss_dice_7: 1.265  loss_ce_8: 0.4988  loss_mask_8: 0.1596  loss_dice_8: 1.301    time: 1.1655  last_time: 1.1580  data_time: 0.0519  last_data_time: 0.0641   lr: 0.0001  max_mem: 32643M
[09/10 14:19:54] d2.utils.events INFO:  eta: 0:21:15  iter: 899  total_loss: 19.06  loss_ce: 0.4579  loss_mask: 0.1772  loss_dice: 1.188  loss_ce_0: 0.5392  loss_mask_0: 0.2138  loss_dice_0: 1.382  loss_ce_1: 0.6182  loss_mask_1: 0.1935  loss_dice_1: 1.333  loss_ce_2: 0.5236  loss_mask_2: 0.1827  loss_dice_2: 1.275  loss_ce_3: 0.5031  loss_mask_3: 0.1786  loss_dice_3: 1.2  loss_ce_4: 0.446  loss_mask_4: 0.1807  loss_dice_4: 1.222  loss_ce_5: 0.4831  loss_mask_5: 0.1781  loss_dice_5: 1.19  loss_ce_6: 0.4449  loss_mask_6: 0.1788  loss_dice_6: 1.177  loss_ce_7: 0.4584  loss_mask_7: 0.1809  loss_dice_7: 1.164  loss_ce_8: 0.4357  loss_mask_8: 0.1802  loss_dice_8: 1.213    time: 1.1652  last_time: 1.1425  data_time: 0.0522  last_data_time: 0.0507   lr: 0.0001  max_mem: 32643M
[09/10 14:20:17] d2.utils.events INFO:  eta: 0:20:52  iter: 919  total_loss: 20.44  loss_ce: 0.5008  loss_mask: 0.1593  loss_dice: 1.273  loss_ce_0: 0.5919  loss_mask_0: 0.1896  loss_dice_0: 1.463  loss_ce_1: 0.6451  loss_mask_1: 0.1746  loss_dice_1: 1.435  loss_ce_2: 0.6333  loss_mask_2: 0.171  loss_dice_2: 1.353  loss_ce_3: 0.5942  loss_mask_3: 0.1623  loss_dice_3: 1.286  loss_ce_4: 0.524  loss_mask_4: 0.1625  loss_dice_4: 1.292  loss_ce_5: 0.5298  loss_mask_5: 0.1596  loss_dice_5: 1.285  loss_ce_6: 0.5203  loss_mask_6: 0.1623  loss_dice_6: 1.274  loss_ce_7: 0.506  loss_mask_7: 0.1609  loss_dice_7: 1.29  loss_ce_8: 0.51  loss_mask_8: 0.1589  loss_dice_8: 1.271    time: 1.1654  last_time: 1.1110  data_time: 0.0501  last_data_time: 0.0639   lr: 0.0001  max_mem: 32643M
[09/10 14:20:41] d2.utils.events INFO:  eta: 0:20:29  iter: 939  total_loss: 19.79  loss_ce: 0.4685  loss_mask: 0.1696  loss_dice: 1.208  loss_ce_0: 0.589  loss_mask_0: 0.1986  loss_dice_0: 1.423  loss_ce_1: 0.6401  loss_mask_1: 0.1844  loss_dice_1: 1.353  loss_ce_2: 0.6118  loss_mask_2: 0.1788  loss_dice_2: 1.274  loss_ce_3: 0.5755  loss_mask_3: 0.1731  loss_dice_3: 1.257  loss_ce_4: 0.5383  loss_mask_4: 0.1735  loss_dice_4: 1.216  loss_ce_5: 0.5196  loss_mask_5: 0.1705  loss_dice_5: 1.214  loss_ce_6: 0.4996  loss_mask_6: 0.1715  loss_dice_6: 1.181  loss_ce_7: 0.4447  loss_mask_7: 0.1706  loss_dice_7: 1.214  loss_ce_8: 0.475  loss_mask_8: 0.1712  loss_dice_8: 1.221    time: 1.1651  last_time: 1.2658  data_time: 0.0580  last_data_time: 0.0680   lr: 0.0001  max_mem: 32643M
[09/10 14:21:04] d2.utils.events INFO:  eta: 0:20:06  iter: 959  total_loss: 20.19  loss_ce: 0.507  loss_mask: 0.163  loss_dice: 1.25  loss_ce_0: 0.613  loss_mask_0: 0.1884  loss_dice_0: 1.462  loss_ce_1: 0.7181  loss_mask_1: 0.1776  loss_dice_1: 1.349  loss_ce_2: 0.6272  loss_mask_2: 0.1658  loss_dice_2: 1.337  loss_ce_3: 0.576  loss_mask_3: 0.1606  loss_dice_3: 1.279  loss_ce_4: 0.5772  loss_mask_4: 0.1622  loss_dice_4: 1.244  loss_ce_5: 0.565  loss_mask_5: 0.1608  loss_dice_5: 1.24  loss_ce_6: 0.5406  loss_mask_6: 0.1642  loss_dice_6: 1.266  loss_ce_7: 0.5394  loss_mask_7: 0.164  loss_dice_7: 1.248  loss_ce_8: 0.5391  loss_mask_8: 0.1636  loss_dice_8: 1.23    time: 1.1655  last_time: 1.2207  data_time: 0.0608  last_data_time: 0.0457   lr: 0.0001  max_mem: 32643M
[09/10 14:21:28] d2.utils.events INFO:  eta: 0:19:42  iter: 979  total_loss: 20.66  loss_ce: 0.5464  loss_mask: 0.1717  loss_dice: 1.264  loss_ce_0: 0.6082  loss_mask_0: 0.1945  loss_dice_0: 1.528  loss_ce_1: 0.6844  loss_mask_1: 0.1827  loss_dice_1: 1.457  loss_ce_2: 0.6028  loss_mask_2: 0.1767  loss_dice_2: 1.377  loss_ce_3: 0.5549  loss_mask_3: 0.1709  loss_dice_3: 1.304  loss_ce_4: 0.5395  loss_mask_4: 0.1717  loss_dice_4: 1.305  loss_ce_5: 0.5111  loss_mask_5: 0.1708  loss_dice_5: 1.27  loss_ce_6: 0.514  loss_mask_6: 0.1707  loss_dice_6: 1.257  loss_ce_7: 0.5181  loss_mask_7: 0.1695  loss_dice_7: 1.25  loss_ce_8: 0.5121  loss_mask_8: 0.1714  loss_dice_8: 1.233    time: 1.1654  last_time: 1.1312  data_time: 0.0581  last_data_time: 0.0799   lr: 0.0001  max_mem: 32643M
[09/10 14:21:52] d2.utils.events INFO:  eta: 0:19:20  iter: 999  total_loss: 20.28  loss_ce: 0.4844  loss_mask: 0.1794  loss_dice: 1.287  loss_ce_0: 0.5798  loss_mask_0: 0.2037  loss_dice_0: 1.494  loss_ce_1: 0.64  loss_mask_1: 0.1836  loss_dice_1: 1.409  loss_ce_2: 0.581  loss_mask_2: 0.1739  loss_dice_2: 1.383  loss_ce_3: 0.5237  loss_mask_3: 0.1773  loss_dice_3: 1.282  loss_ce_4: 0.4928  loss_mask_4: 0.1813  loss_dice_4: 1.326  loss_ce_5: 0.4814  loss_mask_5: 0.1814  loss_dice_5: 1.298  loss_ce_6: 0.4835  loss_mask_6: 0.1811  loss_dice_6: 1.316  loss_ce_7: 0.4912  loss_mask_7: 0.1818  loss_dice_7: 1.296  loss_ce_8: 0.4867  loss_mask_8: 0.1816  loss_dice_8: 1.285    time: 1.1659  last_time: 1.1565  data_time: 0.0555  last_data_time: 0.0468   lr: 0.0001  max_mem: 32643M
[09/10 14:22:15] d2.utils.events INFO:  eta: 0:18:58  iter: 1019  total_loss: 19.96  loss_ce: 0.5095  loss_mask: 0.1608  loss_dice: 1.216  loss_ce_0: 0.604  loss_mask_0: 0.1984  loss_dice_0: 1.43  loss_ce_1: 0.68  loss_mask_1: 0.1757  loss_dice_1: 1.367  loss_ce_2: 0.5997  loss_mask_2: 0.169  loss_dice_2: 1.307  loss_ce_3: 0.5489  loss_mask_3: 0.1684  loss_dice_3: 1.235  loss_ce_4: 0.5281  loss_mask_4: 0.1659  loss_dice_4: 1.241  loss_ce_5: 0.5199  loss_mask_5: 0.1654  loss_dice_5: 1.273  loss_ce_6: 0.5048  loss_mask_6: 0.1639  loss_dice_6: 1.216  loss_ce_7: 0.5064  loss_mask_7: 0.1662  loss_dice_7: 1.231  loss_ce_8: 0.4732  loss_mask_8: 0.1643  loss_dice_8: 1.251    time: 1.1663  last_time: 1.1621  data_time: 0.0515  last_data_time: 0.0447   lr: 0.0001  max_mem: 32643M
[09/10 14:22:39] d2.utils.events INFO:  eta: 0:18:34  iter: 1039  total_loss: 19.69  loss_ce: 0.4922  loss_mask: 0.1671  loss_dice: 1.228  loss_ce_0: 0.5856  loss_mask_0: 0.1906  loss_dice_0: 1.472  loss_ce_1: 0.6206  loss_mask_1: 0.174  loss_dice_1: 1.415  loss_ce_2: 0.5771  loss_mask_2: 0.1659  loss_dice_2: 1.337  loss_ce_3: 0.5244  loss_mask_3: 0.165  loss_dice_3: 1.262  loss_ce_4: 0.5146  loss_mask_4: 0.1681  loss_dice_4: 1.27  loss_ce_5: 0.5058  loss_mask_5: 0.1652  loss_dice_5: 1.234  loss_ce_6: 0.507  loss_mask_6: 0.1668  loss_dice_6: 1.222  loss_ce_7: 0.4864  loss_mask_7: 0.1662  loss_dice_7: 1.233  loss_ce_8: 0.5085  loss_mask_8: 0.1668  loss_dice_8: 1.24    time: 1.1665  last_time: 1.1539  data_time: 0.0552  last_data_time: 0.0509   lr: 0.0001  max_mem: 32643M
[09/10 14:23:02] d2.utils.events INFO:  eta: 0:18:11  iter: 1059  total_loss: 18.83  loss_ce: 0.461  loss_mask: 0.1656  loss_dice: 1.162  loss_ce_0: 0.5504  loss_mask_0: 0.1885  loss_dice_0: 1.356  loss_ce_1: 0.625  loss_mask_1: 0.1766  loss_dice_1: 1.296  loss_ce_2: 0.5337  loss_mask_2: 0.1646  loss_dice_2: 1.222  loss_ce_3: 0.5218  loss_mask_3: 0.1667  loss_dice_3: 1.16  loss_ce_4: 0.4938  loss_mask_4: 0.1677  loss_dice_4: 1.187  loss_ce_5: 0.4876  loss_mask_5: 0.1661  loss_dice_5: 1.23  loss_ce_6: 0.467  loss_mask_6: 0.1682  loss_dice_6: 1.172  loss_ce_7: 0.448  loss_mask_7: 0.1653  loss_dice_7: 1.174  loss_ce_8: 0.4809  loss_mask_8: 0.1666  loss_dice_8: 1.142    time: 1.1665  last_time: 1.3276  data_time: 0.0540  last_data_time: 0.0608   lr: 0.0001  max_mem: 32643M
[09/10 14:23:25] d2.utils.events INFO:  eta: 0:17:48  iter: 1079  total_loss: 20.92  loss_ce: 0.5196  loss_mask: 0.1744  loss_dice: 1.248  loss_ce_0: 0.6408  loss_mask_0: 0.2012  loss_dice_0: 1.439  loss_ce_1: 0.6801  loss_mask_1: 0.1886  loss_dice_1: 1.397  loss_ce_2: 0.5909  loss_mask_2: 0.1843  loss_dice_2: 1.343  loss_ce_3: 0.5795  loss_mask_3: 0.1724  loss_dice_3: 1.297  loss_ce_4: 0.5484  loss_mask_4: 0.1717  loss_dice_4: 1.289  loss_ce_5: 0.5405  loss_mask_5: 0.1717  loss_dice_5: 1.282  loss_ce_6: 0.5247  loss_mask_6: 0.1702  loss_dice_6: 1.26  loss_ce_7: 0.5076  loss_mask_7: 0.1713  loss_dice_7: 1.307  loss_ce_8: 0.5129  loss_mask_8: 0.1724  loss_dice_8: 1.261    time: 1.1662  last_time: 1.2005  data_time: 0.0576  last_data_time: 0.0649   lr: 0.0001  max_mem: 32643M
[09/10 14:23:49] d2.utils.events INFO:  eta: 0:17:25  iter: 1099  total_loss: 19.14  loss_ce: 0.4694  loss_mask: 0.1658  loss_dice: 1.169  loss_ce_0: 0.5734  loss_mask_0: 0.1957  loss_dice_0: 1.374  loss_ce_1: 0.6347  loss_mask_1: 0.1863  loss_dice_1: 1.303  loss_ce_2: 0.591  loss_mask_2: 0.1724  loss_dice_2: 1.243  loss_ce_3: 0.5186  loss_mask_3: 0.1729  loss_dice_3: 1.211  loss_ce_4: 0.5173  loss_mask_4: 0.1714  loss_dice_4: 1.172  loss_ce_5: 0.5022  loss_mask_5: 0.164  loss_dice_5: 1.233  loss_ce_6: 0.5306  loss_mask_6: 0.1666  loss_dice_6: 1.165  loss_ce_7: 0.4588  loss_mask_7: 0.1646  loss_dice_7: 1.181  loss_ce_8: 0.492  loss_mask_8: 0.1639  loss_dice_8: 1.158    time: 1.1660  last_time: 1.1539  data_time: 0.0600  last_data_time: 0.0646   lr: 0.0001  max_mem: 32643M
[09/10 14:24:12] d2.utils.events INFO:  eta: 0:17:02  iter: 1119  total_loss: 19.25  loss_ce: 0.4444  loss_mask: 0.1659  loss_dice: 1.174  loss_ce_0: 0.5513  loss_mask_0: 0.2003  loss_dice_0: 1.36  loss_ce_1: 0.6401  loss_mask_1: 0.1791  loss_dice_1: 1.297  loss_ce_2: 0.55  loss_mask_2: 0.1768  loss_dice_2: 1.258  loss_ce_3: 0.5034  loss_mask_3: 0.1734  loss_dice_3: 1.198  loss_ce_4: 0.4529  loss_mask_4: 0.1729  loss_dice_4: 1.235  loss_ce_5: 0.4643  loss_mask_5: 0.1673  loss_dice_5: 1.188  loss_ce_6: 0.4839  loss_mask_6: 0.1633  loss_dice_6: 1.186  loss_ce_7: 0.4424  loss_mask_7: 0.168  loss_dice_7: 1.2  loss_ce_8: 0.477  loss_mask_8: 0.1667  loss_dice_8: 1.197    time: 1.1659  last_time: 1.1555  data_time: 0.0555  last_data_time: 0.0586   lr: 0.0001  max_mem: 32643M
[09/10 14:24:35] d2.utils.events INFO:  eta: 0:16:38  iter: 1139  total_loss: 18.96  loss_ce: 0.4627  loss_mask: 0.1548  loss_dice: 1.175  loss_ce_0: 0.5132  loss_mask_0: 0.1847  loss_dice_0: 1.395  loss_ce_1: 0.6016  loss_mask_1: 0.1713  loss_dice_1: 1.323  loss_ce_2: 0.5586  loss_mask_2: 0.1598  loss_dice_2: 1.244  loss_ce_3: 0.4826  loss_mask_3: 0.1578  loss_dice_3: 1.239  loss_ce_4: 0.4878  loss_mask_4: 0.1569  loss_dice_4: 1.189  loss_ce_5: 0.4521  loss_mask_5: 0.156  loss_dice_5: 1.224  loss_ce_6: 0.4586  loss_mask_6: 0.1543  loss_dice_6: 1.176  loss_ce_7: 0.4219  loss_mask_7: 0.1581  loss_dice_7: 1.206  loss_ce_8: 0.4571  loss_mask_8: 0.1548  loss_dice_8: 1.209    time: 1.1661  last_time: 1.2013  data_time: 0.0527  last_data_time: 0.0487   lr: 0.0001  max_mem: 32643M
[09/10 14:24:59] d2.utils.events INFO:  eta: 0:16:15  iter: 1159  total_loss: 19.3  loss_ce: 0.4715  loss_mask: 0.1549  loss_dice: 1.199  loss_ce_0: 0.5339  loss_mask_0: 0.1804  loss_dice_0: 1.396  loss_ce_1: 0.614  loss_mask_1: 0.1619  loss_dice_1: 1.342  loss_ce_2: 0.5905  loss_mask_2: 0.1591  loss_dice_2: 1.251  loss_ce_3: 0.4929  loss_mask_3: 0.161  loss_dice_3: 1.207  loss_ce_4: 0.4925  loss_mask_4: 0.16  loss_dice_4: 1.223  loss_ce_5: 0.4598  loss_mask_5: 0.1558  loss_dice_5: 1.18  loss_ce_6: 0.4636  loss_mask_6: 0.1574  loss_dice_6: 1.197  loss_ce_7: 0.4504  loss_mask_7: 0.1557  loss_dice_7: 1.175  loss_ce_8: 0.4576  loss_mask_8: 0.1557  loss_dice_8: 1.188    time: 1.1663  last_time: 1.1233  data_time: 0.0571  last_data_time: 0.0545   lr: 0.0001  max_mem: 32643M
[09/10 14:25:23] d2.utils.events INFO:  eta: 0:15:52  iter: 1179  total_loss: 19.16  loss_ce: 0.4404  loss_mask: 0.159  loss_dice: 1.227  loss_ce_0: 0.541  loss_mask_0: 0.1856  loss_dice_0: 1.405  loss_ce_1: 0.6479  loss_mask_1: 0.1721  loss_dice_1: 1.307  loss_ce_2: 0.5777  loss_mask_2: 0.1643  loss_dice_2: 1.275  loss_ce_3: 0.4855  loss_mask_3: 0.1606  loss_dice_3: 1.27  loss_ce_4: 0.4504  loss_mask_4: 0.1642  loss_dice_4: 1.232  loss_ce_5: 0.4619  loss_mask_5: 0.1611  loss_dice_5: 1.238  loss_ce_6: 0.4613  loss_mask_6: 0.1607  loss_dice_6: 1.214  loss_ce_7: 0.4484  loss_mask_7: 0.1593  loss_dice_7: 1.199  loss_ce_8: 0.4371  loss_mask_8: 0.1588  loss_dice_8: 1.207    time: 1.1666  last_time: 1.1586  data_time: 0.0555  last_data_time: 0.0573   lr: 0.0001  max_mem: 32643M
[09/10 14:25:47] d2.utils.events INFO:  eta: 0:15:30  iter: 1199  total_loss: 19.32  loss_ce: 0.4481  loss_mask: 0.1766  loss_dice: 1.22  loss_ce_0: 0.5563  loss_mask_0: 0.2046  loss_dice_0: 1.364  loss_ce_1: 0.6012  loss_mask_1: 0.1916  loss_dice_1: 1.305  loss_ce_2: 0.5625  loss_mask_2: 0.1856  loss_dice_2: 1.273  loss_ce_3: 0.5239  loss_mask_3: 0.1825  loss_dice_3: 1.226  loss_ce_4: 0.4976  loss_mask_4: 0.1805  loss_dice_4: 1.227  loss_ce_5: 0.4657  loss_mask_5: 0.1752  loss_dice_5: 1.213  loss_ce_6: 0.4508  loss_mask_6: 0.1775  loss_dice_6: 1.237  loss_ce_7: 0.449  loss_mask_7: 0.1766  loss_dice_7: 1.177  loss_ce_8: 0.4531  loss_mask_8: 0.1734  loss_dice_8: 1.18    time: 1.1672  last_time: 1.1876  data_time: 0.0484  last_data_time: 0.0456   lr: 0.0001  max_mem: 32643M
[09/10 14:26:11] d2.utils.events INFO:  eta: 0:15:08  iter: 1219  total_loss: 19.74  loss_ce: 0.471  loss_mask: 0.1675  loss_dice: 1.192  loss_ce_0: 0.5508  loss_mask_0: 0.2033  loss_dice_0: 1.368  loss_ce_1: 0.6199  loss_mask_1: 0.1822  loss_dice_1: 1.345  loss_ce_2: 0.5335  loss_mask_2: 0.1733  loss_dice_2: 1.274  loss_ce_3: 0.5071  loss_mask_3: 0.1719  loss_dice_3: 1.238  loss_ce_4: 0.495  loss_mask_4: 0.169  loss_dice_4: 1.203  loss_ce_5: 0.4907  loss_mask_5: 0.1685  loss_dice_5: 1.201  loss_ce_6: 0.4902  loss_mask_6: 0.1676  loss_dice_6: 1.187  loss_ce_7: 0.4832  loss_mask_7: 0.1683  loss_dice_7: 1.206  loss_ce_8: 0.4592  loss_mask_8: 0.1671  loss_dice_8: 1.204    time: 1.1676  last_time: 1.2205  data_time: 0.0511  last_data_time: 0.0511   lr: 0.0001  max_mem: 32643M
[09/10 14:26:35] d2.utils.events INFO:  eta: 0:14:45  iter: 1239  total_loss: 19.01  loss_ce: 0.4675  loss_mask: 0.1602  loss_dice: 1.13  loss_ce_0: 0.5656  loss_mask_0: 0.1923  loss_dice_0: 1.35  loss_ce_1: 0.6464  loss_mask_1: 0.1697  loss_dice_1: 1.276  loss_ce_2: 0.5823  loss_mask_2: 0.1623  loss_dice_2: 1.239  loss_ce_3: 0.5294  loss_mask_3: 0.16  loss_dice_3: 1.187  loss_ce_4: 0.4984  loss_mask_4: 0.1595  loss_dice_4: 1.185  loss_ce_5: 0.4903  loss_mask_5: 0.1592  loss_dice_5: 1.17  loss_ce_6: 0.5061  loss_mask_6: 0.1566  loss_dice_6: 1.141  loss_ce_7: 0.4816  loss_mask_7: 0.1594  loss_dice_7: 1.136  loss_ce_8: 0.5203  loss_mask_8: 0.1593  loss_dice_8: 1.135    time: 1.1681  last_time: 1.2106  data_time: 0.0632  last_data_time: 0.0533   lr: 0.0001  max_mem: 32643M
[09/10 14:26:58] d2.utils.events INFO:  eta: 0:14:22  iter: 1259  total_loss: 19.62  loss_ce: 0.4813  loss_mask: 0.1517  loss_dice: 1.238  loss_ce_0: 0.5296  loss_mask_0: 0.1673  loss_dice_0: 1.423  loss_ce_1: 0.6403  loss_mask_1: 0.1615  loss_dice_1: 1.362  loss_ce_2: 0.6089  loss_mask_2: 0.1533  loss_dice_2: 1.332  loss_ce_3: 0.5444  loss_mask_3: 0.1562  loss_dice_3: 1.268  loss_ce_4: 0.4975  loss_mask_4: 0.1534  loss_dice_4: 1.26  loss_ce_5: 0.4976  loss_mask_5: 0.1508  loss_dice_5: 1.275  loss_ce_6: 0.4891  loss_mask_6: 0.1531  loss_dice_6: 1.27  loss_ce_7: 0.457  loss_mask_7: 0.1506  loss_dice_7: 1.23  loss_ce_8: 0.489  loss_mask_8: 0.1477  loss_dice_8: 1.249    time: 1.1680  last_time: 1.1113  data_time: 0.0540  last_data_time: 0.0480   lr: 0.0001  max_mem: 32643M
[09/10 14:27:21] d2.utils.events INFO:  eta: 0:13:59  iter: 1279  total_loss: 19.91  loss_ce: 0.5022  loss_mask: 0.1742  loss_dice: 1.247  loss_ce_0: 0.5852  loss_mask_0: 0.2002  loss_dice_0: 1.385  loss_ce_1: 0.6618  loss_mask_1: 0.1896  loss_dice_1: 1.358  loss_ce_2: 0.6038  loss_mask_2: 0.1793  loss_dice_2: 1.318  loss_ce_3: 0.5385  loss_mask_3: 0.1814  loss_dice_3: 1.272  loss_ce_4: 0.5097  loss_mask_4: 0.1773  loss_dice_4: 1.229  loss_ce_5: 0.502  loss_mask_5: 0.1742  loss_dice_5: 1.245  loss_ce_6: 0.4945  loss_mask_6: 0.172  loss_dice_6: 1.246  loss_ce_7: 0.4768  loss_mask_7: 0.1704  loss_dice_7: 1.26  loss_ce_8: 0.5275  loss_mask_8: 0.1706  loss_dice_8: 1.234    time: 1.1678  last_time: 1.1807  data_time: 0.0568  last_data_time: 0.0452   lr: 0.0001  max_mem: 32643M
[09/10 14:27:45] d2.utils.events INFO:  eta: 0:13:36  iter: 1299  total_loss: 19.59  loss_ce: 0.4847  loss_mask: 0.1593  loss_dice: 1.194  loss_ce_0: 0.5693  loss_mask_0: 0.1847  loss_dice_0: 1.374  loss_ce_1: 0.666  loss_mask_1: 0.176  loss_dice_1: 1.319  loss_ce_2: 0.5703  loss_mask_2: 0.1632  loss_dice_2: 1.266  loss_ce_3: 0.5288  loss_mask_3: 0.1639  loss_dice_3: 1.22  loss_ce_4: 0.5212  loss_mask_4: 0.1621  loss_dice_4: 1.228  loss_ce_5: 0.537  loss_mask_5: 0.1621  loss_dice_5: 1.175  loss_ce_6: 0.5044  loss_mask_6: 0.1596  loss_dice_6: 1.191  loss_ce_7: 0.5016  loss_mask_7: 0.1578  loss_dice_7: 1.193  loss_ce_8: 0.5087  loss_mask_8: 0.1589  loss_dice_8: 1.193    time: 1.1679  last_time: 1.2174  data_time: 0.0551  last_data_time: 0.0515   lr: 0.0001  max_mem: 32643M
[09/10 14:28:08] d2.utils.events INFO:  eta: 0:13:13  iter: 1319  total_loss: 19.84  loss_ce: 0.5032  loss_mask: 0.1733  loss_dice: 1.195  loss_ce_0: 0.5503  loss_mask_0: 0.1949  loss_dice_0: 1.442  loss_ce_1: 0.5943  loss_mask_1: 0.1814  loss_dice_1: 1.35  loss_ce_2: 0.5887  loss_mask_2: 0.1748  loss_dice_2: 1.311  loss_ce_3: 0.4996  loss_mask_3: 0.1744  loss_dice_3: 1.263  loss_ce_4: 0.4781  loss_mask_4: 0.1723  loss_dice_4: 1.243  loss_ce_5: 0.4873  loss_mask_5: 0.1743  loss_dice_5: 1.253  loss_ce_6: 0.5095  loss_mask_6: 0.1767  loss_dice_6: 1.21  loss_ce_7: 0.4899  loss_mask_7: 0.1709  loss_dice_7: 1.218  loss_ce_8: 0.4934  loss_mask_8: 0.1759  loss_dice_8: 1.19    time: 1.1678  last_time: 1.1757  data_time: 0.0492  last_data_time: 0.0622   lr: 0.0001  max_mem: 32643M
[09/10 14:28:31] d2.utils.events INFO:  eta: 0:12:49  iter: 1339  total_loss: 19.6  loss_ce: 0.4864  loss_mask: 0.1734  loss_dice: 1.195  loss_ce_0: 0.5374  loss_mask_0: 0.196  loss_dice_0: 1.378  loss_ce_1: 0.6297  loss_mask_1: 0.1856  loss_dice_1: 1.329  loss_ce_2: 0.5489  loss_mask_2: 0.1792  loss_dice_2: 1.28  loss_ce_3: 0.526  loss_mask_3: 0.1733  loss_dice_3: 1.225  loss_ce_4: 0.5052  loss_mask_4: 0.1751  loss_dice_4: 1.229  loss_ce_5: 0.5107  loss_mask_5: 0.1742  loss_dice_5: 1.216  loss_ce_6: 0.4814  loss_mask_6: 0.1725  loss_dice_6: 1.201  loss_ce_7: 0.4715  loss_mask_7: 0.1728  loss_dice_7: 1.165  loss_ce_8: 0.4598  loss_mask_8: 0.1715  loss_dice_8: 1.191    time: 1.1674  last_time: 1.1207  data_time: 0.0552  last_data_time: 0.0512   lr: 0.0001  max_mem: 32643M
[09/10 14:28:54] d2.utils.events INFO:  eta: 0:12:26  iter: 1359  total_loss: 20.26  loss_ce: 0.4269  loss_mask: 0.1607  loss_dice: 1.265  loss_ce_0: 0.542  loss_mask_0: 0.1986  loss_dice_0: 1.481  loss_ce_1: 0.5884  loss_mask_1: 0.178  loss_dice_1: 1.366  loss_ce_2: 0.5414  loss_mask_2: 0.1668  loss_dice_2: 1.333  loss_ce_3: 0.4729  loss_mask_3: 0.1671  loss_dice_3: 1.275  loss_ce_4: 0.4461  loss_mask_4: 0.1651  loss_dice_4: 1.271  loss_ce_5: 0.4594  loss_mask_5: 0.162  loss_dice_5: 1.266  loss_ce_6: 0.4444  loss_mask_6: 0.1622  loss_dice_6: 1.251  loss_ce_7: 0.4695  loss_mask_7: 0.1628  loss_dice_7: 1.275  loss_ce_8: 0.4678  loss_mask_8: 0.1632  loss_dice_8: 1.248    time: 1.1673  last_time: 1.1383  data_time: 0.0547  last_data_time: 0.0707   lr: 0.0001  max_mem: 32643M
[09/10 14:29:18] d2.utils.events INFO:  eta: 0:12:03  iter: 1379  total_loss: 20.51  loss_ce: 0.5128  loss_mask: 0.1578  loss_dice: 1.288  loss_ce_0: 0.578  loss_mask_0: 0.1853  loss_dice_0: 1.491  loss_ce_1: 0.6408  loss_mask_1: 0.1692  loss_dice_1: 1.453  loss_ce_2: 0.5787  loss_mask_2: 0.1621  loss_dice_2: 1.38  loss_ce_3: 0.5506  loss_mask_3: 0.1625  loss_dice_3: 1.337  loss_ce_4: 0.5144  loss_mask_4: 0.1604  loss_dice_4: 1.328  loss_ce_5: 0.5238  loss_mask_5: 0.1608  loss_dice_5: 1.326  loss_ce_6: 0.4953  loss_mask_6: 0.1596  loss_dice_6: 1.292  loss_ce_7: 0.4901  loss_mask_7: 0.1598  loss_dice_7: 1.291  loss_ce_8: 0.5014  loss_mask_8: 0.1594  loss_dice_8: 1.319    time: 1.1673  last_time: 1.2185  data_time: 0.0537  last_data_time: 0.0741   lr: 0.0001  max_mem: 32643M
[09/10 14:29:41] d2.utils.events INFO:  eta: 0:11:40  iter: 1399  total_loss: 18.83  loss_ce: 0.4698  loss_mask: 0.1709  loss_dice: 1.152  loss_ce_0: 0.5506  loss_mask_0: 0.1965  loss_dice_0: 1.384  loss_ce_1: 0.6506  loss_mask_1: 0.182  loss_dice_1: 1.288  loss_ce_2: 0.5744  loss_mask_2: 0.1761  loss_dice_2: 1.231  loss_ce_3: 0.5167  loss_mask_3: 0.1766  loss_dice_3: 1.189  loss_ce_4: 0.4838  loss_mask_4: 0.1728  loss_dice_4: 1.171  loss_ce_5: 0.4895  loss_mask_5: 0.1716  loss_dice_5: 1.195  loss_ce_6: 0.4765  loss_mask_6: 0.1756  loss_dice_6: 1.155  loss_ce_7: 0.4514  loss_mask_7: 0.1743  loss_dice_7: 1.185  loss_ce_8: 0.4777  loss_mask_8: 0.1722  loss_dice_8: 1.187    time: 1.1674  last_time: 1.2148  data_time: 0.0475  last_data_time: 0.0454   lr: 0.0001  max_mem: 32643M
[09/10 14:30:05] d2.utils.events INFO:  eta: 0:11:17  iter: 1419  total_loss: 19.81  loss_ce: 0.5008  loss_mask: 0.1713  loss_dice: 1.171  loss_ce_0: 0.5699  loss_mask_0: 0.2036  loss_dice_0: 1.45  loss_ce_1: 0.6655  loss_mask_1: 0.182  loss_dice_1: 1.376  loss_ce_2: 0.5914  loss_mask_2: 0.1767  loss_dice_2: 1.327  loss_ce_3: 0.5372  loss_mask_3: 0.1789  loss_dice_3: 1.248  loss_ce_4: 0.5158  loss_mask_4: 0.1747  loss_dice_4: 1.249  loss_ce_5: 0.4927  loss_mask_5: 0.1714  loss_dice_5: 1.267  loss_ce_6: 0.5288  loss_mask_6: 0.1725  loss_dice_6: 1.23  loss_ce_7: 0.4981  loss_mask_7: 0.1715  loss_dice_7: 1.238  loss_ce_8: 0.4861  loss_mask_8: 0.1715  loss_dice_8: 1.239    time: 1.1676  last_time: 1.1615  data_time: 0.0548  last_data_time: 0.0472   lr: 0.0001  max_mem: 32643M
[09/10 14:30:28] d2.utils.events INFO:  eta: 0:10:53  iter: 1439  total_loss: 19.04  loss_ce: 0.454  loss_mask: 0.1594  loss_dice: 1.189  loss_ce_0: 0.5488  loss_mask_0: 0.1777  loss_dice_0: 1.363  loss_ce_1: 0.6137  loss_mask_1: 0.1633  loss_dice_1: 1.285  loss_ce_2: 0.5505  loss_mask_2: 0.1574  loss_dice_2: 1.269  loss_ce_3: 0.5027  loss_mask_3: 0.1594  loss_dice_3: 1.216  loss_ce_4: 0.4873  loss_mask_4: 0.1606  loss_dice_4: 1.234  loss_ce_5: 0.4883  loss_mask_5: 0.1579  loss_dice_5: 1.231  loss_ce_6: 0.4943  loss_mask_6: 0.156  loss_dice_6: 1.194  loss_ce_7: 0.4667  loss_mask_7: 0.158  loss_dice_7: 1.231  loss_ce_8: 0.4677  loss_mask_8: 0.159  loss_dice_8: 1.203    time: 1.1675  last_time: 1.1169  data_time: 0.0578  last_data_time: 0.0447   lr: 0.0001  max_mem: 32643M
[09/10 14:30:51] d2.utils.events INFO:  eta: 0:10:30  iter: 1459  total_loss: 19.4  loss_ce: 0.4714  loss_mask: 0.1748  loss_dice: 1.158  loss_ce_0: 0.567  loss_mask_0: 0.2037  loss_dice_0: 1.38  loss_ce_1: 0.61  loss_mask_1: 0.1946  loss_dice_1: 1.298  loss_ce_2: 0.5273  loss_mask_2: 0.1837  loss_dice_2: 1.246  loss_ce_3: 0.4923  loss_mask_3: 0.1866  loss_dice_3: 1.211  loss_ce_4: 0.4689  loss_mask_4: 0.1857  loss_dice_4: 1.263  loss_ce_5: 0.467  loss_mask_5: 0.1857  loss_dice_5: 1.202  loss_ce_6: 0.4882  loss_mask_6: 0.1816  loss_dice_6: 1.16  loss_ce_7: 0.4539  loss_mask_7: 0.178  loss_dice_7: 1.19  loss_ce_8: 0.469  loss_mask_8: 0.1771  loss_dice_8: 1.184    time: 1.1671  last_time: 1.1380  data_time: 0.0536  last_data_time: 0.0606   lr: 0.0001  max_mem: 32643M
[09/10 14:31:14] d2.utils.events INFO:  eta: 0:10:06  iter: 1479  total_loss: 19.16  loss_ce: 0.4986  loss_mask: 0.1599  loss_dice: 1.188  loss_ce_0: 0.5508  loss_mask_0: 0.1854  loss_dice_0: 1.341  loss_ce_1: 0.6093  loss_mask_1: 0.1705  loss_dice_1: 1.317  loss_ce_2: 0.5578  loss_mask_2: 0.1638  loss_dice_2: 1.277  loss_ce_3: 0.5311  loss_mask_3: 0.1628  loss_dice_3: 1.215  loss_ce_4: 0.5209  loss_mask_4: 0.1632  loss_dice_4: 1.215  loss_ce_5: 0.4632  loss_mask_5: 0.162  loss_dice_5: 1.209  loss_ce_6: 0.4554  loss_mask_6: 0.1608  loss_dice_6: 1.182  loss_ce_7: 0.4429  loss_mask_7: 0.16  loss_dice_7: 1.169  loss_ce_8: 0.4317  loss_mask_8: 0.1581  loss_dice_8: 1.161    time: 1.1669  last_time: 1.1931  data_time: 0.0576  last_data_time: 0.0523   lr: 0.0001  max_mem: 32643M
[09/10 14:31:38] d2.utils.events INFO:  eta: 0:09:43  iter: 1499  total_loss: 19.06  loss_ce: 0.4217  loss_mask: 0.1548  loss_dice: 1.195  loss_ce_0: 0.5501  loss_mask_0: 0.1777  loss_dice_0: 1.419  loss_ce_1: 0.5571  loss_mask_1: 0.1674  loss_dice_1: 1.383  loss_ce_2: 0.5067  loss_mask_2: 0.1581  loss_dice_2: 1.298  loss_ce_3: 0.4582  loss_mask_3: 0.1547  loss_dice_3: 1.236  loss_ce_4: 0.4698  loss_mask_4: 0.157  loss_dice_4: 1.227  loss_ce_5: 0.4525  loss_mask_5: 0.155  loss_dice_5: 1.218  loss_ce_6: 0.4462  loss_mask_6: 0.1544  loss_dice_6: 1.193  loss_ce_7: 0.4166  loss_mask_7: 0.1521  loss_dice_7: 1.217  loss_ce_8: 0.4208  loss_mask_8: 0.1538  loss_dice_8: 1.199    time: 1.1666  last_time: 1.1670  data_time: 0.0559  last_data_time: 0.0665   lr: 0.0001  max_mem: 32643M
[09/10 14:32:01] d2.utils.events INFO:  eta: 0:09:20  iter: 1519  total_loss: 19.27  loss_ce: 0.4541  loss_mask: 0.1729  loss_dice: 1.154  loss_ce_0: 0.5781  loss_mask_0: 0.2041  loss_dice_0: 1.406  loss_ce_1: 0.5952  loss_mask_1: 0.1909  loss_dice_1: 1.332  loss_ce_2: 0.5465  loss_mask_2: 0.1812  loss_dice_2: 1.281  loss_ce_3: 0.5096  loss_mask_3: 0.1791  loss_dice_3: 1.202  loss_ce_4: 0.4517  loss_mask_4: 0.179  loss_dice_4: 1.253  loss_ce_5: 0.4803  loss_mask_5: 0.173  loss_dice_5: 1.22  loss_ce_6: 0.4781  loss_mask_6: 0.1706  loss_dice_6: 1.256  loss_ce_7: 0.4561  loss_mask_7: 0.1717  loss_dice_7: 1.243  loss_ce_8: 0.4731  loss_mask_8: 0.1742  loss_dice_8: 1.203    time: 1.1667  last_time: 1.1684  data_time: 0.0582  last_data_time: 0.0530   lr: 0.0001  max_mem: 32643M
[09/10 14:32:25] d2.utils.events INFO:  eta: 0:08:56  iter: 1539  total_loss: 19.27  loss_ce: 0.4421  loss_mask: 0.1728  loss_dice: 1.184  loss_ce_0: 0.5564  loss_mask_0: 0.1925  loss_dice_0: 1.417  loss_ce_1: 0.6214  loss_mask_1: 0.1853  loss_dice_1: 1.375  loss_ce_2: 0.584  loss_mask_2: 0.1768  loss_dice_2: 1.288  loss_ce_3: 0.5089  loss_mask_3: 0.1774  loss_dice_3: 1.249  loss_ce_4: 0.4769  loss_mask_4: 0.1765  loss_dice_4: 1.266  loss_ce_5: 0.4754  loss_mask_5: 0.1756  loss_dice_5: 1.261  loss_ce_6: 0.4503  loss_mask_6: 0.1712  loss_dice_6: 1.237  loss_ce_7: 0.4629  loss_mask_7: 0.1736  loss_dice_7: 1.212  loss_ce_8: 0.4409  loss_mask_8: 0.1708  loss_dice_8: 1.221    time: 1.1669  last_time: 1.1538  data_time: 0.0483  last_data_time: 0.0523   lr: 0.0001  max_mem: 32643M
[09/10 14:32:48] d2.utils.events INFO:  eta: 0:08:33  iter: 1559  total_loss: 19.22  loss_ce: 0.4284  loss_mask: 0.1619  loss_dice: 1.255  loss_ce_0: 0.5022  loss_mask_0: 0.1876  loss_dice_0: 1.409  loss_ce_1: 0.5974  loss_mask_1: 0.172  loss_dice_1: 1.298  loss_ce_2: 0.5438  loss_mask_2: 0.1654  loss_dice_2: 1.28  loss_ce_3: 0.4949  loss_mask_3: 0.1644  loss_dice_3: 1.24  loss_ce_4: 0.477  loss_mask_4: 0.1615  loss_dice_4: 1.262  loss_ce_5: 0.4169  loss_mask_5: 0.1616  loss_dice_5: 1.193  loss_ce_6: 0.4466  loss_mask_6: 0.1653  loss_dice_6: 1.219  loss_ce_7: 0.4273  loss_mask_7: 0.1638  loss_dice_7: 1.256  loss_ce_8: 0.4237  loss_mask_8: 0.1615  loss_dice_8: 1.209    time: 1.1669  last_time: 1.2059  data_time: 0.0630  last_data_time: 0.0619   lr: 0.0001  max_mem: 32643M
[09/10 14:33:11] d2.utils.events INFO:  eta: 0:08:10  iter: 1579  total_loss: 19.11  loss_ce: 0.4689  loss_mask: 0.168  loss_dice: 1.21  loss_ce_0: 0.5653  loss_mask_0: 0.1941  loss_dice_0: 1.348  loss_ce_1: 0.6686  loss_mask_1: 0.1839  loss_dice_1: 1.291  loss_ce_2: 0.5955  loss_mask_2: 0.1746  loss_dice_2: 1.279  loss_ce_3: 0.5506  loss_mask_3: 0.1733  loss_dice_3: 1.192  loss_ce_4: 0.5239  loss_mask_4: 0.1718  loss_dice_4: 1.205  loss_ce_5: 0.4983  loss_mask_5: 0.17  loss_dice_5: 1.227  loss_ce_6: 0.461  loss_mask_6: 0.1716  loss_dice_6: 1.185  loss_ce_7: 0.4592  loss_mask_7: 0.1712  loss_dice_7: 1.164  loss_ce_8: 0.4763  loss_mask_8: 0.1667  loss_dice_8: 1.157    time: 1.1668  last_time: 1.2476  data_time: 0.0522  last_data_time: 0.0492   lr: 0.0001  max_mem: 32643M
[09/10 14:33:35] d2.utils.events INFO:  eta: 0:07:46  iter: 1599  total_loss: 19.91  loss_ce: 0.4735  loss_mask: 0.1706  loss_dice: 1.202  loss_ce_0: 0.558  loss_mask_0: 0.1916  loss_dice_0: 1.459  loss_ce_1: 0.6591  loss_mask_1: 0.1821  loss_dice_1: 1.365  loss_ce_2: 0.5601  loss_mask_2: 0.1723  loss_dice_2: 1.29  loss_ce_3: 0.5674  loss_mask_3: 0.1679  loss_dice_3: 1.259  loss_ce_4: 0.5091  loss_mask_4: 0.1685  loss_dice_4: 1.269  loss_ce_5: 0.5126  loss_mask_5: 0.1676  loss_dice_5: 1.211  loss_ce_6: 0.4727  loss_mask_6: 0.1697  loss_dice_6: 1.253  loss_ce_7: 0.4819  loss_mask_7: 0.1713  loss_dice_7: 1.226  loss_ce_8: 0.4949  loss_mask_8: 0.1675  loss_dice_8: 1.225    time: 1.1669  last_time: 1.1261  data_time: 0.0505  last_data_time: 0.0578   lr: 0.0001  max_mem: 32643M
[09/10 14:33:59] d2.utils.events INFO:  eta: 0:07:23  iter: 1619  total_loss: 19.51  loss_ce: 0.4317  loss_mask: 0.1551  loss_dice: 1.24  loss_ce_0: 0.5584  loss_mask_0: 0.18  loss_dice_0: 1.432  loss_ce_1: 0.665  loss_mask_1: 0.165  loss_dice_1: 1.379  loss_ce_2: 0.5401  loss_mask_2: 0.1569  loss_dice_2: 1.295  loss_ce_3: 0.4935  loss_mask_3: 0.1536  loss_dice_3: 1.296  loss_ce_4: 0.4809  loss_mask_4: 0.1536  loss_dice_4: 1.262  loss_ce_5: 0.4548  loss_mask_5: 0.1516  loss_dice_5: 1.286  loss_ce_6: 0.4259  loss_mask_6: 0.1528  loss_dice_6: 1.282  loss_ce_7: 0.4496  loss_mask_7: 0.1506  loss_dice_7: 1.23  loss_ce_8: 0.4333  loss_mask_8: 0.154  loss_dice_8: 1.255    time: 1.1673  last_time: 1.1929  data_time: 0.0499  last_data_time: 0.0514   lr: 0.0001  max_mem: 32643M
[09/10 14:34:22] d2.utils.events INFO:  eta: 0:07:00  iter: 1639  total_loss: 19  loss_ce: 0.401  loss_mask: 0.164  loss_dice: 1.18  loss_ce_0: 0.5153  loss_mask_0: 0.1943  loss_dice_0: 1.411  loss_ce_1: 0.5794  loss_mask_1: 0.1779  loss_dice_1: 1.3  loss_ce_2: 0.5185  loss_mask_2: 0.1707  loss_dice_2: 1.261  loss_ce_3: 0.4965  loss_mask_3: 0.1716  loss_dice_3: 1.226  loss_ce_4: 0.4727  loss_mask_4: 0.1719  loss_dice_4: 1.212  loss_ce_5: 0.4573  loss_mask_5: 0.1693  loss_dice_5: 1.216  loss_ce_6: 0.4269  loss_mask_6: 0.1669  loss_dice_6: 1.191  loss_ce_7: 0.3879  loss_mask_7: 0.1718  loss_dice_7: 1.151  loss_ce_8: 0.4118  loss_mask_8: 0.1675  loss_dice_8: 1.233    time: 1.1672  last_time: 1.2321  data_time: 0.0475  last_data_time: 0.0487   lr: 0.0001  max_mem: 32643M
[09/10 14:34:46] d2.utils.events INFO:  eta: 0:06:36  iter: 1659  total_loss: 19.23  loss_ce: 0.4408  loss_mask: 0.1616  loss_dice: 1.181  loss_ce_0: 0.5624  loss_mask_0: 0.1824  loss_dice_0: 1.391  loss_ce_1: 0.6134  loss_mask_1: 0.1696  loss_dice_1: 1.291  loss_ce_2: 0.5246  loss_mask_2: 0.1611  loss_dice_2: 1.263  loss_ce_3: 0.4962  loss_mask_3: 0.1626  loss_dice_3: 1.242  loss_ce_4: 0.4965  loss_mask_4: 0.162  loss_dice_4: 1.212  loss_ce_5: 0.4859  loss_mask_5: 0.1611  loss_dice_5: 1.205  loss_ce_6: 0.4554  loss_mask_6: 0.1652  loss_dice_6: 1.214  loss_ce_7: 0.4335  loss_mask_7: 0.16  loss_dice_7: 1.174  loss_ce_8: 0.4493  loss_mask_8: 0.1603  loss_dice_8: 1.175    time: 1.1673  last_time: 1.2406  data_time: 0.0540  last_data_time: 0.0707   lr: 0.0001  max_mem: 32643M
[09/10 14:35:09] d2.utils.events INFO:  eta: 0:06:13  iter: 1679  total_loss: 18.66  loss_ce: 0.4616  loss_mask: 0.1528  loss_dice: 1.144  loss_ce_0: 0.5499  loss_mask_0: 0.1839  loss_dice_0: 1.407  loss_ce_1: 0.6454  loss_mask_1: 0.1669  loss_dice_1: 1.302  loss_ce_2: 0.5627  loss_mask_2: 0.1592  loss_dice_2: 1.243  loss_ce_3: 0.5228  loss_mask_3: 0.1611  loss_dice_3: 1.187  loss_ce_4: 0.4923  loss_mask_4: 0.1578  loss_dice_4: 1.167  loss_ce_5: 0.4674  loss_mask_5: 0.1581  loss_dice_5: 1.164  loss_ce_6: 0.4565  loss_mask_6: 0.1565  loss_dice_6: 1.158  loss_ce_7: 0.4849  loss_mask_7: 0.156  loss_dice_7: 1.149  loss_ce_8: 0.4717  loss_mask_8: 0.1544  loss_dice_8: 1.163    time: 1.1671  last_time: 1.1378  data_time: 0.0532  last_data_time: 0.0600   lr: 0.0001  max_mem: 32643M
[09/10 14:35:32] d2.utils.events INFO:  eta: 0:05:49  iter: 1699  total_loss: 19.05  loss_ce: 0.4471  loss_mask: 0.1657  loss_dice: 1.177  loss_ce_0: 0.5236  loss_mask_0: 0.1925  loss_dice_0: 1.377  loss_ce_1: 0.5883  loss_mask_1: 0.1876  loss_dice_1: 1.302  loss_ce_2: 0.5675  loss_mask_2: 0.1749  loss_dice_2: 1.26  loss_ce_3: 0.5282  loss_mask_3: 0.1754  loss_dice_3: 1.206  loss_ce_4: 0.4688  loss_mask_4: 0.1764  loss_dice_4: 1.197  loss_ce_5: 0.4927  loss_mask_5: 0.1726  loss_dice_5: 1.152  loss_ce_6: 0.4502  loss_mask_6: 0.1696  loss_dice_6: 1.178  loss_ce_7: 0.4736  loss_mask_7: 0.1653  loss_dice_7: 1.167  loss_ce_8: 0.4533  loss_mask_8: 0.1658  loss_dice_8: 1.193    time: 1.1671  last_time: 1.1886  data_time: 0.0476  last_data_time: 0.0468   lr: 0.0001  max_mem: 32643M
[09/10 14:35:56] d2.utils.events INFO:  eta: 0:05:26  iter: 1719  total_loss: 19.31  loss_ce: 0.421  loss_mask: 0.1609  loss_dice: 1.199  loss_ce_0: 0.5846  loss_mask_0: 0.1882  loss_dice_0: 1.4  loss_ce_1: 0.616  loss_mask_1: 0.1803  loss_dice_1: 1.37  loss_ce_2: 0.5674  loss_mask_2: 0.1639  loss_dice_2: 1.28  loss_ce_3: 0.5399  loss_mask_3: 0.1636  loss_dice_3: 1.219  loss_ce_4: 0.4741  loss_mask_4: 0.1631  loss_dice_4: 1.191  loss_ce_5: 0.4929  loss_mask_5: 0.1629  loss_dice_5: 1.22  loss_ce_6: 0.4421  loss_mask_6: 0.1618  loss_dice_6: 1.23  loss_ce_7: 0.4365  loss_mask_7: 0.1615  loss_dice_7: 1.176  loss_ce_8: 0.4391  loss_mask_8: 0.1597  loss_dice_8: 1.214    time: 1.1671  last_time: 1.1420  data_time: 0.0598  last_data_time: 0.0495   lr: 0.0001  max_mem: 32643M
[09/10 14:36:19] d2.utils.events INFO:  eta: 0:05:02  iter: 1739  total_loss: 18.98  loss_ce: 0.4856  loss_mask: 0.1511  loss_dice: 1.188  loss_ce_0: 0.6003  loss_mask_0: 0.1721  loss_dice_0: 1.328  loss_ce_1: 0.6524  loss_mask_1: 0.1646  loss_dice_1: 1.295  loss_ce_2: 0.5595  loss_mask_2: 0.1544  loss_dice_2: 1.265  loss_ce_3: 0.5303  loss_mask_3: 0.1544  loss_dice_3: 1.206  loss_ce_4: 0.4833  loss_mask_4: 0.1545  loss_dice_4: 1.228  loss_ce_5: 0.496  loss_mask_5: 0.1539  loss_dice_5: 1.182  loss_ce_6: 0.4719  loss_mask_6: 0.1546  loss_dice_6: 1.188  loss_ce_7: 0.4471  loss_mask_7: 0.1546  loss_dice_7: 1.211  loss_ce_8: 0.4806  loss_mask_8: 0.1523  loss_dice_8: 1.197    time: 1.1671  last_time: 1.1652  data_time: 0.0594  last_data_time: 0.0581   lr: 0.0001  max_mem: 32643M
[09/10 14:36:42] d2.utils.events INFO:  eta: 0:04:39  iter: 1759  total_loss: 18.65  loss_ce: 0.4657  loss_mask: 0.1609  loss_dice: 1.14  loss_ce_0: 0.5773  loss_mask_0: 0.1867  loss_dice_0: 1.331  loss_ce_1: 0.6024  loss_mask_1: 0.1759  loss_dice_1: 1.301  loss_ce_2: 0.5713  loss_mask_2: 0.165  loss_dice_2: 1.246  loss_ce_3: 0.5062  loss_mask_3: 0.1662  loss_dice_3: 1.177  loss_ce_4: 0.4948  loss_mask_4: 0.1623  loss_dice_4: 1.156  loss_ce_5: 0.494  loss_mask_5: 0.162  loss_dice_5: 1.182  loss_ce_6: 0.4389  loss_mask_6: 0.1617  loss_dice_6: 1.142  loss_ce_7: 0.4487  loss_mask_7: 0.1649  loss_dice_7: 1.159  loss_ce_8: 0.4346  loss_mask_8: 0.1612  loss_dice_8: 1.132    time: 1.1670  last_time: 1.1570  data_time: 0.0567  last_data_time: 0.0639   lr: 0.0001  max_mem: 32643M
[09/10 14:37:06] d2.utils.events INFO:  eta: 0:04:15  iter: 1779  total_loss: 18.71  loss_ce: 0.4068  loss_mask: 0.1644  loss_dice: 1.15  loss_ce_0: 0.5303  loss_mask_0: 0.1886  loss_dice_0: 1.366  loss_ce_1: 0.6147  loss_mask_1: 0.1713  loss_dice_1: 1.306  loss_ce_2: 0.5254  loss_mask_2: 0.1689  loss_dice_2: 1.232  loss_ce_3: 0.4947  loss_mask_3: 0.168  loss_dice_3: 1.199  loss_ce_4: 0.4339  loss_mask_4: 0.1686  loss_dice_4: 1.214  loss_ce_5: 0.4516  loss_mask_5: 0.1658  loss_dice_5: 1.217  loss_ce_6: 0.4388  loss_mask_6: 0.1658  loss_dice_6: 1.166  loss_ce_7: 0.3859  loss_mask_7: 0.1663  loss_dice_7: 1.198  loss_ce_8: 0.4245  loss_mask_8: 0.1655  loss_dice_8: 1.164    time: 1.1669  last_time: 1.1559  data_time: 0.0591  last_data_time: 0.0457   lr: 0.0001  max_mem: 32643M
[09/10 14:37:29] d2.utils.events INFO:  eta: 0:03:52  iter: 1799  total_loss: 19.05  loss_ce: 0.4565  loss_mask: 0.1596  loss_dice: 1.165  loss_ce_0: 0.5532  loss_mask_0: 0.181  loss_dice_0: 1.382  loss_ce_1: 0.6089  loss_mask_1: 0.1731  loss_dice_1: 1.324  loss_ce_2: 0.5455  loss_mask_2: 0.1652  loss_dice_2: 1.27  loss_ce_3: 0.5338  loss_mask_3: 0.166  loss_dice_3: 1.191  loss_ce_4: 0.4711  loss_mask_4: 0.1628  loss_dice_4: 1.209  loss_ce_5: 0.4771  loss_mask_5: 0.1589  loss_dice_5: 1.189  loss_ce_6: 0.4732  loss_mask_6: 0.1582  loss_dice_6: 1.187  loss_ce_7: 0.436  loss_mask_7: 0.159  loss_dice_7: 1.167  loss_ce_8: 0.4571  loss_mask_8: 0.1572  loss_dice_8: 1.177    time: 1.1668  last_time: 1.1773  data_time: 0.0581  last_data_time: 0.0729   lr: 0.0001  max_mem: 32643M
[09/10 14:37:52] d2.utils.events INFO:  eta: 0:03:29  iter: 1819  total_loss: 19.8  loss_ce: 0.4392  loss_mask: 0.1627  loss_dice: 1.277  loss_ce_0: 0.554  loss_mask_0: 0.1784  loss_dice_0: 1.471  loss_ce_1: 0.5972  loss_mask_1: 0.1687  loss_dice_1: 1.399  loss_ce_2: 0.5775  loss_mask_2: 0.1643  loss_dice_2: 1.384  loss_ce_3: 0.5246  loss_mask_3: 0.1663  loss_dice_3: 1.272  loss_ce_4: 0.4804  loss_mask_4: 0.1646  loss_dice_4: 1.268  loss_ce_5: 0.4861  loss_mask_5: 0.1668  loss_dice_5: 1.272  loss_ce_6: 0.4599  loss_mask_6: 0.1665  loss_dice_6: 1.252  loss_ce_7: 0.4552  loss_mask_7: 0.1665  loss_dice_7: 1.247  loss_ce_8: 0.4341  loss_mask_8: 0.1632  loss_dice_8: 1.246    time: 1.1668  last_time: 1.1114  data_time: 0.0636  last_data_time: 0.0628   lr: 0.0001  max_mem: 32643M
[09/10 14:38:16] d2.utils.events INFO:  eta: 0:03:06  iter: 1839  total_loss: 19.98  loss_ce: 0.4489  loss_mask: 0.1529  loss_dice: 1.242  loss_ce_0: 0.5344  loss_mask_0: 0.1898  loss_dice_0: 1.474  loss_ce_1: 0.6205  loss_mask_1: 0.1722  loss_dice_1: 1.423  loss_ce_2: 0.5507  loss_mask_2: 0.1637  loss_dice_2: 1.335  loss_ce_3: 0.5263  loss_mask_3: 0.1606  loss_dice_3: 1.301  loss_ce_4: 0.4859  loss_mask_4: 0.1554  loss_dice_4: 1.298  loss_ce_5: 0.4887  loss_mask_5: 0.1566  loss_dice_5: 1.299  loss_ce_6: 0.4885  loss_mask_6: 0.1539  loss_dice_6: 1.256  loss_ce_7: 0.4582  loss_mask_7: 0.1554  loss_dice_7: 1.249  loss_ce_8: 0.4881  loss_mask_8: 0.153  loss_dice_8: 1.24    time: 1.1667  last_time: 1.1142  data_time: 0.0554  last_data_time: 0.0452   lr: 0.0001  max_mem: 32643M
[09/10 14:38:39] d2.utils.events INFO:  eta: 0:02:42  iter: 1859  total_loss: 19.91  loss_ce: 0.4307  loss_mask: 0.1609  loss_dice: 1.28  loss_ce_0: 0.5353  loss_mask_0: 0.1895  loss_dice_0: 1.412  loss_ce_1: 0.617  loss_mask_1: 0.1701  loss_dice_1: 1.385  loss_ce_2: 0.5684  loss_mask_2: 0.1714  loss_dice_2: 1.352  loss_ce_3: 0.5089  loss_mask_3: 0.1647  loss_dice_3: 1.281  loss_ce_4: 0.4792  loss_mask_4: 0.162  loss_dice_4: 1.313  loss_ce_5: 0.4653  loss_mask_5: 0.1674  loss_dice_5: 1.237  loss_ce_6: 0.4569  loss_mask_6: 0.1605  loss_dice_6: 1.306  loss_ce_7: 0.4443  loss_mask_7: 0.1631  loss_dice_7: 1.245  loss_ce_8: 0.4605  loss_mask_8: 0.1609  loss_dice_8: 1.267    time: 1.1668  last_time: 1.2259  data_time: 0.0537  last_data_time: 0.0454   lr: 0.0001  max_mem: 32643M
[09/10 14:39:03] d2.utils.events INFO:  eta: 0:02:19  iter: 1879  total_loss: 19.12  loss_ce: 0.4414  loss_mask: 0.158  loss_dice: 1.226  loss_ce_0: 0.5695  loss_mask_0: 0.18  loss_dice_0: 1.379  loss_ce_1: 0.6358  loss_mask_1: 0.1755  loss_dice_1: 1.356  loss_ce_2: 0.5632  loss_mask_2: 0.1655  loss_dice_2: 1.275  loss_ce_3: 0.5282  loss_mask_3: 0.1629  loss_dice_3: 1.227  loss_ce_4: 0.5051  loss_mask_4: 0.1632  loss_dice_4: 1.22  loss_ce_5: 0.4925  loss_mask_5: 0.1575  loss_dice_5: 1.22  loss_ce_6: 0.4776  loss_mask_6: 0.161  loss_dice_6: 1.239  loss_ce_7: 0.4645  loss_mask_7: 0.1598  loss_dice_7: 1.202  loss_ce_8: 0.4786  loss_mask_8: 0.1599  loss_dice_8: 1.174    time: 1.1670  last_time: 1.2206  data_time: 0.0548  last_data_time: 0.0459   lr: 0.0001  max_mem: 32643M
[09/10 14:39:27] d2.utils.events INFO:  eta: 0:01:56  iter: 1899  total_loss: 18.74  loss_ce: 0.4012  loss_mask: 0.1574  loss_dice: 1.172  loss_ce_0: 0.5433  loss_mask_0: 0.1786  loss_dice_0: 1.384  loss_ce_1: 0.5952  loss_mask_1: 0.1686  loss_dice_1: 1.276  loss_ce_2: 0.5533  loss_mask_2: 0.1614  loss_dice_2: 1.249  loss_ce_3: 0.4783  loss_mask_3: 0.1591  loss_dice_3: 1.208  loss_ce_4: 0.4481  loss_mask_4: 0.1601  loss_dice_4: 1.209  loss_ce_5: 0.4488  loss_mask_5: 0.1596  loss_dice_5: 1.172  loss_ce_6: 0.4334  loss_mask_6: 0.1566  loss_dice_6: 1.163  loss_ce_7: 0.3791  loss_mask_7: 0.1559  loss_dice_7: 1.152  loss_ce_8: 0.4062  loss_mask_8: 0.154  loss_dice_8: 1.192    time: 1.1672  last_time: 1.2154  data_time: 0.0529  last_data_time: 0.0470   lr: 0.0001  max_mem: 32643M
[09/10 14:39:50] d2.utils.events INFO:  eta: 0:01:33  iter: 1919  total_loss: 18.82  loss_ce: 0.4256  loss_mask: 0.163  loss_dice: 1.141  loss_ce_0: 0.5334  loss_mask_0: 0.1903  loss_dice_0: 1.303  loss_ce_1: 0.6071  loss_mask_1: 0.18  loss_dice_1: 1.285  loss_ce_2: 0.545  loss_mask_2: 0.1766  loss_dice_2: 1.217  loss_ce_3: 0.4586  loss_mask_3: 0.1672  loss_dice_3: 1.157  loss_ce_4: 0.4261  loss_mask_4: 0.1654  loss_dice_4: 1.134  loss_ce_5: 0.4098  loss_mask_5: 0.1664  loss_dice_5: 1.129  loss_ce_6: 0.4309  loss_mask_6: 0.1645  loss_dice_6: 1.147  loss_ce_7: 0.4187  loss_mask_7: 0.1637  loss_dice_7: 1.158  loss_ce_8: 0.4172  loss_mask_8: 0.1619  loss_dice_8: 1.175    time: 1.1671  last_time: 1.1384  data_time: 0.0565  last_data_time: 0.0443   lr: 0.0001  max_mem: 32643M
[09/10 14:40:14] d2.utils.events INFO:  eta: 0:01:09  iter: 1939  total_loss: 18.57  loss_ce: 0.4259  loss_mask: 0.1511  loss_dice: 1.166  loss_ce_0: 0.5612  loss_mask_0: 0.1765  loss_dice_0: 1.364  loss_ce_1: 0.6129  loss_mask_1: 0.1595  loss_dice_1: 1.282  loss_ce_2: 0.5485  loss_mask_2: 0.1529  loss_dice_2: 1.245  loss_ce_3: 0.4905  loss_mask_3: 0.1524  loss_dice_3: 1.214  loss_ce_4: 0.4594  loss_mask_4: 0.1518  loss_dice_4: 1.201  loss_ce_5: 0.4603  loss_mask_5: 0.1506  loss_dice_5: 1.195  loss_ce_6: 0.4349  loss_mask_6: 0.1518  loss_dice_6: 1.179  loss_ce_7: 0.4442  loss_mask_7: 0.1526  loss_dice_7: 1.191  loss_ce_8: 0.4532  loss_mask_8: 0.1488  loss_dice_8: 1.181    time: 1.1673  last_time: 1.1703  data_time: 0.0545  last_data_time: 0.0479   lr: 0.0001  max_mem: 32643M
[09/10 14:40:37] d2.utils.events INFO:  eta: 0:00:46  iter: 1959  total_loss: 18.84  loss_ce: 0.4543  loss_mask: 0.1577  loss_dice: 1.143  loss_ce_0: 0.5111  loss_mask_0: 0.1933  loss_dice_0: 1.379  loss_ce_1: 0.6094  loss_mask_1: 0.1731  loss_dice_1: 1.296  loss_ce_2: 0.5778  loss_mask_2: 0.1664  loss_dice_2: 1.236  loss_ce_3: 0.5085  loss_mask_3: 0.165  loss_dice_3: 1.194  loss_ce_4: 0.4835  loss_mask_4: 0.1619  loss_dice_4: 1.163  loss_ce_5: 0.4776  loss_mask_5: 0.1624  loss_dice_5: 1.184  loss_ce_6: 0.4404  loss_mask_6: 0.1612  loss_dice_6: 1.181  loss_ce_7: 0.4464  loss_mask_7: 0.1613  loss_dice_7: 1.163  loss_ce_8: 0.4548  loss_mask_8: 0.1607  loss_dice_8: 1.177    time: 1.1672  last_time: 1.1255  data_time: 0.0490  last_data_time: 0.0739   lr: 0.0001  max_mem: 32643M
[09/10 14:41:00] d2.utils.events INFO:  eta: 0:00:23  iter: 1979  total_loss: 19.93  loss_ce: 0.4576  loss_mask: 0.1686  loss_dice: 1.215  loss_ce_0: 0.5767  loss_mask_0: 0.197  loss_dice_0: 1.39  loss_ce_1: 0.6324  loss_mask_1: 0.1795  loss_dice_1: 1.331  loss_ce_2: 0.5881  loss_mask_2: 0.1699  loss_dice_2: 1.249  loss_ce_3: 0.5249  loss_mask_3: 0.173  loss_dice_3: 1.239  loss_ce_4: 0.5232  loss_mask_4: 0.1676  loss_dice_4: 1.179  loss_ce_5: 0.4637  loss_mask_5: 0.1666  loss_dice_5: 1.229  loss_ce_6: 0.4642  loss_mask_6: 0.1687  loss_dice_6: 1.19  loss_ce_7: 0.4553  loss_mask_7: 0.1671  loss_dice_7: 1.211  loss_ce_8: 0.4316  loss_mask_8: 0.1665  loss_dice_8: 1.185    time: 1.1671  last_time: 1.1565  data_time: 0.0636  last_data_time: 0.0761   lr: 0.0001  max_mem: 32643M
[09/10 14:41:23] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/r101_000_2000_19/model_final.pth
[09/10 14:41:26] d2.utils.events INFO:  eta: 0:00:00  iter: 1999  total_loss: 18.84  loss_ce: 0.4535  loss_mask: 0.1563  loss_dice: 1.149  loss_ce_0: 0.5465  loss_mask_0: 0.189  loss_dice_0: 1.332  loss_ce_1: 0.6418  loss_mask_1: 0.1715  loss_dice_1: 1.3  loss_ce_2: 0.5657  loss_mask_2: 0.158  loss_dice_2: 1.233  loss_ce_3: 0.5041  loss_mask_3: 0.1585  loss_dice_3: 1.179  loss_ce_4: 0.5028  loss_mask_4: 0.1562  loss_dice_4: 1.167  loss_ce_5: 0.4883  loss_mask_5: 0.1582  loss_dice_5: 1.195  loss_ce_6: 0.4846  loss_mask_6: 0.1606  loss_dice_6: 1.177  loss_ce_7: 0.4695  loss_mask_7: 0.1546  loss_dice_7: 1.191  loss_ce_8: 0.4642  loss_mask_8: 0.1567  loss_dice_8: 1.171    time: 1.1670  last_time: 1.1587  data_time: 0.0603  last_data_time: 0.0524   lr: 0.0001  max_mem: 32643M
[09/10 14:41:26] d2.engine.hooks INFO: Overall training speed: 1998 iterations in 0:38:51 (1.1670 s / it)
[09/10 14:41:26] d2.engine.hooks INFO: Total training time: 0:39:01 (0:00:09 on hooks)
[09/10 14:41:26] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/10 14:41:26] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/10 14:41:26] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/10 14:41:26] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/10 14:41:26] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/10 14:41:26] d2.evaluation.evaluator INFO: Start inference on 500 batches
[09/10 14:41:32] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0032 s/iter. Inference: 0.2543 s/iter. Eval: 0.1038 s/iter. Total: 0.3614 s/iter. ETA=0:02:56
[09/10 14:41:37] d2.evaluation.evaluator INFO: Inference done 25/500. Dataloading: 0.0041 s/iter. Inference: 0.2637 s/iter. Eval: 0.1048 s/iter. Total: 0.3728 s/iter. ETA=0:02:57
[09/10 14:41:42] d2.evaluation.evaluator INFO: Inference done 40/500. Dataloading: 0.0044 s/iter. Inference: 0.2531 s/iter. Eval: 0.1064 s/iter. Total: 0.3639 s/iter. ETA=0:02:47
[09/10 14:41:48] d2.evaluation.evaluator INFO: Inference done 55/500. Dataloading: 0.0044 s/iter. Inference: 0.2498 s/iter. Eval: 0.1065 s/iter. Total: 0.3609 s/iter. ETA=0:02:40
[09/10 14:41:53] d2.evaluation.evaluator INFO: Inference done 69/500. Dataloading: 0.0044 s/iter. Inference: 0.2521 s/iter. Eval: 0.1069 s/iter. Total: 0.3636 s/iter. ETA=0:02:36
[09/10 14:41:58] d2.evaluation.evaluator INFO: Inference done 83/500. Dataloading: 0.0045 s/iter. Inference: 0.2519 s/iter. Eval: 0.1070 s/iter. Total: 0.3635 s/iter. ETA=0:02:31
[09/10 14:42:03] d2.evaluation.evaluator INFO: Inference done 97/500. Dataloading: 0.0045 s/iter. Inference: 0.2519 s/iter. Eval: 0.1072 s/iter. Total: 0.3637 s/iter. ETA=0:02:26
[09/10 14:42:08] d2.evaluation.evaluator INFO: Inference done 111/500. Dataloading: 0.0045 s/iter. Inference: 0.2514 s/iter. Eval: 0.1075 s/iter. Total: 0.3636 s/iter. ETA=0:02:21
[09/10 14:42:14] d2.evaluation.evaluator INFO: Inference done 126/500. Dataloading: 0.0045 s/iter. Inference: 0.2499 s/iter. Eval: 0.1076 s/iter. Total: 0.3621 s/iter. ETA=0:02:15
[09/10 14:42:19] d2.evaluation.evaluator INFO: Inference done 141/500. Dataloading: 0.0045 s/iter. Inference: 0.2497 s/iter. Eval: 0.1075 s/iter. Total: 0.3618 s/iter. ETA=0:02:09
[09/10 14:42:24] d2.evaluation.evaluator INFO: Inference done 154/500. Dataloading: 0.0044 s/iter. Inference: 0.2540 s/iter. Eval: 0.1073 s/iter. Total: 0.3659 s/iter. ETA=0:02:06
[09/10 14:42:30] d2.evaluation.evaluator INFO: Inference done 168/500. Dataloading: 0.0044 s/iter. Inference: 0.2556 s/iter. Eval: 0.1071 s/iter. Total: 0.3672 s/iter. ETA=0:02:01
[09/10 14:42:35] d2.evaluation.evaluator INFO: Inference done 181/500. Dataloading: 0.0044 s/iter. Inference: 0.2576 s/iter. Eval: 0.1071 s/iter. Total: 0.3692 s/iter. ETA=0:01:57
[09/10 14:42:40] d2.evaluation.evaluator INFO: Inference done 196/500. Dataloading: 0.0044 s/iter. Inference: 0.2561 s/iter. Eval: 0.1071 s/iter. Total: 0.3677 s/iter. ETA=0:01:51
[09/10 14:42:45] d2.evaluation.evaluator INFO: Inference done 211/500. Dataloading: 0.0044 s/iter. Inference: 0.2547 s/iter. Eval: 0.1071 s/iter. Total: 0.3662 s/iter. ETA=0:01:45
[09/10 14:42:50] d2.evaluation.evaluator INFO: Inference done 225/500. Dataloading: 0.0043 s/iter. Inference: 0.2552 s/iter. Eval: 0.1070 s/iter. Total: 0.3667 s/iter. ETA=0:01:40
[09/10 14:42:56] d2.evaluation.evaluator INFO: Inference done 240/500. Dataloading: 0.0043 s/iter. Inference: 0.2543 s/iter. Eval: 0.1071 s/iter. Total: 0.3659 s/iter. ETA=0:01:35
[09/10 14:43:01] d2.evaluation.evaluator INFO: Inference done 255/500. Dataloading: 0.0043 s/iter. Inference: 0.2532 s/iter. Eval: 0.1071 s/iter. Total: 0.3648 s/iter. ETA=0:01:29
[09/10 14:43:06] d2.evaluation.evaluator INFO: Inference done 270/500. Dataloading: 0.0043 s/iter. Inference: 0.2524 s/iter. Eval: 0.1073 s/iter. Total: 0.3641 s/iter. ETA=0:01:23
[09/10 14:43:12] d2.evaluation.evaluator INFO: Inference done 285/500. Dataloading: 0.0043 s/iter. Inference: 0.2518 s/iter. Eval: 0.1073 s/iter. Total: 0.3635 s/iter. ETA=0:01:18
[09/10 14:43:17] d2.evaluation.evaluator INFO: Inference done 300/500. Dataloading: 0.0043 s/iter. Inference: 0.2509 s/iter. Eval: 0.1072 s/iter. Total: 0.3626 s/iter. ETA=0:01:12
[09/10 14:43:22] d2.evaluation.evaluator INFO: Inference done 315/500. Dataloading: 0.0043 s/iter. Inference: 0.2501 s/iter. Eval: 0.1071 s/iter. Total: 0.3617 s/iter. ETA=0:01:06
[09/10 14:43:27] d2.evaluation.evaluator INFO: Inference done 330/500. Dataloading: 0.0043 s/iter. Inference: 0.2495 s/iter. Eval: 0.1071 s/iter. Total: 0.3609 s/iter. ETA=0:01:01
[09/10 14:43:32] d2.evaluation.evaluator INFO: Inference done 344/500. Dataloading: 0.0043 s/iter. Inference: 0.2494 s/iter. Eval: 0.1072 s/iter. Total: 0.3610 s/iter. ETA=0:00:56
[09/10 14:43:37] d2.evaluation.evaluator INFO: Inference done 358/500. Dataloading: 0.0043 s/iter. Inference: 0.2496 s/iter. Eval: 0.1072 s/iter. Total: 0.3612 s/iter. ETA=0:00:51
[09/10 14:43:42] d2.evaluation.evaluator INFO: Inference done 372/500. Dataloading: 0.0043 s/iter. Inference: 0.2494 s/iter. Eval: 0.1073 s/iter. Total: 0.3611 s/iter. ETA=0:00:46
[09/10 14:43:48] d2.evaluation.evaluator INFO: Inference done 387/500. Dataloading: 0.0043 s/iter. Inference: 0.2489 s/iter. Eval: 0.1074 s/iter. Total: 0.3607 s/iter. ETA=0:00:40
[09/10 14:43:53] d2.evaluation.evaluator INFO: Inference done 401/500. Dataloading: 0.0043 s/iter. Inference: 0.2490 s/iter. Eval: 0.1074 s/iter. Total: 0.3608 s/iter. ETA=0:00:35
[09/10 14:43:58] d2.evaluation.evaluator INFO: Inference done 416/500. Dataloading: 0.0043 s/iter. Inference: 0.2484 s/iter. Eval: 0.1074 s/iter. Total: 0.3602 s/iter. ETA=0:00:30
[09/10 14:44:03] d2.evaluation.evaluator INFO: Inference done 430/500. Dataloading: 0.0043 s/iter. Inference: 0.2484 s/iter. Eval: 0.1074 s/iter. Total: 0.3602 s/iter. ETA=0:00:25
[09/10 14:44:08] d2.evaluation.evaluator INFO: Inference done 445/500. Dataloading: 0.0042 s/iter. Inference: 0.2478 s/iter. Eval: 0.1074 s/iter. Total: 0.3595 s/iter. ETA=0:00:19
[09/10 14:44:13] d2.evaluation.evaluator INFO: Inference done 460/500. Dataloading: 0.0042 s/iter. Inference: 0.2476 s/iter. Eval: 0.1073 s/iter. Total: 0.3593 s/iter. ETA=0:00:14
[09/10 14:44:18] d2.evaluation.evaluator INFO: Inference done 475/500. Dataloading: 0.0042 s/iter. Inference: 0.2473 s/iter. Eval: 0.1073 s/iter. Total: 0.3590 s/iter. ETA=0:00:08
[09/10 14:44:24] d2.evaluation.evaluator INFO: Inference done 490/500. Dataloading: 0.0042 s/iter. Inference: 0.2470 s/iter. Eval: 0.1073 s/iter. Total: 0.3587 s/iter. ETA=0:00:03
[09/10 14:44:27] d2.evaluation.evaluator INFO: Total inference time: 0:02:57.462010 (0.358509 s / iter per device, on 1 devices)
[09/10 14:44:27] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:02 (0.246645 s / iter per device, on 1 devices)
[09/10 14:44:27] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evale_k5cxri ...
[09/10 14:44:42] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 57.999 | 81.058 | 70.674 |      19       |
| Things | 48.503 | 80.601 | 60.358 |       8       |
| Stuff  | 64.905 | 81.391 | 78.176 |      11       |
[09/10 14:44:42] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.264 | 97.566 | 99.690 |     Stuff     |
| class_8  | 71.327 | 84.144 | 84.768 |     Stuff     |
| class_11 | 87.405 | 89.135 | 98.059 |     Stuff     |
| class_12 | 41.722 | 78.521 | 53.134 |     Stuff     |
| class_13 | 38.984 | 76.326 | 51.075 |     Stuff     |
| class_17 | 47.282 | 64.627 | 73.161 |     Stuff     |
| class_19 | 49.753 | 69.008 | 72.097 |     Stuff     |
| class_20 | 66.329 | 77.716 | 85.348 |     Stuff     |
| class_21 | 89.493 | 90.329 | 99.075 |     Stuff     |
| class_22 | 36.322 | 75.818 | 47.907 |     Stuff     |
| class_23 | 88.080 | 92.112 | 95.622 |     Stuff     |
| class_24 | 51.637 | 77.255 | 66.840 |    Things     |
| class_25 | 46.458 | 73.450 | 63.251 |    Things     |
| class_26 | 64.221 | 83.115 | 77.267 |    Things     |
| class_27 | 51.225 | 88.043 | 58.182 |    Things     |
| class_28 | 60.274 | 89.021 | 67.708 |    Things     |
| class_31 | 31.829 | 89.122 | 35.714 |    Things     |
| class_32 | 37.832 | 73.240 | 51.656 |    Things     |
| class_33 | 44.544 | 71.563 | 62.244 |    Things     |
[09/10 14:44:42] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[09/10 14:44:42] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/10 14:44:42] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/10 14:44:42] d2.evaluation.testing INFO: copypaste: 57.9990,81.0585,70.6736,48.5026,80.6009,60.3579,64.9055,81.3912,78.1760,97.2635,97.5662,99.6898,71.3272,84.1438,84.7682,87.4050,89.1349,98.0592,41.7219,78.5215,53.1343,38.9836,76.3257,51.0753,47.2818,64.6274,73.1606,49.7529,69.0082,72.0971,66.3287,77.7159,85.3476,89.4935,90.3290,99.0750,36.3223,75.8183,47.9070,88.0798,92.1123,95.6221,51.6370,77.2546,66.8401,46.4578,73.4496,63.2512,64.2207,83.1152,77.2671,51.2250,88.0430,58.1818,60.2744,89.0207,67.7083,31.8292,89.1217,35.7143,37.8325,73.2398,51.6556,44.5440,71.5630,62.2444
