[08/29 14:36:21] detectron2 INFO: Rank of current process: 0. World size: 1
[08/29 14:36:22] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/29 14:36:22] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/cl_exp_008_19.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[08/29 14:36:22] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/cl_exp_008_19.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/29 14:36:22] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: convnext_large_d_320
    CLIP_PRETRAINED_WEIGHTS: laion2b_s29b_b131k_ft_soup
    EMBED_DIM: 768
    ENSEMBLE_ON_VALID_MASK: false
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/29 14:36:22] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/config.yaml
[08/29 14:36:22] d2.utils.env INFO: Using a generated random seed 26079245
[08/29 14:36:36] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): TimmModel(
        (trunk): ConvNeXt(
          (stem): Sequential(
            (0): Conv2d(3, 192, kernel_size=(4, 4), stride=(4, 4))
            (1): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
          )
          (stages): Sequential(
            (0): ConvNeXtStage(
              (downsample): Identity()
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): Identity()
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.003)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.006)
                )
              )
            )
            (1): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(192, 384, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.009)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.011)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.014)
                )
              )
            )
            (2): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((384,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(384, 768, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.017)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.020)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.023)
                )
                (3): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.026)
                )
                (4): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.029)
                )
                (5): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.031)
                )
                (6): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.034)
                )
                (7): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.037)
                )
                (8): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.040)
                )
                (9): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.043)
                )
                (10): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.046)
                )
                (11): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.049)
                )
                (12): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.051)
                )
                (13): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.054)
                )
                (14): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.057)
                )
                (15): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.060)
                )
                (16): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.063)
                )
                (17): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.066)
                )
                (18): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.069)
                )
                (19): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.071)
                )
                (20): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.074)
                )
                (21): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.077)
                )
                (22): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.080)
                )
                (23): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.083)
                )
                (24): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.086)
                )
                (25): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.089)
                )
                (26): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.091)
                )
              )
            )
            (3): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((768,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(768, 1536, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.094)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.097)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.100)
                )
              )
            )
          )
          (norm_pre): Identity()
          (head): NormMlpClassifierHead(
            (global_pool): SelectAdaptivePool2d(pool_type=avg, flatten=Identity())
            (norm): LayerNorm2d((1536,), eps=1e-06, elementwise_affine=True)
            (flatten): Flatten(start_dim=1, end_dim=-1)
            (pre_logits): Identity()
            (drop): Dropout(p=0.0, inplace=False)
            (fc): Identity()
          )
        )
        (head): Sequential(
          (mlp): Mlp(
            (fc1): Linear(in_features=1536, out_features=1536, bias=True)
            (act): GELU(approximate='none')
            (drop1): Dropout(p=0.0, inplace=False)
            (norm): Identity()
            (fc2): Linear(in_features=1536, out_features=768, bias=False)
            (drop2): Dropout(p=0, inplace=False)
          )
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-15): 16 x ResidualAttentionBlock(
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): GELU(approximate='none')
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 768)
      (ln_final): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=768, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 768)
)
[08/29 14:36:36] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/29 14:36:36] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/29 14:36:36] d2.data.build INFO: Using training sampler TrainingSampler
[08/29 14:36:36] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/29 14:36:36] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/29 14:36:36] d2.data.common INFO: Serialized dataset takes 2.16 MiB
[08/29 14:36:36] d2.data.build INFO: Making batched data loader with batch_size=8
[08/29 14:36:36] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/29 14:36:36] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth ...
[08/29 14:36:36] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth ...
[08/29 14:36:38] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/29 14:36:38] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.head.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.head.mlp.fc2.weight[0m
[34mbackbone.clip_model.visual.trunk.head.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.downsample.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.downsample.1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.downsample.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.downsample.1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.downsample.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.downsample.1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stem.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stem.1.{bias, weight}[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/29 14:36:38] d2.engine.train_loop INFO: Starting training from iteration 0
[08/29 14:37:03] d2.utils.events INFO:  eta: 0:17:12  iter: 19  total_loss: 26.33  loss_ce: 0.581  loss_mask: 0.6073  loss_dice: 1.339  loss_ce_0: 0.7058  loss_mask_0: 0.7067  loss_dice_0: 1.627  loss_ce_1: 0.6639  loss_mask_1: 0.6644  loss_dice_1: 1.51  loss_ce_2: 0.6227  loss_mask_2: 0.6244  loss_dice_2: 1.447  loss_ce_3: 0.6028  loss_mask_3: 0.6257  loss_dice_3: 1.395  loss_ce_4: 0.5742  loss_mask_4: 0.6124  loss_dice_4: 1.384  loss_ce_5: 0.5498  loss_mask_5: 0.612  loss_dice_5: 1.374  loss_ce_6: 0.6012  loss_mask_6: 0.6217  loss_dice_6: 1.359  loss_ce_7: 0.5693  loss_mask_7: 0.6193  loss_dice_7: 1.347  loss_ce_8: 0.5806  loss_mask_8: 0.618  loss_dice_8: 1.341    time: 1.0680  last_time: 1.0769  data_time: 0.0771  last_data_time: 0.0490   lr: 0.0001  max_mem: 30329M
[08/29 14:37:24] d2.utils.events INFO:  eta: 0:16:46  iter: 39  total_loss: 20.63  loss_ce: 0.2957  loss_mask: 0.5253  loss_dice: 1.141  loss_ce_0: 0.3361  loss_mask_0: 0.599  loss_dice_0: 1.389  loss_ce_1: 0.3596  loss_mask_1: 0.573  loss_dice_1: 1.274  loss_ce_2: 0.3485  loss_mask_2: 0.554  loss_dice_2: 1.241  loss_ce_3: 0.2812  loss_mask_3: 0.5502  loss_dice_3: 1.191  loss_ce_4: 0.2731  loss_mask_4: 0.534  loss_dice_4: 1.213  loss_ce_5: 0.276  loss_mask_5: 0.5472  loss_dice_5: 1.206  loss_ce_6: 0.2942  loss_mask_6: 0.5327  loss_dice_6: 1.191  loss_ce_7: 0.2936  loss_mask_7: 0.5283  loss_dice_7: 1.143  loss_ce_8: 0.2606  loss_mask_8: 0.5461  loss_dice_8: 1.206    time: 1.0543  last_time: 1.0307  data_time: 0.0368  last_data_time: 0.0334   lr: 0.0001  max_mem: 30329M
[08/29 14:37:45] d2.utils.events INFO:  eta: 0:16:17  iter: 59  total_loss: 19.28  loss_ce: 0.2407  loss_mask: 0.4409  loss_dice: 1.163  loss_ce_0: 0.3333  loss_mask_0: 0.4815  loss_dice_0: 1.321  loss_ce_1: 0.3213  loss_mask_1: 0.4604  loss_dice_1: 1.251  loss_ce_2: 0.2713  loss_mask_2: 0.4526  loss_dice_2: 1.211  loss_ce_3: 0.2575  loss_mask_3: 0.4455  loss_dice_3: 1.171  loss_ce_4: 0.2348  loss_mask_4: 0.4485  loss_dice_4: 1.165  loss_ce_5: 0.2242  loss_mask_5: 0.4457  loss_dice_5: 1.166  loss_ce_6: 0.2292  loss_mask_6: 0.4449  loss_dice_6: 1.159  loss_ce_7: 0.2379  loss_mask_7: 0.4486  loss_dice_7: 1.142  loss_ce_8: 0.233  loss_mask_8: 0.4466  loss_dice_8: 1.119    time: 1.0478  last_time: 1.0351  data_time: 0.0348  last_data_time: 0.0338   lr: 0.0001  max_mem: 30329M
[08/29 14:38:06] d2.utils.events INFO:  eta: 0:15:53  iter: 79  total_loss: 18.15  loss_ce: 0.2071  loss_mask: 0.435  loss_dice: 1.062  loss_ce_0: 0.255  loss_mask_0: 0.4711  loss_dice_0: 1.208  loss_ce_1: 0.2537  loss_mask_1: 0.4604  loss_dice_1: 1.147  loss_ce_2: 0.2386  loss_mask_2: 0.4534  loss_dice_2: 1.115  loss_ce_3: 0.2485  loss_mask_3: 0.437  loss_dice_3: 1.07  loss_ce_4: 0.2133  loss_mask_4: 0.4374  loss_dice_4: 1.064  loss_ce_5: 0.2084  loss_mask_5: 0.4303  loss_dice_5: 1.078  loss_ce_6: 0.1935  loss_mask_6: 0.4419  loss_dice_6: 1.072  loss_ce_7: 0.222  loss_mask_7: 0.4254  loss_dice_7: 1.057  loss_ce_8: 0.1952  loss_mask_8: 0.4323  loss_dice_8: 1.061    time: 1.0447  last_time: 1.0320  data_time: 0.0353  last_data_time: 0.0334   lr: 0.0001  max_mem: 30329M
[08/29 14:38:27] d2.utils.events INFO:  eta: 0:15:33  iter: 99  total_loss: 17.3  loss_ce: 0.2056  loss_mask: 0.411  loss_dice: 1.055  loss_ce_0: 0.2368  loss_mask_0: 0.4597  loss_dice_0: 1.234  loss_ce_1: 0.271  loss_mask_1: 0.4327  loss_dice_1: 1.138  loss_ce_2: 0.2266  loss_mask_2: 0.4153  loss_dice_2: 1.124  loss_ce_3: 0.2379  loss_mask_3: 0.4087  loss_dice_3: 1.076  loss_ce_4: 0.2344  loss_mask_4: 0.4184  loss_dice_4: 1.086  loss_ce_5: 0.2191  loss_mask_5: 0.4188  loss_dice_5: 1.085  loss_ce_6: 0.2189  loss_mask_6: 0.406  loss_dice_6: 1.085  loss_ce_7: 0.2239  loss_mask_7: 0.4109  loss_dice_7: 1.07  loss_ce_8: 0.2319  loss_mask_8: 0.4062  loss_dice_8: 1.071    time: 1.0433  last_time: 1.0346  data_time: 0.0358  last_data_time: 0.0340   lr: 0.0001  max_mem: 30329M
[08/29 14:38:47] d2.utils.events INFO:  eta: 0:15:12  iter: 119  total_loss: 17.28  loss_ce: 0.1887  loss_mask: 0.4057  loss_dice: 1.025  loss_ce_0: 0.2004  loss_mask_0: 0.4671  loss_dice_0: 1.205  loss_ce_1: 0.2402  loss_mask_1: 0.4401  loss_dice_1: 1.107  loss_ce_2: 0.238  loss_mask_2: 0.4205  loss_dice_2: 1.072  loss_ce_3: 0.2455  loss_mask_3: 0.4234  loss_dice_3: 1.059  loss_ce_4: 0.2165  loss_mask_4: 0.4139  loss_dice_4: 1.065  loss_ce_5: 0.1975  loss_mask_5: 0.4211  loss_dice_5: 1.065  loss_ce_6: 0.2057  loss_mask_6: 0.4166  loss_dice_6: 1.055  loss_ce_7: 0.1861  loss_mask_7: 0.4273  loss_dice_7: 1.049  loss_ce_8: 0.1949  loss_mask_8: 0.4053  loss_dice_8: 1.065    time: 1.0429  last_time: 1.0316  data_time: 0.0350  last_data_time: 0.0352   lr: 0.0001  max_mem: 30329M
[08/29 14:39:08] d2.utils.events INFO:  eta: 0:14:52  iter: 139  total_loss: 16.94  loss_ce: 0.1724  loss_mask: 0.4083  loss_dice: 1.055  loss_ce_0: 0.1874  loss_mask_0: 0.4682  loss_dice_0: 1.136  loss_ce_1: 0.2352  loss_mask_1: 0.4405  loss_dice_1: 1.092  loss_ce_2: 0.2018  loss_mask_2: 0.4256  loss_dice_2: 1.069  loss_ce_3: 0.2081  loss_mask_3: 0.4346  loss_dice_3: 1.022  loss_ce_4: 0.2037  loss_mask_4: 0.4359  loss_dice_4: 1.049  loss_ce_5: 0.1954  loss_mask_5: 0.4205  loss_dice_5: 1.048  loss_ce_6: 0.1796  loss_mask_6: 0.4102  loss_dice_6: 1.029  loss_ce_7: 0.1755  loss_mask_7: 0.4038  loss_dice_7: 1.033  loss_ce_8: 0.1805  loss_mask_8: 0.3966  loss_dice_8: 1.03    time: 1.0423  last_time: 1.0348  data_time: 0.0354  last_data_time: 0.0336   lr: 0.0001  max_mem: 30329M
[08/29 14:39:29] d2.utils.events INFO:  eta: 0:14:30  iter: 159  total_loss: 16.27  loss_ce: 0.1831  loss_mask: 0.4246  loss_dice: 0.9938  loss_ce_0: 0.1671  loss_mask_0: 0.4701  loss_dice_0: 1.077  loss_ce_1: 0.2409  loss_mask_1: 0.4399  loss_dice_1: 1.037  loss_ce_2: 0.2093  loss_mask_2: 0.4378  loss_dice_2: 1.039  loss_ce_3: 0.207  loss_mask_3: 0.4292  loss_dice_3: 0.9796  loss_ce_4: 0.1691  loss_mask_4: 0.4281  loss_dice_4: 1.005  loss_ce_5: 0.1781  loss_mask_5: 0.4207  loss_dice_5: 0.9894  loss_ce_6: 0.1957  loss_mask_6: 0.4281  loss_dice_6: 0.9808  loss_ce_7: 0.1582  loss_mask_7: 0.4254  loss_dice_7: 0.977  loss_ce_8: 0.1768  loss_mask_8: 0.4246  loss_dice_8: 0.995    time: 1.0412  last_time: 1.0351  data_time: 0.0340  last_data_time: 0.0335   lr: 0.0001  max_mem: 30329M
[08/29 14:39:50] d2.utils.events INFO:  eta: 0:14:09  iter: 179  total_loss: 15.91  loss_ce: 0.1424  loss_mask: 0.3874  loss_dice: 0.9519  loss_ce_0: 0.1949  loss_mask_0: 0.4419  loss_dice_0: 1.059  loss_ce_1: 0.1966  loss_mask_1: 0.4317  loss_dice_1: 1.017  loss_ce_2: 0.1895  loss_mask_2: 0.4128  loss_dice_2: 0.9941  loss_ce_3: 0.1918  loss_mask_3: 0.3998  loss_dice_3: 0.9715  loss_ce_4: 0.176  loss_mask_4: 0.3952  loss_dice_4: 0.9709  loss_ce_5: 0.1717  loss_mask_5: 0.3878  loss_dice_5: 0.9712  loss_ce_6: 0.1574  loss_mask_6: 0.3936  loss_dice_6: 0.9681  loss_ce_7: 0.1663  loss_mask_7: 0.3867  loss_dice_7: 0.983  loss_ce_8: 0.1677  loss_mask_8: 0.3867  loss_dice_8: 0.9711    time: 1.0411  last_time: 1.0525  data_time: 0.0355  last_data_time: 0.0382   lr: 0.0001  max_mem: 30329M
[08/29 14:40:11] d2.utils.events INFO:  eta: 0:13:49  iter: 199  total_loss: 16.05  loss_ce: 0.1645  loss_mask: 0.3894  loss_dice: 1  loss_ce_0: 0.1752  loss_mask_0: 0.4167  loss_dice_0: 1.068  loss_ce_1: 0.2081  loss_mask_1: 0.4063  loss_dice_1: 1.023  loss_ce_2: 0.1794  loss_mask_2: 0.3951  loss_dice_2: 1.025  loss_ce_3: 0.1641  loss_mask_3: 0.4002  loss_dice_3: 0.9989  loss_ce_4: 0.1624  loss_mask_4: 0.4003  loss_dice_4: 1.009  loss_ce_5: 0.1511  loss_mask_5: 0.3956  loss_dice_5: 1.019  loss_ce_6: 0.1631  loss_mask_6: 0.3959  loss_dice_6: 0.9957  loss_ce_7: 0.1616  loss_mask_7: 0.3916  loss_dice_7: 0.9781  loss_ce_8: 0.144  loss_mask_8: 0.3927  loss_dice_8: 0.9804    time: 1.0410  last_time: 1.0350  data_time: 0.0371  last_data_time: 0.0401   lr: 0.0001  max_mem: 30329M
[08/29 14:40:32] d2.utils.events INFO:  eta: 0:13:29  iter: 219  total_loss: 15.66  loss_ce: 0.1519  loss_mask: 0.3764  loss_dice: 0.9403  loss_ce_0: 0.1455  loss_mask_0: 0.4345  loss_dice_0: 1.05  loss_ce_1: 0.1922  loss_mask_1: 0.409  loss_dice_1: 1.002  loss_ce_2: 0.1725  loss_mask_2: 0.3866  loss_dice_2: 0.962  loss_ce_3: 0.201  loss_mask_3: 0.3831  loss_dice_3: 0.9692  loss_ce_4: 0.1707  loss_mask_4: 0.3834  loss_dice_4: 0.9474  loss_ce_5: 0.1711  loss_mask_5: 0.3827  loss_dice_5: 0.9522  loss_ce_6: 0.1735  loss_mask_6: 0.382  loss_dice_6: 0.9391  loss_ce_7: 0.1688  loss_mask_7: 0.3775  loss_dice_7: 0.93  loss_ce_8: 0.1793  loss_mask_8: 0.3801  loss_dice_8: 0.9307    time: 1.0421  last_time: 1.0399  data_time: 0.0350  last_data_time: 0.0339   lr: 0.0001  max_mem: 30329M
[08/29 14:40:53] d2.utils.events INFO:  eta: 0:13:09  iter: 239  total_loss: 15.66  loss_ce: 0.1654  loss_mask: 0.3975  loss_dice: 0.9647  loss_ce_0: 0.1897  loss_mask_0: 0.4224  loss_dice_0: 1.044  loss_ce_1: 0.2233  loss_mask_1: 0.4152  loss_dice_1: 1.026  loss_ce_2: 0.2015  loss_mask_2: 0.4049  loss_dice_2: 0.9959  loss_ce_3: 0.1827  loss_mask_3: 0.3978  loss_dice_3: 1.001  loss_ce_4: 0.1959  loss_mask_4: 0.3985  loss_dice_4: 0.9926  loss_ce_5: 0.1835  loss_mask_5: 0.3982  loss_dice_5: 0.9799  loss_ce_6: 0.1799  loss_mask_6: 0.3957  loss_dice_6: 0.9769  loss_ce_7: 0.1682  loss_mask_7: 0.4007  loss_dice_7: 0.9653  loss_ce_8: 0.1579  loss_mask_8: 0.3952  loss_dice_8: 0.9897    time: 1.0423  last_time: 1.0383  data_time: 0.0341  last_data_time: 0.0331   lr: 0.0001  max_mem: 30329M
[08/29 14:41:14] d2.utils.events INFO:  eta: 0:12:48  iter: 259  total_loss: 16.65  loss_ce: 0.2038  loss_mask: 0.3964  loss_dice: 1.007  loss_ce_0: 0.2146  loss_mask_0: 0.4243  loss_dice_0: 1.098  loss_ce_1: 0.221  loss_mask_1: 0.4158  loss_dice_1: 1.065  loss_ce_2: 0.1932  loss_mask_2: 0.403  loss_dice_2: 1.05  loss_ce_3: 0.2057  loss_mask_3: 0.3977  loss_dice_3: 1.031  loss_ce_4: 0.2016  loss_mask_4: 0.398  loss_dice_4: 1.017  loss_ce_5: 0.1945  loss_mask_5: 0.3968  loss_dice_5: 1.041  loss_ce_6: 0.1969  loss_mask_6: 0.3969  loss_dice_6: 1.016  loss_ce_7: 0.1959  loss_mask_7: 0.4051  loss_dice_7: 1.02  loss_ce_8: 0.1824  loss_mask_8: 0.4042  loss_dice_8: 1.021    time: 1.0419  last_time: 1.0353  data_time: 0.0343  last_data_time: 0.0348   lr: 0.0001  max_mem: 30329M
[08/29 14:41:34] d2.utils.events INFO:  eta: 0:12:27  iter: 279  total_loss: 16.61  loss_ce: 0.1796  loss_mask: 0.401  loss_dice: 0.9878  loss_ce_0: 0.1684  loss_mask_0: 0.4409  loss_dice_0: 1.108  loss_ce_1: 0.2059  loss_mask_1: 0.4209  loss_dice_1: 1.052  loss_ce_2: 0.1842  loss_mask_2: 0.4099  loss_dice_2: 1.048  loss_ce_3: 0.1882  loss_mask_3: 0.4049  loss_dice_3: 1.012  loss_ce_4: 0.1915  loss_mask_4: 0.4025  loss_dice_4: 1.004  loss_ce_5: 0.1856  loss_mask_5: 0.4029  loss_dice_5: 0.9925  loss_ce_6: 0.2033  loss_mask_6: 0.3957  loss_dice_6: 0.9875  loss_ce_7: 0.2054  loss_mask_7: 0.3921  loss_dice_7: 1.002  loss_ce_8: 0.1953  loss_mask_8: 0.3901  loss_dice_8: 1.007    time: 1.0417  last_time: 1.0379  data_time: 0.0347  last_data_time: 0.0341   lr: 0.0001  max_mem: 30329M
[08/29 14:41:55] d2.utils.events INFO:  eta: 0:12:06  iter: 299  total_loss: 15.86  loss_ce: 0.202  loss_mask: 0.3661  loss_dice: 0.96  loss_ce_0: 0.1474  loss_mask_0: 0.4172  loss_dice_0: 1.099  loss_ce_1: 0.2222  loss_mask_1: 0.3934  loss_dice_1: 1.061  loss_ce_2: 0.2014  loss_mask_2: 0.3738  loss_dice_2: 1.02  loss_ce_3: 0.2013  loss_mask_3: 0.3743  loss_dice_3: 1.013  loss_ce_4: 0.1942  loss_mask_4: 0.3708  loss_dice_4: 1.005  loss_ce_5: 0.1855  loss_mask_5: 0.3654  loss_dice_5: 1.006  loss_ce_6: 0.1868  loss_mask_6: 0.3636  loss_dice_6: 0.9975  loss_ce_7: 0.183  loss_mask_7: 0.3641  loss_dice_7: 0.9826  loss_ce_8: 0.1826  loss_mask_8: 0.3631  loss_dice_8: 0.9874    time: 1.0416  last_time: 1.0401  data_time: 0.0349  last_data_time: 0.0347   lr: 0.0001  max_mem: 30329M
[08/29 14:42:16] d2.utils.events INFO:  eta: 0:11:46  iter: 319  total_loss: 15.74  loss_ce: 0.1903  loss_mask: 0.3542  loss_dice: 0.9432  loss_ce_0: 0.1846  loss_mask_0: 0.393  loss_dice_0: 1.078  loss_ce_1: 0.2224  loss_mask_1: 0.3775  loss_dice_1: 1.045  loss_ce_2: 0.2054  loss_mask_2: 0.3729  loss_dice_2: 0.9967  loss_ce_3: 0.1929  loss_mask_3: 0.3656  loss_dice_3: 0.9594  loss_ce_4: 0.1859  loss_mask_4: 0.3633  loss_dice_4: 0.9629  loss_ce_5: 0.2043  loss_mask_5: 0.3565  loss_dice_5: 0.9482  loss_ce_6: 0.1981  loss_mask_6: 0.3526  loss_dice_6: 0.9393  loss_ce_7: 0.1963  loss_mask_7: 0.3578  loss_dice_7: 0.9558  loss_ce_8: 0.1863  loss_mask_8: 0.3593  loss_dice_8: 0.9726    time: 1.0415  last_time: 1.0369  data_time: 0.0347  last_data_time: 0.0356   lr: 0.0001  max_mem: 30329M
[08/29 14:42:37] d2.utils.events INFO:  eta: 0:11:25  iter: 339  total_loss: 15.2  loss_ce: 0.166  loss_mask: 0.374  loss_dice: 0.9222  loss_ce_0: 0.1494  loss_mask_0: 0.4144  loss_dice_0: 1.003  loss_ce_1: 0.1841  loss_mask_1: 0.4106  loss_dice_1: 0.9751  loss_ce_2: 0.1552  loss_mask_2: 0.3919  loss_dice_2: 0.949  loss_ce_3: 0.176  loss_mask_3: 0.3962  loss_dice_3: 0.9305  loss_ce_4: 0.167  loss_mask_4: 0.3906  loss_dice_4: 0.9424  loss_ce_5: 0.1533  loss_mask_5: 0.3809  loss_dice_5: 0.9325  loss_ce_6: 0.1439  loss_mask_6: 0.3824  loss_dice_6: 0.9181  loss_ce_7: 0.1464  loss_mask_7: 0.3782  loss_dice_7: 0.9425  loss_ce_8: 0.1543  loss_mask_8: 0.3796  loss_dice_8: 0.9288    time: 1.0416  last_time: 1.0481  data_time: 0.0356  last_data_time: 0.0349   lr: 0.0001  max_mem: 30329M
[08/29 14:42:58] d2.utils.events INFO:  eta: 0:11:04  iter: 359  total_loss: 15.84  loss_ce: 0.2032  loss_mask: 0.3605  loss_dice: 0.9348  loss_ce_0: 0.1788  loss_mask_0: 0.3998  loss_dice_0: 1.068  loss_ce_1: 0.2204  loss_mask_1: 0.3893  loss_dice_1: 0.9938  loss_ce_2: 0.2188  loss_mask_2: 0.3832  loss_dice_2: 0.9837  loss_ce_3: 0.2276  loss_mask_3: 0.3831  loss_dice_3: 0.9738  loss_ce_4: 0.2104  loss_mask_4: 0.3624  loss_dice_4: 0.9587  loss_ce_5: 0.2162  loss_mask_5: 0.3613  loss_dice_5: 0.9529  loss_ce_6: 0.2064  loss_mask_6: 0.3688  loss_dice_6: 0.9492  loss_ce_7: 0.2172  loss_mask_7: 0.3708  loss_dice_7: 0.9225  loss_ce_8: 0.2183  loss_mask_8: 0.3683  loss_dice_8: 0.9279    time: 1.0416  last_time: 1.0459  data_time: 0.0338  last_data_time: 0.0347   lr: 0.0001  max_mem: 30329M
[08/29 14:43:19] d2.utils.events INFO:  eta: 0:10:43  iter: 379  total_loss: 16.07  loss_ce: 0.1547  loss_mask: 0.3787  loss_dice: 1.008  loss_ce_0: 0.1438  loss_mask_0: 0.4232  loss_dice_0: 1.082  loss_ce_1: 0.1702  loss_mask_1: 0.3973  loss_dice_1: 1.044  loss_ce_2: 0.1723  loss_mask_2: 0.3861  loss_dice_2: 1.044  loss_ce_3: 0.2064  loss_mask_3: 0.3865  loss_dice_3: 0.9971  loss_ce_4: 0.1594  loss_mask_4: 0.383  loss_dice_4: 0.9905  loss_ce_5: 0.1586  loss_mask_5: 0.3818  loss_dice_5: 1.016  loss_ce_6: 0.1556  loss_mask_6: 0.3825  loss_dice_6: 1.002  loss_ce_7: 0.141  loss_mask_7: 0.3784  loss_dice_7: 0.9905  loss_ce_8: 0.1611  loss_mask_8: 0.3787  loss_dice_8: 1.002    time: 1.0416  last_time: 1.0444  data_time: 0.0341  last_data_time: 0.0361   lr: 0.0001  max_mem: 30329M
[08/29 14:43:40] d2.utils.events INFO:  eta: 0:10:23  iter: 399  total_loss: 15.21  loss_ce: 0.1543  loss_mask: 0.3415  loss_dice: 0.9614  loss_ce_0: 0.1756  loss_mask_0: 0.3952  loss_dice_0: 1.056  loss_ce_1: 0.2001  loss_mask_1: 0.3927  loss_dice_1: 1.027  loss_ce_2: 0.1659  loss_mask_2: 0.3569  loss_dice_2: 0.9867  loss_ce_3: 0.1654  loss_mask_3: 0.3588  loss_dice_3: 0.9672  loss_ce_4: 0.1667  loss_mask_4: 0.3516  loss_dice_4: 0.9725  loss_ce_5: 0.1718  loss_mask_5: 0.3511  loss_dice_5: 0.9718  loss_ce_6: 0.1897  loss_mask_6: 0.3648  loss_dice_6: 0.984  loss_ce_7: 0.1695  loss_mask_7: 0.3627  loss_dice_7: 0.9756  loss_ce_8: 0.1518  loss_mask_8: 0.3501  loss_dice_8: 0.9752    time: 1.0417  last_time: 1.0541  data_time: 0.0355  last_data_time: 0.0343   lr: 0.0001  max_mem: 30329M
[08/29 14:44:01] d2.utils.events INFO:  eta: 0:10:02  iter: 419  total_loss: 14.51  loss_ce: 0.1633  loss_mask: 0.3814  loss_dice: 0.8841  loss_ce_0: 0.1264  loss_mask_0: 0.4298  loss_dice_0: 0.9601  loss_ce_1: 0.1635  loss_mask_1: 0.4102  loss_dice_1: 0.9587  loss_ce_2: 0.1806  loss_mask_2: 0.3878  loss_dice_2: 0.9197  loss_ce_3: 0.1683  loss_mask_3: 0.3886  loss_dice_3: 0.9308  loss_ce_4: 0.1396  loss_mask_4: 0.3839  loss_dice_4: 0.9143  loss_ce_5: 0.1656  loss_mask_5: 0.3814  loss_dice_5: 0.8999  loss_ce_6: 0.1594  loss_mask_6: 0.3811  loss_dice_6: 0.8964  loss_ce_7: 0.1544  loss_mask_7: 0.3753  loss_dice_7: 0.8802  loss_ce_8: 0.152  loss_mask_8: 0.3791  loss_dice_8: 0.9033    time: 1.0418  last_time: 1.0419  data_time: 0.0347  last_data_time: 0.0365   lr: 0.0001  max_mem: 30329M
[08/29 14:44:22] d2.utils.events INFO:  eta: 0:09:42  iter: 439  total_loss: 15.13  loss_ce: 0.1711  loss_mask: 0.3495  loss_dice: 0.9127  loss_ce_0: 0.1692  loss_mask_0: 0.3921  loss_dice_0: 1.006  loss_ce_1: 0.1883  loss_mask_1: 0.3816  loss_dice_1: 0.9973  loss_ce_2: 0.1905  loss_mask_2: 0.3809  loss_dice_2: 0.9601  loss_ce_3: 0.2046  loss_mask_3: 0.3597  loss_dice_3: 0.9601  loss_ce_4: 0.1971  loss_mask_4: 0.347  loss_dice_4: 0.9239  loss_ce_5: 0.2022  loss_mask_5: 0.351  loss_dice_5: 0.9072  loss_ce_6: 0.1883  loss_mask_6: 0.3463  loss_dice_6: 0.9122  loss_ce_7: 0.1843  loss_mask_7: 0.3455  loss_dice_7: 0.8986  loss_ce_8: 0.1864  loss_mask_8: 0.3531  loss_dice_8: 0.927    time: 1.0419  last_time: 1.0413  data_time: 0.0356  last_data_time: 0.0343   lr: 0.0001  max_mem: 30329M
[08/29 14:44:42] d2.utils.events INFO:  eta: 0:09:21  iter: 459  total_loss: 15.22  loss_ce: 0.1762  loss_mask: 0.3746  loss_dice: 0.9742  loss_ce_0: 0.153  loss_mask_0: 0.417  loss_dice_0: 1.055  loss_ce_1: 0.1945  loss_mask_1: 0.3981  loss_dice_1: 1.031  loss_ce_2: 0.2142  loss_mask_2: 0.3907  loss_dice_2: 1.039  loss_ce_3: 0.1678  loss_mask_3: 0.3772  loss_dice_3: 0.9918  loss_ce_4: 0.1797  loss_mask_4: 0.3855  loss_dice_4: 0.9922  loss_ce_5: 0.1835  loss_mask_5: 0.3875  loss_dice_5: 0.9907  loss_ce_6: 0.1767  loss_mask_6: 0.3817  loss_dice_6: 0.9771  loss_ce_7: 0.1744  loss_mask_7: 0.3836  loss_dice_7: 0.9671  loss_ce_8: 0.1765  loss_mask_8: 0.3767  loss_dice_8: 0.9637    time: 1.0420  last_time: 1.0503  data_time: 0.0350  last_data_time: 0.0362   lr: 0.0001  max_mem: 30329M
[08/29 14:45:03] d2.utils.events INFO:  eta: 0:09:00  iter: 479  total_loss: 15.27  loss_ce: 0.1446  loss_mask: 0.3754  loss_dice: 0.9192  loss_ce_0: 0.154  loss_mask_0: 0.4064  loss_dice_0: 1.035  loss_ce_1: 0.1798  loss_mask_1: 0.4002  loss_dice_1: 1.015  loss_ce_2: 0.1999  loss_mask_2: 0.397  loss_dice_2: 0.9549  loss_ce_3: 0.2195  loss_mask_3: 0.3875  loss_dice_3: 0.9412  loss_ce_4: 0.1789  loss_mask_4: 0.3872  loss_dice_4: 0.93  loss_ce_5: 0.1746  loss_mask_5: 0.3804  loss_dice_5: 0.9197  loss_ce_6: 0.1657  loss_mask_6: 0.3763  loss_dice_6: 0.9473  loss_ce_7: 0.1719  loss_mask_7: 0.3784  loss_dice_7: 0.9442  loss_ce_8: 0.1467  loss_mask_8: 0.3775  loss_dice_8: 0.9378    time: 1.0421  last_time: 1.0350  data_time: 0.0354  last_data_time: 0.0351   lr: 0.0001  max_mem: 30329M
[08/29 14:45:24] d2.utils.events INFO:  eta: 0:08:39  iter: 499  total_loss: 14.55  loss_ce: 0.1293  loss_mask: 0.3785  loss_dice: 0.8928  loss_ce_0: 0.1344  loss_mask_0: 0.4181  loss_dice_0: 1.007  loss_ce_1: 0.1435  loss_mask_1: 0.396  loss_dice_1: 0.988  loss_ce_2: 0.1651  loss_mask_2: 0.3787  loss_dice_2: 0.9432  loss_ce_3: 0.1599  loss_mask_3: 0.3797  loss_dice_3: 0.9145  loss_ce_4: 0.1649  loss_mask_4: 0.3777  loss_dice_4: 0.904  loss_ce_5: 0.1581  loss_mask_5: 0.373  loss_dice_5: 0.9292  loss_ce_6: 0.1411  loss_mask_6: 0.3838  loss_dice_6: 0.9045  loss_ce_7: 0.1443  loss_mask_7: 0.38  loss_dice_7: 0.9026  loss_ce_8: 0.1301  loss_mask_8: 0.3785  loss_dice_8: 0.903    time: 1.0421  last_time: 1.0481  data_time: 0.0357  last_data_time: 0.0353   lr: 0.0001  max_mem: 30329M
[08/29 14:45:45] d2.utils.events INFO:  eta: 0:08:19  iter: 519  total_loss: 14.43  loss_ce: 0.1412  loss_mask: 0.3626  loss_dice: 0.9198  loss_ce_0: 0.1411  loss_mask_0: 0.378  loss_dice_0: 1.002  loss_ce_1: 0.1531  loss_mask_1: 0.366  loss_dice_1: 0.9592  loss_ce_2: 0.1598  loss_mask_2: 0.3691  loss_dice_2: 0.9506  loss_ce_3: 0.1793  loss_mask_3: 0.3554  loss_dice_3: 0.9315  loss_ce_4: 0.1668  loss_mask_4: 0.3553  loss_dice_4: 0.9237  loss_ce_5: 0.1416  loss_mask_5: 0.3657  loss_dice_5: 0.9339  loss_ce_6: 0.1464  loss_mask_6: 0.3643  loss_dice_6: 0.9048  loss_ce_7: 0.1431  loss_mask_7: 0.3665  loss_dice_7: 0.9164  loss_ce_8: 0.1399  loss_mask_8: 0.3636  loss_dice_8: 0.9099    time: 1.0423  last_time: 1.0428  data_time: 0.0355  last_data_time: 0.0345   lr: 0.0001  max_mem: 30329M
[08/29 14:46:06] d2.utils.events INFO:  eta: 0:07:58  iter: 539  total_loss: 14.91  loss_ce: 0.1719  loss_mask: 0.3621  loss_dice: 0.9222  loss_ce_0: 0.1855  loss_mask_0: 0.3985  loss_dice_0: 0.9975  loss_ce_1: 0.1704  loss_mask_1: 0.378  loss_dice_1: 0.9628  loss_ce_2: 0.1909  loss_mask_2: 0.3712  loss_dice_2: 0.927  loss_ce_3: 0.2027  loss_mask_3: 0.3675  loss_dice_3: 0.9304  loss_ce_4: 0.192  loss_mask_4: 0.3628  loss_dice_4: 0.9201  loss_ce_5: 0.1798  loss_mask_5: 0.3677  loss_dice_5: 0.8958  loss_ce_6: 0.1926  loss_mask_6: 0.3628  loss_dice_6: 0.9087  loss_ce_7: 0.1566  loss_mask_7: 0.3654  loss_dice_7: 0.913  loss_ce_8: 0.1696  loss_mask_8: 0.3644  loss_dice_8: 0.9243    time: 1.0424  last_time: 1.0427  data_time: 0.0357  last_data_time: 0.0348   lr: 0.0001  max_mem: 30329M
[08/29 14:46:27] d2.utils.events INFO:  eta: 0:07:37  iter: 559  total_loss: 15.75  loss_ce: 0.1673  loss_mask: 0.3849  loss_dice: 0.9763  loss_ce_0: 0.182  loss_mask_0: 0.4135  loss_dice_0: 1.019  loss_ce_1: 0.2116  loss_mask_1: 0.3929  loss_dice_1: 1.019  loss_ce_2: 0.2039  loss_mask_2: 0.3956  loss_dice_2: 0.9886  loss_ce_3: 0.2129  loss_mask_3: 0.3854  loss_dice_3: 0.9682  loss_ce_4: 0.2176  loss_mask_4: 0.377  loss_dice_4: 0.9699  loss_ce_5: 0.1795  loss_mask_5: 0.3829  loss_dice_5: 0.9572  loss_ce_6: 0.1866  loss_mask_6: 0.3809  loss_dice_6: 0.9831  loss_ce_7: 0.1617  loss_mask_7: 0.3807  loss_dice_7: 0.9633  loss_ce_8: 0.171  loss_mask_8: 0.3839  loss_dice_8: 0.9919    time: 1.0426  last_time: 1.0462  data_time: 0.0359  last_data_time: 0.0325   lr: 0.0001  max_mem: 30329M
[08/29 14:46:48] d2.utils.events INFO:  eta: 0:07:17  iter: 579  total_loss: 15.68  loss_ce: 0.1884  loss_mask: 0.4039  loss_dice: 0.9213  loss_ce_0: 0.2026  loss_mask_0: 0.4175  loss_dice_0: 1.041  loss_ce_1: 0.1935  loss_mask_1: 0.4136  loss_dice_1: 1.022  loss_ce_2: 0.2095  loss_mask_2: 0.3993  loss_dice_2: 0.9808  loss_ce_3: 0.2101  loss_mask_3: 0.4037  loss_dice_3: 0.9519  loss_ce_4: 0.1893  loss_mask_4: 0.4018  loss_dice_4: 0.9278  loss_ce_5: 0.1648  loss_mask_5: 0.4053  loss_dice_5: 0.9561  loss_ce_6: 0.1811  loss_mask_6: 0.4099  loss_dice_6: 0.9442  loss_ce_7: 0.158  loss_mask_7: 0.4058  loss_dice_7: 0.9373  loss_ce_8: 0.1458  loss_mask_8: 0.4081  loss_dice_8: 0.9377    time: 1.0427  last_time: 1.0412  data_time: 0.0353  last_data_time: 0.0324   lr: 0.0001  max_mem: 30329M
[08/29 14:47:09] d2.utils.events INFO:  eta: 0:06:56  iter: 599  total_loss: 14.87  loss_ce: 0.1285  loss_mask: 0.3686  loss_dice: 0.9047  loss_ce_0: 0.1587  loss_mask_0: 0.4245  loss_dice_0: 0.9861  loss_ce_1: 0.1686  loss_mask_1: 0.3983  loss_dice_1: 0.9623  loss_ce_2: 0.171  loss_mask_2: 0.3763  loss_dice_2: 0.9266  loss_ce_3: 0.1888  loss_mask_3: 0.3756  loss_dice_3: 0.9315  loss_ce_4: 0.1655  loss_mask_4: 0.3805  loss_dice_4: 0.9209  loss_ce_5: 0.1497  loss_mask_5: 0.3745  loss_dice_5: 0.9188  loss_ce_6: 0.1453  loss_mask_6: 0.3682  loss_dice_6: 0.9113  loss_ce_7: 0.1529  loss_mask_7: 0.3725  loss_dice_7: 0.9001  loss_ce_8: 0.1426  loss_mask_8: 0.374  loss_dice_8: 0.9161    time: 1.0428  last_time: 1.0407  data_time: 0.0350  last_data_time: 0.0339   lr: 0.0001  max_mem: 30329M
[08/29 14:47:30] d2.utils.events INFO:  eta: 0:06:35  iter: 619  total_loss: 14.93  loss_ce: 0.1621  loss_mask: 0.38  loss_dice: 0.9537  loss_ce_0: 0.1555  loss_mask_0: 0.4101  loss_dice_0: 1.011  loss_ce_1: 0.1759  loss_mask_1: 0.3945  loss_dice_1: 1.011  loss_ce_2: 0.1685  loss_mask_2: 0.3809  loss_dice_2: 0.9814  loss_ce_3: 0.1642  loss_mask_3: 0.3825  loss_dice_3: 0.9485  loss_ce_4: 0.1384  loss_mask_4: 0.3808  loss_dice_4: 0.9651  loss_ce_5: 0.1447  loss_mask_5: 0.3764  loss_dice_5: 0.9562  loss_ce_6: 0.1673  loss_mask_6: 0.3798  loss_dice_6: 0.953  loss_ce_7: 0.1592  loss_mask_7: 0.3815  loss_dice_7: 0.9403  loss_ce_8: 0.1552  loss_mask_8: 0.3822  loss_dice_8: 0.9449    time: 1.0429  last_time: 1.0424  data_time: 0.0356  last_data_time: 0.0348   lr: 0.0001  max_mem: 30329M
[08/29 14:47:51] d2.utils.events INFO:  eta: 0:06:14  iter: 639  total_loss: 15.36  loss_ce: 0.1532  loss_mask: 0.3811  loss_dice: 0.919  loss_ce_0: 0.1421  loss_mask_0: 0.3942  loss_dice_0: 1.015  loss_ce_1: 0.1855  loss_mask_1: 0.4011  loss_dice_1: 0.9519  loss_ce_2: 0.1647  loss_mask_2: 0.3935  loss_dice_2: 0.9494  loss_ce_3: 0.1581  loss_mask_3: 0.3828  loss_dice_3: 0.9462  loss_ce_4: 0.1658  loss_mask_4: 0.3801  loss_dice_4: 0.948  loss_ce_5: 0.1427  loss_mask_5: 0.3824  loss_dice_5: 0.9372  loss_ce_6: 0.1503  loss_mask_6: 0.3907  loss_dice_6: 0.9103  loss_ce_7: 0.1571  loss_mask_7: 0.38  loss_dice_7: 0.9328  loss_ce_8: 0.1579  loss_mask_8: 0.3872  loss_dice_8: 0.9055    time: 1.0429  last_time: 1.0183  data_time: 0.0350  last_data_time: 0.0343   lr: 0.0001  max_mem: 30329M
[08/29 14:48:12] d2.utils.events INFO:  eta: 0:05:54  iter: 659  total_loss: 14.91  loss_ce: 0.1583  loss_mask: 0.3564  loss_dice: 0.9276  loss_ce_0: 0.1636  loss_mask_0: 0.3779  loss_dice_0: 1.006  loss_ce_1: 0.1692  loss_mask_1: 0.3754  loss_dice_1: 0.9619  loss_ce_2: 0.1759  loss_mask_2: 0.3746  loss_dice_2: 0.9383  loss_ce_3: 0.1984  loss_mask_3: 0.3651  loss_dice_3: 0.9149  loss_ce_4: 0.1739  loss_mask_4: 0.351  loss_dice_4: 0.9174  loss_ce_5: 0.1593  loss_mask_5: 0.361  loss_dice_5: 0.9264  loss_ce_6: 0.1683  loss_mask_6: 0.3587  loss_dice_6: 0.929  loss_ce_7: 0.162  loss_mask_7: 0.3586  loss_dice_7: 0.9134  loss_ce_8: 0.1743  loss_mask_8: 0.3553  loss_dice_8: 0.9151    time: 1.0430  last_time: 1.0568  data_time: 0.0362  last_data_time: 0.0345   lr: 0.0001  max_mem: 30329M
[08/29 14:48:33] d2.utils.events INFO:  eta: 0:05:33  iter: 679  total_loss: 15.33  loss_ce: 0.1781  loss_mask: 0.353  loss_dice: 0.9289  loss_ce_0: 0.1728  loss_mask_0: 0.3969  loss_dice_0: 1.015  loss_ce_1: 0.1961  loss_mask_1: 0.3695  loss_dice_1: 0.9773  loss_ce_2: 0.159  loss_mask_2: 0.3535  loss_dice_2: 0.9471  loss_ce_3: 0.1946  loss_mask_3: 0.354  loss_dice_3: 0.9141  loss_ce_4: 0.1969  loss_mask_4: 0.3506  loss_dice_4: 0.9133  loss_ce_5: 0.1734  loss_mask_5: 0.356  loss_dice_5: 0.9307  loss_ce_6: 0.1656  loss_mask_6: 0.3588  loss_dice_6: 0.9069  loss_ce_7: 0.1551  loss_mask_7: 0.3592  loss_dice_7: 0.8993  loss_ce_8: 0.1933  loss_mask_8: 0.3575  loss_dice_8: 0.8985    time: 1.0430  last_time: 1.0413  data_time: 0.0352  last_data_time: 0.0343   lr: 0.0001  max_mem: 30329M
[08/29 14:48:54] d2.utils.events INFO:  eta: 0:05:12  iter: 699  total_loss: 14.56  loss_ce: 0.1418  loss_mask: 0.3573  loss_dice: 0.9113  loss_ce_0: 0.1377  loss_mask_0: 0.3907  loss_dice_0: 0.9898  loss_ce_1: 0.1393  loss_mask_1: 0.3761  loss_dice_1: 0.9805  loss_ce_2: 0.1628  loss_mask_2: 0.3603  loss_dice_2: 0.9633  loss_ce_3: 0.1696  loss_mask_3: 0.3591  loss_dice_3: 0.9366  loss_ce_4: 0.1741  loss_mask_4: 0.3553  loss_dice_4: 0.9214  loss_ce_5: 0.1417  loss_mask_5: 0.3557  loss_dice_5: 0.9127  loss_ce_6: 0.1522  loss_mask_6: 0.357  loss_dice_6: 0.9125  loss_ce_7: 0.1463  loss_mask_7: 0.3534  loss_dice_7: 0.914  loss_ce_8: 0.1568  loss_mask_8: 0.356  loss_dice_8: 0.8847    time: 1.0432  last_time: 1.0625  data_time: 0.0364  last_data_time: 0.0424   lr: 0.0001  max_mem: 30329M
[08/29 14:49:15] d2.utils.events INFO:  eta: 0:04:51  iter: 719  total_loss: 14.75  loss_ce: 0.1872  loss_mask: 0.3609  loss_dice: 0.8879  loss_ce_0: 0.1685  loss_mask_0: 0.3696  loss_dice_0: 1.017  loss_ce_1: 0.1799  loss_mask_1: 0.3644  loss_dice_1: 0.9938  loss_ce_2: 0.2037  loss_mask_2: 0.3647  loss_dice_2: 0.9392  loss_ce_3: 0.2059  loss_mask_3: 0.3575  loss_dice_3: 0.9265  loss_ce_4: 0.2002  loss_mask_4: 0.3606  loss_dice_4: 0.9278  loss_ce_5: 0.1825  loss_mask_5: 0.3535  loss_dice_5: 0.9456  loss_ce_6: 0.2002  loss_mask_6: 0.3579  loss_dice_6: 0.914  loss_ce_7: 0.1878  loss_mask_7: 0.3564  loss_dice_7: 0.926  loss_ce_8: 0.1856  loss_mask_8: 0.3546  loss_dice_8: 0.9037    time: 1.0432  last_time: 1.0451  data_time: 0.0343  last_data_time: 0.0331   lr: 0.0001  max_mem: 30329M
[08/29 14:49:36] d2.utils.events INFO:  eta: 0:04:30  iter: 739  total_loss: 14.07  loss_ce: 0.1266  loss_mask: 0.3607  loss_dice: 0.8773  loss_ce_0: 0.1496  loss_mask_0: 0.3774  loss_dice_0: 0.9469  loss_ce_1: 0.1478  loss_mask_1: 0.3713  loss_dice_1: 0.922  loss_ce_2: 0.1666  loss_mask_2: 0.3629  loss_dice_2: 0.9027  loss_ce_3: 0.1616  loss_mask_3: 0.3672  loss_dice_3: 0.8713  loss_ce_4: 0.1512  loss_mask_4: 0.3631  loss_dice_4: 0.8692  loss_ce_5: 0.1501  loss_mask_5: 0.3577  loss_dice_5: 0.8808  loss_ce_6: 0.1261  loss_mask_6: 0.3666  loss_dice_6: 0.8642  loss_ce_7: 0.1428  loss_mask_7: 0.3602  loss_dice_7: 0.8773  loss_ce_8: 0.1383  loss_mask_8: 0.3646  loss_dice_8: 0.8754    time: 1.0432  last_time: 1.0374  data_time: 0.0344  last_data_time: 0.0348   lr: 0.0001  max_mem: 30329M
[08/29 14:49:57] d2.utils.events INFO:  eta: 0:04:10  iter: 759  total_loss: 14.1  loss_ce: 0.1512  loss_mask: 0.323  loss_dice: 0.8929  loss_ce_0: 0.1719  loss_mask_0: 0.3775  loss_dice_0: 0.9734  loss_ce_1: 0.156  loss_mask_1: 0.3409  loss_dice_1: 0.9527  loss_ce_2: 0.1565  loss_mask_2: 0.3313  loss_dice_2: 0.9088  loss_ce_3: 0.155  loss_mask_3: 0.3245  loss_dice_3: 0.8968  loss_ce_4: 0.143  loss_mask_4: 0.3255  loss_dice_4: 0.9116  loss_ce_5: 0.1532  loss_mask_5: 0.3219  loss_dice_5: 0.9102  loss_ce_6: 0.1476  loss_mask_6: 0.329  loss_dice_6: 0.8945  loss_ce_7: 0.1661  loss_mask_7: 0.322  loss_dice_7: 0.8886  loss_ce_8: 0.1579  loss_mask_8: 0.3219  loss_dice_8: 0.9052    time: 1.0434  last_time: 1.0441  data_time: 0.0362  last_data_time: 0.0347   lr: 0.0001  max_mem: 30329M
[08/29 14:50:18] d2.utils.events INFO:  eta: 0:03:49  iter: 779  total_loss: 13.59  loss_ce: 0.1503  loss_mask: 0.3205  loss_dice: 0.8487  loss_ce_0: 0.1503  loss_mask_0: 0.348  loss_dice_0: 0.9317  loss_ce_1: 0.154  loss_mask_1: 0.34  loss_dice_1: 0.9305  loss_ce_2: 0.1817  loss_mask_2: 0.3288  loss_dice_2: 0.8629  loss_ce_3: 0.1588  loss_mask_3: 0.33  loss_dice_3: 0.8816  loss_ce_4: 0.1596  loss_mask_4: 0.3253  loss_dice_4: 0.8681  loss_ce_5: 0.1459  loss_mask_5: 0.3281  loss_dice_5: 0.8829  loss_ce_6: 0.1572  loss_mask_6: 0.326  loss_dice_6: 0.8589  loss_ce_7: 0.1337  loss_mask_7: 0.3264  loss_dice_7: 0.8639  loss_ce_8: 0.1344  loss_mask_8: 0.3233  loss_dice_8: 0.8528    time: 1.0435  last_time: 1.0611  data_time: 0.0359  last_data_time: 0.0364   lr: 0.0001  max_mem: 30329M
[08/29 14:50:39] d2.utils.events INFO:  eta: 0:03:28  iter: 799  total_loss: 13.83  loss_ce: 0.1336  loss_mask: 0.3445  loss_dice: 0.8499  loss_ce_0: 0.1422  loss_mask_0: 0.3708  loss_dice_0: 0.911  loss_ce_1: 0.1714  loss_mask_1: 0.3604  loss_dice_1: 0.904  loss_ce_2: 0.1568  loss_mask_2: 0.3472  loss_dice_2: 0.8826  loss_ce_3: 0.1273  loss_mask_3: 0.351  loss_dice_3: 0.8569  loss_ce_4: 0.1487  loss_mask_4: 0.3422  loss_dice_4: 0.8889  loss_ce_5: 0.1321  loss_mask_5: 0.3458  loss_dice_5: 0.8641  loss_ce_6: 0.144  loss_mask_6: 0.3423  loss_dice_6: 0.8475  loss_ce_7: 0.1494  loss_mask_7: 0.3466  loss_dice_7: 0.8592  loss_ce_8: 0.1418  loss_mask_8: 0.3463  loss_dice_8: 0.8537    time: 1.0436  last_time: 1.0542  data_time: 0.0346  last_data_time: 0.0349   lr: 0.0001  max_mem: 30329M
[08/29 14:51:00] d2.utils.events INFO:  eta: 0:03:07  iter: 819  total_loss: 14.7  loss_ce: 0.1551  loss_mask: 0.3593  loss_dice: 0.9268  loss_ce_0: 0.1449  loss_mask_0: 0.3968  loss_dice_0: 0.9959  loss_ce_1: 0.1641  loss_mask_1: 0.3811  loss_dice_1: 0.9822  loss_ce_2: 0.1684  loss_mask_2: 0.3681  loss_dice_2: 0.9527  loss_ce_3: 0.1567  loss_mask_3: 0.3636  loss_dice_3: 0.9265  loss_ce_4: 0.1715  loss_mask_4: 0.367  loss_dice_4: 0.9166  loss_ce_5: 0.1693  loss_mask_5: 0.3638  loss_dice_5: 0.9216  loss_ce_6: 0.1412  loss_mask_6: 0.3605  loss_dice_6: 0.9343  loss_ce_7: 0.1467  loss_mask_7: 0.3683  loss_dice_7: 0.9155  loss_ce_8: 0.1498  loss_mask_8: 0.3659  loss_dice_8: 0.9281    time: 1.0436  last_time: 1.0403  data_time: 0.0346  last_data_time: 0.0341   lr: 0.0001  max_mem: 30329M
[08/29 14:51:21] d2.utils.events INFO:  eta: 0:02:46  iter: 839  total_loss: 13.78  loss_ce: 0.1302  loss_mask: 0.3582  loss_dice: 0.8905  loss_ce_0: 0.1413  loss_mask_0: 0.3813  loss_dice_0: 0.9335  loss_ce_1: 0.1511  loss_mask_1: 0.373  loss_dice_1: 0.9327  loss_ce_2: 0.186  loss_mask_2: 0.3599  loss_dice_2: 0.9079  loss_ce_3: 0.1415  loss_mask_3: 0.3652  loss_dice_3: 0.9082  loss_ce_4: 0.1235  loss_mask_4: 0.3606  loss_dice_4: 0.8947  loss_ce_5: 0.1377  loss_mask_5: 0.356  loss_dice_5: 0.8856  loss_ce_6: 0.1391  loss_mask_6: 0.358  loss_dice_6: 0.8662  loss_ce_7: 0.1142  loss_mask_7: 0.3542  loss_dice_7: 0.8654  loss_ce_8: 0.1343  loss_mask_8: 0.3571  loss_dice_8: 0.8917    time: 1.0437  last_time: 1.0501  data_time: 0.0363  last_data_time: 0.0376   lr: 0.0001  max_mem: 30329M
[08/29 14:51:42] d2.utils.events INFO:  eta: 0:02:25  iter: 859  total_loss: 14.57  loss_ce: 0.1624  loss_mask: 0.3313  loss_dice: 0.8742  loss_ce_0: 0.146  loss_mask_0: 0.3449  loss_dice_0: 0.9612  loss_ce_1: 0.1943  loss_mask_1: 0.3413  loss_dice_1: 0.9386  loss_ce_2: 0.1657  loss_mask_2: 0.3343  loss_dice_2: 0.9398  loss_ce_3: 0.1675  loss_mask_3: 0.3324  loss_dice_3: 0.9125  loss_ce_4: 0.1744  loss_mask_4: 0.3322  loss_dice_4: 0.904  loss_ce_5: 0.1589  loss_mask_5: 0.3284  loss_dice_5: 0.901  loss_ce_6: 0.1551  loss_mask_6: 0.3297  loss_dice_6: 0.8961  loss_ce_7: 0.145  loss_mask_7: 0.3317  loss_dice_7: 0.8899  loss_ce_8: 0.1426  loss_mask_8: 0.3309  loss_dice_8: 0.8776    time: 1.0438  last_time: 1.0751  data_time: 0.0365  last_data_time: 0.0385   lr: 0.0001  max_mem: 30329M
[08/29 14:52:03] d2.utils.events INFO:  eta: 0:02:05  iter: 879  total_loss: 14.35  loss_ce: 0.1506  loss_mask: 0.3614  loss_dice: 0.8755  loss_ce_0: 0.1587  loss_mask_0: 0.4028  loss_dice_0: 0.9596  loss_ce_1: 0.1543  loss_mask_1: 0.3893  loss_dice_1: 0.9452  loss_ce_2: 0.1525  loss_mask_2: 0.3749  loss_dice_2: 0.9221  loss_ce_3: 0.1413  loss_mask_3: 0.3763  loss_dice_3: 0.8965  loss_ce_4: 0.1172  loss_mask_4: 0.3741  loss_dice_4: 0.8986  loss_ce_5: 0.1399  loss_mask_5: 0.3723  loss_dice_5: 0.8727  loss_ce_6: 0.1502  loss_mask_6: 0.376  loss_dice_6: 0.8663  loss_ce_7: 0.1457  loss_mask_7: 0.3712  loss_dice_7: 0.8809  loss_ce_8: 0.138  loss_mask_8: 0.3646  loss_dice_8: 0.8876    time: 1.0440  last_time: 1.0517  data_time: 0.0384  last_data_time: 0.0396   lr: 0.0001  max_mem: 30329M
[08/29 14:52:24] d2.utils.events INFO:  eta: 0:01:44  iter: 899  total_loss: 13.3  loss_ce: 0.1565  loss_mask: 0.3277  loss_dice: 0.8159  loss_ce_0: 0.131  loss_mask_0: 0.3514  loss_dice_0: 0.9209  loss_ce_1: 0.1527  loss_mask_1: 0.3337  loss_dice_1: 0.8941  loss_ce_2: 0.1581  loss_mask_2: 0.3255  loss_dice_2: 0.863  loss_ce_3: 0.1504  loss_mask_3: 0.3251  loss_dice_3: 0.8341  loss_ce_4: 0.1564  loss_mask_4: 0.3218  loss_dice_4: 0.8476  loss_ce_5: 0.1448  loss_mask_5: 0.3225  loss_dice_5: 0.8441  loss_ce_6: 0.1445  loss_mask_6: 0.3218  loss_dice_6: 0.8397  loss_ce_7: 0.1454  loss_mask_7: 0.3195  loss_dice_7: 0.8248  loss_ce_8: 0.1443  loss_mask_8: 0.3225  loss_dice_8: 0.8299    time: 1.0442  last_time: 1.0564  data_time: 0.0379  last_data_time: 0.0394   lr: 0.0001  max_mem: 30329M
[08/29 14:52:45] d2.utils.events INFO:  eta: 0:01:23  iter: 919  total_loss: 14.8  loss_ce: 0.1538  loss_mask: 0.3376  loss_dice: 0.9261  loss_ce_0: 0.1635  loss_mask_0: 0.4031  loss_dice_0: 1.016  loss_ce_1: 0.1762  loss_mask_1: 0.383  loss_dice_1: 0.9691  loss_ce_2: 0.1715  loss_mask_2: 0.377  loss_dice_2: 0.9444  loss_ce_3: 0.1837  loss_mask_3: 0.3499  loss_dice_3: 0.9201  loss_ce_4: 0.1597  loss_mask_4: 0.3562  loss_dice_4: 0.9348  loss_ce_5: 0.1675  loss_mask_5: 0.3508  loss_dice_5: 0.9281  loss_ce_6: 0.1641  loss_mask_6: 0.3484  loss_dice_6: 0.9108  loss_ce_7: 0.157  loss_mask_7: 0.3471  loss_dice_7: 0.9225  loss_ce_8: 0.1629  loss_mask_8: 0.3492  loss_dice_8: 0.915    time: 1.0443  last_time: 1.0423  data_time: 0.0388  last_data_time: 0.0384   lr: 0.0001  max_mem: 30329M
[08/29 14:53:06] d2.utils.events INFO:  eta: 0:01:02  iter: 939  total_loss: 14.14  loss_ce: 0.1308  loss_mask: 0.3632  loss_dice: 0.9  loss_ce_0: 0.1508  loss_mask_0: 0.4007  loss_dice_0: 0.9692  loss_ce_1: 0.1403  loss_mask_1: 0.3767  loss_dice_1: 0.96  loss_ce_2: 0.1716  loss_mask_2: 0.3608  loss_dice_2: 0.9215  loss_ce_3: 0.1551  loss_mask_3: 0.364  loss_dice_3: 0.8975  loss_ce_4: 0.1418  loss_mask_4: 0.3596  loss_dice_4: 0.9123  loss_ce_5: 0.1302  loss_mask_5: 0.3579  loss_dice_5: 0.9056  loss_ce_6: 0.1168  loss_mask_6: 0.362  loss_dice_6: 0.882  loss_ce_7: 0.1179  loss_mask_7: 0.3637  loss_dice_7: 0.887  loss_ce_8: 0.135  loss_mask_8: 0.3581  loss_dice_8: 0.8907    time: 1.0446  last_time: 1.0470  data_time: 0.0390  last_data_time: 0.0380   lr: 0.0001  max_mem: 30329M
[08/29 14:53:27] d2.utils.events INFO:  eta: 0:00:41  iter: 959  total_loss: 14.5  loss_ce: 0.1516  loss_mask: 0.3666  loss_dice: 0.8882  loss_ce_0: 0.172  loss_mask_0: 0.412  loss_dice_0: 0.9437  loss_ce_1: 0.1848  loss_mask_1: 0.3935  loss_dice_1: 0.9434  loss_ce_2: 0.1762  loss_mask_2: 0.3768  loss_dice_2: 0.912  loss_ce_3: 0.1762  loss_mask_3: 0.371  loss_dice_3: 0.8871  loss_ce_4: 0.1597  loss_mask_4: 0.3783  loss_dice_4: 0.9066  loss_ce_5: 0.1756  loss_mask_5: 0.3767  loss_dice_5: 0.8862  loss_ce_6: 0.1572  loss_mask_6: 0.3692  loss_dice_6: 0.8544  loss_ce_7: 0.1644  loss_mask_7: 0.3747  loss_dice_7: 0.8746  loss_ce_8: 0.1491  loss_mask_8: 0.3688  loss_dice_8: 0.8775    time: 1.0448  last_time: 1.0589  data_time: 0.0403  last_data_time: 0.0403   lr: 0.0001  max_mem: 30329M
[08/29 14:53:49] d2.utils.events INFO:  eta: 0:00:20  iter: 979  total_loss: 13.92  loss_ce: 0.1362  loss_mask: 0.3376  loss_dice: 0.8763  loss_ce_0: 0.1372  loss_mask_0: 0.3617  loss_dice_0: 0.933  loss_ce_1: 0.1636  loss_mask_1: 0.3463  loss_dice_1: 0.9174  loss_ce_2: 0.1669  loss_mask_2: 0.3405  loss_dice_2: 0.9038  loss_ce_3: 0.1643  loss_mask_3: 0.3427  loss_dice_3: 0.8748  loss_ce_4: 0.1446  loss_mask_4: 0.3434  loss_dice_4: 0.8903  loss_ce_5: 0.1418  loss_mask_5: 0.3399  loss_dice_5: 0.9085  loss_ce_6: 0.1265  loss_mask_6: 0.3455  loss_dice_6: 0.8896  loss_ce_7: 0.1341  loss_mask_7: 0.3418  loss_dice_7: 0.8867  loss_ce_8: 0.1458  loss_mask_8: 0.3419  loss_dice_8: 0.8846    time: 1.0449  last_time: 1.0486  data_time: 0.0379  last_data_time: 0.0405   lr: 0.0001  max_mem: 30329M
[08/29 14:54:10] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/model_final.pth
[08/29 14:54:16] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 14.23  loss_ce: 0.1502  loss_mask: 0.344  loss_dice: 0.9203  loss_ce_0: 0.1545  loss_mask_0: 0.3725  loss_dice_0: 0.9907  loss_ce_1: 0.1907  loss_mask_1: 0.3726  loss_dice_1: 0.9438  loss_ce_2: 0.1706  loss_mask_2: 0.3549  loss_dice_2: 0.9277  loss_ce_3: 0.1407  loss_mask_3: 0.3548  loss_dice_3: 0.9276  loss_ce_4: 0.152  loss_mask_4: 0.3461  loss_dice_4: 0.9205  loss_ce_5: 0.1227  loss_mask_5: 0.3516  loss_dice_5: 0.9508  loss_ce_6: 0.1281  loss_mask_6: 0.3439  loss_dice_6: 0.9218  loss_ce_7: 0.1303  loss_mask_7: 0.3437  loss_dice_7: 0.9027  loss_ce_8: 0.1402  loss_mask_8: 0.3402  loss_dice_8: 0.936    time: 1.0450  last_time: 1.0515  data_time: 0.0369  last_data_time: 0.0363   lr: 0.0001  max_mem: 30329M
[08/29 14:54:16] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:17:22 (1.0450 s / it)
[08/29 14:54:16] d2.engine.hooks INFO: Total training time: 0:17:31 (0:00:09 on hooks)
[08/29 14:54:16] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/29 14:54:16] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/29 14:54:16] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/29 14:54:16] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/29 14:54:16] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/29 14:54:16] d2.evaluation.evaluator INFO: Start inference on 500 batches
[08/29 14:54:21] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0040 s/iter. Inference: 0.2831 s/iter. Eval: 0.0656 s/iter. Total: 0.3527 s/iter. ETA=0:02:52
[08/29 14:54:26] d2.evaluation.evaluator INFO: Inference done 26/500. Dataloading: 0.0051 s/iter. Inference: 0.2807 s/iter. Eval: 0.0667 s/iter. Total: 0.3525 s/iter. ETA=0:02:47
[08/29 14:54:32] d2.evaluation.evaluator INFO: Inference done 41/500. Dataloading: 0.0053 s/iter. Inference: 0.2811 s/iter. Eval: 0.0666 s/iter. Total: 0.3531 s/iter. ETA=0:02:42
[08/29 14:54:37] d2.evaluation.evaluator INFO: Inference done 56/500. Dataloading: 0.0053 s/iter. Inference: 0.2812 s/iter. Eval: 0.0661 s/iter. Total: 0.3527 s/iter. ETA=0:02:36
[08/29 14:54:42] d2.evaluation.evaluator INFO: Inference done 71/500. Dataloading: 0.0054 s/iter. Inference: 0.2818 s/iter. Eval: 0.0661 s/iter. Total: 0.3534 s/iter. ETA=0:02:31
[08/29 14:54:48] d2.evaluation.evaluator INFO: Inference done 86/500. Dataloading: 0.0053 s/iter. Inference: 0.2821 s/iter. Eval: 0.0660 s/iter. Total: 0.3535 s/iter. ETA=0:02:26
[08/29 14:54:53] d2.evaluation.evaluator INFO: Inference done 101/500. Dataloading: 0.0054 s/iter. Inference: 0.2815 s/iter. Eval: 0.0661 s/iter. Total: 0.3531 s/iter. ETA=0:02:20
[08/29 14:54:58] d2.evaluation.evaluator INFO: Inference done 116/500. Dataloading: 0.0054 s/iter. Inference: 0.2815 s/iter. Eval: 0.0660 s/iter. Total: 0.3530 s/iter. ETA=0:02:15
[08/29 14:55:03] d2.evaluation.evaluator INFO: Inference done 131/500. Dataloading: 0.0054 s/iter. Inference: 0.2816 s/iter. Eval: 0.0660 s/iter. Total: 0.3531 s/iter. ETA=0:02:10
[08/29 14:55:09] d2.evaluation.evaluator INFO: Inference done 146/500. Dataloading: 0.0054 s/iter. Inference: 0.2815 s/iter. Eval: 0.0659 s/iter. Total: 0.3528 s/iter. ETA=0:02:04
[08/29 14:55:14] d2.evaluation.evaluator INFO: Inference done 161/500. Dataloading: 0.0054 s/iter. Inference: 0.2813 s/iter. Eval: 0.0659 s/iter. Total: 0.3527 s/iter. ETA=0:01:59
[08/29 14:55:19] d2.evaluation.evaluator INFO: Inference done 176/500. Dataloading: 0.0054 s/iter. Inference: 0.2811 s/iter. Eval: 0.0658 s/iter. Total: 0.3524 s/iter. ETA=0:01:54
[08/29 14:55:24] d2.evaluation.evaluator INFO: Inference done 191/500. Dataloading: 0.0055 s/iter. Inference: 0.2811 s/iter. Eval: 0.0657 s/iter. Total: 0.3524 s/iter. ETA=0:01:48
[08/29 14:55:30] d2.evaluation.evaluator INFO: Inference done 206/500. Dataloading: 0.0055 s/iter. Inference: 0.2810 s/iter. Eval: 0.0657 s/iter. Total: 0.3523 s/iter. ETA=0:01:43
[08/29 14:55:35] d2.evaluation.evaluator INFO: Inference done 221/500. Dataloading: 0.0055 s/iter. Inference: 0.2810 s/iter. Eval: 0.0656 s/iter. Total: 0.3522 s/iter. ETA=0:01:38
[08/29 14:55:40] d2.evaluation.evaluator INFO: Inference done 236/500. Dataloading: 0.0055 s/iter. Inference: 0.2809 s/iter. Eval: 0.0656 s/iter. Total: 0.3520 s/iter. ETA=0:01:32
[08/29 14:55:45] d2.evaluation.evaluator INFO: Inference done 251/500. Dataloading: 0.0055 s/iter. Inference: 0.2807 s/iter. Eval: 0.0656 s/iter. Total: 0.3519 s/iter. ETA=0:01:27
[08/29 14:55:51] d2.evaluation.evaluator INFO: Inference done 266/500. Dataloading: 0.0055 s/iter. Inference: 0.2806 s/iter. Eval: 0.0656 s/iter. Total: 0.3518 s/iter. ETA=0:01:22
[08/29 14:55:56] d2.evaluation.evaluator INFO: Inference done 281/500. Dataloading: 0.0055 s/iter. Inference: 0.2806 s/iter. Eval: 0.0656 s/iter. Total: 0.3518 s/iter. ETA=0:01:17
[08/29 14:56:01] d2.evaluation.evaluator INFO: Inference done 296/500. Dataloading: 0.0055 s/iter. Inference: 0.2807 s/iter. Eval: 0.0658 s/iter. Total: 0.3520 s/iter. ETA=0:01:11
[08/29 14:56:06] d2.evaluation.evaluator INFO: Inference done 310/500. Dataloading: 0.0055 s/iter. Inference: 0.2808 s/iter. Eval: 0.0661 s/iter. Total: 0.3524 s/iter. ETA=0:01:06
[08/29 14:56:12] d2.evaluation.evaluator INFO: Inference done 325/500. Dataloading: 0.0055 s/iter. Inference: 0.2808 s/iter. Eval: 0.0660 s/iter. Total: 0.3523 s/iter. ETA=0:01:01
[08/29 14:56:17] d2.evaluation.evaluator INFO: Inference done 340/500. Dataloading: 0.0054 s/iter. Inference: 0.2808 s/iter. Eval: 0.0660 s/iter. Total: 0.3524 s/iter. ETA=0:00:56
[08/29 14:56:22] d2.evaluation.evaluator INFO: Inference done 355/500. Dataloading: 0.0054 s/iter. Inference: 0.2809 s/iter. Eval: 0.0660 s/iter. Total: 0.3525 s/iter. ETA=0:00:51
[08/29 14:56:28] d2.evaluation.evaluator INFO: Inference done 370/500. Dataloading: 0.0054 s/iter. Inference: 0.2810 s/iter. Eval: 0.0660 s/iter. Total: 0.3525 s/iter. ETA=0:00:45
[08/29 14:56:33] d2.evaluation.evaluator INFO: Inference done 385/500. Dataloading: 0.0054 s/iter. Inference: 0.2809 s/iter. Eval: 0.0660 s/iter. Total: 0.3525 s/iter. ETA=0:00:40
[08/29 14:56:38] d2.evaluation.evaluator INFO: Inference done 400/500. Dataloading: 0.0054 s/iter. Inference: 0.2809 s/iter. Eval: 0.0661 s/iter. Total: 0.3524 s/iter. ETA=0:00:35
[08/29 14:56:43] d2.evaluation.evaluator INFO: Inference done 415/500. Dataloading: 0.0054 s/iter. Inference: 0.2808 s/iter. Eval: 0.0660 s/iter. Total: 0.3523 s/iter. ETA=0:00:29
[08/29 14:56:49] d2.evaluation.evaluator INFO: Inference done 430/500. Dataloading: 0.0054 s/iter. Inference: 0.2809 s/iter. Eval: 0.0660 s/iter. Total: 0.3523 s/iter. ETA=0:00:24
[08/29 14:56:54] d2.evaluation.evaluator INFO: Inference done 445/500. Dataloading: 0.0054 s/iter. Inference: 0.2809 s/iter. Eval: 0.0660 s/iter. Total: 0.3524 s/iter. ETA=0:00:19
[08/29 14:56:59] d2.evaluation.evaluator INFO: Inference done 460/500. Dataloading: 0.0054 s/iter. Inference: 0.2809 s/iter. Eval: 0.0660 s/iter. Total: 0.3524 s/iter. ETA=0:00:14
[08/29 14:57:05] d2.evaluation.evaluator INFO: Inference done 475/500. Dataloading: 0.0054 s/iter. Inference: 0.2810 s/iter. Eval: 0.0659 s/iter. Total: 0.3524 s/iter. ETA=0:00:08
[08/29 14:57:10] d2.evaluation.evaluator INFO: Inference done 490/500. Dataloading: 0.0054 s/iter. Inference: 0.2809 s/iter. Eval: 0.0659 s/iter. Total: 0.3523 s/iter. ETA=0:00:03
[08/29 14:57:13] d2.evaluation.evaluator INFO: Total inference time: 0:02:54.538623 (0.352603 s / iter per device, on 1 devices)
[08/29 14:57:13] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:19 (0.280966 s / iter per device, on 1 devices)
[08/29 14:57:13] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalobkjbxhk ...
[08/29 14:57:30] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 39.642 | 47.698 | 47.424 |      19       |
| Things | 0.000  | 0.000  | 0.000  |       8       |
| Stuff  | 68.473 | 82.388 | 81.914 |      11       |
[08/29 14:57:30] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.643 | 98.049 | 99.586 |     Stuff     |
| class_8  | 76.293 | 84.441 | 90.351 |     Stuff     |
| class_11 | 88.043 | 90.346 | 97.452 |     Stuff     |
| class_12 | 47.406 | 80.148 | 59.148 |     Stuff     |
| class_13 | 44.816 | 75.723 | 59.184 |     Stuff     |
| class_17 | 57.243 | 67.289 | 85.072 |     Stuff     |
| class_19 | 53.372 | 71.080 | 75.087 |     Stuff     |
| class_20 | 71.755 | 79.890 | 89.818 |     Stuff     |
| class_21 | 89.925 | 90.856 | 98.975 |     Stuff     |
| class_22 | 38.739 | 76.671 | 50.526 |     Stuff     |
| class_23 | 87.971 | 91.777 | 95.853 |     Stuff     |
| class_24 | 0.000  | 0.000  | 0.000  |    Things     |
| class_25 | 0.000  | 0.000  | 0.000  |    Things     |
| class_26 | 0.000  | 0.000  | 0.000  |    Things     |
| class_27 | 0.000  | 0.000  | 0.000  |    Things     |
| class_28 | 0.000  | 0.000  | 0.000  |    Things     |
| class_31 | 0.000  | 0.000  | 0.000  |    Things     |
| class_32 | 0.000  | 0.000  | 0.000  |    Things     |
| class_33 | 0.000  | 0.000  | 0.000  |    Things     |
[08/29 14:57:30] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/29 14:57:30] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/29 14:57:30] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/29 14:57:30] d2.evaluation.testing INFO: copypaste: 39.6424,47.6984,47.4237,0.0000,0.0000,0.0000,68.4733,82.3881,81.9136,97.6434,98.0494,99.5859,76.2931,84.4409,90.3509,88.0431,90.3455,97.4516,47.4058,80.1480,59.1479,44.8155,75.7227,59.1837,57.2435,67.2886,85.0716,53.3716,71.0802,75.0865,71.7555,79.8900,89.8178,89.9249,90.8558,98.9754,38.7392,76.6713,50.5263,87.9708,91.7772,95.8525,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000
[09/05 10:22:06] detectron2 INFO: Rank of current process: 0. World size: 1
[09/05 10:22:07] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/05 10:22:07] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/cl_exp_008_19.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/05 10:22:07] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/cl_exp_008_19.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[09/05 10:22:07] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: convnext_large_d_320
    CLIP_PRETRAINED_WEIGHTS: laion2b_s29b_b131k_ft_soup
    EMBED_DIM: 768
    ENSEMBLE_ON_VALID_MASK: false
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/05 10:22:07] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/config.yaml
[09/05 10:22:07] d2.utils.env INFO: Using a generated random seed 10978649
[09/05 10:22:22] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): TimmModel(
        (trunk): ConvNeXt(
          (stem): Sequential(
            (0): Conv2d(3, 192, kernel_size=(4, 4), stride=(4, 4))
            (1): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
          )
          (stages): Sequential(
            (0): ConvNeXtStage(
              (downsample): Identity()
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): Identity()
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.003)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(192, 192, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=192)
                  (norm): LayerNorm((192,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=192, out_features=768, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=768, out_features=192, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.006)
                )
              )
            )
            (1): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((192,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(192, 384, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.009)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.011)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(384, 384, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=384)
                  (norm): LayerNorm((384,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=384, out_features=1536, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=1536, out_features=384, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.014)
                )
              )
            )
            (2): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((384,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(384, 768, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.017)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.020)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.023)
                )
                (3): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.026)
                )
                (4): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.029)
                )
                (5): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.031)
                )
                (6): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.034)
                )
                (7): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.037)
                )
                (8): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.040)
                )
                (9): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.043)
                )
                (10): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.046)
                )
                (11): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.049)
                )
                (12): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.051)
                )
                (13): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.054)
                )
                (14): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.057)
                )
                (15): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.060)
                )
                (16): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.063)
                )
                (17): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.066)
                )
                (18): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.069)
                )
                (19): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.071)
                )
                (20): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.074)
                )
                (21): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.077)
                )
                (22): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.080)
                )
                (23): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.083)
                )
                (24): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.086)
                )
                (25): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.089)
                )
                (26): ConvNeXtBlock(
                  (conv_dw): Conv2d(768, 768, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=768)
                  (norm): LayerNorm((768,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=768, out_features=3072, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=3072, out_features=768, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.091)
                )
              )
            )
            (3): ConvNeXtStage(
              (downsample): Sequential(
                (0): LayerNorm2d((768,), eps=1e-06, elementwise_affine=True)
                (1): Conv2d(768, 1536, kernel_size=(2, 2), stride=(2, 2))
              )
              (blocks): Sequential(
                (0): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.094)
                )
                (1): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.097)
                )
                (2): ConvNeXtBlock(
                  (conv_dw): Conv2d(1536, 1536, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), groups=1536)
                  (norm): LayerNorm((1536,), eps=1e-06, elementwise_affine=True)
                  (mlp): Mlp(
                    (fc1): Linear(in_features=1536, out_features=6144, bias=True)
                    (act): GELU()
                    (drop1): Dropout(p=0.0, inplace=False)
                    (norm): Identity()
                    (fc2): Linear(in_features=6144, out_features=1536, bias=True)
                    (drop2): Dropout(p=0.0, inplace=False)
                  )
                  (shortcut): Identity()
                  (drop_path): DropPath(drop_prob=0.100)
                )
              )
            )
          )
          (norm_pre): Identity()
          (head): NormMlpClassifierHead(
            (global_pool): SelectAdaptivePool2d(pool_type=avg, flatten=Identity())
            (norm): LayerNorm2d((1536,), eps=1e-06, elementwise_affine=True)
            (flatten): Flatten(start_dim=1, end_dim=-1)
            (pre_logits): Identity()
            (drop): Dropout(p=0.0, inplace=False)
            (fc): Identity()
          )
        )
        (head): Sequential(
          (mlp): Mlp(
            (fc1): Linear(in_features=1536, out_features=1536, bias=True)
            (act): GELU(approximate='none')
            (drop1): Dropout(p=0.0, inplace=False)
            (norm): Identity()
            (fc2): Linear(in_features=1536, out_features=768, bias=False)
            (drop2): Dropout(p=0, inplace=False)
          )
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-15): 16 x ResidualAttentionBlock(
            (ln_1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=768, out_features=768, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=768, out_features=3072, bias=True)
              (gelu): GELU(approximate='none')
              (c_proj): Linear(in_features=3072, out_features=768, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 768)
      (ln_final): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(768, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        192, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=768, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 768)
)
[09/05 10:22:22] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/05 10:22:22] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/05 10:22:22] d2.data.build INFO: Using training sampler TrainingSampler
[09/05 10:22:22] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/05 10:22:22] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/05 10:22:22] d2.data.common INFO: Serialized dataset takes 2.16 MiB
[09/05 10:22:22] d2.data.build INFO: Making batched data loader with batch_size=8
[09/05 10:22:22] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/05 10:22:22] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth ...
[09/05 10:22:22] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth ...
[09/05 10:22:28] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[09/05 10:22:28] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.12.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.13.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.14.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.15.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.head.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.head.mlp.fc2.weight[0m
[34mbackbone.clip_model.visual.trunk.head.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.0.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.downsample.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.1.downsample.1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.10.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.11.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.12.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.13.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.14.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.15.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.16.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.17.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.18.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.19.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.20.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.21.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.22.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.23.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.24.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.25.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.26.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.3.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.4.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.5.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.6.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.7.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.8.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.blocks.9.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.downsample.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.2.downsample.1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.0.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.1.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.conv_dw.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.gamma[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.mlp.fc1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.mlp.fc2.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.blocks.2.norm.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.downsample.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stages.3.downsample.1.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stem.0.{bias, weight}[0m
[34mbackbone.clip_model.visual.trunk.stem.1.{bias, weight}[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[09/05 10:22:28] d2.engine.train_loop INFO: Starting training from iteration 0
[09/05 10:22:53] d2.utils.events INFO:  eta: 0:17:08  iter: 19  total_loss: 26.57  loss_ce: 0.5804  loss_mask: 0.5843  loss_dice: 1.419  loss_ce_0: 0.6897  loss_mask_0: 0.6817  loss_dice_0: 1.675  loss_ce_1: 0.6375  loss_mask_1: 0.6697  loss_dice_1: 1.578  loss_ce_2: 0.6509  loss_mask_2: 0.5966  loss_dice_2: 1.555  loss_ce_3: 0.575  loss_mask_3: 0.6004  loss_dice_3: 1.497  loss_ce_4: 0.5529  loss_mask_4: 0.5991  loss_dice_4: 1.463  loss_ce_5: 0.538  loss_mask_5: 0.6013  loss_dice_5: 1.453  loss_ce_6: 0.5446  loss_mask_6: 0.5838  loss_dice_6: 1.419  loss_ce_7: 0.5497  loss_mask_7: 0.5907  loss_dice_7: 1.388  loss_ce_8: 0.5717  loss_mask_8: 0.5838  loss_dice_8: 1.401    time: 1.0630  last_time: 1.0512  data_time: 0.0855  last_data_time: 0.0367   lr: 0.0001  max_mem: 30329M
[09/05 10:23:15] d2.utils.events INFO:  eta: 0:16:46  iter: 39  total_loss: 19.86  loss_ce: 0.2443  loss_mask: 0.4883  loss_dice: 1.155  loss_ce_0: 0.3189  loss_mask_0: 0.5805  loss_dice_0: 1.3  loss_ce_1: 0.3107  loss_mask_1: 0.5209  loss_dice_1: 1.235  loss_ce_2: 0.3096  loss_mask_2: 0.5046  loss_dice_2: 1.223  loss_ce_3: 0.2783  loss_mask_3: 0.4868  loss_dice_3: 1.177  loss_ce_4: 0.2851  loss_mask_4: 0.4867  loss_dice_4: 1.163  loss_ce_5: 0.2592  loss_mask_5: 0.49  loss_dice_5: 1.18  loss_ce_6: 0.2843  loss_mask_6: 0.4813  loss_dice_6: 1.14  loss_ce_7: 0.2434  loss_mask_7: 0.4844  loss_dice_7: 1.152  loss_ce_8: 0.2313  loss_mask_8: 0.4885  loss_dice_8: 1.154    time: 1.0557  last_time: 1.0723  data_time: 0.0418  last_data_time: 0.0469   lr: 0.0001  max_mem: 30329M
[09/05 10:23:37] d2.utils.events INFO:  eta: 0:16:26  iter: 59  total_loss: 17.91  loss_ce: 0.2025  loss_mask: 0.4452  loss_dice: 1.085  loss_ce_0: 0.2632  loss_mask_0: 0.5099  loss_dice_0: 1.206  loss_ce_1: 0.2277  loss_mask_1: 0.4688  loss_dice_1: 1.142  loss_ce_2: 0.2124  loss_mask_2: 0.4532  loss_dice_2: 1.116  loss_ce_3: 0.2103  loss_mask_3: 0.4547  loss_dice_3: 1.077  loss_ce_4: 0.2183  loss_mask_4: 0.4492  loss_dice_4: 1.084  loss_ce_5: 0.2095  loss_mask_5: 0.4479  loss_dice_5: 1.098  loss_ce_6: 0.2092  loss_mask_6: 0.45  loss_dice_6: 1.07  loss_ce_7: 0.183  loss_mask_7: 0.4475  loss_dice_7: 1.088  loss_ce_8: 0.1853  loss_mask_8: 0.4395  loss_dice_8: 1.083    time: 1.0551  last_time: 1.0783  data_time: 0.0400  last_data_time: 0.0431   lr: 0.0001  max_mem: 30329M
[09/05 10:23:58] d2.utils.events INFO:  eta: 0:16:05  iter: 79  total_loss: 17.94  loss_ce: 0.1923  loss_mask: 0.4587  loss_dice: 1.074  loss_ce_0: 0.2448  loss_mask_0: 0.4956  loss_dice_0: 1.227  loss_ce_1: 0.2753  loss_mask_1: 0.4661  loss_dice_1: 1.15  loss_ce_2: 0.268  loss_mask_2: 0.4546  loss_dice_2: 1.109  loss_ce_3: 0.2176  loss_mask_3: 0.4503  loss_dice_3: 1.09  loss_ce_4: 0.2307  loss_mask_4: 0.4481  loss_dice_4: 1.087  loss_ce_5: 0.1841  loss_mask_5: 0.4534  loss_dice_5: 1.101  loss_ce_6: 0.198  loss_mask_6: 0.4628  loss_dice_6: 1.085  loss_ce_7: 0.1985  loss_mask_7: 0.4545  loss_dice_7: 1.076  loss_ce_8: 0.193  loss_mask_8: 0.4568  loss_dice_8: 1.05    time: 1.0541  last_time: 1.0597  data_time: 0.0424  last_data_time: 0.0469   lr: 0.0001  max_mem: 30329M
[09/05 10:24:20] d2.utils.events INFO:  eta: 0:15:43  iter: 99  total_loss: 17.83  loss_ce: 0.2096  loss_mask: 0.4409  loss_dice: 1.075  loss_ce_0: 0.2416  loss_mask_0: 0.4821  loss_dice_0: 1.194  loss_ce_1: 0.2966  loss_mask_1: 0.4627  loss_dice_1: 1.124  loss_ce_2: 0.2495  loss_mask_2: 0.4482  loss_dice_2: 1.102  loss_ce_3: 0.2599  loss_mask_3: 0.4336  loss_dice_3: 1.09  loss_ce_4: 0.2267  loss_mask_4: 0.431  loss_dice_4: 1.062  loss_ce_5: 0.2239  loss_mask_5: 0.4242  loss_dice_5: 1.085  loss_ce_6: 0.2132  loss_mask_6: 0.427  loss_dice_6: 1.053  loss_ce_7: 0.2173  loss_mask_7: 0.4318  loss_dice_7: 1.076  loss_ce_8: 0.2207  loss_mask_8: 0.4413  loss_dice_8: 1.091    time: 1.0524  last_time: 1.0281  data_time: 0.0381  last_data_time: 0.0376   lr: 0.0001  max_mem: 30329M
[09/05 10:24:42] d2.utils.events INFO:  eta: 0:15:23  iter: 119  total_loss: 16.83  loss_ce: 0.1993  loss_mask: 0.4042  loss_dice: 1.006  loss_ce_0: 0.2103  loss_mask_0: 0.4664  loss_dice_0: 1.15  loss_ce_1: 0.2397  loss_mask_1: 0.4239  loss_dice_1: 1.109  loss_ce_2: 0.2057  loss_mask_2: 0.4204  loss_dice_2: 1.066  loss_ce_3: 0.2208  loss_mask_3: 0.4194  loss_dice_3: 1.04  loss_ce_4: 0.2061  loss_mask_4: 0.4153  loss_dice_4: 1.019  loss_ce_5: 0.1958  loss_mask_5: 0.4069  loss_dice_5: 1.024  loss_ce_6: 0.1942  loss_mask_6: 0.4105  loss_dice_6: 1.01  loss_ce_7: 0.1884  loss_mask_7: 0.4144  loss_dice_7: 1.005  loss_ce_8: 0.2076  loss_mask_8: 0.4084  loss_dice_8: 1.018    time: 1.0522  last_time: 1.0643  data_time: 0.0426  last_data_time: 0.0494   lr: 0.0001  max_mem: 30329M
[09/05 10:25:04] d2.utils.events INFO:  eta: 0:15:02  iter: 139  total_loss: 16.26  loss_ce: 0.1757  loss_mask: 0.4218  loss_dice: 1.019  loss_ce_0: 0.1802  loss_mask_0: 0.4692  loss_dice_0: 1.124  loss_ce_1: 0.216  loss_mask_1: 0.4354  loss_dice_1: 1.066  loss_ce_2: 0.1932  loss_mask_2: 0.4274  loss_dice_2: 1.026  loss_ce_3: 0.1962  loss_mask_3: 0.4143  loss_dice_3: 1.022  loss_ce_4: 0.2051  loss_mask_4: 0.4154  loss_dice_4: 1.021  loss_ce_5: 0.196  loss_mask_5: 0.4097  loss_dice_5: 0.9944  loss_ce_6: 0.1825  loss_mask_6: 0.419  loss_dice_6: 0.9975  loss_ce_7: 0.1752  loss_mask_7: 0.4213  loss_dice_7: 1.008  loss_ce_8: 0.1684  loss_mask_8: 0.4171  loss_dice_8: 1.023    time: 1.0519  last_time: 1.0535  data_time: 0.0426  last_data_time: 0.0356   lr: 0.0001  max_mem: 30329M
[09/05 10:25:26] d2.utils.events INFO:  eta: 0:14:42  iter: 159  total_loss: 16.51  loss_ce: 0.1901  loss_mask: 0.4191  loss_dice: 1.011  loss_ce_0: 0.163  loss_mask_0: 0.4519  loss_dice_0: 1.139  loss_ce_1: 0.2364  loss_mask_1: 0.4374  loss_dice_1: 1.062  loss_ce_2: 0.2084  loss_mask_2: 0.4177  loss_dice_2: 1.034  loss_ce_3: 0.2078  loss_mask_3: 0.422  loss_dice_3: 1.01  loss_ce_4: 0.1962  loss_mask_4: 0.4242  loss_dice_4: 1.036  loss_ce_5: 0.1747  loss_mask_5: 0.4196  loss_dice_5: 1.024  loss_ce_6: 0.1833  loss_mask_6: 0.4224  loss_dice_6: 1.022  loss_ce_7: 0.1937  loss_mask_7: 0.4243  loss_dice_7: 1.015  loss_ce_8: 0.1784  loss_mask_8: 0.4184  loss_dice_8: 0.9955    time: 1.0522  last_time: 1.0389  data_time: 0.0443  last_data_time: 0.0393   lr: 0.0001  max_mem: 30329M
[09/05 10:25:48] d2.utils.events INFO:  eta: 0:14:22  iter: 179  total_loss: 16.76  loss_ce: 0.1975  loss_mask: 0.3994  loss_dice: 0.9819  loss_ce_0: 0.191  loss_mask_0: 0.4445  loss_dice_0: 1.175  loss_ce_1: 0.2581  loss_mask_1: 0.4104  loss_dice_1: 1.125  loss_ce_2: 0.2126  loss_mask_2: 0.3958  loss_dice_2: 1.059  loss_ce_3: 0.2309  loss_mask_3: 0.4059  loss_dice_3: 1.027  loss_ce_4: 0.2195  loss_mask_4: 0.3989  loss_dice_4: 1.005  loss_ce_5: 0.1998  loss_mask_5: 0.3953  loss_dice_5: 1.02  loss_ce_6: 0.2237  loss_mask_6: 0.3916  loss_dice_6: 0.9946  loss_ce_7: 0.1763  loss_mask_7: 0.399  loss_dice_7: 1.01  loss_ce_8: 0.1828  loss_mask_8: 0.3959  loss_dice_8: 1.016    time: 1.0528  last_time: 1.0644  data_time: 0.0442  last_data_time: 0.0438   lr: 0.0001  max_mem: 30329M
[09/05 10:26:10] d2.utils.events INFO:  eta: 0:14:01  iter: 199  total_loss: 16.2  loss_ce: 0.1762  loss_mask: 0.4022  loss_dice: 0.993  loss_ce_0: 0.1914  loss_mask_0: 0.4376  loss_dice_0: 1.101  loss_ce_1: 0.2555  loss_mask_1: 0.4259  loss_dice_1: 1.063  loss_ce_2: 0.2021  loss_mask_2: 0.4085  loss_dice_2: 1.042  loss_ce_3: 0.21  loss_mask_3: 0.4025  loss_dice_3: 1.018  loss_ce_4: 0.1956  loss_mask_4: 0.4096  loss_dice_4: 1.013  loss_ce_5: 0.1913  loss_mask_5: 0.4001  loss_dice_5: 0.9937  loss_ce_6: 0.1897  loss_mask_6: 0.4031  loss_dice_6: 1.002  loss_ce_7: 0.1924  loss_mask_7: 0.4012  loss_dice_7: 1.015  loss_ce_8: 0.1946  loss_mask_8: 0.3889  loss_dice_8: 0.9938    time: 1.0531  last_time: 1.0696  data_time: 0.0425  last_data_time: 0.0447   lr: 0.0001  max_mem: 30329M
[09/05 10:26:33] d2.utils.events INFO:  eta: 0:13:41  iter: 219  total_loss: 16.54  loss_ce: 0.1701  loss_mask: 0.4226  loss_dice: 0.9597  loss_ce_0: 0.152  loss_mask_0: 0.4505  loss_dice_0: 1.064  loss_ce_1: 0.1845  loss_mask_1: 0.4385  loss_dice_1: 1.016  loss_ce_2: 0.196  loss_mask_2: 0.4345  loss_dice_2: 0.9716  loss_ce_3: 0.1761  loss_mask_3: 0.4306  loss_dice_3: 0.9545  loss_ce_4: 0.1771  loss_mask_4: 0.4265  loss_dice_4: 0.9474  loss_ce_5: 0.1713  loss_mask_5: 0.4318  loss_dice_5: 0.965  loss_ce_6: 0.173  loss_mask_6: 0.4288  loss_dice_6: 0.9657  loss_ce_7: 0.1827  loss_mask_7: 0.4266  loss_dice_7: 0.951  loss_ce_8: 0.1635  loss_mask_8: 0.4245  loss_dice_8: 0.9521    time: 1.0546  last_time: 1.0717  data_time: 0.0424  last_data_time: 0.0423   lr: 0.0001  max_mem: 30329M
[09/05 10:26:55] d2.utils.events INFO:  eta: 0:13:20  iter: 239  total_loss: 15.12  loss_ce: 0.1575  loss_mask: 0.3913  loss_dice: 0.9413  loss_ce_0: 0.1506  loss_mask_0: 0.415  loss_dice_0: 1.031  loss_ce_1: 0.1988  loss_mask_1: 0.3959  loss_dice_1: 0.9771  loss_ce_2: 0.1896  loss_mask_2: 0.3886  loss_dice_2: 0.963  loss_ce_3: 0.1624  loss_mask_3: 0.3806  loss_dice_3: 0.9704  loss_ce_4: 0.1753  loss_mask_4: 0.3999  loss_dice_4: 0.9456  loss_ce_5: 0.1615  loss_mask_5: 0.3883  loss_dice_5: 0.9291  loss_ce_6: 0.1612  loss_mask_6: 0.3962  loss_dice_6: 0.9403  loss_ce_7: 0.1562  loss_mask_7: 0.3841  loss_dice_7: 0.9442  loss_ce_8: 0.171  loss_mask_8: 0.3897  loss_dice_8: 0.9293    time: 1.0547  last_time: 1.0563  data_time: 0.0426  last_data_time: 0.0407   lr: 0.0001  max_mem: 30329M
[09/05 10:27:17] d2.utils.events INFO:  eta: 0:12:59  iter: 259  total_loss: 16.17  loss_ce: 0.1975  loss_mask: 0.3996  loss_dice: 0.9851  loss_ce_0: 0.1851  loss_mask_0: 0.4326  loss_dice_0: 1.121  loss_ce_1: 0.2617  loss_mask_1: 0.4159  loss_dice_1: 1.066  loss_ce_2: 0.2501  loss_mask_2: 0.4039  loss_dice_2: 1.03  loss_ce_3: 0.2034  loss_mask_3: 0.4032  loss_dice_3: 1.024  loss_ce_4: 0.208  loss_mask_4: 0.3984  loss_dice_4: 1.007  loss_ce_5: 0.1918  loss_mask_5: 0.4004  loss_dice_5: 0.977  loss_ce_6: 0.1988  loss_mask_6: 0.3943  loss_dice_6: 0.9865  loss_ce_7: 0.204  loss_mask_7: 0.3898  loss_dice_7: 0.9774  loss_ce_8: 0.1702  loss_mask_8: 0.3926  loss_dice_8: 0.9659    time: 1.0549  last_time: 1.0392  data_time: 0.0406  last_data_time: 0.0328   lr: 0.0001  max_mem: 30329M
[09/05 10:27:39] d2.utils.events INFO:  eta: 0:12:38  iter: 279  total_loss: 15.72  loss_ce: 0.1782  loss_mask: 0.3818  loss_dice: 0.9504  loss_ce_0: 0.1806  loss_mask_0: 0.417  loss_dice_0: 1.086  loss_ce_1: 0.2552  loss_mask_1: 0.4038  loss_dice_1: 1.033  loss_ce_2: 0.2455  loss_mask_2: 0.3922  loss_dice_2: 0.9916  loss_ce_3: 0.229  loss_mask_3: 0.3856  loss_dice_3: 0.9911  loss_ce_4: 0.2136  loss_mask_4: 0.3786  loss_dice_4: 0.9717  loss_ce_5: 0.1792  loss_mask_5: 0.3806  loss_dice_5: 0.9912  loss_ce_6: 0.1957  loss_mask_6: 0.38  loss_dice_6: 0.9748  loss_ce_7: 0.1681  loss_mask_7: 0.3799  loss_dice_7: 0.9873  loss_ce_8: 0.1818  loss_mask_8: 0.38  loss_dice_8: 0.965    time: 1.0549  last_time: 1.0495  data_time: 0.0415  last_data_time: 0.0412   lr: 0.0001  max_mem: 30329M
[09/05 10:28:01] d2.utils.events INFO:  eta: 0:12:17  iter: 299  total_loss: 16  loss_ce: 0.1655  loss_mask: 0.3807  loss_dice: 0.9873  loss_ce_0: 0.1398  loss_mask_0: 0.4247  loss_dice_0: 1.083  loss_ce_1: 0.2153  loss_mask_1: 0.4084  loss_dice_1: 1.047  loss_ce_2: 0.2053  loss_mask_2: 0.3998  loss_dice_2: 1.013  loss_ce_3: 0.1911  loss_mask_3: 0.3904  loss_dice_3: 0.967  loss_ce_4: 0.1963  loss_mask_4: 0.3949  loss_dice_4: 1.01  loss_ce_5: 0.1683  loss_mask_5: 0.3864  loss_dice_5: 1.012  loss_ce_6: 0.1846  loss_mask_6: 0.3867  loss_dice_6: 0.9945  loss_ce_7: 0.1825  loss_mask_7: 0.3839  loss_dice_7: 1.01  loss_ce_8: 0.1716  loss_mask_8: 0.3816  loss_dice_8: 0.9785    time: 1.0550  last_time: 1.0585  data_time: 0.0402  last_data_time: 0.0484   lr: 0.0001  max_mem: 30329M
[09/05 10:28:22] d2.utils.events INFO:  eta: 0:11:56  iter: 319  total_loss: 15.17  loss_ce: 0.1885  loss_mask: 0.3581  loss_dice: 0.9836  loss_ce_0: 0.1386  loss_mask_0: 0.4083  loss_dice_0: 1.093  loss_ce_1: 0.2004  loss_mask_1: 0.3767  loss_dice_1: 1.032  loss_ce_2: 0.1614  loss_mask_2: 0.3592  loss_dice_2: 1.026  loss_ce_3: 0.1876  loss_mask_3: 0.3596  loss_dice_3: 0.9708  loss_ce_4: 0.1711  loss_mask_4: 0.3676  loss_dice_4: 0.9785  loss_ce_5: 0.1597  loss_mask_5: 0.356  loss_dice_5: 0.9921  loss_ce_6: 0.1745  loss_mask_6: 0.3589  loss_dice_6: 0.9891  loss_ce_7: 0.1433  loss_mask_7: 0.359  loss_dice_7: 0.9603  loss_ce_8: 0.1479  loss_mask_8: 0.3604  loss_dice_8: 0.9809    time: 1.0551  last_time: 1.0453  data_time: 0.0413  last_data_time: 0.0361   lr: 0.0001  max_mem: 30329M
[09/05 10:28:43] d2.utils.events INFO:  eta: 0:11:35  iter: 339  total_loss: 16.64  loss_ce: 0.1616  loss_mask: 0.4003  loss_dice: 0.9967  loss_ce_0: 0.1431  loss_mask_0: 0.45  loss_dice_0: 1.088  loss_ce_1: 0.1838  loss_mask_1: 0.4354  loss_dice_1: 1.026  loss_ce_2: 0.2098  loss_mask_2: 0.4255  loss_dice_2: 1.017  loss_ce_3: 0.2095  loss_mask_3: 0.4124  loss_dice_3: 0.9835  loss_ce_4: 0.1683  loss_mask_4: 0.4051  loss_dice_4: 0.9807  loss_ce_5: 0.1751  loss_mask_5: 0.4009  loss_dice_5: 0.9598  loss_ce_6: 0.1968  loss_mask_6: 0.4015  loss_dice_6: 1  loss_ce_7: 0.1758  loss_mask_7: 0.398  loss_dice_7: 0.988  loss_ce_8: 0.1733  loss_mask_8: 0.404  loss_dice_8: 0.9774    time: 1.0550  last_time: 1.0413  data_time: 0.0402  last_data_time: 0.0386   lr: 0.0001  max_mem: 30329M
[09/05 10:29:05] d2.utils.events INFO:  eta: 0:11:14  iter: 359  total_loss: 14.84  loss_ce: 0.1725  loss_mask: 0.3688  loss_dice: 0.9248  loss_ce_0: 0.1837  loss_mask_0: 0.399  loss_dice_0: 1.049  loss_ce_1: 0.2362  loss_mask_1: 0.3848  loss_dice_1: 0.9942  loss_ce_2: 0.1757  loss_mask_2: 0.3743  loss_dice_2: 0.9593  loss_ce_3: 0.1862  loss_mask_3: 0.3747  loss_dice_3: 0.9551  loss_ce_4: 0.1776  loss_mask_4: 0.3649  loss_dice_4: 0.9571  loss_ce_5: 0.1632  loss_mask_5: 0.3688  loss_dice_5: 0.9381  loss_ce_6: 0.1647  loss_mask_6: 0.3704  loss_dice_6: 0.9228  loss_ce_7: 0.1751  loss_mask_7: 0.377  loss_dice_7: 0.9372  loss_ce_8: 0.1834  loss_mask_8: 0.3761  loss_dice_8: 0.919    time: 1.0554  last_time: 1.0743  data_time: 0.0432  last_data_time: 0.0521   lr: 0.0001  max_mem: 30329M
[09/05 10:29:26] d2.utils.events INFO:  eta: 0:10:53  iter: 379  total_loss: 14.63  loss_ce: 0.1177  loss_mask: 0.3747  loss_dice: 0.9546  loss_ce_0: 0.1423  loss_mask_0: 0.4021  loss_dice_0: 1.011  loss_ce_1: 0.1773  loss_mask_1: 0.3938  loss_dice_1: 0.985  loss_ce_2: 0.1628  loss_mask_2: 0.3775  loss_dice_2: 0.9677  loss_ce_3: 0.1719  loss_mask_3: 0.3817  loss_dice_3: 0.9506  loss_ce_4: 0.1372  loss_mask_4: 0.381  loss_dice_4: 0.9645  loss_ce_5: 0.1495  loss_mask_5: 0.3775  loss_dice_5: 0.9409  loss_ce_6: 0.1421  loss_mask_6: 0.3793  loss_dice_6: 0.927  loss_ce_7: 0.1293  loss_mask_7: 0.374  loss_dice_7: 0.9565  loss_ce_8: 0.1216  loss_mask_8: 0.3744  loss_dice_8: 0.9517    time: 1.0558  last_time: 1.0749  data_time: 0.0461  last_data_time: 0.0486   lr: 0.0001  max_mem: 30329M
[09/05 10:29:48] d2.utils.events INFO:  eta: 0:10:32  iter: 399  total_loss: 15.24  loss_ce: 0.1468  loss_mask: 0.3727  loss_dice: 0.9242  loss_ce_0: 0.1512  loss_mask_0: 0.3941  loss_dice_0: 1.005  loss_ce_1: 0.1744  loss_mask_1: 0.3854  loss_dice_1: 0.9867  loss_ce_2: 0.1708  loss_mask_2: 0.3674  loss_dice_2: 0.9576  loss_ce_3: 0.1657  loss_mask_3: 0.3734  loss_dice_3: 0.9186  loss_ce_4: 0.138  loss_mask_4: 0.3754  loss_dice_4: 0.9529  loss_ce_5: 0.1386  loss_mask_5: 0.3672  loss_dice_5: 0.9288  loss_ce_6: 0.1473  loss_mask_6: 0.3726  loss_dice_6: 0.917  loss_ce_7: 0.1541  loss_mask_7: 0.3715  loss_dice_7: 0.9185  loss_ce_8: 0.1511  loss_mask_8: 0.3742  loss_dice_8: 0.9361    time: 1.0563  last_time: 1.0683  data_time: 0.0447  last_data_time: 0.0394   lr: 0.0001  max_mem: 30329M
[09/05 10:30:09] d2.utils.events INFO:  eta: 0:10:12  iter: 419  total_loss: 14.16  loss_ce: 0.1394  loss_mask: 0.3643  loss_dice: 0.8873  loss_ce_0: 0.1537  loss_mask_0: 0.4013  loss_dice_0: 0.9807  loss_ce_1: 0.193  loss_mask_1: 0.3811  loss_dice_1: 0.9399  loss_ce_2: 0.1884  loss_mask_2: 0.3807  loss_dice_2: 0.93  loss_ce_3: 0.1655  loss_mask_3: 0.3764  loss_dice_3: 0.8986  loss_ce_4: 0.1691  loss_mask_4: 0.3749  loss_dice_4: 0.9039  loss_ce_5: 0.1616  loss_mask_5: 0.3762  loss_dice_5: 0.9027  loss_ce_6: 0.1566  loss_mask_6: 0.3729  loss_dice_6: 0.8929  loss_ce_7: 0.1576  loss_mask_7: 0.363  loss_dice_7: 0.8718  loss_ce_8: 0.1495  loss_mask_8: 0.3637  loss_dice_8: 0.9033    time: 1.0570  last_time: 1.0628  data_time: 0.0467  last_data_time: 0.0461   lr: 0.0001  max_mem: 30329M
[09/05 10:30:30] d2.utils.events INFO:  eta: 0:09:51  iter: 439  total_loss: 14.77  loss_ce: 0.1668  loss_mask: 0.3637  loss_dice: 0.9273  loss_ce_0: 0.1606  loss_mask_0: 0.3948  loss_dice_0: 1.034  loss_ce_1: 0.1786  loss_mask_1: 0.3921  loss_dice_1: 0.9917  loss_ce_2: 0.1991  loss_mask_2: 0.3767  loss_dice_2: 0.9472  loss_ce_3: 0.1632  loss_mask_3: 0.3635  loss_dice_3: 0.9351  loss_ce_4: 0.161  loss_mask_4: 0.3672  loss_dice_4: 0.9456  loss_ce_5: 0.1606  loss_mask_5: 0.3621  loss_dice_5: 0.941  loss_ce_6: 0.1488  loss_mask_6: 0.3712  loss_dice_6: 0.9522  loss_ce_7: 0.1688  loss_mask_7: 0.3702  loss_dice_7: 0.9387  loss_ce_8: 0.1609  loss_mask_8: 0.3715  loss_dice_8: 0.9417    time: 1.0571  last_time: 1.0596  data_time: 0.0442  last_data_time: 0.0430   lr: 0.0001  max_mem: 30329M
[09/05 10:30:52] d2.utils.events INFO:  eta: 0:09:30  iter: 459  total_loss: 14.84  loss_ce: 0.1579  loss_mask: 0.36  loss_dice: 0.9412  loss_ce_0: 0.1621  loss_mask_0: 0.4004  loss_dice_0: 1.022  loss_ce_1: 0.2145  loss_mask_1: 0.3691  loss_dice_1: 0.9911  loss_ce_2: 0.209  loss_mask_2: 0.361  loss_dice_2: 0.9682  loss_ce_3: 0.1848  loss_mask_3: 0.3634  loss_dice_3: 0.9214  loss_ce_4: 0.1448  loss_mask_4: 0.3618  loss_dice_4: 0.9276  loss_ce_5: 0.1597  loss_mask_5: 0.3596  loss_dice_5: 0.9373  loss_ce_6: 0.1823  loss_mask_6: 0.3604  loss_dice_6: 0.9111  loss_ce_7: 0.1588  loss_mask_7: 0.3643  loss_dice_7: 0.9478  loss_ce_8: 0.1541  loss_mask_8: 0.3605  loss_dice_8: 0.9273    time: 1.0575  last_time: 1.0698  data_time: 0.0441  last_data_time: 0.0429   lr: 0.0001  max_mem: 30329M
[09/05 10:31:13] d2.utils.events INFO:  eta: 0:09:09  iter: 479  total_loss: 15.38  loss_ce: 0.1621  loss_mask: 0.399  loss_dice: 0.9653  loss_ce_0: 0.1452  loss_mask_0: 0.4286  loss_dice_0: 1.06  loss_ce_1: 0.2121  loss_mask_1: 0.4115  loss_dice_1: 1.049  loss_ce_2: 0.1825  loss_mask_2: 0.4092  loss_dice_2: 1.004  loss_ce_3: 0.1731  loss_mask_3: 0.4118  loss_dice_3: 0.9855  loss_ce_4: 0.1626  loss_mask_4: 0.4112  loss_dice_4: 0.9813  loss_ce_5: 0.1505  loss_mask_5: 0.4096  loss_dice_5: 0.9963  loss_ce_6: 0.1666  loss_mask_6: 0.4022  loss_dice_6: 0.9802  loss_ce_7: 0.1793  loss_mask_7: 0.4002  loss_dice_7: 0.9822  loss_ce_8: 0.1697  loss_mask_8: 0.4013  loss_dice_8: 0.9705    time: 1.0579  last_time: 1.0575  data_time: 0.0454  last_data_time: 0.0378   lr: 0.0001  max_mem: 30329M
[09/05 10:31:34] d2.utils.events INFO:  eta: 0:08:48  iter: 499  total_loss: 14.99  loss_ce: 0.1487  loss_mask: 0.3552  loss_dice: 0.8982  loss_ce_0: 0.1674  loss_mask_0: 0.4115  loss_dice_0: 1.011  loss_ce_1: 0.1747  loss_mask_1: 0.3923  loss_dice_1: 0.9727  loss_ce_2: 0.1689  loss_mask_2: 0.3726  loss_dice_2: 0.9275  loss_ce_3: 0.1833  loss_mask_3: 0.3669  loss_dice_3: 0.9059  loss_ce_4: 0.1569  loss_mask_4: 0.3704  loss_dice_4: 0.9158  loss_ce_5: 0.1624  loss_mask_5: 0.352  loss_dice_5: 0.8943  loss_ce_6: 0.1646  loss_mask_6: 0.3575  loss_dice_6: 0.8858  loss_ce_7: 0.1684  loss_mask_7: 0.3524  loss_dice_7: 0.9104  loss_ce_8: 0.1473  loss_mask_8: 0.3544  loss_dice_8: 0.9159    time: 1.0581  last_time: 1.0389  data_time: 0.0440  last_data_time: 0.0367   lr: 0.0001  max_mem: 30329M
[09/05 10:31:56] d2.utils.events INFO:  eta: 0:08:27  iter: 519  total_loss: 15.77  loss_ce: 0.1613  loss_mask: 0.3655  loss_dice: 0.9501  loss_ce_0: 0.1718  loss_mask_0: 0.4272  loss_dice_0: 1.043  loss_ce_1: 0.1902  loss_mask_1: 0.4151  loss_dice_1: 1.014  loss_ce_2: 0.1781  loss_mask_2: 0.4022  loss_dice_2: 0.9998  loss_ce_3: 0.1733  loss_mask_3: 0.4008  loss_dice_3: 0.9864  loss_ce_4: 0.1698  loss_mask_4: 0.4006  loss_dice_4: 0.991  loss_ce_5: 0.1543  loss_mask_5: 0.3791  loss_dice_5: 0.9585  loss_ce_6: 0.1589  loss_mask_6: 0.3739  loss_dice_6: 0.9734  loss_ce_7: 0.1585  loss_mask_7: 0.3724  loss_dice_7: 0.9721  loss_ce_8: 0.153  loss_mask_8: 0.3685  loss_dice_8: 0.9646    time: 1.0580  last_time: 1.0638  data_time: 0.0409  last_data_time: 0.0405   lr: 0.0001  max_mem: 30329M
[09/05 10:32:17] d2.utils.events INFO:  eta: 0:08:06  iter: 539  total_loss: 14.38  loss_ce: 0.1707  loss_mask: 0.3455  loss_dice: 0.9031  loss_ce_0: 0.1532  loss_mask_0: 0.3753  loss_dice_0: 1.009  loss_ce_1: 0.1814  loss_mask_1: 0.3619  loss_dice_1: 0.9887  loss_ce_2: 0.1722  loss_mask_2: 0.3566  loss_dice_2: 0.9529  loss_ce_3: 0.1675  loss_mask_3: 0.3572  loss_dice_3: 0.9301  loss_ce_4: 0.1795  loss_mask_4: 0.3527  loss_dice_4: 0.9293  loss_ce_5: 0.1407  loss_mask_5: 0.3605  loss_dice_5: 0.9408  loss_ce_6: 0.1638  loss_mask_6: 0.3449  loss_dice_6: 0.9319  loss_ce_7: 0.1757  loss_mask_7: 0.3471  loss_dice_7: 0.9191  loss_ce_8: 0.1648  loss_mask_8: 0.3438  loss_dice_8: 0.9186    time: 1.0583  last_time: 1.0652  data_time: 0.0427  last_data_time: 0.0412   lr: 0.0001  max_mem: 30329M
[09/05 10:32:38] d2.utils.events INFO:  eta: 0:07:45  iter: 559  total_loss: 14.39  loss_ce: 0.1285  loss_mask: 0.3413  loss_dice: 0.9113  loss_ce_0: 0.1694  loss_mask_0: 0.3831  loss_dice_0: 1.003  loss_ce_1: 0.1741  loss_mask_1: 0.3595  loss_dice_1: 0.9765  loss_ce_2: 0.163  loss_mask_2: 0.3475  loss_dice_2: 0.9299  loss_ce_3: 0.1636  loss_mask_3: 0.3497  loss_dice_3: 0.9114  loss_ce_4: 0.1649  loss_mask_4: 0.3456  loss_dice_4: 0.9114  loss_ce_5: 0.1711  loss_mask_5: 0.3451  loss_dice_5: 0.9114  loss_ce_6: 0.1343  loss_mask_6: 0.3474  loss_dice_6: 0.9248  loss_ce_7: 0.1391  loss_mask_7: 0.3428  loss_dice_7: 0.9162  loss_ce_8: 0.1624  loss_mask_8: 0.3425  loss_dice_8: 0.915    time: 1.0585  last_time: 1.0522  data_time: 0.0429  last_data_time: 0.0392   lr: 0.0001  max_mem: 30329M
[09/05 10:33:00] d2.utils.events INFO:  eta: 0:07:24  iter: 579  total_loss: 14.75  loss_ce: 0.1653  loss_mask: 0.3641  loss_dice: 0.9233  loss_ce_0: 0.1794  loss_mask_0: 0.3917  loss_dice_0: 1.025  loss_ce_1: 0.1845  loss_mask_1: 0.3684  loss_dice_1: 0.9799  loss_ce_2: 0.1734  loss_mask_2: 0.3662  loss_dice_2: 0.9741  loss_ce_3: 0.1812  loss_mask_3: 0.3637  loss_dice_3: 0.9421  loss_ce_4: 0.1664  loss_mask_4: 0.3645  loss_dice_4: 0.9322  loss_ce_5: 0.1574  loss_mask_5: 0.364  loss_dice_5: 0.9607  loss_ce_6: 0.1632  loss_mask_6: 0.3604  loss_dice_6: 0.932  loss_ce_7: 0.1597  loss_mask_7: 0.362  loss_dice_7: 0.9146  loss_ce_8: 0.1563  loss_mask_8: 0.3564  loss_dice_8: 0.9185    time: 1.0587  last_time: 1.0488  data_time: 0.0436  last_data_time: 0.0398   lr: 0.0001  max_mem: 30329M
[09/05 10:33:21] d2.utils.events INFO:  eta: 0:07:03  iter: 599  total_loss: 14.6  loss_ce: 0.1366  loss_mask: 0.348  loss_dice: 0.9046  loss_ce_0: 0.179  loss_mask_0: 0.392  loss_dice_0: 0.9663  loss_ce_1: 0.1865  loss_mask_1: 0.3784  loss_dice_1: 0.9597  loss_ce_2: 0.1647  loss_mask_2: 0.3663  loss_dice_2: 0.9178  loss_ce_3: 0.1731  loss_mask_3: 0.3646  loss_dice_3: 0.9113  loss_ce_4: 0.1668  loss_mask_4: 0.3581  loss_dice_4: 0.9135  loss_ce_5: 0.1735  loss_mask_5: 0.3581  loss_dice_5: 0.9174  loss_ce_6: 0.1628  loss_mask_6: 0.3516  loss_dice_6: 0.8844  loss_ce_7: 0.1524  loss_mask_7: 0.355  loss_dice_7: 0.8873  loss_ce_8: 0.1626  loss_mask_8: 0.3486  loss_dice_8: 0.89    time: 1.0591  last_time: 1.0654  data_time: 0.0449  last_data_time: 0.0422   lr: 0.0001  max_mem: 30329M
[09/05 10:33:43] d2.utils.events INFO:  eta: 0:06:42  iter: 619  total_loss: 14.6  loss_ce: 0.1832  loss_mask: 0.3568  loss_dice: 0.8965  loss_ce_0: 0.1713  loss_mask_0: 0.3812  loss_dice_0: 1.006  loss_ce_1: 0.1992  loss_mask_1: 0.3665  loss_dice_1: 0.9449  loss_ce_2: 0.1951  loss_mask_2: 0.3467  loss_dice_2: 0.91  loss_ce_3: 0.1938  loss_mask_3: 0.3481  loss_dice_3: 0.9033  loss_ce_4: 0.1762  loss_mask_4: 0.3483  loss_dice_4: 0.9163  loss_ce_5: 0.182  loss_mask_5: 0.3514  loss_dice_5: 0.8863  loss_ce_6: 0.1936  loss_mask_6: 0.3577  loss_dice_6: 0.9066  loss_ce_7: 0.1881  loss_mask_7: 0.3568  loss_dice_7: 0.876  loss_ce_8: 0.1865  loss_mask_8: 0.3568  loss_dice_8: 0.8955    time: 1.0594  last_time: 1.0810  data_time: 0.0422  last_data_time: 0.0405   lr: 0.0001  max_mem: 30329M
[09/05 10:34:04] d2.utils.events INFO:  eta: 0:06:21  iter: 639  total_loss: 14.88  loss_ce: 0.1664  loss_mask: 0.3615  loss_dice: 0.8995  loss_ce_0: 0.1479  loss_mask_0: 0.4003  loss_dice_0: 1.042  loss_ce_1: 0.2014  loss_mask_1: 0.3758  loss_dice_1: 0.9882  loss_ce_2: 0.1961  loss_mask_2: 0.3688  loss_dice_2: 0.9498  loss_ce_3: 0.1813  loss_mask_3: 0.3607  loss_dice_3: 0.9579  loss_ce_4: 0.1759  loss_mask_4: 0.3608  loss_dice_4: 0.909  loss_ce_5: 0.1601  loss_mask_5: 0.3615  loss_dice_5: 0.9137  loss_ce_6: 0.1516  loss_mask_6: 0.3684  loss_dice_6: 0.9081  loss_ce_7: 0.1483  loss_mask_7: 0.3635  loss_dice_7: 0.9337  loss_ce_8: 0.1499  loss_mask_8: 0.363  loss_dice_8: 0.9316    time: 1.0597  last_time: 1.0646  data_time: 0.0467  last_data_time: 0.0471   lr: 0.0001  max_mem: 30329M
[09/05 10:34:25] d2.utils.events INFO:  eta: 0:06:00  iter: 659  total_loss: 14.97  loss_ce: 0.148  loss_mask: 0.3497  loss_dice: 0.9162  loss_ce_0: 0.1659  loss_mask_0: 0.389  loss_dice_0: 0.9819  loss_ce_1: 0.1856  loss_mask_1: 0.3637  loss_dice_1: 0.9626  loss_ce_2: 0.1947  loss_mask_2: 0.3502  loss_dice_2: 0.9371  loss_ce_3: 0.1583  loss_mask_3: 0.3544  loss_dice_3: 0.9232  loss_ce_4: 0.1724  loss_mask_4: 0.3535  loss_dice_4: 0.8932  loss_ce_5: 0.1577  loss_mask_5: 0.3514  loss_dice_5: 0.8936  loss_ce_6: 0.1508  loss_mask_6: 0.3568  loss_dice_6: 0.9027  loss_ce_7: 0.1621  loss_mask_7: 0.3552  loss_dice_7: 0.8976  loss_ce_8: 0.1422  loss_mask_8: 0.3525  loss_dice_8: 0.886    time: 1.0599  last_time: 1.0454  data_time: 0.0446  last_data_time: 0.0365   lr: 0.0001  max_mem: 30329M
[09/05 10:34:47] d2.utils.events INFO:  eta: 0:05:38  iter: 679  total_loss: 14.85  loss_ce: 0.1872  loss_mask: 0.3858  loss_dice: 0.9425  loss_ce_0: 0.1261  loss_mask_0: 0.4133  loss_dice_0: 0.9954  loss_ce_1: 0.1572  loss_mask_1: 0.3877  loss_dice_1: 0.9789  loss_ce_2: 0.1877  loss_mask_2: 0.3868  loss_dice_2: 0.938  loss_ce_3: 0.1549  loss_mask_3: 0.3884  loss_dice_3: 0.9378  loss_ce_4: 0.1704  loss_mask_4: 0.3813  loss_dice_4: 0.9158  loss_ce_5: 0.1419  loss_mask_5: 0.3843  loss_dice_5: 0.9296  loss_ce_6: 0.1632  loss_mask_6: 0.3877  loss_dice_6: 0.9177  loss_ce_7: 0.1364  loss_mask_7: 0.3931  loss_dice_7: 0.9195  loss_ce_8: 0.159  loss_mask_8: 0.3803  loss_dice_8: 0.9062    time: 1.0601  last_time: 1.0587  data_time: 0.0443  last_data_time: 0.0478   lr: 0.0001  max_mem: 30329M
[09/05 10:35:08] d2.utils.events INFO:  eta: 0:05:17  iter: 699  total_loss: 14.6  loss_ce: 0.1559  loss_mask: 0.3753  loss_dice: 0.9373  loss_ce_0: 0.1718  loss_mask_0: 0.3932  loss_dice_0: 0.9532  loss_ce_1: 0.1974  loss_mask_1: 0.3588  loss_dice_1: 0.9583  loss_ce_2: 0.2188  loss_mask_2: 0.358  loss_dice_2: 0.9406  loss_ce_3: 0.1882  loss_mask_3: 0.3513  loss_dice_3: 0.9185  loss_ce_4: 0.1671  loss_mask_4: 0.3499  loss_dice_4: 0.9311  loss_ce_5: 0.1613  loss_mask_5: 0.3504  loss_dice_5: 0.9201  loss_ce_6: 0.1656  loss_mask_6: 0.3618  loss_dice_6: 0.904  loss_ce_7: 0.1733  loss_mask_7: 0.3581  loss_dice_7: 0.8865  loss_ce_8: 0.144  loss_mask_8: 0.366  loss_dice_8: 0.9191    time: 1.0602  last_time: 1.0611  data_time: 0.0433  last_data_time: 0.0386   lr: 0.0001  max_mem: 30329M
[09/05 10:35:29] d2.utils.events INFO:  eta: 0:04:56  iter: 719  total_loss: 15.76  loss_ce: 0.1769  loss_mask: 0.357  loss_dice: 0.9285  loss_ce_0: 0.1766  loss_mask_0: 0.4084  loss_dice_0: 1.059  loss_ce_1: 0.229  loss_mask_1: 0.3764  loss_dice_1: 0.9921  loss_ce_2: 0.1909  loss_mask_2: 0.3839  loss_dice_2: 1  loss_ce_3: 0.2033  loss_mask_3: 0.3754  loss_dice_3: 0.9268  loss_ce_4: 0.213  loss_mask_4: 0.3735  loss_dice_4: 0.9377  loss_ce_5: 0.1776  loss_mask_5: 0.361  loss_dice_5: 0.9625  loss_ce_6: 0.1768  loss_mask_6: 0.3616  loss_dice_6: 0.9399  loss_ce_7: 0.1787  loss_mask_7: 0.3567  loss_dice_7: 0.9428  loss_ce_8: 0.173  loss_mask_8: 0.3664  loss_dice_8: 0.9767    time: 1.0603  last_time: 1.0725  data_time: 0.0418  last_data_time: 0.0385   lr: 0.0001  max_mem: 30329M
[09/05 10:35:51] d2.utils.events INFO:  eta: 0:04:35  iter: 739  total_loss: 14.5  loss_ce: 0.1445  loss_mask: 0.3661  loss_dice: 0.901  loss_ce_0: 0.1311  loss_mask_0: 0.4076  loss_dice_0: 0.9763  loss_ce_1: 0.1732  loss_mask_1: 0.3855  loss_dice_1: 0.9442  loss_ce_2: 0.1719  loss_mask_2: 0.3819  loss_dice_2: 0.9168  loss_ce_3: 0.1781  loss_mask_3: 0.3749  loss_dice_3: 0.9041  loss_ce_4: 0.1596  loss_mask_4: 0.369  loss_dice_4: 0.9247  loss_ce_5: 0.1595  loss_mask_5: 0.36  loss_dice_5: 0.8981  loss_ce_6: 0.1666  loss_mask_6: 0.3703  loss_dice_6: 0.8981  loss_ce_7: 0.1483  loss_mask_7: 0.3695  loss_dice_7: 0.8829  loss_ce_8: 0.1564  loss_mask_8: 0.3704  loss_dice_8: 0.8795    time: 1.0605  last_time: 1.0627  data_time: 0.0424  last_data_time: 0.0405   lr: 0.0001  max_mem: 30329M
[09/05 10:36:12] d2.utils.events INFO:  eta: 0:04:14  iter: 759  total_loss: 14.12  loss_ce: 0.144  loss_mask: 0.335  loss_dice: 0.881  loss_ce_0: 0.1272  loss_mask_0: 0.3623  loss_dice_0: 0.956  loss_ce_1: 0.1725  loss_mask_1: 0.3513  loss_dice_1: 0.9288  loss_ce_2: 0.1525  loss_mask_2: 0.335  loss_dice_2: 0.8874  loss_ce_3: 0.1768  loss_mask_3: 0.3303  loss_dice_3: 0.8825  loss_ce_4: 0.1433  loss_mask_4: 0.3348  loss_dice_4: 0.8812  loss_ce_5: 0.1248  loss_mask_5: 0.3309  loss_dice_5: 0.8686  loss_ce_6: 0.1206  loss_mask_6: 0.3357  loss_dice_6: 0.8765  loss_ce_7: 0.1512  loss_mask_7: 0.3291  loss_dice_7: 0.8793  loss_ce_8: 0.1278  loss_mask_8: 0.3366  loss_dice_8: 0.8788    time: 1.0606  last_time: 1.0665  data_time: 0.0448  last_data_time: 0.0395   lr: 0.0001  max_mem: 30329M
[09/05 10:36:34] d2.utils.events INFO:  eta: 0:03:53  iter: 779  total_loss: 14.05  loss_ce: 0.1401  loss_mask: 0.3549  loss_dice: 0.8579  loss_ce_0: 0.1339  loss_mask_0: 0.3956  loss_dice_0: 0.9225  loss_ce_1: 0.1521  loss_mask_1: 0.3784  loss_dice_1: 0.8881  loss_ce_2: 0.1504  loss_mask_2: 0.3706  loss_dice_2: 0.8917  loss_ce_3: 0.1505  loss_mask_3: 0.3702  loss_dice_3: 0.8765  loss_ce_4: 0.135  loss_mask_4: 0.3596  loss_dice_4: 0.8738  loss_ce_5: 0.1369  loss_mask_5: 0.3571  loss_dice_5: 0.8684  loss_ce_6: 0.1284  loss_mask_6: 0.3608  loss_dice_6: 0.8864  loss_ce_7: 0.1333  loss_mask_7: 0.3626  loss_dice_7: 0.8786  loss_ce_8: 0.1383  loss_mask_8: 0.3563  loss_dice_8: 0.8885    time: 1.0608  last_time: 1.0786  data_time: 0.0449  last_data_time: 0.0463   lr: 0.0001  max_mem: 30329M
[09/05 10:36:55] d2.utils.events INFO:  eta: 0:03:32  iter: 799  total_loss: 14.46  loss_ce: 0.1301  loss_mask: 0.354  loss_dice: 0.8541  loss_ce_0: 0.147  loss_mask_0: 0.381  loss_dice_0: 0.9321  loss_ce_1: 0.1675  loss_mask_1: 0.3793  loss_dice_1: 0.9007  loss_ce_2: 0.158  loss_mask_2: 0.3678  loss_dice_2: 0.8912  loss_ce_3: 0.1502  loss_mask_3: 0.3606  loss_dice_3: 0.8776  loss_ce_4: 0.1431  loss_mask_4: 0.3615  loss_dice_4: 0.8875  loss_ce_5: 0.1618  loss_mask_5: 0.3618  loss_dice_5: 0.8771  loss_ce_6: 0.1271  loss_mask_6: 0.3564  loss_dice_6: 0.889  loss_ce_7: 0.1496  loss_mask_7: 0.3564  loss_dice_7: 0.893  loss_ce_8: 0.14  loss_mask_8: 0.3537  loss_dice_8: 0.8887    time: 1.0609  last_time: 1.0528  data_time: 0.0428  last_data_time: 0.0424   lr: 0.0001  max_mem: 30329M
[09/05 10:37:16] d2.utils.events INFO:  eta: 0:03:10  iter: 819  total_loss: 13.89  loss_ce: 0.1284  loss_mask: 0.3224  loss_dice: 0.8691  loss_ce_0: 0.1507  loss_mask_0: 0.3425  loss_dice_0: 0.9646  loss_ce_1: 0.1446  loss_mask_1: 0.3431  loss_dice_1: 0.9395  loss_ce_2: 0.1314  loss_mask_2: 0.3287  loss_dice_2: 0.8934  loss_ce_3: 0.1486  loss_mask_3: 0.3309  loss_dice_3: 0.8847  loss_ce_4: 0.1467  loss_mask_4: 0.3272  loss_dice_4: 0.8736  loss_ce_5: 0.1307  loss_mask_5: 0.3259  loss_dice_5: 0.9041  loss_ce_6: 0.1331  loss_mask_6: 0.3256  loss_dice_6: 0.8852  loss_ce_7: 0.1252  loss_mask_7: 0.328  loss_dice_7: 0.8598  loss_ce_8: 0.1159  loss_mask_8: 0.3265  loss_dice_8: 0.8805    time: 1.0611  last_time: 1.0746  data_time: 0.0424  last_data_time: 0.0473   lr: 0.0001  max_mem: 30329M
[09/05 10:37:38] d2.utils.events INFO:  eta: 0:02:49  iter: 839  total_loss: 13.78  loss_ce: 0.1399  loss_mask: 0.3453  loss_dice: 0.8668  loss_ce_0: 0.134  loss_mask_0: 0.3642  loss_dice_0: 0.9493  loss_ce_1: 0.1622  loss_mask_1: 0.357  loss_dice_1: 0.9274  loss_ce_2: 0.1391  loss_mask_2: 0.3442  loss_dice_2: 0.9084  loss_ce_3: 0.1502  loss_mask_3: 0.3424  loss_dice_3: 0.898  loss_ce_4: 0.1511  loss_mask_4: 0.3427  loss_dice_4: 0.8899  loss_ce_5: 0.1427  loss_mask_5: 0.3396  loss_dice_5: 0.8879  loss_ce_6: 0.1294  loss_mask_6: 0.3407  loss_dice_6: 0.8924  loss_ce_7: 0.1532  loss_mask_7: 0.3376  loss_dice_7: 0.878  loss_ce_8: 0.1453  loss_mask_8: 0.3399  loss_dice_8: 0.8699    time: 1.0614  last_time: 1.0603  data_time: 0.0454  last_data_time: 0.0373   lr: 0.0001  max_mem: 30329M
[09/05 10:38:00] d2.utils.events INFO:  eta: 0:02:28  iter: 859  total_loss: 14.27  loss_ce: 0.1527  loss_mask: 0.3623  loss_dice: 0.8814  loss_ce_0: 0.1587  loss_mask_0: 0.3858  loss_dice_0: 0.978  loss_ce_1: 0.1969  loss_mask_1: 0.3755  loss_dice_1: 0.9276  loss_ce_2: 0.192  loss_mask_2: 0.367  loss_dice_2: 0.92  loss_ce_3: 0.1749  loss_mask_3: 0.3656  loss_dice_3: 0.9414  loss_ce_4: 0.1476  loss_mask_4: 0.3683  loss_dice_4: 0.898  loss_ce_5: 0.1382  loss_mask_5: 0.3682  loss_dice_5: 0.92  loss_ce_6: 0.1477  loss_mask_6: 0.3603  loss_dice_6: 0.8899  loss_ce_7: 0.1569  loss_mask_7: 0.3642  loss_dice_7: 0.8969  loss_ce_8: 0.1472  loss_mask_8: 0.3678  loss_dice_8: 0.8936    time: 1.0618  last_time: 1.0703  data_time: 0.0441  last_data_time: 0.0415   lr: 0.0001  max_mem: 30329M
[09/05 10:38:21] d2.utils.events INFO:  eta: 0:02:07  iter: 879  total_loss: 14.47  loss_ce: 0.151  loss_mask: 0.3267  loss_dice: 0.9011  loss_ce_0: 0.1615  loss_mask_0: 0.3794  loss_dice_0: 1.006  loss_ce_1: 0.2011  loss_mask_1: 0.3509  loss_dice_1: 0.9585  loss_ce_2: 0.1894  loss_mask_2: 0.3304  loss_dice_2: 0.9456  loss_ce_3: 0.2032  loss_mask_3: 0.3513  loss_dice_3: 0.9213  loss_ce_4: 0.1664  loss_mask_4: 0.3318  loss_dice_4: 0.8968  loss_ce_5: 0.1668  loss_mask_5: 0.3307  loss_dice_5: 0.8936  loss_ce_6: 0.1675  loss_mask_6: 0.3269  loss_dice_6: 0.8932  loss_ce_7: 0.1786  loss_mask_7: 0.3297  loss_dice_7: 0.8948  loss_ce_8: 0.1745  loss_mask_8: 0.3269  loss_dice_8: 0.9125    time: 1.0618  last_time: 1.0493  data_time: 0.0427  last_data_time: 0.0412   lr: 0.0001  max_mem: 30329M
[09/05 10:38:42] d2.utils.events INFO:  eta: 0:01:46  iter: 899  total_loss: 13.87  loss_ce: 0.1385  loss_mask: 0.3292  loss_dice: 0.8296  loss_ce_0: 0.1574  loss_mask_0: 0.3846  loss_dice_0: 0.9484  loss_ce_1: 0.171  loss_mask_1: 0.3642  loss_dice_1: 0.8923  loss_ce_2: 0.1727  loss_mask_2: 0.3506  loss_dice_2: 0.8895  loss_ce_3: 0.1553  loss_mask_3: 0.3375  loss_dice_3: 0.8827  loss_ce_4: 0.1477  loss_mask_4: 0.3338  loss_dice_4: 0.8592  loss_ce_5: 0.1559  loss_mask_5: 0.3323  loss_dice_5: 0.877  loss_ce_6: 0.1321  loss_mask_6: 0.3319  loss_dice_6: 0.849  loss_ce_7: 0.1389  loss_mask_7: 0.3297  loss_dice_7: 0.8403  loss_ce_8: 0.1445  loss_mask_8: 0.3296  loss_dice_8: 0.8393    time: 1.0620  last_time: 1.0683  data_time: 0.0445  last_data_time: 0.0440   lr: 0.0001  max_mem: 30329M
[09/05 10:39:04] d2.utils.events INFO:  eta: 0:01:24  iter: 919  total_loss: 14.48  loss_ce: 0.1397  loss_mask: 0.3351  loss_dice: 0.8986  loss_ce_0: 0.1512  loss_mask_0: 0.3742  loss_dice_0: 0.9871  loss_ce_1: 0.1548  loss_mask_1: 0.346  loss_dice_1: 0.9674  loss_ce_2: 0.1628  loss_mask_2: 0.3406  loss_dice_2: 0.9541  loss_ce_3: 0.1674  loss_mask_3: 0.3389  loss_dice_3: 0.9375  loss_ce_4: 0.1579  loss_mask_4: 0.3427  loss_dice_4: 0.9411  loss_ce_5: 0.1593  loss_mask_5: 0.3371  loss_dice_5: 0.9233  loss_ce_6: 0.1495  loss_mask_6: 0.3378  loss_dice_6: 0.9167  loss_ce_7: 0.1345  loss_mask_7: 0.3359  loss_dice_7: 0.9178  loss_ce_8: 0.1508  loss_mask_8: 0.3355  loss_dice_8: 0.8816    time: 1.0622  last_time: 1.0740  data_time: 0.0441  last_data_time: 0.0477   lr: 0.0001  max_mem: 30329M
[09/05 10:39:25] d2.utils.events INFO:  eta: 0:01:03  iter: 939  total_loss: 13.89  loss_ce: 0.1391  loss_mask: 0.3487  loss_dice: 0.8649  loss_ce_0: 0.1414  loss_mask_0: 0.3698  loss_dice_0: 0.9445  loss_ce_1: 0.1507  loss_mask_1: 0.3546  loss_dice_1: 0.924  loss_ce_2: 0.1736  loss_mask_2: 0.3483  loss_dice_2: 0.8894  loss_ce_3: 0.1623  loss_mask_3: 0.3499  loss_dice_3: 0.8752  loss_ce_4: 0.1286  loss_mask_4: 0.3471  loss_dice_4: 0.8914  loss_ce_5: 0.1289  loss_mask_5: 0.3514  loss_dice_5: 0.8878  loss_ce_6: 0.151  loss_mask_6: 0.3498  loss_dice_6: 0.8801  loss_ce_7: 0.1399  loss_mask_7: 0.347  loss_dice_7: 0.8619  loss_ce_8: 0.135  loss_mask_8: 0.3527  loss_dice_8: 0.8687    time: 1.0622  last_time: 1.0476  data_time: 0.0448  last_data_time: 0.0357   lr: 0.0001  max_mem: 30329M
[09/05 10:39:47] d2.utils.events INFO:  eta: 0:00:42  iter: 959  total_loss: 13.69  loss_ce: 0.1186  loss_mask: 0.3427  loss_dice: 0.9066  loss_ce_0: 0.1671  loss_mask_0: 0.3664  loss_dice_0: 0.9519  loss_ce_1: 0.1651  loss_mask_1: 0.3507  loss_dice_1: 0.9098  loss_ce_2: 0.1419  loss_mask_2: 0.3448  loss_dice_2: 0.917  loss_ce_3: 0.1234  loss_mask_3: 0.3462  loss_dice_3: 0.8914  loss_ce_4: 0.1341  loss_mask_4: 0.3444  loss_dice_4: 0.8962  loss_ce_5: 0.1353  loss_mask_5: 0.3457  loss_dice_5: 0.8909  loss_ce_6: 0.1353  loss_mask_6: 0.3473  loss_dice_6: 0.8742  loss_ce_7: 0.1116  loss_mask_7: 0.3481  loss_dice_7: 0.9047  loss_ce_8: 0.1014  loss_mask_8: 0.3446  loss_dice_8: 0.9006    time: 1.0624  last_time: 1.0822  data_time: 0.0450  last_data_time: 0.0462   lr: 0.0001  max_mem: 30329M
[09/05 10:40:08] d2.utils.events INFO:  eta: 0:00:21  iter: 979  total_loss: 13.67  loss_ce: 0.1602  loss_mask: 0.3474  loss_dice: 0.8674  loss_ce_0: 0.1363  loss_mask_0: 0.3772  loss_dice_0: 0.9484  loss_ce_1: 0.1745  loss_mask_1: 0.3626  loss_dice_1: 0.9133  loss_ce_2: 0.1792  loss_mask_2: 0.3522  loss_dice_2: 0.8688  loss_ce_3: 0.1723  loss_mask_3: 0.3516  loss_dice_3: 0.8517  loss_ce_4: 0.1636  loss_mask_4: 0.3476  loss_dice_4: 0.865  loss_ce_5: 0.1596  loss_mask_5: 0.3507  loss_dice_5: 0.8729  loss_ce_6: 0.1476  loss_mask_6: 0.3525  loss_dice_6: 0.8519  loss_ce_7: 0.1334  loss_mask_7: 0.3497  loss_dice_7: 0.8659  loss_ce_8: 0.1367  loss_mask_8: 0.3516  loss_dice_8: 0.8727    time: 1.0626  last_time: 1.1086  data_time: 0.0432  last_data_time: 0.0432   lr: 0.0001  max_mem: 30329M
[09/05 10:40:30] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_1000_19/model_final.pth
[09/05 10:40:36] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 13.63  loss_ce: 0.1514  loss_mask: 0.3406  loss_dice: 0.8522  loss_ce_0: 0.1466  loss_mask_0: 0.388  loss_dice_0: 0.9138  loss_ce_1: 0.1942  loss_mask_1: 0.356  loss_dice_1: 0.8868  loss_ce_2: 0.1548  loss_mask_2: 0.3576  loss_dice_2: 0.865  loss_ce_3: 0.177  loss_mask_3: 0.3516  loss_dice_3: 0.8491  loss_ce_4: 0.1501  loss_mask_4: 0.3484  loss_dice_4: 0.8563  loss_ce_5: 0.1334  loss_mask_5: 0.3435  loss_dice_5: 0.858  loss_ce_6: 0.1669  loss_mask_6: 0.336  loss_dice_6: 0.8376  loss_ce_7: 0.1505  loss_mask_7: 0.334  loss_dice_7: 0.8487  loss_ce_8: 0.1356  loss_mask_8: 0.3448  loss_dice_8: 0.8585    time: 1.0627  last_time: 1.0748  data_time: 0.0461  last_data_time: 0.0517   lr: 0.0001  max_mem: 30329M
[09/05 10:40:36] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:17:40 (1.0628 s / it)
[09/05 10:40:36] d2.engine.hooks INFO: Total training time: 0:18:01 (0:00:21 on hooks)
[09/05 10:40:36] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/05 10:40:36] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/05 10:40:36] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/05 10:40:36] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/05 10:40:36] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/05 10:40:36] d2.evaluation.evaluator INFO: Start inference on 500 batches
[09/05 10:40:41] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0047 s/iter. Inference: 0.2822 s/iter. Eval: 0.0673 s/iter. Total: 0.3542 s/iter. ETA=0:02:53
[09/05 10:40:46] d2.evaluation.evaluator INFO: Inference done 25/500. Dataloading: 0.0052 s/iter. Inference: 0.2873 s/iter. Eval: 0.0690 s/iter. Total: 0.3616 s/iter. ETA=0:02:51
[09/05 10:40:51] d2.evaluation.evaluator INFO: Inference done 39/500. Dataloading: 0.0054 s/iter. Inference: 0.2896 s/iter. Eval: 0.0682 s/iter. Total: 0.3632 s/iter. ETA=0:02:47
[09/05 10:40:56] d2.evaluation.evaluator INFO: Inference done 53/500. Dataloading: 0.0056 s/iter. Inference: 0.2894 s/iter. Eval: 0.0683 s/iter. Total: 0.3634 s/iter. ETA=0:02:42
[09/05 10:41:01] d2.evaluation.evaluator INFO: Inference done 67/500. Dataloading: 0.0057 s/iter. Inference: 0.2895 s/iter. Eval: 0.0682 s/iter. Total: 0.3635 s/iter. ETA=0:02:37
[09/05 10:41:06] d2.evaluation.evaluator INFO: Inference done 81/500. Dataloading: 0.0057 s/iter. Inference: 0.2895 s/iter. Eval: 0.0677 s/iter. Total: 0.3629 s/iter. ETA=0:02:32
[09/05 10:41:12] d2.evaluation.evaluator INFO: Inference done 96/500. Dataloading: 0.0057 s/iter. Inference: 0.2886 s/iter. Eval: 0.0674 s/iter. Total: 0.3619 s/iter. ETA=0:02:26
[09/05 10:41:17] d2.evaluation.evaluator INFO: Inference done 110/500. Dataloading: 0.0057 s/iter. Inference: 0.2881 s/iter. Eval: 0.0676 s/iter. Total: 0.3614 s/iter. ETA=0:02:20
[09/05 10:41:22] d2.evaluation.evaluator INFO: Inference done 125/500. Dataloading: 0.0058 s/iter. Inference: 0.2877 s/iter. Eval: 0.0675 s/iter. Total: 0.3611 s/iter. ETA=0:02:15
[09/05 10:41:27] d2.evaluation.evaluator INFO: Inference done 139/500. Dataloading: 0.0057 s/iter. Inference: 0.2881 s/iter. Eval: 0.0672 s/iter. Total: 0.3611 s/iter. ETA=0:02:10
[09/05 10:41:32] d2.evaluation.evaluator INFO: Inference done 153/500. Dataloading: 0.0058 s/iter. Inference: 0.2882 s/iter. Eval: 0.0672 s/iter. Total: 0.3612 s/iter. ETA=0:02:05
[09/05 10:41:38] d2.evaluation.evaluator INFO: Inference done 168/500. Dataloading: 0.0058 s/iter. Inference: 0.2877 s/iter. Eval: 0.0670 s/iter. Total: 0.3606 s/iter. ETA=0:01:59
[09/05 10:41:43] d2.evaluation.evaluator INFO: Inference done 182/500. Dataloading: 0.0058 s/iter. Inference: 0.2880 s/iter. Eval: 0.0669 s/iter. Total: 0.3608 s/iter. ETA=0:01:54
[09/05 10:41:48] d2.evaluation.evaluator INFO: Inference done 196/500. Dataloading: 0.0058 s/iter. Inference: 0.2883 s/iter. Eval: 0.0669 s/iter. Total: 0.3610 s/iter. ETA=0:01:49
[09/05 10:41:53] d2.evaluation.evaluator INFO: Inference done 210/500. Dataloading: 0.0058 s/iter. Inference: 0.2882 s/iter. Eval: 0.0668 s/iter. Total: 0.3609 s/iter. ETA=0:01:44
[09/05 10:41:58] d2.evaluation.evaluator INFO: Inference done 224/500. Dataloading: 0.0058 s/iter. Inference: 0.2888 s/iter. Eval: 0.0667 s/iter. Total: 0.3614 s/iter. ETA=0:01:39
[09/05 10:42:03] d2.evaluation.evaluator INFO: Inference done 238/500. Dataloading: 0.0058 s/iter. Inference: 0.2897 s/iter. Eval: 0.0667 s/iter. Total: 0.3623 s/iter. ETA=0:01:34
[09/05 10:42:09] d2.evaluation.evaluator INFO: Inference done 252/500. Dataloading: 0.0059 s/iter. Inference: 0.2908 s/iter. Eval: 0.0667 s/iter. Total: 0.3634 s/iter. ETA=0:01:30
[09/05 10:42:14] d2.evaluation.evaluator INFO: Inference done 265/500. Dataloading: 0.0059 s/iter. Inference: 0.2919 s/iter. Eval: 0.0666 s/iter. Total: 0.3645 s/iter. ETA=0:01:25
[09/05 10:42:19] d2.evaluation.evaluator INFO: Inference done 279/500. Dataloading: 0.0059 s/iter. Inference: 0.2921 s/iter. Eval: 0.0666 s/iter. Total: 0.3646 s/iter. ETA=0:01:20
[09/05 10:42:24] d2.evaluation.evaluator INFO: Inference done 293/500. Dataloading: 0.0059 s/iter. Inference: 0.2925 s/iter. Eval: 0.0666 s/iter. Total: 0.3650 s/iter. ETA=0:01:15
[09/05 10:42:29] d2.evaluation.evaluator INFO: Inference done 307/500. Dataloading: 0.0059 s/iter. Inference: 0.2924 s/iter. Eval: 0.0665 s/iter. Total: 0.3649 s/iter. ETA=0:01:10
[09/05 10:42:34] d2.evaluation.evaluator INFO: Inference done 322/500. Dataloading: 0.0059 s/iter. Inference: 0.2920 s/iter. Eval: 0.0664 s/iter. Total: 0.3644 s/iter. ETA=0:01:04
[09/05 10:42:39] d2.evaluation.evaluator INFO: Inference done 336/500. Dataloading: 0.0059 s/iter. Inference: 0.2919 s/iter. Eval: 0.0664 s/iter. Total: 0.3643 s/iter. ETA=0:00:59
[09/05 10:42:44] d2.evaluation.evaluator INFO: Inference done 350/500. Dataloading: 0.0059 s/iter. Inference: 0.2918 s/iter. Eval: 0.0665 s/iter. Total: 0.3642 s/iter. ETA=0:00:54
[09/05 10:42:50] d2.evaluation.evaluator INFO: Inference done 364/500. Dataloading: 0.0059 s/iter. Inference: 0.2918 s/iter. Eval: 0.0665 s/iter. Total: 0.3642 s/iter. ETA=0:00:49
[09/05 10:42:55] d2.evaluation.evaluator INFO: Inference done 378/500. Dataloading: 0.0059 s/iter. Inference: 0.2922 s/iter. Eval: 0.0665 s/iter. Total: 0.3647 s/iter. ETA=0:00:44
[09/05 10:43:00] d2.evaluation.evaluator INFO: Inference done 392/500. Dataloading: 0.0059 s/iter. Inference: 0.2924 s/iter. Eval: 0.0666 s/iter. Total: 0.3649 s/iter. ETA=0:00:39
[09/05 10:43:05] d2.evaluation.evaluator INFO: Inference done 406/500. Dataloading: 0.0059 s/iter. Inference: 0.2927 s/iter. Eval: 0.0665 s/iter. Total: 0.3652 s/iter. ETA=0:00:34
[09/05 10:43:10] d2.evaluation.evaluator INFO: Inference done 420/500. Dataloading: 0.0059 s/iter. Inference: 0.2930 s/iter. Eval: 0.0665 s/iter. Total: 0.3654 s/iter. ETA=0:00:29
[09/05 10:43:16] d2.evaluation.evaluator INFO: Inference done 434/500. Dataloading: 0.0059 s/iter. Inference: 0.2931 s/iter. Eval: 0.0665 s/iter. Total: 0.3656 s/iter. ETA=0:00:24
[09/05 10:43:21] d2.evaluation.evaluator INFO: Inference done 448/500. Dataloading: 0.0059 s/iter. Inference: 0.2930 s/iter. Eval: 0.0665 s/iter. Total: 0.3655 s/iter. ETA=0:00:19
[09/05 10:43:26] d2.evaluation.evaluator INFO: Inference done 462/500. Dataloading: 0.0059 s/iter. Inference: 0.2932 s/iter. Eval: 0.0665 s/iter. Total: 0.3657 s/iter. ETA=0:00:13
[09/05 10:43:31] d2.evaluation.evaluator INFO: Inference done 476/500. Dataloading: 0.0059 s/iter. Inference: 0.2931 s/iter. Eval: 0.0664 s/iter. Total: 0.3656 s/iter. ETA=0:00:08
[09/05 10:43:36] d2.evaluation.evaluator INFO: Inference done 490/500. Dataloading: 0.0059 s/iter. Inference: 0.2930 s/iter. Eval: 0.0664 s/iter. Total: 0.3655 s/iter. ETA=0:00:03
[09/05 10:43:40] d2.evaluation.evaluator INFO: Total inference time: 0:03:00.888160 (0.365431 s / iter per device, on 1 devices)
[09/05 10:43:40] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:24 (0.292803 s / iter per device, on 1 devices)
[09/05 10:43:40] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalodfj9o44 ...
[09/05 10:44:03] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 39.257 | 47.639 | 46.977 |      19       |
| Things | 0.000  | 0.000  | 0.000  |       8       |
| Stuff  | 67.808 | 82.285 | 81.142 |      11       |
[09/05 10:44:03] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.362 | 97.870 | 99.482 |     Stuff     |
| class_8  | 76.397 | 85.313 | 89.549 |     Stuff     |
| class_11 | 88.416 | 89.887 | 98.364 |     Stuff     |
| class_12 | 48.145 | 78.927 | 61.000 |     Stuff     |
| class_13 | 41.522 | 76.301 | 54.419 |     Stuff     |
| class_17 | 54.452 | 66.305 | 82.125 |     Stuff     |
| class_19 | 53.258 | 70.434 | 75.614 |     Stuff     |
| class_20 | 70.122 | 79.183 | 88.556 |     Stuff     |
| class_21 | 89.748 | 90.865 | 98.770 |     Stuff     |
| class_22 | 38.532 | 77.376 | 49.799 |     Stuff     |
| class_23 | 87.929 | 92.674 | 94.881 |     Stuff     |
| class_24 | 0.000  | 0.000  | 0.000  |    Things     |
| class_25 | 0.000  | 0.000  | 0.000  |    Things     |
| class_26 | 0.000  | 0.000  | 0.000  |    Things     |
| class_27 | 0.000  | 0.000  | 0.000  |    Things     |
| class_28 | 0.000  | 0.000  | 0.000  |    Things     |
| class_31 | 0.000  | 0.000  | 0.000  |    Things     |
| class_32 | 0.000  | 0.000  | 0.000  |    Things     |
| class_33 | 0.000  | 0.000  | 0.000  |    Things     |
[09/05 10:44:03] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[09/05 10:44:03] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/05 10:44:03] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/05 10:44:03] d2.evaluation.testing INFO: copypaste: 39.2571,47.6386,46.9767,0.0000,0.0000,0.0000,67.8076,82.2848,81.1417,97.3624,97.8695,99.4819,76.3967,85.3128,89.5490,88.4162,89.8868,98.3640,48.1453,78.9268,61.0000,41.5221,76.3013,54.4186,54.4525,66.3047,82.1246,53.2575,70.4337,75.6137,70.1219,79.1835,88.5561,89.7478,90.8650,98.7705,38.5324,77.3755,49.7992,87.9293,92.6736,94.8805,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000
