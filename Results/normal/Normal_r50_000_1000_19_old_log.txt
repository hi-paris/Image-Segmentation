[08/28 21:39:09] detectron2 INFO: Rank of current process: 0. World size: 1
[08/28 21:39:10] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/28 21:39:10] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[08/28 21:39:10] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/28 21:39:10] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/28 21:39:10] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000/config.yaml
[08/28 21:39:10] d2.utils.env INFO: Using a generated random seed 11867183
[08/28 21:39:14] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/28 21:39:14] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/28 21:39:14] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/28 21:39:14] d2.data.build INFO: Using training sampler TrainingSampler
[08/28 21:39:14] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/28 21:39:14] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/28 21:39:14] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/28 21:39:14] d2.data.build INFO: Making batched data loader with batch_size=8
[08/28 21:39:14] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/28 21:39:14] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[08/28 21:39:14] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[08/28 21:39:14] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/28 21:39:14] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/28 21:39:14] d2.engine.train_loop INFO: Starting training from iteration 0
[08/28 21:39:39] d2.utils.events INFO:  eta: 0:17:07  iter: 19  total_loss: 33.39  loss_ce: 1.286  loss_mask: 0.3131  loss_dice: 1.548  loss_ce_0: 1.628  loss_mask_0: 0.3376  loss_dice_0: 1.846  loss_ce_1: 1.49  loss_mask_1: 0.3322  loss_dice_1: 1.699  loss_ce_2: 1.443  loss_mask_2: 0.3227  loss_dice_2: 1.634  loss_ce_3: 1.409  loss_mask_3: 0.3227  loss_dice_3: 1.578  loss_ce_4: 1.407  loss_mask_4: 0.3208  loss_dice_4: 1.563  loss_ce_5: 1.31  loss_mask_5: 0.3175  loss_dice_5: 1.556  loss_ce_6: 1.291  loss_mask_6: 0.3215  loss_dice_6: 1.533  loss_ce_7: 1.287  loss_mask_7: 0.316  loss_dice_7: 1.551  loss_ce_8: 1.279  loss_mask_8: 0.3171  loss_dice_8: 1.541    time: 1.0724  last_time: 1.0384  data_time: 0.1153  last_data_time: 0.0862   lr: 0.0001  max_mem: 32159M
[08/28 21:40:01] d2.utils.events INFO:  eta: 0:17:17  iter: 39  total_loss: 26.03  loss_ce: 0.7517  loss_mask: 0.2221  loss_dice: 1.458  loss_ce_0: 0.8715  loss_mask_0: 0.2523  loss_dice_0: 1.77  loss_ce_1: 0.9288  loss_mask_1: 0.2459  loss_dice_1: 1.659  loss_ce_2: 0.8598  loss_mask_2: 0.2188  loss_dice_2: 1.575  loss_ce_3: 0.8012  loss_mask_3: 0.2186  loss_dice_3: 1.445  loss_ce_4: 0.8262  loss_mask_4: 0.2193  loss_dice_4: 1.54  loss_ce_5: 0.781  loss_mask_5: 0.2218  loss_dice_5: 1.462  loss_ce_6: 0.7862  loss_mask_6: 0.218  loss_dice_6: 1.468  loss_ce_7: 0.7675  loss_mask_7: 0.2208  loss_dice_7: 1.47  loss_ce_8: 0.7617  loss_mask_8: 0.224  loss_dice_8: 1.44    time: 1.0862  last_time: 1.0602  data_time: 0.0783  last_data_time: 0.0706   lr: 0.0001  max_mem: 32403M
[08/28 21:40:22] d2.utils.events INFO:  eta: 0:16:35  iter: 59  total_loss: 23.43  loss_ce: 0.6814  loss_mask: 0.2107  loss_dice: 1.337  loss_ce_0: 0.7535  loss_mask_0: 0.2481  loss_dice_0: 1.615  loss_ce_1: 0.8563  loss_mask_1: 0.2347  loss_dice_1: 1.54  loss_ce_2: 0.7633  loss_mask_2: 0.2223  loss_dice_2: 1.419  loss_ce_3: 0.7114  loss_mask_3: 0.219  loss_dice_3: 1.414  loss_ce_4: 0.7128  loss_mask_4: 0.2163  loss_dice_4: 1.364  loss_ce_5: 0.684  loss_mask_5: 0.2194  loss_dice_5: 1.381  loss_ce_6: 0.6446  loss_mask_6: 0.2111  loss_dice_6: 1.365  loss_ce_7: 0.6671  loss_mask_7: 0.2149  loss_dice_7: 1.357  loss_ce_8: 0.6432  loss_mask_8: 0.2145  loss_dice_8: 1.319    time: 1.0722  last_time: 1.0422  data_time: 0.0683  last_data_time: 0.0670   lr: 0.0001  max_mem: 32403M
[08/28 21:40:43] d2.utils.events INFO:  eta: 0:16:15  iter: 79  total_loss: 23.27  loss_ce: 0.6898  loss_mask: 0.2141  loss_dice: 1.376  loss_ce_0: 0.7168  loss_mask_0: 0.2371  loss_dice_0: 1.664  loss_ce_1: 0.8484  loss_mask_1: 0.2236  loss_dice_1: 1.569  loss_ce_2: 0.7337  loss_mask_2: 0.2202  loss_dice_2: 1.464  loss_ce_3: 0.6906  loss_mask_3: 0.2123  loss_dice_3: 1.404  loss_ce_4: 0.7017  loss_mask_4: 0.213  loss_dice_4: 1.41  loss_ce_5: 0.6758  loss_mask_5: 0.2167  loss_dice_5: 1.383  loss_ce_6: 0.6841  loss_mask_6: 0.2149  loss_dice_6: 1.345  loss_ce_7: 0.68  loss_mask_7: 0.2137  loss_dice_7: 1.349  loss_ce_8: 0.6845  loss_mask_8: 0.2146  loss_dice_8: 1.374    time: 1.0709  last_time: 1.0535  data_time: 0.0761  last_data_time: 0.0736   lr: 0.0001  max_mem: 32403M
[08/28 21:41:05] d2.utils.events INFO:  eta: 0:15:55  iter: 99  total_loss: 23.72  loss_ce: 0.6478  loss_mask: 0.1994  loss_dice: 1.362  loss_ce_0: 0.7202  loss_mask_0: 0.2293  loss_dice_0: 1.619  loss_ce_1: 0.8295  loss_mask_1: 0.2105  loss_dice_1: 1.508  loss_ce_2: 0.7524  loss_mask_2: 0.2035  loss_dice_2: 1.42  loss_ce_3: 0.714  loss_mask_3: 0.1999  loss_dice_3: 1.368  loss_ce_4: 0.7004  loss_mask_4: 0.2005  loss_dice_4: 1.385  loss_ce_5: 0.6535  loss_mask_5: 0.2022  loss_dice_5: 1.374  loss_ce_6: 0.654  loss_mask_6: 0.2002  loss_dice_6: 1.355  loss_ce_7: 0.6621  loss_mask_7: 0.2014  loss_dice_7: 1.37  loss_ce_8: 0.6662  loss_mask_8: 0.2013  loss_dice_8: 1.369    time: 1.0696  last_time: 1.0952  data_time: 0.0741  last_data_time: 0.0731   lr: 0.0001  max_mem: 32403M
[08/28 21:41:26] d2.utils.events INFO:  eta: 0:15:32  iter: 119  total_loss: 20.95  loss_ce: 0.5644  loss_mask: 0.2055  loss_dice: 1.198  loss_ce_0: 0.6442  loss_mask_0: 0.2391  loss_dice_0: 1.462  loss_ce_1: 0.7522  loss_mask_1: 0.2202  loss_dice_1: 1.36  loss_ce_2: 0.6965  loss_mask_2: 0.21  loss_dice_2: 1.292  loss_ce_3: 0.6026  loss_mask_3: 0.2099  loss_dice_3: 1.265  loss_ce_4: 0.585  loss_mask_4: 0.2108  loss_dice_4: 1.299  loss_ce_5: 0.5662  loss_mask_5: 0.2079  loss_dice_5: 1.252  loss_ce_6: 0.582  loss_mask_6: 0.2077  loss_dice_6: 1.221  loss_ce_7: 0.543  loss_mask_7: 0.2068  loss_dice_7: 1.216  loss_ce_8: 0.5712  loss_mask_8: 0.2078  loss_dice_8: 1.197    time: 1.0657  last_time: 1.0212  data_time: 0.0716  last_data_time: 0.0643   lr: 0.0001  max_mem: 32403M
[08/28 21:41:47] d2.utils.events INFO:  eta: 0:15:09  iter: 139  total_loss: 22.06  loss_ce: 0.539  loss_mask: 0.2251  loss_dice: 1.293  loss_ce_0: 0.6345  loss_mask_0: 0.2417  loss_dice_0: 1.563  loss_ce_1: 0.7383  loss_mask_1: 0.224  loss_dice_1: 1.444  loss_ce_2: 0.6477  loss_mask_2: 0.2213  loss_dice_2: 1.371  loss_ce_3: 0.5885  loss_mask_3: 0.2229  loss_dice_3: 1.353  loss_ce_4: 0.5647  loss_mask_4: 0.2227  loss_dice_4: 1.333  loss_ce_5: 0.5456  loss_mask_5: 0.2229  loss_dice_5: 1.324  loss_ce_6: 0.5726  loss_mask_6: 0.2211  loss_dice_6: 1.305  loss_ce_7: 0.5477  loss_mask_7: 0.2217  loss_dice_7: 1.322  loss_ce_8: 0.5557  loss_mask_8: 0.2186  loss_dice_8: 1.321    time: 1.0627  last_time: 1.0141  data_time: 0.0698  last_data_time: 0.0702   lr: 0.0001  max_mem: 32403M
[08/28 21:42:08] d2.utils.events INFO:  eta: 0:14:48  iter: 159  total_loss: 22.34  loss_ce: 0.5466  loss_mask: 0.1871  loss_dice: 1.359  loss_ce_0: 0.6466  loss_mask_0: 0.225  loss_dice_0: 1.652  loss_ce_1: 0.7122  loss_mask_1: 0.2084  loss_dice_1: 1.551  loss_ce_2: 0.6703  loss_mask_2: 0.1943  loss_dice_2: 1.445  loss_ce_3: 0.633  loss_mask_3: 0.1922  loss_dice_3: 1.394  loss_ce_4: 0.5504  loss_mask_4: 0.1865  loss_dice_4: 1.377  loss_ce_5: 0.5609  loss_mask_5: 0.1844  loss_dice_5: 1.359  loss_ce_6: 0.5661  loss_mask_6: 0.1886  loss_dice_6: 1.344  loss_ce_7: 0.5905  loss_mask_7: 0.1868  loss_dice_7: 1.345  loss_ce_8: 0.5535  loss_mask_8: 0.1872  loss_dice_8: 1.359    time: 1.0638  last_time: 1.0339  data_time: 0.0752  last_data_time: 0.0730   lr: 0.0001  max_mem: 32403M
[08/28 21:42:30] d2.utils.events INFO:  eta: 0:14:28  iter: 179  total_loss: 22.43  loss_ce: 0.5894  loss_mask: 0.1809  loss_dice: 1.33  loss_ce_0: 0.7399  loss_mask_0: 0.1987  loss_dice_0: 1.562  loss_ce_1: 0.8539  loss_mask_1: 0.1898  loss_dice_1: 1.5  loss_ce_2: 0.7095  loss_mask_2: 0.1833  loss_dice_2: 1.424  loss_ce_3: 0.6748  loss_mask_3: 0.1828  loss_dice_3: 1.373  loss_ce_4: 0.6183  loss_mask_4: 0.1822  loss_dice_4: 1.329  loss_ce_5: 0.6705  loss_mask_5: 0.1765  loss_dice_5: 1.323  loss_ce_6: 0.6221  loss_mask_6: 0.1809  loss_dice_6: 1.295  loss_ce_7: 0.6239  loss_mask_7: 0.181  loss_dice_7: 1.311  loss_ce_8: 0.6301  loss_mask_8: 0.1806  loss_dice_8: 1.302    time: 1.0661  last_time: 1.1959  data_time: 0.0779  last_data_time: 0.0936   lr: 0.0001  max_mem: 32403M
[08/28 21:42:51] d2.utils.events INFO:  eta: 0:14:07  iter: 199  total_loss: 22.28  loss_ce: 0.5719  loss_mask: 0.2015  loss_dice: 1.361  loss_ce_0: 0.6609  loss_mask_0: 0.2309  loss_dice_0: 1.572  loss_ce_1: 0.7564  loss_mask_1: 0.2134  loss_dice_1: 1.493  loss_ce_2: 0.6914  loss_mask_2: 0.2039  loss_dice_2: 1.44  loss_ce_3: 0.6388  loss_mask_3: 0.2034  loss_dice_3: 1.382  loss_ce_4: 0.6399  loss_mask_4: 0.2005  loss_dice_4: 1.406  loss_ce_5: 0.6244  loss_mask_5: 0.2021  loss_dice_5: 1.376  loss_ce_6: 0.5919  loss_mask_6: 0.1996  loss_dice_6: 1.354  loss_ce_7: 0.5913  loss_mask_7: 0.1986  loss_dice_7: 1.337  loss_ce_8: 0.618  loss_mask_8: 0.2  loss_dice_8: 1.392    time: 1.0659  last_time: 1.0876  data_time: 0.0741  last_data_time: 0.0911   lr: 0.0001  max_mem: 32403M
[08/28 21:43:13] d2.utils.events INFO:  eta: 0:13:48  iter: 219  total_loss: 22.17  loss_ce: 0.5777  loss_mask: 0.1874  loss_dice: 1.322  loss_ce_0: 0.6654  loss_mask_0: 0.2227  loss_dice_0: 1.576  loss_ce_1: 0.7692  loss_mask_1: 0.201  loss_dice_1: 1.458  loss_ce_2: 0.716  loss_mask_2: 0.19  loss_dice_2: 1.416  loss_ce_3: 0.6136  loss_mask_3: 0.1895  loss_dice_3: 1.398  loss_ce_4: 0.5995  loss_mask_4: 0.1869  loss_dice_4: 1.354  loss_ce_5: 0.5909  loss_mask_5: 0.1849  loss_dice_5: 1.362  loss_ce_6: 0.5934  loss_mask_6: 0.1877  loss_dice_6: 1.354  loss_ce_7: 0.617  loss_mask_7: 0.1892  loss_dice_7: 1.336  loss_ce_8: 0.6008  loss_mask_8: 0.1867  loss_dice_8: 1.327    time: 1.0672  last_time: 1.0548  data_time: 0.0767  last_data_time: 0.0661   lr: 0.0001  max_mem: 32403M
[08/28 21:43:34] d2.utils.events INFO:  eta: 0:13:26  iter: 239  total_loss: 21.99  loss_ce: 0.5737  loss_mask: 0.1851  loss_dice: 1.312  loss_ce_0: 0.6475  loss_mask_0: 0.2164  loss_dice_0: 1.575  loss_ce_1: 0.7253  loss_mask_1: 0.1952  loss_dice_1: 1.463  loss_ce_2: 0.6696  loss_mask_2: 0.1856  loss_dice_2: 1.393  loss_ce_3: 0.6429  loss_mask_3: 0.1923  loss_dice_3: 1.347  loss_ce_4: 0.5761  loss_mask_4: 0.1853  loss_dice_4: 1.34  loss_ce_5: 0.5808  loss_mask_5: 0.1851  loss_dice_5: 1.304  loss_ce_6: 0.5393  loss_mask_6: 0.1843  loss_dice_6: 1.376  loss_ce_7: 0.539  loss_mask_7: 0.1832  loss_dice_7: 1.297  loss_ce_8: 0.5584  loss_mask_8: 0.1829  loss_dice_8: 1.323    time: 1.0675  last_time: 1.1206  data_time: 0.0754  last_data_time: 0.0661   lr: 0.0001  max_mem: 32403M
[08/28 21:43:56] d2.utils.events INFO:  eta: 0:13:05  iter: 259  total_loss: 22.07  loss_ce: 0.5932  loss_mask: 0.1938  loss_dice: 1.318  loss_ce_0: 0.6167  loss_mask_0: 0.2266  loss_dice_0: 1.601  loss_ce_1: 0.6983  loss_mask_1: 0.2158  loss_dice_1: 1.47  loss_ce_2: 0.6522  loss_mask_2: 0.1974  loss_dice_2: 1.433  loss_ce_3: 0.606  loss_mask_3: 0.1963  loss_dice_3: 1.337  loss_ce_4: 0.6402  loss_mask_4: 0.2011  loss_dice_4: 1.359  loss_ce_5: 0.6074  loss_mask_5: 0.1995  loss_dice_5: 1.322  loss_ce_6: 0.6037  loss_mask_6: 0.1962  loss_dice_6: 1.301  loss_ce_7: 0.5801  loss_mask_7: 0.1973  loss_dice_7: 1.365  loss_ce_8: 0.5841  loss_mask_8: 0.1958  loss_dice_8: 1.357    time: 1.0675  last_time: 1.0082  data_time: 0.0754  last_data_time: 0.0676   lr: 0.0001  max_mem: 32403M
[08/28 21:44:17] d2.utils.events INFO:  eta: 0:12:44  iter: 279  total_loss: 21.64  loss_ce: 0.5742  loss_mask: 0.1778  loss_dice: 1.273  loss_ce_0: 0.6185  loss_mask_0: 0.2231  loss_dice_0: 1.513  loss_ce_1: 0.7126  loss_mask_1: 0.1978  loss_dice_1: 1.411  loss_ce_2: 0.6863  loss_mask_2: 0.1838  loss_dice_2: 1.371  loss_ce_3: 0.6173  loss_mask_3: 0.1847  loss_dice_3: 1.346  loss_ce_4: 0.5993  loss_mask_4: 0.1771  loss_dice_4: 1.307  loss_ce_5: 0.5867  loss_mask_5: 0.1754  loss_dice_5: 1.295  loss_ce_6: 0.5829  loss_mask_6: 0.1783  loss_dice_6: 1.312  loss_ce_7: 0.5672  loss_mask_7: 0.1764  loss_dice_7: 1.295  loss_ce_8: 0.5576  loss_mask_8: 0.177  loss_dice_8: 1.294    time: 1.0667  last_time: 1.0563  data_time: 0.0724  last_data_time: 0.0894   lr: 0.0001  max_mem: 32403M
[08/28 21:44:39] d2.utils.events INFO:  eta: 0:12:23  iter: 299  total_loss: 22.3  loss_ce: 0.6  loss_mask: 0.1944  loss_dice: 1.316  loss_ce_0: 0.6425  loss_mask_0: 0.2191  loss_dice_0: 1.59  loss_ce_1: 0.7608  loss_mask_1: 0.2021  loss_dice_1: 1.471  loss_ce_2: 0.7105  loss_mask_2: 0.1958  loss_dice_2: 1.391  loss_ce_3: 0.6252  loss_mask_3: 0.194  loss_dice_3: 1.341  loss_ce_4: 0.6337  loss_mask_4: 0.1947  loss_dice_4: 1.324  loss_ce_5: 0.6229  loss_mask_5: 0.1969  loss_dice_5: 1.33  loss_ce_6: 0.6089  loss_mask_6: 0.1947  loss_dice_6: 1.304  loss_ce_7: 0.5985  loss_mask_7: 0.1948  loss_dice_7: 1.329  loss_ce_8: 0.5822  loss_mask_8: 0.1928  loss_dice_8: 1.315    time: 1.0684  last_time: 1.1385  data_time: 0.0777  last_data_time: 0.0791   lr: 0.0001  max_mem: 32403M
[08/28 21:45:00] d2.utils.events INFO:  eta: 0:12:02  iter: 319  total_loss: 22.58  loss_ce: 0.6207  loss_mask: 0.1836  loss_dice: 1.323  loss_ce_0: 0.6727  loss_mask_0: 0.221  loss_dice_0: 1.594  loss_ce_1: 0.73  loss_mask_1: 0.202  loss_dice_1: 1.492  loss_ce_2: 0.685  loss_mask_2: 0.1869  loss_dice_2: 1.43  loss_ce_3: 0.6529  loss_mask_3: 0.1876  loss_dice_3: 1.333  loss_ce_4: 0.6246  loss_mask_4: 0.1881  loss_dice_4: 1.34  loss_ce_5: 0.6178  loss_mask_5: 0.187  loss_dice_5: 1.343  loss_ce_6: 0.5689  loss_mask_6: 0.1858  loss_dice_6: 1.334  loss_ce_7: 0.61  loss_mask_7: 0.1848  loss_dice_7: 1.332  loss_ce_8: 0.6014  loss_mask_8: 0.183  loss_dice_8: 1.327    time: 1.0683  last_time: 1.0233  data_time: 0.0729  last_data_time: 0.0675   lr: 0.0001  max_mem: 32403M
[08/28 21:45:22] d2.utils.events INFO:  eta: 0:11:41  iter: 339  total_loss: 21.18  loss_ce: 0.5608  loss_mask: 0.1713  loss_dice: 1.302  loss_ce_0: 0.5992  loss_mask_0: 0.1969  loss_dice_0: 1.581  loss_ce_1: 0.685  loss_mask_1: 0.1812  loss_dice_1: 1.44  loss_ce_2: 0.6295  loss_mask_2: 0.1739  loss_dice_2: 1.385  loss_ce_3: 0.5769  loss_mask_3: 0.1747  loss_dice_3: 1.351  loss_ce_4: 0.5825  loss_mask_4: 0.1723  loss_dice_4: 1.328  loss_ce_5: 0.5603  loss_mask_5: 0.1706  loss_dice_5: 1.302  loss_ce_6: 0.5569  loss_mask_6: 0.1698  loss_dice_6: 1.292  loss_ce_7: 0.5482  loss_mask_7: 0.1707  loss_dice_7: 1.327  loss_ce_8: 0.5325  loss_mask_8: 0.1692  loss_dice_8: 1.324    time: 1.0685  last_time: 1.1032  data_time: 0.0746  last_data_time: 0.0783   lr: 0.0001  max_mem: 32403M
[08/28 21:45:43] d2.utils.events INFO:  eta: 0:11:20  iter: 359  total_loss: 21.61  loss_ce: 0.5254  loss_mask: 0.1745  loss_dice: 1.33  loss_ce_0: 0.5979  loss_mask_0: 0.2118  loss_dice_0: 1.602  loss_ce_1: 0.668  loss_mask_1: 0.1891  loss_dice_1: 1.493  loss_ce_2: 0.6417  loss_mask_2: 0.1814  loss_dice_2: 1.425  loss_ce_3: 0.5764  loss_mask_3: 0.1814  loss_dice_3: 1.361  loss_ce_4: 0.5654  loss_mask_4: 0.1795  loss_dice_4: 1.357  loss_ce_5: 0.5672  loss_mask_5: 0.1787  loss_dice_5: 1.336  loss_ce_6: 0.5291  loss_mask_6: 0.1775  loss_dice_6: 1.339  loss_ce_7: 0.5128  loss_mask_7: 0.1783  loss_dice_7: 1.343  loss_ce_8: 0.5199  loss_mask_8: 0.1722  loss_dice_8: 1.33    time: 1.0692  last_time: 1.0363  data_time: 0.0754  last_data_time: 0.0804   lr: 0.0001  max_mem: 32403M
[08/28 21:46:05] d2.utils.events INFO:  eta: 0:10:59  iter: 379  total_loss: 21.51  loss_ce: 0.5413  loss_mask: 0.1973  loss_dice: 1.286  loss_ce_0: 0.6453  loss_mask_0: 0.2418  loss_dice_0: 1.554  loss_ce_1: 0.7434  loss_mask_1: 0.2149  loss_dice_1: 1.445  loss_ce_2: 0.67  loss_mask_2: 0.201  loss_dice_2: 1.36  loss_ce_3: 0.6226  loss_mask_3: 0.1947  loss_dice_3: 1.305  loss_ce_4: 0.609  loss_mask_4: 0.195  loss_dice_4: 1.275  loss_ce_5: 0.5848  loss_mask_5: 0.1986  loss_dice_5: 1.293  loss_ce_6: 0.5814  loss_mask_6: 0.1966  loss_dice_6: 1.256  loss_ce_7: 0.5712  loss_mask_7: 0.1964  loss_dice_7: 1.255  loss_ce_8: 0.5578  loss_mask_8: 0.2007  loss_dice_8: 1.244    time: 1.0699  last_time: 1.0886  data_time: 0.0761  last_data_time: 0.0712   lr: 0.0001  max_mem: 32403M
[08/28 21:46:27] d2.utils.events INFO:  eta: 0:10:38  iter: 399  total_loss: 20.87  loss_ce: 0.5777  loss_mask: 0.1777  loss_dice: 1.253  loss_ce_0: 0.6604  loss_mask_0: 0.2166  loss_dice_0: 1.508  loss_ce_1: 0.6988  loss_mask_1: 0.198  loss_dice_1: 1.373  loss_ce_2: 0.6578  loss_mask_2: 0.1866  loss_dice_2: 1.333  loss_ce_3: 0.5946  loss_mask_3: 0.1879  loss_dice_3: 1.283  loss_ce_4: 0.5696  loss_mask_4: 0.1839  loss_dice_4: 1.268  loss_ce_5: 0.5455  loss_mask_5: 0.1827  loss_dice_5: 1.271  loss_ce_6: 0.5618  loss_mask_6: 0.1797  loss_dice_6: 1.224  loss_ce_7: 0.5674  loss_mask_7: 0.1798  loss_dice_7: 1.257  loss_ce_8: 0.5475  loss_mask_8: 0.1822  loss_dice_8: 1.228    time: 1.0703  last_time: 1.0999  data_time: 0.0764  last_data_time: 0.0873   lr: 0.0001  max_mem: 32403M
[08/28 21:46:48] d2.utils.events INFO:  eta: 0:10:17  iter: 419  total_loss: 20.13  loss_ce: 0.521  loss_mask: 0.1746  loss_dice: 1.221  loss_ce_0: 0.5929  loss_mask_0: 0.2064  loss_dice_0: 1.428  loss_ce_1: 0.6602  loss_mask_1: 0.1927  loss_dice_1: 1.371  loss_ce_2: 0.6013  loss_mask_2: 0.1765  loss_dice_2: 1.288  loss_ce_3: 0.5624  loss_mask_3: 0.1787  loss_dice_3: 1.239  loss_ce_4: 0.5452  loss_mask_4: 0.1771  loss_dice_4: 1.245  loss_ce_5: 0.5095  loss_mask_5: 0.1752  loss_dice_5: 1.236  loss_ce_6: 0.5156  loss_mask_6: 0.1742  loss_dice_6: 1.198  loss_ce_7: 0.5351  loss_mask_7: 0.1744  loss_dice_7: 1.234  loss_ce_8: 0.5363  loss_mask_8: 0.1749  loss_dice_8: 1.207    time: 1.0699  last_time: 1.1409  data_time: 0.0706  last_data_time: 0.0743   lr: 0.0001  max_mem: 32403M
[08/28 21:47:10] d2.utils.events INFO:  eta: 0:09:55  iter: 439  total_loss: 21.51  loss_ce: 0.5508  loss_mask: 0.1867  loss_dice: 1.311  loss_ce_0: 0.6251  loss_mask_0: 0.2132  loss_dice_0: 1.507  loss_ce_1: 0.7103  loss_mask_1: 0.194  loss_dice_1: 1.45  loss_ce_2: 0.6291  loss_mask_2: 0.1964  loss_dice_2: 1.378  loss_ce_3: 0.5722  loss_mask_3: 0.1946  loss_dice_3: 1.329  loss_ce_4: 0.5601  loss_mask_4: 0.1882  loss_dice_4: 1.327  loss_ce_5: 0.5861  loss_mask_5: 0.1904  loss_dice_5: 1.332  loss_ce_6: 0.5408  loss_mask_6: 0.1884  loss_dice_6: 1.274  loss_ce_7: 0.5419  loss_mask_7: 0.1865  loss_dice_7: 1.282  loss_ce_8: 0.5268  loss_mask_8: 0.1881  loss_dice_8: 1.305    time: 1.0702  last_time: 1.1277  data_time: 0.0740  last_data_time: 0.0860   lr: 0.0001  max_mem: 32403M
[08/28 21:47:32] d2.utils.events INFO:  eta: 0:09:35  iter: 459  total_loss: 20.85  loss_ce: 0.5284  loss_mask: 0.1802  loss_dice: 1.258  loss_ce_0: 0.5748  loss_mask_0: 0.2153  loss_dice_0: 1.517  loss_ce_1: 0.6623  loss_mask_1: 0.1976  loss_dice_1: 1.398  loss_ce_2: 0.6119  loss_mask_2: 0.193  loss_dice_2: 1.385  loss_ce_3: 0.5572  loss_mask_3: 0.1886  loss_dice_3: 1.29  loss_ce_4: 0.5541  loss_mask_4: 0.188  loss_dice_4: 1.303  loss_ce_5: 0.5658  loss_mask_5: 0.1824  loss_dice_5: 1.291  loss_ce_6: 0.5361  loss_mask_6: 0.1836  loss_dice_6: 1.282  loss_ce_7: 0.5314  loss_mask_7: 0.1833  loss_dice_7: 1.269  loss_ce_8: 0.5647  loss_mask_8: 0.1821  loss_dice_8: 1.319    time: 1.0714  last_time: 1.0780  data_time: 0.0828  last_data_time: 0.1041   lr: 0.0001  max_mem: 32403M
[08/28 21:47:53] d2.utils.events INFO:  eta: 0:09:13  iter: 479  total_loss: 20.69  loss_ce: 0.5325  loss_mask: 0.174  loss_dice: 1.251  loss_ce_0: 0.6165  loss_mask_0: 0.2147  loss_dice_0: 1.489  loss_ce_1: 0.7129  loss_mask_1: 0.1817  loss_dice_1: 1.386  loss_ce_2: 0.6432  loss_mask_2: 0.1807  loss_dice_2: 1.304  loss_ce_3: 0.5859  loss_mask_3: 0.1779  loss_dice_3: 1.271  loss_ce_4: 0.5753  loss_mask_4: 0.1767  loss_dice_4: 1.264  loss_ce_5: 0.5789  loss_mask_5: 0.1756  loss_dice_5: 1.241  loss_ce_6: 0.5516  loss_mask_6: 0.1763  loss_dice_6: 1.223  loss_ce_7: 0.5298  loss_mask_7: 0.1755  loss_dice_7: 1.247  loss_ce_8: 0.5343  loss_mask_8: 0.1747  loss_dice_8: 1.237    time: 1.0718  last_time: 1.1037  data_time: 0.0789  last_data_time: 0.1083   lr: 0.0001  max_mem: 32403M
[08/28 21:48:15] d2.utils.events INFO:  eta: 0:08:52  iter: 499  total_loss: 21.44  loss_ce: 0.5467  loss_mask: 0.1942  loss_dice: 1.321  loss_ce_0: 0.6351  loss_mask_0: 0.22  loss_dice_0: 1.492  loss_ce_1: 0.7048  loss_mask_1: 0.2088  loss_dice_1: 1.404  loss_ce_2: 0.6355  loss_mask_2: 0.1985  loss_dice_2: 1.378  loss_ce_3: 0.5915  loss_mask_3: 0.1925  loss_dice_3: 1.311  loss_ce_4: 0.5492  loss_mask_4: 0.1941  loss_dice_4: 1.305  loss_ce_5: 0.5911  loss_mask_5: 0.1951  loss_dice_5: 1.321  loss_ce_6: 0.5471  loss_mask_6: 0.195  loss_dice_6: 1.286  loss_ce_7: 0.5557  loss_mask_7: 0.1926  loss_dice_7: 1.294  loss_ce_8: 0.5493  loss_mask_8: 0.1937  loss_dice_8: 1.276    time: 1.0719  last_time: 1.0265  data_time: 0.0757  last_data_time: 0.0676   lr: 0.0001  max_mem: 32403M
[08/28 21:48:37] d2.utils.events INFO:  eta: 0:08:31  iter: 519  total_loss: 20.64  loss_ce: 0.4926  loss_mask: 0.1718  loss_dice: 1.245  loss_ce_0: 0.5735  loss_mask_0: 0.1961  loss_dice_0: 1.537  loss_ce_1: 0.6487  loss_mask_1: 0.1862  loss_dice_1: 1.427  loss_ce_2: 0.5605  loss_mask_2: 0.1766  loss_dice_2: 1.361  loss_ce_3: 0.5594  loss_mask_3: 0.1739  loss_dice_3: 1.301  loss_ce_4: 0.5213  loss_mask_4: 0.1696  loss_dice_4: 1.287  loss_ce_5: 0.4979  loss_mask_5: 0.1698  loss_dice_5: 1.3  loss_ce_6: 0.553  loss_mask_6: 0.1711  loss_dice_6: 1.249  loss_ce_7: 0.501  loss_mask_7: 0.1696  loss_dice_7: 1.277  loss_ce_8: 0.5234  loss_mask_8: 0.1701  loss_dice_8: 1.284    time: 1.0726  last_time: 1.0735  data_time: 0.0790  last_data_time: 0.0768   lr: 0.0001  max_mem: 32403M
[08/28 21:48:58] d2.utils.events INFO:  eta: 0:08:10  iter: 539  total_loss: 21.06  loss_ce: 0.511  loss_mask: 0.18  loss_dice: 1.227  loss_ce_0: 0.5567  loss_mask_0: 0.2046  loss_dice_0: 1.499  loss_ce_1: 0.65  loss_mask_1: 0.1912  loss_dice_1: 1.44  loss_ce_2: 0.6277  loss_mask_2: 0.1854  loss_dice_2: 1.324  loss_ce_3: 0.5656  loss_mask_3: 0.1846  loss_dice_3: 1.337  loss_ce_4: 0.5426  loss_mask_4: 0.1844  loss_dice_4: 1.311  loss_ce_5: 0.5495  loss_mask_5: 0.1815  loss_dice_5: 1.295  loss_ce_6: 0.543  loss_mask_6: 0.1821  loss_dice_6: 1.288  loss_ce_7: 0.5181  loss_mask_7: 0.1808  loss_dice_7: 1.259  loss_ce_8: 0.5114  loss_mask_8: 0.1803  loss_dice_8: 1.261    time: 1.0727  last_time: 1.0697  data_time: 0.0783  last_data_time: 0.0722   lr: 0.0001  max_mem: 32403M
[08/28 21:49:20] d2.utils.events INFO:  eta: 0:07:49  iter: 559  total_loss: 21.64  loss_ce: 0.5681  loss_mask: 0.1887  loss_dice: 1.314  loss_ce_0: 0.6511  loss_mask_0: 0.2161  loss_dice_0: 1.593  loss_ce_1: 0.7545  loss_mask_1: 0.199  loss_dice_1: 1.458  loss_ce_2: 0.6745  loss_mask_2: 0.1884  loss_dice_2: 1.387  loss_ce_3: 0.6356  loss_mask_3: 0.1874  loss_dice_3: 1.345  loss_ce_4: 0.6023  loss_mask_4: 0.1878  loss_dice_4: 1.329  loss_ce_5: 0.5956  loss_mask_5: 0.1862  loss_dice_5: 1.337  loss_ce_6: 0.5842  loss_mask_6: 0.1881  loss_dice_6: 1.332  loss_ce_7: 0.5549  loss_mask_7: 0.1897  loss_dice_7: 1.308  loss_ce_8: 0.5397  loss_mask_8: 0.1865  loss_dice_8: 1.287    time: 1.0732  last_time: 1.1029  data_time: 0.0767  last_data_time: 0.0659   lr: 0.0001  max_mem: 32403M
[08/28 21:49:42] d2.utils.events INFO:  eta: 0:07:28  iter: 579  total_loss: 20.63  loss_ce: 0.5446  loss_mask: 0.1608  loss_dice: 1.273  loss_ce_0: 0.576  loss_mask_0: 0.1876  loss_dice_0: 1.522  loss_ce_1: 0.6769  loss_mask_1: 0.1695  loss_dice_1: 1.4  loss_ce_2: 0.6076  loss_mask_2: 0.1616  loss_dice_2: 1.332  loss_ce_3: 0.59  loss_mask_3: 0.1615  loss_dice_3: 1.316  loss_ce_4: 0.5675  loss_mask_4: 0.1598  loss_dice_4: 1.265  loss_ce_5: 0.5557  loss_mask_5: 0.1591  loss_dice_5: 1.261  loss_ce_6: 0.5352  loss_mask_6: 0.1575  loss_dice_6: 1.231  loss_ce_7: 0.5558  loss_mask_7: 0.1601  loss_dice_7: 1.242  loss_ce_8: 0.5624  loss_mask_8: 0.159  loss_dice_8: 1.264    time: 1.0745  last_time: 1.1528  data_time: 0.0848  last_data_time: 0.1377   lr: 0.0001  max_mem: 32403M
[08/28 21:50:04] d2.utils.events INFO:  eta: 0:07:07  iter: 599  total_loss: 20.18  loss_ce: 0.5207  loss_mask: 0.1802  loss_dice: 1.238  loss_ce_0: 0.6264  loss_mask_0: 0.2125  loss_dice_0: 1.457  loss_ce_1: 0.6756  loss_mask_1: 0.1932  loss_dice_1: 1.368  loss_ce_2: 0.6122  loss_mask_2: 0.1848  loss_dice_2: 1.286  loss_ce_3: 0.5509  loss_mask_3: 0.1846  loss_dice_3: 1.253  loss_ce_4: 0.5638  loss_mask_4: 0.1831  loss_dice_4: 1.222  loss_ce_5: 0.5254  loss_mask_5: 0.1812  loss_dice_5: 1.243  loss_ce_6: 0.5325  loss_mask_6: 0.1802  loss_dice_6: 1.232  loss_ce_7: 0.5003  loss_mask_7: 0.1821  loss_dice_7: 1.241  loss_ce_8: 0.5032  loss_mask_8: 0.1783  loss_dice_8: 1.243    time: 1.0746  last_time: 1.0163  data_time: 0.0763  last_data_time: 0.0729   lr: 0.0001  max_mem: 32403M
[08/28 21:50:26] d2.utils.events INFO:  eta: 0:06:46  iter: 619  total_loss: 20.8  loss_ce: 0.5022  loss_mask: 0.1619  loss_dice: 1.264  loss_ce_0: 0.5878  loss_mask_0: 0.1863  loss_dice_0: 1.52  loss_ce_1: 0.6576  loss_mask_1: 0.1801  loss_dice_1: 1.461  loss_ce_2: 0.5817  loss_mask_2: 0.1669  loss_dice_2: 1.324  loss_ce_3: 0.53  loss_mask_3: 0.1628  loss_dice_3: 1.294  loss_ce_4: 0.5569  loss_mask_4: 0.1622  loss_dice_4: 1.282  loss_ce_5: 0.536  loss_mask_5: 0.163  loss_dice_5: 1.281  loss_ce_6: 0.5339  loss_mask_6: 0.1623  loss_dice_6: 1.245  loss_ce_7: 0.481  loss_mask_7: 0.1618  loss_dice_7: 1.253  loss_ce_8: 0.5101  loss_mask_8: 0.1621  loss_dice_8: 1.296    time: 1.0751  last_time: 1.1200  data_time: 0.0771  last_data_time: 0.0619   lr: 0.0001  max_mem: 32403M
[08/28 21:50:47] d2.utils.events INFO:  eta: 0:06:24  iter: 639  total_loss: 19.31  loss_ce: 0.4747  loss_mask: 0.1657  loss_dice: 1.172  loss_ce_0: 0.5414  loss_mask_0: 0.1947  loss_dice_0: 1.39  loss_ce_1: 0.6313  loss_mask_1: 0.1908  loss_dice_1: 1.287  loss_ce_2: 0.5724  loss_mask_2: 0.1834  loss_dice_2: 1.226  loss_ce_3: 0.5336  loss_mask_3: 0.1774  loss_dice_3: 1.175  loss_ce_4: 0.505  loss_mask_4: 0.1746  loss_dice_4: 1.177  loss_ce_5: 0.5043  loss_mask_5: 0.1709  loss_dice_5: 1.165  loss_ce_6: 0.4873  loss_mask_6: 0.1686  loss_dice_6: 1.183  loss_ce_7: 0.4793  loss_mask_7: 0.17  loss_dice_7: 1.156  loss_ce_8: 0.4775  loss_mask_8: 0.1684  loss_dice_8: 1.134    time: 1.0751  last_time: 1.1343  data_time: 0.0772  last_data_time: 0.0903   lr: 0.0001  max_mem: 32403M
[08/28 21:51:09] d2.utils.events INFO:  eta: 0:06:03  iter: 659  total_loss: 21.23  loss_ce: 0.5089  loss_mask: 0.1861  loss_dice: 1.272  loss_ce_0: 0.5575  loss_mask_0: 0.2066  loss_dice_0: 1.5  loss_ce_1: 0.6034  loss_mask_1: 0.2  loss_dice_1: 1.4  loss_ce_2: 0.6069  loss_mask_2: 0.1923  loss_dice_2: 1.347  loss_ce_3: 0.5719  loss_mask_3: 0.1898  loss_dice_3: 1.329  loss_ce_4: 0.5429  loss_mask_4: 0.1829  loss_dice_4: 1.286  loss_ce_5: 0.5615  loss_mask_5: 0.1815  loss_dice_5: 1.336  loss_ce_6: 0.5518  loss_mask_6: 0.1812  loss_dice_6: 1.266  loss_ce_7: 0.5096  loss_mask_7: 0.1816  loss_dice_7: 1.333  loss_ce_8: 0.508  loss_mask_8: 0.1816  loss_dice_8: 1.307    time: 1.0754  last_time: 1.0840  data_time: 0.0764  last_data_time: 0.0716   lr: 0.0001  max_mem: 32403M
[08/28 21:51:31] d2.utils.events INFO:  eta: 0:05:42  iter: 679  total_loss: 19.95  loss_ce: 0.475  loss_mask: 0.1668  loss_dice: 1.257  loss_ce_0: 0.5706  loss_mask_0: 0.192  loss_dice_0: 1.524  loss_ce_1: 0.6542  loss_mask_1: 0.1816  loss_dice_1: 1.385  loss_ce_2: 0.5924  loss_mask_2: 0.1658  loss_dice_2: 1.312  loss_ce_3: 0.5162  loss_mask_3: 0.1704  loss_dice_3: 1.309  loss_ce_4: 0.5414  loss_mask_4: 0.1667  loss_dice_4: 1.259  loss_ce_5: 0.5572  loss_mask_5: 0.165  loss_dice_5: 1.28  loss_ce_6: 0.4676  loss_mask_6: 0.1682  loss_dice_6: 1.286  loss_ce_7: 0.4828  loss_mask_7: 0.1657  loss_dice_7: 1.259  loss_ce_8: 0.4699  loss_mask_8: 0.1672  loss_dice_8: 1.257    time: 1.0763  last_time: 1.1311  data_time: 0.0795  last_data_time: 0.0807   lr: 0.0001  max_mem: 32403M
[08/28 21:51:53] d2.utils.events INFO:  eta: 0:05:21  iter: 699  total_loss: 21.68  loss_ce: 0.5109  loss_mask: 0.1837  loss_dice: 1.289  loss_ce_0: 0.6432  loss_mask_0: 0.2107  loss_dice_0: 1.568  loss_ce_1: 0.689  loss_mask_1: 0.1922  loss_dice_1: 1.408  loss_ce_2: 0.662  loss_mask_2: 0.1876  loss_dice_2: 1.354  loss_ce_3: 0.591  loss_mask_3: 0.1834  loss_dice_3: 1.331  loss_ce_4: 0.5173  loss_mask_4: 0.1846  loss_dice_4: 1.327  loss_ce_5: 0.5801  loss_mask_5: 0.1834  loss_dice_5: 1.309  loss_ce_6: 0.5056  loss_mask_6: 0.1828  loss_dice_6: 1.328  loss_ce_7: 0.5068  loss_mask_7: 0.1792  loss_dice_7: 1.278  loss_ce_8: 0.5014  loss_mask_8: 0.1825  loss_dice_8: 1.325    time: 1.0772  last_time: 1.0731  data_time: 0.0827  last_data_time: 0.0692   lr: 0.0001  max_mem: 32403M
[08/28 21:52:15] d2.utils.events INFO:  eta: 0:04:59  iter: 719  total_loss: 19.57  loss_ce: 0.4558  loss_mask: 0.1824  loss_dice: 1.182  loss_ce_0: 0.5676  loss_mask_0: 0.2038  loss_dice_0: 1.399  loss_ce_1: 0.6393  loss_mask_1: 0.1938  loss_dice_1: 1.356  loss_ce_2: 0.566  loss_mask_2: 0.1837  loss_dice_2: 1.279  loss_ce_3: 0.5576  loss_mask_3: 0.1835  loss_dice_3: 1.199  loss_ce_4: 0.4935  loss_mask_4: 0.1849  loss_dice_4: 1.203  loss_ce_5: 0.4886  loss_mask_5: 0.1833  loss_dice_5: 1.19  loss_ce_6: 0.4521  loss_mask_6: 0.1808  loss_dice_6: 1.186  loss_ce_7: 0.439  loss_mask_7: 0.1802  loss_dice_7: 1.2  loss_ce_8: 0.4561  loss_mask_8: 0.1813  loss_dice_8: 1.192    time: 1.0772  last_time: 1.0935  data_time: 0.0785  last_data_time: 0.0859   lr: 0.0001  max_mem: 32403M
[08/28 21:52:37] d2.utils.events INFO:  eta: 0:04:38  iter: 739  total_loss: 20.31  loss_ce: 0.4647  loss_mask: 0.1868  loss_dice: 1.294  loss_ce_0: 0.5517  loss_mask_0: 0.2171  loss_dice_0: 1.49  loss_ce_1: 0.6182  loss_mask_1: 0.1995  loss_dice_1: 1.39  loss_ce_2: 0.5856  loss_mask_2: 0.186  loss_dice_2: 1.36  loss_ce_3: 0.5415  loss_mask_3: 0.1909  loss_dice_3: 1.293  loss_ce_4: 0.5348  loss_mask_4: 0.1914  loss_dice_4: 1.274  loss_ce_5: 0.4952  loss_mask_5: 0.1892  loss_dice_5: 1.261  loss_ce_6: 0.4628  loss_mask_6: 0.186  loss_dice_6: 1.269  loss_ce_7: 0.4484  loss_mask_7: 0.1881  loss_dice_7: 1.342  loss_ce_8: 0.442  loss_mask_8: 0.1856  loss_dice_8: 1.314    time: 1.0774  last_time: 1.0246  data_time: 0.0757  last_data_time: 0.0669   lr: 0.0001  max_mem: 32403M
[08/28 21:52:59] d2.utils.events INFO:  eta: 0:04:17  iter: 759  total_loss: 20.06  loss_ce: 0.4691  loss_mask: 0.1827  loss_dice: 1.248  loss_ce_0: 0.5799  loss_mask_0: 0.1955  loss_dice_0: 1.49  loss_ce_1: 0.6556  loss_mask_1: 0.1909  loss_dice_1: 1.402  loss_ce_2: 0.6215  loss_mask_2: 0.1818  loss_dice_2: 1.355  loss_ce_3: 0.5507  loss_mask_3: 0.1889  loss_dice_3: 1.278  loss_ce_4: 0.4937  loss_mask_4: 0.1781  loss_dice_4: 1.272  loss_ce_5: 0.5044  loss_mask_5: 0.182  loss_dice_5: 1.265  loss_ce_6: 0.4663  loss_mask_6: 0.1822  loss_dice_6: 1.278  loss_ce_7: 0.4459  loss_mask_7: 0.1811  loss_dice_7: 1.305  loss_ce_8: 0.4462  loss_mask_8: 0.1817  loss_dice_8: 1.284    time: 1.0779  last_time: 1.0596  data_time: 0.0799  last_data_time: 0.0597   lr: 0.0001  max_mem: 32403M
[08/28 21:53:20] d2.utils.events INFO:  eta: 0:03:55  iter: 779  total_loss: 20.06  loss_ce: 0.4786  loss_mask: 0.174  loss_dice: 1.19  loss_ce_0: 0.5865  loss_mask_0: 0.2037  loss_dice_0: 1.444  loss_ce_1: 0.6407  loss_mask_1: 0.1933  loss_dice_1: 1.364  loss_ce_2: 0.5815  loss_mask_2: 0.184  loss_dice_2: 1.292  loss_ce_3: 0.5472  loss_mask_3: 0.1809  loss_dice_3: 1.228  loss_ce_4: 0.5061  loss_mask_4: 0.1774  loss_dice_4: 1.239  loss_ce_5: 0.478  loss_mask_5: 0.1749  loss_dice_5: 1.212  loss_ce_6: 0.4726  loss_mask_6: 0.1735  loss_dice_6: 1.219  loss_ce_7: 0.4555  loss_mask_7: 0.1734  loss_dice_7: 1.21  loss_ce_8: 0.4501  loss_mask_8: 0.1708  loss_dice_8: 1.226    time: 1.0780  last_time: 1.0444  data_time: 0.0769  last_data_time: 0.0685   lr: 0.0001  max_mem: 32403M
[08/28 21:53:42] d2.utils.events INFO:  eta: 0:03:34  iter: 799  total_loss: 19.77  loss_ce: 0.5168  loss_mask: 0.1716  loss_dice: 1.217  loss_ce_0: 0.578  loss_mask_0: 0.211  loss_dice_0: 1.415  loss_ce_1: 0.6573  loss_mask_1: 0.1886  loss_dice_1: 1.342  loss_ce_2: 0.5977  loss_mask_2: 0.1729  loss_dice_2: 1.281  loss_ce_3: 0.5603  loss_mask_3: 0.1743  loss_dice_3: 1.23  loss_ce_4: 0.5407  loss_mask_4: 0.1738  loss_dice_4: 1.249  loss_ce_5: 0.5173  loss_mask_5: 0.1719  loss_dice_5: 1.202  loss_ce_6: 0.4751  loss_mask_6: 0.1737  loss_dice_6: 1.224  loss_ce_7: 0.4759  loss_mask_7: 0.171  loss_dice_7: 1.205  loss_ce_8: 0.491  loss_mask_8: 0.1729  loss_dice_8: 1.2    time: 1.0781  last_time: 1.0810  data_time: 0.0769  last_data_time: 0.0801   lr: 0.0001  max_mem: 32403M
[08/28 21:54:04] d2.utils.events INFO:  eta: 0:03:13  iter: 819  total_loss: 20.69  loss_ce: 0.5278  loss_mask: 0.1694  loss_dice: 1.262  loss_ce_0: 0.6485  loss_mask_0: 0.1927  loss_dice_0: 1.497  loss_ce_1: 0.7064  loss_mask_1: 0.1802  loss_dice_1: 1.401  loss_ce_2: 0.6445  loss_mask_2: 0.1701  loss_dice_2: 1.345  loss_ce_3: 0.6051  loss_mask_3: 0.1715  loss_dice_3: 1.278  loss_ce_4: 0.5777  loss_mask_4: 0.1743  loss_dice_4: 1.278  loss_ce_5: 0.5642  loss_mask_5: 0.1711  loss_dice_5: 1.264  loss_ce_6: 0.5175  loss_mask_6: 0.1699  loss_dice_6: 1.267  loss_ce_7: 0.5419  loss_mask_7: 0.1683  loss_dice_7: 1.246  loss_ce_8: 0.5375  loss_mask_8: 0.1675  loss_dice_8: 1.271    time: 1.0788  last_time: 1.1073  data_time: 0.0794  last_data_time: 0.0821   lr: 0.0001  max_mem: 32403M
[08/28 21:54:27] d2.utils.events INFO:  eta: 0:02:51  iter: 839  total_loss: 20.22  loss_ce: 0.4843  loss_mask: 0.1566  loss_dice: 1.27  loss_ce_0: 0.5465  loss_mask_0: 0.1842  loss_dice_0: 1.48  loss_ce_1: 0.6215  loss_mask_1: 0.176  loss_dice_1: 1.375  loss_ce_2: 0.5675  loss_mask_2: 0.1623  loss_dice_2: 1.327  loss_ce_3: 0.5372  loss_mask_3: 0.1613  loss_dice_3: 1.281  loss_ce_4: 0.541  loss_mask_4: 0.1633  loss_dice_4: 1.305  loss_ce_5: 0.5323  loss_mask_5: 0.1601  loss_dice_5: 1.286  loss_ce_6: 0.4798  loss_mask_6: 0.1605  loss_dice_6: 1.274  loss_ce_7: 0.4805  loss_mask_7: 0.1593  loss_dice_7: 1.296  loss_ce_8: 0.4966  loss_mask_8: 0.1607  loss_dice_8: 1.284    time: 1.0795  last_time: 1.1419  data_time: 0.0840  last_data_time: 0.0768   lr: 0.0001  max_mem: 32403M
[08/28 21:54:49] d2.utils.events INFO:  eta: 0:02:30  iter: 859  total_loss: 20.44  loss_ce: 0.5  loss_mask: 0.1711  loss_dice: 1.236  loss_ce_0: 0.587  loss_mask_0: 0.2037  loss_dice_0: 1.514  loss_ce_1: 0.6487  loss_mask_1: 0.1874  loss_dice_1: 1.401  loss_ce_2: 0.6301  loss_mask_2: 0.1768  loss_dice_2: 1.333  loss_ce_3: 0.5534  loss_mask_3: 0.1777  loss_dice_3: 1.274  loss_ce_4: 0.5585  loss_mask_4: 0.1752  loss_dice_4: 1.277  loss_ce_5: 0.5207  loss_mask_5: 0.1753  loss_dice_5: 1.253  loss_ce_6: 0.4956  loss_mask_6: 0.1728  loss_dice_6: 1.263  loss_ce_7: 0.5003  loss_mask_7: 0.1712  loss_dice_7: 1.255  loss_ce_8: 0.4754  loss_mask_8: 0.1718  loss_dice_8: 1.246    time: 1.0800  last_time: 1.0695  data_time: 0.0786  last_data_time: 0.0826   lr: 0.0001  max_mem: 32471M
[08/28 21:55:11] d2.utils.events INFO:  eta: 0:02:08  iter: 879  total_loss: 19.4  loss_ce: 0.4643  loss_mask: 0.1756  loss_dice: 1.222  loss_ce_0: 0.5566  loss_mask_0: 0.203  loss_dice_0: 1.466  loss_ce_1: 0.5948  loss_mask_1: 0.1883  loss_dice_1: 1.366  loss_ce_2: 0.5442  loss_mask_2: 0.1849  loss_dice_2: 1.275  loss_ce_3: 0.5208  loss_mask_3: 0.1826  loss_dice_3: 1.242  loss_ce_4: 0.4837  loss_mask_4: 0.18  loss_dice_4: 1.255  loss_ce_5: 0.4786  loss_mask_5: 0.1811  loss_dice_5: 1.246  loss_ce_6: 0.4802  loss_mask_6: 0.1747  loss_dice_6: 1.22  loss_ce_7: 0.4628  loss_mask_7: 0.1746  loss_dice_7: 1.247  loss_ce_8: 0.4681  loss_mask_8: 0.1759  loss_dice_8: 1.205    time: 1.0805  last_time: 1.1361  data_time: 0.0840  last_data_time: 0.1503   lr: 0.0001  max_mem: 32471M
[08/28 21:55:33] d2.utils.events INFO:  eta: 0:01:47  iter: 899  total_loss: 21.28  loss_ce: 0.5298  loss_mask: 0.1807  loss_dice: 1.28  loss_ce_0: 0.6354  loss_mask_0: 0.2133  loss_dice_0: 1.473  loss_ce_1: 0.6874  loss_mask_1: 0.1898  loss_dice_1: 1.44  loss_ce_2: 0.6479  loss_mask_2: 0.1852  loss_dice_2: 1.363  loss_ce_3: 0.6041  loss_mask_3: 0.1848  loss_dice_3: 1.293  loss_ce_4: 0.5818  loss_mask_4: 0.1772  loss_dice_4: 1.285  loss_ce_5: 0.5506  loss_mask_5: 0.1811  loss_dice_5: 1.269  loss_ce_6: 0.5897  loss_mask_6: 0.1787  loss_dice_6: 1.241  loss_ce_7: 0.5762  loss_mask_7: 0.1778  loss_dice_7: 1.268  loss_ce_8: 0.5479  loss_mask_8: 0.1781  loss_dice_8: 1.261    time: 1.0807  last_time: 1.0908  data_time: 0.0768  last_data_time: 0.0877   lr: 0.0001  max_mem: 32471M
[08/28 21:55:55] d2.utils.events INFO:  eta: 0:01:25  iter: 919  total_loss: 19.65  loss_ce: 0.4802  loss_mask: 0.1739  loss_dice: 1.209  loss_ce_0: 0.6088  loss_mask_0: 0.2089  loss_dice_0: 1.414  loss_ce_1: 0.6441  loss_mask_1: 0.1872  loss_dice_1: 1.362  loss_ce_2: 0.5898  loss_mask_2: 0.1768  loss_dice_2: 1.305  loss_ce_3: 0.5288  loss_mask_3: 0.1784  loss_dice_3: 1.279  loss_ce_4: 0.534  loss_mask_4: 0.178  loss_dice_4: 1.265  loss_ce_5: 0.5167  loss_mask_5: 0.1723  loss_dice_5: 1.232  loss_ce_6: 0.4952  loss_mask_6: 0.1754  loss_dice_6: 1.227  loss_ce_7: 0.4823  loss_mask_7: 0.1744  loss_dice_7: 1.235  loss_ce_8: 0.4886  loss_mask_8: 0.1749  loss_dice_8: 1.213    time: 1.0811  last_time: 1.1124  data_time: 0.0839  last_data_time: 0.0939   lr: 0.0001  max_mem: 32471M
[08/28 21:56:17] d2.utils.events INFO:  eta: 0:01:04  iter: 939  total_loss: 20.05  loss_ce: 0.4864  loss_mask: 0.1735  loss_dice: 1.206  loss_ce_0: 0.5774  loss_mask_0: 0.1961  loss_dice_0: 1.444  loss_ce_1: 0.6534  loss_mask_1: 0.1857  loss_dice_1: 1.379  loss_ce_2: 0.5733  loss_mask_2: 0.1781  loss_dice_2: 1.315  loss_ce_3: 0.5654  loss_mask_3: 0.1777  loss_dice_3: 1.274  loss_ce_4: 0.541  loss_mask_4: 0.1761  loss_dice_4: 1.251  loss_ce_5: 0.4773  loss_mask_5: 0.1768  loss_dice_5: 1.259  loss_ce_6: 0.5213  loss_mask_6: 0.1738  loss_dice_6: 1.247  loss_ce_7: 0.5146  loss_mask_7: 0.1757  loss_dice_7: 1.217  loss_ce_8: 0.5031  loss_mask_8: 0.1738  loss_dice_8: 1.235    time: 1.0814  last_time: 1.1629  data_time: 0.0794  last_data_time: 0.1188   lr: 0.0001  max_mem: 32471M
[08/28 21:56:39] d2.utils.events INFO:  eta: 0:00:43  iter: 959  total_loss: 21.57  loss_ce: 0.5237  loss_mask: 0.1702  loss_dice: 1.329  loss_ce_0: 0.6182  loss_mask_0: 0.2029  loss_dice_0: 1.529  loss_ce_1: 0.6409  loss_mask_1: 0.1887  loss_dice_1: 1.47  loss_ce_2: 0.6065  loss_mask_2: 0.1796  loss_dice_2: 1.389  loss_ce_3: 0.5697  loss_mask_3: 0.187  loss_dice_3: 1.371  loss_ce_4: 0.5555  loss_mask_4: 0.1745  loss_dice_4: 1.319  loss_ce_5: 0.5656  loss_mask_5: 0.1719  loss_dice_5: 1.316  loss_ce_6: 0.5259  loss_mask_6: 0.1707  loss_dice_6: 1.331  loss_ce_7: 0.5225  loss_mask_7: 0.1689  loss_dice_7: 1.299  loss_ce_8: 0.5161  loss_mask_8: 0.1704  loss_dice_8: 1.311    time: 1.0819  last_time: 1.1161  data_time: 0.0828  last_data_time: 0.0586   lr: 0.0001  max_mem: 32471M
[08/28 21:57:01] d2.utils.events INFO:  eta: 0:00:21  iter: 979  total_loss: 19.61  loss_ce: 0.4378  loss_mask: 0.173  loss_dice: 1.204  loss_ce_0: 0.5469  loss_mask_0: 0.1951  loss_dice_0: 1.436  loss_ce_1: 0.6073  loss_mask_1: 0.1878  loss_dice_1: 1.34  loss_ce_2: 0.5615  loss_mask_2: 0.1768  loss_dice_2: 1.268  loss_ce_3: 0.488  loss_mask_3: 0.1733  loss_dice_3: 1.218  loss_ce_4: 0.4722  loss_mask_4: 0.1768  loss_dice_4: 1.211  loss_ce_5: 0.453  loss_mask_5: 0.173  loss_dice_5: 1.236  loss_ce_6: 0.4418  loss_mask_6: 0.1716  loss_dice_6: 1.204  loss_ce_7: 0.4641  loss_mask_7: 0.1722  loss_dice_7: 1.202  loss_ce_8: 0.4252  loss_mask_8: 0.1729  loss_dice_8: 1.167    time: 1.0823  last_time: 1.0625  data_time: 0.0812  last_data_time: 0.0839   lr: 0.0001  max_mem: 32471M
[08/28 21:57:23] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000/model_final.pth
[08/28 21:57:25] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 20.15  loss_ce: 0.5008  loss_mask: 0.1718  loss_dice: 1.212  loss_ce_0: 0.5906  loss_mask_0: 0.1981  loss_dice_0: 1.416  loss_ce_1: 0.6388  loss_mask_1: 0.1907  loss_dice_1: 1.384  loss_ce_2: 0.6508  loss_mask_2: 0.176  loss_dice_2: 1.279  loss_ce_3: 0.5777  loss_mask_3: 0.1761  loss_dice_3: 1.246  loss_ce_4: 0.5273  loss_mask_4: 0.1753  loss_dice_4: 1.228  loss_ce_5: 0.5282  loss_mask_5: 0.1739  loss_dice_5: 1.253  loss_ce_6: 0.501  loss_mask_6: 0.1716  loss_dice_6: 1.233  loss_ce_7: 0.5195  loss_mask_7: 0.1711  loss_dice_7: 1.228  loss_ce_8: 0.4994  loss_mask_8: 0.1713  loss_dice_8: 1.209    time: 1.0826  last_time: 1.0654  data_time: 0.0782  last_data_time: 0.0766   lr: 0.0001  max_mem: 32471M
[08/28 21:57:25] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:18:00 (1.0826 s / it)
[08/28 21:57:25] d2.engine.hooks INFO: Total training time: 0:18:05 (0:00:05 on hooks)
[08/28 21:57:25] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/28 21:57:25] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/28 21:57:25] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/28 21:57:25] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/28 21:57:25] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/28 21:57:25] d2.evaluation.evaluator INFO: Start inference on 500 batches
[08/28 21:57:29] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0049 s/iter. Inference: 0.2234 s/iter. Eval: 0.0654 s/iter. Total: 0.2937 s/iter. ETA=0:02:23
[08/28 21:57:34] d2.evaluation.evaluator INFO: Inference done 29/500. Dataloading: 0.0058 s/iter. Inference: 0.2103 s/iter. Eval: 0.0673 s/iter. Total: 0.2834 s/iter. ETA=0:02:13
[08/28 21:57:40] d2.evaluation.evaluator INFO: Inference done 46/500. Dataloading: 0.0059 s/iter. Inference: 0.2212 s/iter. Eval: 0.0666 s/iter. Total: 0.2937 s/iter. ETA=0:02:13
[08/28 21:57:45] d2.evaluation.evaluator INFO: Inference done 63/500. Dataloading: 0.0059 s/iter. Inference: 0.2246 s/iter. Eval: 0.0663 s/iter. Total: 0.2969 s/iter. ETA=0:02:09
[08/28 21:57:50] d2.evaluation.evaluator INFO: Inference done 80/500. Dataloading: 0.0061 s/iter. Inference: 0.2236 s/iter. Eval: 0.0669 s/iter. Total: 0.2967 s/iter. ETA=0:02:04
[08/28 21:57:55] d2.evaluation.evaluator INFO: Inference done 97/500. Dataloading: 0.0061 s/iter. Inference: 0.2250 s/iter. Eval: 0.0672 s/iter. Total: 0.2984 s/iter. ETA=0:02:00
[08/28 21:58:00] d2.evaluation.evaluator INFO: Inference done 115/500. Dataloading: 0.0061 s/iter. Inference: 0.2233 s/iter. Eval: 0.0671 s/iter. Total: 0.2966 s/iter. ETA=0:01:54
[08/28 21:58:06] d2.evaluation.evaluator INFO: Inference done 133/500. Dataloading: 0.0061 s/iter. Inference: 0.2231 s/iter. Eval: 0.0670 s/iter. Total: 0.2962 s/iter. ETA=0:01:48
[08/28 21:58:11] d2.evaluation.evaluator INFO: Inference done 151/500. Dataloading: 0.0060 s/iter. Inference: 0.2218 s/iter. Eval: 0.0668 s/iter. Total: 0.2948 s/iter. ETA=0:01:42
[08/28 21:58:16] d2.evaluation.evaluator INFO: Inference done 169/500. Dataloading: 0.0060 s/iter. Inference: 0.2209 s/iter. Eval: 0.0667 s/iter. Total: 0.2938 s/iter. ETA=0:01:37
[08/28 21:58:21] d2.evaluation.evaluator INFO: Inference done 187/500. Dataloading: 0.0060 s/iter. Inference: 0.2200 s/iter. Eval: 0.0667 s/iter. Total: 0.2929 s/iter. ETA=0:01:31
[08/28 21:58:26] d2.evaluation.evaluator INFO: Inference done 204/500. Dataloading: 0.0060 s/iter. Inference: 0.2206 s/iter. Eval: 0.0667 s/iter. Total: 0.2934 s/iter. ETA=0:01:26
[08/28 21:58:31] d2.evaluation.evaluator INFO: Inference done 222/500. Dataloading: 0.0060 s/iter. Inference: 0.2200 s/iter. Eval: 0.0667 s/iter. Total: 0.2928 s/iter. ETA=0:01:21
[08/28 21:58:36] d2.evaluation.evaluator INFO: Inference done 241/500. Dataloading: 0.0060 s/iter. Inference: 0.2188 s/iter. Eval: 0.0666 s/iter. Total: 0.2915 s/iter. ETA=0:01:15
[08/28 21:58:42] d2.evaluation.evaluator INFO: Inference done 258/500. Dataloading: 0.0060 s/iter. Inference: 0.2193 s/iter. Eval: 0.0667 s/iter. Total: 0.2920 s/iter. ETA=0:01:10
[08/28 21:58:47] d2.evaluation.evaluator INFO: Inference done 276/500. Dataloading: 0.0060 s/iter. Inference: 0.2187 s/iter. Eval: 0.0667 s/iter. Total: 0.2915 s/iter. ETA=0:01:05
[08/28 21:58:52] d2.evaluation.evaluator INFO: Inference done 294/500. Dataloading: 0.0060 s/iter. Inference: 0.2179 s/iter. Eval: 0.0667 s/iter. Total: 0.2907 s/iter. ETA=0:00:59
[08/28 21:58:57] d2.evaluation.evaluator INFO: Inference done 312/500. Dataloading: 0.0060 s/iter. Inference: 0.2172 s/iter. Eval: 0.0666 s/iter. Total: 0.2899 s/iter. ETA=0:00:54
[08/28 21:59:02] d2.evaluation.evaluator INFO: Inference done 330/500. Dataloading: 0.0060 s/iter. Inference: 0.2166 s/iter. Eval: 0.0666 s/iter. Total: 0.2893 s/iter. ETA=0:00:49
[08/28 21:59:07] d2.evaluation.evaluator INFO: Inference done 347/500. Dataloading: 0.0060 s/iter. Inference: 0.2170 s/iter. Eval: 0.0668 s/iter. Total: 0.2898 s/iter. ETA=0:00:44
[08/28 21:59:12] d2.evaluation.evaluator INFO: Inference done 365/500. Dataloading: 0.0060 s/iter. Inference: 0.2169 s/iter. Eval: 0.0668 s/iter. Total: 0.2898 s/iter. ETA=0:00:39
[08/28 21:59:17] d2.evaluation.evaluator INFO: Inference done 381/500. Dataloading: 0.0060 s/iter. Inference: 0.2185 s/iter. Eval: 0.0669 s/iter. Total: 0.2914 s/iter. ETA=0:00:34
[08/28 21:59:22] d2.evaluation.evaluator INFO: Inference done 398/500. Dataloading: 0.0060 s/iter. Inference: 0.2191 s/iter. Eval: 0.0669 s/iter. Total: 0.2920 s/iter. ETA=0:00:29
[08/28 21:59:27] d2.evaluation.evaluator INFO: Inference done 416/500. Dataloading: 0.0060 s/iter. Inference: 0.2185 s/iter. Eval: 0.0669 s/iter. Total: 0.2914 s/iter. ETA=0:00:24
[08/28 21:59:33] d2.evaluation.evaluator INFO: Inference done 434/500. Dataloading: 0.0060 s/iter. Inference: 0.2186 s/iter. Eval: 0.0668 s/iter. Total: 0.2915 s/iter. ETA=0:00:19
[08/28 21:59:38] d2.evaluation.evaluator INFO: Inference done 452/500. Dataloading: 0.0060 s/iter. Inference: 0.2184 s/iter. Eval: 0.0668 s/iter. Total: 0.2912 s/iter. ETA=0:00:13
[08/28 21:59:43] d2.evaluation.evaluator INFO: Inference done 469/500. Dataloading: 0.0060 s/iter. Inference: 0.2186 s/iter. Eval: 0.0667 s/iter. Total: 0.2914 s/iter. ETA=0:00:09
[08/28 21:59:48] d2.evaluation.evaluator INFO: Inference done 487/500. Dataloading: 0.0060 s/iter. Inference: 0.2182 s/iter. Eval: 0.0667 s/iter. Total: 0.2910 s/iter. ETA=0:00:03
[08/28 21:59:52] d2.evaluation.evaluator INFO: Total inference time: 0:02:23.957662 (0.290824 s / iter per device, on 1 devices)
[08/28 21:59:52] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:47 (0.217856 s / iter per device, on 1 devices)
[08/28 21:59:52] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalqhhn514k ...
[08/28 22:00:14] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.262 | 80.580 | 68.740 |      19       |
| Things | 47.135 | 80.251 | 58.890 |       8       |
| Stuff  | 62.901 | 80.820 | 75.904 |      11       |
[08/28 22:00:14] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.602 | 97.106 | 99.482 |     Stuff     |
| class_8  | 71.431 | 83.457 | 85.590 |     Stuff     |
| class_11 | 86.658 | 89.207 | 97.143 |     Stuff     |
| class_12 | 44.356 | 78.567 | 56.456 |     Stuff     |
| class_13 | 35.172 | 76.488 | 45.983 |     Stuff     |
| class_17 | 37.043 | 63.326 | 58.496 |     Stuff     |
| class_19 | 46.814 | 68.201 | 68.641 |     Stuff     |
| class_20 | 63.267 | 76.448 | 82.759 |     Stuff     |
| class_21 | 88.510 | 89.338 | 99.073 |     Stuff     |
| class_22 | 35.113 | 74.695 | 47.009 |     Stuff     |
| class_23 | 86.940 | 92.186 | 94.309 |     Stuff     |
| class_24 | 51.001 | 76.618 | 66.566 |    Things     |
| class_25 | 43.041 | 73.223 | 58.780 |    Things     |
| class_26 | 65.590 | 83.039 | 78.987 |    Things     |
| class_27 | 45.695 | 87.914 | 51.977 |    Things     |
| class_28 | 59.537 | 89.810 | 66.292 |    Things     |
| class_31 | 28.870 | 86.611 | 33.333 |    Things     |
| class_32 | 41.018 | 73.540 | 55.777 |    Things     |
| class_33 | 42.326 | 71.249 | 59.406 |    Things     |
[08/28 22:00:14] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/28 22:00:14] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/28 22:00:14] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/28 22:00:14] d2.evaluation.testing INFO: copypaste: 56.2625,80.5802,68.7400,47.1349,80.2506,58.8899,62.9007,80.8200,75.9037,96.6024,97.1056,99.4819,71.4308,83.4574,85.5895,86.6581,89.2068,97.1429,44.3563,78.5674,56.4565,35.1719,76.4884,45.9834,37.0432,63.3256,58.4964,46.8142,68.2014,68.6411,63.2671,76.4478,82.7586,88.5104,89.3385,99.0731,35.1128,74.6945,47.0085,86.9400,92.1864,94.3089,51.0015,76.6175,66.5663,43.0411,73.2235,58.7805,65.5897,83.0391,78.9865,45.6952,87.9135,51.9774,59.5372,89.8103,66.2921,28.8705,86.6115,33.3333,41.0185,73.5402,55.7769,42.3260,71.2488,59.4059
