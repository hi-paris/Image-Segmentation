[08/16 10:17:05] detectron2 INFO: Rank of current process: 0. World size: 2
[08/16 10:17:06] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2                        NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/16 10:17:06] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_cl_2000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/16 10:17:06] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_cl_2000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_2000
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 2000
TEST:
  EVAL_PERIOD: 2000


[08/16 10:17:06] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_2000
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/16 10:17:06] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_2000/config.yaml
[08/16 10:17:06] d2.utils.env INFO: Using a generated random seed 8139036
[08/16 10:17:11] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/16 10:17:11] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/16 10:17:11] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/16 10:17:11] d2.data.build INFO: Using training sampler TrainingSampler
[08/16 10:17:11] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 10:17:11] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/16 10:17:11] d2.data.common INFO: Serialized dataset takes 2.16 MiB
[08/16 10:17:11] d2.data.build INFO: Making batched data loader with batch_size=4
[08/16 10:17:11] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/16 10:17:11] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth ...
[08/16 10:17:11] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan.pth ...
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'sem_seg_head.pixel_decoder.input_proj.0.0.weight' to the model due to incompatible shapes: (256, 1536, 1, 1) in the checkpoint but (256, 2048, 1, 1) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'sem_seg_head.pixel_decoder.input_proj.1.0.weight' to the model due to incompatible shapes: (256, 768, 1, 1) in the checkpoint but (256, 1024, 1, 1) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'sem_seg_head.pixel_decoder.input_proj.2.0.weight' to the model due to incompatible shapes: (256, 384, 1, 1) in the checkpoint but (256, 512, 1, 1) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'sem_seg_head.pixel_decoder.adapter_1.weight' to the model due to incompatible shapes: (256, 192, 1, 1) in the checkpoint but (256, 256, 1, 1) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'sem_seg_head.predictor.class_embed.layers.2.weight' to the model due to incompatible shapes: (768, 256) in the checkpoint but (1024, 256) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'sem_seg_head.predictor.class_embed.layers.2.bias' to the model due to incompatible shapes: (768,) in the checkpoint but (1024,) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Skip loading parameter 'void_embedding.weight' to the model due to incompatible shapes: (1, 768) in the checkpoint but (1, 1024) in the model! You might want to double check if this is expected.
[08/16 10:17:13] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[34msem_seg_head.pixel_decoder.adapter_1.weight[0m
[34msem_seg_head.pixel_decoder.input_proj.0.0.weight[0m
[34msem_seg_head.pixel_decoder.input_proj.1.0.weight[0m
[34msem_seg_head.pixel_decoder.input_proj.2.0.weight[0m
[34msem_seg_head.predictor.class_embed.layers.2.{bias, weight}[0m
[34mvoid_embedding.weight[0m
[08/16 10:17:13] d2.engine.train_loop INFO: Starting training from iteration 0
[08/16 10:17:30] d2.utils.events INFO:  eta: 0:18:12  iter: 19  total_loss: 86.79  loss_ce: 3.558  loss_mask: 1.551  loss_dice: 3.449  loss_ce_0: 4.242  loss_mask_0: 1.704  loss_dice_0: 3.535  loss_ce_1: 4.29  loss_mask_1: 1.556  loss_dice_1: 3.568  loss_ce_2: 3.68  loss_mask_2: 1.516  loss_dice_2: 3.573  loss_ce_3: 3.673  loss_mask_3: 1.513  loss_dice_3: 3.568  loss_ce_4: 3.569  loss_mask_4: 1.528  loss_dice_4: 3.592  loss_ce_5: 3.503  loss_mask_5: 1.536  loss_dice_5: 3.627  loss_ce_6: 3.663  loss_mask_6: 1.577  loss_dice_6: 3.667  loss_ce_7: 3.597  loss_mask_7: 1.547  loss_dice_7: 3.5  loss_ce_8: 3.555  loss_mask_8: 1.558  loss_dice_8: 3.502    time: 0.5575  last_time: 0.5638  data_time: 0.2063  last_data_time: 0.0271   lr: 0.0001  max_mem: 15463M
[08/16 10:17:41] d2.utils.events INFO:  eta: 0:18:00  iter: 39  total_loss: 61.18  loss_ce: 2.239  loss_mask: 1.145  loss_dice: 2.616  loss_ce_0: 2.186  loss_mask_0: 1.433  loss_dice_0: 2.765  loss_ce_1: 2.262  loss_mask_1: 1.168  loss_dice_1: 2.685  loss_ce_2: 2.272  loss_mask_2: 1.142  loss_dice_2: 2.645  loss_ce_3: 2.249  loss_mask_3: 1.179  loss_dice_3: 2.64  loss_ce_4: 2.253  loss_mask_4: 1.141  loss_dice_4: 2.617  loss_ce_5: 2.259  loss_mask_5: 1.133  loss_dice_5: 2.597  loss_ce_6: 2.262  loss_mask_6: 1.149  loss_dice_6: 2.632  loss_ce_7: 2.234  loss_mask_7: 1.133  loss_dice_7: 2.64  loss_ce_8: 2.236  loss_mask_8: 1.117  loss_dice_8: 2.591    time: 0.5530  last_time: 0.5522  data_time: 0.0248  last_data_time: 0.0249   lr: 0.0001  max_mem: 15463M
[08/16 10:17:52] d2.utils.events INFO:  eta: 0:17:45  iter: 59  total_loss: 49.4  loss_ce: 1.872  loss_mask: 0.8795  loss_dice: 2.069  loss_ce_0: 1.902  loss_mask_0: 1.074  loss_dice_0: 2.265  loss_ce_1: 1.917  loss_mask_1: 0.9255  loss_dice_1: 2.226  loss_ce_2: 1.915  loss_mask_2: 0.8483  loss_dice_2: 2.131  loss_ce_3: 1.923  loss_mask_3: 0.8653  loss_dice_3: 2.129  loss_ce_4: 1.897  loss_mask_4: 0.8618  loss_dice_4: 2.107  loss_ce_5: 1.863  loss_mask_5: 0.8701  loss_dice_5: 2.085  loss_ce_6: 1.875  loss_mask_6: 0.8459  loss_dice_6: 2.097  loss_ce_7: 1.873  loss_mask_7: 0.8498  loss_dice_7: 2.068  loss_ce_8: 1.871  loss_mask_8: 0.8753  loss_dice_8: 2.053    time: 0.5514  last_time: 0.5145  data_time: 0.0238  last_data_time: 0.0238   lr: 0.0001  max_mem: 15465M
[08/16 10:18:03] d2.utils.events INFO:  eta: 0:17:32  iter: 79  total_loss: 39.97  loss_ce: 1.352  loss_mask: 0.783  loss_dice: 1.743  loss_ce_0: 1.468  loss_mask_0: 0.9543  loss_dice_0: 1.9  loss_ce_1: 1.451  loss_mask_1: 0.8331  loss_dice_1: 1.84  loss_ce_2: 1.392  loss_mask_2: 0.7991  loss_dice_2: 1.795  loss_ce_3: 1.391  loss_mask_3: 0.8097  loss_dice_3: 1.764  loss_ce_4: 1.368  loss_mask_4: 0.8246  loss_dice_4: 1.771  loss_ce_5: 1.355  loss_mask_5: 0.8186  loss_dice_5: 1.729  loss_ce_6: 1.348  loss_mask_6: 0.7962  loss_dice_6: 1.765  loss_ce_7: 1.338  loss_mask_7: 0.7823  loss_dice_7: 1.732  loss_ce_8: 1.348  loss_mask_8: 0.7903  loss_dice_8: 1.742    time: 0.5491  last_time: 0.5262  data_time: 0.0245  last_data_time: 0.0241   lr: 0.0001  max_mem: 15465M
[08/16 10:18:15] d2.utils.events INFO:  eta: 0:17:25  iter: 99  total_loss: 36.49  loss_ce: 1.069  loss_mask: 0.73  loss_dice: 1.77  loss_ce_0: 1.095  loss_mask_0: 0.8908  loss_dice_0: 1.97  loss_ce_1: 1.124  loss_mask_1: 0.7823  loss_dice_1: 1.906  loss_ce_2: 1.096  loss_mask_2: 0.7542  loss_dice_2: 1.866  loss_ce_3: 1.085  loss_mask_3: 0.7465  loss_dice_3: 1.808  loss_ce_4: 1.047  loss_mask_4: 0.7491  loss_dice_4: 1.798  loss_ce_5: 1.049  loss_mask_5: 0.7384  loss_dice_5: 1.812  loss_ce_6: 1.053  loss_mask_6: 0.7424  loss_dice_6: 1.786  loss_ce_7: 1.062  loss_mask_7: 0.7339  loss_dice_7: 1.794  loss_ce_8: 1.058  loss_mask_8: 0.7364  loss_dice_8: 1.799    time: 0.5510  last_time: 0.5547  data_time: 0.0248  last_data_time: 0.0244   lr: 0.0001  max_mem: 15465M
[08/16 10:18:25] d2.utils.events INFO:  eta: 0:17:12  iter: 119  total_loss: 32.02  loss_ce: 0.7789  loss_mask: 0.6789  loss_dice: 1.596  loss_ce_0: 0.8487  loss_mask_0: 0.8024  loss_dice_0: 1.817  loss_ce_1: 0.8746  loss_mask_1: 0.7066  loss_dice_1: 1.724  loss_ce_2: 0.8825  loss_mask_2: 0.6768  loss_dice_2: 1.669  loss_ce_3: 0.8352  loss_mask_3: 0.6876  loss_dice_3: 1.642  loss_ce_4: 0.8182  loss_mask_4: 0.6961  loss_dice_4: 1.631  loss_ce_5: 0.7756  loss_mask_5: 0.689  loss_dice_5: 1.63  loss_ce_6: 0.7682  loss_mask_6: 0.672  loss_dice_6: 1.647  loss_ce_7: 0.7752  loss_mask_7: 0.6736  loss_dice_7: 1.612  loss_ce_8: 0.7941  loss_mask_8: 0.6677  loss_dice_8: 1.633    time: 0.5491  last_time: 0.5783  data_time: 0.0246  last_data_time: 0.0231   lr: 0.0001  max_mem: 15465M
[08/16 10:18:36] d2.utils.events INFO:  eta: 0:17:01  iter: 139  total_loss: 29.49  loss_ce: 0.6437  loss_mask: 0.656  loss_dice: 1.526  loss_ce_0: 0.7312  loss_mask_0: 0.7797  loss_dice_0: 1.669  loss_ce_1: 0.7519  loss_mask_1: 0.7132  loss_dice_1: 1.65  loss_ce_2: 0.753  loss_mask_2: 0.6669  loss_dice_2: 1.559  loss_ce_3: 0.7085  loss_mask_3: 0.6769  loss_dice_3: 1.567  loss_ce_4: 0.6635  loss_mask_4: 0.6796  loss_dice_4: 1.553  loss_ce_5: 0.6723  loss_mask_5: 0.6702  loss_dice_5: 1.563  loss_ce_6: 0.6575  loss_mask_6: 0.6587  loss_dice_6: 1.526  loss_ce_7: 0.6391  loss_mask_7: 0.6517  loss_dice_7: 1.52  loss_ce_8: 0.6396  loss_mask_8: 0.6617  loss_dice_8: 1.527    time: 0.5488  last_time: 0.5681  data_time: 0.0248  last_data_time: 0.0255   lr: 0.0001  max_mem: 15465M
[08/16 10:18:47] d2.utils.events INFO:  eta: 0:16:48  iter: 159  total_loss: 27.68  loss_ce: 0.5546  loss_mask: 0.6244  loss_dice: 1.469  loss_ce_0: 0.6196  loss_mask_0: 0.7336  loss_dice_0: 1.628  loss_ce_1: 0.6755  loss_mask_1: 0.6628  loss_dice_1: 1.577  loss_ce_2: 0.6375  loss_mask_2: 0.6555  loss_dice_2: 1.527  loss_ce_3: 0.6016  loss_mask_3: 0.6483  loss_dice_3: 1.514  loss_ce_4: 0.5486  loss_mask_4: 0.6545  loss_dice_4: 1.524  loss_ce_5: 0.5439  loss_mask_5: 0.6438  loss_dice_5: 1.48  loss_ce_6: 0.5537  loss_mask_6: 0.6331  loss_dice_6: 1.478  loss_ce_7: 0.5454  loss_mask_7: 0.6279  loss_dice_7: 1.461  loss_ce_8: 0.5544  loss_mask_8: 0.6239  loss_dice_8: 1.467    time: 0.5475  last_time: 0.5349  data_time: 0.0249  last_data_time: 0.0260   lr: 0.0001  max_mem: 15465M
[08/16 10:18:58] d2.utils.events INFO:  eta: 0:16:36  iter: 179  total_loss: 27.65  loss_ce: 0.4891  loss_mask: 0.6358  loss_dice: 1.491  loss_ce_0: 0.5445  loss_mask_0: 0.76  loss_dice_0: 1.706  loss_ce_1: 0.6091  loss_mask_1: 0.6951  loss_dice_1: 1.626  loss_ce_2: 0.6063  loss_mask_2: 0.6558  loss_dice_2: 1.546  loss_ce_3: 0.5725  loss_mask_3: 0.6593  loss_dice_3: 1.542  loss_ce_4: 0.5028  loss_mask_4: 0.6621  loss_dice_4: 1.535  loss_ce_5: 0.4952  loss_mask_5: 0.6515  loss_dice_5: 1.523  loss_ce_6: 0.4835  loss_mask_6: 0.6507  loss_dice_6: 1.499  loss_ce_7: 0.4874  loss_mask_7: 0.6414  loss_dice_7: 1.5  loss_ce_8: 0.4711  loss_mask_8: 0.6337  loss_dice_8: 1.494    time: 0.5469  last_time: 0.5548  data_time: 0.0244  last_data_time: 0.0216   lr: 0.0001  max_mem: 15465M
[08/16 10:19:09] d2.utils.events INFO:  eta: 0:16:24  iter: 199  total_loss: 26.44  loss_ce: 0.4304  loss_mask: 0.5972  loss_dice: 1.488  loss_ce_0: 0.4479  loss_mask_0: 0.7116  loss_dice_0: 1.643  loss_ce_1: 0.5263  loss_mask_1: 0.6406  loss_dice_1: 1.597  loss_ce_2: 0.5108  loss_mask_2: 0.6272  loss_dice_2: 1.553  loss_ce_3: 0.4787  loss_mask_3: 0.6171  loss_dice_3: 1.506  loss_ce_4: 0.438  loss_mask_4: 0.6078  loss_dice_4: 1.496  loss_ce_5: 0.4466  loss_mask_5: 0.6166  loss_dice_5: 1.489  loss_ce_6: 0.4411  loss_mask_6: 0.6068  loss_dice_6: 1.462  loss_ce_7: 0.4525  loss_mask_7: 0.603  loss_dice_7: 1.484  loss_ce_8: 0.441  loss_mask_8: 0.608  loss_dice_8: 1.488    time: 0.5463  last_time: 0.5474  data_time: 0.0242  last_data_time: 0.0236   lr: 0.0001  max_mem: 15465M
[08/16 10:19:20] d2.utils.events INFO:  eta: 0:16:12  iter: 219  total_loss: 25.99  loss_ce: 0.4363  loss_mask: 0.5977  loss_dice: 1.456  loss_ce_0: 0.4482  loss_mask_0: 0.7113  loss_dice_0: 1.662  loss_ce_1: 0.5364  loss_mask_1: 0.6413  loss_dice_1: 1.588  loss_ce_2: 0.5052  loss_mask_2: 0.6223  loss_dice_2: 1.533  loss_ce_3: 0.4832  loss_mask_3: 0.5999  loss_dice_3: 1.52  loss_ce_4: 0.4309  loss_mask_4: 0.6158  loss_dice_4: 1.511  loss_ce_5: 0.425  loss_mask_5: 0.6023  loss_dice_5: 1.502  loss_ce_6: 0.408  loss_mask_6: 0.5944  loss_dice_6: 1.487  loss_ce_7: 0.4123  loss_mask_7: 0.605  loss_dice_7: 1.476  loss_ce_8: 0.4344  loss_mask_8: 0.6029  loss_dice_8: 1.481    time: 0.5459  last_time: 0.5234  data_time: 0.0244  last_data_time: 0.0236   lr: 0.0001  max_mem: 15465M
[08/16 10:19:31] d2.utils.events INFO:  eta: 0:16:02  iter: 239  total_loss: 24.2  loss_ce: 0.3793  loss_mask: 0.5645  loss_dice: 1.359  loss_ce_0: 0.4253  loss_mask_0: 0.6795  loss_dice_0: 1.578  loss_ce_1: 0.5043  loss_mask_1: 0.6178  loss_dice_1: 1.482  loss_ce_2: 0.4885  loss_mask_2: 0.5841  loss_dice_2: 1.427  loss_ce_3: 0.4636  loss_mask_3: 0.5869  loss_dice_3: 1.392  loss_ce_4: 0.4184  loss_mask_4: 0.5874  loss_dice_4: 1.402  loss_ce_5: 0.401  loss_mask_5: 0.5754  loss_dice_5: 1.414  loss_ce_6: 0.3926  loss_mask_6: 0.5622  loss_dice_6: 1.371  loss_ce_7: 0.3661  loss_mask_7: 0.5623  loss_dice_7: 1.392  loss_ce_8: 0.4002  loss_mask_8: 0.5648  loss_dice_8: 1.371    time: 0.5476  last_time: 0.5509  data_time: 0.0242  last_data_time: 0.0241   lr: 0.0001  max_mem: 15465M
[08/16 10:19:42] d2.utils.events INFO:  eta: 0:15:50  iter: 259  total_loss: 23.97  loss_ce: 0.3258  loss_mask: 0.5967  loss_dice: 1.354  loss_ce_0: 0.3471  loss_mask_0: 0.6775  loss_dice_0: 1.51  loss_ce_1: 0.4295  loss_mask_1: 0.6291  loss_dice_1: 1.435  loss_ce_2: 0.4333  loss_mask_2: 0.6021  loss_dice_2: 1.378  loss_ce_3: 0.3756  loss_mask_3: 0.6132  loss_dice_3: 1.389  loss_ce_4: 0.355  loss_mask_4: 0.6109  loss_dice_4: 1.381  loss_ce_5: 0.355  loss_mask_5: 0.5877  loss_dice_5: 1.385  loss_ce_6: 0.3537  loss_mask_6: 0.5887  loss_dice_6: 1.363  loss_ce_7: 0.3092  loss_mask_7: 0.5883  loss_dice_7: 1.371  loss_ce_8: 0.3519  loss_mask_8: 0.5901  loss_dice_8: 1.358    time: 0.5479  last_time: 0.5390  data_time: 0.0242  last_data_time: 0.0244   lr: 0.0001  max_mem: 15465M
[08/16 10:19:54] d2.utils.events INFO:  eta: 0:15:42  iter: 279  total_loss: 23.68  loss_ce: 0.3762  loss_mask: 0.5889  loss_dice: 1.333  loss_ce_0: 0.3679  loss_mask_0: 0.6514  loss_dice_0: 1.474  loss_ce_1: 0.4316  loss_mask_1: 0.6062  loss_dice_1: 1.402  loss_ce_2: 0.4091  loss_mask_2: 0.5928  loss_dice_2: 1.344  loss_ce_3: 0.4249  loss_mask_3: 0.5972  loss_dice_3: 1.328  loss_ce_4: 0.3851  loss_mask_4: 0.5911  loss_dice_4: 1.333  loss_ce_5: 0.3594  loss_mask_5: 0.5958  loss_dice_5: 1.346  loss_ce_6: 0.3657  loss_mask_6: 0.596  loss_dice_6: 1.326  loss_ce_7: 0.3644  loss_mask_7: 0.5892  loss_dice_7: 1.342  loss_ce_8: 0.3655  loss_mask_8: 0.5946  loss_dice_8: 1.324    time: 0.5488  last_time: 0.5304  data_time: 0.0253  last_data_time: 0.0272   lr: 0.0001  max_mem: 15465M
[08/16 10:20:05] d2.utils.events INFO:  eta: 0:15:32  iter: 299  total_loss: 23.38  loss_ce: 0.3531  loss_mask: 0.5633  loss_dice: 1.311  loss_ce_0: 0.3506  loss_mask_0: 0.6289  loss_dice_0: 1.466  loss_ce_1: 0.4327  loss_mask_1: 0.5791  loss_dice_1: 1.39  loss_ce_2: 0.3794  loss_mask_2: 0.5709  loss_dice_2: 1.337  loss_ce_3: 0.3845  loss_mask_3: 0.5802  loss_dice_3: 1.314  loss_ce_4: 0.3785  loss_mask_4: 0.566  loss_dice_4: 1.295  loss_ce_5: 0.3391  loss_mask_5: 0.5737  loss_dice_5: 1.346  loss_ce_6: 0.3481  loss_mask_6: 0.5641  loss_dice_6: 1.311  loss_ce_7: 0.3374  loss_mask_7: 0.5654  loss_dice_7: 1.334  loss_ce_8: 0.3306  loss_mask_8: 0.5718  loss_dice_8: 1.326    time: 0.5492  last_time: 0.5365  data_time: 0.0252  last_data_time: 0.0240   lr: 0.0001  max_mem: 15465M
[08/16 10:20:16] d2.utils.events INFO:  eta: 0:15:21  iter: 319  total_loss: 23.25  loss_ce: 0.3746  loss_mask: 0.5715  loss_dice: 1.324  loss_ce_0: 0.3542  loss_mask_0: 0.644  loss_dice_0: 1.505  loss_ce_1: 0.3984  loss_mask_1: 0.5992  loss_dice_1: 1.45  loss_ce_2: 0.4093  loss_mask_2: 0.5885  loss_dice_2: 1.426  loss_ce_3: 0.4139  loss_mask_3: 0.593  loss_dice_3: 1.37  loss_ce_4: 0.3685  loss_mask_4: 0.5869  loss_dice_4: 1.376  loss_ce_5: 0.355  loss_mask_5: 0.5689  loss_dice_5: 1.38  loss_ce_6: 0.3536  loss_mask_6: 0.578  loss_dice_6: 1.321  loss_ce_7: 0.3607  loss_mask_7: 0.5762  loss_dice_7: 1.337  loss_ce_8: 0.33  loss_mask_8: 0.5696  loss_dice_8: 1.341    time: 0.5488  last_time: 0.5236  data_time: 0.0245  last_data_time: 0.0242   lr: 0.0001  max_mem: 15465M
[08/16 10:20:27] d2.utils.events INFO:  eta: 0:15:09  iter: 339  total_loss: 23.33  loss_ce: 0.3432  loss_mask: 0.6  loss_dice: 1.347  loss_ce_0: 0.3107  loss_mask_0: 0.6906  loss_dice_0: 1.495  loss_ce_1: 0.3901  loss_mask_1: 0.6028  loss_dice_1: 1.446  loss_ce_2: 0.3675  loss_mask_2: 0.6001  loss_dice_2: 1.401  loss_ce_3: 0.3787  loss_mask_3: 0.6025  loss_dice_3: 1.366  loss_ce_4: 0.3554  loss_mask_4: 0.6105  loss_dice_4: 1.391  loss_ce_5: 0.33  loss_mask_5: 0.5987  loss_dice_5: 1.388  loss_ce_6: 0.3291  loss_mask_6: 0.6041  loss_dice_6: 1.368  loss_ce_7: 0.3177  loss_mask_7: 0.6005  loss_dice_7: 1.357  loss_ce_8: 0.3027  loss_mask_8: 0.601  loss_dice_8: 1.368    time: 0.5482  last_time: 0.5075  data_time: 0.0241  last_data_time: 0.0260   lr: 0.0001  max_mem: 15465M
[08/16 10:20:38] d2.utils.events INFO:  eta: 0:14:59  iter: 359  total_loss: 22.96  loss_ce: 0.3158  loss_mask: 0.5593  loss_dice: 1.33  loss_ce_0: 0.3355  loss_mask_0: 0.6471  loss_dice_0: 1.476  loss_ce_1: 0.3824  loss_mask_1: 0.5787  loss_dice_1: 1.44  loss_ce_2: 0.3718  loss_mask_2: 0.5587  loss_dice_2: 1.384  loss_ce_3: 0.3838  loss_mask_3: 0.5492  loss_dice_3: 1.365  loss_ce_4: 0.3591  loss_mask_4: 0.5528  loss_dice_4: 1.356  loss_ce_5: 0.3154  loss_mask_5: 0.553  loss_dice_5: 1.346  loss_ce_6: 0.3251  loss_mask_6: 0.5449  loss_dice_6: 1.345  loss_ce_7: 0.321  loss_mask_7: 0.5496  loss_dice_7: 1.319  loss_ce_8: 0.3147  loss_mask_8: 0.5568  loss_dice_8: 1.327    time: 0.5482  last_time: 0.5172  data_time: 0.0240  last_data_time: 0.0217   lr: 0.0001  max_mem: 15465M
[08/16 10:20:49] d2.utils.events INFO:  eta: 0:14:47  iter: 379  total_loss: 22.48  loss_ce: 0.3242  loss_mask: 0.5379  loss_dice: 1.321  loss_ce_0: 0.3032  loss_mask_0: 0.6516  loss_dice_0: 1.462  loss_ce_1: 0.3591  loss_mask_1: 0.5777  loss_dice_1: 1.394  loss_ce_2: 0.3523  loss_mask_2: 0.5569  loss_dice_2: 1.362  loss_ce_3: 0.381  loss_mask_3: 0.5581  loss_dice_3: 1.346  loss_ce_4: 0.3679  loss_mask_4: 0.5537  loss_dice_4: 1.314  loss_ce_5: 0.3218  loss_mask_5: 0.5517  loss_dice_5: 1.326  loss_ce_6: 0.2968  loss_mask_6: 0.5526  loss_dice_6: 1.336  loss_ce_7: 0.2965  loss_mask_7: 0.5542  loss_dice_7: 1.317  loss_ce_8: 0.3121  loss_mask_8: 0.539  loss_dice_8: 1.324    time: 0.5478  last_time: 0.5655  data_time: 0.0236  last_data_time: 0.0252   lr: 0.0001  max_mem: 15465M
[08/16 10:21:00] d2.utils.events INFO:  eta: 0:14:36  iter: 399  total_loss: 22.52  loss_ce: 0.334  loss_mask: 0.5439  loss_dice: 1.321  loss_ce_0: 0.3357  loss_mask_0: 0.5842  loss_dice_0: 1.453  loss_ce_1: 0.3888  loss_mask_1: 0.5648  loss_dice_1: 1.417  loss_ce_2: 0.3835  loss_mask_2: 0.5595  loss_dice_2: 1.354  loss_ce_3: 0.3856  loss_mask_3: 0.5536  loss_dice_3: 1.363  loss_ce_4: 0.3555  loss_mask_4: 0.551  loss_dice_4: 1.341  loss_ce_5: 0.3297  loss_mask_5: 0.5426  loss_dice_5: 1.356  loss_ce_6: 0.3294  loss_mask_6: 0.5466  loss_dice_6: 1.34  loss_ce_7: 0.3204  loss_mask_7: 0.5477  loss_dice_7: 1.337  loss_ce_8: 0.3368  loss_mask_8: 0.5463  loss_dice_8: 1.33    time: 0.5483  last_time: 0.5391  data_time: 0.0247  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:21:11] d2.utils.events INFO:  eta: 0:14:25  iter: 419  total_loss: 21.35  loss_ce: 0.3194  loss_mask: 0.5216  loss_dice: 1.248  loss_ce_0: 0.3064  loss_mask_0: 0.5742  loss_dice_0: 1.424  loss_ce_1: 0.3756  loss_mask_1: 0.5338  loss_dice_1: 1.361  loss_ce_2: 0.3327  loss_mask_2: 0.5363  loss_dice_2: 1.343  loss_ce_3: 0.3575  loss_mask_3: 0.5282  loss_dice_3: 1.277  loss_ce_4: 0.345  loss_mask_4: 0.5257  loss_dice_4: 1.279  loss_ce_5: 0.3162  loss_mask_5: 0.5275  loss_dice_5: 1.275  loss_ce_6: 0.3121  loss_mask_6: 0.5284  loss_dice_6: 1.277  loss_ce_7: 0.3227  loss_mask_7: 0.5238  loss_dice_7: 1.261  loss_ce_8: 0.3246  loss_mask_8: 0.5285  loss_dice_8: 1.255    time: 0.5486  last_time: 0.5604  data_time: 0.0234  last_data_time: 0.0229   lr: 0.0001  max_mem: 15465M
[08/16 10:21:22] d2.utils.events INFO:  eta: 0:14:14  iter: 439  total_loss: 21.36  loss_ce: 0.2839  loss_mask: 0.5181  loss_dice: 1.245  loss_ce_0: 0.2957  loss_mask_0: 0.5741  loss_dice_0: 1.407  loss_ce_1: 0.3166  loss_mask_1: 0.5284  loss_dice_1: 1.335  loss_ce_2: 0.3303  loss_mask_2: 0.5229  loss_dice_2: 1.292  loss_ce_3: 0.335  loss_mask_3: 0.5225  loss_dice_3: 1.263  loss_ce_4: 0.2942  loss_mask_4: 0.5229  loss_dice_4: 1.294  loss_ce_5: 0.2761  loss_mask_5: 0.5234  loss_dice_5: 1.265  loss_ce_6: 0.2817  loss_mask_6: 0.5186  loss_dice_6: 1.24  loss_ce_7: 0.2665  loss_mask_7: 0.5197  loss_dice_7: 1.255  loss_ce_8: 0.2736  loss_mask_8: 0.517  loss_dice_8: 1.249    time: 0.5485  last_time: 0.5499  data_time: 0.0243  last_data_time: 0.0233   lr: 0.0001  max_mem: 15465M
[08/16 10:21:33] d2.utils.events INFO:  eta: 0:14:03  iter: 459  total_loss: 21.41  loss_ce: 0.2804  loss_mask: 0.5354  loss_dice: 1.225  loss_ce_0: 0.2993  loss_mask_0: 0.5992  loss_dice_0: 1.372  loss_ce_1: 0.3414  loss_mask_1: 0.5637  loss_dice_1: 1.293  loss_ce_2: 0.3298  loss_mask_2: 0.5526  loss_dice_2: 1.267  loss_ce_3: 0.3522  loss_mask_3: 0.5448  loss_dice_3: 1.248  loss_ce_4: 0.3095  loss_mask_4: 0.5424  loss_dice_4: 1.252  loss_ce_5: 0.2983  loss_mask_5: 0.544  loss_dice_5: 1.24  loss_ce_6: 0.2904  loss_mask_6: 0.533  loss_dice_6: 1.244  loss_ce_7: 0.2744  loss_mask_7: 0.54  loss_dice_7: 1.232  loss_ce_8: 0.297  loss_mask_8: 0.5382  loss_dice_8: 1.214    time: 0.5481  last_time: 0.5205  data_time: 0.0233  last_data_time: 0.0229   lr: 0.0001  max_mem: 15465M
[08/16 10:21:44] d2.utils.events INFO:  eta: 0:13:52  iter: 479  total_loss: 21.46  loss_ce: 0.3146  loss_mask: 0.5207  loss_dice: 1.256  loss_ce_0: 0.3122  loss_mask_0: 0.6012  loss_dice_0: 1.376  loss_ce_1: 0.3568  loss_mask_1: 0.5555  loss_dice_1: 1.348  loss_ce_2: 0.3534  loss_mask_2: 0.5318  loss_dice_2: 1.31  loss_ce_3: 0.3662  loss_mask_3: 0.5316  loss_dice_3: 1.259  loss_ce_4: 0.3492  loss_mask_4: 0.526  loss_dice_4: 1.277  loss_ce_5: 0.3031  loss_mask_5: 0.5375  loss_dice_5: 1.293  loss_ce_6: 0.3198  loss_mask_6: 0.5279  loss_dice_6: 1.272  loss_ce_7: 0.3075  loss_mask_7: 0.5215  loss_dice_7: 1.286  loss_ce_8: 0.3051  loss_mask_8: 0.5217  loss_dice_8: 1.299    time: 0.5481  last_time: 0.5131  data_time: 0.0243  last_data_time: 0.0274   lr: 0.0001  max_mem: 15465M
[08/16 10:21:55] d2.utils.events INFO:  eta: 0:13:41  iter: 499  total_loss: 20.57  loss_ce: 0.2706  loss_mask: 0.5087  loss_dice: 1.197  loss_ce_0: 0.2863  loss_mask_0: 0.588  loss_dice_0: 1.323  loss_ce_1: 0.3314  loss_mask_1: 0.5366  loss_dice_1: 1.28  loss_ce_2: 0.3281  loss_mask_2: 0.5236  loss_dice_2: 1.251  loss_ce_3: 0.3339  loss_mask_3: 0.5231  loss_dice_3: 1.248  loss_ce_4: 0.2869  loss_mask_4: 0.5161  loss_dice_4: 1.237  loss_ce_5: 0.2803  loss_mask_5: 0.5154  loss_dice_5: 1.242  loss_ce_6: 0.2684  loss_mask_6: 0.508  loss_dice_6: 1.231  loss_ce_7: 0.2764  loss_mask_7: 0.507  loss_dice_7: 1.214  loss_ce_8: 0.2471  loss_mask_8: 0.5162  loss_dice_8: 1.226    time: 0.5480  last_time: 0.5520  data_time: 0.0233  last_data_time: 0.0244   lr: 0.0001  max_mem: 15465M
[08/16 10:22:06] d2.utils.events INFO:  eta: 0:13:30  iter: 519  total_loss: 21.08  loss_ce: 0.2766  loss_mask: 0.4892  loss_dice: 1.236  loss_ce_0: 0.2731  loss_mask_0: 0.5694  loss_dice_0: 1.363  loss_ce_1: 0.3576  loss_mask_1: 0.5158  loss_dice_1: 1.28  loss_ce_2: 0.316  loss_mask_2: 0.4977  loss_dice_2: 1.254  loss_ce_3: 0.3199  loss_mask_3: 0.5118  loss_dice_3: 1.251  loss_ce_4: 0.2876  loss_mask_4: 0.5045  loss_dice_4: 1.246  loss_ce_5: 0.2655  loss_mask_5: 0.5048  loss_dice_5: 1.277  loss_ce_6: 0.3021  loss_mask_6: 0.4945  loss_dice_6: 1.252  loss_ce_7: 0.2656  loss_mask_7: 0.4881  loss_dice_7: 1.233  loss_ce_8: 0.2825  loss_mask_8: 0.4896  loss_dice_8: 1.229    time: 0.5478  last_time: 0.5513  data_time: 0.0240  last_data_time: 0.0229   lr: 0.0001  max_mem: 15465M
[08/16 10:22:17] d2.utils.events INFO:  eta: 0:13:19  iter: 539  total_loss: 22.25  loss_ce: 0.2852  loss_mask: 0.5395  loss_dice: 1.281  loss_ce_0: 0.3027  loss_mask_0: 0.5826  loss_dice_0: 1.423  loss_ce_1: 0.357  loss_mask_1: 0.5656  loss_dice_1: 1.382  loss_ce_2: 0.3229  loss_mask_2: 0.5454  loss_dice_2: 1.321  loss_ce_3: 0.3413  loss_mask_3: 0.5571  loss_dice_3: 1.323  loss_ce_4: 0.2937  loss_mask_4: 0.5584  loss_dice_4: 1.336  loss_ce_5: 0.3015  loss_mask_5: 0.5625  loss_dice_5: 1.345  loss_ce_6: 0.2855  loss_mask_6: 0.5518  loss_dice_6: 1.319  loss_ce_7: 0.2711  loss_mask_7: 0.5416  loss_dice_7: 1.298  loss_ce_8: 0.2819  loss_mask_8: 0.5451  loss_dice_8: 1.315    time: 0.5479  last_time: 0.5532  data_time: 0.0240  last_data_time: 0.0234   lr: 0.0001  max_mem: 15465M
[08/16 10:22:28] d2.utils.events INFO:  eta: 0:13:08  iter: 559  total_loss: 19.88  loss_ce: 0.2502  loss_mask: 0.525  loss_dice: 1.205  loss_ce_0: 0.2415  loss_mask_0: 0.575  loss_dice_0: 1.325  loss_ce_1: 0.3121  loss_mask_1: 0.5509  loss_dice_1: 1.295  loss_ce_2: 0.2999  loss_mask_2: 0.546  loss_dice_2: 1.223  loss_ce_3: 0.3107  loss_mask_3: 0.5295  loss_dice_3: 1.192  loss_ce_4: 0.2679  loss_mask_4: 0.5228  loss_dice_4: 1.226  loss_ce_5: 0.257  loss_mask_5: 0.5197  loss_dice_5: 1.206  loss_ce_6: 0.2649  loss_mask_6: 0.5324  loss_dice_6: 1.208  loss_ce_7: 0.2408  loss_mask_7: 0.5185  loss_dice_7: 1.177  loss_ce_8: 0.2595  loss_mask_8: 0.5103  loss_dice_8: 1.178    time: 0.5478  last_time: 0.5185  data_time: 0.0234  last_data_time: 0.0236   lr: 0.0001  max_mem: 15465M
[08/16 10:22:39] d2.utils.events INFO:  eta: 0:12:57  iter: 579  total_loss: 21.84  loss_ce: 0.3017  loss_mask: 0.5579  loss_dice: 1.233  loss_ce_0: 0.3318  loss_mask_0: 0.6269  loss_dice_0: 1.377  loss_ce_1: 0.3642  loss_mask_1: 0.5653  loss_dice_1: 1.308  loss_ce_2: 0.3314  loss_mask_2: 0.5628  loss_dice_2: 1.315  loss_ce_3: 0.3607  loss_mask_3: 0.561  loss_dice_3: 1.281  loss_ce_4: 0.3117  loss_mask_4: 0.5667  loss_dice_4: 1.28  loss_ce_5: 0.3088  loss_mask_5: 0.5671  loss_dice_5: 1.25  loss_ce_6: 0.324  loss_mask_6: 0.5612  loss_dice_6: 1.237  loss_ce_7: 0.3167  loss_mask_7: 0.5629  loss_dice_7: 1.238  loss_ce_8: 0.3097  loss_mask_8: 0.5647  loss_dice_8: 1.268    time: 0.5478  last_time: 0.5840  data_time: 0.0243  last_data_time: 0.0244   lr: 0.0001  max_mem: 15465M
[08/16 10:22:50] d2.utils.events INFO:  eta: 0:12:46  iter: 599  total_loss: 20.3  loss_ce: 0.2444  loss_mask: 0.5203  loss_dice: 1.192  loss_ce_0: 0.2802  loss_mask_0: 0.5738  loss_dice_0: 1.306  loss_ce_1: 0.3064  loss_mask_1: 0.5493  loss_dice_1: 1.275  loss_ce_2: 0.2804  loss_mask_2: 0.5282  loss_dice_2: 1.222  loss_ce_3: 0.3238  loss_mask_3: 0.5311  loss_dice_3: 1.236  loss_ce_4: 0.2825  loss_mask_4: 0.519  loss_dice_4: 1.235  loss_ce_5: 0.2439  loss_mask_5: 0.5303  loss_dice_5: 1.243  loss_ce_6: 0.254  loss_mask_6: 0.5181  loss_dice_6: 1.224  loss_ce_7: 0.2461  loss_mask_7: 0.5113  loss_dice_7: 1.207  loss_ce_8: 0.2595  loss_mask_8: 0.5112  loss_dice_8: 1.234    time: 0.5479  last_time: 0.5169  data_time: 0.0239  last_data_time: 0.0233   lr: 0.0001  max_mem: 15465M
[08/16 10:23:01] d2.utils.events INFO:  eta: 0:12:34  iter: 619  total_loss: 20.94  loss_ce: 0.2662  loss_mask: 0.4865  loss_dice: 1.198  loss_ce_0: 0.2624  loss_mask_0: 0.5641  loss_dice_0: 1.381  loss_ce_1: 0.3179  loss_mask_1: 0.5286  loss_dice_1: 1.316  loss_ce_2: 0.2969  loss_mask_2: 0.5241  loss_dice_2: 1.272  loss_ce_3: 0.3385  loss_mask_3: 0.5158  loss_dice_3: 1.253  loss_ce_4: 0.3035  loss_mask_4: 0.5119  loss_dice_4: 1.263  loss_ce_5: 0.2522  loss_mask_5: 0.5029  loss_dice_5: 1.251  loss_ce_6: 0.2606  loss_mask_6: 0.5004  loss_dice_6: 1.22  loss_ce_7: 0.2378  loss_mask_7: 0.5112  loss_dice_7: 1.242  loss_ce_8: 0.2697  loss_mask_8: 0.4997  loss_dice_8: 1.227    time: 0.5476  last_time: 0.5213  data_time: 0.0240  last_data_time: 0.0224   lr: 0.0001  max_mem: 15465M
[08/16 10:23:12] d2.utils.events INFO:  eta: 0:12:23  iter: 639  total_loss: 20.33  loss_ce: 0.2513  loss_mask: 0.4993  loss_dice: 1.198  loss_ce_0: 0.2798  loss_mask_0: 0.5553  loss_dice_0: 1.307  loss_ce_1: 0.3129  loss_mask_1: 0.5191  loss_dice_1: 1.273  loss_ce_2: 0.2827  loss_mask_2: 0.525  loss_dice_2: 1.272  loss_ce_3: 0.3268  loss_mask_3: 0.5175  loss_dice_3: 1.209  loss_ce_4: 0.2775  loss_mask_4: 0.5254  loss_dice_4: 1.215  loss_ce_5: 0.2697  loss_mask_5: 0.5083  loss_dice_5: 1.206  loss_ce_6: 0.259  loss_mask_6: 0.5046  loss_dice_6: 1.218  loss_ce_7: 0.2652  loss_mask_7: 0.5005  loss_dice_7: 1.215  loss_ce_8: 0.2696  loss_mask_8: 0.4967  loss_dice_8: 1.194    time: 0.5477  last_time: 0.5131  data_time: 0.0243  last_data_time: 0.0231   lr: 0.0001  max_mem: 15465M
[08/16 10:23:23] d2.utils.events INFO:  eta: 0:12:12  iter: 659  total_loss: 20.82  loss_ce: 0.2985  loss_mask: 0.5093  loss_dice: 1.237  loss_ce_0: 0.2832  loss_mask_0: 0.5663  loss_dice_0: 1.357  loss_ce_1: 0.3477  loss_mask_1: 0.5265  loss_dice_1: 1.307  loss_ce_2: 0.3104  loss_mask_2: 0.5225  loss_dice_2: 1.299  loss_ce_3: 0.3465  loss_mask_3: 0.5136  loss_dice_3: 1.271  loss_ce_4: 0.2893  loss_mask_4: 0.5273  loss_dice_4: 1.267  loss_ce_5: 0.3092  loss_mask_5: 0.511  loss_dice_5: 1.264  loss_ce_6: 0.3001  loss_mask_6: 0.5095  loss_dice_6: 1.226  loss_ce_7: 0.3008  loss_mask_7: 0.5085  loss_dice_7: 1.214  loss_ce_8: 0.3197  loss_mask_8: 0.5151  loss_dice_8: 1.248    time: 0.5475  last_time: 0.5476  data_time: 0.0238  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:23:34] d2.utils.events INFO:  eta: 0:12:00  iter: 679  total_loss: 20.86  loss_ce: 0.2846  loss_mask: 0.5123  loss_dice: 1.231  loss_ce_0: 0.2743  loss_mask_0: 0.5842  loss_dice_0: 1.322  loss_ce_1: 0.3282  loss_mask_1: 0.5622  loss_dice_1: 1.25  loss_ce_2: 0.3156  loss_mask_2: 0.5375  loss_dice_2: 1.229  loss_ce_3: 0.3184  loss_mask_3: 0.5389  loss_dice_3: 1.232  loss_ce_4: 0.2754  loss_mask_4: 0.5503  loss_dice_4: 1.23  loss_ce_5: 0.2682  loss_mask_5: 0.5616  loss_dice_5: 1.221  loss_ce_6: 0.3022  loss_mask_6: 0.5186  loss_dice_6: 1.208  loss_ce_7: 0.2853  loss_mask_7: 0.5178  loss_dice_7: 1.231  loss_ce_8: 0.2887  loss_mask_8: 0.5219  loss_dice_8: 1.211    time: 0.5475  last_time: 0.5370  data_time: 0.0235  last_data_time: 0.0236   lr: 0.0001  max_mem: 15465M
[08/16 10:23:44] d2.utils.events INFO:  eta: 0:11:49  iter: 699  total_loss: 21.14  loss_ce: 0.2725  loss_mask: 0.5036  loss_dice: 1.214  loss_ce_0: 0.2829  loss_mask_0: 0.5645  loss_dice_0: 1.316  loss_ce_1: 0.3141  loss_mask_1: 0.5319  loss_dice_1: 1.309  loss_ce_2: 0.2914  loss_mask_2: 0.517  loss_dice_2: 1.288  loss_ce_3: 0.3404  loss_mask_3: 0.5128  loss_dice_3: 1.236  loss_ce_4: 0.3225  loss_mask_4: 0.5114  loss_dice_4: 1.268  loss_ce_5: 0.2877  loss_mask_5: 0.5084  loss_dice_5: 1.27  loss_ce_6: 0.2656  loss_mask_6: 0.5064  loss_dice_6: 1.258  loss_ce_7: 0.2744  loss_mask_7: 0.5072  loss_dice_7: 1.242  loss_ce_8: 0.2716  loss_mask_8: 0.5095  loss_dice_8: 1.222    time: 0.5473  last_time: 0.5604  data_time: 0.0237  last_data_time: 0.0250   lr: 0.0001  max_mem: 15465M
[08/16 10:23:55] d2.utils.events INFO:  eta: 0:11:37  iter: 719  total_loss: 21.53  loss_ce: 0.2736  loss_mask: 0.4819  loss_dice: 1.218  loss_ce_0: 0.3031  loss_mask_0: 0.5371  loss_dice_0: 1.364  loss_ce_1: 0.3375  loss_mask_1: 0.5284  loss_dice_1: 1.312  loss_ce_2: 0.2938  loss_mask_2: 0.5018  loss_dice_2: 1.279  loss_ce_3: 0.3292  loss_mask_3: 0.4988  loss_dice_3: 1.255  loss_ce_4: 0.2907  loss_mask_4: 0.5099  loss_dice_4: 1.275  loss_ce_5: 0.2568  loss_mask_5: 0.4882  loss_dice_5: 1.27  loss_ce_6: 0.277  loss_mask_6: 0.4939  loss_dice_6: 1.223  loss_ce_7: 0.2678  loss_mask_7: 0.4914  loss_dice_7: 1.204  loss_ce_8: 0.2674  loss_mask_8: 0.4894  loss_dice_8: 1.221    time: 0.5470  last_time: 0.5470  data_time: 0.0233  last_data_time: 0.0221   lr: 0.0001  max_mem: 15465M
[08/16 10:24:06] d2.utils.events INFO:  eta: 0:11:26  iter: 739  total_loss: 20.21  loss_ce: 0.2587  loss_mask: 0.4772  loss_dice: 1.209  loss_ce_0: 0.2889  loss_mask_0: 0.5459  loss_dice_0: 1.352  loss_ce_1: 0.3067  loss_mask_1: 0.5017  loss_dice_1: 1.261  loss_ce_2: 0.3025  loss_mask_2: 0.4823  loss_dice_2: 1.222  loss_ce_3: 0.331  loss_mask_3: 0.4866  loss_dice_3: 1.189  loss_ce_4: 0.285  loss_mask_4: 0.4962  loss_dice_4: 1.205  loss_ce_5: 0.2799  loss_mask_5: 0.4975  loss_dice_5: 1.234  loss_ce_6: 0.2656  loss_mask_6: 0.4872  loss_dice_6: 1.193  loss_ce_7: 0.2703  loss_mask_7: 0.4916  loss_dice_7: 1.216  loss_ce_8: 0.2551  loss_mask_8: 0.4797  loss_dice_8: 1.167    time: 0.5468  last_time: 0.5320  data_time: 0.0227  last_data_time: 0.0230   lr: 0.0001  max_mem: 15465M
[08/16 10:24:17] d2.utils.events INFO:  eta: 0:11:16  iter: 759  total_loss: 20.73  loss_ce: 0.3001  loss_mask: 0.5234  loss_dice: 1.209  loss_ce_0: 0.2861  loss_mask_0: 0.5629  loss_dice_0: 1.382  loss_ce_1: 0.3268  loss_mask_1: 0.5423  loss_dice_1: 1.319  loss_ce_2: 0.3064  loss_mask_2: 0.5405  loss_dice_2: 1.268  loss_ce_3: 0.3185  loss_mask_3: 0.5267  loss_dice_3: 1.256  loss_ce_4: 0.2959  loss_mask_4: 0.5286  loss_dice_4: 1.269  loss_ce_5: 0.2904  loss_mask_5: 0.526  loss_dice_5: 1.242  loss_ce_6: 0.2875  loss_mask_6: 0.5188  loss_dice_6: 1.212  loss_ce_7: 0.2715  loss_mask_7: 0.5081  loss_dice_7: 1.209  loss_ce_8: 0.2886  loss_mask_8: 0.5157  loss_dice_8: 1.238    time: 0.5469  last_time: 0.5224  data_time: 0.0235  last_data_time: 0.0225   lr: 0.0001  max_mem: 15465M
[08/16 10:24:28] d2.utils.events INFO:  eta: 0:11:04  iter: 779  total_loss: 19.64  loss_ce: 0.2562  loss_mask: 0.4753  loss_dice: 1.177  loss_ce_0: 0.2503  loss_mask_0: 0.5405  loss_dice_0: 1.307  loss_ce_1: 0.2985  loss_mask_1: 0.4933  loss_dice_1: 1.272  loss_ce_2: 0.282  loss_mask_2: 0.4819  loss_dice_2: 1.252  loss_ce_3: 0.3025  loss_mask_3: 0.4913  loss_dice_3: 1.218  loss_ce_4: 0.2601  loss_mask_4: 0.495  loss_dice_4: 1.218  loss_ce_5: 0.2649  loss_mask_5: 0.4877  loss_dice_5: 1.224  loss_ce_6: 0.2533  loss_mask_6: 0.4775  loss_dice_6: 1.191  loss_ce_7: 0.2457  loss_mask_7: 0.4768  loss_dice_7: 1.195  loss_ce_8: 0.2591  loss_mask_8: 0.4835  loss_dice_8: 1.2    time: 0.5465  last_time: 0.5440  data_time: 0.0226  last_data_time: 0.0223   lr: 0.0001  max_mem: 15465M
[08/16 10:24:39] d2.utils.events INFO:  eta: 0:10:53  iter: 799  total_loss: 19.99  loss_ce: 0.2464  loss_mask: 0.5073  loss_dice: 1.197  loss_ce_0: 0.253  loss_mask_0: 0.5556  loss_dice_0: 1.326  loss_ce_1: 0.2939  loss_mask_1: 0.535  loss_dice_1: 1.251  loss_ce_2: 0.2637  loss_mask_2: 0.5182  loss_dice_2: 1.243  loss_ce_3: 0.2719  loss_mask_3: 0.5151  loss_dice_3: 1.226  loss_ce_4: 0.2426  loss_mask_4: 0.5103  loss_dice_4: 1.22  loss_ce_5: 0.2318  loss_mask_5: 0.5242  loss_dice_5: 1.224  loss_ce_6: 0.2321  loss_mask_6: 0.5192  loss_dice_6: 1.202  loss_ce_7: 0.2292  loss_mask_7: 0.5185  loss_dice_7: 1.213  loss_ce_8: 0.2152  loss_mask_8: 0.5095  loss_dice_8: 1.224    time: 0.5466  last_time: 0.5511  data_time: 0.0232  last_data_time: 0.0225   lr: 0.0001  max_mem: 15465M
[08/16 10:24:50] d2.utils.events INFO:  eta: 0:10:42  iter: 819  total_loss: 19.17  loss_ce: 0.2135  loss_mask: 0.48  loss_dice: 1.148  loss_ce_0: 0.2316  loss_mask_0: 0.5368  loss_dice_0: 1.273  loss_ce_1: 0.283  loss_mask_1: 0.516  loss_dice_1: 1.215  loss_ce_2: 0.2467  loss_mask_2: 0.5024  loss_dice_2: 1.172  loss_ce_3: 0.2805  loss_mask_3: 0.4921  loss_dice_3: 1.207  loss_ce_4: 0.2571  loss_mask_4: 0.4982  loss_dice_4: 1.176  loss_ce_5: 0.2475  loss_mask_5: 0.4867  loss_dice_5: 1.186  loss_ce_6: 0.237  loss_mask_6: 0.4841  loss_dice_6: 1.177  loss_ce_7: 0.2362  loss_mask_7: 0.4781  loss_dice_7: 1.138  loss_ce_8: 0.2252  loss_mask_8: 0.4842  loss_dice_8: 1.161    time: 0.5468  last_time: 0.5436  data_time: 0.0239  last_data_time: 0.0229   lr: 0.0001  max_mem: 15465M
[08/16 10:25:01] d2.utils.events INFO:  eta: 0:10:32  iter: 839  total_loss: 19.36  loss_ce: 0.2604  loss_mask: 0.4642  loss_dice: 1.137  loss_ce_0: 0.2587  loss_mask_0: 0.515  loss_dice_0: 1.267  loss_ce_1: 0.2973  loss_mask_1: 0.4845  loss_dice_1: 1.214  loss_ce_2: 0.2608  loss_mask_2: 0.4813  loss_dice_2: 1.204  loss_ce_3: 0.3082  loss_mask_3: 0.4826  loss_dice_3: 1.154  loss_ce_4: 0.2366  loss_mask_4: 0.4757  loss_dice_4: 1.168  loss_ce_5: 0.2442  loss_mask_5: 0.4726  loss_dice_5: 1.163  loss_ce_6: 0.2595  loss_mask_6: 0.4652  loss_dice_6: 1.145  loss_ce_7: 0.2552  loss_mask_7: 0.4635  loss_dice_7: 1.143  loss_ce_8: 0.2585  loss_mask_8: 0.4585  loss_dice_8: 1.16    time: 0.5471  last_time: 0.5454  data_time: 0.0243  last_data_time: 0.0246   lr: 0.0001  max_mem: 15465M
[08/16 10:25:13] d2.utils.events INFO:  eta: 0:10:22  iter: 859  total_loss: 20.43  loss_ce: 0.265  loss_mask: 0.4768  loss_dice: 1.25  loss_ce_0: 0.2708  loss_mask_0: 0.5136  loss_dice_0: 1.334  loss_ce_1: 0.2821  loss_mask_1: 0.5078  loss_dice_1: 1.279  loss_ce_2: 0.2982  loss_mask_2: 0.5023  loss_dice_2: 1.268  loss_ce_3: 0.306  loss_mask_3: 0.4945  loss_dice_3: 1.22  loss_ce_4: 0.2804  loss_mask_4: 0.4954  loss_dice_4: 1.256  loss_ce_5: 0.2562  loss_mask_5: 0.4826  loss_dice_5: 1.242  loss_ce_6: 0.2389  loss_mask_6: 0.4704  loss_dice_6: 1.254  loss_ce_7: 0.2698  loss_mask_7: 0.4676  loss_dice_7: 1.245  loss_ce_8: 0.2552  loss_mask_8: 0.4686  loss_dice_8: 1.243    time: 0.5483  last_time: 0.5658  data_time: 0.0241  last_data_time: 0.0234   lr: 0.0001  max_mem: 15465M
[08/16 10:25:25] d2.utils.events INFO:  eta: 0:10:11  iter: 879  total_loss: 19.53  loss_ce: 0.2211  loss_mask: 0.4999  loss_dice: 1.173  loss_ce_0: 0.2497  loss_mask_0: 0.556  loss_dice_0: 1.283  loss_ce_1: 0.2772  loss_mask_1: 0.519  loss_dice_1: 1.234  loss_ce_2: 0.2462  loss_mask_2: 0.5054  loss_dice_2: 1.208  loss_ce_3: 0.2509  loss_mask_3: 0.5128  loss_dice_3: 1.203  loss_ce_4: 0.2408  loss_mask_4: 0.5175  loss_dice_4: 1.205  loss_ce_5: 0.225  loss_mask_5: 0.5104  loss_dice_5: 1.21  loss_ce_6: 0.2493  loss_mask_6: 0.5113  loss_dice_6: 1.187  loss_ce_7: 0.2236  loss_mask_7: 0.5022  loss_dice_7: 1.184  loss_ce_8: 0.22  loss_mask_8: 0.5079  loss_dice_8: 1.181    time: 0.5485  last_time: 0.5472  data_time: 0.0237  last_data_time: 0.0243   lr: 0.0001  max_mem: 15465M
[08/16 10:25:36] d2.utils.events INFO:  eta: 0:10:01  iter: 899  total_loss: 19.57  loss_ce: 0.2412  loss_mask: 0.4947  loss_dice: 1.176  loss_ce_0: 0.2622  loss_mask_0: 0.5616  loss_dice_0: 1.308  loss_ce_1: 0.2972  loss_mask_1: 0.5284  loss_dice_1: 1.265  loss_ce_2: 0.2792  loss_mask_2: 0.5174  loss_dice_2: 1.222  loss_ce_3: 0.2903  loss_mask_3: 0.5066  loss_dice_3: 1.216  loss_ce_4: 0.2491  loss_mask_4: 0.5137  loss_dice_4: 1.207  loss_ce_5: 0.2217  loss_mask_5: 0.5148  loss_dice_5: 1.209  loss_ce_6: 0.2383  loss_mask_6: 0.5159  loss_dice_6: 1.196  loss_ce_7: 0.2421  loss_mask_7: 0.5073  loss_dice_7: 1.164  loss_ce_8: 0.2505  loss_mask_8: 0.5065  loss_dice_8: 1.168    time: 0.5494  last_time: 0.5710  data_time: 0.0252  last_data_time: 0.0238   lr: 0.0001  max_mem: 15465M
[08/16 10:25:47] d2.utils.events INFO:  eta: 0:09:50  iter: 919  total_loss: 19.15  loss_ce: 0.2596  loss_mask: 0.4791  loss_dice: 1.091  loss_ce_0: 0.284  loss_mask_0: 0.5155  loss_dice_0: 1.232  loss_ce_1: 0.2886  loss_mask_1: 0.479  loss_dice_1: 1.148  loss_ce_2: 0.2688  loss_mask_2: 0.4768  loss_dice_2: 1.133  loss_ce_3: 0.2831  loss_mask_3: 0.4658  loss_dice_3: 1.141  loss_ce_4: 0.2673  loss_mask_4: 0.4846  loss_dice_4: 1.127  loss_ce_5: 0.2516  loss_mask_5: 0.4819  loss_dice_5: 1.135  loss_ce_6: 0.2628  loss_mask_6: 0.4752  loss_dice_6: 1.09  loss_ce_7: 0.2542  loss_mask_7: 0.4804  loss_dice_7: 1.109  loss_ce_8: 0.2619  loss_mask_8: 0.4784  loss_dice_8: 1.117    time: 0.5495  last_time: 0.5202  data_time: 0.0245  last_data_time: 0.0235   lr: 0.0001  max_mem: 15465M
[08/16 10:25:58] d2.utils.events INFO:  eta: 0:09:39  iter: 939  total_loss: 19.73  loss_ce: 0.2499  loss_mask: 0.4784  loss_dice: 1.16  loss_ce_0: 0.2727  loss_mask_0: 0.4902  loss_dice_0: 1.272  loss_ce_1: 0.3227  loss_mask_1: 0.4801  loss_dice_1: 1.2  loss_ce_2: 0.2929  loss_mask_2: 0.4961  loss_dice_2: 1.184  loss_ce_3: 0.2914  loss_mask_3: 0.4979  loss_dice_3: 1.194  loss_ce_4: 0.263  loss_mask_4: 0.4952  loss_dice_4: 1.184  loss_ce_5: 0.2442  loss_mask_5: 0.4833  loss_dice_5: 1.185  loss_ce_6: 0.2641  loss_mask_6: 0.468  loss_dice_6: 1.16  loss_ce_7: 0.2751  loss_mask_7: 0.4764  loss_dice_7: 1.164  loss_ce_8: 0.261  loss_mask_8: 0.4746  loss_dice_8: 1.148    time: 0.5494  last_time: 0.5142  data_time: 0.0248  last_data_time: 0.0233   lr: 0.0001  max_mem: 15465M
[08/16 10:26:09] d2.utils.events INFO:  eta: 0:09:28  iter: 959  total_loss: 18.51  loss_ce: 0.2075  loss_mask: 0.4559  loss_dice: 1.127  loss_ce_0: 0.2385  loss_mask_0: 0.5017  loss_dice_0: 1.242  loss_ce_1: 0.2759  loss_mask_1: 0.4777  loss_dice_1: 1.193  loss_ce_2: 0.2567  loss_mask_2: 0.4786  loss_dice_2: 1.163  loss_ce_3: 0.2711  loss_mask_3: 0.4686  loss_dice_3: 1.134  loss_ce_4: 0.242  loss_mask_4: 0.4672  loss_dice_4: 1.14  loss_ce_5: 0.2235  loss_mask_5: 0.459  loss_dice_5: 1.151  loss_ce_6: 0.2099  loss_mask_6: 0.4522  loss_dice_6: 1.126  loss_ce_7: 0.22  loss_mask_7: 0.4588  loss_dice_7: 1.112  loss_ce_8: 0.2197  loss_mask_8: 0.4585  loss_dice_8: 1.133    time: 0.5493  last_time: 0.5558  data_time: 0.0239  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:26:21] d2.utils.events INFO:  eta: 0:09:17  iter: 979  total_loss: 19.74  loss_ce: 0.2266  loss_mask: 0.4702  loss_dice: 1.174  loss_ce_0: 0.2568  loss_mask_0: 0.5376  loss_dice_0: 1.268  loss_ce_1: 0.2721  loss_mask_1: 0.5152  loss_dice_1: 1.225  loss_ce_2: 0.2303  loss_mask_2: 0.4978  loss_dice_2: 1.247  loss_ce_3: 0.2519  loss_mask_3: 0.4901  loss_dice_3: 1.182  loss_ce_4: 0.2273  loss_mask_4: 0.488  loss_dice_4: 1.187  loss_ce_5: 0.2343  loss_mask_5: 0.4898  loss_dice_5: 1.185  loss_ce_6: 0.2423  loss_mask_6: 0.4671  loss_dice_6: 1.165  loss_ce_7: 0.239  loss_mask_7: 0.4796  loss_dice_7: 1.181  loss_ce_8: 0.2397  loss_mask_8: 0.472  loss_dice_8: 1.165    time: 0.5496  last_time: 0.5482  data_time: 0.0242  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:26:32] d2.utils.events INFO:  eta: 0:09:07  iter: 999  total_loss: 19.29  loss_ce: 0.2186  loss_mask: 0.4855  loss_dice: 1.163  loss_ce_0: 0.229  loss_mask_0: 0.5467  loss_dice_0: 1.273  loss_ce_1: 0.2842  loss_mask_1: 0.5335  loss_dice_1: 1.239  loss_ce_2: 0.2757  loss_mask_2: 0.5133  loss_dice_2: 1.242  loss_ce_3: 0.2335  loss_mask_3: 0.5095  loss_dice_3: 1.21  loss_ce_4: 0.2269  loss_mask_4: 0.5109  loss_dice_4: 1.206  loss_ce_5: 0.2117  loss_mask_5: 0.5043  loss_dice_5: 1.198  loss_ce_6: 0.2353  loss_mask_6: 0.4989  loss_dice_6: 1.167  loss_ce_7: 0.2154  loss_mask_7: 0.4876  loss_dice_7: 1.198  loss_ce_8: 0.2269  loss_mask_8: 0.4871  loss_dice_8: 1.188    time: 0.5498  last_time: 0.5321  data_time: 0.0242  last_data_time: 0.0229   lr: 0.0001  max_mem: 15465M
[08/16 10:26:43] d2.utils.events INFO:  eta: 0:08:56  iter: 1019  total_loss: 17.38  loss_ce: 0.2204  loss_mask: 0.4343  loss_dice: 1.07  loss_ce_0: 0.2515  loss_mask_0: 0.4832  loss_dice_0: 1.183  loss_ce_1: 0.2872  loss_mask_1: 0.4566  loss_dice_1: 1.127  loss_ce_2: 0.2437  loss_mask_2: 0.4372  loss_dice_2: 1.106  loss_ce_3: 0.2463  loss_mask_3: 0.4468  loss_dice_3: 1.083  loss_ce_4: 0.2271  loss_mask_4: 0.4372  loss_dice_4: 1.081  loss_ce_5: 0.2043  loss_mask_5: 0.4464  loss_dice_5: 1.087  loss_ce_6: 0.2144  loss_mask_6: 0.434  loss_dice_6: 1.052  loss_ce_7: 0.2142  loss_mask_7: 0.4369  loss_dice_7: 1.061  loss_ce_8: 0.209  loss_mask_8: 0.4349  loss_dice_8: 1.095    time: 0.5499  last_time: 0.5496  data_time: 0.0243  last_data_time: 0.0242   lr: 0.0001  max_mem: 15465M
[08/16 10:26:55] d2.utils.events INFO:  eta: 0:08:46  iter: 1039  total_loss: 19.29  loss_ce: 0.2603  loss_mask: 0.4883  loss_dice: 1.169  loss_ce_0: 0.2936  loss_mask_0: 0.5522  loss_dice_0: 1.258  loss_ce_1: 0.3147  loss_mask_1: 0.4902  loss_dice_1: 1.229  loss_ce_2: 0.2893  loss_mask_2: 0.5024  loss_dice_2: 1.195  loss_ce_3: 0.285  loss_mask_3: 0.4992  loss_dice_3: 1.181  loss_ce_4: 0.2817  loss_mask_4: 0.4949  loss_dice_4: 1.166  loss_ce_5: 0.2577  loss_mask_5: 0.4868  loss_dice_5: 1.162  loss_ce_6: 0.2725  loss_mask_6: 0.4993  loss_dice_6: 1.14  loss_ce_7: 0.2539  loss_mask_7: 0.4992  loss_dice_7: 1.146  loss_ce_8: 0.2604  loss_mask_8: 0.4991  loss_dice_8: 1.159    time: 0.5507  last_time: 0.5545  data_time: 0.0233  last_data_time: 0.0215   lr: 0.0001  max_mem: 15465M
[08/16 10:27:06] d2.utils.events INFO:  eta: 0:08:35  iter: 1059  total_loss: 19  loss_ce: 0.2626  loss_mask: 0.4734  loss_dice: 1.109  loss_ce_0: 0.2929  loss_mask_0: 0.511  loss_dice_0: 1.265  loss_ce_1: 0.2819  loss_mask_1: 0.4783  loss_dice_1: 1.193  loss_ce_2: 0.2763  loss_mask_2: 0.4793  loss_dice_2: 1.167  loss_ce_3: 0.2822  loss_mask_3: 0.4776  loss_dice_3: 1.134  loss_ce_4: 0.2816  loss_mask_4: 0.4713  loss_dice_4: 1.149  loss_ce_5: 0.2838  loss_mask_5: 0.4771  loss_dice_5: 1.158  loss_ce_6: 0.273  loss_mask_6: 0.4806  loss_dice_6: 1.14  loss_ce_7: 0.2435  loss_mask_7: 0.4746  loss_dice_7: 1.133  loss_ce_8: 0.2439  loss_mask_8: 0.4717  loss_dice_8: 1.13    time: 0.5509  last_time: 0.5342  data_time: 0.0236  last_data_time: 0.0273   lr: 0.0001  max_mem: 15465M
[08/16 10:27:18] d2.utils.events INFO:  eta: 0:08:24  iter: 1079  total_loss: 19.04  loss_ce: 0.2163  loss_mask: 0.4767  loss_dice: 1.138  loss_ce_0: 0.2249  loss_mask_0: 0.5331  loss_dice_0: 1.209  loss_ce_1: 0.2762  loss_mask_1: 0.4944  loss_dice_1: 1.195  loss_ce_2: 0.2562  loss_mask_2: 0.4836  loss_dice_2: 1.171  loss_ce_3: 0.2544  loss_mask_3: 0.4861  loss_dice_3: 1.172  loss_ce_4: 0.2381  loss_mask_4: 0.478  loss_dice_4: 1.16  loss_ce_5: 0.2288  loss_mask_5: 0.475  loss_dice_5: 1.153  loss_ce_6: 0.2202  loss_mask_6: 0.4738  loss_dice_6: 1.118  loss_ce_7: 0.2027  loss_mask_7: 0.4732  loss_dice_7: 1.132  loss_ce_8: 0.2116  loss_mask_8: 0.4714  loss_dice_8: 1.135    time: 0.5510  last_time: 0.5312  data_time: 0.0240  last_data_time: 0.0230   lr: 0.0001  max_mem: 15465M
[08/16 10:27:29] d2.utils.events INFO:  eta: 0:08:13  iter: 1099  total_loss: 19.39  loss_ce: 0.2545  loss_mask: 0.4743  loss_dice: 1.117  loss_ce_0: 0.2566  loss_mask_0: 0.546  loss_dice_0: 1.225  loss_ce_1: 0.2611  loss_mask_1: 0.5079  loss_dice_1: 1.186  loss_ce_2: 0.2748  loss_mask_2: 0.5043  loss_dice_2: 1.149  loss_ce_3: 0.2841  loss_mask_3: 0.4849  loss_dice_3: 1.142  loss_ce_4: 0.2747  loss_mask_4: 0.4808  loss_dice_4: 1.138  loss_ce_5: 0.2372  loss_mask_5: 0.4783  loss_dice_5: 1.127  loss_ce_6: 0.2588  loss_mask_6: 0.4778  loss_dice_6: 1.122  loss_ce_7: 0.2621  loss_mask_7: 0.4771  loss_dice_7: 1.116  loss_ce_8: 0.2432  loss_mask_8: 0.4803  loss_dice_8: 1.125    time: 0.5512  last_time: 0.5659  data_time: 0.0234  last_data_time: 0.0215   lr: 0.0001  max_mem: 15465M
[08/16 10:27:40] d2.utils.events INFO:  eta: 0:08:02  iter: 1119  total_loss: 17.99  loss_ce: 0.2018  loss_mask: 0.4377  loss_dice: 1.107  loss_ce_0: 0.1871  loss_mask_0: 0.455  loss_dice_0: 1.248  loss_ce_1: 0.2556  loss_mask_1: 0.449  loss_dice_1: 1.184  loss_ce_2: 0.2478  loss_mask_2: 0.4277  loss_dice_2: 1.172  loss_ce_3: 0.2285  loss_mask_3: 0.4337  loss_dice_3: 1.16  loss_ce_4: 0.2487  loss_mask_4: 0.4202  loss_dice_4: 1.136  loss_ce_5: 0.2062  loss_mask_5: 0.4279  loss_dice_5: 1.142  loss_ce_6: 0.1962  loss_mask_6: 0.4299  loss_dice_6: 1.125  loss_ce_7: 0.2052  loss_mask_7: 0.4345  loss_dice_7: 1.111  loss_ce_8: 0.1865  loss_mask_8: 0.4286  loss_dice_8: 1.115    time: 0.5515  last_time: 0.5610  data_time: 0.0235  last_data_time: 0.0214   lr: 0.0001  max_mem: 15465M
[08/16 10:27:52] d2.utils.events INFO:  eta: 0:07:52  iter: 1139  total_loss: 19.19  loss_ce: 0.2491  loss_mask: 0.4628  loss_dice: 1.112  loss_ce_0: 0.2358  loss_mask_0: 0.4969  loss_dice_0: 1.263  loss_ce_1: 0.2613  loss_mask_1: 0.5123  loss_dice_1: 1.194  loss_ce_2: 0.2757  loss_mask_2: 0.4764  loss_dice_2: 1.16  loss_ce_3: 0.279  loss_mask_3: 0.4822  loss_dice_3: 1.153  loss_ce_4: 0.2691  loss_mask_4: 0.481  loss_dice_4: 1.176  loss_ce_5: 0.2371  loss_mask_5: 0.4808  loss_dice_5: 1.157  loss_ce_6: 0.2217  loss_mask_6: 0.4794  loss_dice_6: 1.15  loss_ce_7: 0.2587  loss_mask_7: 0.4703  loss_dice_7: 1.139  loss_ce_8: 0.2617  loss_mask_8: 0.4724  loss_dice_8: 1.136    time: 0.5521  last_time: 0.5611  data_time: 0.0232  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:28:04] d2.utils.events INFO:  eta: 0:07:42  iter: 1159  total_loss: 17.96  loss_ce: 0.1986  loss_mask: 0.4475  loss_dice: 1.094  loss_ce_0: 0.2122  loss_mask_0: 0.4961  loss_dice_0: 1.203  loss_ce_1: 0.2139  loss_mask_1: 0.4711  loss_dice_1: 1.149  loss_ce_2: 0.2383  loss_mask_2: 0.4736  loss_dice_2: 1.128  loss_ce_3: 0.2559  loss_mask_3: 0.4664  loss_dice_3: 1.112  loss_ce_4: 0.228  loss_mask_4: 0.451  loss_dice_4: 1.122  loss_ce_5: 0.1953  loss_mask_5: 0.452  loss_dice_5: 1.127  loss_ce_6: 0.219  loss_mask_6: 0.4499  loss_dice_6: 1.118  loss_ce_7: 0.1761  loss_mask_7: 0.446  loss_dice_7: 1.095  loss_ce_8: 0.2174  loss_mask_8: 0.4481  loss_dice_8: 1.083    time: 0.5528  last_time: 0.5696  data_time: 0.0228  last_data_time: 0.0222   lr: 0.0001  max_mem: 15465M
[08/16 10:28:16] d2.utils.events INFO:  eta: 0:07:31  iter: 1179  total_loss: 18.58  loss_ce: 0.2203  loss_mask: 0.4365  loss_dice: 1.123  loss_ce_0: 0.2472  loss_mask_0: 0.466  loss_dice_0: 1.253  loss_ce_1: 0.2906  loss_mask_1: 0.4595  loss_dice_1: 1.203  loss_ce_2: 0.2732  loss_mask_2: 0.4471  loss_dice_2: 1.159  loss_ce_3: 0.2862  loss_mask_3: 0.4408  loss_dice_3: 1.17  loss_ce_4: 0.2445  loss_mask_4: 0.448  loss_dice_4: 1.134  loss_ce_5: 0.2234  loss_mask_5: 0.4446  loss_dice_5: 1.138  loss_ce_6: 0.2242  loss_mask_6: 0.441  loss_dice_6: 1.128  loss_ce_7: 0.2224  loss_mask_7: 0.4424  loss_dice_7: 1.123  loss_ce_8: 0.2234  loss_mask_8: 0.441  loss_dice_8: 1.107    time: 0.5534  last_time: 0.5676  data_time: 0.0233  last_data_time: 0.0210   lr: 0.0001  max_mem: 15465M
[08/16 10:28:28] d2.utils.events INFO:  eta: 0:07:21  iter: 1199  total_loss: 18.51  loss_ce: 0.2016  loss_mask: 0.4646  loss_dice: 1.11  loss_ce_0: 0.2349  loss_mask_0: 0.5078  loss_dice_0: 1.214  loss_ce_1: 0.2556  loss_mask_1: 0.4829  loss_dice_1: 1.18  loss_ce_2: 0.2238  loss_mask_2: 0.4797  loss_dice_2: 1.142  loss_ce_3: 0.2129  loss_mask_3: 0.466  loss_dice_3: 1.159  loss_ce_4: 0.2119  loss_mask_4: 0.4624  loss_dice_4: 1.132  loss_ce_5: 0.1883  loss_mask_5: 0.4612  loss_dice_5: 1.138  loss_ce_6: 0.2197  loss_mask_6: 0.4687  loss_dice_6: 1.13  loss_ce_7: 0.1847  loss_mask_7: 0.4668  loss_dice_7: 1.127  loss_ce_8: 0.1882  loss_mask_8: 0.4624  loss_dice_8: 1.108    time: 0.5539  last_time: 0.5372  data_time: 0.0221  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:28:39] d2.utils.events INFO:  eta: 0:07:10  iter: 1219  total_loss: 17.56  loss_ce: 0.2058  loss_mask: 0.4331  loss_dice: 1.068  loss_ce_0: 0.1925  loss_mask_0: 0.4658  loss_dice_0: 1.157  loss_ce_1: 0.2091  loss_mask_1: 0.4435  loss_dice_1: 1.112  loss_ce_2: 0.2233  loss_mask_2: 0.427  loss_dice_2: 1.086  loss_ce_3: 0.2124  loss_mask_3: 0.4288  loss_dice_3: 1.1  loss_ce_4: 0.1662  loss_mask_4: 0.4331  loss_dice_4: 1.086  loss_ce_5: 0.1878  loss_mask_5: 0.4249  loss_dice_5: 1.068  loss_ce_6: 0.1935  loss_mask_6: 0.4253  loss_dice_6: 1.048  loss_ce_7: 0.1982  loss_mask_7: 0.4224  loss_dice_7: 1.063  loss_ce_8: 0.1913  loss_mask_8: 0.431  loss_dice_8: 1.066    time: 0.5540  last_time: 0.5403  data_time: 0.0228  last_data_time: 0.0226   lr: 0.0001  max_mem: 15465M
[08/16 10:28:50] d2.utils.events INFO:  eta: 0:06:59  iter: 1239  total_loss: 18.84  loss_ce: 0.2106  loss_mask: 0.4557  loss_dice: 1.147  loss_ce_0: 0.2562  loss_mask_0: 0.5002  loss_dice_0: 1.285  loss_ce_1: 0.2606  loss_mask_1: 0.4884  loss_dice_1: 1.186  loss_ce_2: 0.2584  loss_mask_2: 0.4632  loss_dice_2: 1.155  loss_ce_3: 0.2455  loss_mask_3: 0.4745  loss_dice_3: 1.152  loss_ce_4: 0.2091  loss_mask_4: 0.4685  loss_dice_4: 1.144  loss_ce_5: 0.2163  loss_mask_5: 0.4649  loss_dice_5: 1.153  loss_ce_6: 0.2367  loss_mask_6: 0.4586  loss_dice_6: 1.16  loss_ce_7: 0.218  loss_mask_7: 0.4623  loss_dice_7: 1.156  loss_ce_8: 0.2256  loss_mask_8: 0.461  loss_dice_8: 1.118    time: 0.5543  last_time: 0.6071  data_time: 0.0229  last_data_time: 0.0267   lr: 0.0001  max_mem: 15465M
[08/16 10:29:01] d2.utils.events INFO:  eta: 0:06:49  iter: 1259  total_loss: 17.68  loss_ce: 0.1943  loss_mask: 0.4358  loss_dice: 1.089  loss_ce_0: 0.1996  loss_mask_0: 0.5101  loss_dice_0: 1.236  loss_ce_1: 0.2705  loss_mask_1: 0.471  loss_dice_1: 1.138  loss_ce_2: 0.2577  loss_mask_2: 0.4721  loss_dice_2: 1.146  loss_ce_3: 0.2258  loss_mask_3: 0.4407  loss_dice_3: 1.097  loss_ce_4: 0.21  loss_mask_4: 0.4409  loss_dice_4: 1.102  loss_ce_5: 0.1987  loss_mask_5: 0.4415  loss_dice_5: 1.096  loss_ce_6: 0.2035  loss_mask_6: 0.439  loss_dice_6: 1.09  loss_ce_7: 0.2013  loss_mask_7: 0.4372  loss_dice_7: 1.084  loss_ce_8: 0.184  loss_mask_8: 0.4388  loss_dice_8: 1.082    time: 0.5544  last_time: 0.5466  data_time: 0.0228  last_data_time: 0.0219   lr: 0.0001  max_mem: 15465M
[08/16 10:29:13] d2.utils.events INFO:  eta: 0:06:38  iter: 1279  total_loss: 18.31  loss_ce: 0.1999  loss_mask: 0.4493  loss_dice: 1.088  loss_ce_0: 0.2249  loss_mask_0: 0.4797  loss_dice_0: 1.227  loss_ce_1: 0.2467  loss_mask_1: 0.4823  loss_dice_1: 1.184  loss_ce_2: 0.251  loss_mask_2: 0.4559  loss_dice_2: 1.148  loss_ce_3: 0.2219  loss_mask_3: 0.4623  loss_dice_3: 1.128  loss_ce_4: 0.2361  loss_mask_4: 0.454  loss_dice_4: 1.13  loss_ce_5: 0.2201  loss_mask_5: 0.4501  loss_dice_5: 1.11  loss_ce_6: 0.205  loss_mask_6: 0.4539  loss_dice_6: 1.111  loss_ce_7: 0.1935  loss_mask_7: 0.4522  loss_dice_7: 1.101  loss_ce_8: 0.1896  loss_mask_8: 0.4575  loss_dice_8: 1.121    time: 0.5546  last_time: 0.5781  data_time: 0.0239  last_data_time: 0.0231   lr: 0.0001  max_mem: 15465M
[08/16 10:29:24] d2.utils.events INFO:  eta: 0:06:27  iter: 1299  total_loss: 18.02  loss_ce: 0.2298  loss_mask: 0.4594  loss_dice: 1.072  loss_ce_0: 0.2303  loss_mask_0: 0.4877  loss_dice_0: 1.192  loss_ce_1: 0.2803  loss_mask_1: 0.4846  loss_dice_1: 1.154  loss_ce_2: 0.2825  loss_mask_2: 0.4647  loss_dice_2: 1.113  loss_ce_3: 0.2564  loss_mask_3: 0.4681  loss_dice_3: 1.081  loss_ce_4: 0.2315  loss_mask_4: 0.463  loss_dice_4: 1.099  loss_ce_5: 0.2448  loss_mask_5: 0.4635  loss_dice_5: 1.086  loss_ce_6: 0.2306  loss_mask_6: 0.4583  loss_dice_6: 1.063  loss_ce_7: 0.2202  loss_mask_7: 0.4558  loss_dice_7: 1.094  loss_ce_8: 0.2277  loss_mask_8: 0.4617  loss_dice_8: 1.075    time: 0.5547  last_time: 0.5692  data_time: 0.0230  last_data_time: 0.0220   lr: 0.0001  max_mem: 15465M
[08/16 10:29:35] d2.utils.events INFO:  eta: 0:06:16  iter: 1319  total_loss: 18.45  loss_ce: 0.2346  loss_mask: 0.444  loss_dice: 1.073  loss_ce_0: 0.2377  loss_mask_0: 0.4908  loss_dice_0: 1.21  loss_ce_1: 0.2736  loss_mask_1: 0.4619  loss_dice_1: 1.148  loss_ce_2: 0.231  loss_mask_2: 0.448  loss_dice_2: 1.128  loss_ce_3: 0.2578  loss_mask_3: 0.451  loss_dice_3: 1.11  loss_ce_4: 0.2225  loss_mask_4: 0.4491  loss_dice_4: 1.115  loss_ce_5: 0.2372  loss_mask_5: 0.4529  loss_dice_5: 1.095  loss_ce_6: 0.2367  loss_mask_6: 0.446  loss_dice_6: 1.101  loss_ce_7: 0.2092  loss_mask_7: 0.448  loss_dice_7: 1.086  loss_ce_8: 0.2265  loss_mask_8: 0.4473  loss_dice_8: 1.059    time: 0.5548  last_time: 0.5653  data_time: 0.0231  last_data_time: 0.0237   lr: 0.0001  max_mem: 15465M
[08/16 10:29:47] d2.utils.events INFO:  eta: 0:06:05  iter: 1339  total_loss: 17.66  loss_ce: 0.2163  loss_mask: 0.4333  loss_dice: 1.06  loss_ce_0: 0.2465  loss_mask_0: 0.4944  loss_dice_0: 1.17  loss_ce_1: 0.2487  loss_mask_1: 0.4693  loss_dice_1: 1.103  loss_ce_2: 0.2384  loss_mask_2: 0.4488  loss_dice_2: 1.095  loss_ce_3: 0.2586  loss_mask_3: 0.445  loss_dice_3: 1.08  loss_ce_4: 0.233  loss_mask_4: 0.4388  loss_dice_4: 1.058  loss_ce_5: 0.2383  loss_mask_5: 0.4391  loss_dice_5: 1.078  loss_ce_6: 0.2282  loss_mask_6: 0.4361  loss_dice_6: 1.066  loss_ce_7: 0.2191  loss_mask_7: 0.4381  loss_dice_7: 1.068  loss_ce_8: 0.2167  loss_mask_8: 0.4329  loss_dice_8: 1.05    time: 0.5549  last_time: 0.5624  data_time: 0.0248  last_data_time: 0.0237   lr: 0.0001  max_mem: 15465M
[08/16 10:29:58] d2.utils.events INFO:  eta: 0:05:55  iter: 1359  total_loss: 17.82  loss_ce: 0.2258  loss_mask: 0.4762  loss_dice: 1.07  loss_ce_0: 0.2165  loss_mask_0: 0.503  loss_dice_0: 1.197  loss_ce_1: 0.2639  loss_mask_1: 0.5001  loss_dice_1: 1.102  loss_ce_2: 0.2275  loss_mask_2: 0.4914  loss_dice_2: 1.098  loss_ce_3: 0.251  loss_mask_3: 0.474  loss_dice_3: 1.088  loss_ce_4: 0.2162  loss_mask_4: 0.4726  loss_dice_4: 1.076  loss_ce_5: 0.2098  loss_mask_5: 0.4769  loss_dice_5: 1.104  loss_ce_6: 0.2029  loss_mask_6: 0.4742  loss_dice_6: 1.044  loss_ce_7: 0.2164  loss_mask_7: 0.4811  loss_dice_7: 1.062  loss_ce_8: 0.2274  loss_mask_8: 0.4877  loss_dice_8: 1.072    time: 0.5553  last_time: 0.5923  data_time: 0.0233  last_data_time: 0.0268   lr: 0.0001  max_mem: 15465M
[08/16 10:30:10] d2.utils.events INFO:  eta: 0:05:44  iter: 1379  total_loss: 18.27  loss_ce: 0.2244  loss_mask: 0.4438  loss_dice: 1.091  loss_ce_0: 0.2281  loss_mask_0: 0.4814  loss_dice_0: 1.254  loss_ce_1: 0.2612  loss_mask_1: 0.447  loss_dice_1: 1.209  loss_ce_2: 0.2697  loss_mask_2: 0.4401  loss_dice_2: 1.152  loss_ce_3: 0.2658  loss_mask_3: 0.4483  loss_dice_3: 1.152  loss_ce_4: 0.2056  loss_mask_4: 0.4487  loss_dice_4: 1.181  loss_ce_5: 0.221  loss_mask_5: 0.4503  loss_dice_5: 1.151  loss_ce_6: 0.2336  loss_mask_6: 0.439  loss_dice_6: 1.152  loss_ce_7: 0.2248  loss_mask_7: 0.437  loss_dice_7: 1.107  loss_ce_8: 0.2455  loss_mask_8: 0.4445  loss_dice_8: 1.106    time: 0.5557  last_time: 0.5311  data_time: 0.0225  last_data_time: 0.0209   lr: 0.0001  max_mem: 15465M
[08/16 10:30:22] d2.utils.events INFO:  eta: 0:05:34  iter: 1399  total_loss: 17.72  loss_ce: 0.2163  loss_mask: 0.4444  loss_dice: 1.105  loss_ce_0: 0.1991  loss_mask_0: 0.4947  loss_dice_0: 1.191  loss_ce_1: 0.2477  loss_mask_1: 0.4628  loss_dice_1: 1.127  loss_ce_2: 0.2364  loss_mask_2: 0.4535  loss_dice_2: 1.129  loss_ce_3: 0.2538  loss_mask_3: 0.4478  loss_dice_3: 1.12  loss_ce_4: 0.2239  loss_mask_4: 0.4642  loss_dice_4: 1.11  loss_ce_5: 0.2079  loss_mask_5: 0.458  loss_dice_5: 1.089  loss_ce_6: 0.1977  loss_mask_6: 0.4505  loss_dice_6: 1.089  loss_ce_7: 0.1988  loss_mask_7: 0.4556  loss_dice_7: 1.098  loss_ce_8: 0.216  loss_mask_8: 0.4603  loss_dice_8: 1.088    time: 0.5561  last_time: 0.5624  data_time: 0.0227  last_data_time: 0.0225   lr: 0.0001  max_mem: 15465M
[08/16 10:30:33] d2.utils.events INFO:  eta: 0:05:23  iter: 1419  total_loss: 18.48  loss_ce: 0.2197  loss_mask: 0.4446  loss_dice: 1.124  loss_ce_0: 0.2047  loss_mask_0: 0.4784  loss_dice_0: 1.246  loss_ce_1: 0.2467  loss_mask_1: 0.4664  loss_dice_1: 1.168  loss_ce_2: 0.2628  loss_mask_2: 0.4528  loss_dice_2: 1.133  loss_ce_3: 0.2508  loss_mask_3: 0.4438  loss_dice_3: 1.144  loss_ce_4: 0.2319  loss_mask_4: 0.4556  loss_dice_4: 1.145  loss_ce_5: 0.2482  loss_mask_5: 0.4524  loss_dice_5: 1.117  loss_ce_6: 0.2345  loss_mask_6: 0.4459  loss_dice_6: 1.113  loss_ce_7: 0.2023  loss_mask_7: 0.439  loss_dice_7: 1.118  loss_ce_8: 0.2156  loss_mask_8: 0.4441  loss_dice_8: 1.135    time: 0.5562  last_time: 0.5712  data_time: 0.0231  last_data_time: 0.0274   lr: 0.0001  max_mem: 15465M
[08/16 10:30:44] d2.utils.events INFO:  eta: 0:05:12  iter: 1439  total_loss: 17.51  loss_ce: 0.1975  loss_mask: 0.4516  loss_dice: 1.045  loss_ce_0: 0.2157  loss_mask_0: 0.4703  loss_dice_0: 1.188  loss_ce_1: 0.2481  loss_mask_1: 0.4438  loss_dice_1: 1.132  loss_ce_2: 0.2218  loss_mask_2: 0.4339  loss_dice_2: 1.12  loss_ce_3: 0.2508  loss_mask_3: 0.441  loss_dice_3: 1.085  loss_ce_4: 0.226  loss_mask_4: 0.4506  loss_dice_4: 1.098  loss_ce_5: 0.2016  loss_mask_5: 0.4474  loss_dice_5: 1.096  loss_ce_6: 0.1935  loss_mask_6: 0.4558  loss_dice_6: 1.047  loss_ce_7: 0.1845  loss_mask_7: 0.4498  loss_dice_7: 1.074  loss_ce_8: 0.204  loss_mask_8: 0.448  loss_dice_8: 1.056    time: 0.5563  last_time: 0.5653  data_time: 0.0229  last_data_time: 0.0215   lr: 0.0001  max_mem: 15465M
[08/16 10:30:56] d2.utils.events INFO:  eta: 0:05:01  iter: 1459  total_loss: 18.99  loss_ce: 0.2325  loss_mask: 0.4488  loss_dice: 1.209  loss_ce_0: 0.1951  loss_mask_0: 0.4982  loss_dice_0: 1.33  loss_ce_1: 0.267  loss_mask_1: 0.4748  loss_dice_1: 1.233  loss_ce_2: 0.2453  loss_mask_2: 0.4604  loss_dice_2: 1.227  loss_ce_3: 0.2494  loss_mask_3: 0.4625  loss_dice_3: 1.216  loss_ce_4: 0.2143  loss_mask_4: 0.4524  loss_dice_4: 1.174  loss_ce_5: 0.2152  loss_mask_5: 0.4515  loss_dice_5: 1.227  loss_ce_6: 0.2213  loss_mask_6: 0.4522  loss_dice_6: 1.182  loss_ce_7: 0.2131  loss_mask_7: 0.4537  loss_dice_7: 1.214  loss_ce_8: 0.2269  loss_mask_8: 0.4622  loss_dice_8: 1.213    time: 0.5562  last_time: 0.5655  data_time: 0.0236  last_data_time: 0.0213   lr: 0.0001  max_mem: 15465M
[08/16 10:31:07] d2.utils.events INFO:  eta: 0:04:50  iter: 1479  total_loss: 17.63  loss_ce: 0.2112  loss_mask: 0.459  loss_dice: 1.076  loss_ce_0: 0.213  loss_mask_0: 0.4997  loss_dice_0: 1.203  loss_ce_1: 0.2398  loss_mask_1: 0.4799  loss_dice_1: 1.137  loss_ce_2: 0.2357  loss_mask_2: 0.4678  loss_dice_2: 1.112  loss_ce_3: 0.2257  loss_mask_3: 0.4716  loss_dice_3: 1.109  loss_ce_4: 0.2201  loss_mask_4: 0.4734  loss_dice_4: 1.068  loss_ce_5: 0.2175  loss_mask_5: 0.477  loss_dice_5: 1.085  loss_ce_6: 0.2111  loss_mask_6: 0.4649  loss_dice_6: 1.089  loss_ce_7: 0.212  loss_mask_7: 0.4591  loss_dice_7: 1.11  loss_ce_8: 0.2029  loss_mask_8: 0.4601  loss_dice_8: 1.075    time: 0.5560  last_time: 0.5398  data_time: 0.0243  last_data_time: 0.0232   lr: 0.0001  max_mem: 15465M
[08/16 10:31:18] d2.utils.events INFO:  eta: 0:04:39  iter: 1499  total_loss: 17.59  loss_ce: 0.1875  loss_mask: 0.4454  loss_dice: 1.073  loss_ce_0: 0.1988  loss_mask_0: 0.4721  loss_dice_0: 1.218  loss_ce_1: 0.241  loss_mask_1: 0.4535  loss_dice_1: 1.146  loss_ce_2: 0.2276  loss_mask_2: 0.4525  loss_dice_2: 1.098  loss_ce_3: 0.2406  loss_mask_3: 0.4551  loss_dice_3: 1.088  loss_ce_4: 0.205  loss_mask_4: 0.4586  loss_dice_4: 1.092  loss_ce_5: 0.202  loss_mask_5: 0.4561  loss_dice_5: 1.089  loss_ce_6: 0.1861  loss_mask_6: 0.4559  loss_dice_6: 1.072  loss_ce_7: 0.1805  loss_mask_7: 0.4543  loss_dice_7: 1.059  loss_ce_8: 0.18  loss_mask_8: 0.4423  loss_dice_8: 1.075    time: 0.5562  last_time: 0.5423  data_time: 0.0239  last_data_time: 0.0215   lr: 0.0001  max_mem: 15465M
[08/16 10:31:29] d2.utils.events INFO:  eta: 0:04:28  iter: 1519  total_loss: 17.67  loss_ce: 0.1699  loss_mask: 0.435  loss_dice: 1.076  loss_ce_0: 0.1723  loss_mask_0: 0.4728  loss_dice_0: 1.169  loss_ce_1: 0.2012  loss_mask_1: 0.4746  loss_dice_1: 1.133  loss_ce_2: 0.1988  loss_mask_2: 0.4312  loss_dice_2: 1.098  loss_ce_3: 0.1964  loss_mask_3: 0.4511  loss_dice_3: 1.087  loss_ce_4: 0.1918  loss_mask_4: 0.4613  loss_dice_4: 1.067  loss_ce_5: 0.1769  loss_mask_5: 0.4481  loss_dice_5: 1.101  loss_ce_6: 0.1769  loss_mask_6: 0.4518  loss_dice_6: 1.117  loss_ce_7: 0.1646  loss_mask_7: 0.4434  loss_dice_7: 1.11  loss_ce_8: 0.2005  loss_mask_8: 0.4365  loss_dice_8: 1.083    time: 0.5563  last_time: 0.5742  data_time: 0.0236  last_data_time: 0.0221   lr: 0.0001  max_mem: 15465M
[08/16 10:31:40] d2.utils.events INFO:  eta: 0:04:17  iter: 1539  total_loss: 16.71  loss_ce: 0.186  loss_mask: 0.4175  loss_dice: 0.9999  loss_ce_0: 0.1829  loss_mask_0: 0.4231  loss_dice_0: 1.079  loss_ce_1: 0.2375  loss_mask_1: 0.4234  loss_dice_1: 1.069  loss_ce_2: 0.2099  loss_mask_2: 0.4099  loss_dice_2: 1.052  loss_ce_3: 0.1846  loss_mask_3: 0.4172  loss_dice_3: 1.046  loss_ce_4: 0.1848  loss_mask_4: 0.4065  loss_dice_4: 1.039  loss_ce_5: 0.1857  loss_mask_5: 0.4123  loss_dice_5: 1.042  loss_ce_6: 0.1882  loss_mask_6: 0.4056  loss_dice_6: 1.01  loss_ce_7: 0.1922  loss_mask_7: 0.4121  loss_dice_7: 1.017  loss_ce_8: 0.1554  loss_mask_8: 0.4141  loss_dice_8: 1.017    time: 0.5562  last_time: 0.5584  data_time: 0.0236  last_data_time: 0.0210   lr: 0.0001  max_mem: 15465M
[08/16 10:31:51] d2.utils.events INFO:  eta: 0:04:05  iter: 1559  total_loss: 17.98  loss_ce: 0.1822  loss_mask: 0.4401  loss_dice: 1.082  loss_ce_0: 0.2018  loss_mask_0: 0.4993  loss_dice_0: 1.163  loss_ce_1: 0.2529  loss_mask_1: 0.4868  loss_dice_1: 1.113  loss_ce_2: 0.2196  loss_mask_2: 0.4649  loss_dice_2: 1.091  loss_ce_3: 0.2316  loss_mask_3: 0.4698  loss_dice_3: 1.084  loss_ce_4: 0.1801  loss_mask_4: 0.4559  loss_dice_4: 1.06  loss_ce_5: 0.1887  loss_mask_5: 0.4537  loss_dice_5: 1.081  loss_ce_6: 0.167  loss_mask_6: 0.4365  loss_dice_6: 1.076  loss_ce_7: 0.1701  loss_mask_7: 0.4463  loss_dice_7: 1.074  loss_ce_8: 0.1845  loss_mask_8: 0.453  loss_dice_8: 1.063    time: 0.5560  last_time: 0.5348  data_time: 0.0226  last_data_time: 0.0229   lr: 0.0001  max_mem: 15465M
[08/16 10:32:02] d2.utils.events INFO:  eta: 0:03:54  iter: 1579  total_loss: 17.23  loss_ce: 0.2152  loss_mask: 0.4269  loss_dice: 1.043  loss_ce_0: 0.1977  loss_mask_0: 0.448  loss_dice_0: 1.168  loss_ce_1: 0.2112  loss_mask_1: 0.4381  loss_dice_1: 1.134  loss_ce_2: 0.2159  loss_mask_2: 0.4169  loss_dice_2: 1.124  loss_ce_3: 0.2339  loss_mask_3: 0.4399  loss_dice_3: 1.093  loss_ce_4: 0.2129  loss_mask_4: 0.4417  loss_dice_4: 1.063  loss_ce_5: 0.1931  loss_mask_5: 0.4452  loss_dice_5: 1.085  loss_ce_6: 0.1997  loss_mask_6: 0.4259  loss_dice_6: 1.049  loss_ce_7: 0.2087  loss_mask_7: 0.4295  loss_dice_7: 1.058  loss_ce_8: 0.1838  loss_mask_8: 0.4239  loss_dice_8: 1.053    time: 0.5561  last_time: 0.5295  data_time: 0.0220  last_data_time: 0.0267   lr: 0.0001  max_mem: 15465M
[08/16 10:32:14] d2.utils.events INFO:  eta: 0:03:44  iter: 1599  total_loss: 17.52  loss_ce: 0.2132  loss_mask: 0.4327  loss_dice: 1.061  loss_ce_0: 0.207  loss_mask_0: 0.4965  loss_dice_0: 1.208  loss_ce_1: 0.2407  loss_mask_1: 0.4749  loss_dice_1: 1.125  loss_ce_2: 0.2172  loss_mask_2: 0.4391  loss_dice_2: 1.109  loss_ce_3: 0.2273  loss_mask_3: 0.4343  loss_dice_3: 1.082  loss_ce_4: 0.2124  loss_mask_4: 0.4362  loss_dice_4: 1.093  loss_ce_5: 0.2191  loss_mask_5: 0.4363  loss_dice_5: 1.093  loss_ce_6: 0.2208  loss_mask_6: 0.4206  loss_dice_6: 1.072  loss_ce_7: 0.1896  loss_mask_7: 0.4283  loss_dice_7: 1.074  loss_ce_8: 0.1973  loss_mask_8: 0.4277  loss_dice_8: 1.076    time: 0.5562  last_time: 0.5632  data_time: 0.0232  last_data_time: 0.0221   lr: 0.0001  max_mem: 15465M
[08/16 10:32:26] d2.utils.events INFO:  eta: 0:03:33  iter: 1619  total_loss: 17.82  loss_ce: 0.2199  loss_mask: 0.4331  loss_dice: 1.085  loss_ce_0: 0.2054  loss_mask_0: 0.4654  loss_dice_0: 1.207  loss_ce_1: 0.2907  loss_mask_1: 0.441  loss_dice_1: 1.148  loss_ce_2: 0.2168  loss_mask_2: 0.4316  loss_dice_2: 1.118  loss_ce_3: 0.2218  loss_mask_3: 0.4257  loss_dice_3: 1.127  loss_ce_4: 0.2155  loss_mask_4: 0.4259  loss_dice_4: 1.106  loss_ce_5: 0.2114  loss_mask_5: 0.4352  loss_dice_5: 1.097  loss_ce_6: 0.2297  loss_mask_6: 0.4338  loss_dice_6: 1.099  loss_ce_7: 0.211  loss_mask_7: 0.436  loss_dice_7: 1.11  loss_ce_8: 0.2043  loss_mask_8: 0.4306  loss_dice_8: 1.09    time: 0.5565  last_time: 0.5367  data_time: 0.0234  last_data_time: 0.0244   lr: 0.0001  max_mem: 15465M
[08/16 10:32:37] d2.utils.events INFO:  eta: 0:03:22  iter: 1639  total_loss: 17.41  loss_ce: 0.2082  loss_mask: 0.4308  loss_dice: 1.038  loss_ce_0: 0.2372  loss_mask_0: 0.4536  loss_dice_0: 1.166  loss_ce_1: 0.2723  loss_mask_1: 0.4488  loss_dice_1: 1.106  loss_ce_2: 0.2497  loss_mask_2: 0.4486  loss_dice_2: 1.112  loss_ce_3: 0.2649  loss_mask_3: 0.4366  loss_dice_3: 1.08  loss_ce_4: 0.2371  loss_mask_4: 0.4516  loss_dice_4: 1.071  loss_ce_5: 0.1944  loss_mask_5: 0.4383  loss_dice_5: 1.077  loss_ce_6: 0.2082  loss_mask_6: 0.4283  loss_dice_6: 1.035  loss_ce_7: 0.216  loss_mask_7: 0.4326  loss_dice_7: 1.044  loss_ce_8: 0.2018  loss_mask_8: 0.4312  loss_dice_8: 1.043    time: 0.5568  last_time: 0.5823  data_time: 0.0229  last_data_time: 0.0224   lr: 0.0001  max_mem: 15465M
[08/16 10:32:49] d2.utils.events INFO:  eta: 0:03:11  iter: 1659  total_loss: 17.53  loss_ce: 0.1886  loss_mask: 0.4106  loss_dice: 1.077  loss_ce_0: 0.2217  loss_mask_0: 0.464  loss_dice_0: 1.222  loss_ce_1: 0.254  loss_mask_1: 0.4529  loss_dice_1: 1.108  loss_ce_2: 0.2337  loss_mask_2: 0.4522  loss_dice_2: 1.108  loss_ce_3: 0.242  loss_mask_3: 0.4322  loss_dice_3: 1.096  loss_ce_4: 0.216  loss_mask_4: 0.4395  loss_dice_4: 1.093  loss_ce_5: 0.204  loss_mask_5: 0.4281  loss_dice_5: 1.09  loss_ce_6: 0.2029  loss_mask_6: 0.4206  loss_dice_6: 1.063  loss_ce_7: 0.1785  loss_mask_7: 0.4148  loss_dice_7: 1.074  loss_ce_8: 0.1951  loss_mask_8: 0.414  loss_dice_8: 1.087    time: 0.5569  last_time: 0.5556  data_time: 0.0240  last_data_time: 0.0297   lr: 0.0001  max_mem: 15465M
[08/16 10:33:00] d2.utils.events INFO:  eta: 0:03:00  iter: 1679  total_loss: 16.71  loss_ce: 0.182  loss_mask: 0.4389  loss_dice: 1.01  loss_ce_0: 0.1848  loss_mask_0: 0.4796  loss_dice_0: 1.123  loss_ce_1: 0.2172  loss_mask_1: 0.457  loss_dice_1: 1.058  loss_ce_2: 0.1858  loss_mask_2: 0.4431  loss_dice_2: 1.054  loss_ce_3: 0.1915  loss_mask_3: 0.4537  loss_dice_3: 1.056  loss_ce_4: 0.1928  loss_mask_4: 0.4432  loss_dice_4: 1.026  loss_ce_5: 0.1664  loss_mask_5: 0.4527  loss_dice_5: 1.045  loss_ce_6: 0.1885  loss_mask_6: 0.4415  loss_dice_6: 1.028  loss_ce_7: 0.1797  loss_mask_7: 0.4483  loss_dice_7: 1.014  loss_ce_8: 0.1805  loss_mask_8: 0.4562  loss_dice_8: 1.027    time: 0.5573  last_time: 0.5800  data_time: 0.0246  last_data_time: 0.0241   lr: 0.0001  max_mem: 15465M
[08/16 10:33:12] d2.utils.events INFO:  eta: 0:02:49  iter: 1699  total_loss: 17.87  loss_ce: 0.2051  loss_mask: 0.4423  loss_dice: 1.092  loss_ce_0: 0.2007  loss_mask_0: 0.4526  loss_dice_0: 1.184  loss_ce_1: 0.2137  loss_mask_1: 0.4664  loss_dice_1: 1.146  loss_ce_2: 0.2177  loss_mask_2: 0.4558  loss_dice_2: 1.129  loss_ce_3: 0.2277  loss_mask_3: 0.4324  loss_dice_3: 1.118  loss_ce_4: 0.2008  loss_mask_4: 0.4407  loss_dice_4: 1.107  loss_ce_5: 0.1852  loss_mask_5: 0.4335  loss_dice_5: 1.115  loss_ce_6: 0.1825  loss_mask_6: 0.4435  loss_dice_6: 1.121  loss_ce_7: 0.1793  loss_mask_7: 0.4412  loss_dice_7: 1.101  loss_ce_8: 0.1802  loss_mask_8: 0.4458  loss_dice_8: 1.092    time: 0.5575  last_time: 0.5760  data_time: 0.0237  last_data_time: 0.0236   lr: 0.0001  max_mem: 15465M
[08/16 10:33:23] d2.utils.events INFO:  eta: 0:02:38  iter: 1719  total_loss: 17.32  loss_ce: 0.1899  loss_mask: 0.4093  loss_dice: 1.049  loss_ce_0: 0.1759  loss_mask_0: 0.4474  loss_dice_0: 1.187  loss_ce_1: 0.2589  loss_mask_1: 0.4279  loss_dice_1: 1.115  loss_ce_2: 0.2188  loss_mask_2: 0.4131  loss_dice_2: 1.12  loss_ce_3: 0.2222  loss_mask_3: 0.4277  loss_dice_3: 1.099  loss_ce_4: 0.1925  loss_mask_4: 0.4208  loss_dice_4: 1.1  loss_ce_5: 0.2022  loss_mask_5: 0.4194  loss_dice_5: 1.089  loss_ce_6: 0.1934  loss_mask_6: 0.423  loss_dice_6: 1.068  loss_ce_7: 0.1932  loss_mask_7: 0.4183  loss_dice_7: 1.102  loss_ce_8: 0.1949  loss_mask_8: 0.4191  loss_dice_8: 1.096    time: 0.5576  last_time: 0.5320  data_time: 0.0240  last_data_time: 0.0228   lr: 0.0001  max_mem: 15465M
[08/16 10:33:35] d2.utils.events INFO:  eta: 0:02:26  iter: 1739  total_loss: 17.69  loss_ce: 0.1804  loss_mask: 0.4324  loss_dice: 1.092  loss_ce_0: 0.2081  loss_mask_0: 0.4703  loss_dice_0: 1.204  loss_ce_1: 0.2258  loss_mask_1: 0.4485  loss_dice_1: 1.142  loss_ce_2: 0.2299  loss_mask_2: 0.4473  loss_dice_2: 1.117  loss_ce_3: 0.2191  loss_mask_3: 0.4441  loss_dice_3: 1.139  loss_ce_4: 0.2001  loss_mask_4: 0.4409  loss_dice_4: 1.095  loss_ce_5: 0.184  loss_mask_5: 0.4355  loss_dice_5: 1.057  loss_ce_6: 0.1889  loss_mask_6: 0.4391  loss_dice_6: 1.118  loss_ce_7: 0.1846  loss_mask_7: 0.435  loss_dice_7: 1.109  loss_ce_8: 0.1803  loss_mask_8: 0.4383  loss_dice_8: 1.104    time: 0.5577  last_time: 0.5698  data_time: 0.0240  last_data_time: 0.0238   lr: 0.0001  max_mem: 15465M
[08/16 10:33:47] d2.utils.events INFO:  eta: 0:02:15  iter: 1759  total_loss: 17.32  loss_ce: 0.1717  loss_mask: 0.4405  loss_dice: 1.044  loss_ce_0: 0.1877  loss_mask_0: 0.4732  loss_dice_0: 1.177  loss_ce_1: 0.2068  loss_mask_1: 0.4549  loss_dice_1: 1.125  loss_ce_2: 0.209  loss_mask_2: 0.4481  loss_dice_2: 1.103  loss_ce_3: 0.1998  loss_mask_3: 0.4479  loss_dice_3: 1.048  loss_ce_4: 0.1929  loss_mask_4: 0.4528  loss_dice_4: 1.061  loss_ce_5: 0.1829  loss_mask_5: 0.4452  loss_dice_5: 1.065  loss_ce_6: 0.1904  loss_mask_6: 0.4457  loss_dice_6: 1.031  loss_ce_7: 0.1814  loss_mask_7: 0.445  loss_dice_7: 1.039  loss_ce_8: 0.1796  loss_mask_8: 0.4464  loss_dice_8: 1.034    time: 0.5581  last_time: 0.5894  data_time: 0.0248  last_data_time: 0.0244   lr: 0.0001  max_mem: 15465M
[08/16 10:33:58] d2.utils.events INFO:  eta: 0:02:04  iter: 1779  total_loss: 16.95  loss_ce: 0.2016  loss_mask: 0.3889  loss_dice: 1.015  loss_ce_0: 0.2437  loss_mask_0: 0.4254  loss_dice_0: 1.125  loss_ce_1: 0.2441  loss_mask_1: 0.4052  loss_dice_1: 1.118  loss_ce_2: 0.2518  loss_mask_2: 0.4008  loss_dice_2: 1.071  loss_ce_3: 0.2329  loss_mask_3: 0.3927  loss_dice_3: 1.049  loss_ce_4: 0.2386  loss_mask_4: 0.3969  loss_dice_4: 1.034  loss_ce_5: 0.2043  loss_mask_5: 0.3929  loss_dice_5: 1.043  loss_ce_6: 0.1833  loss_mask_6: 0.3866  loss_dice_6: 1.041  loss_ce_7: 0.2011  loss_mask_7: 0.3858  loss_dice_7: 1.047  loss_ce_8: 0.1988  loss_mask_8: 0.3849  loss_dice_8: 1.033    time: 0.5583  last_time: 0.5250  data_time: 0.0253  last_data_time: 0.0237   lr: 0.0001  max_mem: 15465M
[08/16 10:34:09] d2.utils.events INFO:  eta: 0:01:53  iter: 1799  total_loss: 17.61  loss_ce: 0.2191  loss_mask: 0.4426  loss_dice: 1.054  loss_ce_0: 0.2013  loss_mask_0: 0.4977  loss_dice_0: 1.189  loss_ce_1: 0.2269  loss_mask_1: 0.4541  loss_dice_1: 1.158  loss_ce_2: 0.2204  loss_mask_2: 0.4508  loss_dice_2: 1.115  loss_ce_3: 0.2246  loss_mask_3: 0.4431  loss_dice_3: 1.091  loss_ce_4: 0.2369  loss_mask_4: 0.4549  loss_dice_4: 1.098  loss_ce_5: 0.2019  loss_mask_5: 0.4396  loss_dice_5: 1.094  loss_ce_6: 0.18  loss_mask_6: 0.4373  loss_dice_6: 1.075  loss_ce_7: 0.2091  loss_mask_7: 0.4386  loss_dice_7: 1.087  loss_ce_8: 0.2033  loss_mask_8: 0.4383  loss_dice_8: 1.053    time: 0.5581  last_time: 0.5313  data_time: 0.0240  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:34:21] d2.utils.events INFO:  eta: 0:01:41  iter: 1819  total_loss: 17.29  loss_ce: 0.1911  loss_mask: 0.4456  loss_dice: 1.06  loss_ce_0: 0.1818  loss_mask_0: 0.4851  loss_dice_0: 1.178  loss_ce_1: 0.2502  loss_mask_1: 0.459  loss_dice_1: 1.119  loss_ce_2: 0.2059  loss_mask_2: 0.4496  loss_dice_2: 1.117  loss_ce_3: 0.2146  loss_mask_3: 0.4474  loss_dice_3: 1.082  loss_ce_4: 0.2099  loss_mask_4: 0.4468  loss_dice_4: 1.085  loss_ce_5: 0.2015  loss_mask_5: 0.4426  loss_dice_5: 1.09  loss_ce_6: 0.1869  loss_mask_6: 0.4436  loss_dice_6: 1.08  loss_ce_7: 0.2051  loss_mask_7: 0.443  loss_dice_7: 1.078  loss_ce_8: 0.2014  loss_mask_8: 0.4385  loss_dice_8: 1.058    time: 0.5582  last_time: 0.5527  data_time: 0.0237  last_data_time: 0.0237   lr: 0.0001  max_mem: 15465M
[08/16 10:34:32] d2.utils.events INFO:  eta: 0:01:30  iter: 1839  total_loss: 16.37  loss_ce: 0.1999  loss_mask: 0.4016  loss_dice: 1.032  loss_ce_0: 0.1823  loss_mask_0: 0.4324  loss_dice_0: 1.118  loss_ce_1: 0.2468  loss_mask_1: 0.4117  loss_dice_1: 1.073  loss_ce_2: 0.2178  loss_mask_2: 0.4106  loss_dice_2: 1.037  loss_ce_3: 0.2268  loss_mask_3: 0.4072  loss_dice_3: 1.037  loss_ce_4: 0.2273  loss_mask_4: 0.4138  loss_dice_4: 1.046  loss_ce_5: 0.1998  loss_mask_5: 0.4105  loss_dice_5: 1.016  loss_ce_6: 0.1762  loss_mask_6: 0.4141  loss_dice_6: 1.037  loss_ce_7: 0.1713  loss_mask_7: 0.402  loss_dice_7: 1.017  loss_ce_8: 0.1947  loss_mask_8: 0.4012  loss_dice_8: 1.037    time: 0.5581  last_time: 0.5202  data_time: 0.0248  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:34:43] d2.utils.events INFO:  eta: 0:01:19  iter: 1859  total_loss: 17.02  loss_ce: 0.1966  loss_mask: 0.436  loss_dice: 1.042  loss_ce_0: 0.1998  loss_mask_0: 0.4771  loss_dice_0: 1.195  loss_ce_1: 0.2202  loss_mask_1: 0.4603  loss_dice_1: 1.133  loss_ce_2: 0.2225  loss_mask_2: 0.4407  loss_dice_2: 1.128  loss_ce_3: 0.2161  loss_mask_3: 0.444  loss_dice_3: 1.037  loss_ce_4: 0.1884  loss_mask_4: 0.4407  loss_dice_4: 1.052  loss_ce_5: 0.2063  loss_mask_5: 0.4385  loss_dice_5: 1.05  loss_ce_6: 0.2013  loss_mask_6: 0.432  loss_dice_6: 1.045  loss_ce_7: 0.1612  loss_mask_7: 0.4437  loss_dice_7: 1.05  loss_ce_8: 0.1966  loss_mask_8: 0.4403  loss_dice_8: 1.049    time: 0.5580  last_time: 0.5370  data_time: 0.0236  last_data_time: 0.0224   lr: 0.0001  max_mem: 15465M
[08/16 10:34:54] d2.utils.events INFO:  eta: 0:01:07  iter: 1879  total_loss: 16.98  loss_ce: 0.1799  loss_mask: 0.417  loss_dice: 1.033  loss_ce_0: 0.2043  loss_mask_0: 0.4614  loss_dice_0: 1.145  loss_ce_1: 0.2247  loss_mask_1: 0.4354  loss_dice_1: 1.105  loss_ce_2: 0.2106  loss_mask_2: 0.4199  loss_dice_2: 1.036  loss_ce_3: 0.2079  loss_mask_3: 0.4243  loss_dice_3: 1.038  loss_ce_4: 0.1864  loss_mask_4: 0.4155  loss_dice_4: 1.04  loss_ce_5: 0.1872  loss_mask_5: 0.4184  loss_dice_5: 1.047  loss_ce_6: 0.188  loss_mask_6: 0.4177  loss_dice_6: 1.053  loss_ce_7: 0.1762  loss_mask_7: 0.4158  loss_dice_7: 1.036  loss_ce_8: 0.1928  loss_mask_8: 0.4149  loss_dice_8: 1.015    time: 0.5578  last_time: 0.5432  data_time: 0.0231  last_data_time: 0.0227   lr: 0.0001  max_mem: 15465M
[08/16 10:35:05] d2.utils.events INFO:  eta: 0:00:56  iter: 1899  total_loss: 16.54  loss_ce: 0.179  loss_mask: 0.4088  loss_dice: 1.018  loss_ce_0: 0.1843  loss_mask_0: 0.4607  loss_dice_0: 1.133  loss_ce_1: 0.2617  loss_mask_1: 0.4342  loss_dice_1: 1.061  loss_ce_2: 0.2203  loss_mask_2: 0.4214  loss_dice_2: 1.044  loss_ce_3: 0.2171  loss_mask_3: 0.4103  loss_dice_3: 1.047  loss_ce_4: 0.2033  loss_mask_4: 0.4049  loss_dice_4: 1.026  loss_ce_5: 0.2079  loss_mask_5: 0.4032  loss_dice_5: 1.022  loss_ce_6: 0.1906  loss_mask_6: 0.4033  loss_dice_6: 1.007  loss_ce_7: 0.1872  loss_mask_7: 0.4027  loss_dice_7: 1.027  loss_ce_8: 0.1938  loss_mask_8: 0.4006  loss_dice_8: 1.009    time: 0.5578  last_time: 0.5550  data_time: 0.0233  last_data_time: 0.0223   lr: 0.0001  max_mem: 15465M
[08/16 10:35:15] d2.utils.events INFO:  eta: 0:00:45  iter: 1919  total_loss: 16.61  loss_ce: 0.1726  loss_mask: 0.3866  loss_dice: 1.032  loss_ce_0: 0.1955  loss_mask_0: 0.4188  loss_dice_0: 1.179  loss_ce_1: 0.2257  loss_mask_1: 0.4178  loss_dice_1: 1.113  loss_ce_2: 0.2281  loss_mask_2: 0.3858  loss_dice_2: 1.08  loss_ce_3: 0.2325  loss_mask_3: 0.3863  loss_dice_3: 1.046  loss_ce_4: 0.1738  loss_mask_4: 0.3973  loss_dice_4: 1.068  loss_ce_5: 0.1837  loss_mask_5: 0.3938  loss_dice_5: 1.064  loss_ce_6: 0.1917  loss_mask_6: 0.3882  loss_dice_6: 1.037  loss_ce_7: 0.2043  loss_mask_7: 0.3798  loss_dice_7: 1.018  loss_ce_8: 0.1776  loss_mask_8: 0.3844  loss_dice_8: 1.039    time: 0.5576  last_time: 0.5177  data_time: 0.0238  last_data_time: 0.0234   lr: 0.0001  max_mem: 15465M
[08/16 10:35:27] d2.utils.events INFO:  eta: 0:00:33  iter: 1939  total_loss: 17.19  loss_ce: 0.1965  loss_mask: 0.4223  loss_dice: 1.026  loss_ce_0: 0.2043  loss_mask_0: 0.4441  loss_dice_0: 1.162  loss_ce_1: 0.2217  loss_mask_1: 0.4399  loss_dice_1: 1.106  loss_ce_2: 0.2445  loss_mask_2: 0.4356  loss_dice_2: 1.078  loss_ce_3: 0.2333  loss_mask_3: 0.4221  loss_dice_3: 1.051  loss_ce_4: 0.2119  loss_mask_4: 0.4179  loss_dice_4: 1.057  loss_ce_5: 0.2137  loss_mask_5: 0.4232  loss_dice_5: 1.04  loss_ce_6: 0.2004  loss_mask_6: 0.419  loss_dice_6: 1.007  loss_ce_7: 0.1992  loss_mask_7: 0.4195  loss_dice_7: 1.038  loss_ce_8: 0.2139  loss_mask_8: 0.4181  loss_dice_8: 1.027    time: 0.5575  last_time: 0.5519  data_time: 0.0242  last_data_time: 0.0229   lr: 0.0001  max_mem: 15465M
[08/16 10:35:38] d2.utils.events INFO:  eta: 0:00:22  iter: 1959  total_loss: 17.62  loss_ce: 0.193  loss_mask: 0.4099  loss_dice: 1.035  loss_ce_0: 0.2127  loss_mask_0: 0.4433  loss_dice_0: 1.153  loss_ce_1: 0.2094  loss_mask_1: 0.4163  loss_dice_1: 1.086  loss_ce_2: 0.2102  loss_mask_2: 0.4307  loss_dice_2: 1.073  loss_ce_3: 0.2314  loss_mask_3: 0.4298  loss_dice_3: 1.048  loss_ce_4: 0.2059  loss_mask_4: 0.4199  loss_dice_4: 1.033  loss_ce_5: 0.1915  loss_mask_5: 0.4129  loss_dice_5: 1.046  loss_ce_6: 0.1804  loss_mask_6: 0.4112  loss_dice_6: 1.034  loss_ce_7: 0.1888  loss_mask_7: 0.4179  loss_dice_7: 1.011  loss_ce_8: 0.1758  loss_mask_8: 0.4133  loss_dice_8: 1.025    time: 0.5575  last_time: 0.5693  data_time: 0.0238  last_data_time: 0.0219   lr: 0.0001  max_mem: 15465M
[08/16 10:35:48] d2.utils.events INFO:  eta: 0:00:11  iter: 1979  total_loss: 17.21  loss_ce: 0.1945  loss_mask: 0.4202  loss_dice: 1.029  loss_ce_0: 0.1717  loss_mask_0: 0.4637  loss_dice_0: 1.156  loss_ce_1: 0.191  loss_mask_1: 0.4456  loss_dice_1: 1.129  loss_ce_2: 0.2029  loss_mask_2: 0.4335  loss_dice_2: 1.092  loss_ce_3: 0.2026  loss_mask_3: 0.4235  loss_dice_3: 1.071  loss_ce_4: 0.1919  loss_mask_4: 0.4273  loss_dice_4: 1.081  loss_ce_5: 0.1943  loss_mask_5: 0.4242  loss_dice_5: 1.078  loss_ce_6: 0.1989  loss_mask_6: 0.4184  loss_dice_6: 1.025  loss_ce_7: 0.1915  loss_mask_7: 0.4163  loss_dice_7: 1.029  loss_ce_8: 0.1803  loss_mask_8: 0.421  loss_dice_8: 1.027    time: 0.5572  last_time: 0.5144  data_time: 0.0230  last_data_time: 0.0243   lr: 0.0001  max_mem: 15465M
[08/16 10:35:59] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/cl_008_2000/model_final.pth
[08/16 10:36:03] d2.utils.events INFO:  eta: 0:00:00  iter: 1999  total_loss: 16.47  loss_ce: 0.1643  loss_mask: 0.4159  loss_dice: 1.019  loss_ce_0: 0.1935  loss_mask_0: 0.45  loss_dice_0: 1.094  loss_ce_1: 0.1956  loss_mask_1: 0.4291  loss_dice_1: 1.073  loss_ce_2: 0.1864  loss_mask_2: 0.4269  loss_dice_2: 1.029  loss_ce_3: 0.1832  loss_mask_3: 0.4201  loss_dice_3: 1.053  loss_ce_4: 0.1857  loss_mask_4: 0.4184  loss_dice_4: 1.048  loss_ce_5: 0.1485  loss_mask_5: 0.4185  loss_dice_5: 1.026  loss_ce_6: 0.1537  loss_mask_6: 0.4157  loss_dice_6: 1.02  loss_ce_7: 0.1536  loss_mask_7: 0.4152  loss_dice_7: 1.016  loss_ce_8: 0.153  loss_mask_8: 0.4192  loss_dice_8: 0.9966    time: 0.5571  last_time: 0.5770  data_time: 0.0240  last_data_time: 0.0218   lr: 0.0001  max_mem: 15465M
[08/16 10:36:03] d2.engine.hooks INFO: Overall training speed: 1998 iterations in 0:18:33 (0.5571 s / it)
[08/16 10:36:03] d2.engine.hooks INFO: Total training time: 0:18:42 (0:00:09 on hooks)
[08/16 10:36:03] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/16 10:36:03] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/16 10:36:03] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/16 10:36:03] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/16 10:36:03] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/16 10:36:03] d2.evaluation.evaluator INFO: Start inference on 250 batches
[08/16 10:36:10] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0058 s/iter. Inference: 0.2300 s/iter. Eval: 0.0767 s/iter. Total: 0.3124 s/iter. ETA=0:01:14
[08/16 10:36:15] d2.evaluation.evaluator INFO: Inference done 29/250. Dataloading: 0.0064 s/iter. Inference: 0.2072 s/iter. Eval: 0.0730 s/iter. Total: 0.2867 s/iter. ETA=0:01:03
[08/16 10:36:20] d2.evaluation.evaluator INFO: Inference done 47/250. Dataloading: 0.0065 s/iter. Inference: 0.2064 s/iter. Eval: 0.0710 s/iter. Total: 0.2840 s/iter. ETA=0:00:57
[08/16 10:36:25] d2.evaluation.evaluator INFO: Inference done 65/250. Dataloading: 0.0067 s/iter. Inference: 0.2069 s/iter. Eval: 0.0725 s/iter. Total: 0.2863 s/iter. ETA=0:00:52
[08/16 10:36:30] d2.evaluation.evaluator INFO: Inference done 83/250. Dataloading: 0.0068 s/iter. Inference: 0.2065 s/iter. Eval: 0.0713 s/iter. Total: 0.2847 s/iter. ETA=0:00:47
[08/16 10:36:36] d2.evaluation.evaluator INFO: Inference done 101/250. Dataloading: 0.0069 s/iter. Inference: 0.2064 s/iter. Eval: 0.0715 s/iter. Total: 0.2849 s/iter. ETA=0:00:42
[08/16 10:36:41] d2.evaluation.evaluator INFO: Inference done 119/250. Dataloading: 0.0069 s/iter. Inference: 0.2065 s/iter. Eval: 0.0711 s/iter. Total: 0.2846 s/iter. ETA=0:00:37
[08/16 10:36:46] d2.evaluation.evaluator INFO: Inference done 137/250. Dataloading: 0.0069 s/iter. Inference: 0.2055 s/iter. Eval: 0.0714 s/iter. Total: 0.2840 s/iter. ETA=0:00:32
[08/16 10:36:51] d2.evaluation.evaluator INFO: Inference done 155/250. Dataloading: 0.0069 s/iter. Inference: 0.2053 s/iter. Eval: 0.0711 s/iter. Total: 0.2835 s/iter. ETA=0:00:26
[08/16 10:36:56] d2.evaluation.evaluator INFO: Inference done 174/250. Dataloading: 0.0069 s/iter. Inference: 0.2047 s/iter. Eval: 0.0710 s/iter. Total: 0.2827 s/iter. ETA=0:00:21
[08/16 10:37:01] d2.evaluation.evaluator INFO: Inference done 193/250. Dataloading: 0.0069 s/iter. Inference: 0.2040 s/iter. Eval: 0.0704 s/iter. Total: 0.2814 s/iter. ETA=0:00:16
[08/16 10:37:06] d2.evaluation.evaluator INFO: Inference done 211/250. Dataloading: 0.0069 s/iter. Inference: 0.2050 s/iter. Eval: 0.0699 s/iter. Total: 0.2818 s/iter. ETA=0:00:10
[08/16 10:37:11] d2.evaluation.evaluator INFO: Inference done 229/250. Dataloading: 0.0068 s/iter. Inference: 0.2052 s/iter. Eval: 0.0695 s/iter. Total: 0.2816 s/iter. ETA=0:00:05
[08/16 10:37:17] d2.evaluation.evaluator INFO: Inference done 248/250. Dataloading: 0.0068 s/iter. Inference: 0.2050 s/iter. Eval: 0.0693 s/iter. Total: 0.2812 s/iter. ETA=0:00:00
[08/16 10:37:18] d2.evaluation.evaluator INFO: Total inference time: 0:01:09.536207 (0.283821 s / iter per device, on 2 devices)
[08/16 10:37:18] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:50 (0.204903 s / iter per device, on 2 devices)
[08/16 10:37:18] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval1wlh9u3t ...
[08/16 10:37:30] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 34.052 | 46.114 | 41.286 |      19       |
| Things | 0.000  | 0.000  | 0.000  |       8       |
| Stuff  | 58.818 | 79.651 | 71.313 |      11       |
[08/16 10:37:30] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.593 | 96.894 | 99.690 |     Stuff     |
| class_8  | 64.727 | 81.578 | 79.344 |     Stuff     |
| class_11 | 85.156 | 88.217 | 96.531 |     Stuff     |
| class_12 | 35.339 | 76.426 | 46.240 |     Stuff     |
| class_13 | 27.964 | 72.706 | 38.462 |     Stuff     |
| class_17 | 28.681 | 61.550 | 46.598 |     Stuff     |
| class_19 | 40.510 | 66.864 | 60.585 |     Stuff     |
| class_20 | 63.217 | 76.025 | 83.153 |     Stuff     |
| class_21 | 86.746 | 88.933 | 97.541 |     Stuff     |
| class_22 | 31.267 | 75.484 | 41.423 |     Stuff     |
| class_23 | 86.794 | 91.486 | 94.872 |     Stuff     |
| class_24 | 0.000  | 0.000  | 0.000  |    Things     |
| class_25 | 0.000  | 0.000  | 0.000  |    Things     |
| class_26 | 0.000  | 0.000  | 0.000  |    Things     |
| class_27 | 0.000  | 0.000  | 0.000  |    Things     |
| class_28 | 0.000  | 0.000  | 0.000  |    Things     |
| class_31 | 0.000  | 0.000  | 0.000  |    Things     |
| class_32 | 0.000  | 0.000  | 0.000  |    Things     |
| class_33 | 0.000  | 0.000  | 0.000  |    Things     |
[08/16 10:37:30] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/16 10:37:30] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/16 10:37:30] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/16 10:37:30] d2.evaluation.testing INFO: copypaste: 34.0524,46.1138,41.2862,0.0000,0.0000,0.0000,58.8177,79.6510,71.3125,96.5930,96.8936,99.6898,64.7271,81.5775,79.3443,85.1562,88.2168,96.5306,35.3392,76.4263,46.2396,27.9638,72.7058,38.4615,28.6810,61.5498,46.5979,40.5100,66.8644,60.5852,63.2172,76.0249,83.1533,86.7459,88.9327,97.5410,31.2673,75.4836,41.4226,86.7942,91.4858,94.8718,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000
