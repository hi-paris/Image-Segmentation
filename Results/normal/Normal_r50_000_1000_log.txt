[09/09 20:06:54] detectron2 INFO: Rank of current process: 0. World size: 1
[09/09 20:06:56] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   535.113.01
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/09 20:06:56] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_19.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[09/09 20:06:56] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_19.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[09/09 20:06:56] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/09 20:06:56] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000/config.yaml
[09/09 20:06:56] d2.utils.env INFO: Using a generated random seed 58360254
[09/09 20:07:02] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/09 20:07:02] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/09 20:07:02] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/09 20:07:02] d2.data.build INFO: Using training sampler TrainingSampler
[09/09 20:07:02] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/09 20:07:02] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/09 20:07:02] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/09 20:07:02] d2.data.build INFO: Making batched data loader with batch_size=8
[09/09 20:07:02] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/09 20:07:02] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[09/09 20:07:02] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[09/09 20:07:03] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[09/09 20:07:03] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[09/09 20:07:03] d2.engine.train_loop INFO: Starting training from iteration 0
[09/09 20:07:30] d2.utils.events INFO:  eta: 0:18:13  iter: 19  total_loss: 32.94  loss_ce: 1.347  loss_mask: 0.2615  loss_dice: 1.496  loss_ce_0: 1.433  loss_mask_0: 0.3079  loss_dice_0: 1.814  loss_ce_1: 1.468  loss_mask_1: 0.2908  loss_dice_1: 1.682  loss_ce_2: 1.488  loss_mask_2: 0.2855  loss_dice_2: 1.626  loss_ce_3: 1.379  loss_mask_3: 0.2725  loss_dice_3: 1.547  loss_ce_4: 1.308  loss_mask_4: 0.2721  loss_dice_4: 1.561  loss_ce_5: 1.323  loss_mask_5: 0.2715  loss_dice_5: 1.538  loss_ce_6: 1.274  loss_mask_6: 0.2676  loss_dice_6: 1.544  loss_ce_7: 1.279  loss_mask_7: 0.2647  loss_dice_7: 1.501  loss_ce_8: 1.301  loss_mask_8: 0.2591  loss_dice_8: 1.487    time: 1.1176  last_time: 1.0816  data_time: 0.0956  last_data_time: 0.0499   lr: 0.0001  max_mem: 32587M
[09/09 20:07:52] d2.utils.events INFO:  eta: 0:17:30  iter: 39  total_loss: 24.84  loss_ce: 0.76  loss_mask: 0.2334  loss_dice: 1.404  loss_ce_0: 0.7268  loss_mask_0: 0.2637  loss_dice_0: 1.718  loss_ce_1: 0.9624  loss_mask_1: 0.2682  loss_dice_1: 1.563  loss_ce_2: 0.8643  loss_mask_2: 0.2439  loss_dice_2: 1.482  loss_ce_3: 0.7677  loss_mask_3: 0.2386  loss_dice_3: 1.454  loss_ce_4: 0.814  loss_mask_4: 0.2365  loss_dice_4: 1.425  loss_ce_5: 0.793  loss_mask_5: 0.2375  loss_dice_5: 1.43  loss_ce_6: 0.7747  loss_mask_6: 0.2331  loss_dice_6: 1.383  loss_ce_7: 0.7432  loss_mask_7: 0.2363  loss_dice_7: 1.442  loss_ce_8: 0.7575  loss_mask_8: 0.2375  loss_dice_8: 1.453    time: 1.0994  last_time: 1.0739  data_time: 0.0531  last_data_time: 0.0590   lr: 0.0001  max_mem: 32587M
[09/09 20:08:14] d2.utils.events INFO:  eta: 0:17:02  iter: 59  total_loss: 25.63  loss_ce: 0.7996  loss_mask: 0.2067  loss_dice: 1.374  loss_ce_0: 0.7879  loss_mask_0: 0.2456  loss_dice_0: 1.727  loss_ce_1: 0.9668  loss_mask_1: 0.218  loss_dice_1: 1.577  loss_ce_2: 0.9149  loss_mask_2: 0.2061  loss_dice_2: 1.516  loss_ce_3: 0.8506  loss_mask_3: 0.2067  loss_dice_3: 1.448  loss_ce_4: 0.8142  loss_mask_4: 0.2088  loss_dice_4: 1.452  loss_ce_5: 0.7825  loss_mask_5: 0.2121  loss_dice_5: 1.448  loss_ce_6: 0.8055  loss_mask_6: 0.208  loss_dice_6: 1.41  loss_ce_7: 0.7891  loss_mask_7: 0.2105  loss_dice_7: 1.405  loss_ce_8: 0.7903  loss_mask_8: 0.208  loss_dice_8: 1.39    time: 1.0975  last_time: 1.1045  data_time: 0.0553  last_data_time: 0.0462   lr: 0.0001  max_mem: 32587M
[09/09 20:08:36] d2.utils.events INFO:  eta: 0:16:40  iter: 79  total_loss: 23.72  loss_ce: 0.6612  loss_mask: 0.1916  loss_dice: 1.383  loss_ce_0: 0.768  loss_mask_0: 0.2206  loss_dice_0: 1.614  loss_ce_1: 0.8666  loss_mask_1: 0.2031  loss_dice_1: 1.526  loss_ce_2: 0.8034  loss_mask_2: 0.1951  loss_dice_2: 1.458  loss_ce_3: 0.7609  loss_mask_3: 0.1932  loss_dice_3: 1.416  loss_ce_4: 0.7155  loss_mask_4: 0.1909  loss_dice_4: 1.426  loss_ce_5: 0.7268  loss_mask_5: 0.1911  loss_dice_5: 1.389  loss_ce_6: 0.6691  loss_mask_6: 0.1932  loss_dice_6: 1.368  loss_ce_7: 0.6794  loss_mask_7: 0.1921  loss_dice_7: 1.352  loss_ce_8: 0.6941  loss_mask_8: 0.1911  loss_dice_8: 1.369    time: 1.0949  last_time: 1.0776  data_time: 0.0527  last_data_time: 0.0495   lr: 0.0001  max_mem: 32587M
[09/09 20:08:58] d2.utils.events INFO:  eta: 0:16:17  iter: 99  total_loss: 23.19  loss_ce: 0.61  loss_mask: 0.1991  loss_dice: 1.326  loss_ce_0: 0.6999  loss_mask_0: 0.2278  loss_dice_0: 1.59  loss_ce_1: 0.7932  loss_mask_1: 0.2158  loss_dice_1: 1.498  loss_ce_2: 0.7263  loss_mask_2: 0.1999  loss_dice_2: 1.387  loss_ce_3: 0.6498  loss_mask_3: 0.2008  loss_dice_3: 1.356  loss_ce_4: 0.6313  loss_mask_4: 0.2005  loss_dice_4: 1.354  loss_ce_5: 0.6411  loss_mask_5: 0.2015  loss_dice_5: 1.361  loss_ce_6: 0.6152  loss_mask_6: 0.2007  loss_dice_6: 1.325  loss_ce_7: 0.651  loss_mask_7: 0.2028  loss_dice_7: 1.339  loss_ce_8: 0.6213  loss_mask_8: 0.199  loss_dice_8: 1.353    time: 1.0929  last_time: 1.0717  data_time: 0.0522  last_data_time: 0.0514   lr: 0.0001  max_mem: 32587M
[09/09 20:09:20] d2.utils.events INFO:  eta: 0:15:58  iter: 119  total_loss: 22.97  loss_ce: 0.6314  loss_mask: 0.1945  loss_dice: 1.374  loss_ce_0: 0.6743  loss_mask_0: 0.2216  loss_dice_0: 1.637  loss_ce_1: 0.7824  loss_mask_1: 0.2083  loss_dice_1: 1.536  loss_ce_2: 0.736  loss_mask_2: 0.196  loss_dice_2: 1.449  loss_ce_3: 0.6535  loss_mask_3: 0.1982  loss_dice_3: 1.401  loss_ce_4: 0.628  loss_mask_4: 0.1972  loss_dice_4: 1.385  loss_ce_5: 0.6348  loss_mask_5: 0.1946  loss_dice_5: 1.38  loss_ce_6: 0.6292  loss_mask_6: 0.1955  loss_dice_6: 1.36  loss_ce_7: 0.6278  loss_mask_7: 0.1966  loss_dice_7: 1.349  loss_ce_8: 0.6161  loss_mask_8: 0.1966  loss_dice_8: 1.392    time: 1.0955  last_time: 1.1653  data_time: 0.0584  last_data_time: 0.0754   lr: 0.0001  max_mem: 32587M
[09/09 20:09:42] d2.utils.events INFO:  eta: 0:15:37  iter: 139  total_loss: 22.95  loss_ce: 0.6347  loss_mask: 0.2045  loss_dice: 1.36  loss_ce_0: 0.7024  loss_mask_0: 0.2235  loss_dice_0: 1.6  loss_ce_1: 0.7614  loss_mask_1: 0.2169  loss_dice_1: 1.534  loss_ce_2: 0.7366  loss_mask_2: 0.208  loss_dice_2: 1.473  loss_ce_3: 0.6814  loss_mask_3: 0.2049  loss_dice_3: 1.374  loss_ce_4: 0.6216  loss_mask_4: 0.2068  loss_dice_4: 1.404  loss_ce_5: 0.6381  loss_mask_5: 0.2044  loss_dice_5: 1.377  loss_ce_6: 0.6371  loss_mask_6: 0.2032  loss_dice_6: 1.345  loss_ce_7: 0.6268  loss_mask_7: 0.2007  loss_dice_7: 1.331  loss_ce_8: 0.6057  loss_mask_8: 0.2013  loss_dice_8: 1.364    time: 1.0957  last_time: 1.1145  data_time: 0.0574  last_data_time: 0.0587   lr: 0.0001  max_mem: 32587M
[09/09 20:10:04] d2.utils.events INFO:  eta: 0:15:17  iter: 159  total_loss: 22.73  loss_ce: 0.5653  loss_mask: 0.2045  loss_dice: 1.374  loss_ce_0: 0.6448  loss_mask_0: 0.2283  loss_dice_0: 1.64  loss_ce_1: 0.705  loss_mask_1: 0.2124  loss_dice_1: 1.511  loss_ce_2: 0.6797  loss_mask_2: 0.2024  loss_dice_2: 1.443  loss_ce_3: 0.5911  loss_mask_3: 0.2032  loss_dice_3: 1.401  loss_ce_4: 0.6073  loss_mask_4: 0.2092  loss_dice_4: 1.391  loss_ce_5: 0.5829  loss_mask_5: 0.2021  loss_dice_5: 1.384  loss_ce_6: 0.5682  loss_mask_6: 0.2021  loss_dice_6: 1.342  loss_ce_7: 0.5682  loss_mask_7: 0.2036  loss_dice_7: 1.343  loss_ce_8: 0.5584  loss_mask_8: 0.2036  loss_dice_8: 1.357    time: 1.0990  last_time: 1.0734  data_time: 0.0601  last_data_time: 0.0553   lr: 0.0001  max_mem: 32587M
[09/09 20:10:26] d2.utils.events INFO:  eta: 0:14:56  iter: 179  total_loss: 21.57  loss_ce: 0.5576  loss_mask: 0.2005  loss_dice: 1.299  loss_ce_0: 0.7043  loss_mask_0: 0.2267  loss_dice_0: 1.584  loss_ce_1: 0.7606  loss_mask_1: 0.2144  loss_dice_1: 1.499  loss_ce_2: 0.6965  loss_mask_2: 0.201  loss_dice_2: 1.399  loss_ce_3: 0.6406  loss_mask_3: 0.1969  loss_dice_3: 1.339  loss_ce_4: 0.5892  loss_mask_4: 0.1959  loss_dice_4: 1.358  loss_ce_5: 0.6016  loss_mask_5: 0.1986  loss_dice_5: 1.365  loss_ce_6: 0.6079  loss_mask_6: 0.204  loss_dice_6: 1.32  loss_ce_7: 0.5238  loss_mask_7: 0.2008  loss_dice_7: 1.321  loss_ce_8: 0.5783  loss_mask_8: 0.197  loss_dice_8: 1.317    time: 1.0988  last_time: 1.1204  data_time: 0.0552  last_data_time: 0.0524   lr: 0.0001  max_mem: 32587M
[09/09 20:10:48] d2.utils.events INFO:  eta: 0:14:34  iter: 199  total_loss: 22.15  loss_ce: 0.5714  loss_mask: 0.2178  loss_dice: 1.325  loss_ce_0: 0.6264  loss_mask_0: 0.2422  loss_dice_0: 1.584  loss_ce_1: 0.7318  loss_mask_1: 0.2236  loss_dice_1: 1.485  loss_ce_2: 0.6613  loss_mask_2: 0.2189  loss_dice_2: 1.39  loss_ce_3: 0.6233  loss_mask_3: 0.2179  loss_dice_3: 1.339  loss_ce_4: 0.5759  loss_mask_4: 0.2161  loss_dice_4: 1.322  loss_ce_5: 0.6171  loss_mask_5: 0.2146  loss_dice_5: 1.312  loss_ce_6: 0.61  loss_mask_6: 0.2178  loss_dice_6: 1.33  loss_ce_7: 0.619  loss_mask_7: 0.2176  loss_dice_7: 1.317  loss_ce_8: 0.5663  loss_mask_8: 0.2183  loss_dice_8: 1.323    time: 1.0983  last_time: 1.0618  data_time: 0.0540  last_data_time: 0.0437   lr: 0.0001  max_mem: 32587M
[09/09 20:11:10] d2.utils.events INFO:  eta: 0:14:13  iter: 219  total_loss: 21.87  loss_ce: 0.5576  loss_mask: 0.1929  loss_dice: 1.348  loss_ce_0: 0.6236  loss_mask_0: 0.2359  loss_dice_0: 1.615  loss_ce_1: 0.6933  loss_mask_1: 0.2123  loss_dice_1: 1.488  loss_ce_2: 0.6681  loss_mask_2: 0.2056  loss_dice_2: 1.458  loss_ce_3: 0.6117  loss_mask_3: 0.1963  loss_dice_3: 1.386  loss_ce_4: 0.6043  loss_mask_4: 0.1972  loss_dice_4: 1.411  loss_ce_5: 0.5996  loss_mask_5: 0.1897  loss_dice_5: 1.385  loss_ce_6: 0.5687  loss_mask_6: 0.1885  loss_dice_6: 1.316  loss_ce_7: 0.5576  loss_mask_7: 0.1878  loss_dice_7: 1.357  loss_ce_8: 0.5686  loss_mask_8: 0.1937  loss_dice_8: 1.359    time: 1.0986  last_time: 1.1018  data_time: 0.0564  last_data_time: 0.0500   lr: 0.0001  max_mem: 32587M
[09/09 20:11:33] d2.utils.events INFO:  eta: 0:13:52  iter: 239  total_loss: 21.9  loss_ce: 0.5978  loss_mask: 0.1841  loss_dice: 1.319  loss_ce_0: 0.6711  loss_mask_0: 0.1988  loss_dice_0: 1.623  loss_ce_1: 0.7527  loss_mask_1: 0.1986  loss_dice_1: 1.488  loss_ce_2: 0.6464  loss_mask_2: 0.1908  loss_dice_2: 1.45  loss_ce_3: 0.6383  loss_mask_3: 0.191  loss_dice_3: 1.38  loss_ce_4: 0.6134  loss_mask_4: 0.1896  loss_dice_4: 1.371  loss_ce_5: 0.6201  loss_mask_5: 0.1931  loss_dice_5: 1.4  loss_ce_6: 0.6105  loss_mask_6: 0.1893  loss_dice_6: 1.353  loss_ce_7: 0.5959  loss_mask_7: 0.1861  loss_dice_7: 1.311  loss_ce_8: 0.5873  loss_mask_8: 0.1836  loss_dice_8: 1.342    time: 1.0997  last_time: 1.1229  data_time: 0.0577  last_data_time: 0.0521   lr: 0.0001  max_mem: 32587M
[09/09 20:11:55] d2.utils.events INFO:  eta: 0:13:31  iter: 259  total_loss: 21.32  loss_ce: 0.5522  loss_mask: 0.1799  loss_dice: 1.256  loss_ce_0: 0.6301  loss_mask_0: 0.2108  loss_dice_0: 1.531  loss_ce_1: 0.6841  loss_mask_1: 0.1861  loss_dice_1: 1.439  loss_ce_2: 0.6503  loss_mask_2: 0.1821  loss_dice_2: 1.371  loss_ce_3: 0.5824  loss_mask_3: 0.1794  loss_dice_3: 1.327  loss_ce_4: 0.5735  loss_mask_4: 0.1782  loss_dice_4: 1.3  loss_ce_5: 0.5859  loss_mask_5: 0.1742  loss_dice_5: 1.314  loss_ce_6: 0.5537  loss_mask_6: 0.1763  loss_dice_6: 1.303  loss_ce_7: 0.5368  loss_mask_7: 0.1755  loss_dice_7: 1.273  loss_ce_8: 0.5547  loss_mask_8: 0.1761  loss_dice_8: 1.292    time: 1.1006  last_time: 1.0784  data_time: 0.0562  last_data_time: 0.0686   lr: 0.0001  max_mem: 32587M
[09/09 20:12:17] d2.utils.events INFO:  eta: 0:13:09  iter: 279  total_loss: 20.58  loss_ce: 0.5094  loss_mask: 0.193  loss_dice: 1.25  loss_ce_0: 0.6176  loss_mask_0: 0.2125  loss_dice_0: 1.471  loss_ce_1: 0.6803  loss_mask_1: 0.1954  loss_dice_1: 1.403  loss_ce_2: 0.6292  loss_mask_2: 0.1913  loss_dice_2: 1.292  loss_ce_3: 0.5379  loss_mask_3: 0.1957  loss_dice_3: 1.279  loss_ce_4: 0.5208  loss_mask_4: 0.194  loss_dice_4: 1.286  loss_ce_5: 0.5073  loss_mask_5: 0.1935  loss_dice_5: 1.259  loss_ce_6: 0.5453  loss_mask_6: 0.193  loss_dice_6: 1.273  loss_ce_7: 0.5044  loss_mask_7: 0.1903  loss_dice_7: 1.258  loss_ce_8: 0.5189  loss_mask_8: 0.1926  loss_dice_8: 1.258    time: 1.1009  last_time: 1.1182  data_time: 0.0568  last_data_time: 0.0579   lr: 0.0001  max_mem: 32587M
[09/09 20:12:40] d2.utils.events INFO:  eta: 0:12:48  iter: 299  total_loss: 21.84  loss_ce: 0.5721  loss_mask: 0.1838  loss_dice: 1.341  loss_ce_0: 0.6206  loss_mask_0: 0.2046  loss_dice_0: 1.572  loss_ce_1: 0.6878  loss_mask_1: 0.1925  loss_dice_1: 1.491  loss_ce_2: 0.6553  loss_mask_2: 0.1911  loss_dice_2: 1.394  loss_ce_3: 0.599  loss_mask_3: 0.1893  loss_dice_3: 1.378  loss_ce_4: 0.5951  loss_mask_4: 0.183  loss_dice_4: 1.389  loss_ce_5: 0.6005  loss_mask_5: 0.1836  loss_dice_5: 1.355  loss_ce_6: 0.5651  loss_mask_6: 0.1838  loss_dice_6: 1.365  loss_ce_7: 0.5572  loss_mask_7: 0.1844  loss_dice_7: 1.334  loss_ce_8: 0.5558  loss_mask_8: 0.1848  loss_dice_8: 1.377    time: 1.1028  last_time: 1.0839  data_time: 0.0608  last_data_time: 0.0582   lr: 0.0001  max_mem: 32587M
[09/09 20:13:02] d2.utils.events INFO:  eta: 0:12:26  iter: 319  total_loss: 20.28  loss_ce: 0.4944  loss_mask: 0.1782  loss_dice: 1.225  loss_ce_0: 0.6322  loss_mask_0: 0.2132  loss_dice_0: 1.489  loss_ce_1: 0.7271  loss_mask_1: 0.1928  loss_dice_1: 1.382  loss_ce_2: 0.6176  loss_mask_2: 0.1851  loss_dice_2: 1.32  loss_ce_3: 0.5705  loss_mask_3: 0.1854  loss_dice_3: 1.257  loss_ce_4: 0.5777  loss_mask_4: 0.1885  loss_dice_4: 1.274  loss_ce_5: 0.528  loss_mask_5: 0.1819  loss_dice_5: 1.221  loss_ce_6: 0.5454  loss_mask_6: 0.182  loss_dice_6: 1.253  loss_ce_7: 0.5134  loss_mask_7: 0.1819  loss_dice_7: 1.192  loss_ce_8: 0.5115  loss_mask_8: 0.1795  loss_dice_8: 1.239    time: 1.1026  last_time: 1.0842  data_time: 0.0525  last_data_time: 0.0545   lr: 0.0001  max_mem: 32587M
[09/09 20:13:24] d2.utils.events INFO:  eta: 0:12:05  iter: 339  total_loss: 21.01  loss_ce: 0.5488  loss_mask: 0.1748  loss_dice: 1.268  loss_ce_0: 0.6477  loss_mask_0: 0.2125  loss_dice_0: 1.513  loss_ce_1: 0.7338  loss_mask_1: 0.1869  loss_dice_1: 1.447  loss_ce_2: 0.6346  loss_mask_2: 0.1838  loss_dice_2: 1.342  loss_ce_3: 0.6071  loss_mask_3: 0.1778  loss_dice_3: 1.309  loss_ce_4: 0.5812  loss_mask_4: 0.1756  loss_dice_4: 1.307  loss_ce_5: 0.5572  loss_mask_5: 0.1744  loss_dice_5: 1.315  loss_ce_6: 0.5575  loss_mask_6: 0.1734  loss_dice_6: 1.284  loss_ce_7: 0.5184  loss_mask_7: 0.1739  loss_dice_7: 1.287  loss_ce_8: 0.5683  loss_mask_8: 0.1742  loss_dice_8: 1.3    time: 1.1033  last_time: 1.1073  data_time: 0.0563  last_data_time: 0.0433   lr: 0.0001  max_mem: 32587M
[09/09 20:13:46] d2.utils.events INFO:  eta: 0:11:43  iter: 359  total_loss: 20.57  loss_ce: 0.4908  loss_mask: 0.1812  loss_dice: 1.284  loss_ce_0: 0.6079  loss_mask_0: 0.2131  loss_dice_0: 1.5  loss_ce_1: 0.6538  loss_mask_1: 0.1975  loss_dice_1: 1.439  loss_ce_2: 0.5834  loss_mask_2: 0.1843  loss_dice_2: 1.33  loss_ce_3: 0.5117  loss_mask_3: 0.1839  loss_dice_3: 1.296  loss_ce_4: 0.5455  loss_mask_4: 0.1865  loss_dice_4: 1.297  loss_ce_5: 0.4939  loss_mask_5: 0.1849  loss_dice_5: 1.291  loss_ce_6: 0.4681  loss_mask_6: 0.1869  loss_dice_6: 1.277  loss_ce_7: 0.5016  loss_mask_7: 0.1849  loss_dice_7: 1.263  loss_ce_8: 0.5033  loss_mask_8: 0.1835  loss_dice_8: 1.267    time: 1.1036  last_time: 1.1093  data_time: 0.0543  last_data_time: 0.0582   lr: 0.0001  max_mem: 32587M
[09/09 20:14:09] d2.utils.events INFO:  eta: 0:11:21  iter: 379  total_loss: 20.83  loss_ce: 0.4891  loss_mask: 0.1753  loss_dice: 1.29  loss_ce_0: 0.5714  loss_mask_0: 0.2071  loss_dice_0: 1.516  loss_ce_1: 0.652  loss_mask_1: 0.1846  loss_dice_1: 1.417  loss_ce_2: 0.6275  loss_mask_2: 0.1832  loss_dice_2: 1.339  loss_ce_3: 0.5332  loss_mask_3: 0.1736  loss_dice_3: 1.295  loss_ce_4: 0.4978  loss_mask_4: 0.1764  loss_dice_4: 1.271  loss_ce_5: 0.5061  loss_mask_5: 0.1735  loss_dice_5: 1.29  loss_ce_6: 0.4849  loss_mask_6: 0.1743  loss_dice_6: 1.27  loss_ce_7: 0.5034  loss_mask_7: 0.1779  loss_dice_7: 1.285  loss_ce_8: 0.4846  loss_mask_8: 0.1763  loss_dice_8: 1.265    time: 1.1044  last_time: 1.0880  data_time: 0.0569  last_data_time: 0.0625   lr: 0.0001  max_mem: 32587M
[09/09 20:14:31] d2.utils.events INFO:  eta: 0:10:59  iter: 399  total_loss: 19.96  loss_ce: 0.4542  loss_mask: 0.1829  loss_dice: 1.214  loss_ce_0: 0.5873  loss_mask_0: 0.2166  loss_dice_0: 1.509  loss_ce_1: 0.6189  loss_mask_1: 0.1964  loss_dice_1: 1.417  loss_ce_2: 0.6025  loss_mask_2: 0.1901  loss_dice_2: 1.295  loss_ce_3: 0.5306  loss_mask_3: 0.1899  loss_dice_3: 1.303  loss_ce_4: 0.5159  loss_mask_4: 0.1875  loss_dice_4: 1.251  loss_ce_5: 0.5048  loss_mask_5: 0.1856  loss_dice_5: 1.269  loss_ce_6: 0.4816  loss_mask_6: 0.183  loss_dice_6: 1.231  loss_ce_7: 0.5019  loss_mask_7: 0.1853  loss_dice_7: 1.251  loss_ce_8: 0.4869  loss_mask_8: 0.183  loss_dice_8: 1.222    time: 1.1047  last_time: 1.1043  data_time: 0.0624  last_data_time: 0.0667   lr: 0.0001  max_mem: 32587M
[09/09 20:14:53] d2.utils.events INFO:  eta: 0:10:37  iter: 419  total_loss: 21.43  loss_ce: 0.5218  loss_mask: 0.1776  loss_dice: 1.323  loss_ce_0: 0.5961  loss_mask_0: 0.2122  loss_dice_0: 1.538  loss_ce_1: 0.6693  loss_mask_1: 0.1901  loss_dice_1: 1.453  loss_ce_2: 0.6305  loss_mask_2: 0.1813  loss_dice_2: 1.384  loss_ce_3: 0.59  loss_mask_3: 0.1819  loss_dice_3: 1.337  loss_ce_4: 0.5508  loss_mask_4: 0.182  loss_dice_4: 1.301  loss_ce_5: 0.5829  loss_mask_5: 0.178  loss_dice_5: 1.326  loss_ce_6: 0.5395  loss_mask_6: 0.1806  loss_dice_6: 1.315  loss_ce_7: 0.5472  loss_mask_7: 0.1794  loss_dice_7: 1.313  loss_ce_8: 0.5413  loss_mask_8: 0.1786  loss_dice_8: 1.324    time: 1.1049  last_time: 1.1128  data_time: 0.0587  last_data_time: 0.0565   lr: 0.0001  max_mem: 32587M
[09/09 20:15:16] d2.utils.events INFO:  eta: 0:10:16  iter: 439  total_loss: 21.67  loss_ce: 0.5659  loss_mask: 0.1772  loss_dice: 1.323  loss_ce_0: 0.6251  loss_mask_0: 0.1997  loss_dice_0: 1.561  loss_ce_1: 0.7569  loss_mask_1: 0.1832  loss_dice_1: 1.489  loss_ce_2: 0.6794  loss_mask_2: 0.1812  loss_dice_2: 1.398  loss_ce_3: 0.613  loss_mask_3: 0.182  loss_dice_3: 1.371  loss_ce_4: 0.575  loss_mask_4: 0.1807  loss_dice_4: 1.344  loss_ce_5: 0.5788  loss_mask_5: 0.1812  loss_dice_5: 1.316  loss_ce_6: 0.593  loss_mask_6: 0.1786  loss_dice_6: 1.335  loss_ce_7: 0.5609  loss_mask_7: 0.1791  loss_dice_7: 1.343  loss_ce_8: 0.5675  loss_mask_8: 0.1765  loss_dice_8: 1.334    time: 1.1058  last_time: 1.0882  data_time: 0.0635  last_data_time: 0.0536   lr: 0.0001  max_mem: 32587M
[09/09 20:15:38] d2.utils.events INFO:  eta: 0:09:54  iter: 459  total_loss: 20.69  loss_ce: 0.5049  loss_mask: 0.1806  loss_dice: 1.323  loss_ce_0: 0.5643  loss_mask_0: 0.2167  loss_dice_0: 1.516  loss_ce_1: 0.6416  loss_mask_1: 0.1999  loss_dice_1: 1.455  loss_ce_2: 0.5891  loss_mask_2: 0.1819  loss_dice_2: 1.367  loss_ce_3: 0.5797  loss_mask_3: 0.1837  loss_dice_3: 1.342  loss_ce_4: 0.525  loss_mask_4: 0.1842  loss_dice_4: 1.368  loss_ce_5: 0.5332  loss_mask_5: 0.1835  loss_dice_5: 1.315  loss_ce_6: 0.5374  loss_mask_6: 0.1845  loss_dice_6: 1.284  loss_ce_7: 0.5181  loss_mask_7: 0.1825  loss_dice_7: 1.311  loss_ce_8: 0.5113  loss_mask_8: 0.1828  loss_dice_8: 1.316    time: 1.1062  last_time: 1.0989  data_time: 0.0592  last_data_time: 0.0526   lr: 0.0001  max_mem: 32587M
[09/09 20:16:01] d2.utils.events INFO:  eta: 0:09:32  iter: 479  total_loss: 20.63  loss_ce: 0.4753  loss_mask: 0.1833  loss_dice: 1.254  loss_ce_0: 0.5969  loss_mask_0: 0.2163  loss_dice_0: 1.485  loss_ce_1: 0.6482  loss_mask_1: 0.1965  loss_dice_1: 1.375  loss_ce_2: 0.6075  loss_mask_2: 0.1839  loss_dice_2: 1.315  loss_ce_3: 0.5605  loss_mask_3: 0.1862  loss_dice_3: 1.275  loss_ce_4: 0.4998  loss_mask_4: 0.1859  loss_dice_4: 1.269  loss_ce_5: 0.5127  loss_mask_5: 0.1807  loss_dice_5: 1.248  loss_ce_6: 0.5062  loss_mask_6: 0.1806  loss_dice_6: 1.251  loss_ce_7: 0.492  loss_mask_7: 0.1834  loss_dice_7: 1.259  loss_ce_8: 0.5042  loss_mask_8: 0.1819  loss_dice_8: 1.245    time: 1.1063  last_time: 1.1274  data_time: 0.0576  last_data_time: 0.0540   lr: 0.0001  max_mem: 32587M
[09/09 20:16:23] d2.utils.events INFO:  eta: 0:09:10  iter: 499  total_loss: 20.39  loss_ce: 0.4953  loss_mask: 0.1942  loss_dice: 1.2  loss_ce_0: 0.534  loss_mask_0: 0.2162  loss_dice_0: 1.479  loss_ce_1: 0.6362  loss_mask_1: 0.2088  loss_dice_1: 1.372  loss_ce_2: 0.5857  loss_mask_2: 0.1932  loss_dice_2: 1.308  loss_ce_3: 0.5419  loss_mask_3: 0.1934  loss_dice_3: 1.248  loss_ce_4: 0.5334  loss_mask_4: 0.1905  loss_dice_4: 1.249  loss_ce_5: 0.507  loss_mask_5: 0.1943  loss_dice_5: 1.234  loss_ce_6: 0.4849  loss_mask_6: 0.1943  loss_dice_6: 1.211  loss_ce_7: 0.4989  loss_mask_7: 0.1921  loss_dice_7: 1.217  loss_ce_8: 0.4961  loss_mask_8: 0.1924  loss_dice_8: 1.218    time: 1.1061  last_time: 1.1295  data_time: 0.0626  last_data_time: 0.0544   lr: 0.0001  max_mem: 32587M
[09/09 20:16:45] d2.utils.events INFO:  eta: 0:08:49  iter: 519  total_loss: 20.25  loss_ce: 0.4828  loss_mask: 0.1775  loss_dice: 1.24  loss_ce_0: 0.5443  loss_mask_0: 0.2165  loss_dice_0: 1.561  loss_ce_1: 0.6344  loss_mask_1: 0.1954  loss_dice_1: 1.392  loss_ce_2: 0.5534  loss_mask_2: 0.1846  loss_dice_2: 1.323  loss_ce_3: 0.5584  loss_mask_3: 0.183  loss_dice_3: 1.268  loss_ce_4: 0.5061  loss_mask_4: 0.179  loss_dice_4: 1.235  loss_ce_5: 0.5  loss_mask_5: 0.1804  loss_dice_5: 1.28  loss_ce_6: 0.4896  loss_mask_6: 0.1777  loss_dice_6: 1.269  loss_ce_7: 0.5011  loss_mask_7: 0.1778  loss_dice_7: 1.26  loss_ce_8: 0.4836  loss_mask_8: 0.1736  loss_dice_8: 1.26    time: 1.1065  last_time: 1.1365  data_time: 0.0599  last_data_time: 0.0539   lr: 0.0001  max_mem: 32587M
[09/09 20:17:08] d2.utils.events INFO:  eta: 0:08:27  iter: 539  total_loss: 21.18  loss_ce: 0.5331  loss_mask: 0.1733  loss_dice: 1.303  loss_ce_0: 0.5885  loss_mask_0: 0.2074  loss_dice_0: 1.529  loss_ce_1: 0.6738  loss_mask_1: 0.1865  loss_dice_1: 1.443  loss_ce_2: 0.6393  loss_mask_2: 0.1833  loss_dice_2: 1.375  loss_ce_3: 0.5851  loss_mask_3: 0.1769  loss_dice_3: 1.313  loss_ce_4: 0.5658  loss_mask_4: 0.1764  loss_dice_4: 1.308  loss_ce_5: 0.5837  loss_mask_5: 0.1769  loss_dice_5: 1.324  loss_ce_6: 0.5662  loss_mask_6: 0.1757  loss_dice_6: 1.298  loss_ce_7: 0.529  loss_mask_7: 0.1743  loss_dice_7: 1.27  loss_ce_8: 0.5451  loss_mask_8: 0.173  loss_dice_8: 1.288    time: 1.1072  last_time: 1.1061  data_time: 0.0612  last_data_time: 0.0615   lr: 0.0001  max_mem: 32587M
[09/09 20:17:30] d2.utils.events INFO:  eta: 0:08:05  iter: 559  total_loss: 20.67  loss_ce: 0.5003  loss_mask: 0.1736  loss_dice: 1.277  loss_ce_0: 0.6023  loss_mask_0: 0.2019  loss_dice_0: 1.527  loss_ce_1: 0.6391  loss_mask_1: 0.1865  loss_dice_1: 1.43  loss_ce_2: 0.6149  loss_mask_2: 0.1788  loss_dice_2: 1.357  loss_ce_3: 0.563  loss_mask_3: 0.178  loss_dice_3: 1.311  loss_ce_4: 0.5185  loss_mask_4: 0.1796  loss_dice_4: 1.286  loss_ce_5: 0.5163  loss_mask_5: 0.1778  loss_dice_5: 1.295  loss_ce_6: 0.5042  loss_mask_6: 0.1757  loss_dice_6: 1.277  loss_ce_7: 0.4896  loss_mask_7: 0.1735  loss_dice_7: 1.267  loss_ce_8: 0.4936  loss_mask_8: 0.1724  loss_dice_8: 1.255    time: 1.1073  last_time: 1.1036  data_time: 0.0599  last_data_time: 0.0519   lr: 0.0001  max_mem: 32587M
[09/09 20:17:52] d2.utils.events INFO:  eta: 0:07:42  iter: 579  total_loss: 21.36  loss_ce: 0.5458  loss_mask: 0.1738  loss_dice: 1.262  loss_ce_0: 0.659  loss_mask_0: 0.2227  loss_dice_0: 1.49  loss_ce_1: 0.7588  loss_mask_1: 0.2065  loss_dice_1: 1.405  loss_ce_2: 0.678  loss_mask_2: 0.1885  loss_dice_2: 1.336  loss_ce_3: 0.6133  loss_mask_3: 0.1851  loss_dice_3: 1.267  loss_ce_4: 0.6218  loss_mask_4: 0.1866  loss_dice_4: 1.229  loss_ce_5: 0.5777  loss_mask_5: 0.1781  loss_dice_5: 1.258  loss_ce_6: 0.5919  loss_mask_6: 0.179  loss_dice_6: 1.236  loss_ce_7: 0.6065  loss_mask_7: 0.1766  loss_dice_7: 1.27  loss_ce_8: 0.5776  loss_mask_8: 0.1753  loss_dice_8: 1.216    time: 1.1070  last_time: 1.1314  data_time: 0.0578  last_data_time: 0.0684   lr: 0.0001  max_mem: 32587M
[09/09 20:18:14] d2.utils.events INFO:  eta: 0:07:20  iter: 599  total_loss: 20.77  loss_ce: 0.5411  loss_mask: 0.1827  loss_dice: 1.262  loss_ce_0: 0.6089  loss_mask_0: 0.2091  loss_dice_0: 1.463  loss_ce_1: 0.6598  loss_mask_1: 0.2001  loss_dice_1: 1.395  loss_ce_2: 0.623  loss_mask_2: 0.1914  loss_dice_2: 1.359  loss_ce_3: 0.5507  loss_mask_3: 0.1872  loss_dice_3: 1.302  loss_ce_4: 0.542  loss_mask_4: 0.1893  loss_dice_4: 1.274  loss_ce_5: 0.5495  loss_mask_5: 0.1864  loss_dice_5: 1.289  loss_ce_6: 0.5504  loss_mask_6: 0.1857  loss_dice_6: 1.267  loss_ce_7: 0.5159  loss_mask_7: 0.1836  loss_dice_7: 1.246  loss_ce_8: 0.5357  loss_mask_8: 0.1836  loss_dice_8: 1.262    time: 1.1068  last_time: 1.0851  data_time: 0.0597  last_data_time: 0.0513   lr: 0.0001  max_mem: 32587M
[09/09 20:18:36] d2.utils.events INFO:  eta: 0:06:58  iter: 619  total_loss: 20.61  loss_ce: 0.4864  loss_mask: 0.177  loss_dice: 1.292  loss_ce_0: 0.577  loss_mask_0: 0.2094  loss_dice_0: 1.52  loss_ce_1: 0.6611  loss_mask_1: 0.19  loss_dice_1: 1.418  loss_ce_2: 0.6126  loss_mask_2: 0.1862  loss_dice_2: 1.376  loss_ce_3: 0.5524  loss_mask_3: 0.1838  loss_dice_3: 1.328  loss_ce_4: 0.5284  loss_mask_4: 0.1868  loss_dice_4: 1.334  loss_ce_5: 0.5263  loss_mask_5: 0.1833  loss_dice_5: 1.316  loss_ce_6: 0.5099  loss_mask_6: 0.1805  loss_dice_6: 1.305  loss_ce_7: 0.5166  loss_mask_7: 0.1779  loss_dice_7: 1.284  loss_ce_8: 0.5081  loss_mask_8: 0.1779  loss_dice_8: 1.279    time: 1.1066  last_time: 1.1404  data_time: 0.0588  last_data_time: 0.0579   lr: 0.0001  max_mem: 32587M
[09/09 20:18:58] d2.utils.events INFO:  eta: 0:06:36  iter: 639  total_loss: 21.32  loss_ce: 0.5491  loss_mask: 0.1657  loss_dice: 1.309  loss_ce_0: 0.6437  loss_mask_0: 0.1991  loss_dice_0: 1.512  loss_ce_1: 0.6798  loss_mask_1: 0.1832  loss_dice_1: 1.417  loss_ce_2: 0.6286  loss_mask_2: 0.1729  loss_dice_2: 1.386  loss_ce_3: 0.5909  loss_mask_3: 0.1757  loss_dice_3: 1.302  loss_ce_4: 0.5965  loss_mask_4: 0.1704  loss_dice_4: 1.337  loss_ce_5: 0.5643  loss_mask_5: 0.1787  loss_dice_5: 1.345  loss_ce_6: 0.5632  loss_mask_6: 0.1723  loss_dice_6: 1.309  loss_ce_7: 0.5189  loss_mask_7: 0.1691  loss_dice_7: 1.292  loss_ce_8: 0.5421  loss_mask_8: 0.1633  loss_dice_8: 1.28    time: 1.1068  last_time: 1.0654  data_time: 0.0612  last_data_time: 0.0576   lr: 0.0001  max_mem: 32587M
[09/09 20:19:21] d2.utils.events INFO:  eta: 0:06:14  iter: 659  total_loss: 21.44  loss_ce: 0.5757  loss_mask: 0.1634  loss_dice: 1.326  loss_ce_0: 0.6348  loss_mask_0: 0.2008  loss_dice_0: 1.507  loss_ce_1: 0.7228  loss_mask_1: 0.1756  loss_dice_1: 1.418  loss_ce_2: 0.655  loss_mask_2: 0.1641  loss_dice_2: 1.386  loss_ce_3: 0.6393  loss_mask_3: 0.1633  loss_dice_3: 1.321  loss_ce_4: 0.6152  loss_mask_4: 0.1648  loss_dice_4: 1.351  loss_ce_5: 0.5962  loss_mask_5: 0.1614  loss_dice_5: 1.302  loss_ce_6: 0.5668  loss_mask_6: 0.1642  loss_dice_6: 1.293  loss_ce_7: 0.5687  loss_mask_7: 0.1636  loss_dice_7: 1.279  loss_ce_8: 0.5776  loss_mask_8: 0.163  loss_dice_8: 1.3    time: 1.1068  last_time: 1.1074  data_time: 0.0586  last_data_time: 0.0502   lr: 0.0001  max_mem: 32587M
[09/09 20:19:43] d2.utils.events INFO:  eta: 0:05:52  iter: 679  total_loss: 20.78  loss_ce: 0.5158  loss_mask: 0.1844  loss_dice: 1.231  loss_ce_0: 0.6208  loss_mask_0: 0.2128  loss_dice_0: 1.477  loss_ce_1: 0.703  loss_mask_1: 0.1977  loss_dice_1: 1.378  loss_ce_2: 0.6178  loss_mask_2: 0.192  loss_dice_2: 1.332  loss_ce_3: 0.5756  loss_mask_3: 0.1891  loss_dice_3: 1.256  loss_ce_4: 0.5511  loss_mask_4: 0.1896  loss_dice_4: 1.248  loss_ce_5: 0.5574  loss_mask_5: 0.1876  loss_dice_5: 1.25  loss_ce_6: 0.5605  loss_mask_6: 0.1855  loss_dice_6: 1.239  loss_ce_7: 0.5585  loss_mask_7: 0.1864  loss_dice_7: 1.259  loss_ce_8: 0.5572  loss_mask_8: 0.1842  loss_dice_8: 1.238    time: 1.1064  last_time: 1.1276  data_time: 0.0573  last_data_time: 0.0506   lr: 0.0001  max_mem: 32587M
[09/09 20:20:05] d2.utils.events INFO:  eta: 0:05:30  iter: 699  total_loss: 21.05  loss_ce: 0.5189  loss_mask: 0.1834  loss_dice: 1.318  loss_ce_0: 0.6124  loss_mask_0: 0.2069  loss_dice_0: 1.581  loss_ce_1: 0.6888  loss_mask_1: 0.1994  loss_dice_1: 1.45  loss_ce_2: 0.6034  loss_mask_2: 0.1866  loss_dice_2: 1.4  loss_ce_3: 0.5701  loss_mask_3: 0.1863  loss_dice_3: 1.355  loss_ce_4: 0.5276  loss_mask_4: 0.1871  loss_dice_4: 1.328  loss_ce_5: 0.5272  loss_mask_5: 0.1806  loss_dice_5: 1.349  loss_ce_6: 0.5456  loss_mask_6: 0.1821  loss_dice_6: 1.313  loss_ce_7: 0.528  loss_mask_7: 0.1836  loss_dice_7: 1.339  loss_ce_8: 0.531  loss_mask_8: 0.1831  loss_dice_8: 1.294    time: 1.1066  last_time: 1.0931  data_time: 0.0607  last_data_time: 0.0605   lr: 0.0001  max_mem: 32587M
[09/09 20:20:28] d2.utils.events INFO:  eta: 0:05:08  iter: 719  total_loss: 21.96  loss_ce: 0.5479  loss_mask: 0.1742  loss_dice: 1.362  loss_ce_0: 0.616  loss_mask_0: 0.1982  loss_dice_0: 1.55  loss_ce_1: 0.7354  loss_mask_1: 0.1933  loss_dice_1: 1.473  loss_ce_2: 0.661  loss_mask_2: 0.1811  loss_dice_2: 1.403  loss_ce_3: 0.5916  loss_mask_3: 0.176  loss_dice_3: 1.362  loss_ce_4: 0.5817  loss_mask_4: 0.1774  loss_dice_4: 1.34  loss_ce_5: 0.5792  loss_mask_5: 0.1741  loss_dice_5: 1.37  loss_ce_6: 0.5437  loss_mask_6: 0.1747  loss_dice_6: 1.318  loss_ce_7: 0.5762  loss_mask_7: 0.1727  loss_dice_7: 1.361  loss_ce_8: 0.5325  loss_mask_8: 0.1741  loss_dice_8: 1.324    time: 1.1072  last_time: 1.0597  data_time: 0.0673  last_data_time: 0.0472   lr: 0.0001  max_mem: 32587M
[09/09 20:20:49] d2.utils.events INFO:  eta: 0:04:46  iter: 739  total_loss: 20.2  loss_ce: 0.4751  loss_mask: 0.1771  loss_dice: 1.182  loss_ce_0: 0.585  loss_mask_0: 0.194  loss_dice_0: 1.394  loss_ce_1: 0.6642  loss_mask_1: 0.1951  loss_dice_1: 1.335  loss_ce_2: 0.586  loss_mask_2: 0.1883  loss_dice_2: 1.291  loss_ce_3: 0.5271  loss_mask_3: 0.1778  loss_dice_3: 1.272  loss_ce_4: 0.4991  loss_mask_4: 0.1766  loss_dice_4: 1.241  loss_ce_5: 0.503  loss_mask_5: 0.1752  loss_dice_5: 1.255  loss_ce_6: 0.4839  loss_mask_6: 0.178  loss_dice_6: 1.214  loss_ce_7: 0.5087  loss_mask_7: 0.1782  loss_dice_7: 1.205  loss_ce_8: 0.4772  loss_mask_8: 0.1786  loss_dice_8: 1.226    time: 1.1067  last_time: 1.0501  data_time: 0.0555  last_data_time: 0.0603   lr: 0.0001  max_mem: 32587M
[09/09 20:21:12] d2.utils.events INFO:  eta: 0:04:24  iter: 759  total_loss: 20.82  loss_ce: 0.501  loss_mask: 0.1727  loss_dice: 1.289  loss_ce_0: 0.6268  loss_mask_0: 0.199  loss_dice_0: 1.505  loss_ce_1: 0.6739  loss_mask_1: 0.1831  loss_dice_1: 1.443  loss_ce_2: 0.6104  loss_mask_2: 0.1745  loss_dice_2: 1.343  loss_ce_3: 0.6218  loss_mask_3: 0.1687  loss_dice_3: 1.31  loss_ce_4: 0.5382  loss_mask_4: 0.1741  loss_dice_4: 1.308  loss_ce_5: 0.5561  loss_mask_5: 0.1726  loss_dice_5: 1.296  loss_ce_6: 0.5567  loss_mask_6: 0.1736  loss_dice_6: 1.26  loss_ce_7: 0.5358  loss_mask_7: 0.174  loss_dice_7: 1.265  loss_ce_8: 0.5405  loss_mask_8: 0.1727  loss_dice_8: 1.281    time: 1.1067  last_time: 1.1027  data_time: 0.0621  last_data_time: 0.0606   lr: 0.0001  max_mem: 32587M
[09/09 20:21:34] d2.utils.events INFO:  eta: 0:04:02  iter: 779  total_loss: 20.3  loss_ce: 0.5099  loss_mask: 0.1831  loss_dice: 1.235  loss_ce_0: 0.5847  loss_mask_0: 0.2162  loss_dice_0: 1.438  loss_ce_1: 0.6659  loss_mask_1: 0.1994  loss_dice_1: 1.359  loss_ce_2: 0.5964  loss_mask_2: 0.1846  loss_dice_2: 1.309  loss_ce_3: 0.5421  loss_mask_3: 0.1852  loss_dice_3: 1.257  loss_ce_4: 0.5286  loss_mask_4: 0.1845  loss_dice_4: 1.246  loss_ce_5: 0.5184  loss_mask_5: 0.1821  loss_dice_5: 1.258  loss_ce_6: 0.5032  loss_mask_6: 0.1822  loss_dice_6: 1.204  loss_ce_7: 0.5125  loss_mask_7: 0.1808  loss_dice_7: 1.234  loss_ce_8: 0.5164  loss_mask_8: 0.1808  loss_dice_8: 1.221    time: 1.1064  last_time: 1.1012  data_time: 0.0622  last_data_time: 0.0673   lr: 0.0001  max_mem: 32587M
[09/09 20:21:56] d2.utils.events INFO:  eta: 0:03:40  iter: 799  total_loss: 20.59  loss_ce: 0.4995  loss_mask: 0.1839  loss_dice: 1.237  loss_ce_0: 0.5674  loss_mask_0: 0.2121  loss_dice_0: 1.507  loss_ce_1: 0.6552  loss_mask_1: 0.198  loss_dice_1: 1.415  loss_ce_2: 0.5788  loss_mask_2: 0.1891  loss_dice_2: 1.318  loss_ce_3: 0.5255  loss_mask_3: 0.1825  loss_dice_3: 1.301  loss_ce_4: 0.4872  loss_mask_4: 0.1869  loss_dice_4: 1.303  loss_ce_5: 0.5121  loss_mask_5: 0.1865  loss_dice_5: 1.297  loss_ce_6: 0.5077  loss_mask_6: 0.1874  loss_dice_6: 1.281  loss_ce_7: 0.549  loss_mask_7: 0.1861  loss_dice_7: 1.263  loss_ce_8: 0.5404  loss_mask_8: 0.185  loss_dice_8: 1.227    time: 1.1065  last_time: 1.1480  data_time: 0.0619  last_data_time: 0.0567   lr: 0.0001  max_mem: 32587M
[09/09 20:22:18] d2.utils.events INFO:  eta: 0:03:18  iter: 819  total_loss: 20.96  loss_ce: 0.5254  loss_mask: 0.1506  loss_dice: 1.336  loss_ce_0: 0.6081  loss_mask_0: 0.1769  loss_dice_0: 1.557  loss_ce_1: 0.6668  loss_mask_1: 0.1585  loss_dice_1: 1.471  loss_ce_2: 0.624  loss_mask_2: 0.1545  loss_dice_2: 1.397  loss_ce_3: 0.5716  loss_mask_3: 0.1554  loss_dice_3: 1.399  loss_ce_4: 0.512  loss_mask_4: 0.1557  loss_dice_4: 1.395  loss_ce_5: 0.5247  loss_mask_5: 0.1505  loss_dice_5: 1.353  loss_ce_6: 0.5112  loss_mask_6: 0.1504  loss_dice_6: 1.357  loss_ce_7: 0.5213  loss_mask_7: 0.1489  loss_dice_7: 1.333  loss_ce_8: 0.5145  loss_mask_8: 0.1511  loss_dice_8: 1.312    time: 1.1070  last_time: 1.2010  data_time: 0.0671  last_data_time: 0.0499   lr: 0.0001  max_mem: 32630M
[09/09 20:22:41] d2.utils.events INFO:  eta: 0:02:56  iter: 839  total_loss: 20.72  loss_ce: 0.5  loss_mask: 0.1619  loss_dice: 1.188  loss_ce_0: 0.647  loss_mask_0: 0.1835  loss_dice_0: 1.47  loss_ce_1: 0.6847  loss_mask_1: 0.1718  loss_dice_1: 1.428  loss_ce_2: 0.6659  loss_mask_2: 0.1636  loss_dice_2: 1.31  loss_ce_3: 0.5505  loss_mask_3: 0.164  loss_dice_3: 1.297  loss_ce_4: 0.5226  loss_mask_4: 0.1662  loss_dice_4: 1.302  loss_ce_5: 0.5229  loss_mask_5: 0.1652  loss_dice_5: 1.251  loss_ce_6: 0.5361  loss_mask_6: 0.1623  loss_dice_6: 1.212  loss_ce_7: 0.5404  loss_mask_7: 0.1616  loss_dice_7: 1.226  loss_ce_8: 0.5216  loss_mask_8: 0.1621  loss_dice_8: 1.21    time: 1.1070  last_time: 1.1080  data_time: 0.0630  last_data_time: 0.0482   lr: 0.0001  max_mem: 32630M
[09/09 20:23:03] d2.utils.events INFO:  eta: 0:02:34  iter: 859  total_loss: 20.51  loss_ce: 0.4909  loss_mask: 0.1717  loss_dice: 1.232  loss_ce_0: 0.5912  loss_mask_0: 0.1984  loss_dice_0: 1.465  loss_ce_1: 0.6651  loss_mask_1: 0.1765  loss_dice_1: 1.375  loss_ce_2: 0.628  loss_mask_2: 0.1795  loss_dice_2: 1.326  loss_ce_3: 0.5342  loss_mask_3: 0.1754  loss_dice_3: 1.253  loss_ce_4: 0.5344  loss_mask_4: 0.1791  loss_dice_4: 1.268  loss_ce_5: 0.5298  loss_mask_5: 0.1733  loss_dice_5: 1.286  loss_ce_6: 0.5086  loss_mask_6: 0.1752  loss_dice_6: 1.251  loss_ce_7: 0.5023  loss_mask_7: 0.1726  loss_dice_7: 1.245  loss_ce_8: 0.4911  loss_mask_8: 0.1705  loss_dice_8: 1.235    time: 1.1068  last_time: 1.1041  data_time: 0.0599  last_data_time: 0.0606   lr: 0.0001  max_mem: 32630M
[09/09 20:23:25] d2.utils.events INFO:  eta: 0:02:12  iter: 879  total_loss: 19.96  loss_ce: 0.4769  loss_mask: 0.1842  loss_dice: 1.183  loss_ce_0: 0.6071  loss_mask_0: 0.2139  loss_dice_0: 1.382  loss_ce_1: 0.6743  loss_mask_1: 0.2001  loss_dice_1: 1.331  loss_ce_2: 0.6028  loss_mask_2: 0.1897  loss_dice_2: 1.27  loss_ce_3: 0.5561  loss_mask_3: 0.1846  loss_dice_3: 1.205  loss_ce_4: 0.5247  loss_mask_4: 0.186  loss_dice_4: 1.211  loss_ce_5: 0.4972  loss_mask_5: 0.1829  loss_dice_5: 1.234  loss_ce_6: 0.4923  loss_mask_6: 0.1842  loss_dice_6: 1.171  loss_ce_7: 0.4768  loss_mask_7: 0.1846  loss_dice_7: 1.194  loss_ce_8: 0.4807  loss_mask_8: 0.1851  loss_dice_8: 1.175    time: 1.1067  last_time: 1.0906  data_time: 0.0624  last_data_time: 0.0746   lr: 0.0001  max_mem: 32630M
[09/09 20:23:47] d2.utils.events INFO:  eta: 0:01:50  iter: 899  total_loss: 19.8  loss_ce: 0.4944  loss_mask: 0.1729  loss_dice: 1.218  loss_ce_0: 0.6135  loss_mask_0: 0.2006  loss_dice_0: 1.456  loss_ce_1: 0.6782  loss_mask_1: 0.182  loss_dice_1: 1.36  loss_ce_2: 0.6257  loss_mask_2: 0.1788  loss_dice_2: 1.289  loss_ce_3: 0.5599  loss_mask_3: 0.1775  loss_dice_3: 1.267  loss_ce_4: 0.551  loss_mask_4: 0.1785  loss_dice_4: 1.244  loss_ce_5: 0.5073  loss_mask_5: 0.1766  loss_dice_5: 1.247  loss_ce_6: 0.5027  loss_mask_6: 0.1753  loss_dice_6: 1.244  loss_ce_7: 0.5001  loss_mask_7: 0.1737  loss_dice_7: 1.238  loss_ce_8: 0.5051  loss_mask_8: 0.1745  loss_dice_8: 1.206    time: 1.1064  last_time: 1.1219  data_time: 0.0603  last_data_time: 0.0534   lr: 0.0001  max_mem: 32630M
[09/09 20:24:09] d2.utils.events INFO:  eta: 0:01:28  iter: 919  total_loss: 20.22  loss_ce: 0.5056  loss_mask: 0.1881  loss_dice: 1.23  loss_ce_0: 0.6061  loss_mask_0: 0.2166  loss_dice_0: 1.442  loss_ce_1: 0.6597  loss_mask_1: 0.1978  loss_dice_1: 1.34  loss_ce_2: 0.6124  loss_mask_2: 0.1926  loss_dice_2: 1.323  loss_ce_3: 0.5944  loss_mask_3: 0.1918  loss_dice_3: 1.249  loss_ce_4: 0.5444  loss_mask_4: 0.1885  loss_dice_4: 1.254  loss_ce_5: 0.5439  loss_mask_5: 0.1898  loss_dice_5: 1.286  loss_ce_6: 0.5305  loss_mask_6: 0.1882  loss_dice_6: 1.23  loss_ce_7: 0.5258  loss_mask_7: 0.1899  loss_dice_7: 1.238  loss_ce_8: 0.4932  loss_mask_8: 0.1864  loss_dice_8: 1.234    time: 1.1062  last_time: 1.0872  data_time: 0.0601  last_data_time: 0.0619   lr: 0.0001  max_mem: 32630M
[09/09 20:24:31] d2.utils.events INFO:  eta: 0:01:06  iter: 939  total_loss: 19.4  loss_ce: 0.5014  loss_mask: 0.1744  loss_dice: 1.184  loss_ce_0: 0.5583  loss_mask_0: 0.2045  loss_dice_0: 1.371  loss_ce_1: 0.6229  loss_mask_1: 0.1855  loss_dice_1: 1.306  loss_ce_2: 0.5772  loss_mask_2: 0.1801  loss_dice_2: 1.254  loss_ce_3: 0.5232  loss_mask_3: 0.1771  loss_dice_3: 1.191  loss_ce_4: 0.5068  loss_mask_4: 0.1779  loss_dice_4: 1.179  loss_ce_5: 0.5192  loss_mask_5: 0.1768  loss_dice_5: 1.187  loss_ce_6: 0.5172  loss_mask_6: 0.1763  loss_dice_6: 1.221  loss_ce_7: 0.4705  loss_mask_7: 0.1747  loss_dice_7: 1.175  loss_ce_8: 0.5274  loss_mask_8: 0.1735  loss_dice_8: 1.169    time: 1.1061  last_time: 1.1231  data_time: 0.0556  last_data_time: 0.0591   lr: 0.0001  max_mem: 32630M
[09/09 20:24:53] d2.utils.events INFO:  eta: 0:00:44  iter: 959  total_loss: 19.24  loss_ce: 0.4575  loss_mask: 0.1553  loss_dice: 1.166  loss_ce_0: 0.5693  loss_mask_0: 0.1927  loss_dice_0: 1.388  loss_ce_1: 0.6645  loss_mask_1: 0.1659  loss_dice_1: 1.293  loss_ce_2: 0.5882  loss_mask_2: 0.1586  loss_dice_2: 1.236  loss_ce_3: 0.5363  loss_mask_3: 0.158  loss_dice_3: 1.235  loss_ce_4: 0.4761  loss_mask_4: 0.1589  loss_dice_4: 1.222  loss_ce_5: 0.4906  loss_mask_5: 0.1535  loss_dice_5: 1.195  loss_ce_6: 0.4662  loss_mask_6: 0.1546  loss_dice_6: 1.226  loss_ce_7: 0.4708  loss_mask_7: 0.154  loss_dice_7: 1.17  loss_ce_8: 0.4672  loss_mask_8: 0.1554  loss_dice_8: 1.177    time: 1.1060  last_time: 1.0919  data_time: 0.0569  last_data_time: 0.0556   lr: 0.0001  max_mem: 32630M
[09/09 20:25:15] d2.utils.events INFO:  eta: 0:00:22  iter: 979  total_loss: 20.37  loss_ce: 0.4881  loss_mask: 0.1646  loss_dice: 1.242  loss_ce_0: 0.5553  loss_mask_0: 0.1872  loss_dice_0: 1.436  loss_ce_1: 0.6517  loss_mask_1: 0.1849  loss_dice_1: 1.389  loss_ce_2: 0.5879  loss_mask_2: 0.1715  loss_dice_2: 1.329  loss_ce_3: 0.543  loss_mask_3: 0.1714  loss_dice_3: 1.294  loss_ce_4: 0.4823  loss_mask_4: 0.1711  loss_dice_4: 1.273  loss_ce_5: 0.5325  loss_mask_5: 0.1684  loss_dice_5: 1.267  loss_ce_6: 0.4859  loss_mask_6: 0.1663  loss_dice_6: 1.217  loss_ce_7: 0.4859  loss_mask_7: 0.1681  loss_dice_7: 1.223  loss_ce_8: 0.4652  loss_mask_8: 0.1667  loss_dice_8: 1.229    time: 1.1060  last_time: 1.1171  data_time: 0.0598  last_data_time: 0.0727   lr: 0.0001  max_mem: 32630M
[09/09 20:25:37] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/r50_000_1000/model_final.pth
[09/09 20:25:39] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 19.06  loss_ce: 0.4665  loss_mask: 0.1683  loss_dice: 1.185  loss_ce_0: 0.584  loss_mask_0: 0.2023  loss_dice_0: 1.458  loss_ce_1: 0.6748  loss_mask_1: 0.181  loss_dice_1: 1.317  loss_ce_2: 0.5679  loss_mask_2: 0.1745  loss_dice_2: 1.261  loss_ce_3: 0.5583  loss_mask_3: 0.1723  loss_dice_3: 1.22  loss_ce_4: 0.4829  loss_mask_4: 0.1661  loss_dice_4: 1.23  loss_ce_5: 0.4959  loss_mask_5: 0.1669  loss_dice_5: 1.211  loss_ce_6: 0.4997  loss_mask_6: 0.1668  loss_dice_6: 1.183  loss_ce_7: 0.4685  loss_mask_7: 0.1685  loss_dice_7: 1.198  loss_ce_8: 0.4617  loss_mask_8: 0.1666  loss_dice_8: 1.198    time: 1.1058  last_time: 1.1095  data_time: 0.0596  last_data_time: 0.0571   lr: 0.0001  max_mem: 32630M
[09/09 20:25:39] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:18:23 (1.1058 s / it)
[09/09 20:25:39] d2.engine.hooks INFO: Total training time: 0:18:29 (0:00:05 on hooks)
[09/09 20:25:39] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/09 20:25:39] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/09 20:25:39] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/09 20:25:39] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/09 20:25:39] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/09 20:25:39] d2.evaluation.evaluator INFO: Start inference on 500 batches
[09/09 20:25:44] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0038 s/iter. Inference: 0.2229 s/iter. Eval: 0.1093 s/iter. Total: 0.3359 s/iter. ETA=0:02:44
[09/09 20:25:49] d2.evaluation.evaluator INFO: Inference done 26/500. Dataloading: 0.0048 s/iter. Inference: 0.2240 s/iter. Eval: 0.1059 s/iter. Total: 0.3348 s/iter. ETA=0:02:38
[09/09 20:25:55] d2.evaluation.evaluator INFO: Inference done 41/500. Dataloading: 0.0049 s/iter. Inference: 0.2253 s/iter. Eval: 0.1055 s/iter. Total: 0.3359 s/iter. ETA=0:02:34
[09/09 20:26:00] d2.evaluation.evaluator INFO: Inference done 56/500. Dataloading: 0.0051 s/iter. Inference: 0.2267 s/iter. Eval: 0.1055 s/iter. Total: 0.3374 s/iter. ETA=0:02:29
[09/09 20:26:05] d2.evaluation.evaluator INFO: Inference done 71/500. Dataloading: 0.0051 s/iter. Inference: 0.2267 s/iter. Eval: 0.1057 s/iter. Total: 0.3377 s/iter. ETA=0:02:24
[09/09 20:26:10] d2.evaluation.evaluator INFO: Inference done 86/500. Dataloading: 0.0052 s/iter. Inference: 0.2276 s/iter. Eval: 0.1062 s/iter. Total: 0.3391 s/iter. ETA=0:02:20
[09/09 20:26:15] d2.evaluation.evaluator INFO: Inference done 101/500. Dataloading: 0.0052 s/iter. Inference: 0.2274 s/iter. Eval: 0.1063 s/iter. Total: 0.3390 s/iter. ETA=0:02:15
[09/09 20:26:20] d2.evaluation.evaluator INFO: Inference done 116/500. Dataloading: 0.0052 s/iter. Inference: 0.2269 s/iter. Eval: 0.1066 s/iter. Total: 0.3387 s/iter. ETA=0:02:10
[09/09 20:26:25] d2.evaluation.evaluator INFO: Inference done 131/500. Dataloading: 0.0052 s/iter. Inference: 0.2267 s/iter. Eval: 0.1066 s/iter. Total: 0.3385 s/iter. ETA=0:02:04
[09/09 20:26:30] d2.evaluation.evaluator INFO: Inference done 146/500. Dataloading: 0.0052 s/iter. Inference: 0.2271 s/iter. Eval: 0.1065 s/iter. Total: 0.3390 s/iter. ETA=0:01:59
[09/09 20:26:35] d2.evaluation.evaluator INFO: Inference done 161/500. Dataloading: 0.0052 s/iter. Inference: 0.2279 s/iter. Eval: 0.1064 s/iter. Total: 0.3397 s/iter. ETA=0:01:55
[09/09 20:26:41] d2.evaluation.evaluator INFO: Inference done 176/500. Dataloading: 0.0053 s/iter. Inference: 0.2287 s/iter. Eval: 0.1064 s/iter. Total: 0.3405 s/iter. ETA=0:01:50
[09/09 20:26:46] d2.evaluation.evaluator INFO: Inference done 191/500. Dataloading: 0.0053 s/iter. Inference: 0.2288 s/iter. Eval: 0.1064 s/iter. Total: 0.3406 s/iter. ETA=0:01:45
[09/09 20:26:51] d2.evaluation.evaluator INFO: Inference done 206/500. Dataloading: 0.0053 s/iter. Inference: 0.2295 s/iter. Eval: 0.1063 s/iter. Total: 0.3412 s/iter. ETA=0:01:40
[09/09 20:26:56] d2.evaluation.evaluator INFO: Inference done 221/500. Dataloading: 0.0053 s/iter. Inference: 0.2297 s/iter. Eval: 0.1063 s/iter. Total: 0.3414 s/iter. ETA=0:01:35
[09/09 20:27:01] d2.evaluation.evaluator INFO: Inference done 236/500. Dataloading: 0.0053 s/iter. Inference: 0.2296 s/iter. Eval: 0.1062 s/iter. Total: 0.3412 s/iter. ETA=0:01:30
[09/09 20:27:06] d2.evaluation.evaluator INFO: Inference done 251/500. Dataloading: 0.0053 s/iter. Inference: 0.2293 s/iter. Eval: 0.1063 s/iter. Total: 0.3410 s/iter. ETA=0:01:24
[09/09 20:27:11] d2.evaluation.evaluator INFO: Inference done 266/500. Dataloading: 0.0053 s/iter. Inference: 0.2292 s/iter. Eval: 0.1063 s/iter. Total: 0.3409 s/iter. ETA=0:01:19
[09/09 20:27:17] d2.evaluation.evaluator INFO: Inference done 281/500. Dataloading: 0.0053 s/iter. Inference: 0.2292 s/iter. Eval: 0.1063 s/iter. Total: 0.3409 s/iter. ETA=0:01:14
[09/09 20:27:22] d2.evaluation.evaluator INFO: Inference done 297/500. Dataloading: 0.0053 s/iter. Inference: 0.2288 s/iter. Eval: 0.1062 s/iter. Total: 0.3405 s/iter. ETA=0:01:09
[09/09 20:27:27] d2.evaluation.evaluator INFO: Inference done 312/500. Dataloading: 0.0053 s/iter. Inference: 0.2287 s/iter. Eval: 0.1061 s/iter. Total: 0.3403 s/iter. ETA=0:01:03
[09/09 20:27:32] d2.evaluation.evaluator INFO: Inference done 327/500. Dataloading: 0.0053 s/iter. Inference: 0.2285 s/iter. Eval: 0.1061 s/iter. Total: 0.3400 s/iter. ETA=0:00:58
[09/09 20:27:37] d2.evaluation.evaluator INFO: Inference done 342/500. Dataloading: 0.0053 s/iter. Inference: 0.2288 s/iter. Eval: 0.1061 s/iter. Total: 0.3403 s/iter. ETA=0:00:53
[09/09 20:27:42] d2.evaluation.evaluator INFO: Inference done 356/500. Dataloading: 0.0053 s/iter. Inference: 0.2295 s/iter. Eval: 0.1063 s/iter. Total: 0.3412 s/iter. ETA=0:00:49
[09/09 20:27:47] d2.evaluation.evaluator INFO: Inference done 371/500. Dataloading: 0.0053 s/iter. Inference: 0.2293 s/iter. Eval: 0.1063 s/iter. Total: 0.3411 s/iter. ETA=0:00:43
[09/09 20:27:52] d2.evaluation.evaluator INFO: Inference done 386/500. Dataloading: 0.0053 s/iter. Inference: 0.2293 s/iter. Eval: 0.1064 s/iter. Total: 0.3412 s/iter. ETA=0:00:38
[09/09 20:27:58] d2.evaluation.evaluator INFO: Inference done 401/500. Dataloading: 0.0053 s/iter. Inference: 0.2292 s/iter. Eval: 0.1064 s/iter. Total: 0.3411 s/iter. ETA=0:00:33
[09/09 20:28:03] d2.evaluation.evaluator INFO: Inference done 416/500. Dataloading: 0.0053 s/iter. Inference: 0.2291 s/iter. Eval: 0.1064 s/iter. Total: 0.3410 s/iter. ETA=0:00:28
[09/09 20:28:08] d2.evaluation.evaluator INFO: Inference done 431/500. Dataloading: 0.0053 s/iter. Inference: 0.2291 s/iter. Eval: 0.1064 s/iter. Total: 0.3410 s/iter. ETA=0:00:23
[09/09 20:28:13] d2.evaluation.evaluator INFO: Inference done 446/500. Dataloading: 0.0053 s/iter. Inference: 0.2291 s/iter. Eval: 0.1065 s/iter. Total: 0.3411 s/iter. ETA=0:00:18
[09/09 20:28:18] d2.evaluation.evaluator INFO: Inference done 461/500. Dataloading: 0.0053 s/iter. Inference: 0.2291 s/iter. Eval: 0.1065 s/iter. Total: 0.3410 s/iter. ETA=0:00:13
[09/09 20:28:23] d2.evaluation.evaluator INFO: Inference done 476/500. Dataloading: 0.0053 s/iter. Inference: 0.2291 s/iter. Eval: 0.1064 s/iter. Total: 0.3409 s/iter. ETA=0:00:08
[09/09 20:28:28] d2.evaluation.evaluator INFO: Inference done 491/500. Dataloading: 0.0054 s/iter. Inference: 0.2293 s/iter. Eval: 0.1065 s/iter. Total: 0.3412 s/iter. ETA=0:00:03
[09/09 20:28:31] d2.evaluation.evaluator INFO: Total inference time: 0:02:48.889300 (0.341191 s / iter per device, on 1 devices)
[09/09 20:28:31] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:53 (0.229148 s / iter per device, on 1 devices)
[09/09 20:28:31] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evaliqqqdv4p ...
[09/09 20:28:45] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 56.060 | 80.570 | 68.497 |      19       |
| Things | 47.323 | 80.420 | 58.961 |       8       |
| Stuff  | 62.414 | 80.679 | 75.433 |      11       |
[09/09 20:28:45] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.998 | 97.401 | 99.586 |     Stuff     |
| class_8  | 71.829 | 83.138 | 86.398 |     Stuff     |
| class_11 | 86.848 | 88.847 | 97.751 |     Stuff     |
| class_12 | 39.232 | 79.511 | 49.342 |     Stuff     |
| class_13 | 28.786 | 73.468 | 39.181 |     Stuff     |
| class_17 | 43.097 | 63.597 | 67.765 |     Stuff     |
| class_19 | 47.749 | 69.061 | 69.140 |     Stuff     |
| class_20 | 63.267 | 76.133 | 83.100 |     Stuff     |
| class_21 | 88.884 | 89.808 | 98.971 |     Stuff     |
| class_22 | 31.919 | 74.691 | 42.735 |     Stuff     |
| class_23 | 87.945 | 91.809 | 95.791 |     Stuff     |
| class_24 | 51.539 | 76.280 | 67.566 |    Things     |
| class_25 | 45.835 | 73.270 | 62.557 |    Things     |
| class_26 | 64.587 | 82.690 | 78.108 |    Things     |
| class_27 | 48.948 | 90.109 | 54.321 |    Things     |
| class_28 | 58.413 | 89.535 | 65.241 |    Things     |
| class_31 | 29.391 | 85.234 | 34.483 |    Things     |
| class_32 | 38.878 | 75.326 | 51.613 |    Things     |
| class_33 | 40.993 | 70.921 | 57.801 |    Things     |
[09/09 20:28:45] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[09/09 20:28:45] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/09 20:28:45] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/09 20:28:45] d2.evaluation.testing INFO: copypaste: 56.0600,80.5698,68.4974,47.3231,80.4204,58.9612,62.4140,80.6785,75.4328,96.9982,97.4015,99.5859,71.8294,83.1376,86.3983,86.8480,88.8466,97.7505,39.2323,79.5108,49.3421,28.7855,73.4676,39.1813,43.0968,63.5972,67.7652,47.7488,69.0610,69.1400,63.2669,76.1334,83.1001,88.8843,89.8082,98.9712,31.9190,74.6905,42.7350,87.9449,91.8095,95.7907,51.5393,76.2796,67.5664,45.8354,73.2697,62.5571,64.5873,82.6897,78.1080,48.9481,90.1089,54.3210,58.4134,89.5352,65.2406,29.3909,85.2336,34.4828,38.8778,75.3257,51.6129,40.9930,70.9205,57.8012
