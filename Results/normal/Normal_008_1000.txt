[08/15 14:15:29] detectron2 INFO: Rank of current process: 0. World size: 2
[08/15 14:15:30] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1,2                        NVIDIA L40S (arch=8.9)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/15 14:15:30] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/15 14:15:30] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/008_10000
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/15 14:15:30] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/Normal/008_10000
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/15 14:15:30] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/Normal/008_10000/config.yaml
[08/15 14:15:30] d2.utils.env INFO: Using a generated random seed 34526223
[08/15 14:15:34] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/15 14:15:34] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/15 14:15:35] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/15 14:15:35] d2.data.build INFO: Using training sampler TrainingSampler
[08/15 14:15:35] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/15 14:15:35] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/15 14:15:35] d2.data.common INFO: Serialized dataset takes 2.16 MiB
[08/15 14:15:35] d2.data.build INFO: Making batched data loader with batch_size=4
[08/15 14:15:35] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/15 14:15:35] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[08/15 14:15:35] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/gbrison/segmentation/segmentation/fc-clip/fcclip_cocopan_r50.pth ...
[08/15 14:15:35] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/15 14:15:35] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/15 14:15:35] d2.engine.train_loop INFO: Starting training from iteration 0
[08/15 14:15:52] d2.utils.events INFO:  eta: 0:09:11  iter: 19  total_loss: 29.1  loss_ce: 0.6496  loss_mask: 0.6559  loss_dice: 1.513  loss_ce_0: 0.6735  loss_mask_0: 0.7374  loss_dice_0: 1.785  loss_ce_1: 0.627  loss_mask_1: 0.693  loss_dice_1: 1.708  loss_ce_2: 0.6671  loss_mask_2: 0.685  loss_dice_2: 1.632  loss_ce_3: 0.6672  loss_mask_3: 0.6696  loss_dice_3: 1.549  loss_ce_4: 0.6734  loss_mask_4: 0.6535  loss_dice_4: 1.574  loss_ce_5: 0.6621  loss_mask_5: 0.6626  loss_dice_5: 1.595  loss_ce_6: 0.6646  loss_mask_6: 0.6567  loss_dice_6: 1.546  loss_ce_7: 0.6426  loss_mask_7: 0.6457  loss_dice_7: 1.533  loss_ce_8: 0.6896  loss_mask_8: 0.6518  loss_dice_8: 1.518    time: 0.5743  last_time: 0.5513  data_time: 0.1628  last_data_time: 0.0143   lr: 0.0001  max_mem: 15463M
[08/15 14:16:03] d2.utils.events INFO:  eta: 0:09:04  iter: 39  total_loss: 21.79  loss_ce: 0.2686  loss_mask: 0.5558  loss_dice: 1.259  loss_ce_0: 0.2998  loss_mask_0: 0.5917  loss_dice_0: 1.462  loss_ce_1: 0.353  loss_mask_1: 0.5792  loss_dice_1: 1.332  loss_ce_2: 0.3113  loss_mask_2: 0.5702  loss_dice_2: 1.301  loss_ce_3: 0.307  loss_mask_3: 0.5603  loss_dice_3: 1.286  loss_ce_4: 0.294  loss_mask_4: 0.552  loss_dice_4: 1.297  loss_ce_5: 0.2765  loss_mask_5: 0.5534  loss_dice_5: 1.26  loss_ce_6: 0.298  loss_mask_6: 0.5562  loss_dice_6: 1.259  loss_ce_7: 0.2391  loss_mask_7: 0.5511  loss_dice_7: 1.246  loss_ce_8: 0.2704  loss_mask_8: 0.5604  loss_dice_8: 1.287    time: 0.5726  last_time: 0.5446  data_time: 0.0155  last_data_time: 0.0132   lr: 0.0001  max_mem: 15463M
[08/15 14:16:15] d2.utils.events INFO:  eta: 0:08:52  iter: 59  total_loss: 20.53  loss_ce: 0.2583  loss_mask: 0.5285  loss_dice: 1.219  loss_ce_0: 0.2883  loss_mask_0: 0.577  loss_dice_0: 1.408  loss_ce_1: 0.3244  loss_mask_1: 0.5602  loss_dice_1: 1.303  loss_ce_2: 0.3005  loss_mask_2: 0.5419  loss_dice_2: 1.247  loss_ce_3: 0.3142  loss_mask_3: 0.5435  loss_dice_3: 1.243  loss_ce_4: 0.2654  loss_mask_4: 0.5457  loss_dice_4: 1.228  loss_ce_5: 0.2575  loss_mask_5: 0.5345  loss_dice_5: 1.214  loss_ce_6: 0.2759  loss_mask_6: 0.5222  loss_dice_6: 1.182  loss_ce_7: 0.2631  loss_mask_7: 0.5293  loss_dice_7: 1.204  loss_ce_8: 0.2379  loss_mask_8: 0.5332  loss_dice_8: 1.211    time: 0.5693  last_time: 0.6046  data_time: 0.0140  last_data_time: 0.0141   lr: 0.0001  max_mem: 15463M
[08/15 14:16:26] d2.utils.events INFO:  eta: 0:08:36  iter: 79  total_loss: 19.72  loss_ce: 0.2497  loss_mask: 0.4692  loss_dice: 1.175  loss_ce_0: 0.2284  loss_mask_0: 0.5257  loss_dice_0: 1.384  loss_ce_1: 0.2872  loss_mask_1: 0.4964  loss_dice_1: 1.271  loss_ce_2: 0.2863  loss_mask_2: 0.4693  loss_dice_2: 1.2  loss_ce_3: 0.2977  loss_mask_3: 0.4748  loss_dice_3: 1.161  loss_ce_4: 0.2587  loss_mask_4: 0.4835  loss_dice_4: 1.187  loss_ce_5: 0.2643  loss_mask_5: 0.4762  loss_dice_5: 1.191  loss_ce_6: 0.262  loss_mask_6: 0.4754  loss_dice_6: 1.193  loss_ce_7: 0.2662  loss_mask_7: 0.4715  loss_dice_7: 1.19  loss_ce_8: 0.2522  loss_mask_8: 0.4683  loss_dice_8: 1.173    time: 0.5630  last_time: 0.5433  data_time: 0.0157  last_data_time: 0.0128   lr: 0.0001  max_mem: 15464M
[08/15 14:16:37] d2.utils.events INFO:  eta: 0:08:23  iter: 99  total_loss: 19.07  loss_ce: 0.2338  loss_mask: 0.4581  loss_dice: 1.137  loss_ce_0: 0.2572  loss_mask_0: 0.4929  loss_dice_0: 1.331  loss_ce_1: 0.3256  loss_mask_1: 0.4786  loss_dice_1: 1.234  loss_ce_2: 0.2895  loss_mask_2: 0.4608  loss_dice_2: 1.181  loss_ce_3: 0.2843  loss_mask_3: 0.4561  loss_dice_3: 1.146  loss_ce_4: 0.2683  loss_mask_4: 0.4528  loss_dice_4: 1.157  loss_ce_5: 0.2324  loss_mask_5: 0.4649  loss_dice_5: 1.17  loss_ce_6: 0.2503  loss_mask_6: 0.4482  loss_dice_6: 1.14  loss_ce_7: 0.235  loss_mask_7: 0.4515  loss_dice_7: 1.15  loss_ce_8: 0.2442  loss_mask_8: 0.4531  loss_dice_8: 1.16    time: 0.5593  last_time: 0.5588  data_time: 0.0157  last_data_time: 0.0179   lr: 0.0001  max_mem: 15464M
[08/15 14:16:48] d2.utils.events INFO:  eta: 0:08:09  iter: 119  total_loss: 18.93  loss_ce: 0.25  loss_mask: 0.5073  loss_dice: 1.13  loss_ce_0: 0.2365  loss_mask_0: 0.5261  loss_dice_0: 1.233  loss_ce_1: 0.2786  loss_mask_1: 0.5169  loss_dice_1: 1.231  loss_ce_2: 0.2952  loss_mask_2: 0.5012  loss_dice_2: 1.167  loss_ce_3: 0.2729  loss_mask_3: 0.4988  loss_dice_3: 1.141  loss_ce_4: 0.2574  loss_mask_4: 0.4981  loss_dice_4: 1.132  loss_ce_5: 0.2652  loss_mask_5: 0.4965  loss_dice_5: 1.13  loss_ce_6: 0.2538  loss_mask_6: 0.5068  loss_dice_6: 1.104  loss_ce_7: 0.2487  loss_mask_7: 0.498  loss_dice_7: 1.118  loss_ce_8: 0.2398  loss_mask_8: 0.4951  loss_dice_8: 1.116    time: 0.5581  last_time: 0.5232  data_time: 0.0155  last_data_time: 0.0163   lr: 0.0001  max_mem: 15464M
[08/15 14:16:59] d2.utils.events INFO:  eta: 0:07:59  iter: 139  total_loss: 18.77  loss_ce: 0.1916  loss_mask: 0.4527  loss_dice: 1.129  loss_ce_0: 0.1973  loss_mask_0: 0.4843  loss_dice_0: 1.277  loss_ce_1: 0.2145  loss_mask_1: 0.4764  loss_dice_1: 1.207  loss_ce_2: 0.2199  loss_mask_2: 0.4555  loss_dice_2: 1.173  loss_ce_3: 0.2307  loss_mask_3: 0.4562  loss_dice_3: 1.118  loss_ce_4: 0.2195  loss_mask_4: 0.4595  loss_dice_4: 1.14  loss_ce_5: 0.2246  loss_mask_5: 0.4529  loss_dice_5: 1.126  loss_ce_6: 0.1819  loss_mask_6: 0.4501  loss_dice_6: 1.111  loss_ce_7: 0.1984  loss_mask_7: 0.4517  loss_dice_7: 1.134  loss_ce_8: 0.1981  loss_mask_8: 0.4517  loss_dice_8: 1.089    time: 0.5587  last_time: 0.5840  data_time: 0.0147  last_data_time: 0.0149   lr: 0.0001  max_mem: 15464M
[08/15 14:17:10] d2.utils.events INFO:  eta: 0:07:47  iter: 159  total_loss: 17.54  loss_ce: 0.1927  loss_mask: 0.4414  loss_dice: 1.051  loss_ce_0: 0.1711  loss_mask_0: 0.4984  loss_dice_0: 1.244  loss_ce_1: 0.2476  loss_mask_1: 0.4653  loss_dice_1: 1.172  loss_ce_2: 0.2675  loss_mask_2: 0.4544  loss_dice_2: 1.112  loss_ce_3: 0.2287  loss_mask_3: 0.4441  loss_dice_3: 1.063  loss_ce_4: 0.2071  loss_mask_4: 0.4427  loss_dice_4: 1.081  loss_ce_5: 0.2084  loss_mask_5: 0.448  loss_dice_5: 1.089  loss_ce_6: 0.1832  loss_mask_6: 0.4469  loss_dice_6: 1.08  loss_ce_7: 0.1719  loss_mask_7: 0.4513  loss_dice_7: 1.071  loss_ce_8: 0.2029  loss_mask_8: 0.4437  loss_dice_8: 1.077    time: 0.5581  last_time: 0.5545  data_time: 0.0152  last_data_time: 0.0145   lr: 0.0001  max_mem: 15464M
[08/15 14:17:21] d2.utils.events INFO:  eta: 0:07:35  iter: 179  total_loss: 18.31  loss_ce: 0.2342  loss_mask: 0.4141  loss_dice: 1.089  loss_ce_0: 0.183  loss_mask_0: 0.4772  loss_dice_0: 1.248  loss_ce_1: 0.2597  loss_mask_1: 0.4454  loss_dice_1: 1.173  loss_ce_2: 0.2521  loss_mask_2: 0.4442  loss_dice_2: 1.118  loss_ce_3: 0.2504  loss_mask_3: 0.4278  loss_dice_3: 1.107  loss_ce_4: 0.238  loss_mask_4: 0.4235  loss_dice_4: 1.087  loss_ce_5: 0.2324  loss_mask_5: 0.4258  loss_dice_5: 1.086  loss_ce_6: 0.2305  loss_mask_6: 0.4195  loss_dice_6: 1.083  loss_ce_7: 0.2232  loss_mask_7: 0.4224  loss_dice_7: 1.096  loss_ce_8: 0.2185  loss_mask_8: 0.4165  loss_dice_8: 1.091    time: 0.5569  last_time: 0.6132  data_time: 0.0144  last_data_time: 0.0183   lr: 0.0001  max_mem: 15464M
[08/15 14:17:32] d2.utils.events INFO:  eta: 0:07:23  iter: 199  total_loss: 18.4  loss_ce: 0.2338  loss_mask: 0.4119  loss_dice: 1.109  loss_ce_0: 0.2335  loss_mask_0: 0.45  loss_dice_0: 1.245  loss_ce_1: 0.2721  loss_mask_1: 0.4321  loss_dice_1: 1.208  loss_ce_2: 0.2417  loss_mask_2: 0.4141  loss_dice_2: 1.149  loss_ce_3: 0.2474  loss_mask_3: 0.4103  loss_dice_3: 1.107  loss_ce_4: 0.2514  loss_mask_4: 0.4136  loss_dice_4: 1.122  loss_ce_5: 0.2267  loss_mask_5: 0.4103  loss_dice_5: 1.133  loss_ce_6: 0.2399  loss_mask_6: 0.4056  loss_dice_6: 1.105  loss_ce_7: 0.2438  loss_mask_7: 0.4106  loss_dice_7: 1.108  loss_ce_8: 0.222  loss_mask_8: 0.4123  loss_dice_8: 1.099    time: 0.5571  last_time: 0.5511  data_time: 0.0161  last_data_time: 0.0128   lr: 0.0001  max_mem: 15464M
[08/15 14:17:44] d2.utils.events INFO:  eta: 0:07:12  iter: 219  total_loss: 17.14  loss_ce: 0.2292  loss_mask: 0.4098  loss_dice: 1.05  loss_ce_0: 0.2287  loss_mask_0: 0.4586  loss_dice_0: 1.185  loss_ce_1: 0.2331  loss_mask_1: 0.432  loss_dice_1: 1.086  loss_ce_2: 0.2276  loss_mask_2: 0.4189  loss_dice_2: 1.103  loss_ce_3: 0.2579  loss_mask_3: 0.4129  loss_dice_3: 1.053  loss_ce_4: 0.2483  loss_mask_4: 0.4153  loss_dice_4: 1.065  loss_ce_5: 0.2166  loss_mask_5: 0.418  loss_dice_5: 1.058  loss_ce_6: 0.226  loss_mask_6: 0.4124  loss_dice_6: 1.035  loss_ce_7: 0.2042  loss_mask_7: 0.4109  loss_dice_7: 1.032  loss_ce_8: 0.2244  loss_mask_8: 0.4044  loss_dice_8: 1.051    time: 0.5564  last_time: 0.5230  data_time: 0.0157  last_data_time: 0.0139   lr: 0.0001  max_mem: 15464M
[08/15 14:17:55] d2.utils.events INFO:  eta: 0:07:00  iter: 239  total_loss: 17.93  loss_ce: 0.2394  loss_mask: 0.4333  loss_dice: 1.073  loss_ce_0: 0.2001  loss_mask_0: 0.481  loss_dice_0: 1.202  loss_ce_1: 0.2432  loss_mask_1: 0.451  loss_dice_1: 1.166  loss_ce_2: 0.2157  loss_mask_2: 0.4233  loss_dice_2: 1.12  loss_ce_3: 0.2317  loss_mask_3: 0.4297  loss_dice_3: 1.108  loss_ce_4: 0.2253  loss_mask_4: 0.4282  loss_dice_4: 1.096  loss_ce_5: 0.2117  loss_mask_5: 0.4306  loss_dice_5: 1.07  loss_ce_6: 0.2125  loss_mask_6: 0.4289  loss_dice_6: 1.093  loss_ce_7: 0.2225  loss_mask_7: 0.4282  loss_dice_7: 1.079  loss_ce_8: 0.2292  loss_mask_8: 0.4319  loss_dice_8: 1.078    time: 0.5567  last_time: 0.6643  data_time: 0.0138  last_data_time: 0.0176   lr: 0.0001  max_mem: 15464M
[08/15 14:18:06] d2.utils.events INFO:  eta: 0:06:49  iter: 259  total_loss: 17.65  loss_ce: 0.2162  loss_mask: 0.4301  loss_dice: 1.065  loss_ce_0: 0.1857  loss_mask_0: 0.4917  loss_dice_0: 1.169  loss_ce_1: 0.2304  loss_mask_1: 0.4646  loss_dice_1: 1.119  loss_ce_2: 0.2194  loss_mask_2: 0.4584  loss_dice_2: 1.099  loss_ce_3: 0.2389  loss_mask_3: 0.4541  loss_dice_3: 1.06  loss_ce_4: 0.2004  loss_mask_4: 0.4475  loss_dice_4: 1.084  loss_ce_5: 0.222  loss_mask_5: 0.4372  loss_dice_5: 1.06  loss_ce_6: 0.2097  loss_mask_6: 0.4284  loss_dice_6: 1.055  loss_ce_7: 0.2134  loss_mask_7: 0.4259  loss_dice_7: 1.075  loss_ce_8: 0.2073  loss_mask_8: 0.4289  loss_dice_8: 1.055    time: 0.5557  last_time: 0.5137  data_time: 0.0155  last_data_time: 0.0120   lr: 0.0001  max_mem: 15464M
[08/15 14:18:17] d2.utils.events INFO:  eta: 0:06:38  iter: 279  total_loss: 17.85  loss_ce: 0.2114  loss_mask: 0.406  loss_dice: 1.077  loss_ce_0: 0.2044  loss_mask_0: 0.4551  loss_dice_0: 1.209  loss_ce_1: 0.2316  loss_mask_1: 0.4322  loss_dice_1: 1.15  loss_ce_2: 0.253  loss_mask_2: 0.4085  loss_dice_2: 1.107  loss_ce_3: 0.2368  loss_mask_3: 0.4115  loss_dice_3: 1.095  loss_ce_4: 0.2236  loss_mask_4: 0.4098  loss_dice_4: 1.095  loss_ce_5: 0.2164  loss_mask_5: 0.4069  loss_dice_5: 1.094  loss_ce_6: 0.2168  loss_mask_6: 0.4016  loss_dice_6: 1.068  loss_ce_7: 0.2289  loss_mask_7: 0.4038  loss_dice_7: 1.078  loss_ce_8: 0.2371  loss_mask_8: 0.408  loss_dice_8: 1.078    time: 0.5556  last_time: 0.5760  data_time: 0.0170  last_data_time: 0.0174   lr: 0.0001  max_mem: 15464M
[08/15 14:18:28] d2.utils.events INFO:  eta: 0:06:26  iter: 299  total_loss: 16.96  loss_ce: 0.1618  loss_mask: 0.4431  loss_dice: 1.069  loss_ce_0: 0.1802  loss_mask_0: 0.4953  loss_dice_0: 1.147  loss_ce_1: 0.2155  loss_mask_1: 0.4701  loss_dice_1: 1.127  loss_ce_2: 0.1989  loss_mask_2: 0.4498  loss_dice_2: 1.066  loss_ce_3: 0.2116  loss_mask_3: 0.4406  loss_dice_3: 1.028  loss_ce_4: 0.1864  loss_mask_4: 0.4363  loss_dice_4: 1.044  loss_ce_5: 0.1958  loss_mask_5: 0.4474  loss_dice_5: 1.071  loss_ce_6: 0.1727  loss_mask_6: 0.45  loss_dice_6: 1.06  loss_ce_7: 0.1588  loss_mask_7: 0.4492  loss_dice_7: 1.054  loss_ce_8: 0.1799  loss_mask_8: 0.4417  loss_dice_8: 1.061    time: 0.5555  last_time: 0.5543  data_time: 0.0142  last_data_time: 0.0130   lr: 0.0001  max_mem: 15464M
[08/15 14:18:39] d2.utils.events INFO:  eta: 0:06:16  iter: 319  total_loss: 18.18  loss_ce: 0.2548  loss_mask: 0.4418  loss_dice: 1.061  loss_ce_0: 0.2442  loss_mask_0: 0.4871  loss_dice_0: 1.239  loss_ce_1: 0.2327  loss_mask_1: 0.4579  loss_dice_1: 1.144  loss_ce_2: 0.2564  loss_mask_2: 0.4418  loss_dice_2: 1.11  loss_ce_3: 0.2426  loss_mask_3: 0.4495  loss_dice_3: 1.088  loss_ce_4: 0.2328  loss_mask_4: 0.44  loss_dice_4: 1.088  loss_ce_5: 0.2419  loss_mask_5: 0.4526  loss_dice_5: 1.074  loss_ce_6: 0.2347  loss_mask_6: 0.4464  loss_dice_6: 1.073  loss_ce_7: 0.2344  loss_mask_7: 0.449  loss_dice_7: 1.054  loss_ce_8: 0.226  loss_mask_8: 0.4492  loss_dice_8: 1.065    time: 0.5550  last_time: 0.5343  data_time: 0.0156  last_data_time: 0.0142   lr: 0.0001  max_mem: 15464M
[08/15 14:18:50] d2.utils.events INFO:  eta: 0:06:04  iter: 339  total_loss: 17.84  loss_ce: 0.2418  loss_mask: 0.4195  loss_dice: 1.049  loss_ce_0: 0.2158  loss_mask_0: 0.4797  loss_dice_0: 1.175  loss_ce_1: 0.2299  loss_mask_1: 0.4571  loss_dice_1: 1.16  loss_ce_2: 0.2497  loss_mask_2: 0.4381  loss_dice_2: 1.113  loss_ce_3: 0.2319  loss_mask_3: 0.42  loss_dice_3: 1.087  loss_ce_4: 0.2469  loss_mask_4: 0.4191  loss_dice_4: 1.058  loss_ce_5: 0.2431  loss_mask_5: 0.4155  loss_dice_5: 1.053  loss_ce_6: 0.2175  loss_mask_6: 0.4258  loss_dice_6: 1.066  loss_ce_7: 0.2138  loss_mask_7: 0.4165  loss_dice_7: 1.038  loss_ce_8: 0.2191  loss_mask_8: 0.4148  loss_dice_8: 1.051    time: 0.5554  last_time: 0.5726  data_time: 0.0172  last_data_time: 0.0140   lr: 0.0001  max_mem: 15464M
[08/15 14:19:01] d2.utils.events INFO:  eta: 0:05:52  iter: 359  total_loss: 17.47  loss_ce: 0.2012  loss_mask: 0.4311  loss_dice: 1.006  loss_ce_0: 0.1779  loss_mask_0: 0.4938  loss_dice_0: 1.194  loss_ce_1: 0.2231  loss_mask_1: 0.4729  loss_dice_1: 1.107  loss_ce_2: 0.2285  loss_mask_2: 0.4476  loss_dice_2: 1.064  loss_ce_3: 0.2346  loss_mask_3: 0.4511  loss_dice_3: 1.047  loss_ce_4: 0.2371  loss_mask_4: 0.4365  loss_dice_4: 1.03  loss_ce_5: 0.1964  loss_mask_5: 0.4458  loss_dice_5: 1.011  loss_ce_6: 0.2183  loss_mask_6: 0.4328  loss_dice_6: 0.989  loss_ce_7: 0.2126  loss_mask_7: 0.4291  loss_dice_7: 1.012  loss_ce_8: 0.2022  loss_mask_8: 0.4347  loss_dice_8: 1.018    time: 0.5541  last_time: 0.5349  data_time: 0.0138  last_data_time: 0.0130   lr: 0.0001  max_mem: 15464M
[08/15 14:19:12] d2.utils.events INFO:  eta: 0:05:41  iter: 379  total_loss: 17.32  loss_ce: 0.2114  loss_mask: 0.4238  loss_dice: 1.085  loss_ce_0: 0.167  loss_mask_0: 0.4767  loss_dice_0: 1.273  loss_ce_1: 0.2064  loss_mask_1: 0.4488  loss_dice_1: 1.135  loss_ce_2: 0.2001  loss_mask_2: 0.4279  loss_dice_2: 1.119  loss_ce_3: 0.2398  loss_mask_3: 0.44  loss_dice_3: 1.119  loss_ce_4: 0.2282  loss_mask_4: 0.4404  loss_dice_4: 1.099  loss_ce_5: 0.1924  loss_mask_5: 0.4277  loss_dice_5: 1.104  loss_ce_6: 0.2152  loss_mask_6: 0.4332  loss_dice_6: 1.089  loss_ce_7: 0.1962  loss_mask_7: 0.4391  loss_dice_7: 1.075  loss_ce_8: 0.2036  loss_mask_8: 0.4149  loss_dice_8: 1.096    time: 0.5536  last_time: 0.6017  data_time: 0.0144  last_data_time: 0.0130   lr: 0.0001  max_mem: 15466M
[08/15 14:19:23] d2.utils.events INFO:  eta: 0:05:30  iter: 399  total_loss: 16.6  loss_ce: 0.1877  loss_mask: 0.4048  loss_dice: 1.018  loss_ce_0: 0.193  loss_mask_0: 0.4453  loss_dice_0: 1.127  loss_ce_1: 0.2403  loss_mask_1: 0.4276  loss_dice_1: 1.081  loss_ce_2: 0.2015  loss_mask_2: 0.4151  loss_dice_2: 1.034  loss_ce_3: 0.2224  loss_mask_3: 0.4082  loss_dice_3: 1.025  loss_ce_4: 0.2007  loss_mask_4: 0.4044  loss_dice_4: 1.032  loss_ce_5: 0.2289  loss_mask_5: 0.4055  loss_dice_5: 1.054  loss_ce_6: 0.211  loss_mask_6: 0.408  loss_dice_6: 0.9972  loss_ce_7: 0.1796  loss_mask_7: 0.3976  loss_dice_7: 1.023  loss_ce_8: 0.1759  loss_mask_8: 0.4048  loss_dice_8: 1.005    time: 0.5542  last_time: 0.5861  data_time: 0.0180  last_data_time: 0.0163   lr: 0.0001  max_mem: 15466M
[08/15 14:19:35] d2.utils.events INFO:  eta: 0:05:19  iter: 419  total_loss: 16.94  loss_ce: 0.2164  loss_mask: 0.4174  loss_dice: 1.034  loss_ce_0: 0.2045  loss_mask_0: 0.4453  loss_dice_0: 1.178  loss_ce_1: 0.2478  loss_mask_1: 0.4337  loss_dice_1: 1.12  loss_ce_2: 0.2447  loss_mask_2: 0.4252  loss_dice_2: 1.064  loss_ce_3: 0.2499  loss_mask_3: 0.4184  loss_dice_3: 1.06  loss_ce_4: 0.2371  loss_mask_4: 0.419  loss_dice_4: 1.062  loss_ce_5: 0.2225  loss_mask_5: 0.4176  loss_dice_5: 1.048  loss_ce_6: 0.2208  loss_mask_6: 0.4177  loss_dice_6: 1.037  loss_ce_7: 0.2167  loss_mask_7: 0.4142  loss_dice_7: 1.024  loss_ce_8: 0.2163  loss_mask_8: 0.4159  loss_dice_8: 1.013    time: 0.5542  last_time: 0.5622  data_time: 0.0163  last_data_time: 0.0135   lr: 0.0001  max_mem: 15466M
[08/15 14:19:46] d2.utils.events INFO:  eta: 0:05:08  iter: 439  total_loss: 16.29  loss_ce: 0.1862  loss_mask: 0.3915  loss_dice: 0.989  loss_ce_0: 0.1927  loss_mask_0: 0.4568  loss_dice_0: 1.097  loss_ce_1: 0.2153  loss_mask_1: 0.4336  loss_dice_1: 1.027  loss_ce_2: 0.1884  loss_mask_2: 0.4153  loss_dice_2: 1.013  loss_ce_3: 0.2107  loss_mask_3: 0.4048  loss_dice_3: 1.001  loss_ce_4: 0.2072  loss_mask_4: 0.3968  loss_dice_4: 0.9925  loss_ce_5: 0.1827  loss_mask_5: 0.3947  loss_dice_5: 0.9836  loss_ce_6: 0.1918  loss_mask_6: 0.4013  loss_dice_6: 0.9624  loss_ce_7: 0.1843  loss_mask_7: 0.3949  loss_dice_7: 0.9647  loss_ce_8: 0.1983  loss_mask_8: 0.3962  loss_dice_8: 0.9622    time: 0.5539  last_time: 0.5703  data_time: 0.0147  last_data_time: 0.0154   lr: 0.0001  max_mem: 15466M
[08/15 14:19:57] d2.utils.events INFO:  eta: 0:04:57  iter: 459  total_loss: 16.37  loss_ce: 0.1487  loss_mask: 0.4288  loss_dice: 0.9634  loss_ce_0: 0.1575  loss_mask_0: 0.4727  loss_dice_0: 1.129  loss_ce_1: 0.169  loss_mask_1: 0.4432  loss_dice_1: 1.032  loss_ce_2: 0.1723  loss_mask_2: 0.442  loss_dice_2: 1.042  loss_ce_3: 0.1818  loss_mask_3: 0.4409  loss_dice_3: 1.003  loss_ce_4: 0.1745  loss_mask_4: 0.4473  loss_dice_4: 0.9981  loss_ce_5: 0.1696  loss_mask_5: 0.44  loss_dice_5: 0.9911  loss_ce_6: 0.1534  loss_mask_6: 0.433  loss_dice_6: 0.9652  loss_ce_7: 0.1565  loss_mask_7: 0.4328  loss_dice_7: 0.9756  loss_ce_8: 0.1572  loss_mask_8: 0.4289  loss_dice_8: 0.9807    time: 0.5542  last_time: 0.5245  data_time: 0.0147  last_data_time: 0.0137   lr: 0.0001  max_mem: 15466M
[08/15 14:20:08] d2.utils.events INFO:  eta: 0:04:46  iter: 479  total_loss: 17.06  loss_ce: 0.179  loss_mask: 0.4027  loss_dice: 1.05  loss_ce_0: 0.1742  loss_mask_0: 0.4545  loss_dice_0: 1.161  loss_ce_1: 0.2122  loss_mask_1: 0.4173  loss_dice_1: 1.108  loss_ce_2: 0.2233  loss_mask_2: 0.4116  loss_dice_2: 1.108  loss_ce_3: 0.2088  loss_mask_3: 0.4018  loss_dice_3: 1.071  loss_ce_4: 0.2363  loss_mask_4: 0.4007  loss_dice_4: 1.035  loss_ce_5: 0.1895  loss_mask_5: 0.4072  loss_dice_5: 1.061  loss_ce_6: 0.1974  loss_mask_6: 0.4008  loss_dice_6: 1.045  loss_ce_7: 0.1958  loss_mask_7: 0.4031  loss_dice_7: 1.043  loss_ce_8: 0.2037  loss_mask_8: 0.4033  loss_dice_8: 1.042    time: 0.5542  last_time: 0.5554  data_time: 0.0176  last_data_time: 0.0149   lr: 0.0001  max_mem: 15466M
[08/15 14:20:19] d2.utils.events INFO:  eta: 0:04:36  iter: 499  total_loss: 16.54  loss_ce: 0.1958  loss_mask: 0.4049  loss_dice: 1.028  loss_ce_0: 0.1654  loss_mask_0: 0.4464  loss_dice_0: 1.155  loss_ce_1: 0.1996  loss_mask_1: 0.4308  loss_dice_1: 1.095  loss_ce_2: 0.193  loss_mask_2: 0.4137  loss_dice_2: 1.082  loss_ce_3: 0.1798  loss_mask_3: 0.4141  loss_dice_3: 1.054  loss_ce_4: 0.1814  loss_mask_4: 0.3966  loss_dice_4: 1.02  loss_ce_5: 0.1839  loss_mask_5: 0.4061  loss_dice_5: 1.025  loss_ce_6: 0.1694  loss_mask_6: 0.3925  loss_dice_6: 1.029  loss_ce_7: 0.1986  loss_mask_7: 0.3891  loss_dice_7: 1.021  loss_ce_8: 0.1836  loss_mask_8: 0.408  loss_dice_8: 1.02    time: 0.5547  last_time: 0.5581  data_time: 0.0154  last_data_time: 0.0145   lr: 0.0001  max_mem: 15466M
[08/15 14:20:31] d2.utils.events INFO:  eta: 0:04:25  iter: 519  total_loss: 16.78  loss_ce: 0.1781  loss_mask: 0.4031  loss_dice: 1.012  loss_ce_0: 0.1665  loss_mask_0: 0.4463  loss_dice_0: 1.112  loss_ce_1: 0.1715  loss_mask_1: 0.426  loss_dice_1: 1.099  loss_ce_2: 0.2028  loss_mask_2: 0.4237  loss_dice_2: 1.035  loss_ce_3: 0.195  loss_mask_3: 0.4155  loss_dice_3: 1.017  loss_ce_4: 0.2039  loss_mask_4: 0.4179  loss_dice_4: 1.016  loss_ce_5: 0.1995  loss_mask_5: 0.4102  loss_dice_5: 1.005  loss_ce_6: 0.1986  loss_mask_6: 0.416  loss_dice_6: 1.019  loss_ce_7: 0.1833  loss_mask_7: 0.415  loss_dice_7: 1.017  loss_ce_8: 0.2021  loss_mask_8: 0.4081  loss_dice_8: 1    time: 0.5548  last_time: 0.5716  data_time: 0.0154  last_data_time: 0.0155   lr: 0.0001  max_mem: 15466M
[08/15 14:20:42] d2.utils.events INFO:  eta: 0:04:14  iter: 539  total_loss: 16.69  loss_ce: 0.2091  loss_mask: 0.4193  loss_dice: 1.035  loss_ce_0: 0.2117  loss_mask_0: 0.4529  loss_dice_0: 1.139  loss_ce_1: 0.2217  loss_mask_1: 0.4354  loss_dice_1: 1.12  loss_ce_2: 0.2063  loss_mask_2: 0.4274  loss_dice_2: 1.062  loss_ce_3: 0.2175  loss_mask_3: 0.4235  loss_dice_3: 1.037  loss_ce_4: 0.224  loss_mask_4: 0.4206  loss_dice_4: 1.049  loss_ce_5: 0.2046  loss_mask_5: 0.4139  loss_dice_5: 1.035  loss_ce_6: 0.2105  loss_mask_6: 0.4124  loss_dice_6: 1.038  loss_ce_7: 0.2205  loss_mask_7: 0.4197  loss_dice_7: 1.048  loss_ce_8: 0.2108  loss_mask_8: 0.4089  loss_dice_8: 1.03    time: 0.5549  last_time: 0.5359  data_time: 0.0154  last_data_time: 0.0171   lr: 0.0001  max_mem: 15466M
[08/15 14:20:53] d2.utils.events INFO:  eta: 0:04:03  iter: 559  total_loss: 17.02  loss_ce: 0.2102  loss_mask: 0.4081  loss_dice: 1.044  loss_ce_0: 0.2138  loss_mask_0: 0.4323  loss_dice_0: 1.14  loss_ce_1: 0.2436  loss_mask_1: 0.4253  loss_dice_1: 1.109  loss_ce_2: 0.2317  loss_mask_2: 0.4236  loss_dice_2: 1.05  loss_ce_3: 0.2163  loss_mask_3: 0.4218  loss_dice_3: 1.024  loss_ce_4: 0.214  loss_mask_4: 0.4078  loss_dice_4: 1.058  loss_ce_5: 0.2073  loss_mask_5: 0.4093  loss_dice_5: 1.044  loss_ce_6: 0.2188  loss_mask_6: 0.4157  loss_dice_6: 1.022  loss_ce_7: 0.1927  loss_mask_7: 0.4195  loss_dice_7: 1.026  loss_ce_8: 0.2022  loss_mask_8: 0.4119  loss_dice_8: 1.036    time: 0.5552  last_time: 0.5257  data_time: 0.0146  last_data_time: 0.0124   lr: 0.0001  max_mem: 15466M
[08/15 14:21:04] d2.utils.events INFO:  eta: 0:03:52  iter: 579  total_loss: 16.61  loss_ce: 0.1805  loss_mask: 0.4087  loss_dice: 1.014  loss_ce_0: 0.2041  loss_mask_0: 0.4601  loss_dice_0: 1.122  loss_ce_1: 0.2106  loss_mask_1: 0.4333  loss_dice_1: 1.097  loss_ce_2: 0.2064  loss_mask_2: 0.4253  loss_dice_2: 1.041  loss_ce_3: 0.2009  loss_mask_3: 0.427  loss_dice_3: 1.028  loss_ce_4: 0.1796  loss_mask_4: 0.4244  loss_dice_4: 1.023  loss_ce_5: 0.1795  loss_mask_5: 0.4185  loss_dice_5: 1.023  loss_ce_6: 0.1811  loss_mask_6: 0.4162  loss_dice_6: 1.018  loss_ce_7: 0.1689  loss_mask_7: 0.4146  loss_dice_7: 1.011  loss_ce_8: 0.1659  loss_mask_8: 0.4117  loss_dice_8: 1.014    time: 0.5548  last_time: 0.5264  data_time: 0.0131  last_data_time: 0.0151   lr: 0.0001  max_mem: 15466M
[08/15 14:21:15] d2.utils.events INFO:  eta: 0:03:41  iter: 599  total_loss: 16.55  loss_ce: 0.1828  loss_mask: 0.4121  loss_dice: 0.979  loss_ce_0: 0.1911  loss_mask_0: 0.4649  loss_dice_0: 1.187  loss_ce_1: 0.2124  loss_mask_1: 0.4446  loss_dice_1: 1.092  loss_ce_2: 0.2326  loss_mask_2: 0.4267  loss_dice_2: 1.031  loss_ce_3: 0.2161  loss_mask_3: 0.4247  loss_dice_3: 1.006  loss_ce_4: 0.2061  loss_mask_4: 0.4218  loss_dice_4: 1.011  loss_ce_5: 0.2226  loss_mask_5: 0.4246  loss_dice_5: 0.9982  loss_ce_6: 0.1825  loss_mask_6: 0.4122  loss_dice_6: 0.9846  loss_ce_7: 0.1856  loss_mask_7: 0.4149  loss_dice_7: 0.995  loss_ce_8: 0.1888  loss_mask_8: 0.4093  loss_dice_8: 0.9804    time: 0.5547  last_time: 0.5469  data_time: 0.0153  last_data_time: 0.0162   lr: 0.0001  max_mem: 15466M
[08/15 14:21:27] d2.utils.events INFO:  eta: 0:03:30  iter: 619  total_loss: 16.27  loss_ce: 0.1775  loss_mask: 0.4162  loss_dice: 0.9795  loss_ce_0: 0.1672  loss_mask_0: 0.4607  loss_dice_0: 1.116  loss_ce_1: 0.1902  loss_mask_1: 0.4323  loss_dice_1: 1.044  loss_ce_2: 0.1849  loss_mask_2: 0.4249  loss_dice_2: 1.036  loss_ce_3: 0.1724  loss_mask_3: 0.4188  loss_dice_3: 0.9975  loss_ce_4: 0.1701  loss_mask_4: 0.4243  loss_dice_4: 1.011  loss_ce_5: 0.178  loss_mask_5: 0.4187  loss_dice_5: 1.01  loss_ce_6: 0.1705  loss_mask_6: 0.4164  loss_dice_6: 0.9982  loss_ce_7: 0.1665  loss_mask_7: 0.4188  loss_dice_7: 0.9948  loss_ce_8: 0.1682  loss_mask_8: 0.4161  loss_dice_8: 0.9783    time: 0.5549  last_time: 0.5601  data_time: 0.0148  last_data_time: 0.0139   lr: 0.0001  max_mem: 15466M
[08/15 14:21:38] d2.utils.events INFO:  eta: 0:03:19  iter: 639  total_loss: 16.4  loss_ce: 0.1865  loss_mask: 0.4012  loss_dice: 0.9783  loss_ce_0: 0.1744  loss_mask_0: 0.4421  loss_dice_0: 1.168  loss_ce_1: 0.2088  loss_mask_1: 0.405  loss_dice_1: 1.073  loss_ce_2: 0.2153  loss_mask_2: 0.3966  loss_dice_2: 1.012  loss_ce_3: 0.1999  loss_mask_3: 0.3952  loss_dice_3: 0.9984  loss_ce_4: 0.195  loss_mask_4: 0.3934  loss_dice_4: 1.02  loss_ce_5: 0.1907  loss_mask_5: 0.392  loss_dice_5: 1.026  loss_ce_6: 0.1805  loss_mask_6: 0.3989  loss_dice_6: 0.9805  loss_ce_7: 0.1983  loss_mask_7: 0.4033  loss_dice_7: 1.005  loss_ce_8: 0.1669  loss_mask_8: 0.4039  loss_dice_8: 0.9978    time: 0.5551  last_time: 0.5425  data_time: 0.0142  last_data_time: 0.0157   lr: 0.0001  max_mem: 15466M
[08/15 14:21:49] d2.utils.events INFO:  eta: 0:03:08  iter: 659  total_loss: 16.02  loss_ce: 0.166  loss_mask: 0.3921  loss_dice: 1.008  loss_ce_0: 0.1708  loss_mask_0: 0.4176  loss_dice_0: 1.118  loss_ce_1: 0.1811  loss_mask_1: 0.4067  loss_dice_1: 1.069  loss_ce_2: 0.188  loss_mask_2: 0.3933  loss_dice_2: 1.037  loss_ce_3: 0.1683  loss_mask_3: 0.3946  loss_dice_3: 1.023  loss_ce_4: 0.196  loss_mask_4: 0.39  loss_dice_4: 1.043  loss_ce_5: 0.1857  loss_mask_5: 0.3906  loss_dice_5: 1.028  loss_ce_6: 0.2012  loss_mask_6: 0.3924  loss_dice_6: 1.007  loss_ce_7: 0.1912  loss_mask_7: 0.3909  loss_dice_7: 1.002  loss_ce_8: 0.1861  loss_mask_8: 0.3884  loss_dice_8: 1.007    time: 0.5549  last_time: 0.5775  data_time: 0.0144  last_data_time: 0.0117   lr: 0.0001  max_mem: 15466M
[08/15 14:22:00] d2.utils.events INFO:  eta: 0:02:57  iter: 679  total_loss: 15.15  loss_ce: 0.1631  loss_mask: 0.3946  loss_dice: 0.9196  loss_ce_0: 0.1577  loss_mask_0: 0.4247  loss_dice_0: 1.068  loss_ce_1: 0.1909  loss_mask_1: 0.3935  loss_dice_1: 0.9848  loss_ce_2: 0.1881  loss_mask_2: 0.396  loss_dice_2: 0.9855  loss_ce_3: 0.1924  loss_mask_3: 0.3913  loss_dice_3: 0.9401  loss_ce_4: 0.1668  loss_mask_4: 0.4008  loss_dice_4: 0.9517  loss_ce_5: 0.1769  loss_mask_5: 0.3831  loss_dice_5: 0.9613  loss_ce_6: 0.1723  loss_mask_6: 0.3831  loss_dice_6: 0.9317  loss_ce_7: 0.1753  loss_mask_7: 0.3952  loss_dice_7: 0.9228  loss_ce_8: 0.1731  loss_mask_8: 0.3925  loss_dice_8: 0.9335    time: 0.5550  last_time: 0.5634  data_time: 0.0144  last_data_time: 0.0150   lr: 0.0001  max_mem: 15466M
[08/15 14:22:11] d2.utils.events INFO:  eta: 0:02:46  iter: 699  total_loss: 16.76  loss_ce: 0.1816  loss_mask: 0.4005  loss_dice: 1.022  loss_ce_0: 0.1696  loss_mask_0: 0.4405  loss_dice_0: 1.121  loss_ce_1: 0.1945  loss_mask_1: 0.4245  loss_dice_1: 1.078  loss_ce_2: 0.2088  loss_mask_2: 0.4085  loss_dice_2: 1.058  loss_ce_3: 0.2068  loss_mask_3: 0.3966  loss_dice_3: 1.025  loss_ce_4: 0.1968  loss_mask_4: 0.396  loss_dice_4: 1.015  loss_ce_5: 0.2033  loss_mask_5: 0.3927  loss_dice_5: 1.003  loss_ce_6: 0.179  loss_mask_6: 0.4  loss_dice_6: 1.014  loss_ce_7: 0.1886  loss_mask_7: 0.3982  loss_dice_7: 1.004  loss_ce_8: 0.1807  loss_mask_8: 0.4  loss_dice_8: 0.9936    time: 0.5552  last_time: 0.5476  data_time: 0.0157  last_data_time: 0.0165   lr: 0.0001  max_mem: 15466M
[08/15 14:22:23] d2.utils.events INFO:  eta: 0:02:34  iter: 719  total_loss: 15.66  loss_ce: 0.186  loss_mask: 0.4225  loss_dice: 0.9595  loss_ce_0: 0.2071  loss_mask_0: 0.4348  loss_dice_0: 1.096  loss_ce_1: 0.2447  loss_mask_1: 0.4188  loss_dice_1: 1.034  loss_ce_2: 0.235  loss_mask_2: 0.4155  loss_dice_2: 1.016  loss_ce_3: 0.2237  loss_mask_3: 0.4025  loss_dice_3: 0.9568  loss_ce_4: 0.1969  loss_mask_4: 0.3965  loss_dice_4: 0.9988  loss_ce_5: 0.1824  loss_mask_5: 0.4073  loss_dice_5: 0.9782  loss_ce_6: 0.206  loss_mask_6: 0.4186  loss_dice_6: 0.9599  loss_ce_7: 0.1818  loss_mask_7: 0.4241  loss_dice_7: 0.977  loss_ce_8: 0.1796  loss_mask_8: 0.4218  loss_dice_8: 0.9672    time: 0.5553  last_time: 0.5579  data_time: 0.0143  last_data_time: 0.0125   lr: 0.0001  max_mem: 15466M
[08/15 14:22:33] d2.utils.events INFO:  eta: 0:02:23  iter: 739  total_loss: 15.78  loss_ce: 0.1948  loss_mask: 0.4096  loss_dice: 0.9758  loss_ce_0: 0.2111  loss_mask_0: 0.4505  loss_dice_0: 1.116  loss_ce_1: 0.2293  loss_mask_1: 0.4161  loss_dice_1: 1.078  loss_ce_2: 0.2306  loss_mask_2: 0.4053  loss_dice_2: 1.031  loss_ce_3: 0.2115  loss_mask_3: 0.4094  loss_dice_3: 0.9889  loss_ce_4: 0.1908  loss_mask_4: 0.411  loss_dice_4: 0.9775  loss_ce_5: 0.2083  loss_mask_5: 0.4108  loss_dice_5: 0.98  loss_ce_6: 0.2043  loss_mask_6: 0.4101  loss_dice_6: 0.9744  loss_ce_7: 0.202  loss_mask_7: 0.4079  loss_dice_7: 0.9686  loss_ce_8: 0.1808  loss_mask_8: 0.4067  loss_dice_8: 0.9676    time: 0.5549  last_time: 0.5371  data_time: 0.0143  last_data_time: 0.0127   lr: 0.0001  max_mem: 15466M
[08/15 14:22:45] d2.utils.events INFO:  eta: 0:02:12  iter: 759  total_loss: 14.88  loss_ce: 0.1806  loss_mask: 0.3583  loss_dice: 0.925  loss_ce_0: 0.1744  loss_mask_0: 0.3913  loss_dice_0: 1.037  loss_ce_1: 0.2186  loss_mask_1: 0.3675  loss_dice_1: 0.9735  loss_ce_2: 0.2039  loss_mask_2: 0.3567  loss_dice_2: 0.9704  loss_ce_3: 0.1538  loss_mask_3: 0.3592  loss_dice_3: 0.9522  loss_ce_4: 0.1579  loss_mask_4: 0.3545  loss_dice_4: 0.9392  loss_ce_5: 0.1456  loss_mask_5: 0.3551  loss_dice_5: 0.9488  loss_ce_6: 0.1536  loss_mask_6: 0.3543  loss_dice_6: 0.9338  loss_ce_7: 0.1701  loss_mask_7: 0.3533  loss_dice_7: 0.9371  loss_ce_8: 0.1873  loss_mask_8: 0.3568  loss_dice_8: 0.9397    time: 0.5550  last_time: 0.5657  data_time: 0.0135  last_data_time: 0.0165   lr: 0.0001  max_mem: 15466M
[08/15 14:22:56] d2.utils.events INFO:  eta: 0:02:01  iter: 779  total_loss: 15.77  loss_ce: 0.1732  loss_mask: 0.3888  loss_dice: 0.9682  loss_ce_0: 0.1749  loss_mask_0: 0.408  loss_dice_0: 1.103  loss_ce_1: 0.1672  loss_mask_1: 0.4115  loss_dice_1: 1.038  loss_ce_2: 0.1875  loss_mask_2: 0.3955  loss_dice_2: 0.9946  loss_ce_3: 0.1906  loss_mask_3: 0.3956  loss_dice_3: 0.9954  loss_ce_4: 0.1682  loss_mask_4: 0.3963  loss_dice_4: 0.9509  loss_ce_5: 0.1673  loss_mask_5: 0.3956  loss_dice_5: 0.9831  loss_ce_6: 0.1642  loss_mask_6: 0.3895  loss_dice_6: 0.9597  loss_ce_7: 0.1657  loss_mask_7: 0.3869  loss_dice_7: 0.9569  loss_ce_8: 0.1734  loss_mask_8: 0.3851  loss_dice_8: 0.9717    time: 0.5553  last_time: 0.5422  data_time: 0.0152  last_data_time: 0.0135   lr: 0.0001  max_mem: 15466M
[08/15 14:23:07] d2.utils.events INFO:  eta: 0:01:50  iter: 799  total_loss: 15.36  loss_ce: 0.1966  loss_mask: 0.3651  loss_dice: 0.9372  loss_ce_0: 0.1666  loss_mask_0: 0.4024  loss_dice_0: 1.085  loss_ce_1: 0.2177  loss_mask_1: 0.3806  loss_dice_1: 1.004  loss_ce_2: 0.2029  loss_mask_2: 0.3697  loss_dice_2: 0.9703  loss_ce_3: 0.2226  loss_mask_3: 0.3599  loss_dice_3: 0.9475  loss_ce_4: 0.2127  loss_mask_4: 0.3591  loss_dice_4: 0.9556  loss_ce_5: 0.2016  loss_mask_5: 0.3598  loss_dice_5: 0.9444  loss_ce_6: 0.2159  loss_mask_6: 0.3601  loss_dice_6: 0.9336  loss_ce_7: 0.195  loss_mask_7: 0.3657  loss_dice_7: 0.9353  loss_ce_8: 0.193  loss_mask_8: 0.3688  loss_dice_8: 0.9139    time: 0.5548  last_time: 0.5171  data_time: 0.0133  last_data_time: 0.0138   lr: 0.0001  max_mem: 15466M
[08/15 14:23:18] d2.utils.events INFO:  eta: 0:01:39  iter: 819  total_loss: 15.93  loss_ce: 0.1942  loss_mask: 0.3703  loss_dice: 0.9674  loss_ce_0: 0.1764  loss_mask_0: 0.4147  loss_dice_0: 1.075  loss_ce_1: 0.207  loss_mask_1: 0.3917  loss_dice_1: 1.017  loss_ce_2: 0.1961  loss_mask_2: 0.3764  loss_dice_2: 0.9975  loss_ce_3: 0.1973  loss_mask_3: 0.3788  loss_dice_3: 1.016  loss_ce_4: 0.2141  loss_mask_4: 0.3682  loss_dice_4: 1.002  loss_ce_5: 0.1807  loss_mask_5: 0.372  loss_dice_5: 0.98  loss_ce_6: 0.1737  loss_mask_6: 0.3695  loss_dice_6: 0.9602  loss_ce_7: 0.1803  loss_mask_7: 0.3698  loss_dice_7: 0.9547  loss_ce_8: 0.1876  loss_mask_8: 0.3691  loss_dice_8: 0.9658    time: 0.5548  last_time: 0.5956  data_time: 0.0146  last_data_time: 0.0157   lr: 0.0001  max_mem: 15466M
[08/15 14:23:29] d2.utils.events INFO:  eta: 0:01:28  iter: 839  total_loss: 15.54  loss_ce: 0.199  loss_mask: 0.3767  loss_dice: 0.9488  loss_ce_0: 0.2053  loss_mask_0: 0.4277  loss_dice_0: 1.125  loss_ce_1: 0.2187  loss_mask_1: 0.3848  loss_dice_1: 1.035  loss_ce_2: 0.2214  loss_mask_2: 0.3846  loss_dice_2: 0.9997  loss_ce_3: 0.2087  loss_mask_3: 0.3751  loss_dice_3: 0.9549  loss_ce_4: 0.2146  loss_mask_4: 0.3799  loss_dice_4: 0.9637  loss_ce_5: 0.1931  loss_mask_5: 0.3778  loss_dice_5: 0.9566  loss_ce_6: 0.186  loss_mask_6: 0.3818  loss_dice_6: 0.946  loss_ce_7: 0.1851  loss_mask_7: 0.3785  loss_dice_7: 0.9491  loss_ce_8: 0.1911  loss_mask_8: 0.3796  loss_dice_8: 0.9618    time: 0.5549  last_time: 0.5505  data_time: 0.0164  last_data_time: 0.0163   lr: 0.0001  max_mem: 15466M
[08/15 14:23:40] d2.utils.events INFO:  eta: 0:01:17  iter: 859  total_loss: 15.75  loss_ce: 0.1949  loss_mask: 0.3816  loss_dice: 0.9612  loss_ce_0: 0.2012  loss_mask_0: 0.4395  loss_dice_0: 1.08  loss_ce_1: 0.2066  loss_mask_1: 0.3936  loss_dice_1: 1.042  loss_ce_2: 0.1975  loss_mask_2: 0.3855  loss_dice_2: 0.9959  loss_ce_3: 0.1848  loss_mask_3: 0.3873  loss_dice_3: 0.9612  loss_ce_4: 0.1836  loss_mask_4: 0.3831  loss_dice_4: 0.9651  loss_ce_5: 0.1777  loss_mask_5: 0.3833  loss_dice_5: 0.9632  loss_ce_6: 0.1832  loss_mask_6: 0.3804  loss_dice_6: 0.9617  loss_ce_7: 0.1931  loss_mask_7: 0.3776  loss_dice_7: 0.9362  loss_ce_8: 0.182  loss_mask_8: 0.3839  loss_dice_8: 0.9552    time: 0.5546  last_time: 0.5268  data_time: 0.0135  last_data_time: 0.0130   lr: 0.0001  max_mem: 15466M
[08/15 14:23:51] d2.utils.events INFO:  eta: 0:01:06  iter: 879  total_loss: 16.15  loss_ce: 0.1738  loss_mask: 0.3792  loss_dice: 1.001  loss_ce_0: 0.1878  loss_mask_0: 0.4384  loss_dice_0: 1.127  loss_ce_1: 0.1984  loss_mask_1: 0.4058  loss_dice_1: 1.084  loss_ce_2: 0.1742  loss_mask_2: 0.4079  loss_dice_2: 1.058  loss_ce_3: 0.1881  loss_mask_3: 0.3934  loss_dice_3: 1.024  loss_ce_4: 0.1833  loss_mask_4: 0.3864  loss_dice_4: 1.015  loss_ce_5: 0.1665  loss_mask_5: 0.3738  loss_dice_5: 1.023  loss_ce_6: 0.1619  loss_mask_6: 0.3791  loss_dice_6: 1.001  loss_ce_7: 0.1732  loss_mask_7: 0.3782  loss_dice_7: 1.025  loss_ce_8: 0.1466  loss_mask_8: 0.378  loss_dice_8: 1.002    time: 0.5545  last_time: 0.5727  data_time: 0.0146  last_data_time: 0.0157   lr: 0.0001  max_mem: 15466M
[08/15 14:24:02] d2.utils.events INFO:  eta: 0:00:55  iter: 899  total_loss: 14.52  loss_ce: 0.1256  loss_mask: 0.3707  loss_dice: 0.9221  loss_ce_0: 0.1482  loss_mask_0: 0.3945  loss_dice_0: 1.021  loss_ce_1: 0.1628  loss_mask_1: 0.3928  loss_dice_1: 0.9951  loss_ce_2: 0.1579  loss_mask_2: 0.3633  loss_dice_2: 0.9636  loss_ce_3: 0.1605  loss_mask_3: 0.3599  loss_dice_3: 0.9236  loss_ce_4: 0.1617  loss_mask_4: 0.3619  loss_dice_4: 0.9308  loss_ce_5: 0.1299  loss_mask_5: 0.3505  loss_dice_5: 0.9349  loss_ce_6: 0.1343  loss_mask_6: 0.3581  loss_dice_6: 0.9233  loss_ce_7: 0.1384  loss_mask_7: 0.3628  loss_dice_7: 0.936  loss_ce_8: 0.1315  loss_mask_8: 0.358  loss_dice_8: 0.9184    time: 0.5543  last_time: 0.5469  data_time: 0.0137  last_data_time: 0.0165   lr: 0.0001  max_mem: 15466M
[08/15 14:24:13] d2.utils.events INFO:  eta: 0:00:44  iter: 919  total_loss: 15.59  loss_ce: 0.1984  loss_mask: 0.3747  loss_dice: 0.9697  loss_ce_0: 0.1732  loss_mask_0: 0.4195  loss_dice_0: 1.071  loss_ce_1: 0.2149  loss_mask_1: 0.3804  loss_dice_1: 1.02  loss_ce_2: 0.2054  loss_mask_2: 0.3754  loss_dice_2: 0.9788  loss_ce_3: 0.2045  loss_mask_3: 0.3725  loss_dice_3: 1  loss_ce_4: 0.2008  loss_mask_4: 0.3756  loss_dice_4: 0.9615  loss_ce_5: 0.2014  loss_mask_5: 0.3679  loss_dice_5: 0.961  loss_ce_6: 0.1979  loss_mask_6: 0.371  loss_dice_6: 0.9615  loss_ce_7: 0.2068  loss_mask_7: 0.3681  loss_dice_7: 0.9562  loss_ce_8: 0.1913  loss_mask_8: 0.3716  loss_dice_8: 0.9391    time: 0.5542  last_time: 0.5393  data_time: 0.0152  last_data_time: 0.0160   lr: 0.0001  max_mem: 15466M
[08/15 14:24:24] d2.utils.events INFO:  eta: 0:00:33  iter: 939  total_loss: 15.82  loss_ce: 0.1772  loss_mask: 0.3885  loss_dice: 0.9915  loss_ce_0: 0.1724  loss_mask_0: 0.429  loss_dice_0: 1.105  loss_ce_1: 0.1836  loss_mask_1: 0.3999  loss_dice_1: 1.036  loss_ce_2: 0.2218  loss_mask_2: 0.3934  loss_dice_2: 1.021  loss_ce_3: 0.1942  loss_mask_3: 0.3878  loss_dice_3: 1.004  loss_ce_4: 0.1915  loss_mask_4: 0.388  loss_dice_4: 1.009  loss_ce_5: 0.1833  loss_mask_5: 0.3857  loss_dice_5: 0.9859  loss_ce_6: 0.1706  loss_mask_6: 0.3812  loss_dice_6: 0.9826  loss_ce_7: 0.1886  loss_mask_7: 0.3916  loss_dice_7: 0.9886  loss_ce_8: 0.1704  loss_mask_8: 0.3949  loss_dice_8: 0.986    time: 0.5542  last_time: 0.6063  data_time: 0.0155  last_data_time: 0.0139   lr: 0.0001  max_mem: 15466M
[08/15 14:24:35] d2.utils.events INFO:  eta: 0:00:22  iter: 959  total_loss: 15.05  loss_ce: 0.1639  loss_mask: 0.3829  loss_dice: 0.9442  loss_ce_0: 0.1733  loss_mask_0: 0.4172  loss_dice_0: 1.043  loss_ce_1: 0.2311  loss_mask_1: 0.3897  loss_dice_1: 0.983  loss_ce_2: 0.1764  loss_mask_2: 0.3803  loss_dice_2: 0.9581  loss_ce_3: 0.181  loss_mask_3: 0.3744  loss_dice_3: 0.9564  loss_ce_4: 0.1946  loss_mask_4: 0.3807  loss_dice_4: 0.951  loss_ce_5: 0.1751  loss_mask_5: 0.3737  loss_dice_5: 0.9478  loss_ce_6: 0.1672  loss_mask_6: 0.3721  loss_dice_6: 0.96  loss_ce_7: 0.1889  loss_mask_7: 0.3741  loss_dice_7: 0.9341  loss_ce_8: 0.1626  loss_mask_8: 0.3774  loss_dice_8: 0.9588    time: 0.5540  last_time: 0.5120  data_time: 0.0145  last_data_time: 0.0160   lr: 0.0001  max_mem: 15466M
[08/15 14:24:47] d2.utils.events INFO:  eta: 0:00:11  iter: 979  total_loss: 15.28  loss_ce: 0.1454  loss_mask: 0.3673  loss_dice: 0.9631  loss_ce_0: 0.1919  loss_mask_0: 0.3978  loss_dice_0: 1.044  loss_ce_1: 0.2123  loss_mask_1: 0.384  loss_dice_1: 1.007  loss_ce_2: 0.2032  loss_mask_2: 0.3846  loss_dice_2: 0.9663  loss_ce_3: 0.1859  loss_mask_3: 0.375  loss_dice_3: 0.9389  loss_ce_4: 0.1707  loss_mask_4: 0.3761  loss_dice_4: 0.973  loss_ce_5: 0.1685  loss_mask_5: 0.3729  loss_dice_5: 0.9677  loss_ce_6: 0.1773  loss_mask_6: 0.3711  loss_dice_6: 0.9628  loss_ce_7: 0.1714  loss_mask_7: 0.3705  loss_dice_7: 0.9568  loss_ce_8: 0.1641  loss_mask_8: 0.3706  loss_dice_8: 0.9697    time: 0.5539  last_time: 0.5904  data_time: 0.0146  last_data_time: 0.0140   lr: 0.0001  max_mem: 15466M
[08/15 14:24:58] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/Normal/008_10000/model_final.pth
[08/15 14:25:02] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 15.45  loss_ce: 0.1619  loss_mask: 0.3789  loss_dice: 0.9612  loss_ce_0: 0.1553  loss_mask_0: 0.416  loss_dice_0: 1.082  loss_ce_1: 0.2059  loss_mask_1: 0.3962  loss_dice_1: 0.9796  loss_ce_2: 0.1816  loss_mask_2: 0.3951  loss_dice_2: 0.9695  loss_ce_3: 0.1709  loss_mask_3: 0.3884  loss_dice_3: 0.9585  loss_ce_4: 0.1643  loss_mask_4: 0.386  loss_dice_4: 0.9643  loss_ce_5: 0.1477  loss_mask_5: 0.3827  loss_dice_5: 0.9668  loss_ce_6: 0.1675  loss_mask_6: 0.3812  loss_dice_6: 0.9486  loss_ce_7: 0.1632  loss_mask_7: 0.3762  loss_dice_7: 0.9353  loss_ce_8: 0.1644  loss_mask_8: 0.3813  loss_dice_8: 0.9157    time: 0.5538  last_time: 0.5736  data_time: 0.0152  last_data_time: 0.0155   lr: 0.0001  max_mem: 15466M
[08/15 14:25:02] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:09:12 (0.5538 s / it)
[08/15 14:25:02] d2.engine.hooks INFO: Total training time: 0:09:20 (0:00:07 on hooks)
[08/15 14:25:02] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/15 14:25:02] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/15 14:25:02] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/15 14:25:02] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/15 14:25:02] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/15 14:25:02] d2.evaluation.evaluator INFO: Start inference on 250 batches
[08/15 14:25:09] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0027 s/iter. Inference: 0.2176 s/iter. Eval: 0.0830 s/iter. Total: 0.3032 s/iter. ETA=0:01:12
[08/15 14:25:14] d2.evaluation.evaluator INFO: Inference done 28/250. Dataloading: 0.0035 s/iter. Inference: 0.2260 s/iter. Eval: 0.0781 s/iter. Total: 0.3077 s/iter. ETA=0:01:08
[08/15 14:25:19] d2.evaluation.evaluator INFO: Inference done 45/250. Dataloading: 0.0036 s/iter. Inference: 0.2283 s/iter. Eval: 0.0750 s/iter. Total: 0.3070 s/iter. ETA=0:01:02
[08/15 14:25:24] d2.evaluation.evaluator INFO: Inference done 63/250. Dataloading: 0.0036 s/iter. Inference: 0.2246 s/iter. Eval: 0.0723 s/iter. Total: 0.3006 s/iter. ETA=0:00:56
[08/15 14:25:29] d2.evaluation.evaluator INFO: Inference done 82/250. Dataloading: 0.0035 s/iter. Inference: 0.2213 s/iter. Eval: 0.0696 s/iter. Total: 0.2944 s/iter. ETA=0:00:49
[08/15 14:25:35] d2.evaluation.evaluator INFO: Inference done 100/250. Dataloading: 0.0034 s/iter. Inference: 0.2217 s/iter. Eval: 0.0684 s/iter. Total: 0.2936 s/iter. ETA=0:00:44
[08/15 14:25:40] d2.evaluation.evaluator INFO: Inference done 118/250. Dataloading: 0.0034 s/iter. Inference: 0.2222 s/iter. Eval: 0.0676 s/iter. Total: 0.2932 s/iter. ETA=0:00:38
[08/15 14:25:45] d2.evaluation.evaluator INFO: Inference done 135/250. Dataloading: 0.0034 s/iter. Inference: 0.2234 s/iter. Eval: 0.0680 s/iter. Total: 0.2949 s/iter. ETA=0:00:33
[08/15 14:25:50] d2.evaluation.evaluator INFO: Inference done 153/250. Dataloading: 0.0034 s/iter. Inference: 0.2234 s/iter. Eval: 0.0677 s/iter. Total: 0.2946 s/iter. ETA=0:00:28
[08/15 14:25:56] d2.evaluation.evaluator INFO: Inference done 169/250. Dataloading: 0.0034 s/iter. Inference: 0.2256 s/iter. Eval: 0.0680 s/iter. Total: 0.2971 s/iter. ETA=0:00:24
[08/15 14:26:01] d2.evaluation.evaluator INFO: Inference done 186/250. Dataloading: 0.0035 s/iter. Inference: 0.2259 s/iter. Eval: 0.0689 s/iter. Total: 0.2983 s/iter. ETA=0:00:19
[08/15 14:26:06] d2.evaluation.evaluator INFO: Inference done 204/250. Dataloading: 0.0035 s/iter. Inference: 0.2253 s/iter. Eval: 0.0687 s/iter. Total: 0.2976 s/iter. ETA=0:00:13
[08/15 14:26:11] d2.evaluation.evaluator INFO: Inference done 221/250. Dataloading: 0.0035 s/iter. Inference: 0.2257 s/iter. Eval: 0.0684 s/iter. Total: 0.2976 s/iter. ETA=0:00:08
[08/15 14:26:16] d2.evaluation.evaluator INFO: Inference done 238/250. Dataloading: 0.0035 s/iter. Inference: 0.2252 s/iter. Eval: 0.0687 s/iter. Total: 0.2974 s/iter. ETA=0:00:03
[08/15 14:26:20] d2.evaluation.evaluator INFO: Total inference time: 0:01:13.198023 (0.298767 s / iter per device, on 2 devices)
[08/15 14:26:20] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:00:55 (0.224996 s / iter per device, on 2 devices)
[08/15 14:26:20] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalg6udt_rw ...
[08/15 14:26:36] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 37.478 | 47.098 | 45.129 |      19       |
| Things | 0.000  | 0.000  | 0.000  |       8       |
| Stuff  | 64.734 | 81.352 | 77.950 |      11       |
[08/15 14:26:36] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.070 | 97.372 | 99.690 |     Stuff     |
| class_8  | 72.865 | 84.336 | 86.398 |     Stuff     |
| class_11 | 87.963 | 89.609 | 98.163 |     Stuff     |
| class_12 | 44.650 | 78.912 | 56.583 |     Stuff     |
| class_13 | 38.371 | 75.899 | 50.556 |     Stuff     |
| class_17 | 49.433 | 65.308 | 75.692 |     Stuff     |
| class_19 | 46.892 | 68.434 | 68.522 |     Stuff     |
| class_20 | 65.870 | 77.650 | 84.829 |     Stuff     |
| class_21 | 89.465 | 90.302 | 99.073 |     Stuff     |
| class_22 | 32.142 | 75.410 | 42.623 |     Stuff     |
| class_23 | 87.353 | 91.637 | 95.325 |     Stuff     |
| class_24 | 0.000  | 0.000  | 0.000  |    Things     |
| class_25 | 0.000  | 0.000  | 0.000  |    Things     |
| class_26 | 0.000  | 0.000  | 0.000  |    Things     |
| class_27 | 0.000  | 0.000  | 0.000  |    Things     |
| class_28 | 0.000  | 0.000  | 0.000  |    Things     |
| class_31 | 0.000  | 0.000  | 0.000  |    Things     |
| class_32 | 0.000  | 0.000  | 0.000  |    Things     |
| class_33 | 0.000  | 0.000  | 0.000  |    Things     |
[08/15 14:26:36] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/15 14:26:36] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/15 14:26:36] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/15 14:26:36] d2.evaluation.testing INFO: copypaste: 37.4776,47.0983,45.1291,0.0000,0.0000,0.0000,64.7340,81.3517,77.9503,97.0697,97.3718,99.6898,72.8649,84.3361,86.3983,87.9634,89.6092,98.1633,44.6504,78.9118,56.5826,38.3712,75.8992,50.5556,49.4331,65.3080,75.6923,46.8919,68.4336,68.5217,65.8700,77.6503,84.8291,89.4648,90.3018,99.0731,32.1418,75.4097,42.6230,87.3531,91.6371,95.3250,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.0000
