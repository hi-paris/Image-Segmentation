[09/13 09:16:24] detectron2 INFO: Rank of current process: 0. World size: 2
[09/13 09:16:25] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/13 09:16:25] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[09/13 09:16:25] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[09/13 09:16:25] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/13 09:16:25] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19/config.yaml
[09/13 09:16:25] d2.utils.env INFO: Using a generated random seed 27157440
[09/13 09:16:29] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/13 09:16:29] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/13 09:16:29] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/13 09:16:29] d2.data.build INFO: Using training sampler TrainingSampler
[09/13 09:16:30] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/13 09:16:30] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/13 09:16:30] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/13 09:16:30] d2.data.build INFO: Making batched data loader with batch_size=4
[09/13 09:16:30] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/13 09:16:30] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/13 09:16:30] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth ...
[09/13 09:16:41] d2.engine.train_loop INFO: Starting training from iteration 0
[09/13 09:17:00] d2.utils.events INFO:  eta: 0:11:11  iter: 19  total_loss: 20.32  loss_ce: 0.4759  loss_mask: 0.1734  loss_dice: 1.267  loss_ce_0: 0.6049  loss_mask_0: 0.2006  loss_dice_0: 1.502  loss_ce_1: 0.6821  loss_mask_1: 0.1858  loss_dice_1: 1.425  loss_ce_2: 0.6056  loss_mask_2: 0.1769  loss_dice_2: 1.373  loss_ce_3: 0.5594  loss_mask_3: 0.1748  loss_dice_3: 1.312  loss_ce_4: 0.5555  loss_mask_4: 0.1725  loss_dice_4: 1.3  loss_ce_5: 0.5268  loss_mask_5: 0.1716  loss_dice_5: 1.307  loss_ce_6: 0.5018  loss_mask_6: 0.1744  loss_dice_6: 1.243  loss_ce_7: 0.5346  loss_mask_7: 0.1712  loss_dice_7: 1.261  loss_ce_8: 0.5142  loss_mask_8: 0.1694  loss_dice_8: 1.275    time: 0.6806  last_time: 0.7144  data_time: 0.2507  last_data_time: 0.1037   lr: 0.0001  max_mem: 15973M
[09/13 09:17:14] d2.utils.events INFO:  eta: 0:10:50  iter: 39  total_loss: 20.18  loss_ce: 0.456  loss_mask: 0.1703  loss_dice: 1.303  loss_ce_0: 0.5306  loss_mask_0: 0.1989  loss_dice_0: 1.522  loss_ce_1: 0.6236  loss_mask_1: 0.1947  loss_dice_1: 1.422  loss_ce_2: 0.5618  loss_mask_2: 0.1824  loss_dice_2: 1.383  loss_ce_3: 0.5135  loss_mask_3: 0.1809  loss_dice_3: 1.314  loss_ce_4: 0.4977  loss_mask_4: 0.1731  loss_dice_4: 1.317  loss_ce_5: 0.5114  loss_mask_5: 0.1718  loss_dice_5: 1.286  loss_ce_6: 0.4888  loss_mask_6: 0.1733  loss_dice_6: 1.287  loss_ce_7: 0.4716  loss_mask_7: 0.1697  loss_dice_7: 1.273  loss_ce_8: 0.4659  loss_mask_8: 0.1719  loss_dice_8: 1.275    time: 0.6713  last_time: 0.6835  data_time: 0.0521  last_data_time: 0.0859   lr: 0.0001  max_mem: 16114M
[09/13 09:17:27] d2.utils.events INFO:  eta: 0:10:38  iter: 59  total_loss: 19.85  loss_ce: 0.4645  loss_mask: 0.1662  loss_dice: 1.269  loss_ce_0: 0.5764  loss_mask_0: 0.1943  loss_dice_0: 1.454  loss_ce_1: 0.6103  loss_mask_1: 0.1783  loss_dice_1: 1.391  loss_ce_2: 0.5747  loss_mask_2: 0.166  loss_dice_2: 1.34  loss_ce_3: 0.5177  loss_mask_3: 0.1641  loss_dice_3: 1.285  loss_ce_4: 0.5242  loss_mask_4: 0.163  loss_dice_4: 1.233  loss_ce_5: 0.5354  loss_mask_5: 0.1653  loss_dice_5: 1.249  loss_ce_6: 0.525  loss_mask_6: 0.1648  loss_dice_6: 1.251  loss_ce_7: 0.5186  loss_mask_7: 0.1648  loss_dice_7: 1.246  loss_ce_8: 0.5318  loss_mask_8: 0.1639  loss_dice_8: 1.245    time: 0.6718  last_time: 0.7011  data_time: 0.0456  last_data_time: 0.0458   lr: 0.0001  max_mem: 16114M
[09/13 09:17:40] d2.utils.events INFO:  eta: 0:10:23  iter: 79  total_loss: 20.43  loss_ce: 0.5057  loss_mask: 0.1599  loss_dice: 1.257  loss_ce_0: 0.6091  loss_mask_0: 0.1957  loss_dice_0: 1.487  loss_ce_1: 0.6574  loss_mask_1: 0.1837  loss_dice_1: 1.415  loss_ce_2: 0.5915  loss_mask_2: 0.1668  loss_dice_2: 1.337  loss_ce_3: 0.5245  loss_mask_3: 0.1674  loss_dice_3: 1.284  loss_ce_4: 0.546  loss_mask_4: 0.1632  loss_dice_4: 1.28  loss_ce_5: 0.5131  loss_mask_5: 0.1609  loss_dice_5: 1.289  loss_ce_6: 0.5082  loss_mask_6: 0.1625  loss_dice_6: 1.23  loss_ce_7: 0.4959  loss_mask_7: 0.1621  loss_dice_7: 1.235  loss_ce_8: 0.4913  loss_mask_8: 0.1611  loss_dice_8: 1.232    time: 0.6689  last_time: 0.6564  data_time: 0.0456  last_data_time: 0.0683   lr: 0.0001  max_mem: 16114M
[09/13 09:17:54] d2.utils.events INFO:  eta: 0:10:08  iter: 99  total_loss: 20.16  loss_ce: 0.4729  loss_mask: 0.1575  loss_dice: 1.294  loss_ce_0: 0.5932  loss_mask_0: 0.1913  loss_dice_0: 1.477  loss_ce_1: 0.6335  loss_mask_1: 0.1719  loss_dice_1: 1.382  loss_ce_2: 0.569  loss_mask_2: 0.1593  loss_dice_2: 1.34  loss_ce_3: 0.5288  loss_mask_3: 0.1608  loss_dice_3: 1.276  loss_ce_4: 0.5024  loss_mask_4: 0.158  loss_dice_4: 1.339  loss_ce_5: 0.52  loss_mask_5: 0.1577  loss_dice_5: 1.251  loss_ce_6: 0.4943  loss_mask_6: 0.1579  loss_dice_6: 1.239  loss_ce_7: 0.4774  loss_mask_7: 0.1573  loss_dice_7: 1.237  loss_ce_8: 0.4559  loss_mask_8: 0.1558  loss_dice_8: 1.244    time: 0.6684  last_time: 0.6407  data_time: 0.0512  last_data_time: 0.0551   lr: 0.0001  max_mem: 16258M
[09/13 09:18:07] d2.utils.events INFO:  eta: 0:09:54  iter: 119  total_loss: 19.29  loss_ce: 0.4501  loss_mask: 0.169  loss_dice: 1.237  loss_ce_0: 0.5607  loss_mask_0: 0.1969  loss_dice_0: 1.444  loss_ce_1: 0.6487  loss_mask_1: 0.1815  loss_dice_1: 1.366  loss_ce_2: 0.5546  loss_mask_2: 0.1759  loss_dice_2: 1.265  loss_ce_3: 0.5255  loss_mask_3: 0.1721  loss_dice_3: 1.224  loss_ce_4: 0.5201  loss_mask_4: 0.1725  loss_dice_4: 1.235  loss_ce_5: 0.5035  loss_mask_5: 0.1721  loss_dice_5: 1.213  loss_ce_6: 0.4709  loss_mask_6: 0.171  loss_dice_6: 1.208  loss_ce_7: 0.4555  loss_mask_7: 0.1704  loss_dice_7: 1.212  loss_ce_8: 0.463  loss_mask_8: 0.1706  loss_dice_8: 1.231    time: 0.6699  last_time: 0.6135  data_time: 0.0493  last_data_time: 0.0495   lr: 0.0001  max_mem: 16258M
[09/13 09:18:21] d2.utils.events INFO:  eta: 0:09:42  iter: 139  total_loss: 19.04  loss_ce: 0.451  loss_mask: 0.1639  loss_dice: 1.206  loss_ce_0: 0.58  loss_mask_0: 0.1873  loss_dice_0: 1.408  loss_ce_1: 0.6052  loss_mask_1: 0.1765  loss_dice_1: 1.35  loss_ce_2: 0.5863  loss_mask_2: 0.1645  loss_dice_2: 1.297  loss_ce_3: 0.5131  loss_mask_3: 0.1661  loss_dice_3: 1.241  loss_ce_4: 0.4984  loss_mask_4: 0.1675  loss_dice_4: 1.207  loss_ce_5: 0.478  loss_mask_5: 0.1635  loss_dice_5: 1.219  loss_ce_6: 0.4857  loss_mask_6: 0.1632  loss_dice_6: 1.241  loss_ce_7: 0.4506  loss_mask_7: 0.1637  loss_dice_7: 1.185  loss_ce_8: 0.4438  loss_mask_8: 0.1653  loss_dice_8: 1.208    time: 0.6724  last_time: 0.6414  data_time: 0.0545  last_data_time: 0.0354   lr: 0.0001  max_mem: 16258M
[09/13 09:18:34] d2.utils.events INFO:  eta: 0:09:26  iter: 159  total_loss: 19.39  loss_ce: 0.4405  loss_mask: 0.171  loss_dice: 1.229  loss_ce_0: 0.5802  loss_mask_0: 0.1968  loss_dice_0: 1.435  loss_ce_1: 0.6081  loss_mask_1: 0.1847  loss_dice_1: 1.338  loss_ce_2: 0.5709  loss_mask_2: 0.1858  loss_dice_2: 1.284  loss_ce_3: 0.5339  loss_mask_3: 0.1777  loss_dice_3: 1.232  loss_ce_4: 0.4961  loss_mask_4: 0.1747  loss_dice_4: 1.234  loss_ce_5: 0.4637  loss_mask_5: 0.1757  loss_dice_5: 1.233  loss_ce_6: 0.4662  loss_mask_6: 0.1731  loss_dice_6: 1.211  loss_ce_7: 0.4614  loss_mask_7: 0.1711  loss_dice_7: 1.194  loss_ce_8: 0.4599  loss_mask_8: 0.1739  loss_dice_8: 1.215    time: 0.6706  last_time: 0.5867  data_time: 0.0556  last_data_time: 0.0380   lr: 0.0001  max_mem: 16258M
[09/13 09:18:48] d2.utils.events INFO:  eta: 0:09:11  iter: 179  total_loss: 19.31  loss_ce: 0.4442  loss_mask: 0.1782  loss_dice: 1.202  loss_ce_0: 0.5701  loss_mask_0: 0.2099  loss_dice_0: 1.434  loss_ce_1: 0.6233  loss_mask_1: 0.1955  loss_dice_1: 1.334  loss_ce_2: 0.5877  loss_mask_2: 0.1894  loss_dice_2: 1.263  loss_ce_3: 0.5146  loss_mask_3: 0.1824  loss_dice_3: 1.217  loss_ce_4: 0.5086  loss_mask_4: 0.1783  loss_dice_4: 1.236  loss_ce_5: 0.4844  loss_mask_5: 0.1796  loss_dice_5: 1.233  loss_ce_6: 0.4597  loss_mask_6: 0.1802  loss_dice_6: 1.217  loss_ce_7: 0.4906  loss_mask_7: 0.1768  loss_dice_7: 1.218  loss_ce_8: 0.4416  loss_mask_8: 0.1779  loss_dice_8: 1.195    time: 0.6688  last_time: 0.6844  data_time: 0.0450  last_data_time: 0.0395   lr: 0.0001  max_mem: 16258M
[09/13 09:19:01] d2.utils.events INFO:  eta: 0:08:58  iter: 199  total_loss: 20.41  loss_ce: 0.4838  loss_mask: 0.1704  loss_dice: 1.248  loss_ce_0: 0.5802  loss_mask_0: 0.2006  loss_dice_0: 1.528  loss_ce_1: 0.6448  loss_mask_1: 0.1875  loss_dice_1: 1.401  loss_ce_2: 0.6048  loss_mask_2: 0.1789  loss_dice_2: 1.328  loss_ce_3: 0.5347  loss_mask_3: 0.1728  loss_dice_3: 1.317  loss_ce_4: 0.5067  loss_mask_4: 0.1717  loss_dice_4: 1.288  loss_ce_5: 0.5039  loss_mask_5: 0.1712  loss_dice_5: 1.264  loss_ce_6: 0.5041  loss_mask_6: 0.1705  loss_dice_6: 1.272  loss_ce_7: 0.4869  loss_mask_7: 0.1712  loss_dice_7: 1.269  loss_ce_8: 0.4689  loss_mask_8: 0.1704  loss_dice_8: 1.258    time: 0.6702  last_time: 0.7298  data_time: 0.0565  last_data_time: 0.0410   lr: 0.0001  max_mem: 17141M
[09/13 09:19:15] d2.utils.events INFO:  eta: 0:08:46  iter: 219  total_loss: 19.84  loss_ce: 0.4922  loss_mask: 0.154  loss_dice: 1.209  loss_ce_0: 0.5777  loss_mask_0: 0.1858  loss_dice_0: 1.428  loss_ce_1: 0.6622  loss_mask_1: 0.1728  loss_dice_1: 1.364  loss_ce_2: 0.627  loss_mask_2: 0.1611  loss_dice_2: 1.297  loss_ce_3: 0.5403  loss_mask_3: 0.1599  loss_dice_3: 1.246  loss_ce_4: 0.5505  loss_mask_4: 0.1615  loss_dice_4: 1.208  loss_ce_5: 0.5313  loss_mask_5: 0.1556  loss_dice_5: 1.202  loss_ce_6: 0.5097  loss_mask_6: 0.156  loss_dice_6: 1.198  loss_ce_7: 0.5085  loss_mask_7: 0.1547  loss_dice_7: 1.203  loss_ce_8: 0.5067  loss_mask_8: 0.1518  loss_dice_8: 1.205    time: 0.6718  last_time: 0.7354  data_time: 0.0574  last_data_time: 0.0483   lr: 0.0001  max_mem: 17141M
[09/13 09:19:29] d2.utils.events INFO:  eta: 0:08:35  iter: 239  total_loss: 19.33  loss_ce: 0.4391  loss_mask: 0.1695  loss_dice: 1.19  loss_ce_0: 0.5348  loss_mask_0: 0.2056  loss_dice_0: 1.393  loss_ce_1: 0.6005  loss_mask_1: 0.1852  loss_dice_1: 1.314  loss_ce_2: 0.558  loss_mask_2: 0.1768  loss_dice_2: 1.289  loss_ce_3: 0.5367  loss_mask_3: 0.1743  loss_dice_3: 1.217  loss_ce_4: 0.5034  loss_mask_4: 0.1726  loss_dice_4: 1.194  loss_ce_5: 0.479  loss_mask_5: 0.1773  loss_dice_5: 1.19  loss_ce_6: 0.4446  loss_mask_6: 0.1741  loss_dice_6: 1.179  loss_ce_7: 0.4613  loss_mask_7: 0.1705  loss_dice_7: 1.236  loss_ce_8: 0.4629  loss_mask_8: 0.1734  loss_dice_8: 1.197    time: 0.6736  last_time: 0.7526  data_time: 0.0669  last_data_time: 0.0878   lr: 0.0001  max_mem: 17141M
[09/13 09:19:42] d2.utils.events INFO:  eta: 0:08:21  iter: 259  total_loss: 19.21  loss_ce: 0.4435  loss_mask: 0.1768  loss_dice: 1.213  loss_ce_0: 0.5312  loss_mask_0: 0.2118  loss_dice_0: 1.41  loss_ce_1: 0.6117  loss_mask_1: 0.1971  loss_dice_1: 1.322  loss_ce_2: 0.5331  loss_mask_2: 0.1858  loss_dice_2: 1.275  loss_ce_3: 0.5125  loss_mask_3: 0.1821  loss_dice_3: 1.2  loss_ce_4: 0.4947  loss_mask_4: 0.1798  loss_dice_4: 1.185  loss_ce_5: 0.463  loss_mask_5: 0.1787  loss_dice_5: 1.168  loss_ce_6: 0.4354  loss_mask_6: 0.1775  loss_dice_6: 1.189  loss_ce_7: 0.4483  loss_mask_7: 0.177  loss_dice_7: 1.18  loss_ce_8: 0.461  loss_mask_8: 0.1769  loss_dice_8: 1.174    time: 0.6728  last_time: 0.6784  data_time: 0.0502  last_data_time: 0.0512   lr: 0.0001  max_mem: 17141M
[09/13 09:19:56] d2.utils.events INFO:  eta: 0:08:07  iter: 279  total_loss: 19.49  loss_ce: 0.4529  loss_mask: 0.1729  loss_dice: 1.212  loss_ce_0: 0.5397  loss_mask_0: 0.1901  loss_dice_0: 1.43  loss_ce_1: 0.5932  loss_mask_1: 0.1811  loss_dice_1: 1.345  loss_ce_2: 0.5999  loss_mask_2: 0.1757  loss_dice_2: 1.281  loss_ce_3: 0.5228  loss_mask_3: 0.1741  loss_dice_3: 1.213  loss_ce_4: 0.4878  loss_mask_4: 0.1742  loss_dice_4: 1.207  loss_ce_5: 0.4911  loss_mask_5: 0.1719  loss_dice_5: 1.205  loss_ce_6: 0.471  loss_mask_6: 0.1721  loss_dice_6: 1.175  loss_ce_7: 0.4588  loss_mask_7: 0.1739  loss_dice_7: 1.213  loss_ce_8: 0.4793  loss_mask_8: 0.174  loss_dice_8: 1.199    time: 0.6729  last_time: 0.6675  data_time: 0.0472  last_data_time: 0.0408   lr: 0.0001  max_mem: 17141M
[09/13 09:20:10] d2.utils.events INFO:  eta: 0:07:54  iter: 299  total_loss: 19.91  loss_ce: 0.4893  loss_mask: 0.1671  loss_dice: 1.196  loss_ce_0: 0.5964  loss_mask_0: 0.1954  loss_dice_0: 1.437  loss_ce_1: 0.6592  loss_mask_1: 0.1806  loss_dice_1: 1.364  loss_ce_2: 0.5859  loss_mask_2: 0.1705  loss_dice_2: 1.3  loss_ce_3: 0.5345  loss_mask_3: 0.1745  loss_dice_3: 1.261  loss_ce_4: 0.5154  loss_mask_4: 0.1711  loss_dice_4: 1.229  loss_ce_5: 0.532  loss_mask_5: 0.1642  loss_dice_5: 1.264  loss_ce_6: 0.5173  loss_mask_6: 0.1645  loss_dice_6: 1.235  loss_ce_7: 0.5443  loss_mask_7: 0.1659  loss_dice_7: 1.192  loss_ce_8: 0.4944  loss_mask_8: 0.166  loss_dice_8: 1.225    time: 0.6747  last_time: 0.7191  data_time: 0.0693  last_data_time: 0.0405   lr: 0.0001  max_mem: 17141M
[09/13 09:20:24] d2.utils.events INFO:  eta: 0:07:41  iter: 319  total_loss: 20.55  loss_ce: 0.5108  loss_mask: 0.1591  loss_dice: 1.23  loss_ce_0: 0.6173  loss_mask_0: 0.1879  loss_dice_0: 1.414  loss_ce_1: 0.6566  loss_mask_1: 0.1735  loss_dice_1: 1.368  loss_ce_2: 0.5585  loss_mask_2: 0.1651  loss_dice_2: 1.364  loss_ce_3: 0.5471  loss_mask_3: 0.1666  loss_dice_3: 1.284  loss_ce_4: 0.5057  loss_mask_4: 0.1672  loss_dice_4: 1.29  loss_ce_5: 0.4935  loss_mask_5: 0.1669  loss_dice_5: 1.252  loss_ce_6: 0.5141  loss_mask_6: 0.1644  loss_dice_6: 1.236  loss_ce_7: 0.524  loss_mask_7: 0.1634  loss_dice_7: 1.27  loss_ce_8: 0.4734  loss_mask_8: 0.1615  loss_dice_8: 1.251    time: 0.6764  last_time: 0.6970  data_time: 0.0558  last_data_time: 0.0423   lr: 0.0001  max_mem: 17141M
[09/13 09:20:38] d2.utils.events INFO:  eta: 0:07:28  iter: 339  total_loss: 20.44  loss_ce: 0.4745  loss_mask: 0.1645  loss_dice: 1.215  loss_ce_0: 0.5972  loss_mask_0: 0.1943  loss_dice_0: 1.428  loss_ce_1: 0.6301  loss_mask_1: 0.1867  loss_dice_1: 1.393  loss_ce_2: 0.5678  loss_mask_2: 0.1669  loss_dice_2: 1.3  loss_ce_3: 0.5311  loss_mask_3: 0.1705  loss_dice_3: 1.275  loss_ce_4: 0.4983  loss_mask_4: 0.1649  loss_dice_4: 1.233  loss_ce_5: 0.4813  loss_mask_5: 0.1638  loss_dice_5: 1.246  loss_ce_6: 0.4955  loss_mask_6: 0.1624  loss_dice_6: 1.222  loss_ce_7: 0.4863  loss_mask_7: 0.1653  loss_dice_7: 1.242  loss_ce_8: 0.4748  loss_mask_8: 0.1655  loss_dice_8: 1.233    time: 0.6770  last_time: 0.6179  data_time: 0.0553  last_data_time: 0.0479   lr: 0.0001  max_mem: 17141M
[09/13 09:20:52] d2.utils.events INFO:  eta: 0:07:16  iter: 359  total_loss: 19.86  loss_ce: 0.4853  loss_mask: 0.1634  loss_dice: 1.224  loss_ce_0: 0.6178  loss_mask_0: 0.1874  loss_dice_0: 1.45  loss_ce_1: 0.6378  loss_mask_1: 0.1723  loss_dice_1: 1.336  loss_ce_2: 0.6125  loss_mask_2: 0.168  loss_dice_2: 1.317  loss_ce_3: 0.554  loss_mask_3: 0.1643  loss_dice_3: 1.256  loss_ce_4: 0.531  loss_mask_4: 0.1631  loss_dice_4: 1.203  loss_ce_5: 0.4991  loss_mask_5: 0.1605  loss_dice_5: 1.228  loss_ce_6: 0.5048  loss_mask_6: 0.1625  loss_dice_6: 1.22  loss_ce_7: 0.5217  loss_mask_7: 0.1595  loss_dice_7: 1.223  loss_ce_8: 0.4935  loss_mask_8: 0.1647  loss_dice_8: 1.217    time: 0.6780  last_time: 0.6557  data_time: 0.0531  last_data_time: 0.0373   lr: 0.0001  max_mem: 17141M
[09/13 09:21:06] d2.utils.events INFO:  eta: 0:07:03  iter: 379  total_loss: 19.53  loss_ce: 0.4748  loss_mask: 0.1633  loss_dice: 1.202  loss_ce_0: 0.5776  loss_mask_0: 0.1926  loss_dice_0: 1.45  loss_ce_1: 0.6299  loss_mask_1: 0.1734  loss_dice_1: 1.375  loss_ce_2: 0.5499  loss_mask_2: 0.1672  loss_dice_2: 1.323  loss_ce_3: 0.5493  loss_mask_3: 0.1653  loss_dice_3: 1.224  loss_ce_4: 0.526  loss_mask_4: 0.1653  loss_dice_4: 1.226  loss_ce_5: 0.5096  loss_mask_5: 0.1626  loss_dice_5: 1.219  loss_ce_6: 0.4813  loss_mask_6: 0.1641  loss_dice_6: 1.239  loss_ce_7: 0.5033  loss_mask_7: 0.1621  loss_dice_7: 1.196  loss_ce_8: 0.4635  loss_mask_8: 0.1634  loss_dice_8: 1.213    time: 0.6792  last_time: 0.6602  data_time: 0.0620  last_data_time: 0.0494   lr: 0.0001  max_mem: 17141M
[09/13 09:21:20] d2.utils.events INFO:  eta: 0:06:50  iter: 399  total_loss: 20.29  loss_ce: 0.4763  loss_mask: 0.1596  loss_dice: 1.257  loss_ce_0: 0.5905  loss_mask_0: 0.1916  loss_dice_0: 1.474  loss_ce_1: 0.6514  loss_mask_1: 0.1773  loss_dice_1: 1.427  loss_ce_2: 0.6031  loss_mask_2: 0.1713  loss_dice_2: 1.348  loss_ce_3: 0.536  loss_mask_3: 0.1638  loss_dice_3: 1.294  loss_ce_4: 0.5062  loss_mask_4: 0.1586  loss_dice_4: 1.269  loss_ce_5: 0.5283  loss_mask_5: 0.1574  loss_dice_5: 1.262  loss_ce_6: 0.4904  loss_mask_6: 0.1591  loss_dice_6: 1.3  loss_ce_7: 0.4913  loss_mask_7: 0.1573  loss_dice_7: 1.241  loss_ce_8: 0.4758  loss_mask_8: 0.1589  loss_dice_8: 1.268    time: 0.6797  last_time: 0.6871  data_time: 0.0503  last_data_time: 0.0432   lr: 0.0001  max_mem: 17141M
[09/13 09:21:33] d2.utils.events INFO:  eta: 0:06:36  iter: 419  total_loss: 18.81  loss_ce: 0.446  loss_mask: 0.16  loss_dice: 1.131  loss_ce_0: 0.5959  loss_mask_0: 0.1936  loss_dice_0: 1.414  loss_ce_1: 0.6202  loss_mask_1: 0.1701  loss_dice_1: 1.338  loss_ce_2: 0.5737  loss_mask_2: 0.1637  loss_dice_2: 1.244  loss_ce_3: 0.5393  loss_mask_3: 0.1616  loss_dice_3: 1.181  loss_ce_4: 0.4783  loss_mask_4: 0.1621  loss_dice_4: 1.186  loss_ce_5: 0.4723  loss_mask_5: 0.1567  loss_dice_5: 1.181  loss_ce_6: 0.4842  loss_mask_6: 0.1575  loss_dice_6: 1.196  loss_ce_7: 0.4753  loss_mask_7: 0.1573  loss_dice_7: 1.162  loss_ce_8: 0.4526  loss_mask_8: 0.1574  loss_dice_8: 1.139    time: 0.6797  last_time: 0.6803  data_time: 0.0563  last_data_time: 0.0445   lr: 0.0001  max_mem: 17141M
[09/13 09:21:47] d2.utils.events INFO:  eta: 0:06:22  iter: 439  total_loss: 19.32  loss_ce: 0.4664  loss_mask: 0.1645  loss_dice: 1.177  loss_ce_0: 0.5369  loss_mask_0: 0.1878  loss_dice_0: 1.412  loss_ce_1: 0.6342  loss_mask_1: 0.1808  loss_dice_1: 1.329  loss_ce_2: 0.5909  loss_mask_2: 0.1704  loss_dice_2: 1.271  loss_ce_3: 0.4961  loss_mask_3: 0.1679  loss_dice_3: 1.211  loss_ce_4: 0.4869  loss_mask_4: 0.1673  loss_dice_4: 1.25  loss_ce_5: 0.4498  loss_mask_5: 0.1628  loss_dice_5: 1.216  loss_ce_6: 0.4717  loss_mask_6: 0.162  loss_dice_6: 1.183  loss_ce_7: 0.4451  loss_mask_7: 0.1623  loss_dice_7: 1.182  loss_ce_8: 0.4736  loss_mask_8: 0.1633  loss_dice_8: 1.172    time: 0.6805  last_time: 0.6778  data_time: 0.0646  last_data_time: 0.0443   lr: 0.0001  max_mem: 17141M
[09/13 09:22:01] d2.utils.events INFO:  eta: 0:06:08  iter: 459  total_loss: 19.05  loss_ce: 0.4703  loss_mask: 0.1677  loss_dice: 1.167  loss_ce_0: 0.5533  loss_mask_0: 0.1805  loss_dice_0: 1.383  loss_ce_1: 0.6236  loss_mask_1: 0.1714  loss_dice_1: 1.295  loss_ce_2: 0.5371  loss_mask_2: 0.171  loss_dice_2: 1.232  loss_ce_3: 0.5134  loss_mask_3: 0.1688  loss_dice_3: 1.165  loss_ce_4: 0.4991  loss_mask_4: 0.1715  loss_dice_4: 1.147  loss_ce_5: 0.5018  loss_mask_5: 0.1677  loss_dice_5: 1.152  loss_ce_6: 0.4762  loss_mask_6: 0.1666  loss_dice_6: 1.178  loss_ce_7: 0.4573  loss_mask_7: 0.1692  loss_dice_7: 1.16  loss_ce_8: 0.4628  loss_mask_8: 0.1691  loss_dice_8: 1.143    time: 0.6800  last_time: 0.6029  data_time: 0.0530  last_data_time: 0.0442   lr: 0.0001  max_mem: 17141M
[09/13 09:22:15] d2.utils.events INFO:  eta: 0:05:55  iter: 479  total_loss: 19.26  loss_ce: 0.433  loss_mask: 0.1682  loss_dice: 1.164  loss_ce_0: 0.5453  loss_mask_0: 0.1925  loss_dice_0: 1.393  loss_ce_1: 0.6085  loss_mask_1: 0.176  loss_dice_1: 1.31  loss_ce_2: 0.556  loss_mask_2: 0.1737  loss_dice_2: 1.244  loss_ce_3: 0.4971  loss_mask_3: 0.1701  loss_dice_3: 1.219  loss_ce_4: 0.4519  loss_mask_4: 0.1715  loss_dice_4: 1.206  loss_ce_5: 0.4502  loss_mask_5: 0.1685  loss_dice_5: 1.194  loss_ce_6: 0.4447  loss_mask_6: 0.168  loss_dice_6: 1.17  loss_ce_7: 0.4416  loss_mask_7: 0.1686  loss_dice_7: 1.193  loss_ce_8: 0.4278  loss_mask_8: 0.1674  loss_dice_8: 1.17    time: 0.6800  last_time: 0.6643  data_time: 0.0484  last_data_time: 0.0488   lr: 0.0001  max_mem: 17141M
[09/13 09:22:28] d2.utils.events INFO:  eta: 0:05:41  iter: 499  total_loss: 19.36  loss_ce: 0.4171  loss_mask: 0.1734  loss_dice: 1.198  loss_ce_0: 0.5156  loss_mask_0: 0.2041  loss_dice_0: 1.432  loss_ce_1: 0.5753  loss_mask_1: 0.19  loss_dice_1: 1.383  loss_ce_2: 0.5414  loss_mask_2: 0.1858  loss_dice_2: 1.277  loss_ce_3: 0.4748  loss_mask_3: 0.1789  loss_dice_3: 1.227  loss_ce_4: 0.4682  loss_mask_4: 0.1785  loss_dice_4: 1.21  loss_ce_5: 0.4461  loss_mask_5: 0.1753  loss_dice_5: 1.218  loss_ce_6: 0.4358  loss_mask_6: 0.1773  loss_dice_6: 1.233  loss_ce_7: 0.4277  loss_mask_7: 0.1757  loss_dice_7: 1.212  loss_ce_8: 0.4167  loss_mask_8: 0.1749  loss_dice_8: 1.22    time: 0.6802  last_time: 0.6581  data_time: 0.0534  last_data_time: 0.0373   lr: 0.0001  max_mem: 17141M
[09/13 09:22:42] d2.utils.events INFO:  eta: 0:05:27  iter: 519  total_loss: 19.03  loss_ce: 0.4504  loss_mask: 0.1712  loss_dice: 1.158  loss_ce_0: 0.5295  loss_mask_0: 0.1989  loss_dice_0: 1.385  loss_ce_1: 0.588  loss_mask_1: 0.1865  loss_dice_1: 1.308  loss_ce_2: 0.5827  loss_mask_2: 0.1783  loss_dice_2: 1.254  loss_ce_3: 0.5118  loss_mask_3: 0.1718  loss_dice_3: 1.182  loss_ce_4: 0.4871  loss_mask_4: 0.1707  loss_dice_4: 1.21  loss_ce_5: 0.5  loss_mask_5: 0.1743  loss_dice_5: 1.189  loss_ce_6: 0.4816  loss_mask_6: 0.1707  loss_dice_6: 1.161  loss_ce_7: 0.4808  loss_mask_7: 0.1719  loss_dice_7: 1.177  loss_ce_8: 0.4384  loss_mask_8: 0.1716  loss_dice_8: 1.193    time: 0.6799  last_time: 0.6770  data_time: 0.0448  last_data_time: 0.0352   lr: 0.0001  max_mem: 17141M
[09/13 09:22:55] d2.utils.events INFO:  eta: 0:05:13  iter: 539  total_loss: 19.8  loss_ce: 0.4455  loss_mask: 0.1706  loss_dice: 1.228  loss_ce_0: 0.5287  loss_mask_0: 0.2047  loss_dice_0: 1.407  loss_ce_1: 0.6301  loss_mask_1: 0.1912  loss_dice_1: 1.346  loss_ce_2: 0.5619  loss_mask_2: 0.1798  loss_dice_2: 1.293  loss_ce_3: 0.5088  loss_mask_3: 0.1768  loss_dice_3: 1.21  loss_ce_4: 0.4828  loss_mask_4: 0.1741  loss_dice_4: 1.201  loss_ce_5: 0.4558  loss_mask_5: 0.175  loss_dice_5: 1.238  loss_ce_6: 0.4856  loss_mask_6: 0.1736  loss_dice_6: 1.179  loss_ce_7: 0.4414  loss_mask_7: 0.1709  loss_dice_7: 1.204  loss_ce_8: 0.4468  loss_mask_8: 0.1727  loss_dice_8: 1.214    time: 0.6798  last_time: 0.6925  data_time: 0.0516  last_data_time: 0.0362   lr: 0.0001  max_mem: 17141M
[09/13 09:23:09] d2.utils.events INFO:  eta: 0:04:59  iter: 559  total_loss: 19.42  loss_ce: 0.4752  loss_mask: 0.1691  loss_dice: 1.222  loss_ce_0: 0.5646  loss_mask_0: 0.1924  loss_dice_0: 1.446  loss_ce_1: 0.6097  loss_mask_1: 0.1773  loss_dice_1: 1.311  loss_ce_2: 0.5608  loss_mask_2: 0.1757  loss_dice_2: 1.283  loss_ce_3: 0.5061  loss_mask_3: 0.1768  loss_dice_3: 1.216  loss_ce_4: 0.458  loss_mask_4: 0.1726  loss_dice_4: 1.234  loss_ce_5: 0.4439  loss_mask_5: 0.1709  loss_dice_5: 1.203  loss_ce_6: 0.4526  loss_mask_6: 0.1712  loss_dice_6: 1.213  loss_ce_7: 0.4397  loss_mask_7: 0.1687  loss_dice_7: 1.211  loss_ce_8: 0.4691  loss_mask_8: 0.171  loss_dice_8: 1.173    time: 0.6799  last_time: 0.6791  data_time: 0.0535  last_data_time: 0.0714   lr: 0.0001  max_mem: 17141M
[09/13 09:23:23] d2.utils.events INFO:  eta: 0:04:45  iter: 579  total_loss: 18.99  loss_ce: 0.4258  loss_mask: 0.1664  loss_dice: 1.217  loss_ce_0: 0.5327  loss_mask_0: 0.191  loss_dice_0: 1.387  loss_ce_1: 0.6016  loss_mask_1: 0.1782  loss_dice_1: 1.325  loss_ce_2: 0.5315  loss_mask_2: 0.1694  loss_dice_2: 1.283  loss_ce_3: 0.4963  loss_mask_3: 0.1688  loss_dice_3: 1.217  loss_ce_4: 0.468  loss_mask_4: 0.1661  loss_dice_4: 1.216  loss_ce_5: 0.4445  loss_mask_5: 0.166  loss_dice_5: 1.209  loss_ce_6: 0.4423  loss_mask_6: 0.1698  loss_dice_6: 1.221  loss_ce_7: 0.4545  loss_mask_7: 0.167  loss_dice_7: 1.21  loss_ce_8: 0.4203  loss_mask_8: 0.1651  loss_dice_8: 1.192    time: 0.6797  last_time: 0.6697  data_time: 0.0645  last_data_time: 0.1587   lr: 0.0001  max_mem: 17141M
[09/13 09:23:36] d2.utils.events INFO:  eta: 0:04:32  iter: 599  total_loss: 19.24  loss_ce: 0.4277  loss_mask: 0.1728  loss_dice: 1.232  loss_ce_0: 0.5233  loss_mask_0: 0.1971  loss_dice_0: 1.405  loss_ce_1: 0.5968  loss_mask_1: 0.1891  loss_dice_1: 1.331  loss_ce_2: 0.5636  loss_mask_2: 0.1816  loss_dice_2: 1.234  loss_ce_3: 0.4735  loss_mask_3: 0.1755  loss_dice_3: 1.232  loss_ce_4: 0.4973  loss_mask_4: 0.1817  loss_dice_4: 1.263  loss_ce_5: 0.4601  loss_mask_5: 0.1772  loss_dice_5: 1.213  loss_ce_6: 0.4485  loss_mask_6: 0.1743  loss_dice_6: 1.196  loss_ce_7: 0.4408  loss_mask_7: 0.1741  loss_dice_7: 1.232  loss_ce_8: 0.4323  loss_mask_8: 0.174  loss_dice_8: 1.243    time: 0.6795  last_time: 0.6734  data_time: 0.0573  last_data_time: 0.0415   lr: 0.0001  max_mem: 17141M
[09/13 09:23:50] d2.utils.events INFO:  eta: 0:04:18  iter: 619  total_loss: 20.21  loss_ce: 0.4304  loss_mask: 0.1634  loss_dice: 1.258  loss_ce_0: 0.5589  loss_mask_0: 0.184  loss_dice_0: 1.458  loss_ce_1: 0.62  loss_mask_1: 0.1732  loss_dice_1: 1.363  loss_ce_2: 0.5672  loss_mask_2: 0.1672  loss_dice_2: 1.325  loss_ce_3: 0.4645  loss_mask_3: 0.164  loss_dice_3: 1.298  loss_ce_4: 0.4426  loss_mask_4: 0.1644  loss_dice_4: 1.275  loss_ce_5: 0.4807  loss_mask_5: 0.1617  loss_dice_5: 1.272  loss_ce_6: 0.4293  loss_mask_6: 0.1612  loss_dice_6: 1.285  loss_ce_7: 0.4459  loss_mask_7: 0.1634  loss_dice_7: 1.264  loss_ce_8: 0.4472  loss_mask_8: 0.1634  loss_dice_8: 1.243    time: 0.6797  last_time: 0.6814  data_time: 0.0514  last_data_time: 0.0469   lr: 0.0001  max_mem: 17141M
[09/13 09:24:04] d2.utils.events INFO:  eta: 0:04:05  iter: 639  total_loss: 19.03  loss_ce: 0.4622  loss_mask: 0.1714  loss_dice: 1.164  loss_ce_0: 0.548  loss_mask_0: 0.188  loss_dice_0: 1.387  loss_ce_1: 0.6246  loss_mask_1: 0.1761  loss_dice_1: 1.309  loss_ce_2: 0.5641  loss_mask_2: 0.1698  loss_dice_2: 1.219  loss_ce_3: 0.4919  loss_mask_3: 0.169  loss_dice_3: 1.225  loss_ce_4: 0.4701  loss_mask_4: 0.1697  loss_dice_4: 1.195  loss_ce_5: 0.4753  loss_mask_5: 0.1712  loss_dice_5: 1.179  loss_ce_6: 0.4497  loss_mask_6: 0.1716  loss_dice_6: 1.194  loss_ce_7: 0.4532  loss_mask_7: 0.1709  loss_dice_7: 1.178  loss_ce_8: 0.4414  loss_mask_8: 0.1716  loss_dice_8: 1.191    time: 0.6800  last_time: 0.7124  data_time: 0.0567  last_data_time: 0.0371   lr: 0.0001  max_mem: 17141M
[09/13 09:24:18] d2.utils.events INFO:  eta: 0:03:51  iter: 659  total_loss: 19.42  loss_ce: 0.4543  loss_mask: 0.1707  loss_dice: 1.21  loss_ce_0: 0.5804  loss_mask_0: 0.2001  loss_dice_0: 1.406  loss_ce_1: 0.5919  loss_mask_1: 0.1812  loss_dice_1: 1.34  loss_ce_2: 0.6078  loss_mask_2: 0.1737  loss_dice_2: 1.283  loss_ce_3: 0.522  loss_mask_3: 0.1718  loss_dice_3: 1.24  loss_ce_4: 0.5151  loss_mask_4: 0.1736  loss_dice_4: 1.225  loss_ce_5: 0.4685  loss_mask_5: 0.1718  loss_dice_5: 1.216  loss_ce_6: 0.4598  loss_mask_6: 0.1706  loss_dice_6: 1.219  loss_ce_7: 0.4727  loss_mask_7: 0.1692  loss_dice_7: 1.193  loss_ce_8: 0.4577  loss_mask_8: 0.1704  loss_dice_8: 1.195    time: 0.6802  last_time: 0.6622  data_time: 0.0523  last_data_time: 0.0404   lr: 0.0001  max_mem: 17141M
[09/13 09:24:31] d2.utils.events INFO:  eta: 0:03:38  iter: 679  total_loss: 20.72  loss_ce: 0.5326  loss_mask: 0.1624  loss_dice: 1.253  loss_ce_0: 0.6341  loss_mask_0: 0.1878  loss_dice_0: 1.5  loss_ce_1: 0.678  loss_mask_1: 0.173  loss_dice_1: 1.381  loss_ce_2: 0.6248  loss_mask_2: 0.1688  loss_dice_2: 1.36  loss_ce_3: 0.5812  loss_mask_3: 0.1644  loss_dice_3: 1.279  loss_ce_4: 0.5835  loss_mask_4: 0.1669  loss_dice_4: 1.297  loss_ce_5: 0.5233  loss_mask_5: 0.1655  loss_dice_5: 1.254  loss_ce_6: 0.5129  loss_mask_6: 0.1655  loss_dice_6: 1.277  loss_ce_7: 0.5405  loss_mask_7: 0.1632  loss_dice_7: 1.223  loss_ce_8: 0.5435  loss_mask_8: 0.1614  loss_dice_8: 1.277    time: 0.6802  last_time: 0.6814  data_time: 0.0550  last_data_time: 0.0657   lr: 0.0001  max_mem: 17141M
[09/13 09:24:45] d2.utils.events INFO:  eta: 0:03:24  iter: 699  total_loss: 19.72  loss_ce: 0.4732  loss_mask: 0.1586  loss_dice: 1.225  loss_ce_0: 0.5089  loss_mask_0: 0.182  loss_dice_0: 1.466  loss_ce_1: 0.5717  loss_mask_1: 0.1668  loss_dice_1: 1.339  loss_ce_2: 0.5598  loss_mask_2: 0.1617  loss_dice_2: 1.32  loss_ce_3: 0.4903  loss_mask_3: 0.164  loss_dice_3: 1.272  loss_ce_4: 0.4883  loss_mask_4: 0.1602  loss_dice_4: 1.269  loss_ce_5: 0.4869  loss_mask_5: 0.1624  loss_dice_5: 1.242  loss_ce_6: 0.4732  loss_mask_6: 0.1622  loss_dice_6: 1.224  loss_ce_7: 0.4674  loss_mask_7: 0.1607  loss_dice_7: 1.25  loss_ce_8: 0.4592  loss_mask_8: 0.1579  loss_dice_8: 1.234    time: 0.6801  last_time: 0.6782  data_time: 0.0520  last_data_time: 0.0352   lr: 0.0001  max_mem: 17141M
[09/13 09:24:59] d2.utils.events INFO:  eta: 0:03:10  iter: 719  total_loss: 19.99  loss_ce: 0.4991  loss_mask: 0.1684  loss_dice: 1.276  loss_ce_0: 0.5526  loss_mask_0: 0.1929  loss_dice_0: 1.487  loss_ce_1: 0.6013  loss_mask_1: 0.1752  loss_dice_1: 1.379  loss_ce_2: 0.6041  loss_mask_2: 0.1605  loss_dice_2: 1.346  loss_ce_3: 0.526  loss_mask_3: 0.1609  loss_dice_3: 1.29  loss_ce_4: 0.5147  loss_mask_4: 0.1611  loss_dice_4: 1.286  loss_ce_5: 0.5001  loss_mask_5: 0.1677  loss_dice_5: 1.281  loss_ce_6: 0.4945  loss_mask_6: 0.1667  loss_dice_6: 1.288  loss_ce_7: 0.5069  loss_mask_7: 0.1653  loss_dice_7: 1.258  loss_ce_8: 0.4947  loss_mask_8: 0.1642  loss_dice_8: 1.261    time: 0.6803  last_time: 0.7670  data_time: 0.0482  last_data_time: 0.0502   lr: 0.0001  max_mem: 17141M
[09/13 09:25:12] d2.utils.events INFO:  eta: 0:02:57  iter: 739  total_loss: 19.16  loss_ce: 0.4282  loss_mask: 0.1667  loss_dice: 1.18  loss_ce_0: 0.5592  loss_mask_0: 0.1881  loss_dice_0: 1.385  loss_ce_1: 0.6267  loss_mask_1: 0.1781  loss_dice_1: 1.299  loss_ce_2: 0.5518  loss_mask_2: 0.1723  loss_dice_2: 1.248  loss_ce_3: 0.4721  loss_mask_3: 0.1709  loss_dice_3: 1.187  loss_ce_4: 0.4788  loss_mask_4: 0.1671  loss_dice_4: 1.198  loss_ce_5: 0.4786  loss_mask_5: 0.167  loss_dice_5: 1.201  loss_ce_6: 0.4405  loss_mask_6: 0.1663  loss_dice_6: 1.19  loss_ce_7: 0.4267  loss_mask_7: 0.1662  loss_dice_7: 1.175  loss_ce_8: 0.4432  loss_mask_8: 0.1654  loss_dice_8: 1.151    time: 0.6802  last_time: 0.6591  data_time: 0.0454  last_data_time: 0.0409   lr: 0.0001  max_mem: 17141M
[09/13 09:25:26] d2.utils.events INFO:  eta: 0:02:43  iter: 759  total_loss: 18.93  loss_ce: 0.4604  loss_mask: 0.1605  loss_dice: 1.166  loss_ce_0: 0.6052  loss_mask_0: 0.1807  loss_dice_0: 1.358  loss_ce_1: 0.6269  loss_mask_1: 0.1731  loss_dice_1: 1.316  loss_ce_2: 0.5934  loss_mask_2: 0.1623  loss_dice_2: 1.256  loss_ce_3: 0.5182  loss_mask_3: 0.1623  loss_dice_3: 1.2  loss_ce_4: 0.4891  loss_mask_4: 0.1619  loss_dice_4: 1.209  loss_ce_5: 0.4841  loss_mask_5: 0.1595  loss_dice_5: 1.181  loss_ce_6: 0.4708  loss_mask_6: 0.1606  loss_dice_6: 1.173  loss_ce_7: 0.4642  loss_mask_7: 0.1598  loss_dice_7: 1.177  loss_ce_8: 0.4398  loss_mask_8: 0.1608  loss_dice_8: 1.156    time: 0.6801  last_time: 0.6909  data_time: 0.0497  last_data_time: 0.0428   lr: 0.0001  max_mem: 17141M
[09/13 09:25:39] d2.utils.events INFO:  eta: 0:02:29  iter: 779  total_loss: 18.35  loss_ce: 0.4415  loss_mask: 0.1584  loss_dice: 1.162  loss_ce_0: 0.5125  loss_mask_0: 0.1857  loss_dice_0: 1.417  loss_ce_1: 0.5984  loss_mask_1: 0.1725  loss_dice_1: 1.3  loss_ce_2: 0.524  loss_mask_2: 0.1657  loss_dice_2: 1.228  loss_ce_3: 0.4697  loss_mask_3: 0.1656  loss_dice_3: 1.183  loss_ce_4: 0.4686  loss_mask_4: 0.1627  loss_dice_4: 1.205  loss_ce_5: 0.4509  loss_mask_5: 0.1594  loss_dice_5: 1.151  loss_ce_6: 0.4365  loss_mask_6: 0.1597  loss_dice_6: 1.168  loss_ce_7: 0.4508  loss_mask_7: 0.1599  loss_dice_7: 1.148  loss_ce_8: 0.4388  loss_mask_8: 0.1593  loss_dice_8: 1.164    time: 0.6797  last_time: 0.6614  data_time: 0.0521  last_data_time: 0.0411   lr: 0.0001  max_mem: 17141M
[09/13 09:25:53] d2.utils.events INFO:  eta: 0:02:16  iter: 799  total_loss: 19.3  loss_ce: 0.4311  loss_mask: 0.1521  loss_dice: 1.25  loss_ce_0: 0.5642  loss_mask_0: 0.1811  loss_dice_0: 1.485  loss_ce_1: 0.5857  loss_mask_1: 0.1683  loss_dice_1: 1.363  loss_ce_2: 0.5504  loss_mask_2: 0.1523  loss_dice_2: 1.359  loss_ce_3: 0.4818  loss_mask_3: 0.1543  loss_dice_3: 1.28  loss_ce_4: 0.4525  loss_mask_4: 0.157  loss_dice_4: 1.258  loss_ce_5: 0.457  loss_mask_5: 0.1552  loss_dice_5: 1.301  loss_ce_6: 0.4402  loss_mask_6: 0.1535  loss_dice_6: 1.235  loss_ce_7: 0.4217  loss_mask_7: 0.1528  loss_dice_7: 1.212  loss_ce_8: 0.426  loss_mask_8: 0.15  loss_dice_8: 1.299    time: 0.6799  last_time: 0.6454  data_time: 0.0546  last_data_time: 0.0411   lr: 0.0001  max_mem: 17141M
[09/13 09:26:07] d2.utils.events INFO:  eta: 0:02:02  iter: 819  total_loss: 19.55  loss_ce: 0.4181  loss_mask: 0.1701  loss_dice: 1.225  loss_ce_0: 0.5398  loss_mask_0: 0.1878  loss_dice_0: 1.398  loss_ce_1: 0.5763  loss_mask_1: 0.189  loss_dice_1: 1.361  loss_ce_2: 0.5332  loss_mask_2: 0.1804  loss_dice_2: 1.285  loss_ce_3: 0.5146  loss_mask_3: 0.1814  loss_dice_3: 1.213  loss_ce_4: 0.4319  loss_mask_4: 0.1764  loss_dice_4: 1.233  loss_ce_5: 0.4387  loss_mask_5: 0.1727  loss_dice_5: 1.246  loss_ce_6: 0.4252  loss_mask_6: 0.171  loss_dice_6: 1.205  loss_ce_7: 0.4229  loss_mask_7: 0.1711  loss_dice_7: 1.236  loss_ce_8: 0.4411  loss_mask_8: 0.1688  loss_dice_8: 1.22    time: 0.6800  last_time: 0.6854  data_time: 0.0540  last_data_time: 0.0338   lr: 0.0001  max_mem: 17141M
[09/13 09:26:20] d2.utils.events INFO:  eta: 0:01:49  iter: 839  total_loss: 19.8  loss_ce: 0.4662  loss_mask: 0.1564  loss_dice: 1.182  loss_ce_0: 0.5742  loss_mask_0: 0.1901  loss_dice_0: 1.46  loss_ce_1: 0.5996  loss_mask_1: 0.1751  loss_dice_1: 1.346  loss_ce_2: 0.5457  loss_mask_2: 0.1654  loss_dice_2: 1.273  loss_ce_3: 0.5246  loss_mask_3: 0.1592  loss_dice_3: 1.202  loss_ce_4: 0.4733  loss_mask_4: 0.1576  loss_dice_4: 1.231  loss_ce_5: 0.4887  loss_mask_5: 0.1564  loss_dice_5: 1.218  loss_ce_6: 0.474  loss_mask_6: 0.1581  loss_dice_6: 1.202  loss_ce_7: 0.4754  loss_mask_7: 0.1563  loss_dice_7: 1.19  loss_ce_8: 0.4772  loss_mask_8: 0.1577  loss_dice_8: 1.223    time: 0.6800  last_time: 0.6839  data_time: 0.0568  last_data_time: 0.0474   lr: 0.0001  max_mem: 17141M
[09/13 09:26:34] d2.utils.events INFO:  eta: 0:01:35  iter: 859  total_loss: 18.95  loss_ce: 0.4266  loss_mask: 0.1585  loss_dice: 1.19  loss_ce_0: 0.5078  loss_mask_0: 0.181  loss_dice_0: 1.384  loss_ce_1: 0.5774  loss_mask_1: 0.1718  loss_dice_1: 1.346  loss_ce_2: 0.538  loss_mask_2: 0.1645  loss_dice_2: 1.273  loss_ce_3: 0.4861  loss_mask_3: 0.1635  loss_dice_3: 1.227  loss_ce_4: 0.4699  loss_mask_4: 0.1591  loss_dice_4: 1.225  loss_ce_5: 0.4459  loss_mask_5: 0.1601  loss_dice_5: 1.26  loss_ce_6: 0.4427  loss_mask_6: 0.155  loss_dice_6: 1.2  loss_ce_7: 0.4634  loss_mask_7: 0.1572  loss_dice_7: 1.237  loss_ce_8: 0.4381  loss_mask_8: 0.1615  loss_dice_8: 1.233    time: 0.6802  last_time: 0.6746  data_time: 0.0522  last_data_time: 0.0412   lr: 0.0001  max_mem: 17141M
[09/13 09:26:48] d2.utils.events INFO:  eta: 0:01:21  iter: 879  total_loss: 19.45  loss_ce: 0.4425  loss_mask: 0.1732  loss_dice: 1.205  loss_ce_0: 0.5776  loss_mask_0: 0.1968  loss_dice_0: 1.399  loss_ce_1: 0.6103  loss_mask_1: 0.1909  loss_dice_1: 1.325  loss_ce_2: 0.5844  loss_mask_2: 0.1766  loss_dice_2: 1.252  loss_ce_3: 0.5131  loss_mask_3: 0.1704  loss_dice_3: 1.234  loss_ce_4: 0.4969  loss_mask_4: 0.1722  loss_dice_4: 1.252  loss_ce_5: 0.4584  loss_mask_5: 0.1692  loss_dice_5: 1.216  loss_ce_6: 0.4573  loss_mask_6: 0.1751  loss_dice_6: 1.204  loss_ce_7: 0.4579  loss_mask_7: 0.1752  loss_dice_7: 1.212  loss_ce_8: 0.4582  loss_mask_8: 0.1723  loss_dice_8: 1.17    time: 0.6804  last_time: 0.7371  data_time: 0.0561  last_data_time: 0.1034   lr: 0.0001  max_mem: 17141M
[09/13 09:27:02] d2.utils.events INFO:  eta: 0:01:08  iter: 899  total_loss: 19.56  loss_ce: 0.4179  loss_mask: 0.1543  loss_dice: 1.277  loss_ce_0: 0.5562  loss_mask_0: 0.1836  loss_dice_0: 1.454  loss_ce_1: 0.5883  loss_mask_1: 0.1674  loss_dice_1: 1.363  loss_ce_2: 0.546  loss_mask_2: 0.1664  loss_dice_2: 1.334  loss_ce_3: 0.4842  loss_mask_3: 0.1605  loss_dice_3: 1.247  loss_ce_4: 0.4501  loss_mask_4: 0.1607  loss_dice_4: 1.273  loss_ce_5: 0.4729  loss_mask_5: 0.1589  loss_dice_5: 1.289  loss_ce_6: 0.4409  loss_mask_6: 0.1585  loss_dice_6: 1.232  loss_ce_7: 0.4614  loss_mask_7: 0.1562  loss_dice_7: 1.251  loss_ce_8: 0.4448  loss_mask_8: 0.1539  loss_dice_8: 1.226    time: 0.6803  last_time: 0.6724  data_time: 0.0485  last_data_time: 0.0386   lr: 0.0001  max_mem: 17141M
[09/13 09:27:15] d2.utils.events INFO:  eta: 0:00:54  iter: 919  total_loss: 19.15  loss_ce: 0.4609  loss_mask: 0.1664  loss_dice: 1.263  loss_ce_0: 0.5727  loss_mask_0: 0.1838  loss_dice_0: 1.395  loss_ce_1: 0.6174  loss_mask_1: 0.1727  loss_dice_1: 1.358  loss_ce_2: 0.5322  loss_mask_2: 0.1685  loss_dice_2: 1.3  loss_ce_3: 0.4998  loss_mask_3: 0.1663  loss_dice_3: 1.256  loss_ce_4: 0.478  loss_mask_4: 0.1678  loss_dice_4: 1.241  loss_ce_5: 0.4967  loss_mask_5: 0.1689  loss_dice_5: 1.261  loss_ce_6: 0.4415  loss_mask_6: 0.1661  loss_dice_6: 1.189  loss_ce_7: 0.4428  loss_mask_7: 0.1677  loss_dice_7: 1.242  loss_ce_8: 0.4614  loss_mask_8: 0.1675  loss_dice_8: 1.227    time: 0.6803  last_time: 0.6462  data_time: 0.0560  last_data_time: 0.0374   lr: 0.0001  max_mem: 17141M
[09/13 09:27:29] d2.utils.events INFO:  eta: 0:00:40  iter: 939  total_loss: 18.82  loss_ce: 0.4262  loss_mask: 0.1692  loss_dice: 1.192  loss_ce_0: 0.5373  loss_mask_0: 0.1981  loss_dice_0: 1.394  loss_ce_1: 0.5647  loss_mask_1: 0.1851  loss_dice_1: 1.312  loss_ce_2: 0.5387  loss_mask_2: 0.1786  loss_dice_2: 1.263  loss_ce_3: 0.4672  loss_mask_3: 0.1753  loss_dice_3: 1.215  loss_ce_4: 0.445  loss_mask_4: 0.1776  loss_dice_4: 1.214  loss_ce_5: 0.4355  loss_mask_5: 0.1708  loss_dice_5: 1.218  loss_ce_6: 0.4097  loss_mask_6: 0.1726  loss_dice_6: 1.21  loss_ce_7: 0.3836  loss_mask_7: 0.1681  loss_dice_7: 1.208  loss_ce_8: 0.4221  loss_mask_8: 0.169  loss_dice_8: 1.191    time: 0.6801  last_time: 0.7015  data_time: 0.0496  last_data_time: 0.0407   lr: 0.0001  max_mem: 17141M
[09/13 09:27:42] d2.utils.events INFO:  eta: 0:00:27  iter: 959  total_loss: 19.53  loss_ce: 0.4674  loss_mask: 0.1797  loss_dice: 1.235  loss_ce_0: 0.5525  loss_mask_0: 0.2149  loss_dice_0: 1.442  loss_ce_1: 0.6402  loss_mask_1: 0.1981  loss_dice_1: 1.318  loss_ce_2: 0.5627  loss_mask_2: 0.1917  loss_dice_2: 1.307  loss_ce_3: 0.5236  loss_mask_3: 0.1821  loss_dice_3: 1.246  loss_ce_4: 0.5085  loss_mask_4: 0.1807  loss_dice_4: 1.242  loss_ce_5: 0.4647  loss_mask_5: 0.1783  loss_dice_5: 1.275  loss_ce_6: 0.5174  loss_mask_6: 0.1808  loss_dice_6: 1.24  loss_ce_7: 0.4494  loss_mask_7: 0.1796  loss_dice_7: 1.245  loss_ce_8: 0.4773  loss_mask_8: 0.1793  loss_dice_8: 1.248    time: 0.6799  last_time: 0.6962  data_time: 0.0507  last_data_time: 0.0386   lr: 0.0001  max_mem: 17141M
[09/13 09:27:55] d2.utils.events INFO:  eta: 0:00:13  iter: 979  total_loss: 18.24  loss_ce: 0.4425  loss_mask: 0.1669  loss_dice: 1.152  loss_ce_0: 0.5152  loss_mask_0: 0.1911  loss_dice_0: 1.331  loss_ce_1: 0.5931  loss_mask_1: 0.1773  loss_dice_1: 1.249  loss_ce_2: 0.5277  loss_mask_2: 0.1705  loss_dice_2: 1.211  loss_ce_3: 0.4541  loss_mask_3: 0.176  loss_dice_3: 1.163  loss_ce_4: 0.4324  loss_mask_4: 0.1748  loss_dice_4: 1.161  loss_ce_5: 0.4232  loss_mask_5: 0.1671  loss_dice_5: 1.182  loss_ce_6: 0.4422  loss_mask_6: 0.1666  loss_dice_6: 1.164  loss_ce_7: 0.4114  loss_mask_7: 0.1682  loss_dice_7: 1.143  loss_ce_8: 0.4339  loss_mask_8: 0.1655  loss_dice_8: 1.14    time: 0.6794  last_time: 0.6363  data_time: 0.0463  last_data_time: 0.0497   lr: 0.0001  max_mem: 17141M
[09/13 09:28:09] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19/model_final.pth
[09/13 09:28:12] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 18.64  loss_ce: 0.4453  loss_mask: 0.1557  loss_dice: 1.116  loss_ce_0: 0.5348  loss_mask_0: 0.1831  loss_dice_0: 1.345  loss_ce_1: 0.5875  loss_mask_1: 0.1715  loss_dice_1: 1.287  loss_ce_2: 0.5603  loss_mask_2: 0.1643  loss_dice_2: 1.244  loss_ce_3: 0.4675  loss_mask_3: 0.1608  loss_dice_3: 1.167  loss_ce_4: 0.4277  loss_mask_4: 0.1567  loss_dice_4: 1.201  loss_ce_5: 0.4544  loss_mask_5: 0.1573  loss_dice_5: 1.16  loss_ce_6: 0.4334  loss_mask_6: 0.1584  loss_dice_6: 1.183  loss_ce_7: 0.4406  loss_mask_7: 0.1565  loss_dice_7: 1.153  loss_ce_8: 0.4213  loss_mask_8: 0.1588  loss_dice_8: 1.216    time: 0.6796  last_time: 0.6755  data_time: 0.0517  last_data_time: 0.0390   lr: 0.0001  max_mem: 17141M
[09/13 09:28:12] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:11:18 (0.6796 s / it)
[09/13 09:28:12] d2.engine.hooks INFO: Total training time: 0:11:23 (0:00:05 on hooks)
[09/13 09:28:12] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/13 09:28:12] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/13 09:28:12] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/13 09:28:12] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/13 09:28:12] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/13 09:28:12] d2.evaluation.evaluator INFO: Start inference on 250 batches
[09/13 09:28:20] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0074 s/iter. Inference: 0.3298 s/iter. Eval: 0.0735 s/iter. Total: 0.4107 s/iter. ETA=0:01:38
[09/13 09:28:26] d2.evaluation.evaluator INFO: Inference done 26/250. Dataloading: 0.0063 s/iter. Inference: 0.2756 s/iter. Eval: 0.0786 s/iter. Total: 0.3606 s/iter. ETA=0:01:20
[09/13 09:28:31] d2.evaluation.evaluator INFO: Inference done 42/250. Dataloading: 0.0059 s/iter. Inference: 0.2631 s/iter. Eval: 0.0718 s/iter. Total: 0.3408 s/iter. ETA=0:01:10
[09/13 09:28:36] d2.evaluation.evaluator INFO: Inference done 57/250. Dataloading: 0.0058 s/iter. Inference: 0.2625 s/iter. Eval: 0.0723 s/iter. Total: 0.3406 s/iter. ETA=0:01:05
[09/13 09:28:41] d2.evaluation.evaluator INFO: Inference done 72/250. Dataloading: 0.0058 s/iter. Inference: 0.2625 s/iter. Eval: 0.0731 s/iter. Total: 0.3414 s/iter. ETA=0:01:00
[09/13 09:28:46] d2.evaluation.evaluator INFO: Inference done 88/250. Dataloading: 0.0058 s/iter. Inference: 0.2607 s/iter. Eval: 0.0732 s/iter. Total: 0.3397 s/iter. ETA=0:00:55
[09/13 09:28:51] d2.evaluation.evaluator INFO: Inference done 103/250. Dataloading: 0.0058 s/iter. Inference: 0.2613 s/iter. Eval: 0.0743 s/iter. Total: 0.3414 s/iter. ETA=0:00:50
[09/13 09:28:57] d2.evaluation.evaluator INFO: Inference done 118/250. Dataloading: 0.0058 s/iter. Inference: 0.2635 s/iter. Eval: 0.0734 s/iter. Total: 0.3427 s/iter. ETA=0:00:45
[09/13 09:29:02] d2.evaluation.evaluator INFO: Inference done 131/250. Dataloading: 0.0058 s/iter. Inference: 0.2676 s/iter. Eval: 0.0738 s/iter. Total: 0.3473 s/iter. ETA=0:00:41
[09/13 09:29:07] d2.evaluation.evaluator INFO: Inference done 144/250. Dataloading: 0.0062 s/iter. Inference: 0.2722 s/iter. Eval: 0.0748 s/iter. Total: 0.3533 s/iter. ETA=0:00:37
[09/13 09:29:12] d2.evaluation.evaluator INFO: Inference done 157/250. Dataloading: 0.0067 s/iter. Inference: 0.2752 s/iter. Eval: 0.0747 s/iter. Total: 0.3566 s/iter. ETA=0:00:33
[09/13 09:29:17] d2.evaluation.evaluator INFO: Inference done 172/250. Dataloading: 0.0068 s/iter. Inference: 0.2739 s/iter. Eval: 0.0750 s/iter. Total: 0.3557 s/iter. ETA=0:00:27
[09/13 09:29:23] d2.evaluation.evaluator INFO: Inference done 185/250. Dataloading: 0.0067 s/iter. Inference: 0.2782 s/iter. Eval: 0.0744 s/iter. Total: 0.3594 s/iter. ETA=0:00:23
[09/13 09:29:28] d2.evaluation.evaluator INFO: Inference done 199/250. Dataloading: 0.0067 s/iter. Inference: 0.2793 s/iter. Eval: 0.0744 s/iter. Total: 0.3604 s/iter. ETA=0:00:18
[09/13 09:29:33] d2.evaluation.evaluator INFO: Inference done 213/250. Dataloading: 0.0066 s/iter. Inference: 0.2791 s/iter. Eval: 0.0745 s/iter. Total: 0.3602 s/iter. ETA=0:00:13
[09/13 09:29:38] d2.evaluation.evaluator INFO: Inference done 229/250. Dataloading: 0.0066 s/iter. Inference: 0.2770 s/iter. Eval: 0.0741 s/iter. Total: 0.3577 s/iter. ETA=0:00:07
[09/13 09:29:43] d2.evaluation.evaluator INFO: Inference done 246/250. Dataloading: 0.0065 s/iter. Inference: 0.2745 s/iter. Eval: 0.0730 s/iter. Total: 0.3541 s/iter. ETA=0:00:01
[09/13 09:29:45] d2.evaluation.evaluator INFO: Total inference time: 0:01:27.183412 (0.355851 s / iter per device, on 2 devices)
[09/13 09:29:45] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:07 (0.274016 s / iter per device, on 2 devices)
[09/13 09:29:45] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evaljerugel9 ...
[09/13 09:30:49] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 54.570 | 80.759 | 66.393 |      19       |
| Things | 47.696 | 80.295 | 59.123 |       8       |
| Stuff  | 59.569 | 81.097 | 71.681 |      11       |
[09/13 09:30:49] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.518 | 97.122 | 99.378 |     Stuff     |
| class_8  | 64.810 | 83.501 | 77.616 |     Stuff     |
| class_11 | 85.445 | 87.808 | 97.308 |     Stuff     |
| class_12 | 31.981 | 80.629 | 39.665 |     Stuff     |
| class_13 | 19.242 | 75.526 | 25.478 |     Stuff     |
| class_17 | 41.742 | 63.409 | 65.831 |     Stuff     |
| class_19 | 48.649 | 69.213 | 70.289 |     Stuff     |
| class_20 | 64.494 | 76.524 | 84.279 |     Stuff     |
| class_21 | 88.103 | 89.488 | 98.452 |     Stuff     |
| class_22 | 27.027 | 77.170 | 35.023 |     Stuff     |
| class_23 | 87.252 | 91.676 | 95.174 |     Stuff     |
| class_24 | 45.330 | 76.640 | 59.146 |    Things     |
| class_25 | 46.951 | 75.137 | 62.487 |    Things     |
| class_26 | 63.953 | 83.683 | 76.423 |    Things     |
| class_27 | 45.115 | 86.797 | 51.977 |    Things     |
| class_28 | 61.794 | 91.480 | 67.550 |    Things     |
| class_31 | 44.179 | 84.677 | 52.174 |    Things     |
| class_32 | 35.961 | 73.011 | 49.254 |    Things     |
| class_33 | 38.286 | 70.935 | 53.973 |    Things     |
[09/13 09:30:49] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[09/13 09:30:49] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/13 09:30:49] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/13 09:30:49] d2.evaluation.testing INFO: copypaste: 54.5701,80.7593,66.3935,47.6961,80.2950,59.1230,59.5693,81.0969,71.6811,96.5178,97.1223,99.3776,64.8097,83.5009,77.6156,85.4446,87.8079,97.3085,31.9814,80.6292,39.6648,19.2422,75.5258,25.4777,41.7423,63.4086,65.8307,48.6488,69.2129,70.2886,64.4942,76.5243,84.2795,88.1025,89.4878,98.4520,27.0273,77.1701,35.0230,87.2516,91.6759,95.1740,45.3299,76.6402,59.1463,46.9506,75.1366,62.4869,63.9533,83.6834,76.4229,45.1148,86.7970,51.9774,61.7944,91.4799,67.5497,44.1791,84.6766,52.1739,35.9609,73.0115,49.2537,38.2859,70.9353,53.9730
