[09/13 09:31:36] detectron2 INFO: Rank of current process: 0. World size: 2
[09/13 09:31:37] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/13 09:31:37] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_1000_1000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[09/13 09:31:37] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1000_1000_1000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_1000_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[09/13 09:31:37] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_1000_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/13 09:31:37] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_1000_19/config.yaml
[09/13 09:31:37] d2.utils.env INFO: Using a generated random seed 38863965
[09/13 09:31:41] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/13 09:31:41] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/13 09:31:41] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/13 09:31:41] d2.data.build INFO: Using training sampler TrainingSampler
[09/13 09:31:41] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/13 09:31:41] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/13 09:31:42] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/13 09:31:42] d2.data.build INFO: Making batched data loader with batch_size=4
[09/13 09:31:42] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/13 09:31:42] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19/model_final.pth ...
[09/13 09:31:42] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_19/model_final.pth ...
[09/13 09:31:44] d2.engine.train_loop INFO: Starting training from iteration 0
[09/13 09:32:04] d2.utils.events INFO:  eta: 0:11:11  iter: 19  total_loss: 19.66  loss_ce: 0.4711  loss_mask: 0.1666  loss_dice: 1.199  loss_ce_0: 0.5453  loss_mask_0: 0.1879  loss_dice_0: 1.44  loss_ce_1: 0.5992  loss_mask_1: 0.1842  loss_dice_1: 1.38  loss_ce_2: 0.587  loss_mask_2: 0.1691  loss_dice_2: 1.337  loss_ce_3: 0.4915  loss_mask_3: 0.1717  loss_dice_3: 1.249  loss_ce_4: 0.4997  loss_mask_4: 0.1686  loss_dice_4: 1.257  loss_ce_5: 0.4811  loss_mask_5: 0.1675  loss_dice_5: 1.238  loss_ce_6: 0.4866  loss_mask_6: 0.1654  loss_dice_6: 1.225  loss_ce_7: 0.448  loss_mask_7: 0.1668  loss_dice_7: 1.264  loss_ce_8: 0.4786  loss_mask_8: 0.1644  loss_dice_8: 1.228    time: 0.6969  last_time: 0.6567  data_time: 0.2459  last_data_time: 0.0394   lr: 0.0001  max_mem: 16092M
[09/13 09:32:17] d2.utils.events INFO:  eta: 0:10:50  iter: 39  total_loss: 19.11  loss_ce: 0.4183  loss_mask: 0.1501  loss_dice: 1.193  loss_ce_0: 0.6001  loss_mask_0: 0.1697  loss_dice_0: 1.384  loss_ce_1: 0.607  loss_mask_1: 0.164  loss_dice_1: 1.323  loss_ce_2: 0.5389  loss_mask_2: 0.155  loss_dice_2: 1.272  loss_ce_3: 0.5076  loss_mask_3: 0.1569  loss_dice_3: 1.21  loss_ce_4: 0.4745  loss_mask_4: 0.1522  loss_dice_4: 1.256  loss_ce_5: 0.4786  loss_mask_5: 0.1492  loss_dice_5: 1.2  loss_ce_6: 0.4331  loss_mask_6: 0.1516  loss_dice_6: 1.188  loss_ce_7: 0.425  loss_mask_7: 0.1496  loss_dice_7: 1.211  loss_ce_8: 0.4482  loss_mask_8: 0.1504  loss_dice_8: 1.191    time: 0.6803  last_time: 0.5964  data_time: 0.0451  last_data_time: 0.0506   lr: 0.0001  max_mem: 16273M
[09/13 09:32:31] d2.utils.events INFO:  eta: 0:10:39  iter: 59  total_loss: 20.65  loss_ce: 0.4139  loss_mask: 0.1548  loss_dice: 1.286  loss_ce_0: 0.5744  loss_mask_0: 0.1744  loss_dice_0: 1.549  loss_ce_1: 0.6357  loss_mask_1: 0.1661  loss_dice_1: 1.424  loss_ce_2: 0.5462  loss_mask_2: 0.1591  loss_dice_2: 1.374  loss_ce_3: 0.4899  loss_mask_3: 0.1608  loss_dice_3: 1.342  loss_ce_4: 0.473  loss_mask_4: 0.1576  loss_dice_4: 1.304  loss_ce_5: 0.4747  loss_mask_5: 0.1545  loss_dice_5: 1.333  loss_ce_6: 0.4215  loss_mask_6: 0.153  loss_dice_6: 1.337  loss_ce_7: 0.4597  loss_mask_7: 0.153  loss_dice_7: 1.291  loss_ce_8: 0.4446  loss_mask_8: 0.1525  loss_dice_8: 1.3    time: 0.6802  last_time: 0.6835  data_time: 0.0654  last_data_time: 0.0751   lr: 0.0001  max_mem: 16316M
[09/13 09:32:44] d2.utils.events INFO:  eta: 0:10:19  iter: 79  total_loss: 17.63  loss_ce: 0.3919  loss_mask: 0.1667  loss_dice: 1.099  loss_ce_0: 0.5332  loss_mask_0: 0.1925  loss_dice_0: 1.291  loss_ce_1: 0.5648  loss_mask_1: 0.173  loss_dice_1: 1.232  loss_ce_2: 0.5061  loss_mask_2: 0.1733  loss_dice_2: 1.169  loss_ce_3: 0.4962  loss_mask_3: 0.1704  loss_dice_3: 1.142  loss_ce_4: 0.4324  loss_mask_4: 0.1684  loss_dice_4: 1.119  loss_ce_5: 0.4305  loss_mask_5: 0.166  loss_dice_5: 1.103  loss_ce_6: 0.4209  loss_mask_6: 0.165  loss_dice_6: 1.074  loss_ce_7: 0.3872  loss_mask_7: 0.1685  loss_dice_7: 1.122  loss_ce_8: 0.4115  loss_mask_8: 0.1659  loss_dice_8: 1.115    time: 0.6722  last_time: 0.7534  data_time: 0.0481  last_data_time: 0.1599   lr: 0.0001  max_mem: 16316M
[09/13 09:32:58] d2.utils.events INFO:  eta: 0:10:09  iter: 99  total_loss: 18.49  loss_ce: 0.3856  loss_mask: 0.1696  loss_dice: 1.205  loss_ce_0: 0.4997  loss_mask_0: 0.197  loss_dice_0: 1.424  loss_ce_1: 0.536  loss_mask_1: 0.1864  loss_dice_1: 1.371  loss_ce_2: 0.4665  loss_mask_2: 0.1803  loss_dice_2: 1.296  loss_ce_3: 0.4457  loss_mask_3: 0.1777  loss_dice_3: 1.282  loss_ce_4: 0.4375  loss_mask_4: 0.1754  loss_dice_4: 1.245  loss_ce_5: 0.4344  loss_mask_5: 0.1742  loss_dice_5: 1.228  loss_ce_6: 0.3889  loss_mask_6: 0.175  loss_dice_6: 1.259  loss_ce_7: 0.3997  loss_mask_7: 0.1755  loss_dice_7: 1.23  loss_ce_8: 0.4051  loss_mask_8: 0.1745  loss_dice_8: 1.234    time: 0.6745  last_time: 0.6328  data_time: 0.0477  last_data_time: 0.0353   lr: 0.0001  max_mem: 16316M
[09/13 09:33:11] d2.utils.events INFO:  eta: 0:09:56  iter: 119  total_loss: 19.71  loss_ce: 0.4608  loss_mask: 0.1535  loss_dice: 1.278  loss_ce_0: 0.5397  loss_mask_0: 0.1783  loss_dice_0: 1.5  loss_ce_1: 0.6246  loss_mask_1: 0.1686  loss_dice_1: 1.405  loss_ce_2: 0.5564  loss_mask_2: 0.1634  loss_dice_2: 1.362  loss_ce_3: 0.522  loss_mask_3: 0.1577  loss_dice_3: 1.252  loss_ce_4: 0.49  loss_mask_4: 0.1594  loss_dice_4: 1.249  loss_ce_5: 0.4925  loss_mask_5: 0.1552  loss_dice_5: 1.283  loss_ce_6: 0.4501  loss_mask_6: 0.1579  loss_dice_6: 1.252  loss_ce_7: 0.4494  loss_mask_7: 0.1562  loss_dice_7: 1.248  loss_ce_8: 0.4605  loss_mask_8: 0.1532  loss_dice_8: 1.275    time: 0.6750  last_time: 0.6838  data_time: 0.0503  last_data_time: 0.0402   lr: 0.0001  max_mem: 16316M
[09/13 09:33:25] d2.utils.events INFO:  eta: 0:09:41  iter: 139  total_loss: 19.19  loss_ce: 0.4057  loss_mask: 0.15  loss_dice: 1.225  loss_ce_0: 0.5095  loss_mask_0: 0.1852  loss_dice_0: 1.436  loss_ce_1: 0.5865  loss_mask_1: 0.1676  loss_dice_1: 1.319  loss_ce_2: 0.5282  loss_mask_2: 0.1562  loss_dice_2: 1.267  loss_ce_3: 0.4685  loss_mask_3: 0.1538  loss_dice_3: 1.219  loss_ce_4: 0.464  loss_mask_4: 0.1528  loss_dice_4: 1.219  loss_ce_5: 0.4452  loss_mask_5: 0.1518  loss_dice_5: 1.232  loss_ce_6: 0.4158  loss_mask_6: 0.1509  loss_dice_6: 1.22  loss_ce_7: 0.4003  loss_mask_7: 0.1509  loss_dice_7: 1.212  loss_ce_8: 0.4213  loss_mask_8: 0.1498  loss_dice_8: 1.174    time: 0.6736  last_time: 0.6672  data_time: 0.0545  last_data_time: 0.0381   lr: 0.0001  max_mem: 16395M
[09/13 09:33:39] d2.utils.events INFO:  eta: 0:09:29  iter: 159  total_loss: 18.95  loss_ce: 0.426  loss_mask: 0.1621  loss_dice: 1.155  loss_ce_0: 0.5883  loss_mask_0: 0.1878  loss_dice_0: 1.37  loss_ce_1: 0.645  loss_mask_1: 0.1693  loss_dice_1: 1.289  loss_ce_2: 0.5798  loss_mask_2: 0.1673  loss_dice_2: 1.22  loss_ce_3: 0.5141  loss_mask_3: 0.1668  loss_dice_3: 1.157  loss_ce_4: 0.4705  loss_mask_4: 0.1632  loss_dice_4: 1.175  loss_ce_5: 0.4569  loss_mask_5: 0.1652  loss_dice_5: 1.158  loss_ce_6: 0.4599  loss_mask_6: 0.1635  loss_dice_6: 1.181  loss_ce_7: 0.4554  loss_mask_7: 0.1636  loss_dice_7: 1.168  loss_ce_8: 0.4361  loss_mask_8: 0.163  loss_dice_8: 1.156    time: 0.6768  last_time: 0.6710  data_time: 0.0525  last_data_time: 0.0402   lr: 0.0001  max_mem: 16395M
[09/13 09:33:52] d2.utils.events INFO:  eta: 0:09:15  iter: 179  total_loss: 19.31  loss_ce: 0.4553  loss_mask: 0.1714  loss_dice: 1.183  loss_ce_0: 0.5752  loss_mask_0: 0.1952  loss_dice_0: 1.342  loss_ce_1: 0.5911  loss_mask_1: 0.1762  loss_dice_1: 1.296  loss_ce_2: 0.5564  loss_mask_2: 0.1761  loss_dice_2: 1.284  loss_ce_3: 0.4861  loss_mask_3: 0.1736  loss_dice_3: 1.201  loss_ce_4: 0.4564  loss_mask_4: 0.1693  loss_dice_4: 1.21  loss_ce_5: 0.4172  loss_mask_5: 0.1668  loss_dice_5: 1.188  loss_ce_6: 0.4572  loss_mask_6: 0.1693  loss_dice_6: 1.186  loss_ce_7: 0.432  loss_mask_7: 0.17  loss_dice_7: 1.198  loss_ce_8: 0.4327  loss_mask_8: 0.1707  loss_dice_8: 1.203    time: 0.6758  last_time: 0.6770  data_time: 0.0407  last_data_time: 0.0316   lr: 0.0001  max_mem: 16613M
[09/13 09:34:06] d2.utils.events INFO:  eta: 0:09:02  iter: 199  total_loss: 19.35  loss_ce: 0.445  loss_mask: 0.1551  loss_dice: 1.222  loss_ce_0: 0.5318  loss_mask_0: 0.1776  loss_dice_0: 1.395  loss_ce_1: 0.6014  loss_mask_1: 0.1715  loss_dice_1: 1.343  loss_ce_2: 0.5695  loss_mask_2: 0.1656  loss_dice_2: 1.307  loss_ce_3: 0.4788  loss_mask_3: 0.1639  loss_dice_3: 1.235  loss_ce_4: 0.4493  loss_mask_4: 0.1595  loss_dice_4: 1.225  loss_ce_5: 0.4306  loss_mask_5: 0.1584  loss_dice_5: 1.217  loss_ce_6: 0.4429  loss_mask_6: 0.1573  loss_dice_6: 1.226  loss_ce_7: 0.4287  loss_mask_7: 0.1559  loss_dice_7: 1.177  loss_ce_8: 0.4587  loss_mask_8: 0.1563  loss_dice_8: 1.214    time: 0.6757  last_time: 0.5909  data_time: 0.0489  last_data_time: 0.0345   lr: 0.0001  max_mem: 16613M
[09/13 09:34:19] d2.utils.events INFO:  eta: 0:08:48  iter: 219  total_loss: 18.63  loss_ce: 0.4088  loss_mask: 0.1621  loss_dice: 1.194  loss_ce_0: 0.5122  loss_mask_0: 0.1811  loss_dice_0: 1.367  loss_ce_1: 0.5911  loss_mask_1: 0.1704  loss_dice_1: 1.283  loss_ce_2: 0.542  loss_mask_2: 0.1685  loss_dice_2: 1.268  loss_ce_3: 0.4901  loss_mask_3: 0.1635  loss_dice_3: 1.184  loss_ce_4: 0.4474  loss_mask_4: 0.1639  loss_dice_4: 1.221  loss_ce_5: 0.4355  loss_mask_5: 0.1636  loss_dice_5: 1.17  loss_ce_6: 0.4366  loss_mask_6: 0.164  loss_dice_6: 1.154  loss_ce_7: 0.415  loss_mask_7: 0.164  loss_dice_7: 1.177  loss_ce_8: 0.4181  loss_mask_8: 0.1623  loss_dice_8: 1.199    time: 0.6741  last_time: 0.6334  data_time: 0.0548  last_data_time: 0.0535   lr: 0.0001  max_mem: 16613M
[09/13 09:34:32] d2.utils.events INFO:  eta: 0:08:35  iter: 239  total_loss: 18.77  loss_ce: 0.4072  loss_mask: 0.1623  loss_dice: 1.178  loss_ce_0: 0.5414  loss_mask_0: 0.185  loss_dice_0: 1.402  loss_ce_1: 0.5925  loss_mask_1: 0.1716  loss_dice_1: 1.325  loss_ce_2: 0.5117  loss_mask_2: 0.1661  loss_dice_2: 1.291  loss_ce_3: 0.5074  loss_mask_3: 0.1662  loss_dice_3: 1.228  loss_ce_4: 0.4468  loss_mask_4: 0.1614  loss_dice_4: 1.207  loss_ce_5: 0.4446  loss_mask_5: 0.161  loss_dice_5: 1.177  loss_ce_6: 0.4158  loss_mask_6: 0.1595  loss_dice_6: 1.21  loss_ce_7: 0.4332  loss_mask_7: 0.1611  loss_dice_7: 1.186  loss_ce_8: 0.4155  loss_mask_8: 0.1629  loss_dice_8: 1.205    time: 0.6742  last_time: 0.6846  data_time: 0.0457  last_data_time: 0.0436   lr: 0.0001  max_mem: 16613M
[09/13 09:34:46] d2.utils.events INFO:  eta: 0:08:22  iter: 259  total_loss: 19.52  loss_ce: 0.4429  loss_mask: 0.163  loss_dice: 1.255  loss_ce_0: 0.5831  loss_mask_0: 0.195  loss_dice_0: 1.428  loss_ce_1: 0.5864  loss_mask_1: 0.1746  loss_dice_1: 1.407  loss_ce_2: 0.5306  loss_mask_2: 0.1708  loss_dice_2: 1.365  loss_ce_3: 0.4922  loss_mask_3: 0.1702  loss_dice_3: 1.262  loss_ce_4: 0.4783  loss_mask_4: 0.1671  loss_dice_4: 1.295  loss_ce_5: 0.447  loss_mask_5: 0.1656  loss_dice_5: 1.253  loss_ce_6: 0.4429  loss_mask_6: 0.1661  loss_dice_6: 1.265  loss_ce_7: 0.4337  loss_mask_7: 0.1657  loss_dice_7: 1.236  loss_ce_8: 0.442  loss_mask_8: 0.166  loss_dice_8: 1.217    time: 0.6737  last_time: 0.6897  data_time: 0.0583  last_data_time: 0.0385   lr: 0.0001  max_mem: 16613M
[09/13 09:35:00] d2.utils.events INFO:  eta: 0:08:09  iter: 279  total_loss: 19  loss_ce: 0.4235  loss_mask: 0.1551  loss_dice: 1.2  loss_ce_0: 0.524  loss_mask_0: 0.1793  loss_dice_0: 1.399  loss_ce_1: 0.578  loss_mask_1: 0.1672  loss_dice_1: 1.288  loss_ce_2: 0.522  loss_mask_2: 0.1613  loss_dice_2: 1.283  loss_ce_3: 0.4581  loss_mask_3: 0.1585  loss_dice_3: 1.231  loss_ce_4: 0.4297  loss_mask_4: 0.1562  loss_dice_4: 1.22  loss_ce_5: 0.4364  loss_mask_5: 0.1546  loss_dice_5: 1.202  loss_ce_6: 0.4036  loss_mask_6: 0.1557  loss_dice_6: 1.2  loss_ce_7: 0.4146  loss_mask_7: 0.1553  loss_dice_7: 1.185  loss_ce_8: 0.4195  loss_mask_8: 0.1538  loss_dice_8: 1.161    time: 0.6746  last_time: 0.6867  data_time: 0.0539  last_data_time: 0.0393   lr: 0.0001  max_mem: 16613M
[09/13 09:35:13] d2.utils.events INFO:  eta: 0:07:54  iter: 299  total_loss: 18.43  loss_ce: 0.4227  loss_mask: 0.1691  loss_dice: 1.19  loss_ce_0: 0.5376  loss_mask_0: 0.1909  loss_dice_0: 1.416  loss_ce_1: 0.5401  loss_mask_1: 0.1817  loss_dice_1: 1.333  loss_ce_2: 0.4789  loss_mask_2: 0.1756  loss_dice_2: 1.265  loss_ce_3: 0.4374  loss_mask_3: 0.1718  loss_dice_3: 1.206  loss_ce_4: 0.4498  loss_mask_4: 0.1699  loss_dice_4: 1.197  loss_ce_5: 0.4245  loss_mask_5: 0.1695  loss_dice_5: 1.219  loss_ce_6: 0.4353  loss_mask_6: 0.1703  loss_dice_6: 1.186  loss_ce_7: 0.4274  loss_mask_7: 0.169  loss_dice_7: 1.173  loss_ce_8: 0.4418  loss_mask_8: 0.1692  loss_dice_8: 1.2    time: 0.6751  last_time: 0.7186  data_time: 0.0483  last_data_time: 0.0589   lr: 0.0001  max_mem: 16613M
[09/13 09:35:27] d2.utils.events INFO:  eta: 0:07:41  iter: 319  total_loss: 18.2  loss_ce: 0.4527  loss_mask: 0.1565  loss_dice: 1.13  loss_ce_0: 0.5182  loss_mask_0: 0.1883  loss_dice_0: 1.366  loss_ce_1: 0.5596  loss_mask_1: 0.1729  loss_dice_1: 1.274  loss_ce_2: 0.5207  loss_mask_2: 0.168  loss_dice_2: 1.211  loss_ce_3: 0.4597  loss_mask_3: 0.1617  loss_dice_3: 1.169  loss_ce_4: 0.4529  loss_mask_4: 0.1579  loss_dice_4: 1.137  loss_ce_5: 0.4492  loss_mask_5: 0.1581  loss_dice_5: 1.166  loss_ce_6: 0.4024  loss_mask_6: 0.1592  loss_dice_6: 1.171  loss_ce_7: 0.4069  loss_mask_7: 0.1566  loss_dice_7: 1.124  loss_ce_8: 0.4171  loss_mask_8: 0.1551  loss_dice_8: 1.146    time: 0.6758  last_time: 0.6941  data_time: 0.0506  last_data_time: 0.0386   lr: 0.0001  max_mem: 16613M
[09/13 09:35:41] d2.utils.events INFO:  eta: 0:07:28  iter: 339  total_loss: 19.09  loss_ce: 0.4795  loss_mask: 0.1571  loss_dice: 1.162  loss_ce_0: 0.568  loss_mask_0: 0.1884  loss_dice_0: 1.436  loss_ce_1: 0.6375  loss_mask_1: 0.1784  loss_dice_1: 1.374  loss_ce_2: 0.596  loss_mask_2: 0.1644  loss_dice_2: 1.281  loss_ce_3: 0.5164  loss_mask_3: 0.1617  loss_dice_3: 1.217  loss_ce_4: 0.4786  loss_mask_4: 0.1581  loss_dice_4: 1.184  loss_ce_5: 0.4708  loss_mask_5: 0.1576  loss_dice_5: 1.226  loss_ce_6: 0.4671  loss_mask_6: 0.1607  loss_dice_6: 1.145  loss_ce_7: 0.4575  loss_mask_7: 0.1597  loss_dice_7: 1.166  loss_ce_8: 0.4744  loss_mask_8: 0.1584  loss_dice_8: 1.156    time: 0.6766  last_time: 0.7810  data_time: 0.0612  last_data_time: 0.0674   lr: 0.0001  max_mem: 16613M
[09/13 09:35:54] d2.utils.events INFO:  eta: 0:07:14  iter: 359  total_loss: 18.76  loss_ce: 0.4269  loss_mask: 0.1652  loss_dice: 1.13  loss_ce_0: 0.5572  loss_mask_0: 0.1945  loss_dice_0: 1.341  loss_ce_1: 0.6044  loss_mask_1: 0.1795  loss_dice_1: 1.244  loss_ce_2: 0.5449  loss_mask_2: 0.1705  loss_dice_2: 1.236  loss_ce_3: 0.4911  loss_mask_3: 0.164  loss_dice_3: 1.184  loss_ce_4: 0.4686  loss_mask_4: 0.1672  loss_dice_4: 1.189  loss_ce_5: 0.4167  loss_mask_5: 0.1646  loss_dice_5: 1.162  loss_ce_6: 0.4295  loss_mask_6: 0.1672  loss_dice_6: 1.172  loss_ce_7: 0.4609  loss_mask_7: 0.1663  loss_dice_7: 1.134  loss_ce_8: 0.4716  loss_mask_8: 0.1647  loss_dice_8: 1.174    time: 0.6768  last_time: 0.6883  data_time: 0.0558  last_data_time: 0.0380   lr: 0.0001  max_mem: 16613M
[09/13 09:36:09] d2.utils.events INFO:  eta: 0:07:01  iter: 379  total_loss: 18.21  loss_ce: 0.4038  loss_mask: 0.1453  loss_dice: 1.124  loss_ce_0: 0.5469  loss_mask_0: 0.1716  loss_dice_0: 1.33  loss_ce_1: 0.5691  loss_mask_1: 0.1517  loss_dice_1: 1.265  loss_ce_2: 0.5256  loss_mask_2: 0.1468  loss_dice_2: 1.252  loss_ce_3: 0.4697  loss_mask_3: 0.1454  loss_dice_3: 1.151  loss_ce_4: 0.4476  loss_mask_4: 0.1477  loss_dice_4: 1.177  loss_ce_5: 0.4099  loss_mask_5: 0.146  loss_dice_5: 1.174  loss_ce_6: 0.4193  loss_mask_6: 0.1477  loss_dice_6: 1.134  loss_ce_7: 0.4196  loss_mask_7: 0.1461  loss_dice_7: 1.124  loss_ce_8: 0.4062  loss_mask_8: 0.1444  loss_dice_8: 1.157    time: 0.6784  last_time: 0.7165  data_time: 0.0656  last_data_time: 0.0427   lr: 0.0001  max_mem: 16613M
[09/13 09:36:22] d2.utils.events INFO:  eta: 0:06:47  iter: 399  total_loss: 18.3  loss_ce: 0.3563  loss_mask: 0.1533  loss_dice: 1.159  loss_ce_0: 0.5041  loss_mask_0: 0.1774  loss_dice_0: 1.364  loss_ce_1: 0.5276  loss_mask_1: 0.1704  loss_dice_1: 1.277  loss_ce_2: 0.5289  loss_mask_2: 0.1592  loss_dice_2: 1.235  loss_ce_3: 0.4187  loss_mask_3: 0.1576  loss_dice_3: 1.17  loss_ce_4: 0.4183  loss_mask_4: 0.1554  loss_dice_4: 1.165  loss_ce_5: 0.4155  loss_mask_5: 0.1555  loss_dice_5: 1.188  loss_ce_6: 0.402  loss_mask_6: 0.1546  loss_dice_6: 1.173  loss_ce_7: 0.368  loss_mask_7: 0.1535  loss_dice_7: 1.155  loss_ce_8: 0.3605  loss_mask_8: 0.1548  loss_dice_8: 1.191    time: 0.6783  last_time: 0.6985  data_time: 0.0509  last_data_time: 0.0383   lr: 0.0001  max_mem: 16761M
[09/13 09:36:36] d2.utils.events INFO:  eta: 0:06:34  iter: 419  total_loss: 17.35  loss_ce: 0.4071  loss_mask: 0.1529  loss_dice: 1.106  loss_ce_0: 0.5167  loss_mask_0: 0.1702  loss_dice_0: 1.359  loss_ce_1: 0.5593  loss_mask_1: 0.1637  loss_dice_1: 1.26  loss_ce_2: 0.5155  loss_mask_2: 0.1551  loss_dice_2: 1.201  loss_ce_3: 0.417  loss_mask_3: 0.154  loss_dice_3: 1.147  loss_ce_4: 0.4234  loss_mask_4: 0.1539  loss_dice_4: 1.177  loss_ce_5: 0.4033  loss_mask_5: 0.1529  loss_dice_5: 1.121  loss_ce_6: 0.403  loss_mask_6: 0.153  loss_dice_6: 1.119  loss_ce_7: 0.4014  loss_mask_7: 0.1548  loss_dice_7: 1.12  loss_ce_8: 0.3857  loss_mask_8: 0.1542  loss_dice_8: 1.125    time: 0.6795  last_time: 0.6604  data_time: 0.0539  last_data_time: 0.0408   lr: 0.0001  max_mem: 17001M
[09/13 09:36:50] d2.utils.events INFO:  eta: 0:06:20  iter: 439  total_loss: 17.53  loss_ce: 0.3725  loss_mask: 0.1609  loss_dice: 1.064  loss_ce_0: 0.5147  loss_mask_0: 0.1865  loss_dice_0: 1.303  loss_ce_1: 0.5263  loss_mask_1: 0.1756  loss_dice_1: 1.2  loss_ce_2: 0.4696  loss_mask_2: 0.1656  loss_dice_2: 1.158  loss_ce_3: 0.437  loss_mask_3: 0.1657  loss_dice_3: 1.102  loss_ce_4: 0.4243  loss_mask_4: 0.1611  loss_dice_4: 1.122  loss_ce_5: 0.407  loss_mask_5: 0.1621  loss_dice_5: 1.084  loss_ce_6: 0.3674  loss_mask_6: 0.1629  loss_dice_6: 1.07  loss_ce_7: 0.3827  loss_mask_7: 0.1613  loss_dice_7: 1.086  loss_ce_8: 0.4093  loss_mask_8: 0.16  loss_dice_8: 1.081    time: 0.6797  last_time: 0.6633  data_time: 0.0588  last_data_time: 0.0442   lr: 0.0001  max_mem: 17196M
[09/13 09:37:04] d2.utils.events INFO:  eta: 0:06:07  iter: 459  total_loss: 19.22  loss_ce: 0.4405  loss_mask: 0.158  loss_dice: 1.233  loss_ce_0: 0.5283  loss_mask_0: 0.1799  loss_dice_0: 1.404  loss_ce_1: 0.576  loss_mask_1: 0.1668  loss_dice_1: 1.312  loss_ce_2: 0.5894  loss_mask_2: 0.1567  loss_dice_2: 1.289  loss_ce_3: 0.488  loss_mask_3: 0.157  loss_dice_3: 1.26  loss_ce_4: 0.451  loss_mask_4: 0.1552  loss_dice_4: 1.285  loss_ce_5: 0.4545  loss_mask_5: 0.1526  loss_dice_5: 1.227  loss_ce_6: 0.4312  loss_mask_6: 0.1566  loss_dice_6: 1.245  loss_ce_7: 0.4359  loss_mask_7: 0.1558  loss_dice_7: 1.202  loss_ce_8: 0.4648  loss_mask_8: 0.1558  loss_dice_8: 1.204    time: 0.6804  last_time: 0.5766  data_time: 0.0544  last_data_time: 0.0313   lr: 0.0001  max_mem: 17196M
[09/13 09:37:18] d2.utils.events INFO:  eta: 0:05:53  iter: 479  total_loss: 19.57  loss_ce: 0.441  loss_mask: 0.1597  loss_dice: 1.218  loss_ce_0: 0.5496  loss_mask_0: 0.1864  loss_dice_0: 1.417  loss_ce_1: 0.5966  loss_mask_1: 0.1734  loss_dice_1: 1.378  loss_ce_2: 0.5347  loss_mask_2: 0.1644  loss_dice_2: 1.309  loss_ce_3: 0.4873  loss_mask_3: 0.1627  loss_dice_3: 1.247  loss_ce_4: 0.4697  loss_mask_4: 0.1617  loss_dice_4: 1.279  loss_ce_5: 0.4542  loss_mask_5: 0.1585  loss_dice_5: 1.269  loss_ce_6: 0.4342  loss_mask_6: 0.1598  loss_dice_6: 1.227  loss_ce_7: 0.4422  loss_mask_7: 0.1604  loss_dice_7: 1.228  loss_ce_8: 0.4568  loss_mask_8: 0.1611  loss_dice_8: 1.191    time: 0.6804  last_time: 0.7155  data_time: 0.0528  last_data_time: 0.0437   lr: 0.0001  max_mem: 17196M
[09/13 09:37:31] d2.utils.events INFO:  eta: 0:05:40  iter: 499  total_loss: 17.93  loss_ce: 0.3786  loss_mask: 0.1577  loss_dice: 1.121  loss_ce_0: 0.5  loss_mask_0: 0.1869  loss_dice_0: 1.33  loss_ce_1: 0.57  loss_mask_1: 0.1684  loss_dice_1: 1.256  loss_ce_2: 0.497  loss_mask_2: 0.1597  loss_dice_2: 1.184  loss_ce_3: 0.431  loss_mask_3: 0.1608  loss_dice_3: 1.179  loss_ce_4: 0.4326  loss_mask_4: 0.1617  loss_dice_4: 1.144  loss_ce_5: 0.423  loss_mask_5: 0.1583  loss_dice_5: 1.113  loss_ce_6: 0.4006  loss_mask_6: 0.1591  loss_dice_6: 1.101  loss_ce_7: 0.3821  loss_mask_7: 0.1607  loss_dice_7: 1.123  loss_ce_8: 0.3794  loss_mask_8: 0.1608  loss_dice_8: 1.103    time: 0.6802  last_time: 0.6705  data_time: 0.0470  last_data_time: 0.0383   lr: 0.0001  max_mem: 17196M
[09/13 09:37:45] d2.utils.events INFO:  eta: 0:05:26  iter: 519  total_loss: 19.04  loss_ce: 0.4293  loss_mask: 0.1621  loss_dice: 1.187  loss_ce_0: 0.5282  loss_mask_0: 0.1875  loss_dice_0: 1.384  loss_ce_1: 0.6107  loss_mask_1: 0.1675  loss_dice_1: 1.32  loss_ce_2: 0.5236  loss_mask_2: 0.1666  loss_dice_2: 1.283  loss_ce_3: 0.476  loss_mask_3: 0.1659  loss_dice_3: 1.211  loss_ce_4: 0.4726  loss_mask_4: 0.164  loss_dice_4: 1.204  loss_ce_5: 0.4494  loss_mask_5: 0.1647  loss_dice_5: 1.209  loss_ce_6: 0.4508  loss_mask_6: 0.1651  loss_dice_6: 1.197  loss_ce_7: 0.4352  loss_mask_7: 0.1636  loss_dice_7: 1.217  loss_ce_8: 0.44  loss_mask_8: 0.1666  loss_dice_8: 1.191    time: 0.6798  last_time: 0.7100  data_time: 0.0419  last_data_time: 0.0445   lr: 0.0001  max_mem: 17196M
[09/13 09:37:59] d2.utils.events INFO:  eta: 0:05:12  iter: 539  total_loss: 18.19  loss_ce: 0.3961  loss_mask: 0.1478  loss_dice: 1.164  loss_ce_0: 0.5039  loss_mask_0: 0.1714  loss_dice_0: 1.388  loss_ce_1: 0.5376  loss_mask_1: 0.1594  loss_dice_1: 1.3  loss_ce_2: 0.4967  loss_mask_2: 0.151  loss_dice_2: 1.253  loss_ce_3: 0.4509  loss_mask_3: 0.1492  loss_dice_3: 1.193  loss_ce_4: 0.4199  loss_mask_4: 0.1497  loss_dice_4: 1.178  loss_ce_5: 0.4342  loss_mask_5: 0.1487  loss_dice_5: 1.187  loss_ce_6: 0.3828  loss_mask_6: 0.1509  loss_dice_6: 1.136  loss_ce_7: 0.3946  loss_mask_7: 0.1471  loss_dice_7: 1.157  loss_ce_8: 0.396  loss_mask_8: 0.1478  loss_dice_8: 1.164    time: 0.6799  last_time: 0.6591  data_time: 0.0520  last_data_time: 0.0584   lr: 0.0001  max_mem: 17196M
[09/13 09:38:12] d2.utils.events INFO:  eta: 0:04:59  iter: 559  total_loss: 18.39  loss_ce: 0.4486  loss_mask: 0.1667  loss_dice: 1.166  loss_ce_0: 0.5749  loss_mask_0: 0.1953  loss_dice_0: 1.39  loss_ce_1: 0.6324  loss_mask_1: 0.1834  loss_dice_1: 1.278  loss_ce_2: 0.5812  loss_mask_2: 0.1736  loss_dice_2: 1.257  loss_ce_3: 0.4818  loss_mask_3: 0.1723  loss_dice_3: 1.186  loss_ce_4: 0.5041  loss_mask_4: 0.1668  loss_dice_4: 1.19  loss_ce_5: 0.4645  loss_mask_5: 0.1661  loss_dice_5: 1.16  loss_ce_6: 0.4428  loss_mask_6: 0.1681  loss_dice_6: 1.167  loss_ce_7: 0.443  loss_mask_7: 0.1679  loss_dice_7: 1.143  loss_ce_8: 0.466  loss_mask_8: 0.1672  loss_dice_8: 1.132    time: 0.6798  last_time: 0.7061  data_time: 0.0512  last_data_time: 0.0488   lr: 0.0001  max_mem: 17196M
[09/13 09:38:26] d2.utils.events INFO:  eta: 0:04:46  iter: 579  total_loss: 18.61  loss_ce: 0.4404  loss_mask: 0.1498  loss_dice: 1.2  loss_ce_0: 0.4727  loss_mask_0: 0.1829  loss_dice_0: 1.419  loss_ce_1: 0.5765  loss_mask_1: 0.1694  loss_dice_1: 1.303  loss_ce_2: 0.5375  loss_mask_2: 0.152  loss_dice_2: 1.244  loss_ce_3: 0.4516  loss_mask_3: 0.1578  loss_dice_3: 1.217  loss_ce_4: 0.457  loss_mask_4: 0.1559  loss_dice_4: 1.222  loss_ce_5: 0.4488  loss_mask_5: 0.1539  loss_dice_5: 1.22  loss_ce_6: 0.4139  loss_mask_6: 0.1535  loss_dice_6: 1.209  loss_ce_7: 0.4302  loss_mask_7: 0.1515  loss_dice_7: 1.19  loss_ce_8: 0.4609  loss_mask_8: 0.1487  loss_dice_8: 1.162    time: 0.6798  last_time: 0.7062  data_time: 0.0482  last_data_time: 0.0420   lr: 0.0001  max_mem: 17196M
[09/13 09:38:39] d2.utils.events INFO:  eta: 0:04:32  iter: 599  total_loss: 18.4  loss_ce: 0.4347  loss_mask: 0.1638  loss_dice: 1.139  loss_ce_0: 0.5001  loss_mask_0: 0.1847  loss_dice_0: 1.371  loss_ce_1: 0.584  loss_mask_1: 0.1724  loss_dice_1: 1.321  loss_ce_2: 0.5722  loss_mask_2: 0.1669  loss_dice_2: 1.229  loss_ce_3: 0.4788  loss_mask_3: 0.1659  loss_dice_3: 1.183  loss_ce_4: 0.4705  loss_mask_4: 0.1655  loss_dice_4: 1.14  loss_ce_5: 0.4708  loss_mask_5: 0.1637  loss_dice_5: 1.18  loss_ce_6: 0.4135  loss_mask_6: 0.1645  loss_dice_6: 1.166  loss_ce_7: 0.4246  loss_mask_7: 0.1633  loss_dice_7: 1.126  loss_ce_8: 0.4295  loss_mask_8: 0.1631  loss_dice_8: 1.149    time: 0.6796  last_time: 0.6717  data_time: 0.0519  last_data_time: 0.0456   lr: 0.0001  max_mem: 17196M
[09/13 09:38:53] d2.utils.events INFO:  eta: 0:04:18  iter: 619  total_loss: 19.06  loss_ce: 0.4216  loss_mask: 0.1664  loss_dice: 1.207  loss_ce_0: 0.4948  loss_mask_0: 0.1914  loss_dice_0: 1.405  loss_ce_1: 0.5849  loss_mask_1: 0.1811  loss_dice_1: 1.306  loss_ce_2: 0.5491  loss_mask_2: 0.1681  loss_dice_2: 1.25  loss_ce_3: 0.4847  loss_mask_3: 0.1649  loss_dice_3: 1.22  loss_ce_4: 0.4719  loss_mask_4: 0.1661  loss_dice_4: 1.234  loss_ce_5: 0.4371  loss_mask_5: 0.1658  loss_dice_5: 1.214  loss_ce_6: 0.414  loss_mask_6: 0.1664  loss_dice_6: 1.213  loss_ce_7: 0.4192  loss_mask_7: 0.1658  loss_dice_7: 1.192  loss_ce_8: 0.435  loss_mask_8: 0.1647  loss_dice_8: 1.193    time: 0.6793  last_time: 0.6678  data_time: 0.0524  last_data_time: 0.0855   lr: 0.0001  max_mem: 17196M
[09/13 09:39:07] d2.utils.events INFO:  eta: 0:04:05  iter: 639  total_loss: 19.5  loss_ce: 0.4365  loss_mask: 0.157  loss_dice: 1.165  loss_ce_0: 0.5286  loss_mask_0: 0.1837  loss_dice_0: 1.456  loss_ce_1: 0.6308  loss_mask_1: 0.1673  loss_dice_1: 1.347  loss_ce_2: 0.5479  loss_mask_2: 0.1628  loss_dice_2: 1.268  loss_ce_3: 0.5076  loss_mask_3: 0.1568  loss_dice_3: 1.214  loss_ce_4: 0.4853  loss_mask_4: 0.1588  loss_dice_4: 1.201  loss_ce_5: 0.4904  loss_mask_5: 0.155  loss_dice_5: 1.241  loss_ce_6: 0.4579  loss_mask_6: 0.156  loss_dice_6: 1.192  loss_ce_7: 0.4571  loss_mask_7: 0.1544  loss_dice_7: 1.182  loss_ce_8: 0.4696  loss_mask_8: 0.155  loss_dice_8: 1.194    time: 0.6796  last_time: 0.7105  data_time: 0.0534  last_data_time: 0.0353   lr: 0.0001  max_mem: 17196M
[09/13 09:39:20] d2.utils.events INFO:  eta: 0:03:51  iter: 659  total_loss: 19.22  loss_ce: 0.4213  loss_mask: 0.1624  loss_dice: 1.221  loss_ce_0: 0.5191  loss_mask_0: 0.1857  loss_dice_0: 1.425  loss_ce_1: 0.6006  loss_mask_1: 0.1783  loss_dice_1: 1.292  loss_ce_2: 0.547  loss_mask_2: 0.1679  loss_dice_2: 1.279  loss_ce_3: 0.4975  loss_mask_3: 0.1649  loss_dice_3: 1.239  loss_ce_4: 0.4475  loss_mask_4: 0.162  loss_dice_4: 1.231  loss_ce_5: 0.4414  loss_mask_5: 0.1623  loss_dice_5: 1.251  loss_ce_6: 0.4496  loss_mask_6: 0.1646  loss_dice_6: 1.235  loss_ce_7: 0.4263  loss_mask_7: 0.163  loss_dice_7: 1.216  loss_ce_8: 0.4461  loss_mask_8: 0.1625  loss_dice_8: 1.173    time: 0.6794  last_time: 0.6568  data_time: 0.0521  last_data_time: 0.0382   lr: 0.0001  max_mem: 17196M
[09/13 09:39:34] d2.utils.events INFO:  eta: 0:03:37  iter: 679  total_loss: 19.3  loss_ce: 0.4528  loss_mask: 0.1641  loss_dice: 1.218  loss_ce_0: 0.5296  loss_mask_0: 0.1837  loss_dice_0: 1.429  loss_ce_1: 0.5827  loss_mask_1: 0.1752  loss_dice_1: 1.327  loss_ce_2: 0.5268  loss_mask_2: 0.1668  loss_dice_2: 1.276  loss_ce_3: 0.489  loss_mask_3: 0.1665  loss_dice_3: 1.225  loss_ce_4: 0.45  loss_mask_4: 0.1649  loss_dice_4: 1.219  loss_ce_5: 0.4624  loss_mask_5: 0.1629  loss_dice_5: 1.224  loss_ce_6: 0.4449  loss_mask_6: 0.1633  loss_dice_6: 1.215  loss_ce_7: 0.4492  loss_mask_7: 0.1641  loss_dice_7: 1.184  loss_ce_8: 0.438  loss_mask_8: 0.1633  loss_dice_8: 1.209    time: 0.6792  last_time: 0.6634  data_time: 0.0535  last_data_time: 0.0371   lr: 0.0001  max_mem: 17196M
[09/13 09:39:47] d2.utils.events INFO:  eta: 0:03:24  iter: 699  total_loss: 18.61  loss_ce: 0.4431  loss_mask: 0.1581  loss_dice: 1.101  loss_ce_0: 0.5546  loss_mask_0: 0.1877  loss_dice_0: 1.35  loss_ce_1: 0.5954  loss_mask_1: 0.1725  loss_dice_1: 1.251  loss_ce_2: 0.5634  loss_mask_2: 0.1642  loss_dice_2: 1.234  loss_ce_3: 0.484  loss_mask_3: 0.163  loss_dice_3: 1.175  loss_ce_4: 0.4638  loss_mask_4: 0.1621  loss_dice_4: 1.148  loss_ce_5: 0.449  loss_mask_5: 0.1594  loss_dice_5: 1.156  loss_ce_6: 0.4424  loss_mask_6: 0.1607  loss_dice_6: 1.175  loss_ce_7: 0.4505  loss_mask_7: 0.1591  loss_dice_7: 1.163  loss_ce_8: 0.4411  loss_mask_8: 0.1583  loss_dice_8: 1.137    time: 0.6789  last_time: 0.6968  data_time: 0.0472  last_data_time: 0.0413   lr: 0.0001  max_mem: 17196M
[09/13 09:40:01] d2.utils.events INFO:  eta: 0:03:10  iter: 719  total_loss: 18.73  loss_ce: 0.4299  loss_mask: 0.1589  loss_dice: 1.122  loss_ce_0: 0.5182  loss_mask_0: 0.1827  loss_dice_0: 1.33  loss_ce_1: 0.5845  loss_mask_1: 0.1674  loss_dice_1: 1.266  loss_ce_2: 0.5559  loss_mask_2: 0.1625  loss_dice_2: 1.235  loss_ce_3: 0.4691  loss_mask_3: 0.1652  loss_dice_3: 1.164  loss_ce_4: 0.4577  loss_mask_4: 0.1628  loss_dice_4: 1.147  loss_ce_5: 0.4503  loss_mask_5: 0.1594  loss_dice_5: 1.133  loss_ce_6: 0.4496  loss_mask_6: 0.1607  loss_dice_6: 1.134  loss_ce_7: 0.4463  loss_mask_7: 0.1585  loss_dice_7: 1.153  loss_ce_8: 0.4479  loss_mask_8: 0.1609  loss_dice_8: 1.151    time: 0.6789  last_time: 0.6547  data_time: 0.0476  last_data_time: 0.0368   lr: 0.0001  max_mem: 17196M
[09/13 09:40:14] d2.utils.events INFO:  eta: 0:02:56  iter: 739  total_loss: 18.1  loss_ce: 0.4004  loss_mask: 0.1505  loss_dice: 1.183  loss_ce_0: 0.5488  loss_mask_0: 0.1689  loss_dice_0: 1.363  loss_ce_1: 0.6236  loss_mask_1: 0.1582  loss_dice_1: 1.285  loss_ce_2: 0.5402  loss_mask_2: 0.1532  loss_dice_2: 1.245  loss_ce_3: 0.4844  loss_mask_3: 0.148  loss_dice_3: 1.157  loss_ce_4: 0.4532  loss_mask_4: 0.1484  loss_dice_4: 1.148  loss_ce_5: 0.445  loss_mask_5: 0.1466  loss_dice_5: 1.152  loss_ce_6: 0.4035  loss_mask_6: 0.1478  loss_dice_6: 1.195  loss_ce_7: 0.4151  loss_mask_7: 0.1439  loss_dice_7: 1.187  loss_ce_8: 0.4026  loss_mask_8: 0.1459  loss_dice_8: 1.156    time: 0.6787  last_time: 0.7095  data_time: 0.0550  last_data_time: 0.0423   lr: 0.0001  max_mem: 17196M
[09/13 09:40:28] d2.utils.events INFO:  eta: 0:02:43  iter: 759  total_loss: 18.25  loss_ce: 0.4232  loss_mask: 0.1619  loss_dice: 1.163  loss_ce_0: 0.5398  loss_mask_0: 0.185  loss_dice_0: 1.349  loss_ce_1: 0.5479  loss_mask_1: 0.1756  loss_dice_1: 1.25  loss_ce_2: 0.5087  loss_mask_2: 0.1642  loss_dice_2: 1.257  loss_ce_3: 0.4803  loss_mask_3: 0.163  loss_dice_3: 1.176  loss_ce_4: 0.4498  loss_mask_4: 0.1631  loss_dice_4: 1.2  loss_ce_5: 0.4333  loss_mask_5: 0.162  loss_dice_5: 1.198  loss_ce_6: 0.4006  loss_mask_6: 0.1605  loss_dice_6: 1.159  loss_ce_7: 0.4096  loss_mask_7: 0.158  loss_dice_7: 1.168  loss_ce_8: 0.4103  loss_mask_8: 0.1601  loss_dice_8: 1.151    time: 0.6789  last_time: 0.6972  data_time: 0.0501  last_data_time: 0.0629   lr: 0.0001  max_mem: 17196M
[09/13 09:40:41] d2.utils.events INFO:  eta: 0:02:29  iter: 779  total_loss: 17.72  loss_ce: 0.3854  loss_mask: 0.1637  loss_dice: 1.129  loss_ce_0: 0.4959  loss_mask_0: 0.1857  loss_dice_0: 1.346  loss_ce_1: 0.5142  loss_mask_1: 0.1752  loss_dice_1: 1.246  loss_ce_2: 0.456  loss_mask_2: 0.1646  loss_dice_2: 1.193  loss_ce_3: 0.4241  loss_mask_3: 0.1673  loss_dice_3: 1.141  loss_ce_4: 0.4108  loss_mask_4: 0.1659  loss_dice_4: 1.105  loss_ce_5: 0.4209  loss_mask_5: 0.1626  loss_dice_5: 1.099  loss_ce_6: 0.4221  loss_mask_6: 0.163  loss_dice_6: 1.091  loss_ce_7: 0.3854  loss_mask_7: 0.1606  loss_dice_7: 1.123  loss_ce_8: 0.392  loss_mask_8: 0.1602  loss_dice_8: 1.086    time: 0.6786  last_time: 0.6930  data_time: 0.0418  last_data_time: 0.0321   lr: 0.0001  max_mem: 17196M
[09/13 09:40:55] d2.utils.events INFO:  eta: 0:02:16  iter: 799  total_loss: 18.97  loss_ce: 0.4186  loss_mask: 0.1418  loss_dice: 1.199  loss_ce_0: 0.5582  loss_mask_0: 0.1647  loss_dice_0: 1.429  loss_ce_1: 0.5761  loss_mask_1: 0.1552  loss_dice_1: 1.365  loss_ce_2: 0.5184  loss_mask_2: 0.1469  loss_dice_2: 1.285  loss_ce_3: 0.4986  loss_mask_3: 0.1467  loss_dice_3: 1.243  loss_ce_4: 0.4457  loss_mask_4: 0.146  loss_dice_4: 1.236  loss_ce_5: 0.4607  loss_mask_5: 0.1448  loss_dice_5: 1.256  loss_ce_6: 0.4243  loss_mask_6: 0.1419  loss_dice_6: 1.217  loss_ce_7: 0.4245  loss_mask_7: 0.1407  loss_dice_7: 1.188  loss_ce_8: 0.4279  loss_mask_8: 0.1432  loss_dice_8: 1.187    time: 0.6792  last_time: 0.6815  data_time: 0.0616  last_data_time: 0.0474   lr: 0.0001  max_mem: 17196M
[09/13 09:41:09] d2.utils.events INFO:  eta: 0:02:02  iter: 819  total_loss: 18.74  loss_ce: 0.397  loss_mask: 0.1545  loss_dice: 1.174  loss_ce_0: 0.5267  loss_mask_0: 0.1742  loss_dice_0: 1.346  loss_ce_1: 0.5837  loss_mask_1: 0.1622  loss_dice_1: 1.284  loss_ce_2: 0.5302  loss_mask_2: 0.1571  loss_dice_2: 1.253  loss_ce_3: 0.4951  loss_mask_3: 0.1555  loss_dice_3: 1.223  loss_ce_4: 0.433  loss_mask_4: 0.1583  loss_dice_4: 1.208  loss_ce_5: 0.4168  loss_mask_5: 0.1536  loss_dice_5: 1.215  loss_ce_6: 0.4143  loss_mask_6: 0.1529  loss_dice_6: 1.189  loss_ce_7: 0.4097  loss_mask_7: 0.1548  loss_dice_7: 1.177  loss_ce_8: 0.4126  loss_mask_8: 0.1544  loss_dice_8: 1.167    time: 0.6794  last_time: 0.6985  data_time: 0.0562  last_data_time: 0.0390   lr: 0.0001  max_mem: 17196M
[09/13 09:41:23] d2.utils.events INFO:  eta: 0:01:48  iter: 839  total_loss: 18.59  loss_ce: 0.4296  loss_mask: 0.1568  loss_dice: 1.167  loss_ce_0: 0.5323  loss_mask_0: 0.1738  loss_dice_0: 1.396  loss_ce_1: 0.6196  loss_mask_1: 0.1706  loss_dice_1: 1.277  loss_ce_2: 0.573  loss_mask_2: 0.1608  loss_dice_2: 1.244  loss_ce_3: 0.4753  loss_mask_3: 0.1538  loss_dice_3: 1.177  loss_ce_4: 0.4534  loss_mask_4: 0.1535  loss_dice_4: 1.199  loss_ce_5: 0.4545  loss_mask_5: 0.1569  loss_dice_5: 1.211  loss_ce_6: 0.4353  loss_mask_6: 0.1536  loss_dice_6: 1.172  loss_ce_7: 0.4249  loss_mask_7: 0.1564  loss_dice_7: 1.183  loss_ce_8: 0.4052  loss_mask_8: 0.1565  loss_dice_8: 1.171    time: 0.6792  last_time: 0.5883  data_time: 0.0486  last_data_time: 0.0451   lr: 0.0001  max_mem: 17196M
[09/13 09:41:36] d2.utils.events INFO:  eta: 0:01:35  iter: 859  total_loss: 18.59  loss_ce: 0.4468  loss_mask: 0.1598  loss_dice: 1.175  loss_ce_0: 0.5439  loss_mask_0: 0.178  loss_dice_0: 1.368  loss_ce_1: 0.5542  loss_mask_1: 0.1698  loss_dice_1: 1.333  loss_ce_2: 0.5432  loss_mask_2: 0.1602  loss_dice_2: 1.248  loss_ce_3: 0.4996  loss_mask_3: 0.1629  loss_dice_3: 1.206  loss_ce_4: 0.4432  loss_mask_4: 0.162  loss_dice_4: 1.215  loss_ce_5: 0.4611  loss_mask_5: 0.1604  loss_dice_5: 1.243  loss_ce_6: 0.4378  loss_mask_6: 0.1579  loss_dice_6: 1.191  loss_ce_7: 0.4372  loss_mask_7: 0.1577  loss_dice_7: 1.16  loss_ce_8: 0.433  loss_mask_8: 0.1569  loss_dice_8: 1.161    time: 0.6790  last_time: 0.6474  data_time: 0.0457  last_data_time: 0.0425   lr: 0.0001  max_mem: 17196M
[09/13 09:41:50] d2.utils.events INFO:  eta: 0:01:21  iter: 879  total_loss: 18.45  loss_ce: 0.4002  loss_mask: 0.1619  loss_dice: 1.215  loss_ce_0: 0.5451  loss_mask_0: 0.1931  loss_dice_0: 1.381  loss_ce_1: 0.6199  loss_mask_1: 0.1815  loss_dice_1: 1.303  loss_ce_2: 0.5827  loss_mask_2: 0.1727  loss_dice_2: 1.262  loss_ce_3: 0.444  loss_mask_3: 0.1697  loss_dice_3: 1.247  loss_ce_4: 0.4326  loss_mask_4: 0.165  loss_dice_4: 1.228  loss_ce_5: 0.422  loss_mask_5: 0.1648  loss_dice_5: 1.201  loss_ce_6: 0.4254  loss_mask_6: 0.1654  loss_dice_6: 1.226  loss_ce_7: 0.41  loss_mask_7: 0.1618  loss_dice_7: 1.202  loss_ce_8: 0.4166  loss_mask_8: 0.1634  loss_dice_8: 1.222    time: 0.6792  last_time: 0.7372  data_time: 0.0513  last_data_time: 0.0680   lr: 0.0001  max_mem: 17196M
[09/13 09:42:04] d2.utils.events INFO:  eta: 0:01:08  iter: 899  total_loss: 18.39  loss_ce: 0.3842  loss_mask: 0.1485  loss_dice: 1.171  loss_ce_0: 0.511  loss_mask_0: 0.1787  loss_dice_0: 1.379  loss_ce_1: 0.5554  loss_mask_1: 0.1619  loss_dice_1: 1.306  loss_ce_2: 0.5225  loss_mask_2: 0.1529  loss_dice_2: 1.261  loss_ce_3: 0.4269  loss_mask_3: 0.1519  loss_dice_3: 1.188  loss_ce_4: 0.4111  loss_mask_4: 0.1515  loss_dice_4: 1.197  loss_ce_5: 0.4221  loss_mask_5: 0.1513  loss_dice_5: 1.19  loss_ce_6: 0.3822  loss_mask_6: 0.1502  loss_dice_6: 1.174  loss_ce_7: 0.4016  loss_mask_7: 0.1498  loss_dice_7: 1.171  loss_ce_8: 0.3778  loss_mask_8: 0.1493  loss_dice_8: 1.187    time: 0.6797  last_time: 0.7117  data_time: 0.0796  last_data_time: 0.0551   lr: 0.0001  max_mem: 17196M
[09/13 09:42:18] d2.utils.events INFO:  eta: 0:00:54  iter: 919  total_loss: 18.2  loss_ce: 0.4422  loss_mask: 0.1573  loss_dice: 1.171  loss_ce_0: 0.5138  loss_mask_0: 0.1761  loss_dice_0: 1.325  loss_ce_1: 0.5493  loss_mask_1: 0.1643  loss_dice_1: 1.249  loss_ce_2: 0.5257  loss_mask_2: 0.1576  loss_dice_2: 1.208  loss_ce_3: 0.4687  loss_mask_3: 0.1568  loss_dice_3: 1.159  loss_ce_4: 0.4363  loss_mask_4: 0.1573  loss_dice_4: 1.189  loss_ce_5: 0.425  loss_mask_5: 0.1572  loss_dice_5: 1.212  loss_ce_6: 0.3895  loss_mask_6: 0.1565  loss_dice_6: 1.151  loss_ce_7: 0.4026  loss_mask_7: 0.1563  loss_dice_7: 1.194  loss_ce_8: 0.3911  loss_mask_8: 0.1554  loss_dice_8: 1.155    time: 0.6798  last_time: 0.7066  data_time: 0.0486  last_data_time: 0.0501   lr: 0.0001  max_mem: 17196M
[09/13 09:42:31] d2.utils.events INFO:  eta: 0:00:40  iter: 939  total_loss: 18.03  loss_ce: 0.3773  loss_mask: 0.1522  loss_dice: 1.124  loss_ce_0: 0.5296  loss_mask_0: 0.1736  loss_dice_0: 1.333  loss_ce_1: 0.5661  loss_mask_1: 0.1661  loss_dice_1: 1.283  loss_ce_2: 0.5337  loss_mask_2: 0.1556  loss_dice_2: 1.226  loss_ce_3: 0.4541  loss_mask_3: 0.1543  loss_dice_3: 1.185  loss_ce_4: 0.4159  loss_mask_4: 0.1552  loss_dice_4: 1.169  loss_ce_5: 0.4163  loss_mask_5: 0.155  loss_dice_5: 1.143  loss_ce_6: 0.4034  loss_mask_6: 0.155  loss_dice_6: 1.104  loss_ce_7: 0.4097  loss_mask_7: 0.1541  loss_dice_7: 1.142  loss_ce_8: 0.4049  loss_mask_8: 0.151  loss_dice_8: 1.157    time: 0.6795  last_time: 0.6799  data_time: 0.0543  last_data_time: 0.0463   lr: 0.0001  max_mem: 17196M
[09/13 09:42:45] d2.utils.events INFO:  eta: 0:00:27  iter: 959  total_loss: 17.77  loss_ce: 0.3926  loss_mask: 0.1677  loss_dice: 1.122  loss_ce_0: 0.5169  loss_mask_0: 0.1999  loss_dice_0: 1.297  loss_ce_1: 0.5773  loss_mask_1: 0.1814  loss_dice_1: 1.23  loss_ce_2: 0.4926  loss_mask_2: 0.1715  loss_dice_2: 1.189  loss_ce_3: 0.4519  loss_mask_3: 0.166  loss_dice_3: 1.142  loss_ce_4: 0.43  loss_mask_4: 0.1702  loss_dice_4: 1.11  loss_ce_5: 0.4188  loss_mask_5: 0.1688  loss_dice_5: 1.13  loss_ce_6: 0.403  loss_mask_6: 0.168  loss_dice_6: 1.101  loss_ce_7: 0.4254  loss_mask_7: 0.1683  loss_dice_7: 1.076  loss_ce_8: 0.3949  loss_mask_8: 0.1676  loss_dice_8: 1.098    time: 0.6792  last_time: 0.6463  data_time: 0.0484  last_data_time: 0.0353   lr: 0.0001  max_mem: 17196M
[09/13 09:42:58] d2.utils.events INFO:  eta: 0:00:13  iter: 979  total_loss: 18.23  loss_ce: 0.363  loss_mask: 0.1488  loss_dice: 1.168  loss_ce_0: 0.55  loss_mask_0: 0.1703  loss_dice_0: 1.339  loss_ce_1: 0.5738  loss_mask_1: 0.1593  loss_dice_1: 1.3  loss_ce_2: 0.5214  loss_mask_2: 0.151  loss_dice_2: 1.211  loss_ce_3: 0.4186  loss_mask_3: 0.1497  loss_dice_3: 1.17  loss_ce_4: 0.4273  loss_mask_4: 0.1477  loss_dice_4: 1.185  loss_ce_5: 0.3811  loss_mask_5: 0.1451  loss_dice_5: 1.182  loss_ce_6: 0.3864  loss_mask_6: 0.1476  loss_dice_6: 1.143  loss_ce_7: 0.3979  loss_mask_7: 0.1476  loss_dice_7: 1.144  loss_ce_8: 0.376  loss_mask_8: 0.1482  loss_dice_8: 1.169    time: 0.6795  last_time: 0.7348  data_time: 0.0572  last_data_time: 0.0453   lr: 0.0001  max_mem: 17196M
[09/13 09:43:12] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_1000_1000_19/model_final.pth
[09/13 09:43:15] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 18.02  loss_ce: 0.395  loss_mask: 0.1454  loss_dice: 1.184  loss_ce_0: 0.5125  loss_mask_0: 0.1697  loss_dice_0: 1.331  loss_ce_1: 0.5409  loss_mask_1: 0.1573  loss_dice_1: 1.253  loss_ce_2: 0.5133  loss_mask_2: 0.1507  loss_dice_2: 1.218  loss_ce_3: 0.4337  loss_mask_3: 0.1498  loss_dice_3: 1.198  loss_ce_4: 0.4202  loss_mask_4: 0.1459  loss_dice_4: 1.168  loss_ce_5: 0.4241  loss_mask_5: 0.1447  loss_dice_5: 1.156  loss_ce_6: 0.3827  loss_mask_6: 0.1454  loss_dice_6: 1.175  loss_ce_7: 0.3972  loss_mask_7: 0.1474  loss_dice_7: 1.181  loss_ce_8: 0.4052  loss_mask_8: 0.145  loss_dice_8: 1.192    time: 0.6795  last_time: 0.6604  data_time: 0.0496  last_data_time: 0.0415   lr: 0.0001  max_mem: 17196M
[09/13 09:43:15] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:11:18 (0.6795 s / it)
[09/13 09:43:15] d2.engine.hooks INFO: Total training time: 0:11:23 (0:00:05 on hooks)
[09/13 09:43:15] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/13 09:43:15] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/13 09:43:15] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/13 09:43:15] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/13 09:43:15] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/13 09:43:15] d2.evaluation.evaluator INFO: Start inference on 250 batches
[09/13 09:43:23] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0048 s/iter. Inference: 0.2902 s/iter. Eval: 0.0689 s/iter. Total: 0.3639 s/iter. ETA=0:01:26
[09/13 09:43:28] d2.evaluation.evaluator INFO: Inference done 26/250. Dataloading: 0.0065 s/iter. Inference: 0.2724 s/iter. Eval: 0.0726 s/iter. Total: 0.3515 s/iter. ETA=0:01:18
[09/13 09:43:34] d2.evaluation.evaluator INFO: Inference done 40/250. Dataloading: 0.0062 s/iter. Inference: 0.2800 s/iter. Eval: 0.0732 s/iter. Total: 0.3594 s/iter. ETA=0:01:15
[09/13 09:43:39] d2.evaluation.evaluator INFO: Inference done 56/250. Dataloading: 0.0060 s/iter. Inference: 0.2685 s/iter. Eval: 0.0720 s/iter. Total: 0.3466 s/iter. ETA=0:01:07
[09/13 09:43:44] d2.evaluation.evaluator INFO: Inference done 71/250. Dataloading: 0.0060 s/iter. Inference: 0.2651 s/iter. Eval: 0.0741 s/iter. Total: 0.3453 s/iter. ETA=0:01:01
[09/13 09:43:49] d2.evaluation.evaluator INFO: Inference done 84/250. Dataloading: 0.0064 s/iter. Inference: 0.2712 s/iter. Eval: 0.0757 s/iter. Total: 0.3533 s/iter. ETA=0:00:58
[09/13 09:43:54] d2.evaluation.evaluator INFO: Inference done 99/250. Dataloading: 0.0063 s/iter. Inference: 0.2703 s/iter. Eval: 0.0765 s/iter. Total: 0.3532 s/iter. ETA=0:00:53
[09/13 09:43:59] d2.evaluation.evaluator INFO: Inference done 114/250. Dataloading: 0.0062 s/iter. Inference: 0.2678 s/iter. Eval: 0.0772 s/iter. Total: 0.3513 s/iter. ETA=0:00:47
[09/13 09:44:05] d2.evaluation.evaluator INFO: Inference done 127/250. Dataloading: 0.0063 s/iter. Inference: 0.2730 s/iter. Eval: 0.0774 s/iter. Total: 0.3567 s/iter. ETA=0:00:43
[09/13 09:44:10] d2.evaluation.evaluator INFO: Inference done 139/250. Dataloading: 0.0063 s/iter. Inference: 0.2775 s/iter. Eval: 0.0789 s/iter. Total: 0.3628 s/iter. ETA=0:00:40
[09/13 09:44:15] d2.evaluation.evaluator INFO: Inference done 154/250. Dataloading: 0.0064 s/iter. Inference: 0.2758 s/iter. Eval: 0.0780 s/iter. Total: 0.3603 s/iter. ETA=0:00:34
[09/13 09:44:20] d2.evaluation.evaluator INFO: Inference done 169/250. Dataloading: 0.0063 s/iter. Inference: 0.2744 s/iter. Eval: 0.0779 s/iter. Total: 0.3586 s/iter. ETA=0:00:29
[09/13 09:44:25] d2.evaluation.evaluator INFO: Inference done 184/250. Dataloading: 0.0063 s/iter. Inference: 0.2733 s/iter. Eval: 0.0783 s/iter. Total: 0.3580 s/iter. ETA=0:00:23
[09/13 09:44:31] d2.evaluation.evaluator INFO: Inference done 200/250. Dataloading: 0.0062 s/iter. Inference: 0.2718 s/iter. Eval: 0.0778 s/iter. Total: 0.3559 s/iter. ETA=0:00:17
[09/13 09:44:36] d2.evaluation.evaluator INFO: Inference done 212/250. Dataloading: 0.0064 s/iter. Inference: 0.2755 s/iter. Eval: 0.0778 s/iter. Total: 0.3597 s/iter. ETA=0:00:13
[09/13 09:44:41] d2.evaluation.evaluator INFO: Inference done 227/250. Dataloading: 0.0063 s/iter. Inference: 0.2748 s/iter. Eval: 0.0767 s/iter. Total: 0.3579 s/iter. ETA=0:00:08
[09/13 09:44:46] d2.evaluation.evaluator INFO: Inference done 243/250. Dataloading: 0.0063 s/iter. Inference: 0.2734 s/iter. Eval: 0.0758 s/iter. Total: 0.3555 s/iter. ETA=0:00:02
[09/13 09:44:48] d2.evaluation.evaluator INFO: Total inference time: 0:01:27.207084 (0.355947 s / iter per device, on 2 devices)
[09/13 09:44:48] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:06 (0.272304 s / iter per device, on 2 devices)
[09/13 09:44:48] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval6y7xrxe_ ...
[09/13 09:45:52] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 55.190 | 80.674 | 67.314 |      19       |
| Things | 46.798 | 79.966 | 58.342 |       8       |
| Stuff  | 61.294 | 81.189 | 73.840 |      11       |
[09/13 09:45:52] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.862 | 97.571 | 99.273 |     Stuff     |
| class_8  | 64.797 | 83.543 | 77.561 |     Stuff     |
| class_11 | 85.966 | 88.243 | 97.420 |     Stuff     |
| class_12 | 32.367 | 81.842 | 39.548 |     Stuff     |
| class_13 | 33.027 | 75.460 | 43.767 |     Stuff     |
| class_17 | 44.363 | 64.088 | 69.223 |     Stuff     |
| class_19 | 47.670 | 68.539 | 69.551 |     Stuff     |
| class_20 | 65.576 | 76.834 | 85.348 |     Stuff     |
| class_21 | 88.315 | 89.886 | 98.253 |     Stuff     |
| class_22 | 28.249 | 75.168 | 37.581 |     Stuff     |
| class_23 | 87.045 | 91.903 | 94.713 |     Stuff     |
| class_24 | 46.419 | 76.689 | 60.529 |    Things     |
| class_25 | 45.770 | 72.717 | 62.943 |    Things     |
| class_26 | 62.961 | 83.511 | 75.393 |    Things     |
| class_27 | 48.505 | 86.690 | 55.952 |    Things     |
| class_28 | 58.887 | 89.907 | 65.497 |    Things     |
| class_31 | 38.050 | 84.748 | 44.898 |    Things     |
| class_32 | 36.430 | 74.240 | 49.071 |    Things     |
| class_33 | 37.359 | 71.226 | 52.452 |    Things     |
[09/13 09:45:52] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[09/13 09:45:52] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/13 09:45:52] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/13 09:45:52] d2.evaluation.testing INFO: copypaste: 55.1905,80.6740,67.3144,46.7977,79.9659,58.3418,61.2943,81.1890,73.8398,96.8621,97.5714,99.2731,64.7967,83.5429,77.5610,85.9662,88.2429,97.4200,32.3671,81.8424,39.5480,33.0269,75.4601,43.7673,44.3632,64.0875,69.2228,47.6700,68.5394,69.5513,65.5763,76.8344,85.3476,88.3153,89.8858,98.2528,28.2491,75.1685,37.5810,87.0445,91.9033,94.7132,46.4189,76.6892,60.5286,45.7702,72.7169,62.9431,62.9614,83.5107,75.3931,48.5051,86.6900,55.9524,58.8866,89.9072,65.4971,38.0500,84.7477,44.8980,36.4299,74.2397,49.0706,37.3591,71.2255,52.4518
