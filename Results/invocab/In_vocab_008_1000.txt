[08/21 15:56:25] detectron2 INFO: Rank of current process: 0. World size: 1
[08/21 15:56:26] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/21 15:56:26] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[08/21 15:56:26] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 10
TEST:
  EVAL_PERIOD: 10


[08/21 15:56:26] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 10
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 10
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/21 15:56:26] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/config.yaml
[08/21 15:56:26] d2.utils.env INFO: Using a generated random seed 29931336
[08/21 15:56:31] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/21 15:56:31] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/21 15:56:32] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/21 15:56:32] d2.data.build INFO: Using training sampler TrainingSampler
[08/21 15:56:32] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/21 15:56:32] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/21 15:56:32] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/21 15:56:32] d2.data.build INFO: Making batched data loader with batch_size=8
[08/21 15:56:32] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/21 15:56:32] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/21 15:56:32] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/21 15:56:32] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/21 15:56:32] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/21 15:56:32] d2.engine.train_loop INFO: Starting training from iteration 0
[08/21 15:56:48] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/model_final.pth
[08/21 15:56:50] d2.utils.events INFO:  eta: 0:00:00  iter: 9  total_loss: 38.34  loss_ce: 1.896  loss_mask: 0.3992  loss_dice: 1.448  loss_ce_0: 1.937  loss_mask_0: 0.3644  loss_dice_0: 1.774  loss_ce_1: 2.081  loss_mask_1: 0.3715  loss_dice_1: 1.619  loss_ce_2: 1.934  loss_mask_2: 0.384  loss_dice_2: 1.644  loss_ce_3: 1.924  loss_mask_3: 0.3911  loss_dice_3: 1.53  loss_ce_4: 1.876  loss_mask_4: 0.3907  loss_dice_4: 1.525  loss_ce_5: 1.908  loss_mask_5: 0.392  loss_dice_5: 1.511  loss_ce_6: 1.96  loss_mask_6: 0.39  loss_dice_6: 1.467  loss_ce_7: 1.875  loss_mask_7: 0.3996  loss_dice_7: 1.527  loss_ce_8: 1.874  loss_mask_8: 0.3988  loss_dice_8: 1.432    time: 1.0705  last_time: 1.0599  data_time: 0.1105  last_data_time: 0.0470   lr: 0.0001  max_mem: 30367M
[08/21 15:56:51] d2.engine.hooks INFO: Overall training speed: 8 iterations in 0:00:08 (1.0705 s / it)
[08/21 15:56:51] d2.engine.hooks INFO: Total training time: 0:00:11 (0:00:02 on hooks)
[08/21 15:56:51] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/21 15:56:51] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/21 15:56:51] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/21 15:56:51] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/21 15:56:51] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/21 15:56:51] d2.evaluation.evaluator INFO: Start inference on 500 batches
[08/21 15:56:56] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0032 s/iter. Inference: 0.2707 s/iter. Eval: 0.1050 s/iter. Total: 0.3788 s/iter. ETA=0:03:05
[08/21 15:57:01] d2.evaluation.evaluator INFO: Inference done 25/500. Dataloading: 0.0038 s/iter. Inference: 0.2703 s/iter. Eval: 0.1038 s/iter. Total: 0.3780 s/iter. ETA=0:02:59
[08/21 15:57:07] d2.evaluation.evaluator INFO: Inference done 39/500. Dataloading: 0.0040 s/iter. Inference: 0.2713 s/iter. Eval: 0.1041 s/iter. Total: 0.3795 s/iter. ETA=0:02:54
[08/21 15:57:12] d2.evaluation.evaluator INFO: Inference done 52/500. Dataloading: 0.0042 s/iter. Inference: 0.2748 s/iter. Eval: 0.1044 s/iter. Total: 0.3835 s/iter. ETA=0:02:51
[08/21 15:57:17] d2.evaluation.evaluator INFO: Inference done 65/500. Dataloading: 0.0043 s/iter. Inference: 0.2750 s/iter. Eval: 0.1050 s/iter. Total: 0.3844 s/iter. ETA=0:02:47
[08/21 15:57:22] d2.evaluation.evaluator INFO: Inference done 78/500. Dataloading: 0.0044 s/iter. Inference: 0.2761 s/iter. Eval: 0.1049 s/iter. Total: 0.3854 s/iter. ETA=0:02:42
[08/21 15:57:27] d2.evaluation.evaluator INFO: Inference done 91/500. Dataloading: 0.0045 s/iter. Inference: 0.2761 s/iter. Eval: 0.1055 s/iter. Total: 0.3862 s/iter. ETA=0:02:37
[08/21 15:57:32] d2.evaluation.evaluator INFO: Inference done 104/500. Dataloading: 0.0045 s/iter. Inference: 0.2760 s/iter. Eval: 0.1057 s/iter. Total: 0.3864 s/iter. ETA=0:02:32
[08/21 15:57:37] d2.evaluation.evaluator INFO: Inference done 117/500. Dataloading: 0.0045 s/iter. Inference: 0.2767 s/iter. Eval: 0.1055 s/iter. Total: 0.3868 s/iter. ETA=0:02:28
[08/21 15:57:43] d2.evaluation.evaluator INFO: Inference done 131/500. Dataloading: 0.0045 s/iter. Inference: 0.2762 s/iter. Eval: 0.1055 s/iter. Total: 0.3863 s/iter. ETA=0:02:22
[08/21 15:57:48] d2.evaluation.evaluator INFO: Inference done 144/500. Dataloading: 0.0045 s/iter. Inference: 0.2762 s/iter. Eval: 0.1055 s/iter. Total: 0.3862 s/iter. ETA=0:02:17
[08/21 15:57:53] d2.evaluation.evaluator INFO: Inference done 157/500. Dataloading: 0.0044 s/iter. Inference: 0.2757 s/iter. Eval: 0.1061 s/iter. Total: 0.3863 s/iter. ETA=0:02:12
[08/21 15:59:59] detectron2 INFO: Rank of current process: 0. World size: 1
[08/21 16:00:01] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA A100-PCIE-40GB (arch=8.0)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/21 16:00:01] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[08/21 16:00:01] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/21 16:00:01] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/21 16:00:01] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/config.yaml
[08/21 16:00:01] d2.utils.env INFO: Using a generated random seed 4677303
[08/21 16:00:06] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/21 16:00:06] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/21 16:00:06] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/21 16:00:06] d2.data.build INFO: Using training sampler TrainingSampler
[08/21 16:00:06] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/21 16:00:06] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/21 16:00:06] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/21 16:00:06] d2.data.build INFO: Making batched data loader with batch_size=8
[08/21 16:00:06] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/21 16:00:06] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/21 16:00:06] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/21 16:00:06] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/21 16:00:06] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/21 16:00:06] d2.engine.train_loop INFO: Starting training from iteration 0
[08/21 16:00:32] d2.utils.events INFO:  eta: 0:17:34  iter: 19  total_loss: 33.94  loss_ce: 1.469  loss_mask: 0.3112  loss_dice: 1.51  loss_ce_0: 1.55  loss_mask_0: 0.3221  loss_dice_0: 1.872  loss_ce_1: 1.666  loss_mask_1: 0.32  loss_dice_1: 1.749  loss_ce_2: 1.533  loss_mask_2: 0.314  loss_dice_2: 1.668  loss_ce_3: 1.519  loss_mask_3: 0.3212  loss_dice_3: 1.615  loss_ce_4: 1.533  loss_mask_4: 0.316  loss_dice_4: 1.573  loss_ce_5: 1.383  loss_mask_5: 0.3171  loss_dice_5: 1.58  loss_ce_6: 1.43  loss_mask_6: 0.3126  loss_dice_6: 1.579  loss_ce_7: 1.383  loss_mask_7: 0.311  loss_dice_7: 1.517  loss_ce_8: 1.467  loss_mask_8: 0.3057  loss_dice_8: 1.516    time: 1.0832  last_time: 1.0121  data_time: 0.0888  last_data_time: 0.0461   lr: 0.0001  max_mem: 31082M
[08/21 16:00:54] d2.utils.events INFO:  eta: 0:17:02  iter: 39  total_loss: 26.83  loss_ce: 0.8831  loss_mask: 0.2414  loss_dice: 1.46  loss_ce_0: 0.941  loss_mask_0: 0.2674  loss_dice_0: 1.766  loss_ce_1: 1.069  loss_mask_1: 0.2684  loss_dice_1: 1.64  loss_ce_2: 0.9963  loss_mask_2: 0.2519  loss_dice_2: 1.521  loss_ce_3: 0.9319  loss_mask_3: 0.2443  loss_dice_3: 1.466  loss_ce_4: 0.9327  loss_mask_4: 0.2435  loss_dice_4: 1.494  loss_ce_5: 0.9209  loss_mask_5: 0.2433  loss_dice_5: 1.512  loss_ce_6: 0.8961  loss_mask_6: 0.2439  loss_dice_6: 1.443  loss_ce_7: 0.8948  loss_mask_7: 0.2436  loss_dice_7: 1.448  loss_ce_8: 0.9289  loss_mask_8: 0.2407  loss_dice_8: 1.451    time: 1.0724  last_time: 1.0638  data_time: 0.0463  last_data_time: 0.0451   lr: 0.0001  max_mem: 31082M
[08/21 16:01:15] d2.utils.events INFO:  eta: 0:16:40  iter: 59  total_loss: 24.24  loss_ce: 0.7407  loss_mask: 0.2069  loss_dice: 1.359  loss_ce_0: 0.8334  loss_mask_0: 0.2471  loss_dice_0: 1.672  loss_ce_1: 0.9171  loss_mask_1: 0.2269  loss_dice_1: 1.521  loss_ce_2: 0.8447  loss_mask_2: 0.2126  loss_dice_2: 1.434  loss_ce_3: 0.8027  loss_mask_3: 0.2092  loss_dice_3: 1.376  loss_ce_4: 0.7784  loss_mask_4: 0.2085  loss_dice_4: 1.377  loss_ce_5: 0.7478  loss_mask_5: 0.2094  loss_dice_5: 1.383  loss_ce_6: 0.7694  loss_mask_6: 0.206  loss_dice_6: 1.351  loss_ce_7: 0.743  loss_mask_7: 0.2029  loss_dice_7: 1.371  loss_ce_8: 0.7584  loss_mask_8: 0.2084  loss_dice_8: 1.344    time: 1.0692  last_time: 1.0365  data_time: 0.0465  last_data_time: 0.0335   lr: 0.0001  max_mem: 31082M
[08/21 16:01:36] d2.utils.events INFO:  eta: 0:16:20  iter: 79  total_loss: 25.63  loss_ce: 0.7726  loss_mask: 0.1962  loss_dice: 1.406  loss_ce_0: 0.8024  loss_mask_0: 0.2296  loss_dice_0: 1.742  loss_ce_1: 0.9223  loss_mask_1: 0.2202  loss_dice_1: 1.597  loss_ce_2: 0.8479  loss_mask_2: 0.2115  loss_dice_2: 1.546  loss_ce_3: 0.8307  loss_mask_3: 0.1991  loss_dice_3: 1.465  loss_ce_4: 0.7792  loss_mask_4: 0.2096  loss_dice_4: 1.472  loss_ce_5: 0.8038  loss_mask_5: 0.2071  loss_dice_5: 1.506  loss_ce_6: 0.7719  loss_mask_6: 0.2019  loss_dice_6: 1.446  loss_ce_7: 0.7581  loss_mask_7: 0.2017  loss_dice_7: 1.408  loss_ce_8: 0.7626  loss_mask_8: 0.1986  loss_dice_8: 1.43    time: 1.0692  last_time: 1.0315  data_time: 0.0476  last_data_time: 0.0467   lr: 0.0001  max_mem: 31254M
[08/21 16:01:58] d2.utils.events INFO:  eta: 0:16:01  iter: 99  total_loss: 24.03  loss_ce: 0.6853  loss_mask: 0.2042  loss_dice: 1.313  loss_ce_0: 0.8201  loss_mask_0: 0.2235  loss_dice_0: 1.608  loss_ce_1: 0.9258  loss_mask_1: 0.2192  loss_dice_1: 1.486  loss_ce_2: 0.8685  loss_mask_2: 0.2099  loss_dice_2: 1.425  loss_ce_3: 0.7896  loss_mask_3: 0.2059  loss_dice_3: 1.384  loss_ce_4: 0.7602  loss_mask_4: 0.2036  loss_dice_4: 1.359  loss_ce_5: 0.7274  loss_mask_5: 0.2062  loss_dice_5: 1.358  loss_ce_6: 0.7234  loss_mask_6: 0.2076  loss_dice_6: 1.326  loss_ce_7: 0.7284  loss_mask_7: 0.2024  loss_dice_7: 1.365  loss_ce_8: 0.7166  loss_mask_8: 0.2042  loss_dice_8: 1.32    time: 1.0720  last_time: 1.0966  data_time: 0.0484  last_data_time: 0.0451   lr: 0.0001  max_mem: 31254M
[08/21 16:02:20] d2.utils.events INFO:  eta: 0:15:41  iter: 119  total_loss: 23.89  loss_ce: 0.7313  loss_mask: 0.1857  loss_dice: 1.342  loss_ce_0: 0.8376  loss_mask_0: 0.2149  loss_dice_0: 1.609  loss_ce_1: 0.9535  loss_mask_1: 0.1991  loss_dice_1: 1.537  loss_ce_2: 0.8555  loss_mask_2: 0.1923  loss_dice_2: 1.437  loss_ce_3: 0.8174  loss_mask_3: 0.1891  loss_dice_3: 1.397  loss_ce_4: 0.7421  loss_mask_4: 0.1867  loss_dice_4: 1.369  loss_ce_5: 0.7482  loss_mask_5: 0.1858  loss_dice_5: 1.392  loss_ce_6: 0.7635  loss_mask_6: 0.187  loss_dice_6: 1.347  loss_ce_7: 0.7354  loss_mask_7: 0.1884  loss_dice_7: 1.358  loss_ce_8: 0.7429  loss_mask_8: 0.1858  loss_dice_8: 1.383    time: 1.0754  last_time: 1.0860  data_time: 0.0500  last_data_time: 0.0645   lr: 0.0001  max_mem: 32061M
[08/21 16:02:42] d2.utils.events INFO:  eta: 0:15:20  iter: 139  total_loss: 23.48  loss_ce: 0.6935  loss_mask: 0.2007  loss_dice: 1.338  loss_ce_0: 0.7714  loss_mask_0: 0.2278  loss_dice_0: 1.551  loss_ce_1: 0.8996  loss_mask_1: 0.2175  loss_dice_1: 1.491  loss_ce_2: 0.7936  loss_mask_2: 0.202  loss_dice_2: 1.405  loss_ce_3: 0.7269  loss_mask_3: 0.2032  loss_dice_3: 1.335  loss_ce_4: 0.7091  loss_mask_4: 0.1951  loss_dice_4: 1.351  loss_ce_5: 0.6995  loss_mask_5: 0.1973  loss_dice_5: 1.388  loss_ce_6: 0.6877  loss_mask_6: 0.2005  loss_dice_6: 1.311  loss_ce_7: 0.6873  loss_mask_7: 0.201  loss_dice_7: 1.357  loss_ce_8: 0.6753  loss_mask_8: 0.2002  loss_dice_8: 1.315    time: 1.0751  last_time: 1.0648  data_time: 0.0479  last_data_time: 0.0534   lr: 0.0001  max_mem: 32061M
[08/21 16:03:03] d2.utils.events INFO:  eta: 0:14:58  iter: 159  total_loss: 23.2  loss_ce: 0.6829  loss_mask: 0.1899  loss_dice: 1.316  loss_ce_0: 0.7663  loss_mask_0: 0.2222  loss_dice_0: 1.584  loss_ce_1: 0.8905  loss_mask_1: 0.2033  loss_dice_1: 1.505  loss_ce_2: 0.8412  loss_mask_2: 0.1997  loss_dice_2: 1.382  loss_ce_3: 0.7481  loss_mask_3: 0.198  loss_dice_3: 1.329  loss_ce_4: 0.7303  loss_mask_4: 0.1937  loss_dice_4: 1.33  loss_ce_5: 0.6948  loss_mask_5: 0.1921  loss_dice_5: 1.313  loss_ce_6: 0.707  loss_mask_6: 0.1929  loss_dice_6: 1.307  loss_ce_7: 0.69  loss_mask_7: 0.1885  loss_dice_7: 1.296  loss_ce_8: 0.7036  loss_mask_8: 0.1882  loss_dice_8: 1.303    time: 1.0746  last_time: 1.0822  data_time: 0.0455  last_data_time: 0.0468   lr: 0.0001  max_mem: 32061M
[08/21 16:03:25] d2.utils.events INFO:  eta: 0:14:37  iter: 179  total_loss: 22.42  loss_ce: 0.6346  loss_mask: 0.1984  loss_dice: 1.29  loss_ce_0: 0.6964  loss_mask_0: 0.2226  loss_dice_0: 1.598  loss_ce_1: 0.7752  loss_mask_1: 0.2054  loss_dice_1: 1.489  loss_ce_2: 0.7453  loss_mask_2: 0.1949  loss_dice_2: 1.392  loss_ce_3: 0.6795  loss_mask_3: 0.1969  loss_dice_3: 1.353  loss_ce_4: 0.6558  loss_mask_4: 0.2001  loss_dice_4: 1.328  loss_ce_5: 0.6294  loss_mask_5: 0.1957  loss_dice_5: 1.336  loss_ce_6: 0.6718  loss_mask_6: 0.1969  loss_dice_6: 1.337  loss_ce_7: 0.6561  loss_mask_7: 0.1934  loss_dice_7: 1.295  loss_ce_8: 0.6731  loss_mask_8: 0.1958  loss_dice_8: 1.29    time: 1.0745  last_time: 1.0807  data_time: 0.0451  last_data_time: 0.0542   lr: 0.0001  max_mem: 32061M
[08/21 16:03:46] d2.utils.events INFO:  eta: 0:14:15  iter: 199  total_loss: 22.67  loss_ce: 0.6588  loss_mask: 0.1978  loss_dice: 1.275  loss_ce_0: 0.6811  loss_mask_0: 0.2304  loss_dice_0: 1.563  loss_ce_1: 0.8089  loss_mask_1: 0.2073  loss_dice_1: 1.46  loss_ce_2: 0.7339  loss_mask_2: 0.1998  loss_dice_2: 1.398  loss_ce_3: 0.6898  loss_mask_3: 0.2021  loss_dice_3: 1.372  loss_ce_4: 0.6593  loss_mask_4: 0.2018  loss_dice_4: 1.347  loss_ce_5: 0.6692  loss_mask_5: 0.1979  loss_dice_5: 1.317  loss_ce_6: 0.671  loss_mask_6: 0.2013  loss_dice_6: 1.345  loss_ce_7: 0.6545  loss_mask_7: 0.1974  loss_dice_7: 1.304  loss_ce_8: 0.6736  loss_mask_8: 0.1937  loss_dice_8: 1.295    time: 1.0738  last_time: 1.0529  data_time: 0.0428  last_data_time: 0.0366   lr: 0.0001  max_mem: 32061M
[08/21 16:04:07] d2.utils.events INFO:  eta: 0:13:53  iter: 219  total_loss: 22.95  loss_ce: 0.6628  loss_mask: 0.1917  loss_dice: 1.303  loss_ce_0: 0.7438  loss_mask_0: 0.2268  loss_dice_0: 1.527  loss_ce_1: 0.8453  loss_mask_1: 0.2082  loss_dice_1: 1.425  loss_ce_2: 0.7854  loss_mask_2: 0.1968  loss_dice_2: 1.352  loss_ce_3: 0.7296  loss_mask_3: 0.1909  loss_dice_3: 1.384  loss_ce_4: 0.7314  loss_mask_4: 0.1969  loss_dice_4: 1.351  loss_ce_5: 0.7034  loss_mask_5: 0.1929  loss_dice_5: 1.321  loss_ce_6: 0.6877  loss_mask_6: 0.1915  loss_dice_6: 1.33  loss_ce_7: 0.6777  loss_mask_7: 0.1898  loss_dice_7: 1.313  loss_ce_8: 0.678  loss_mask_8: 0.1892  loss_dice_8: 1.296    time: 1.0733  last_time: 1.0719  data_time: 0.0473  last_data_time: 0.0416   lr: 0.0001  max_mem: 32061M
[08/21 16:04:29] d2.utils.events INFO:  eta: 0:13:32  iter: 239  total_loss: 22.54  loss_ce: 0.6673  loss_mask: 0.1862  loss_dice: 1.306  loss_ce_0: 0.71  loss_mask_0: 0.2094  loss_dice_0: 1.535  loss_ce_1: 0.8018  loss_mask_1: 0.1931  loss_dice_1: 1.427  loss_ce_2: 0.7788  loss_mask_2: 0.1884  loss_dice_2: 1.389  loss_ce_3: 0.7005  loss_mask_3: 0.1879  loss_dice_3: 1.329  loss_ce_4: 0.6814  loss_mask_4: 0.1862  loss_dice_4: 1.34  loss_ce_5: 0.6679  loss_mask_5: 0.1837  loss_dice_5: 1.331  loss_ce_6: 0.6665  loss_mask_6: 0.1872  loss_dice_6: 1.31  loss_ce_7: 0.6667  loss_mask_7: 0.1861  loss_dice_7: 1.292  loss_ce_8: 0.6627  loss_mask_8: 0.1869  loss_dice_8: 1.31    time: 1.0730  last_time: 1.0621  data_time: 0.0432  last_data_time: 0.0413   lr: 0.0001  max_mem: 32320M
[08/21 16:04:50] d2.utils.events INFO:  eta: 0:13:10  iter: 259  total_loss: 22.53  loss_ce: 0.6471  loss_mask: 0.1876  loss_dice: 1.306  loss_ce_0: 0.6675  loss_mask_0: 0.2157  loss_dice_0: 1.552  loss_ce_1: 0.7392  loss_mask_1: 0.1976  loss_dice_1: 1.504  loss_ce_2: 0.7358  loss_mask_2: 0.191  loss_dice_2: 1.418  loss_ce_3: 0.6692  loss_mask_3: 0.1894  loss_dice_3: 1.394  loss_ce_4: 0.6486  loss_mask_4: 0.1866  loss_dice_4: 1.389  loss_ce_5: 0.6435  loss_mask_5: 0.1858  loss_dice_5: 1.367  loss_ce_6: 0.6694  loss_mask_6: 0.1871  loss_dice_6: 1.324  loss_ce_7: 0.6255  loss_mask_7: 0.1856  loss_dice_7: 1.359  loss_ce_8: 0.6135  loss_mask_8: 0.1859  loss_dice_8: 1.33    time: 1.0728  last_time: 1.0318  data_time: 0.0398  last_data_time: 0.0349   lr: 0.0001  max_mem: 32320M
[08/21 16:05:12] d2.utils.events INFO:  eta: 0:12:49  iter: 279  total_loss: 21.7  loss_ce: 0.6716  loss_mask: 0.1819  loss_dice: 1.237  loss_ce_0: 0.7025  loss_mask_0: 0.2194  loss_dice_0: 1.505  loss_ce_1: 0.7947  loss_mask_1: 0.1974  loss_dice_1: 1.437  loss_ce_2: 0.7251  loss_mask_2: 0.1881  loss_dice_2: 1.34  loss_ce_3: 0.7179  loss_mask_3: 0.1882  loss_dice_3: 1.26  loss_ce_4: 0.6711  loss_mask_4: 0.189  loss_dice_4: 1.242  loss_ce_5: 0.6777  loss_mask_5: 0.185  loss_dice_5: 1.26  loss_ce_6: 0.6563  loss_mask_6: 0.1854  loss_dice_6: 1.218  loss_ce_7: 0.6613  loss_mask_7: 0.185  loss_dice_7: 1.25  loss_ce_8: 0.6364  loss_mask_8: 0.1839  loss_dice_8: 1.252    time: 1.0741  last_time: 1.0659  data_time: 0.0493  last_data_time: 0.0440   lr: 0.0001  max_mem: 32320M
[08/21 16:05:34] d2.utils.events INFO:  eta: 0:12:28  iter: 299  total_loss: 22.26  loss_ce: 0.6185  loss_mask: 0.1805  loss_dice: 1.262  loss_ce_0: 0.7426  loss_mask_0: 0.2088  loss_dice_0: 1.597  loss_ce_1: 0.8134  loss_mask_1: 0.1993  loss_dice_1: 1.48  loss_ce_2: 0.7205  loss_mask_2: 0.184  loss_dice_2: 1.403  loss_ce_3: 0.6675  loss_mask_3: 0.1802  loss_dice_3: 1.362  loss_ce_4: 0.6773  loss_mask_4: 0.1809  loss_dice_4: 1.325  loss_ce_5: 0.6376  loss_mask_5: 0.1799  loss_dice_5: 1.344  loss_ce_6: 0.6471  loss_mask_6: 0.1814  loss_dice_6: 1.302  loss_ce_7: 0.6204  loss_mask_7: 0.1804  loss_dice_7: 1.338  loss_ce_8: 0.6072  loss_mask_8: 0.1787  loss_dice_8: 1.312    time: 1.0758  last_time: 1.0700  data_time: 0.0484  last_data_time: 0.0398   lr: 0.0001  max_mem: 32708M
[08/21 16:05:56] d2.utils.events INFO:  eta: 0:12:07  iter: 319  total_loss: 23.1  loss_ce: 0.6564  loss_mask: 0.1899  loss_dice: 1.367  loss_ce_0: 0.6993  loss_mask_0: 0.2157  loss_dice_0: 1.564  loss_ce_1: 0.7867  loss_mask_1: 0.2052  loss_dice_1: 1.445  loss_ce_2: 0.7451  loss_mask_2: 0.1964  loss_dice_2: 1.463  loss_ce_3: 0.6813  loss_mask_3: 0.198  loss_dice_3: 1.382  loss_ce_4: 0.6581  loss_mask_4: 0.196  loss_dice_4: 1.371  loss_ce_5: 0.6739  loss_mask_5: 0.1902  loss_dice_5: 1.368  loss_ce_6: 0.6439  loss_mask_6: 0.195  loss_dice_6: 1.36  loss_ce_7: 0.647  loss_mask_7: 0.1918  loss_dice_7: 1.364  loss_ce_8: 0.6205  loss_mask_8: 0.19  loss_dice_8: 1.357    time: 1.0763  last_time: 1.0632  data_time: 0.0461  last_data_time: 0.0519   lr: 0.0001  max_mem: 32708M
[08/21 16:06:18] d2.utils.events INFO:  eta: 0:11:46  iter: 339  total_loss: 22.24  loss_ce: 0.6547  loss_mask: 0.1913  loss_dice: 1.268  loss_ce_0: 0.7163  loss_mask_0: 0.2273  loss_dice_0: 1.525  loss_ce_1: 0.7633  loss_mask_1: 0.2087  loss_dice_1: 1.41  loss_ce_2: 0.7427  loss_mask_2: 0.2012  loss_dice_2: 1.356  loss_ce_3: 0.6807  loss_mask_3: 0.2032  loss_dice_3: 1.322  loss_ce_4: 0.6611  loss_mask_4: 0.1982  loss_dice_4: 1.293  loss_ce_5: 0.6387  loss_mask_5: 0.1975  loss_dice_5: 1.279  loss_ce_6: 0.6504  loss_mask_6: 0.1964  loss_dice_6: 1.264  loss_ce_7: 0.6624  loss_mask_7: 0.1972  loss_dice_7: 1.249  loss_ce_8: 0.6387  loss_mask_8: 0.19  loss_dice_8: 1.267    time: 1.0759  last_time: 1.0495  data_time: 0.0430  last_data_time: 0.0398   lr: 0.0001  max_mem: 32708M
[08/21 16:06:39] d2.utils.events INFO:  eta: 0:11:24  iter: 359  total_loss: 22.36  loss_ce: 0.5851  loss_mask: 0.193  loss_dice: 1.269  loss_ce_0: 0.7102  loss_mask_0: 0.2134  loss_dice_0: 1.518  loss_ce_1: 0.7677  loss_mask_1: 0.2051  loss_dice_1: 1.438  loss_ce_2: 0.6933  loss_mask_2: 0.191  loss_dice_2: 1.386  loss_ce_3: 0.6398  loss_mask_3: 0.1905  loss_dice_3: 1.328  loss_ce_4: 0.6627  loss_mask_4: 0.1937  loss_dice_4: 1.346  loss_ce_5: 0.6468  loss_mask_5: 0.1918  loss_dice_5: 1.294  loss_ce_6: 0.6219  loss_mask_6: 0.1913  loss_dice_6: 1.304  loss_ce_7: 0.6161  loss_mask_7: 0.1917  loss_dice_7: 1.259  loss_ce_8: 0.6261  loss_mask_8: 0.1911  loss_dice_8: 1.294    time: 1.0758  last_time: 1.0780  data_time: 0.0449  last_data_time: 0.0420   lr: 0.0001  max_mem: 32708M
[08/21 16:07:01] d2.utils.events INFO:  eta: 0:11:03  iter: 379  total_loss: 22.21  loss_ce: 0.6876  loss_mask: 0.1935  loss_dice: 1.254  loss_ce_0: 0.7454  loss_mask_0: 0.2186  loss_dice_0: 1.515  loss_ce_1: 0.8148  loss_mask_1: 0.203  loss_dice_1: 1.424  loss_ce_2: 0.732  loss_mask_2: 0.1954  loss_dice_2: 1.392  loss_ce_3: 0.7405  loss_mask_3: 0.1957  loss_dice_3: 1.287  loss_ce_4: 0.6964  loss_mask_4: 0.1961  loss_dice_4: 1.283  loss_ce_5: 0.6679  loss_mask_5: 0.1953  loss_dice_5: 1.272  loss_ce_6: 0.6414  loss_mask_6: 0.1942  loss_dice_6: 1.268  loss_ce_7: 0.6779  loss_mask_7: 0.1938  loss_dice_7: 1.241  loss_ce_8: 0.6375  loss_mask_8: 0.192  loss_dice_8: 1.247    time: 1.0759  last_time: 1.0963  data_time: 0.0466  last_data_time: 0.0581   lr: 0.0001  max_mem: 32708M
[08/21 16:07:22] d2.utils.events INFO:  eta: 0:10:42  iter: 399  total_loss: 21.34  loss_ce: 0.5682  loss_mask: 0.1949  loss_dice: 1.237  loss_ce_0: 0.6342  loss_mask_0: 0.2086  loss_dice_0: 1.435  loss_ce_1: 0.7324  loss_mask_1: 0.2036  loss_dice_1: 1.374  loss_ce_2: 0.6538  loss_mask_2: 0.1988  loss_dice_2: 1.319  loss_ce_3: 0.5957  loss_mask_3: 0.1941  loss_dice_3: 1.272  loss_ce_4: 0.5702  loss_mask_4: 0.1937  loss_dice_4: 1.284  loss_ce_5: 0.5936  loss_mask_5: 0.191  loss_dice_5: 1.218  loss_ce_6: 0.5679  loss_mask_6: 0.1938  loss_dice_6: 1.243  loss_ce_7: 0.6093  loss_mask_7: 0.1931  loss_dice_7: 1.205  loss_ce_8: 0.6074  loss_mask_8: 0.1912  loss_dice_8: 1.219    time: 1.0755  last_time: 1.0721  data_time: 0.0489  last_data_time: 0.0551   lr: 0.0001  max_mem: 32708M
[08/21 16:07:44] d2.utils.events INFO:  eta: 0:10:20  iter: 419  total_loss: 21.42  loss_ce: 0.5877  loss_mask: 0.1912  loss_dice: 1.179  loss_ce_0: 0.6727  loss_mask_0: 0.2313  loss_dice_0: 1.405  loss_ce_1: 0.7189  loss_mask_1: 0.2072  loss_dice_1: 1.326  loss_ce_2: 0.6857  loss_mask_2: 0.1977  loss_dice_2: 1.273  loss_ce_3: 0.6025  loss_mask_3: 0.1962  loss_dice_3: 1.249  loss_ce_4: 0.6178  loss_mask_4: 0.1985  loss_dice_4: 1.243  loss_ce_5: 0.6202  loss_mask_5: 0.1931  loss_dice_5: 1.203  loss_ce_6: 0.5703  loss_mask_6: 0.1925  loss_dice_6: 1.207  loss_ce_7: 0.5845  loss_mask_7: 0.1942  loss_dice_7: 1.206  loss_ce_8: 0.5879  loss_mask_8: 0.1904  loss_dice_8: 1.197    time: 1.0755  last_time: 1.0849  data_time: 0.0480  last_data_time: 0.0570   lr: 0.0001  max_mem: 32708M
[08/21 16:08:05] d2.utils.events INFO:  eta: 0:09:59  iter: 439  total_loss: 20.78  loss_ce: 0.5692  loss_mask: 0.1661  loss_dice: 1.224  loss_ce_0: 0.6815  loss_mask_0: 0.1975  loss_dice_0: 1.446  loss_ce_1: 0.7267  loss_mask_1: 0.1847  loss_dice_1: 1.392  loss_ce_2: 0.6815  loss_mask_2: 0.1736  loss_dice_2: 1.323  loss_ce_3: 0.6299  loss_mask_3: 0.1726  loss_dice_3: 1.256  loss_ce_4: 0.6019  loss_mask_4: 0.1698  loss_dice_4: 1.268  loss_ce_5: 0.5961  loss_mask_5: 0.1706  loss_dice_5: 1.278  loss_ce_6: 0.5934  loss_mask_6: 0.1666  loss_dice_6: 1.245  loss_ce_7: 0.5888  loss_mask_7: 0.1686  loss_dice_7: 1.25  loss_ce_8: 0.5687  loss_mask_8: 0.1676  loss_dice_8: 1.273    time: 1.0753  last_time: 1.0612  data_time: 0.0481  last_data_time: 0.0439   lr: 0.0001  max_mem: 32708M
[08/21 16:08:27] d2.utils.events INFO:  eta: 0:09:38  iter: 459  total_loss: 21.74  loss_ce: 0.6279  loss_mask: 0.1842  loss_dice: 1.261  loss_ce_0: 0.7177  loss_mask_0: 0.2123  loss_dice_0: 1.472  loss_ce_1: 0.777  loss_mask_1: 0.1977  loss_dice_1: 1.408  loss_ce_2: 0.7214  loss_mask_2: 0.1902  loss_dice_2: 1.353  loss_ce_3: 0.6669  loss_mask_3: 0.1902  loss_dice_3: 1.297  loss_ce_4: 0.6278  loss_mask_4: 0.1902  loss_dice_4: 1.295  loss_ce_5: 0.6542  loss_mask_5: 0.1899  loss_dice_5: 1.321  loss_ce_6: 0.6216  loss_mask_6: 0.1905  loss_dice_6: 1.317  loss_ce_7: 0.6424  loss_mask_7: 0.1863  loss_dice_7: 1.29  loss_ce_8: 0.6244  loss_mask_8: 0.1849  loss_dice_8: 1.287    time: 1.0768  last_time: 1.1370  data_time: 0.0480  last_data_time: 0.0521   lr: 0.0001  max_mem: 32708M
[08/21 16:08:50] d2.utils.events INFO:  eta: 0:09:17  iter: 479  total_loss: 21.91  loss_ce: 0.618  loss_mask: 0.1743  loss_dice: 1.306  loss_ce_0: 0.709  loss_mask_0: 0.2082  loss_dice_0: 1.544  loss_ce_1: 0.7452  loss_mask_1: 0.1934  loss_dice_1: 1.448  loss_ce_2: 0.7135  loss_mask_2: 0.1788  loss_dice_2: 1.373  loss_ce_3: 0.6387  loss_mask_3: 0.1799  loss_dice_3: 1.335  loss_ce_4: 0.622  loss_mask_4: 0.1794  loss_dice_4: 1.343  loss_ce_5: 0.6181  loss_mask_5: 0.1741  loss_dice_5: 1.321  loss_ce_6: 0.624  loss_mask_6: 0.1752  loss_dice_6: 1.314  loss_ce_7: 0.6282  loss_mask_7: 0.1745  loss_dice_7: 1.306  loss_ce_8: 0.6274  loss_mask_8: 0.1767  loss_dice_8: 1.264    time: 1.0780  last_time: 1.1142  data_time: 0.0598  last_data_time: 0.0720   lr: 0.0001  max_mem: 32708M
[08/21 16:09:11] d2.utils.events INFO:  eta: 0:08:56  iter: 499  total_loss: 21.39  loss_ce: 0.5759  loss_mask: 0.1792  loss_dice: 1.233  loss_ce_0: 0.7234  loss_mask_0: 0.2049  loss_dice_0: 1.46  loss_ce_1: 0.7627  loss_mask_1: 0.1932  loss_dice_1: 1.379  loss_ce_2: 0.6823  loss_mask_2: 0.1858  loss_dice_2: 1.275  loss_ce_3: 0.6251  loss_mask_3: 0.1846  loss_dice_3: 1.272  loss_ce_4: 0.6263  loss_mask_4: 0.1801  loss_dice_4: 1.279  loss_ce_5: 0.6095  loss_mask_5: 0.1801  loss_dice_5: 1.294  loss_ce_6: 0.5861  loss_mask_6: 0.1801  loss_dice_6: 1.211  loss_ce_7: 0.5588  loss_mask_7: 0.1803  loss_dice_7: 1.239  loss_ce_8: 0.601  loss_mask_8: 0.1798  loss_dice_8: 1.214    time: 1.0785  last_time: 1.0831  data_time: 0.0559  last_data_time: 0.0606   lr: 0.0001  max_mem: 32708M
[08/21 16:09:33] d2.utils.events INFO:  eta: 0:08:34  iter: 519  total_loss: 21.84  loss_ce: 0.5938  loss_mask: 0.1789  loss_dice: 1.247  loss_ce_0: 0.6788  loss_mask_0: 0.2033  loss_dice_0: 1.507  loss_ce_1: 0.7299  loss_mask_1: 0.1922  loss_dice_1: 1.454  loss_ce_2: 0.6931  loss_mask_2: 0.1843  loss_dice_2: 1.39  loss_ce_3: 0.6385  loss_mask_3: 0.1841  loss_dice_3: 1.329  loss_ce_4: 0.6105  loss_mask_4: 0.1805  loss_dice_4: 1.333  loss_ce_5: 0.6212  loss_mask_5: 0.1775  loss_dice_5: 1.338  loss_ce_6: 0.6203  loss_mask_6: 0.1792  loss_dice_6: 1.316  loss_ce_7: 0.5934  loss_mask_7: 0.1762  loss_dice_7: 1.306  loss_ce_8: 0.5976  loss_mask_8: 0.1787  loss_dice_8: 1.3    time: 1.0788  last_time: 1.0995  data_time: 0.0513  last_data_time: 0.0522   lr: 0.0001  max_mem: 32708M
[08/21 16:09:55] d2.utils.events INFO:  eta: 0:08:13  iter: 539  total_loss: 21.6  loss_ce: 0.6096  loss_mask: 0.1659  loss_dice: 1.289  loss_ce_0: 0.7237  loss_mask_0: 0.2027  loss_dice_0: 1.523  loss_ce_1: 0.7845  loss_mask_1: 0.1782  loss_dice_1: 1.445  loss_ce_2: 0.7181  loss_mask_2: 0.1703  loss_dice_2: 1.373  loss_ce_3: 0.6794  loss_mask_3: 0.171  loss_dice_3: 1.323  loss_ce_4: 0.6636  loss_mask_4: 0.1722  loss_dice_4: 1.309  loss_ce_5: 0.6642  loss_mask_5: 0.1693  loss_dice_5: 1.304  loss_ce_6: 0.6143  loss_mask_6: 0.1656  loss_dice_6: 1.303  loss_ce_7: 0.6434  loss_mask_7: 0.1685  loss_dice_7: 1.287  loss_ce_8: 0.6133  loss_mask_8: 0.1676  loss_dice_8: 1.294    time: 1.0792  last_time: 1.1013  data_time: 0.0523  last_data_time: 0.0460   lr: 0.0001  max_mem: 32708M
[08/21 16:10:17] d2.utils.events INFO:  eta: 0:07:52  iter: 559  total_loss: 21.15  loss_ce: 0.577  loss_mask: 0.1771  loss_dice: 1.222  loss_ce_0: 0.7  loss_mask_0: 0.204  loss_dice_0: 1.43  loss_ce_1: 0.7702  loss_mask_1: 0.1914  loss_dice_1: 1.382  loss_ce_2: 0.6958  loss_mask_2: 0.1796  loss_dice_2: 1.314  loss_ce_3: 0.6531  loss_mask_3: 0.1818  loss_dice_3: 1.219  loss_ce_4: 0.6098  loss_mask_4: 0.1797  loss_dice_4: 1.235  loss_ce_5: 0.6346  loss_mask_5: 0.1763  loss_dice_5: 1.209  loss_ce_6: 0.6186  loss_mask_6: 0.1805  loss_dice_6: 1.215  loss_ce_7: 0.6011  loss_mask_7: 0.179  loss_dice_7: 1.221  loss_ce_8: 0.5791  loss_mask_8: 0.1785  loss_dice_8: 1.217    time: 1.0793  last_time: 1.0840  data_time: 0.0475  last_data_time: 0.0400   lr: 0.0001  max_mem: 32708M
[08/21 16:10:38] d2.utils.events INFO:  eta: 0:07:30  iter: 579  total_loss: 22.06  loss_ce: 0.5502  loss_mask: 0.185  loss_dice: 1.291  loss_ce_0: 0.6913  loss_mask_0: 0.2095  loss_dice_0: 1.535  loss_ce_1: 0.7362  loss_mask_1: 0.198  loss_dice_1: 1.458  loss_ce_2: 0.7132  loss_mask_2: 0.1933  loss_dice_2: 1.38  loss_ce_3: 0.6684  loss_mask_3: 0.1891  loss_dice_3: 1.355  loss_ce_4: 0.6137  loss_mask_4: 0.1852  loss_dice_4: 1.326  loss_ce_5: 0.614  loss_mask_5: 0.1851  loss_dice_5: 1.331  loss_ce_6: 0.5706  loss_mask_6: 0.1865  loss_dice_6: 1.314  loss_ce_7: 0.5964  loss_mask_7: 0.1831  loss_dice_7: 1.298  loss_ce_8: 0.6083  loss_mask_8: 0.1839  loss_dice_8: 1.345    time: 1.0790  last_time: 1.0627  data_time: 0.0435  last_data_time: 0.0437   lr: 0.0001  max_mem: 32708M
[08/21 16:11:00] d2.utils.events INFO:  eta: 0:07:09  iter: 599  total_loss: 22.13  loss_ce: 0.6548  loss_mask: 0.1667  loss_dice: 1.303  loss_ce_0: 0.7423  loss_mask_0: 0.1878  loss_dice_0: 1.561  loss_ce_1: 0.8414  loss_mask_1: 0.1791  loss_dice_1: 1.478  loss_ce_2: 0.7639  loss_mask_2: 0.1716  loss_dice_2: 1.404  loss_ce_3: 0.683  loss_mask_3: 0.171  loss_dice_3: 1.351  loss_ce_4: 0.681  loss_mask_4: 0.1718  loss_dice_4: 1.339  loss_ce_5: 0.6577  loss_mask_5: 0.1716  loss_dice_5: 1.323  loss_ce_6: 0.6327  loss_mask_6: 0.1706  loss_dice_6: 1.328  loss_ce_7: 0.6505  loss_mask_7: 0.1678  loss_dice_7: 1.292  loss_ce_8: 0.6597  loss_mask_8: 0.1696  loss_dice_8: 1.293    time: 1.0794  last_time: 1.0929  data_time: 0.0497  last_data_time: 0.0512   lr: 0.0001  max_mem: 32708M
[08/21 16:11:22] d2.utils.events INFO:  eta: 0:06:48  iter: 619  total_loss: 21.31  loss_ce: 0.5575  loss_mask: 0.1765  loss_dice: 1.308  loss_ce_0: 0.6662  loss_mask_0: 0.1964  loss_dice_0: 1.535  loss_ce_1: 0.7182  loss_mask_1: 0.1872  loss_dice_1: 1.416  loss_ce_2: 0.6584  loss_mask_2: 0.1773  loss_dice_2: 1.37  loss_ce_3: 0.6539  loss_mask_3: 0.181  loss_dice_3: 1.362  loss_ce_4: 0.5878  loss_mask_4: 0.1788  loss_dice_4: 1.291  loss_ce_5: 0.5892  loss_mask_5: 0.1773  loss_dice_5: 1.299  loss_ce_6: 0.5826  loss_mask_6: 0.178  loss_dice_6: 1.275  loss_ce_7: 0.5764  loss_mask_7: 0.1767  loss_dice_7: 1.286  loss_ce_8: 0.5656  loss_mask_8: 0.1752  loss_dice_8: 1.285    time: 1.0799  last_time: 1.0837  data_time: 0.0493  last_data_time: 0.0452   lr: 0.0001  max_mem: 32708M
[08/21 16:11:44] d2.utils.events INFO:  eta: 0:06:27  iter: 639  total_loss: 21.89  loss_ce: 0.6257  loss_mask: 0.1867  loss_dice: 1.234  loss_ce_0: 0.7385  loss_mask_0: 0.2132  loss_dice_0: 1.472  loss_ce_1: 0.7907  loss_mask_1: 0.1973  loss_dice_1: 1.355  loss_ce_2: 0.7197  loss_mask_2: 0.1924  loss_dice_2: 1.33  loss_ce_3: 0.6769  loss_mask_3: 0.1878  loss_dice_3: 1.288  loss_ce_4: 0.6673  loss_mask_4: 0.1848  loss_dice_4: 1.258  loss_ce_5: 0.6449  loss_mask_5: 0.1841  loss_dice_5: 1.246  loss_ce_6: 0.6706  loss_mask_6: 0.1878  loss_dice_6: 1.245  loss_ce_7: 0.6654  loss_mask_7: 0.1846  loss_dice_7: 1.254  loss_ce_8: 0.6238  loss_mask_8: 0.1825  loss_dice_8: 1.24    time: 1.0802  last_time: 1.1190  data_time: 0.0547  last_data_time: 0.0421   lr: 0.0001  max_mem: 32708M
[08/21 16:12:06] d2.utils.events INFO:  eta: 0:06:05  iter: 659  total_loss: 21.5  loss_ce: 0.5712  loss_mask: 0.1748  loss_dice: 1.29  loss_ce_0: 0.6818  loss_mask_0: 0.1981  loss_dice_0: 1.472  loss_ce_1: 0.7648  loss_mask_1: 0.1901  loss_dice_1: 1.426  loss_ce_2: 0.6978  loss_mask_2: 0.1832  loss_dice_2: 1.358  loss_ce_3: 0.6604  loss_mask_3: 0.1769  loss_dice_3: 1.294  loss_ce_4: 0.6333  loss_mask_4: 0.1807  loss_dice_4: 1.268  loss_ce_5: 0.5996  loss_mask_5: 0.1742  loss_dice_5: 1.268  loss_ce_6: 0.5898  loss_mask_6: 0.1728  loss_dice_6: 1.246  loss_ce_7: 0.5722  loss_mask_7: 0.1735  loss_dice_7: 1.249  loss_ce_8: 0.5964  loss_mask_8: 0.1719  loss_dice_8: 1.202    time: 1.0803  last_time: 1.0755  data_time: 0.0528  last_data_time: 0.0456   lr: 0.0001  max_mem: 32708M
[08/21 16:12:27] d2.utils.events INFO:  eta: 0:05:44  iter: 679  total_loss: 20.94  loss_ce: 0.6129  loss_mask: 0.1832  loss_dice: 1.212  loss_ce_0: 0.7024  loss_mask_0: 0.2075  loss_dice_0: 1.424  loss_ce_1: 0.7448  loss_mask_1: 0.1981  loss_dice_1: 1.346  loss_ce_2: 0.6961  loss_mask_2: 0.1862  loss_dice_2: 1.285  loss_ce_3: 0.6396  loss_mask_3: 0.1864  loss_dice_3: 1.274  loss_ce_4: 0.6484  loss_mask_4: 0.1839  loss_dice_4: 1.248  loss_ce_5: 0.6237  loss_mask_5: 0.1848  loss_dice_5: 1.251  loss_ce_6: 0.6117  loss_mask_6: 0.1828  loss_dice_6: 1.22  loss_ce_7: 0.5975  loss_mask_7: 0.1847  loss_dice_7: 1.221  loss_ce_8: 0.6315  loss_mask_8: 0.1828  loss_dice_8: 1.203    time: 1.0800  last_time: 1.0705  data_time: 0.0444  last_data_time: 0.0437   lr: 0.0001  max_mem: 32708M
[08/21 16:12:49] d2.utils.events INFO:  eta: 0:05:22  iter: 699  total_loss: 21.19  loss_ce: 0.6148  loss_mask: 0.1826  loss_dice: 1.246  loss_ce_0: 0.716  loss_mask_0: 0.2123  loss_dice_0: 1.451  loss_ce_1: 0.7708  loss_mask_1: 0.1888  loss_dice_1: 1.369  loss_ce_2: 0.7105  loss_mask_2: 0.1857  loss_dice_2: 1.346  loss_ce_3: 0.655  loss_mask_3: 0.1865  loss_dice_3: 1.285  loss_ce_4: 0.6334  loss_mask_4: 0.1869  loss_dice_4: 1.25  loss_ce_5: 0.6143  loss_mask_5: 0.184  loss_dice_5: 1.269  loss_ce_6: 0.5945  loss_mask_6: 0.1822  loss_dice_6: 1.268  loss_ce_7: 0.6089  loss_mask_7: 0.1803  loss_dice_7: 1.258  loss_ce_8: 0.6002  loss_mask_8: 0.1819  loss_dice_8: 1.233    time: 1.0797  last_time: 1.0359  data_time: 0.0451  last_data_time: 0.0433   lr: 0.0001  max_mem: 32708M
[08/21 16:13:10] d2.utils.events INFO:  eta: 0:05:00  iter: 719  total_loss: 21.03  loss_ce: 0.5776  loss_mask: 0.1696  loss_dice: 1.206  loss_ce_0: 0.67  loss_mask_0: 0.1957  loss_dice_0: 1.434  loss_ce_1: 0.711  loss_mask_1: 0.177  loss_dice_1: 1.311  loss_ce_2: 0.6824  loss_mask_2: 0.175  loss_dice_2: 1.295  loss_ce_3: 0.5761  loss_mask_3: 0.177  loss_dice_3: 1.244  loss_ce_4: 0.5813  loss_mask_4: 0.1717  loss_dice_4: 1.241  loss_ce_5: 0.6032  loss_mask_5: 0.1703  loss_dice_5: 1.214  loss_ce_6: 0.5879  loss_mask_6: 0.1675  loss_dice_6: 1.205  loss_ce_7: 0.5931  loss_mask_7: 0.169  loss_dice_7: 1.214  loss_ce_8: 0.5682  loss_mask_8: 0.1685  loss_dice_8: 1.202    time: 1.0799  last_time: 1.0855  data_time: 0.0513  last_data_time: 0.0653   lr: 0.0001  max_mem: 32708M
[08/21 16:13:32] d2.utils.events INFO:  eta: 0:04:39  iter: 739  total_loss: 22.11  loss_ce: 0.6182  loss_mask: 0.1729  loss_dice: 1.32  loss_ce_0: 0.6782  loss_mask_0: 0.1977  loss_dice_0: 1.51  loss_ce_1: 0.7667  loss_mask_1: 0.1831  loss_dice_1: 1.442  loss_ce_2: 0.7057  loss_mask_2: 0.1767  loss_dice_2: 1.407  loss_ce_3: 0.6554  loss_mask_3: 0.1763  loss_dice_3: 1.347  loss_ce_4: 0.6182  loss_mask_4: 0.1728  loss_dice_4: 1.275  loss_ce_5: 0.6221  loss_mask_5: 0.1709  loss_dice_5: 1.3  loss_ce_6: 0.6257  loss_mask_6: 0.1716  loss_dice_6: 1.305  loss_ce_7: 0.6376  loss_mask_7: 0.1707  loss_dice_7: 1.325  loss_ce_8: 0.6126  loss_mask_8: 0.1714  loss_dice_8: 1.305    time: 1.0802  last_time: 1.0790  data_time: 0.0552  last_data_time: 0.0506   lr: 0.0001  max_mem: 32708M
[08/21 16:13:54] d2.utils.events INFO:  eta: 0:04:18  iter: 759  total_loss: 21.01  loss_ce: 0.5447  loss_mask: 0.1804  loss_dice: 1.281  loss_ce_0: 0.6394  loss_mask_0: 0.2005  loss_dice_0: 1.499  loss_ce_1: 0.7492  loss_mask_1: 0.1845  loss_dice_1: 1.39  loss_ce_2: 0.6453  loss_mask_2: 0.1741  loss_dice_2: 1.316  loss_ce_3: 0.5999  loss_mask_3: 0.1796  loss_dice_3: 1.281  loss_ce_4: 0.563  loss_mask_4: 0.1787  loss_dice_4: 1.312  loss_ce_5: 0.5684  loss_mask_5: 0.1762  loss_dice_5: 1.281  loss_ce_6: 0.5476  loss_mask_6: 0.1737  loss_dice_6: 1.263  loss_ce_7: 0.5476  loss_mask_7: 0.1763  loss_dice_7: 1.235  loss_ce_8: 0.5456  loss_mask_8: 0.1822  loss_dice_8: 1.271    time: 1.0800  last_time: 1.0514  data_time: 0.0477  last_data_time: 0.0399   lr: 0.0001  max_mem: 32708M
[08/21 16:14:15] d2.utils.events INFO:  eta: 0:03:56  iter: 779  total_loss: 20.93  loss_ce: 0.5717  loss_mask: 0.1739  loss_dice: 1.267  loss_ce_0: 0.7124  loss_mask_0: 0.2063  loss_dice_0: 1.501  loss_ce_1: 0.7786  loss_mask_1: 0.1903  loss_dice_1: 1.393  loss_ce_2: 0.6698  loss_mask_2: 0.1813  loss_dice_2: 1.358  loss_ce_3: 0.6375  loss_mask_3: 0.1824  loss_dice_3: 1.288  loss_ce_4: 0.6015  loss_mask_4: 0.1771  loss_dice_4: 1.286  loss_ce_5: 0.5655  loss_mask_5: 0.1752  loss_dice_5: 1.255  loss_ce_6: 0.5707  loss_mask_6: 0.1787  loss_dice_6: 1.24  loss_ce_7: 0.5528  loss_mask_7: 0.1728  loss_dice_7: 1.231  loss_ce_8: 0.5756  loss_mask_8: 0.1737  loss_dice_8: 1.252    time: 1.0796  last_time: 1.0769  data_time: 0.0435  last_data_time: 0.0597   lr: 0.0001  max_mem: 32708M
[08/21 16:14:37] d2.utils.events INFO:  eta: 0:03:35  iter: 799  total_loss: 20.37  loss_ce: 0.5488  loss_mask: 0.1693  loss_dice: 1.196  loss_ce_0: 0.6668  loss_mask_0: 0.2074  loss_dice_0: 1.411  loss_ce_1: 0.705  loss_mask_1: 0.1849  loss_dice_1: 1.311  loss_ce_2: 0.6497  loss_mask_2: 0.1759  loss_dice_2: 1.297  loss_ce_3: 0.5937  loss_mask_3: 0.1731  loss_dice_3: 1.198  loss_ce_4: 0.5898  loss_mask_4: 0.1715  loss_dice_4: 1.208  loss_ce_5: 0.5683  loss_mask_5: 0.1698  loss_dice_5: 1.22  loss_ce_6: 0.5618  loss_mask_6: 0.1727  loss_dice_6: 1.162  loss_ce_7: 0.5632  loss_mask_7: 0.1696  loss_dice_7: 1.194  loss_ce_8: 0.5404  loss_mask_8: 0.1699  loss_dice_8: 1.207    time: 1.0801  last_time: 1.1000  data_time: 0.0536  last_data_time: 0.0690   lr: 0.0001  max_mem: 32708M
[08/21 16:14:59] d2.utils.events INFO:  eta: 0:03:13  iter: 819  total_loss: 21.77  loss_ce: 0.5638  loss_mask: 0.17  loss_dice: 1.318  loss_ce_0: 0.6993  loss_mask_0: 0.198  loss_dice_0: 1.509  loss_ce_1: 0.7424  loss_mask_1: 0.1872  loss_dice_1: 1.46  loss_ce_2: 0.6989  loss_mask_2: 0.1743  loss_dice_2: 1.366  loss_ce_3: 0.6162  loss_mask_3: 0.1698  loss_dice_3: 1.353  loss_ce_4: 0.6152  loss_mask_4: 0.171  loss_dice_4: 1.345  loss_ce_5: 0.5828  loss_mask_5: 0.1709  loss_dice_5: 1.317  loss_ce_6: 0.5734  loss_mask_6: 0.1678  loss_dice_6: 1.304  loss_ce_7: 0.5616  loss_mask_7: 0.1698  loss_dice_7: 1.307  loss_ce_8: 0.5383  loss_mask_8: 0.1694  loss_dice_8: 1.298    time: 1.0804  last_time: 1.0951  data_time: 0.0567  last_data_time: 0.0587   lr: 0.0001  max_mem: 32708M
[08/21 16:15:21] d2.utils.events INFO:  eta: 0:02:52  iter: 839  total_loss: 21.43  loss_ce: 0.5652  loss_mask: 0.1749  loss_dice: 1.255  loss_ce_0: 0.6976  loss_mask_0: 0.1977  loss_dice_0: 1.516  loss_ce_1: 0.7986  loss_mask_1: 0.1814  loss_dice_1: 1.402  loss_ce_2: 0.7041  loss_mask_2: 0.1759  loss_dice_2: 1.364  loss_ce_3: 0.6488  loss_mask_3: 0.1755  loss_dice_3: 1.341  loss_ce_4: 0.6509  loss_mask_4: 0.1713  loss_dice_4: 1.265  loss_ce_5: 0.6157  loss_mask_5: 0.1751  loss_dice_5: 1.299  loss_ce_6: 0.5982  loss_mask_6: 0.1704  loss_dice_6: 1.296  loss_ce_7: 0.6059  loss_mask_7: 0.1735  loss_dice_7: 1.289  loss_ce_8: 0.6036  loss_mask_8: 0.174  loss_dice_8: 1.265    time: 1.0805  last_time: 1.1067  data_time: 0.0497  last_data_time: 0.0505   lr: 0.0001  max_mem: 32708M
[08/21 16:15:43] d2.utils.events INFO:  eta: 0:02:30  iter: 859  total_loss: 20.56  loss_ce: 0.5302  loss_mask: 0.1789  loss_dice: 1.235  loss_ce_0: 0.675  loss_mask_0: 0.2066  loss_dice_0: 1.438  loss_ce_1: 0.7085  loss_mask_1: 0.1891  loss_dice_1: 1.348  loss_ce_2: 0.6441  loss_mask_2: 0.1827  loss_dice_2: 1.347  loss_ce_3: 0.6028  loss_mask_3: 0.1795  loss_dice_3: 1.296  loss_ce_4: 0.6034  loss_mask_4: 0.1797  loss_dice_4: 1.27  loss_ce_5: 0.5604  loss_mask_5: 0.1772  loss_dice_5: 1.25  loss_ce_6: 0.5893  loss_mask_6: 0.1773  loss_dice_6: 1.236  loss_ce_7: 0.5883  loss_mask_7: 0.1773  loss_dice_7: 1.204  loss_ce_8: 0.5786  loss_mask_8: 0.177  loss_dice_8: 1.226    time: 1.0805  last_time: 1.0691  data_time: 0.0545  last_data_time: 0.0622   lr: 0.0001  max_mem: 32708M
[08/21 16:16:05] d2.utils.events INFO:  eta: 0:02:09  iter: 879  total_loss: 21.42  loss_ce: 0.5762  loss_mask: 0.1716  loss_dice: 1.259  loss_ce_0: 0.6913  loss_mask_0: 0.2005  loss_dice_0: 1.498  loss_ce_1: 0.7655  loss_mask_1: 0.1895  loss_dice_1: 1.408  loss_ce_2: 0.6812  loss_mask_2: 0.1799  loss_dice_2: 1.323  loss_ce_3: 0.6188  loss_mask_3: 0.1767  loss_dice_3: 1.289  loss_ce_4: 0.5624  loss_mask_4: 0.176  loss_dice_4: 1.317  loss_ce_5: 0.5868  loss_mask_5: 0.1736  loss_dice_5: 1.314  loss_ce_6: 0.5676  loss_mask_6: 0.1724  loss_dice_6: 1.257  loss_ce_7: 0.5994  loss_mask_7: 0.1725  loss_dice_7: 1.269  loss_ce_8: 0.5859  loss_mask_8: 0.1733  loss_dice_8: 1.264    time: 1.0808  last_time: 1.1814  data_time: 0.0583  last_data_time: 0.0740   lr: 0.0001  max_mem: 32708M
[08/21 16:16:26] d2.utils.events INFO:  eta: 0:01:47  iter: 899  total_loss: 20.43  loss_ce: 0.5452  loss_mask: 0.1668  loss_dice: 1.272  loss_ce_0: 0.6521  loss_mask_0: 0.1886  loss_dice_0: 1.446  loss_ce_1: 0.6828  loss_mask_1: 0.1766  loss_dice_1: 1.343  loss_ce_2: 0.6252  loss_mask_2: 0.1677  loss_dice_2: 1.316  loss_ce_3: 0.5252  loss_mask_3: 0.1667  loss_dice_3: 1.283  loss_ce_4: 0.5688  loss_mask_4: 0.1635  loss_dice_4: 1.268  loss_ce_5: 0.5342  loss_mask_5: 0.1656  loss_dice_5: 1.284  loss_ce_6: 0.549  loss_mask_6: 0.1679  loss_dice_6: 1.252  loss_ce_7: 0.512  loss_mask_7: 0.1667  loss_dice_7: 1.261  loss_ce_8: 0.4986  loss_mask_8: 0.1666  loss_dice_8: 1.243    time: 1.0808  last_time: 1.0297  data_time: 0.0487  last_data_time: 0.0404   lr: 0.0001  max_mem: 32708M
[08/21 16:16:48] d2.utils.events INFO:  eta: 0:01:26  iter: 919  total_loss: 19.65  loss_ce: 0.5107  loss_mask: 0.1625  loss_dice: 1.202  loss_ce_0: 0.6359  loss_mask_0: 0.1854  loss_dice_0: 1.442  loss_ce_1: 0.7324  loss_mask_1: 0.178  loss_dice_1: 1.323  loss_ce_2: 0.608  loss_mask_2: 0.1651  loss_dice_2: 1.231  loss_ce_3: 0.5743  loss_mask_3: 0.168  loss_dice_3: 1.237  loss_ce_4: 0.5372  loss_mask_4: 0.1617  loss_dice_4: 1.236  loss_ce_5: 0.5457  loss_mask_5: 0.1616  loss_dice_5: 1.219  loss_ce_6: 0.5323  loss_mask_6: 0.1615  loss_dice_6: 1.23  loss_ce_7: 0.526  loss_mask_7: 0.1614  loss_dice_7: 1.204  loss_ce_8: 0.49  loss_mask_8: 0.1621  loss_dice_8: 1.197    time: 1.0805  last_time: 1.0418  data_time: 0.0464  last_data_time: 0.0461   lr: 0.0001  max_mem: 32708M
[08/21 16:17:09] d2.utils.events INFO:  eta: 0:01:04  iter: 939  total_loss: 20.41  loss_ce: 0.5586  loss_mask: 0.1749  loss_dice: 1.168  loss_ce_0: 0.6703  loss_mask_0: 0.1963  loss_dice_0: 1.376  loss_ce_1: 0.7442  loss_mask_1: 0.1863  loss_dice_1: 1.26  loss_ce_2: 0.6479  loss_mask_2: 0.1746  loss_dice_2: 1.258  loss_ce_3: 0.5999  loss_mask_3: 0.1827  loss_dice_3: 1.177  loss_ce_4: 0.5709  loss_mask_4: 0.1747  loss_dice_4: 1.187  loss_ce_5: 0.5716  loss_mask_5: 0.173  loss_dice_5: 1.182  loss_ce_6: 0.5704  loss_mask_6: 0.1745  loss_dice_6: 1.203  loss_ce_7: 0.5629  loss_mask_7: 0.1716  loss_dice_7: 1.166  loss_ce_8: 0.5603  loss_mask_8: 0.1726  loss_dice_8: 1.163    time: 1.0801  last_time: 1.0540  data_time: 0.0446  last_data_time: 0.0420   lr: 0.0001  max_mem: 32708M
[08/21 16:17:31] d2.utils.events INFO:  eta: 0:00:43  iter: 959  total_loss: 20.64  loss_ce: 0.5327  loss_mask: 0.1816  loss_dice: 1.214  loss_ce_0: 0.6434  loss_mask_0: 0.2052  loss_dice_0: 1.435  loss_ce_1: 0.7  loss_mask_1: 0.1919  loss_dice_1: 1.329  loss_ce_2: 0.6536  loss_mask_2: 0.1867  loss_dice_2: 1.287  loss_ce_3: 0.5871  loss_mask_3: 0.1815  loss_dice_3: 1.253  loss_ce_4: 0.5411  loss_mask_4: 0.1821  loss_dice_4: 1.239  loss_ce_5: 0.5493  loss_mask_5: 0.1808  loss_dice_5: 1.2  loss_ce_6: 0.5771  loss_mask_6: 0.1811  loss_dice_6: 1.183  loss_ce_7: 0.5349  loss_mask_7: 0.1796  loss_dice_7: 1.198  loss_ce_8: 0.5519  loss_mask_8: 0.1785  loss_dice_8: 1.237    time: 1.0803  last_time: 1.1798  data_time: 0.0430  last_data_time: 0.0480   lr: 0.0001  max_mem: 32708M
[08/21 16:17:52] d2.utils.events INFO:  eta: 0:00:21  iter: 979  total_loss: 20.13  loss_ce: 0.5511  loss_mask: 0.1832  loss_dice: 1.203  loss_ce_0: 0.635  loss_mask_0: 0.2047  loss_dice_0: 1.457  loss_ce_1: 0.7069  loss_mask_1: 0.1906  loss_dice_1: 1.351  loss_ce_2: 0.6515  loss_mask_2: 0.1831  loss_dice_2: 1.258  loss_ce_3: 0.5848  loss_mask_3: 0.1834  loss_dice_3: 1.238  loss_ce_4: 0.5768  loss_mask_4: 0.1826  loss_dice_4: 1.221  loss_ce_5: 0.5492  loss_mask_5: 0.1808  loss_dice_5: 1.225  loss_ce_6: 0.543  loss_mask_6: 0.1823  loss_dice_6: 1.243  loss_ce_7: 0.5363  loss_mask_7: 0.1848  loss_dice_7: 1.211  loss_ce_8: 0.5519  loss_mask_8: 0.1836  loss_dice_8: 1.215    time: 1.0803  last_time: 1.0444  data_time: 0.0525  last_data_time: 0.0504   lr: 0.0001  max_mem: 32708M
[08/21 16:18:14] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/model_final.pth
[08/21 16:18:17] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 21.11  loss_ce: 0.5943  loss_mask: 0.1736  loss_dice: 1.268  loss_ce_0: 0.6731  loss_mask_0: 0.2078  loss_dice_0: 1.432  loss_ce_1: 0.787  loss_mask_1: 0.1897  loss_dice_1: 1.418  loss_ce_2: 0.7315  loss_mask_2: 0.1842  loss_dice_2: 1.341  loss_ce_3: 0.6455  loss_mask_3: 0.1799  loss_dice_3: 1.295  loss_ce_4: 0.6285  loss_mask_4: 0.1796  loss_dice_4: 1.252  loss_ce_5: 0.655  loss_mask_5: 0.1749  loss_dice_5: 1.282  loss_ce_6: 0.6305  loss_mask_6: 0.1756  loss_dice_6: 1.285  loss_ce_7: 0.6183  loss_mask_7: 0.1759  loss_dice_7: 1.235  loss_ce_8: 0.6344  loss_mask_8: 0.1759  loss_dice_8: 1.25    time: 1.0804  last_time: 1.0591  data_time: 0.0513  last_data_time: 0.0499   lr: 0.0001  max_mem: 32708M
[08/21 16:18:17] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:17:58 (1.0804 s / it)
[08/21 16:18:17] d2.engine.hooks INFO: Total training time: 0:18:04 (0:00:06 on hooks)
[08/21 16:18:17] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/21 16:18:17] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/21 16:18:17] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/21 16:18:17] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/21 16:18:17] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/21 16:18:17] d2.evaluation.evaluator INFO: Start inference on 500 batches
[08/21 16:18:23] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0039 s/iter. Inference: 0.2813 s/iter. Eval: 0.1034 s/iter. Total: 0.3886 s/iter. ETA=0:03:10
[08/21 16:18:28] d2.evaluation.evaluator INFO: Inference done 24/500. Dataloading: 0.0042 s/iter. Inference: 0.2820 s/iter. Eval: 0.1042 s/iter. Total: 0.3905 s/iter. ETA=0:03:05
[08/21 16:18:33] d2.evaluation.evaluator INFO: Inference done 37/500. Dataloading: 0.0042 s/iter. Inference: 0.2834 s/iter. Eval: 0.1043 s/iter. Total: 0.3920 s/iter. ETA=0:03:01
[08/21 16:18:38] d2.evaluation.evaluator INFO: Inference done 50/500. Dataloading: 0.0043 s/iter. Inference: 0.2816 s/iter. Eval: 0.1047 s/iter. Total: 0.3907 s/iter. ETA=0:02:55
[08/21 16:18:43] d2.evaluation.evaluator INFO: Inference done 63/500. Dataloading: 0.0042 s/iter. Inference: 0.2807 s/iter. Eval: 0.1048 s/iter. Total: 0.3898 s/iter. ETA=0:02:50
[08/21 16:18:48] d2.evaluation.evaluator INFO: Inference done 76/500. Dataloading: 0.0042 s/iter. Inference: 0.2811 s/iter. Eval: 0.1046 s/iter. Total: 0.3901 s/iter. ETA=0:02:45
[08/21 16:18:53] d2.evaluation.evaluator INFO: Inference done 89/500. Dataloading: 0.0043 s/iter. Inference: 0.2809 s/iter. Eval: 0.1049 s/iter. Total: 0.3902 s/iter. ETA=0:02:40
[08/21 16:18:58] d2.evaluation.evaluator INFO: Inference done 102/500. Dataloading: 0.0044 s/iter. Inference: 0.2813 s/iter. Eval: 0.1050 s/iter. Total: 0.3907 s/iter. ETA=0:02:35
[08/21 16:19:03] d2.evaluation.evaluator INFO: Inference done 115/500. Dataloading: 0.0045 s/iter. Inference: 0.2811 s/iter. Eval: 0.1050 s/iter. Total: 0.3906 s/iter. ETA=0:02:30
[08/21 16:19:08] d2.evaluation.evaluator INFO: Inference done 128/500. Dataloading: 0.0045 s/iter. Inference: 0.2810 s/iter. Eval: 0.1049 s/iter. Total: 0.3905 s/iter. ETA=0:02:25
[08/21 16:19:14] d2.evaluation.evaluator INFO: Inference done 141/500. Dataloading: 0.0044 s/iter. Inference: 0.2820 s/iter. Eval: 0.1057 s/iter. Total: 0.3922 s/iter. ETA=0:02:20
[08/21 16:19:19] d2.evaluation.evaluator INFO: Inference done 154/500. Dataloading: 0.0044 s/iter. Inference: 0.2826 s/iter. Eval: 0.1056 s/iter. Total: 0.3927 s/iter. ETA=0:02:15
[08/21 16:19:24] d2.evaluation.evaluator INFO: Inference done 167/500. Dataloading: 0.0044 s/iter. Inference: 0.2827 s/iter. Eval: 0.1055 s/iter. Total: 0.3926 s/iter. ETA=0:02:10
[08/21 16:19:29] d2.evaluation.evaluator INFO: Inference done 180/500. Dataloading: 0.0043 s/iter. Inference: 0.2823 s/iter. Eval: 0.1054 s/iter. Total: 0.3922 s/iter. ETA=0:02:05
[08/21 16:19:34] d2.evaluation.evaluator INFO: Inference done 193/500. Dataloading: 0.0043 s/iter. Inference: 0.2829 s/iter. Eval: 0.1054 s/iter. Total: 0.3927 s/iter. ETA=0:02:00
[08/21 16:19:39] d2.evaluation.evaluator INFO: Inference done 206/500. Dataloading: 0.0043 s/iter. Inference: 0.2825 s/iter. Eval: 0.1054 s/iter. Total: 0.3923 s/iter. ETA=0:01:55
[08/21 16:19:44] d2.evaluation.evaluator INFO: Inference done 219/500. Dataloading: 0.0043 s/iter. Inference: 0.2825 s/iter. Eval: 0.1054 s/iter. Total: 0.3922 s/iter. ETA=0:01:50
[08/21 16:19:50] d2.evaluation.evaluator INFO: Inference done 232/500. Dataloading: 0.0042 s/iter. Inference: 0.2827 s/iter. Eval: 0.1054 s/iter. Total: 0.3924 s/iter. ETA=0:01:45
[08/21 16:19:55] d2.evaluation.evaluator INFO: Inference done 245/500. Dataloading: 0.0042 s/iter. Inference: 0.2824 s/iter. Eval: 0.1054 s/iter. Total: 0.3920 s/iter. ETA=0:01:39
[08/21 16:20:00] d2.evaluation.evaluator INFO: Inference done 258/500. Dataloading: 0.0042 s/iter. Inference: 0.2823 s/iter. Eval: 0.1054 s/iter. Total: 0.3919 s/iter. ETA=0:01:34
[08/21 16:20:05] d2.evaluation.evaluator INFO: Inference done 271/500. Dataloading: 0.0042 s/iter. Inference: 0.2820 s/iter. Eval: 0.1053 s/iter. Total: 0.3916 s/iter. ETA=0:01:29
[08/21 16:20:10] d2.evaluation.evaluator INFO: Inference done 284/500. Dataloading: 0.0042 s/iter. Inference: 0.2824 s/iter. Eval: 0.1053 s/iter. Total: 0.3919 s/iter. ETA=0:01:24
[08/21 16:20:15] d2.evaluation.evaluator INFO: Inference done 297/500. Dataloading: 0.0042 s/iter. Inference: 0.2825 s/iter. Eval: 0.1052 s/iter. Total: 0.3919 s/iter. ETA=0:01:19
[08/21 16:20:20] d2.evaluation.evaluator INFO: Inference done 311/500. Dataloading: 0.0042 s/iter. Inference: 0.2821 s/iter. Eval: 0.1050 s/iter. Total: 0.3914 s/iter. ETA=0:01:13
[08/21 16:20:25] d2.evaluation.evaluator INFO: Inference done 324/500. Dataloading: 0.0041 s/iter. Inference: 0.2825 s/iter. Eval: 0.1047 s/iter. Total: 0.3915 s/iter. ETA=0:01:08
[08/21 16:20:31] d2.evaluation.evaluator INFO: Inference done 337/500. Dataloading: 0.0041 s/iter. Inference: 0.2830 s/iter. Eval: 0.1048 s/iter. Total: 0.3920 s/iter. ETA=0:01:03
[08/21 16:20:36] d2.evaluation.evaluator INFO: Inference done 350/500. Dataloading: 0.0041 s/iter. Inference: 0.2830 s/iter. Eval: 0.1049 s/iter. Total: 0.3921 s/iter. ETA=0:00:58
[08/21 16:20:41] d2.evaluation.evaluator INFO: Inference done 363/500. Dataloading: 0.0041 s/iter. Inference: 0.2830 s/iter. Eval: 0.1050 s/iter. Total: 0.3922 s/iter. ETA=0:00:53
[08/21 16:20:46] d2.evaluation.evaluator INFO: Inference done 376/500. Dataloading: 0.0041 s/iter. Inference: 0.2834 s/iter. Eval: 0.1051 s/iter. Total: 0.3927 s/iter. ETA=0:00:48
[08/21 16:20:51] d2.evaluation.evaluator INFO: Inference done 389/500. Dataloading: 0.0041 s/iter. Inference: 0.2832 s/iter. Eval: 0.1051 s/iter. Total: 0.3926 s/iter. ETA=0:00:43
[08/21 16:20:56] d2.evaluation.evaluator INFO: Inference done 402/500. Dataloading: 0.0041 s/iter. Inference: 0.2837 s/iter. Eval: 0.1051 s/iter. Total: 0.3931 s/iter. ETA=0:00:38
[08/21 16:21:02] d2.evaluation.evaluator INFO: Inference done 414/500. Dataloading: 0.0042 s/iter. Inference: 0.2847 s/iter. Eval: 0.1051 s/iter. Total: 0.3941 s/iter. ETA=0:00:33
[08/21 16:21:07] d2.evaluation.evaluator INFO: Inference done 427/500. Dataloading: 0.0042 s/iter. Inference: 0.2851 s/iter. Eval: 0.1051 s/iter. Total: 0.3945 s/iter. ETA=0:00:28
[08/21 16:21:12] d2.evaluation.evaluator INFO: Inference done 440/500. Dataloading: 0.0042 s/iter. Inference: 0.2848 s/iter. Eval: 0.1051 s/iter. Total: 0.3942 s/iter. ETA=0:00:23
[08/21 16:21:17] d2.evaluation.evaluator INFO: Inference done 454/500. Dataloading: 0.0042 s/iter. Inference: 0.2845 s/iter. Eval: 0.1051 s/iter. Total: 0.3938 s/iter. ETA=0:00:18
[08/21 16:21:23] d2.evaluation.evaluator INFO: Inference done 468/500. Dataloading: 0.0042 s/iter. Inference: 0.2843 s/iter. Eval: 0.1050 s/iter. Total: 0.3935 s/iter. ETA=0:00:12
[08/21 16:21:28] d2.evaluation.evaluator INFO: Inference done 481/500. Dataloading: 0.0042 s/iter. Inference: 0.2840 s/iter. Eval: 0.1050 s/iter. Total: 0.3933 s/iter. ETA=0:00:07
[08/21 16:21:33] d2.evaluation.evaluator INFO: Inference done 495/500. Dataloading: 0.0042 s/iter. Inference: 0.2837 s/iter. Eval: 0.1050 s/iter. Total: 0.3929 s/iter. ETA=0:00:01
[08/21 16:21:35] d2.evaluation.evaluator INFO: Total inference time: 0:03:14.491463 (0.392912 s / iter per device, on 1 devices)
[08/21 16:21:35] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:20 (0.283529 s / iter per device, on 1 devices)
[08/21 16:21:35] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalro1ppfby ...
[08/21 16:21:51] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 53.769 | 80.478 | 65.692 |      19       |
| Things | 45.425 | 80.163 | 56.498 |       8       |
| Stuff  | 59.838 | 80.708 | 72.378 |      11       |
[08/21 16:21:51] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 95.324 | 96.533 | 98.747 |     Stuff     |
| class_8  | 60.670 | 82.614 | 73.438 |     Stuff     |
| class_11 | 85.691 | 88.431 | 96.901 |     Stuff     |
| class_12 | 34.644 | 80.679 | 42.941 |     Stuff     |
| class_13 | 32.540 | 76.565 | 42.500 |     Stuff     |
| class_17 | 42.576 | 62.870 | 67.722 |     Stuff     |
| class_19 | 44.197 | 68.517 | 64.505 |     Stuff     |
| class_20 | 63.683 | 76.605 | 83.131 |     Stuff     |
| class_21 | 87.677 | 88.773 | 98.765 |     Stuff     |
| class_22 | 24.201 | 74.738 | 32.381 |     Stuff     |
| class_23 | 87.010 | 91.464 | 95.130 |     Stuff     |
| class_24 | 46.968 | 76.213 | 61.627 |    Things     |
| class_25 | 39.156 | 74.396 | 52.632 |    Things     |
| class_26 | 61.384 | 82.761 | 74.170 |    Things     |
| class_27 | 40.015 | 86.375 | 46.328 |    Things     |
| class_28 | 58.443 | 91.676 | 63.750 |    Things     |
| class_31 | 42.583 | 85.166 | 50.000 |    Things     |
| class_32 | 36.944 | 73.291 | 50.407 |    Things     |
| class_33 | 37.906 | 71.424 | 53.072 |    Things     |
[08/21 16:21:51] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/21 16:21:51] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/21 16:21:51] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/21 16:21:51] d2.evaluation.testing INFO: copypaste: 53.7690,80.4785,65.6919,45.4249,80.1627,56.4981,59.8375,80.7082,72.3782,95.3235,96.5327,98.7474,60.6700,82.6144,73.4375,85.6905,88.4312,96.9008,34.6444,80.6788,42.9412,32.5400,76.5648,42.5000,42.5764,62.8699,67.7215,44.1968,68.5174,64.5045,63.6831,76.6055,83.1312,87.6775,88.7734,98.7654,24.2009,74.7380,32.3810,87.0096,91.4637,95.1302,46.9678,76.2125,61.6274,39.1555,74.3955,52.6316,61.3838,82.7614,74.1696,40.0154,86.3747,46.3277,58.4435,91.6760,63.7500,42.5832,85.1664,50.0000,36.9435,73.2912,50.4065,37.9062,71.4239,53.0721
[08/23 13:04:55] detectron2 INFO: Rank of current process: 0. World size: 2
[08/23 13:04:56] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/23 13:04:56] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/23 13:04:56] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/23 13:04:56] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/23 13:04:56] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/config.yaml
[08/23 13:04:56] d2.utils.env INFO: Using a generated random seed 59012501
[08/23 13:05:00] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/23 13:05:00] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/23 13:05:00] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/23 13:05:00] d2.data.build INFO: Using training sampler TrainingSampler
[08/23 13:05:00] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/23 13:05:00] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/23 13:05:00] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/23 13:05:00] d2.data.build INFO: Making batched data loader with batch_size=4
[08/23 13:05:00] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/23 13:05:00] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/23 13:05:00] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/23 13:05:01] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/23 13:05:01] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/23 13:05:01] d2.engine.train_loop INFO: Starting training from iteration 0
[08/23 13:05:19] d2.utils.events INFO:  eta: 0:10:08  iter: 19  total_loss: 33.13  loss_ce: 1.299  loss_mask: 0.2818  loss_dice: 1.535  loss_ce_0: 1.558  loss_mask_0: 0.3118  loss_dice_0: 1.845  loss_ce_1: 1.533  loss_mask_1: 0.3129  loss_dice_1: 1.665  loss_ce_2: 1.462  loss_mask_2: 0.2881  loss_dice_2: 1.626  loss_ce_3: 1.386  loss_mask_3: 0.289  loss_dice_3: 1.597  loss_ce_4: 1.352  loss_mask_4: 0.2887  loss_dice_4: 1.581  loss_ce_5: 1.3  loss_mask_5: 0.2897  loss_dice_5: 1.54  loss_ce_6: 1.362  loss_mask_6: 0.286  loss_dice_6: 1.533  loss_ce_7: 1.343  loss_mask_7: 0.286  loss_dice_7: 1.538  loss_ce_8: 1.303  loss_mask_8: 0.2826  loss_dice_8: 1.523    time: 0.6367  last_time: 0.5647  data_time: 0.1892  last_data_time: 0.0198   lr: 0.0001  max_mem: 16088M
[08/23 13:05:32] d2.utils.events INFO:  eta: 0:09:52  iter: 39  total_loss: 27.01  loss_ce: 0.8764  loss_mask: 0.2282  loss_dice: 1.417  loss_ce_0: 0.9319  loss_mask_0: 0.2645  loss_dice_0: 1.701  loss_ce_1: 1.055  loss_mask_1: 0.2538  loss_dice_1: 1.595  loss_ce_2: 0.9683  loss_mask_2: 0.2402  loss_dice_2: 1.497  loss_ce_3: 0.9354  loss_mask_3: 0.2299  loss_dice_3: 1.471  loss_ce_4: 0.9166  loss_mask_4: 0.2329  loss_dice_4: 1.434  loss_ce_5: 0.8923  loss_mask_5: 0.2384  loss_dice_5: 1.424  loss_ce_6: 0.9131  loss_mask_6: 0.2276  loss_dice_6: 1.379  loss_ce_7: 0.8947  loss_mask_7: 0.23  loss_dice_7: 1.391  loss_ce_8: 0.8883  loss_mask_8: 0.2324  loss_dice_8: 1.41    time: 0.6278  last_time: 0.6139  data_time: 0.0248  last_data_time: 0.0217   lr: 0.0001  max_mem: 16088M
[08/23 13:05:45] d2.utils.events INFO:  eta: 0:09:51  iter: 59  total_loss: 24.73  loss_ce: 0.7211  loss_mask: 0.2039  loss_dice: 1.39  loss_ce_0: 0.7997  loss_mask_0: 0.2335  loss_dice_0: 1.736  loss_ce_1: 0.952  loss_mask_1: 0.2219  loss_dice_1: 1.606  loss_ce_2: 0.8617  loss_mask_2: 0.2154  loss_dice_2: 1.508  loss_ce_3: 0.799  loss_mask_3: 0.2105  loss_dice_3: 1.432  loss_ce_4: 0.7581  loss_mask_4: 0.2084  loss_dice_4: 1.414  loss_ce_5: 0.7548  loss_mask_5: 0.207  loss_dice_5: 1.411  loss_ce_6: 0.7025  loss_mask_6: 0.2077  loss_dice_6: 1.388  loss_ce_7: 0.7188  loss_mask_7: 0.2052  loss_dice_7: 1.395  loss_ce_8: 0.7216  loss_mask_8: 0.2074  loss_dice_8: 1.369    time: 0.6272  last_time: 0.6396  data_time: 0.0272  last_data_time: 0.0234   lr: 0.0001  max_mem: 16146M
[08/23 13:05:57] d2.utils.events INFO:  eta: 0:09:34  iter: 79  total_loss: 22.99  loss_ce: 0.7051  loss_mask: 0.2165  loss_dice: 1.305  loss_ce_0: 0.7679  loss_mask_0: 0.2427  loss_dice_0: 1.596  loss_ce_1: 0.9007  loss_mask_1: 0.235  loss_dice_1: 1.496  loss_ce_2: 0.7904  loss_mask_2: 0.2196  loss_dice_2: 1.375  loss_ce_3: 0.737  loss_mask_3: 0.2151  loss_dice_3: 1.32  loss_ce_4: 0.7206  loss_mask_4: 0.2126  loss_dice_4: 1.314  loss_ce_5: 0.7441  loss_mask_5: 0.2135  loss_dice_5: 1.314  loss_ce_6: 0.6687  loss_mask_6: 0.2168  loss_dice_6: 1.327  loss_ce_7: 0.6802  loss_mask_7: 0.2155  loss_dice_7: 1.296  loss_ce_8: 0.682  loss_mask_8: 0.2141  loss_dice_8: 1.288    time: 0.6247  last_time: 0.5737  data_time: 0.0241  last_data_time: 0.0236   lr: 0.0001  max_mem: 16146M
[08/23 13:06:09] d2.utils.events INFO:  eta: 0:09:14  iter: 99  total_loss: 23.79  loss_ce: 0.7236  loss_mask: 0.2028  loss_dice: 1.314  loss_ce_0: 0.801  loss_mask_0: 0.2297  loss_dice_0: 1.605  loss_ce_1: 0.9091  loss_mask_1: 0.2186  loss_dice_1: 1.454  loss_ce_2: 0.8304  loss_mask_2: 0.2152  loss_dice_2: 1.433  loss_ce_3: 0.7754  loss_mask_3: 0.2037  loss_dice_3: 1.367  loss_ce_4: 0.7099  loss_mask_4: 0.2094  loss_dice_4: 1.364  loss_ce_5: 0.7164  loss_mask_5: 0.2106  loss_dice_5: 1.361  loss_ce_6: 0.7242  loss_mask_6: 0.2018  loss_dice_6: 1.325  loss_ce_7: 0.6859  loss_mask_7: 0.2041  loss_dice_7: 1.324  loss_ce_8: 0.7363  loss_mask_8: 0.2031  loss_dice_8: 1.309    time: 0.6205  last_time: 0.5908  data_time: 0.0226  last_data_time: 0.0204   lr: 0.0001  max_mem: 16326M
[08/23 13:06:21] d2.utils.events INFO:  eta: 0:08:58  iter: 119  total_loss: 24.42  loss_ce: 0.7151  loss_mask: 0.1945  loss_dice: 1.373  loss_ce_0: 0.7901  loss_mask_0: 0.2335  loss_dice_0: 1.638  loss_ce_1: 0.9086  loss_mask_1: 0.2146  loss_dice_1: 1.516  loss_ce_2: 0.8081  loss_mask_2: 0.1999  loss_dice_2: 1.447  loss_ce_3: 0.773  loss_mask_3: 0.2026  loss_dice_3: 1.402  loss_ce_4: 0.7139  loss_mask_4: 0.1999  loss_dice_4: 1.382  loss_ce_5: 0.733  loss_mask_5: 0.1936  loss_dice_5: 1.382  loss_ce_6: 0.7198  loss_mask_6: 0.1965  loss_dice_6: 1.347  loss_ce_7: 0.7278  loss_mask_7: 0.1952  loss_dice_7: 1.371  loss_ce_8: 0.7206  loss_mask_8: 0.1988  loss_dice_8: 1.349    time: 0.6174  last_time: 0.6096  data_time: 0.0260  last_data_time: 0.0334   lr: 0.0001  max_mem: 16326M
[08/23 13:06:34] d2.utils.events INFO:  eta: 0:08:46  iter: 139  total_loss: 23.75  loss_ce: 0.6967  loss_mask: 0.2051  loss_dice: 1.373  loss_ce_0: 0.7965  loss_mask_0: 0.2243  loss_dice_0: 1.613  loss_ce_1: 0.8978  loss_mask_1: 0.2152  loss_dice_1: 1.485  loss_ce_2: 0.8013  loss_mask_2: 0.2076  loss_dice_2: 1.438  loss_ce_3: 0.7651  loss_mask_3: 0.2093  loss_dice_3: 1.416  loss_ce_4: 0.7344  loss_mask_4: 0.2068  loss_dice_4: 1.39  loss_ce_5: 0.742  loss_mask_5: 0.2057  loss_dice_5: 1.375  loss_ce_6: 0.727  loss_mask_6: 0.2057  loss_dice_6: 1.368  loss_ce_7: 0.7191  loss_mask_7: 0.2022  loss_dice_7: 1.358  loss_ce_8: 0.6885  loss_mask_8: 0.2007  loss_dice_8: 1.363    time: 0.6167  last_time: 0.6259  data_time: 0.0269  last_data_time: 0.0273   lr: 0.0001  max_mem: 16326M
[08/23 13:06:46] d2.utils.events INFO:  eta: 0:08:33  iter: 159  total_loss: 22.8  loss_ce: 0.6386  loss_mask: 0.1873  loss_dice: 1.283  loss_ce_0: 0.7526  loss_mask_0: 0.2128  loss_dice_0: 1.517  loss_ce_1: 0.8226  loss_mask_1: 0.2059  loss_dice_1: 1.466  loss_ce_2: 0.7576  loss_mask_2: 0.1927  loss_dice_2: 1.414  loss_ce_3: 0.6977  loss_mask_3: 0.1993  loss_dice_3: 1.321  loss_ce_4: 0.6904  loss_mask_4: 0.1886  loss_dice_4: 1.341  loss_ce_5: 0.6445  loss_mask_5: 0.1846  loss_dice_5: 1.346  loss_ce_6: 0.6588  loss_mask_6: 0.1893  loss_dice_6: 1.327  loss_ce_7: 0.6486  loss_mask_7: 0.1851  loss_dice_7: 1.315  loss_ce_8: 0.6233  loss_mask_8: 0.1881  loss_dice_8: 1.308    time: 0.6155  last_time: 0.5911  data_time: 0.0274  last_data_time: 0.0268   lr: 0.0001  max_mem: 16326M
[08/23 13:06:58] d2.utils.events INFO:  eta: 0:08:22  iter: 179  total_loss: 23.11  loss_ce: 0.709  loss_mask: 0.1836  loss_dice: 1.28  loss_ce_0: 0.7823  loss_mask_0: 0.208  loss_dice_0: 1.532  loss_ce_1: 0.8846  loss_mask_1: 0.1954  loss_dice_1: 1.46  loss_ce_2: 0.7908  loss_mask_2: 0.1909  loss_dice_2: 1.414  loss_ce_3: 0.7598  loss_mask_3: 0.1825  loss_dice_3: 1.329  loss_ce_4: 0.7246  loss_mask_4: 0.1832  loss_dice_4: 1.338  loss_ce_5: 0.6871  loss_mask_5: 0.1786  loss_dice_5: 1.312  loss_ce_6: 0.7139  loss_mask_6: 0.1868  loss_dice_6: 1.292  loss_ce_7: 0.7007  loss_mask_7: 0.1838  loss_dice_7: 1.317  loss_ce_8: 0.7008  loss_mask_8: 0.1859  loss_dice_8: 1.283    time: 0.6157  last_time: 0.6068  data_time: 0.0273  last_data_time: 0.0238   lr: 0.0001  max_mem: 16326M
[08/23 13:07:11] d2.utils.events INFO:  eta: 0:08:09  iter: 199  total_loss: 22.34  loss_ce: 0.6473  loss_mask: 0.1917  loss_dice: 1.268  loss_ce_0: 0.7711  loss_mask_0: 0.2199  loss_dice_0: 1.522  loss_ce_1: 0.8093  loss_mask_1: 0.2013  loss_dice_1: 1.401  loss_ce_2: 0.7313  loss_mask_2: 0.1922  loss_dice_2: 1.354  loss_ce_3: 0.6978  loss_mask_3: 0.1926  loss_dice_3: 1.318  loss_ce_4: 0.6529  loss_mask_4: 0.1935  loss_dice_4: 1.293  loss_ce_5: 0.633  loss_mask_5: 0.1931  loss_dice_5: 1.306  loss_ce_6: 0.6413  loss_mask_6: 0.1903  loss_dice_6: 1.284  loss_ce_7: 0.6197  loss_mask_7: 0.1927  loss_dice_7: 1.306  loss_ce_8: 0.6436  loss_mask_8: 0.1909  loss_dice_8: 1.264    time: 0.6153  last_time: 0.6191  data_time: 0.0258  last_data_time: 0.0272   lr: 0.0001  max_mem: 16326M
[08/23 13:07:23] d2.utils.events INFO:  eta: 0:07:57  iter: 219  total_loss: 22.04  loss_ce: 0.6324  loss_mask: 0.1775  loss_dice: 1.352  loss_ce_0: 0.7229  loss_mask_0: 0.1953  loss_dice_0: 1.554  loss_ce_1: 0.8343  loss_mask_1: 0.1888  loss_dice_1: 1.484  loss_ce_2: 0.6942  loss_mask_2: 0.1779  loss_dice_2: 1.438  loss_ce_3: 0.6963  loss_mask_3: 0.1789  loss_dice_3: 1.359  loss_ce_4: 0.6849  loss_mask_4: 0.1803  loss_dice_4: 1.368  loss_ce_5: 0.6554  loss_mask_5: 0.1797  loss_dice_5: 1.353  loss_ce_6: 0.6279  loss_mask_6: 0.1782  loss_dice_6: 1.314  loss_ce_7: 0.6305  loss_mask_7: 0.1794  loss_dice_7: 1.345  loss_ce_8: 0.6179  loss_mask_8: 0.1781  loss_dice_8: 1.314    time: 0.6155  last_time: 0.6533  data_time: 0.0250  last_data_time: 0.0232   lr: 0.0001  max_mem: 16586M
[08/23 13:07:35] d2.utils.events INFO:  eta: 0:07:45  iter: 239  total_loss: 22.67  loss_ce: 0.6445  loss_mask: 0.1993  loss_dice: 1.348  loss_ce_0: 0.7163  loss_mask_0: 0.2312  loss_dice_0: 1.585  loss_ce_1: 0.827  loss_mask_1: 0.2145  loss_dice_1: 1.493  loss_ce_2: 0.7179  loss_mask_2: 0.207  loss_dice_2: 1.427  loss_ce_3: 0.6955  loss_mask_3: 0.2117  loss_dice_3: 1.394  loss_ce_4: 0.6584  loss_mask_4: 0.2041  loss_dice_4: 1.392  loss_ce_5: 0.6492  loss_mask_5: 0.2018  loss_dice_5: 1.356  loss_ce_6: 0.6313  loss_mask_6: 0.2035  loss_dice_6: 1.345  loss_ce_7: 0.652  loss_mask_7: 0.2013  loss_dice_7: 1.333  loss_ce_8: 0.6488  loss_mask_8: 0.2018  loss_dice_8: 1.354    time: 0.6150  last_time: 0.6219  data_time: 0.0246  last_data_time: 0.0192   lr: 0.0001  max_mem: 16586M
[08/23 13:07:48] d2.utils.events INFO:  eta: 0:07:34  iter: 259  total_loss: 22.93  loss_ce: 0.6742  loss_mask: 0.1904  loss_dice: 1.334  loss_ce_0: 0.7522  loss_mask_0: 0.2142  loss_dice_0: 1.59  loss_ce_1: 0.9053  loss_mask_1: 0.202  loss_dice_1: 1.478  loss_ce_2: 0.7532  loss_mask_2: 0.1942  loss_dice_2: 1.391  loss_ce_3: 0.7113  loss_mask_3: 0.1958  loss_dice_3: 1.344  loss_ce_4: 0.7003  loss_mask_4: 0.1944  loss_dice_4: 1.385  loss_ce_5: 0.733  loss_mask_5: 0.1926  loss_dice_5: 1.337  loss_ce_6: 0.6708  loss_mask_6: 0.1929  loss_dice_6: 1.335  loss_ce_7: 0.6647  loss_mask_7: 0.1923  loss_dice_7: 1.333  loss_ce_8: 0.6967  loss_mask_8: 0.1918  loss_dice_8: 1.356    time: 0.6166  last_time: 0.6406  data_time: 0.0246  last_data_time: 0.0324   lr: 0.0001  max_mem: 16823M
[08/23 13:08:01] d2.utils.events INFO:  eta: 0:07:21  iter: 279  total_loss: 22.81  loss_ce: 0.6613  loss_mask: 0.1674  loss_dice: 1.346  loss_ce_0: 0.7825  loss_mask_0: 0.1941  loss_dice_0: 1.582  loss_ce_1: 0.8308  loss_mask_1: 0.1804  loss_dice_1: 1.471  loss_ce_2: 0.7378  loss_mask_2: 0.1749  loss_dice_2: 1.436  loss_ce_3: 0.6807  loss_mask_3: 0.1712  loss_dice_3: 1.35  loss_ce_4: 0.6459  loss_mask_4: 0.1754  loss_dice_4: 1.37  loss_ce_5: 0.6553  loss_mask_5: 0.1765  loss_dice_5: 1.336  loss_ce_6: 0.6464  loss_mask_6: 0.1752  loss_dice_6: 1.335  loss_ce_7: 0.6421  loss_mask_7: 0.1747  loss_dice_7: 1.33  loss_ce_8: 0.6654  loss_mask_8: 0.1668  loss_dice_8: 1.333    time: 0.6167  last_time: 0.6124  data_time: 0.0234  last_data_time: 0.0221   lr: 0.0001  max_mem: 16823M
[08/23 13:08:13] d2.utils.events INFO:  eta: 0:07:09  iter: 299  total_loss: 22.39  loss_ce: 0.6206  loss_mask: 0.1838  loss_dice: 1.295  loss_ce_0: 0.7466  loss_mask_0: 0.2057  loss_dice_0: 1.541  loss_ce_1: 0.7898  loss_mask_1: 0.1901  loss_dice_1: 1.494  loss_ce_2: 0.7301  loss_mask_2: 0.1869  loss_dice_2: 1.388  loss_ce_3: 0.6858  loss_mask_3: 0.1789  loss_dice_3: 1.369  loss_ce_4: 0.6459  loss_mask_4: 0.1812  loss_dice_4: 1.316  loss_ce_5: 0.6402  loss_mask_5: 0.1815  loss_dice_5: 1.312  loss_ce_6: 0.6239  loss_mask_6: 0.1825  loss_dice_6: 1.291  loss_ce_7: 0.6585  loss_mask_7: 0.1809  loss_dice_7: 1.292  loss_ce_8: 0.6532  loss_mask_8: 0.1788  loss_dice_8: 1.316    time: 0.6166  last_time: 0.6601  data_time: 0.0224  last_data_time: 0.0239   lr: 0.0001  max_mem: 16823M
[08/23 13:08:25] d2.utils.events INFO:  eta: 0:06:57  iter: 319  total_loss: 23.1  loss_ce: 0.6672  loss_mask: 0.1854  loss_dice: 1.339  loss_ce_0: 0.7256  loss_mask_0: 0.2195  loss_dice_0: 1.612  loss_ce_1: 0.8348  loss_mask_1: 0.1991  loss_dice_1: 1.496  loss_ce_2: 0.7692  loss_mask_2: 0.1842  loss_dice_2: 1.427  loss_ce_3: 0.6959  loss_mask_3: 0.1876  loss_dice_3: 1.36  loss_ce_4: 0.6523  loss_mask_4: 0.1815  loss_dice_4: 1.361  loss_ce_5: 0.6934  loss_mask_5: 0.1836  loss_dice_5: 1.336  loss_ce_6: 0.665  loss_mask_6: 0.1827  loss_dice_6: 1.32  loss_ce_7: 0.6601  loss_mask_7: 0.185  loss_dice_7: 1.299  loss_ce_8: 0.6819  loss_mask_8: 0.1869  loss_dice_8: 1.324    time: 0.6163  last_time: 0.5762  data_time: 0.0238  last_data_time: 0.0247   lr: 0.0001  max_mem: 16823M
[08/23 13:08:37] d2.utils.events INFO:  eta: 0:06:43  iter: 339  total_loss: 22  loss_ce: 0.6681  loss_mask: 0.1903  loss_dice: 1.238  loss_ce_0: 0.6728  loss_mask_0: 0.2158  loss_dice_0: 1.47  loss_ce_1: 0.7832  loss_mask_1: 0.2031  loss_dice_1: 1.382  loss_ce_2: 0.7052  loss_mask_2: 0.1941  loss_dice_2: 1.345  loss_ce_3: 0.6815  loss_mask_3: 0.1917  loss_dice_3: 1.299  loss_ce_4: 0.6639  loss_mask_4: 0.1926  loss_dice_4: 1.288  loss_ce_5: 0.649  loss_mask_5: 0.1936  loss_dice_5: 1.264  loss_ce_6: 0.643  loss_mask_6: 0.1942  loss_dice_6: 1.27  loss_ce_7: 0.6381  loss_mask_7: 0.1907  loss_dice_7: 1.23  loss_ce_8: 0.6602  loss_mask_8: 0.1903  loss_dice_8: 1.255    time: 0.6148  last_time: 0.6500  data_time: 0.0212  last_data_time: 0.0302   lr: 0.0001  max_mem: 16823M
[08/23 13:08:49] d2.utils.events INFO:  eta: 0:06:31  iter: 359  total_loss: 21.21  loss_ce: 0.6217  loss_mask: 0.1958  loss_dice: 1.22  loss_ce_0: 0.6531  loss_mask_0: 0.2197  loss_dice_0: 1.473  loss_ce_1: 0.7303  loss_mask_1: 0.211  loss_dice_1: 1.385  loss_ce_2: 0.7046  loss_mask_2: 0.2038  loss_dice_2: 1.305  loss_ce_3: 0.6393  loss_mask_3: 0.2025  loss_dice_3: 1.269  loss_ce_4: 0.6188  loss_mask_4: 0.1979  loss_dice_4: 1.264  loss_ce_5: 0.6153  loss_mask_5: 0.1957  loss_dice_5: 1.246  loss_ce_6: 0.6186  loss_mask_6: 0.1945  loss_dice_6: 1.234  loss_ce_7: 0.6005  loss_mask_7: 0.1945  loss_dice_7: 1.22  loss_ce_8: 0.6055  loss_mask_8: 0.1861  loss_dice_8: 1.205    time: 0.6146  last_time: 0.5686  data_time: 0.0247  last_data_time: 0.0222   lr: 0.0001  max_mem: 16823M
[08/23 13:09:02] d2.utils.events INFO:  eta: 0:06:19  iter: 379  total_loss: 22.01  loss_ce: 0.6257  loss_mask: 0.1917  loss_dice: 1.259  loss_ce_0: 0.6972  loss_mask_0: 0.2238  loss_dice_0: 1.514  loss_ce_1: 0.7838  loss_mask_1: 0.2023  loss_dice_1: 1.419  loss_ce_2: 0.7378  loss_mask_2: 0.1932  loss_dice_2: 1.388  loss_ce_3: 0.6516  loss_mask_3: 0.19  loss_dice_3: 1.301  loss_ce_4: 0.6548  loss_mask_4: 0.1942  loss_dice_4: 1.327  loss_ce_5: 0.6438  loss_mask_5: 0.1914  loss_dice_5: 1.313  loss_ce_6: 0.6264  loss_mask_6: 0.1924  loss_dice_6: 1.264  loss_ce_7: 0.6505  loss_mask_7: 0.1914  loss_dice_7: 1.247  loss_ce_8: 0.6239  loss_mask_8: 0.1925  loss_dice_8: 1.231    time: 0.6146  last_time: 0.5933  data_time: 0.0263  last_data_time: 0.0316   lr: 0.0001  max_mem: 16823M
[08/23 13:09:14] d2.utils.events INFO:  eta: 0:06:07  iter: 399  total_loss: 21.88  loss_ce: 0.5888  loss_mask: 0.1855  loss_dice: 1.286  loss_ce_0: 0.6675  loss_mask_0: 0.2092  loss_dice_0: 1.506  loss_ce_1: 0.7463  loss_mask_1: 0.1991  loss_dice_1: 1.457  loss_ce_2: 0.723  loss_mask_2: 0.1926  loss_dice_2: 1.413  loss_ce_3: 0.6431  loss_mask_3: 0.1893  loss_dice_3: 1.356  loss_ce_4: 0.5839  loss_mask_4: 0.1897  loss_dice_4: 1.332  loss_ce_5: 0.5889  loss_mask_5: 0.1875  loss_dice_5: 1.31  loss_ce_6: 0.6028  loss_mask_6: 0.1874  loss_dice_6: 1.321  loss_ce_7: 0.5782  loss_mask_7: 0.1876  loss_dice_7: 1.304  loss_ce_8: 0.6099  loss_mask_8: 0.189  loss_dice_8: 1.306    time: 0.6149  last_time: 0.5868  data_time: 0.0269  last_data_time: 0.0214   lr: 0.0001  max_mem: 16947M
[08/23 13:09:27] d2.utils.events INFO:  eta: 0:05:54  iter: 419  total_loss: 22.05  loss_ce: 0.6295  loss_mask: 0.1759  loss_dice: 1.3  loss_ce_0: 0.7218  loss_mask_0: 0.1976  loss_dice_0: 1.512  loss_ce_1: 0.7971  loss_mask_1: 0.1825  loss_dice_1: 1.462  loss_ce_2: 0.6888  loss_mask_2: 0.1803  loss_dice_2: 1.367  loss_ce_3: 0.6629  loss_mask_3: 0.1777  loss_dice_3: 1.32  loss_ce_4: 0.6072  loss_mask_4: 0.1772  loss_dice_4: 1.295  loss_ce_5: 0.6188  loss_mask_5: 0.1765  loss_dice_5: 1.305  loss_ce_6: 0.6012  loss_mask_6: 0.1754  loss_dice_6: 1.255  loss_ce_7: 0.6172  loss_mask_7: 0.1755  loss_dice_7: 1.283  loss_ce_8: 0.5885  loss_mask_8: 0.1758  loss_dice_8: 1.301    time: 0.6146  last_time: 0.6697  data_time: 0.0272  last_data_time: 0.0223   lr: 0.0001  max_mem: 16947M
[08/23 13:09:39] d2.utils.events INFO:  eta: 0:05:42  iter: 439  total_loss: 21.58  loss_ce: 0.5888  loss_mask: 0.1821  loss_dice: 1.262  loss_ce_0: 0.6798  loss_mask_0: 0.211  loss_dice_0: 1.47  loss_ce_1: 0.7543  loss_mask_1: 0.1926  loss_dice_1: 1.387  loss_ce_2: 0.7043  loss_mask_2: 0.1828  loss_dice_2: 1.333  loss_ce_3: 0.6423  loss_mask_3: 0.1803  loss_dice_3: 1.324  loss_ce_4: 0.6215  loss_mask_4: 0.1828  loss_dice_4: 1.287  loss_ce_5: 0.6217  loss_mask_5: 0.1826  loss_dice_5: 1.287  loss_ce_6: 0.5834  loss_mask_6: 0.182  loss_dice_6: 1.305  loss_ce_7: 0.611  loss_mask_7: 0.1846  loss_dice_7: 1.272  loss_ce_8: 0.6077  loss_mask_8: 0.1814  loss_dice_8: 1.282    time: 0.6144  last_time: 0.5739  data_time: 0.0265  last_data_time: 0.0270   lr: 0.0001  max_mem: 16947M
[08/23 13:09:51] d2.utils.events INFO:  eta: 0:05:30  iter: 459  total_loss: 21.6  loss_ce: 0.581  loss_mask: 0.1804  loss_dice: 1.259  loss_ce_0: 0.6924  loss_mask_0: 0.2216  loss_dice_0: 1.505  loss_ce_1: 0.7406  loss_mask_1: 0.1914  loss_dice_1: 1.426  loss_ce_2: 0.7046  loss_mask_2: 0.1835  loss_dice_2: 1.349  loss_ce_3: 0.6309  loss_mask_3: 0.1819  loss_dice_3: 1.281  loss_ce_4: 0.6206  loss_mask_4: 0.1851  loss_dice_4: 1.304  loss_ce_5: 0.5834  loss_mask_5: 0.1796  loss_dice_5: 1.27  loss_ce_6: 0.6057  loss_mask_6: 0.1796  loss_dice_6: 1.252  loss_ce_7: 0.5669  loss_mask_7: 0.1798  loss_dice_7: 1.278  loss_ce_8: 0.5942  loss_mask_8: 0.1792  loss_dice_8: 1.256    time: 0.6143  last_time: 0.6041  data_time: 0.0288  last_data_time: 0.0232   lr: 0.0001  max_mem: 16947M
[08/23 13:10:03] d2.utils.events INFO:  eta: 0:05:18  iter: 479  total_loss: 20.77  loss_ce: 0.5623  loss_mask: 0.188  loss_dice: 1.246  loss_ce_0: 0.6499  loss_mask_0: 0.2228  loss_dice_0: 1.472  loss_ce_1: 0.7534  loss_mask_1: 0.2003  loss_dice_1: 1.396  loss_ce_2: 0.6873  loss_mask_2: 0.1927  loss_dice_2: 1.329  loss_ce_3: 0.5957  loss_mask_3: 0.1955  loss_dice_3: 1.265  loss_ce_4: 0.6227  loss_mask_4: 0.1928  loss_dice_4: 1.251  loss_ce_5: 0.5688  loss_mask_5: 0.1893  loss_dice_5: 1.272  loss_ce_6: 0.5658  loss_mask_6: 0.1905  loss_dice_6: 1.243  loss_ce_7: 0.5968  loss_mask_7: 0.1908  loss_dice_7: 1.246  loss_ce_8: 0.5465  loss_mask_8: 0.1903  loss_dice_8: 1.247    time: 0.6140  last_time: 0.6304  data_time: 0.0267  last_data_time: 0.0300   lr: 0.0001  max_mem: 16947M
[08/23 13:10:16] d2.utils.events INFO:  eta: 0:05:05  iter: 499  total_loss: 23.13  loss_ce: 0.6495  loss_mask: 0.1708  loss_dice: 1.318  loss_ce_0: 0.7073  loss_mask_0: 0.1914  loss_dice_0: 1.566  loss_ce_1: 0.7794  loss_mask_1: 0.1826  loss_dice_1: 1.51  loss_ce_2: 0.7408  loss_mask_2: 0.1716  loss_dice_2: 1.414  loss_ce_3: 0.6915  loss_mask_3: 0.1692  loss_dice_3: 1.358  loss_ce_4: 0.6786  loss_mask_4: 0.1693  loss_dice_4: 1.388  loss_ce_5: 0.6834  loss_mask_5: 0.168  loss_dice_5: 1.337  loss_ce_6: 0.674  loss_mask_6: 0.1696  loss_dice_6: 1.321  loss_ce_7: 0.6588  loss_mask_7: 0.1704  loss_dice_7: 1.301  loss_ce_8: 0.6442  loss_mask_8: 0.1694  loss_dice_8: 1.293    time: 0.6142  last_time: 0.6117  data_time: 0.0285  last_data_time: 0.0225   lr: 0.0001  max_mem: 16947M
[08/23 13:10:28] d2.utils.events INFO:  eta: 0:04:53  iter: 519  total_loss: 21.44  loss_ce: 0.5933  loss_mask: 0.1724  loss_dice: 1.332  loss_ce_0: 0.6675  loss_mask_0: 0.1992  loss_dice_0: 1.527  loss_ce_1: 0.7568  loss_mask_1: 0.1826  loss_dice_1: 1.437  loss_ce_2: 0.7133  loss_mask_2: 0.1789  loss_dice_2: 1.371  loss_ce_3: 0.6366  loss_mask_3: 0.1729  loss_dice_3: 1.293  loss_ce_4: 0.6303  loss_mask_4: 0.1738  loss_dice_4: 1.331  loss_ce_5: 0.6163  loss_mask_5: 0.1728  loss_dice_5: 1.333  loss_ce_6: 0.596  loss_mask_6: 0.1757  loss_dice_6: 1.273  loss_ce_7: 0.5858  loss_mask_7: 0.1737  loss_dice_7: 1.332  loss_ce_8: 0.627  loss_mask_8: 0.1723  loss_dice_8: 1.288    time: 0.6143  last_time: 0.5918  data_time: 0.0257  last_data_time: 0.0311   lr: 0.0001  max_mem: 16947M
[08/23 13:10:41] d2.utils.events INFO:  eta: 0:04:41  iter: 539  total_loss: 21.91  loss_ce: 0.592  loss_mask: 0.1812  loss_dice: 1.26  loss_ce_0: 0.6642  loss_mask_0: 0.2218  loss_dice_0: 1.521  loss_ce_1: 0.7385  loss_mask_1: 0.1914  loss_dice_1: 1.407  loss_ce_2: 0.6872  loss_mask_2: 0.1862  loss_dice_2: 1.346  loss_ce_3: 0.6185  loss_mask_3: 0.1828  loss_dice_3: 1.3  loss_ce_4: 0.6236  loss_mask_4: 0.1852  loss_dice_4: 1.292  loss_ce_5: 0.6139  loss_mask_5: 0.1831  loss_dice_5: 1.296  loss_ce_6: 0.6124  loss_mask_6: 0.1854  loss_dice_6: 1.256  loss_ce_7: 0.6055  loss_mask_7: 0.1854  loss_dice_7: 1.265  loss_ce_8: 0.5941  loss_mask_8: 0.179  loss_dice_8: 1.283    time: 0.6144  last_time: 0.7027  data_time: 0.0253  last_data_time: 0.0217   lr: 0.0001  max_mem: 16947M
[08/23 13:10:53] d2.utils.events INFO:  eta: 0:04:29  iter: 559  total_loss: 19.82  loss_ce: 0.5835  loss_mask: 0.185  loss_dice: 1.152  loss_ce_0: 0.6813  loss_mask_0: 0.2175  loss_dice_0: 1.408  loss_ce_1: 0.7804  loss_mask_1: 0.2006  loss_dice_1: 1.322  loss_ce_2: 0.6934  loss_mask_2: 0.188  loss_dice_2: 1.259  loss_ce_3: 0.6516  loss_mask_3: 0.1875  loss_dice_3: 1.221  loss_ce_4: 0.6211  loss_mask_4: 0.1889  loss_dice_4: 1.185  loss_ce_5: 0.6015  loss_mask_5: 0.1852  loss_dice_5: 1.173  loss_ce_6: 0.5655  loss_mask_6: 0.1849  loss_dice_6: 1.15  loss_ce_7: 0.5833  loss_mask_7: 0.1842  loss_dice_7: 1.163  loss_ce_8: 0.5787  loss_mask_8: 0.1833  loss_dice_8: 1.182    time: 0.6147  last_time: 0.6069  data_time: 0.0239  last_data_time: 0.0186   lr: 0.0001  max_mem: 16947M
[08/23 13:11:06] d2.utils.events INFO:  eta: 0:04:17  iter: 579  total_loss: 20.98  loss_ce: 0.5614  loss_mask: 0.188  loss_dice: 1.266  loss_ce_0: 0.6808  loss_mask_0: 0.2112  loss_dice_0: 1.491  loss_ce_1: 0.7092  loss_mask_1: 0.2009  loss_dice_1: 1.403  loss_ce_2: 0.6471  loss_mask_2: 0.1942  loss_dice_2: 1.346  loss_ce_3: 0.6141  loss_mask_3: 0.1877  loss_dice_3: 1.288  loss_ce_4: 0.5571  loss_mask_4: 0.1864  loss_dice_4: 1.31  loss_ce_5: 0.599  loss_mask_5: 0.1876  loss_dice_5: 1.28  loss_ce_6: 0.5662  loss_mask_6: 0.1884  loss_dice_6: 1.306  loss_ce_7: 0.5589  loss_mask_7: 0.1871  loss_dice_7: 1.288  loss_ce_8: 0.5376  loss_mask_8: 0.1879  loss_dice_8: 1.295    time: 0.6150  last_time: 0.6025  data_time: 0.0236  last_data_time: 0.0201   lr: 0.0001  max_mem: 16947M
[08/23 13:11:18] d2.utils.events INFO:  eta: 0:04:04  iter: 599  total_loss: 21.14  loss_ce: 0.5629  loss_mask: 0.172  loss_dice: 1.291  loss_ce_0: 0.6508  loss_mask_0: 0.2066  loss_dice_0: 1.504  loss_ce_1: 0.7385  loss_mask_1: 0.1932  loss_dice_1: 1.419  loss_ce_2: 0.6829  loss_mask_2: 0.1813  loss_dice_2: 1.373  loss_ce_3: 0.6406  loss_mask_3: 0.1836  loss_dice_3: 1.294  loss_ce_4: 0.6028  loss_mask_4: 0.1761  loss_dice_4: 1.273  loss_ce_5: 0.5883  loss_mask_5: 0.1749  loss_dice_5: 1.298  loss_ce_6: 0.5935  loss_mask_6: 0.1746  loss_dice_6: 1.254  loss_ce_7: 0.5789  loss_mask_7: 0.1724  loss_dice_7: 1.26  loss_ce_8: 0.5994  loss_mask_8: 0.1718  loss_dice_8: 1.273    time: 0.6147  last_time: 0.6434  data_time: 0.0254  last_data_time: 0.0220   lr: 0.0001  max_mem: 16947M
[08/23 13:11:30] d2.utils.events INFO:  eta: 0:03:52  iter: 619  total_loss: 21.07  loss_ce: 0.5631  loss_mask: 0.1718  loss_dice: 1.245  loss_ce_0: 0.7001  loss_mask_0: 0.2009  loss_dice_0: 1.464  loss_ce_1: 0.7715  loss_mask_1: 0.1839  loss_dice_1: 1.358  loss_ce_2: 0.6895  loss_mask_2: 0.1802  loss_dice_2: 1.311  loss_ce_3: 0.6352  loss_mask_3: 0.1738  loss_dice_3: 1.294  loss_ce_4: 0.5919  loss_mask_4: 0.1715  loss_dice_4: 1.289  loss_ce_5: 0.5744  loss_mask_5: 0.172  loss_dice_5: 1.287  loss_ce_6: 0.556  loss_mask_6: 0.1728  loss_dice_6: 1.282  loss_ce_7: 0.5426  loss_mask_7: 0.1721  loss_dice_7: 1.256  loss_ce_8: 0.5466  loss_mask_8: 0.1711  loss_dice_8: 1.241    time: 0.6148  last_time: 0.5865  data_time: 0.0236  last_data_time: 0.0175   lr: 0.0001  max_mem: 16947M
[08/23 13:11:42] d2.utils.events INFO:  eta: 0:03:40  iter: 639  total_loss: 21.63  loss_ce: 0.5835  loss_mask: 0.1792  loss_dice: 1.244  loss_ce_0: 0.7052  loss_mask_0: 0.2052  loss_dice_0: 1.475  loss_ce_1: 0.7786  loss_mask_1: 0.1988  loss_dice_1: 1.355  loss_ce_2: 0.7456  loss_mask_2: 0.1917  loss_dice_2: 1.33  loss_ce_3: 0.6761  loss_mask_3: 0.1904  loss_dice_3: 1.305  loss_ce_4: 0.6617  loss_mask_4: 0.1832  loss_dice_4: 1.285  loss_ce_5: 0.6352  loss_mask_5: 0.181  loss_dice_5: 1.28  loss_ce_6: 0.6033  loss_mask_6: 0.1766  loss_dice_6: 1.277  loss_ce_7: 0.6167  loss_mask_7: 0.1784  loss_dice_7: 1.242  loss_ce_8: 0.6155  loss_mask_8: 0.1795  loss_dice_8: 1.257    time: 0.6139  last_time: 0.5780  data_time: 0.0213  last_data_time: 0.0186   lr: 0.0001  max_mem: 16947M
[08/23 13:11:54] d2.utils.events INFO:  eta: 0:03:27  iter: 659  total_loss: 20.64  loss_ce: 0.5266  loss_mask: 0.1833  loss_dice: 1.231  loss_ce_0: 0.6486  loss_mask_0: 0.2079  loss_dice_0: 1.395  loss_ce_1: 0.7045  loss_mask_1: 0.1906  loss_dice_1: 1.412  loss_ce_2: 0.6662  loss_mask_2: 0.1881  loss_dice_2: 1.282  loss_ce_3: 0.5856  loss_mask_3: 0.1847  loss_dice_3: 1.255  loss_ce_4: 0.5776  loss_mask_4: 0.1819  loss_dice_4: 1.238  loss_ce_5: 0.5628  loss_mask_5: 0.1817  loss_dice_5: 1.236  loss_ce_6: 0.5275  loss_mask_6: 0.1833  loss_dice_6: 1.233  loss_ce_7: 0.5469  loss_mask_7: 0.1822  loss_dice_7: 1.224  loss_ce_8: 0.5318  loss_mask_8: 0.1814  loss_dice_8: 1.234    time: 0.6135  last_time: 0.5829  data_time: 0.0216  last_data_time: 0.0190   lr: 0.0001  max_mem: 16947M
[08/23 13:12:06] d2.utils.events INFO:  eta: 0:03:15  iter: 679  total_loss: 22.38  loss_ce: 0.6014  loss_mask: 0.1874  loss_dice: 1.343  loss_ce_0: 0.7196  loss_mask_0: 0.21  loss_dice_0: 1.557  loss_ce_1: 0.7894  loss_mask_1: 0.1926  loss_dice_1: 1.501  loss_ce_2: 0.7416  loss_mask_2: 0.1881  loss_dice_2: 1.409  loss_ce_3: 0.6684  loss_mask_3: 0.1891  loss_dice_3: 1.336  loss_ce_4: 0.6275  loss_mask_4: 0.1897  loss_dice_4: 1.398  loss_ce_5: 0.6391  loss_mask_5: 0.1873  loss_dice_5: 1.35  loss_ce_6: 0.6186  loss_mask_6: 0.1891  loss_dice_6: 1.341  loss_ce_7: 0.6046  loss_mask_7: 0.1844  loss_dice_7: 1.325  loss_ce_8: 0.6186  loss_mask_8: 0.1876  loss_dice_8: 1.331    time: 0.6134  last_time: 0.6353  data_time: 0.0231  last_data_time: 0.0187   lr: 0.0001  max_mem: 16947M
[08/23 13:12:19] d2.utils.events INFO:  eta: 0:03:03  iter: 699  total_loss: 20.7  loss_ce: 0.5738  loss_mask: 0.1895  loss_dice: 1.223  loss_ce_0: 0.7119  loss_mask_0: 0.2122  loss_dice_0: 1.44  loss_ce_1: 0.7472  loss_mask_1: 0.2115  loss_dice_1: 1.351  loss_ce_2: 0.679  loss_mask_2: 0.1977  loss_dice_2: 1.31  loss_ce_3: 0.64  loss_mask_3: 0.1963  loss_dice_3: 1.239  loss_ce_4: 0.6256  loss_mask_4: 0.1926  loss_dice_4: 1.239  loss_ce_5: 0.5919  loss_mask_5: 0.1931  loss_dice_5: 1.245  loss_ce_6: 0.598  loss_mask_6: 0.1877  loss_dice_6: 1.204  loss_ce_7: 0.5504  loss_mask_7: 0.1885  loss_dice_7: 1.202  loss_ce_8: 0.5905  loss_mask_8: 0.1878  loss_dice_8: 1.218    time: 0.6132  last_time: 0.6144  data_time: 0.0204  last_data_time: 0.0305   lr: 0.0001  max_mem: 16947M
[08/23 13:12:31] d2.utils.events INFO:  eta: 0:02:51  iter: 719  total_loss: 20  loss_ce: 0.5786  loss_mask: 0.1653  loss_dice: 1.197  loss_ce_0: 0.6782  loss_mask_0: 0.1882  loss_dice_0: 1.39  loss_ce_1: 0.7436  loss_mask_1: 0.1737  loss_dice_1: 1.287  loss_ce_2: 0.6432  loss_mask_2: 0.1646  loss_dice_2: 1.27  loss_ce_3: 0.617  loss_mask_3: 0.1647  loss_dice_3: 1.249  loss_ce_4: 0.5632  loss_mask_4: 0.1629  loss_dice_4: 1.221  loss_ce_5: 0.5785  loss_mask_5: 0.1648  loss_dice_5: 1.206  loss_ce_6: 0.5514  loss_mask_6: 0.1658  loss_dice_6: 1.202  loss_ce_7: 0.5503  loss_mask_7: 0.1639  loss_dice_7: 1.204  loss_ce_8: 0.5656  loss_mask_8: 0.1636  loss_dice_8: 1.196    time: 0.6133  last_time: 0.6330  data_time: 0.0257  last_data_time: 0.0170   lr: 0.0001  max_mem: 16947M
[08/23 13:12:44] d2.utils.events INFO:  eta: 0:02:38  iter: 739  total_loss: 22.62  loss_ce: 0.6076  loss_mask: 0.1788  loss_dice: 1.326  loss_ce_0: 0.6803  loss_mask_0: 0.2029  loss_dice_0: 1.541  loss_ce_1: 0.7856  loss_mask_1: 0.1919  loss_dice_1: 1.457  loss_ce_2: 0.7338  loss_mask_2: 0.1823  loss_dice_2: 1.381  loss_ce_3: 0.663  loss_mask_3: 0.1793  loss_dice_3: 1.349  loss_ce_4: 0.6216  loss_mask_4: 0.1769  loss_dice_4: 1.367  loss_ce_5: 0.6257  loss_mask_5: 0.1777  loss_dice_5: 1.335  loss_ce_6: 0.6239  loss_mask_6: 0.1773  loss_dice_6: 1.291  loss_ce_7: 0.5902  loss_mask_7: 0.1736  loss_dice_7: 1.291  loss_ce_8: 0.603  loss_mask_8: 0.1779  loss_dice_8: 1.291    time: 0.6136  last_time: 0.6465  data_time: 0.0237  last_data_time: 0.0261   lr: 0.0001  max_mem: 16947M
[08/23 13:12:56] d2.utils.events INFO:  eta: 0:02:26  iter: 759  total_loss: 21.44  loss_ce: 0.5992  loss_mask: 0.1714  loss_dice: 1.277  loss_ce_0: 0.7213  loss_mask_0: 0.1975  loss_dice_0: 1.462  loss_ce_1: 0.7534  loss_mask_1: 0.1918  loss_dice_1: 1.416  loss_ce_2: 0.7183  loss_mask_2: 0.172  loss_dice_2: 1.367  loss_ce_3: 0.6423  loss_mask_3: 0.1748  loss_dice_3: 1.334  loss_ce_4: 0.5964  loss_mask_4: 0.1693  loss_dice_4: 1.293  loss_ce_5: 0.5912  loss_mask_5: 0.168  loss_dice_5: 1.279  loss_ce_6: 0.6065  loss_mask_6: 0.1692  loss_dice_6: 1.305  loss_ce_7: 0.5797  loss_mask_7: 0.1679  loss_dice_7: 1.249  loss_ce_8: 0.5819  loss_mask_8: 0.1694  loss_dice_8: 1.292    time: 0.6134  last_time: 0.6460  data_time: 0.0223  last_data_time: 0.0239   lr: 0.0001  max_mem: 16947M
[08/23 13:13:08] d2.utils.events INFO:  eta: 0:02:14  iter: 779  total_loss: 20.68  loss_ce: 0.55  loss_mask: 0.1612  loss_dice: 1.227  loss_ce_0: 0.6705  loss_mask_0: 0.1829  loss_dice_0: 1.395  loss_ce_1: 0.72  loss_mask_1: 0.1732  loss_dice_1: 1.377  loss_ce_2: 0.709  loss_mask_2: 0.1721  loss_dice_2: 1.323  loss_ce_3: 0.6002  loss_mask_3: 0.1675  loss_dice_3: 1.284  loss_ce_4: 0.5992  loss_mask_4: 0.164  loss_dice_4: 1.274  loss_ce_5: 0.5797  loss_mask_5: 0.1617  loss_dice_5: 1.27  loss_ce_6: 0.5773  loss_mask_6: 0.1611  loss_dice_6: 1.223  loss_ce_7: 0.57  loss_mask_7: 0.1609  loss_dice_7: 1.205  loss_ce_8: 0.5756  loss_mask_8: 0.1621  loss_dice_8: 1.236    time: 0.6129  last_time: 0.5778  data_time: 0.0233  last_data_time: 0.0173   lr: 0.0001  max_mem: 16947M
[08/23 13:13:20] d2.utils.events INFO:  eta: 0:02:02  iter: 799  total_loss: 21.42  loss_ce: 0.5512  loss_mask: 0.1825  loss_dice: 1.302  loss_ce_0: 0.6487  loss_mask_0: 0.2008  loss_dice_0: 1.502  loss_ce_1: 0.7079  loss_mask_1: 0.1878  loss_dice_1: 1.406  loss_ce_2: 0.6388  loss_mask_2: 0.1786  loss_dice_2: 1.37  loss_ce_3: 0.6032  loss_mask_3: 0.1783  loss_dice_3: 1.318  loss_ce_4: 0.6053  loss_mask_4: 0.1756  loss_dice_4: 1.305  loss_ce_5: 0.5729  loss_mask_5: 0.1833  loss_dice_5: 1.298  loss_ce_6: 0.5845  loss_mask_6: 0.1812  loss_dice_6: 1.259  loss_ce_7: 0.54  loss_mask_7: 0.1823  loss_dice_7: 1.258  loss_ce_8: 0.574  loss_mask_8: 0.1826  loss_dice_8: 1.259    time: 0.6128  last_time: 0.6162  data_time: 0.0208  last_data_time: 0.0155   lr: 0.0001  max_mem: 16947M
[08/23 13:13:32] d2.utils.events INFO:  eta: 0:01:49  iter: 819  total_loss: 21.32  loss_ce: 0.548  loss_mask: 0.1622  loss_dice: 1.28  loss_ce_0: 0.6546  loss_mask_0: 0.1774  loss_dice_0: 1.515  loss_ce_1: 0.723  loss_mask_1: 0.1707  loss_dice_1: 1.437  loss_ce_2: 0.6561  loss_mask_2: 0.1634  loss_dice_2: 1.34  loss_ce_3: 0.6065  loss_mask_3: 0.164  loss_dice_3: 1.281  loss_ce_4: 0.5728  loss_mask_4: 0.1637  loss_dice_4: 1.343  loss_ce_5: 0.5676  loss_mask_5: 0.1644  loss_dice_5: 1.296  loss_ce_6: 0.5731  loss_mask_6: 0.1655  loss_dice_6: 1.279  loss_ce_7: 0.5595  loss_mask_7: 0.1643  loss_dice_7: 1.268  loss_ce_8: 0.5606  loss_mask_8: 0.1638  loss_dice_8: 1.3    time: 0.6126  last_time: 0.5813  data_time: 0.0216  last_data_time: 0.0176   lr: 0.0001  max_mem: 16947M
[08/23 13:13:44] d2.utils.events INFO:  eta: 0:01:37  iter: 839  total_loss: 21.55  loss_ce: 0.5477  loss_mask: 0.1657  loss_dice: 1.33  loss_ce_0: 0.6037  loss_mask_0: 0.1807  loss_dice_0: 1.54  loss_ce_1: 0.6681  loss_mask_1: 0.1775  loss_dice_1: 1.45  loss_ce_2: 0.6624  loss_mask_2: 0.1688  loss_dice_2: 1.361  loss_ce_3: 0.6142  loss_mask_3: 0.1668  loss_dice_3: 1.37  loss_ce_4: 0.5739  loss_mask_4: 0.1677  loss_dice_4: 1.352  loss_ce_5: 0.5973  loss_mask_5: 0.1658  loss_dice_5: 1.346  loss_ce_6: 0.5509  loss_mask_6: 0.1671  loss_dice_6: 1.322  loss_ce_7: 0.548  loss_mask_7: 0.1647  loss_dice_7: 1.302  loss_ce_8: 0.5481  loss_mask_8: 0.167  loss_dice_8: 1.336    time: 0.6125  last_time: 0.5934  data_time: 0.0201  last_data_time: 0.0208   lr: 0.0001  max_mem: 16947M
[08/23 13:13:56] d2.utils.events INFO:  eta: 0:01:25  iter: 859  total_loss: 20.29  loss_ce: 0.5396  loss_mask: 0.1815  loss_dice: 1.171  loss_ce_0: 0.6246  loss_mask_0: 0.2092  loss_dice_0: 1.453  loss_ce_1: 0.6805  loss_mask_1: 0.2046  loss_dice_1: 1.331  loss_ce_2: 0.6363  loss_mask_2: 0.1847  loss_dice_2: 1.258  loss_ce_3: 0.5867  loss_mask_3: 0.1821  loss_dice_3: 1.194  loss_ce_4: 0.5604  loss_mask_4: 0.1813  loss_dice_4: 1.222  loss_ce_5: 0.5692  loss_mask_5: 0.1822  loss_dice_5: 1.178  loss_ce_6: 0.538  loss_mask_6: 0.1809  loss_dice_6: 1.181  loss_ce_7: 0.5398  loss_mask_7: 0.1792  loss_dice_7: 1.205  loss_ce_8: 0.5183  loss_mask_8: 0.1808  loss_dice_8: 1.2    time: 0.6121  last_time: 0.5881  data_time: 0.0206  last_data_time: 0.0214   lr: 0.0001  max_mem: 16947M
[08/23 13:14:08] d2.utils.events INFO:  eta: 0:01:13  iter: 879  total_loss: 20.56  loss_ce: 0.5388  loss_mask: 0.1876  loss_dice: 1.235  loss_ce_0: 0.6382  loss_mask_0: 0.2091  loss_dice_0: 1.393  loss_ce_1: 0.7075  loss_mask_1: 0.1857  loss_dice_1: 1.301  loss_ce_2: 0.6633  loss_mask_2: 0.1806  loss_dice_2: 1.269  loss_ce_3: 0.6146  loss_mask_3: 0.1884  loss_dice_3: 1.234  loss_ce_4: 0.5684  loss_mask_4: 0.1867  loss_dice_4: 1.245  loss_ce_5: 0.5597  loss_mask_5: 0.1873  loss_dice_5: 1.199  loss_ce_6: 0.5703  loss_mask_6: 0.188  loss_dice_6: 1.205  loss_ce_7: 0.5495  loss_mask_7: 0.1881  loss_dice_7: 1.215  loss_ce_8: 0.5533  loss_mask_8: 0.1865  loss_dice_8: 1.222    time: 0.6119  last_time: 0.5893  data_time: 0.0200  last_data_time: 0.0173   lr: 0.0001  max_mem: 16947M
[08/23 13:14:20] d2.utils.events INFO:  eta: 0:01:00  iter: 899  total_loss: 20.38  loss_ce: 0.5238  loss_mask: 0.1755  loss_dice: 1.248  loss_ce_0: 0.6793  loss_mask_0: 0.205  loss_dice_0: 1.448  loss_ce_1: 0.705  loss_mask_1: 0.1857  loss_dice_1: 1.356  loss_ce_2: 0.6771  loss_mask_2: 0.1805  loss_dice_2: 1.295  loss_ce_3: 0.5963  loss_mask_3: 0.1797  loss_dice_3: 1.297  loss_ce_4: 0.5885  loss_mask_4: 0.1807  loss_dice_4: 1.268  loss_ce_5: 0.5617  loss_mask_5: 0.1785  loss_dice_5: 1.222  loss_ce_6: 0.5678  loss_mask_6: 0.1775  loss_dice_6: 1.228  loss_ce_7: 0.5431  loss_mask_7: 0.1765  loss_dice_7: 1.249  loss_ce_8: 0.549  loss_mask_8: 0.1765  loss_dice_8: 1.21    time: 0.6116  last_time: 0.6124  data_time: 0.0203  last_data_time: 0.0201   lr: 0.0001  max_mem: 16947M
[08/23 13:14:32] d2.utils.events INFO:  eta: 0:00:48  iter: 919  total_loss: 20.15  loss_ce: 0.5078  loss_mask: 0.1838  loss_dice: 1.253  loss_ce_0: 0.6159  loss_mask_0: 0.2079  loss_dice_0: 1.441  loss_ce_1: 0.6904  loss_mask_1: 0.1941  loss_dice_1: 1.361  loss_ce_2: 0.6474  loss_mask_2: 0.1868  loss_dice_2: 1.29  loss_ce_3: 0.5854  loss_mask_3: 0.1871  loss_dice_3: 1.264  loss_ce_4: 0.5746  loss_mask_4: 0.1864  loss_dice_4: 1.232  loss_ce_5: 0.5423  loss_mask_5: 0.1854  loss_dice_5: 1.24  loss_ce_6: 0.5303  loss_mask_6: 0.186  loss_dice_6: 1.194  loss_ce_7: 0.5519  loss_mask_7: 0.1848  loss_dice_7: 1.189  loss_ce_8: 0.535  loss_mask_8: 0.1845  loss_dice_8: 1.217    time: 0.6112  last_time: 0.5876  data_time: 0.0220  last_data_time: 0.0242   lr: 0.0001  max_mem: 16947M
[08/23 13:14:45] d2.utils.events INFO:  eta: 0:00:36  iter: 939  total_loss: 20.62  loss_ce: 0.547  loss_mask: 0.1792  loss_dice: 1.297  loss_ce_0: 0.6422  loss_mask_0: 0.2051  loss_dice_0: 1.513  loss_ce_1: 0.7022  loss_mask_1: 0.1937  loss_dice_1: 1.403  loss_ce_2: 0.663  loss_mask_2: 0.1857  loss_dice_2: 1.308  loss_ce_3: 0.5618  loss_mask_3: 0.1826  loss_dice_3: 1.302  loss_ce_4: 0.5853  loss_mask_4: 0.1832  loss_dice_4: 1.284  loss_ce_5: 0.5709  loss_mask_5: 0.1819  loss_dice_5: 1.291  loss_ce_6: 0.5416  loss_mask_6: 0.1788  loss_dice_6: 1.276  loss_ce_7: 0.5642  loss_mask_7: 0.1802  loss_dice_7: 1.246  loss_ce_8: 0.536  loss_mask_8: 0.1779  loss_dice_8: 1.28    time: 0.6113  last_time: 0.5879  data_time: 0.0261  last_data_time: 0.0270   lr: 0.0001  max_mem: 16947M
[08/23 13:14:57] d2.utils.events INFO:  eta: 0:00:24  iter: 959  total_loss: 21.67  loss_ce: 0.5732  loss_mask: 0.1806  loss_dice: 1.26  loss_ce_0: 0.6645  loss_mask_0: 0.2096  loss_dice_0: 1.431  loss_ce_1: 0.7545  loss_mask_1: 0.1955  loss_dice_1: 1.4  loss_ce_2: 0.6945  loss_mask_2: 0.1895  loss_dice_2: 1.324  loss_ce_3: 0.6138  loss_mask_3: 0.1865  loss_dice_3: 1.251  loss_ce_4: 0.6137  loss_mask_4: 0.1842  loss_dice_4: 1.259  loss_ce_5: 0.6037  loss_mask_5: 0.1825  loss_dice_5: 1.261  loss_ce_6: 0.5823  loss_mask_6: 0.1816  loss_dice_6: 1.253  loss_ce_7: 0.5613  loss_mask_7: 0.1819  loss_dice_7: 1.254  loss_ce_8: 0.5988  loss_mask_8: 0.1803  loss_dice_8: 1.21    time: 0.6113  last_time: 0.6258  data_time: 0.0226  last_data_time: 0.0220   lr: 0.0001  max_mem: 16947M
[08/23 13:15:10] d2.utils.events INFO:  eta: 0:00:12  iter: 979  total_loss: 20.6  loss_ce: 0.5751  loss_mask: 0.146  loss_dice: 1.258  loss_ce_0: 0.6023  loss_mask_0: 0.1781  loss_dice_0: 1.463  loss_ce_1: 0.6823  loss_mask_1: 0.166  loss_dice_1: 1.402  loss_ce_2: 0.6776  loss_mask_2: 0.151  loss_dice_2: 1.353  loss_ce_3: 0.5934  loss_mask_3: 0.1513  loss_dice_3: 1.27  loss_ce_4: 0.5674  loss_mask_4: 0.148  loss_dice_4: 1.277  loss_ce_5: 0.5811  loss_mask_5: 0.1481  loss_dice_5: 1.279  loss_ce_6: 0.5828  loss_mask_6: 0.1475  loss_dice_6: 1.235  loss_ce_7: 0.5531  loss_mask_7: 0.146  loss_dice_7: 1.231  loss_ce_8: 0.5563  loss_mask_8: 0.1484  loss_dice_8: 1.243    time: 0.6117  last_time: 0.6288  data_time: 0.0262  last_data_time: 0.0206   lr: 0.0001  max_mem: 16947M
[08/23 13:15:22] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/model_final.pth
[08/23 13:15:26] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 19.73  loss_ce: 0.5483  loss_mask: 0.1704  loss_dice: 1.162  loss_ce_0: 0.6678  loss_mask_0: 0.1956  loss_dice_0: 1.408  loss_ce_1: 0.7525  loss_mask_1: 0.1812  loss_dice_1: 1.33  loss_ce_2: 0.6683  loss_mask_2: 0.1844  loss_dice_2: 1.285  loss_ce_3: 0.5974  loss_mask_3: 0.1754  loss_dice_3: 1.156  loss_ce_4: 0.5988  loss_mask_4: 0.1732  loss_dice_4: 1.187  loss_ce_5: 0.5724  loss_mask_5: 0.1724  loss_dice_5: 1.204  loss_ce_6: 0.5805  loss_mask_6: 0.1732  loss_dice_6: 1.154  loss_ce_7: 0.5701  loss_mask_7: 0.1741  loss_dice_7: 1.157  loss_ce_8: 0.5627  loss_mask_8: 0.1734  loss_dice_8: 1.173    time: 0.6118  last_time: 0.6339  data_time: 0.0255  last_data_time: 0.0252   lr: 0.0001  max_mem: 16947M
[08/23 13:15:26] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:10:10 (0.6119 s / it)
[08/23 13:15:26] d2.engine.hooks INFO: Total training time: 0:10:18 (0:00:07 on hooks)
[08/23 13:15:26] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/23 13:15:26] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/23 13:15:26] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/23 13:15:26] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/23 13:15:26] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/23 13:15:26] d2.evaluation.evaluator INFO: Start inference on 250 batches
[08/23 13:15:33] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0027 s/iter. Inference: 0.2720 s/iter. Eval: 0.0574 s/iter. Total: 0.3321 s/iter. ETA=0:01:19
[08/23 13:15:38] d2.evaluation.evaluator INFO: Inference done 26/250. Dataloading: 0.0032 s/iter. Inference: 0.2675 s/iter. Eval: 0.0631 s/iter. Total: 0.3339 s/iter. ETA=0:01:14
[08/23 13:15:43] d2.evaluation.evaluator INFO: Inference done 40/250. Dataloading: 0.0036 s/iter. Inference: 0.2698 s/iter. Eval: 0.0721 s/iter. Total: 0.3456 s/iter. ETA=0:01:12
[08/23 13:15:49] d2.evaluation.evaluator INFO: Inference done 54/250. Dataloading: 0.0037 s/iter. Inference: 0.2728 s/iter. Eval: 0.0734 s/iter. Total: 0.3499 s/iter. ETA=0:01:08
[08/23 13:15:54] d2.evaluation.evaluator INFO: Inference done 70/250. Dataloading: 0.0037 s/iter. Inference: 0.2704 s/iter. Eval: 0.0718 s/iter. Total: 0.3460 s/iter. ETA=0:01:02
[08/23 13:15:59] d2.evaluation.evaluator INFO: Inference done 85/250. Dataloading: 0.0037 s/iter. Inference: 0.2713 s/iter. Eval: 0.0713 s/iter. Total: 0.3463 s/iter. ETA=0:00:57
[08/23 13:16:04] d2.evaluation.evaluator INFO: Inference done 100/250. Dataloading: 0.0040 s/iter. Inference: 0.2718 s/iter. Eval: 0.0705 s/iter. Total: 0.3464 s/iter. ETA=0:00:51
[08/23 13:16:09] d2.evaluation.evaluator INFO: Inference done 114/250. Dataloading: 0.0040 s/iter. Inference: 0.2738 s/iter. Eval: 0.0706 s/iter. Total: 0.3485 s/iter. ETA=0:00:47
[08/23 13:16:14] d2.evaluation.evaluator INFO: Inference done 128/250. Dataloading: 0.0040 s/iter. Inference: 0.2747 s/iter. Eval: 0.0719 s/iter. Total: 0.3506 s/iter. ETA=0:00:42
[08/23 13:16:20] d2.evaluation.evaluator INFO: Inference done 142/250. Dataloading: 0.0040 s/iter. Inference: 0.2750 s/iter. Eval: 0.0727 s/iter. Total: 0.3518 s/iter. ETA=0:00:37
[08/23 13:16:25] d2.evaluation.evaluator INFO: Inference done 157/250. Dataloading: 0.0039 s/iter. Inference: 0.2751 s/iter. Eval: 0.0721 s/iter. Total: 0.3512 s/iter. ETA=0:00:32
[08/23 13:16:30] d2.evaluation.evaluator INFO: Inference done 172/250. Dataloading: 0.0039 s/iter. Inference: 0.2771 s/iter. Eval: 0.0708 s/iter. Total: 0.3519 s/iter. ETA=0:00:27
[08/23 13:16:35] d2.evaluation.evaluator INFO: Inference done 187/250. Dataloading: 0.0039 s/iter. Inference: 0.2774 s/iter. Eval: 0.0711 s/iter. Total: 0.3524 s/iter. ETA=0:00:22
[08/23 13:16:41] d2.evaluation.evaluator INFO: Inference done 202/250. Dataloading: 0.0038 s/iter. Inference: 0.2773 s/iter. Eval: 0.0706 s/iter. Total: 0.3518 s/iter. ETA=0:00:16
[08/23 13:16:46] d2.evaluation.evaluator INFO: Inference done 216/250. Dataloading: 0.0038 s/iter. Inference: 0.2791 s/iter. Eval: 0.0703 s/iter. Total: 0.3532 s/iter. ETA=0:00:12
[08/23 13:16:51] d2.evaluation.evaluator INFO: Inference done 231/250. Dataloading: 0.0038 s/iter. Inference: 0.2795 s/iter. Eval: 0.0695 s/iter. Total: 0.3528 s/iter. ETA=0:00:06
[08/23 13:16:56] d2.evaluation.evaluator INFO: Inference done 247/250. Dataloading: 0.0038 s/iter. Inference: 0.2784 s/iter. Eval: 0.0688 s/iter. Total: 0.3510 s/iter. ETA=0:00:01
[08/23 13:16:58] d2.evaluation.evaluator INFO: Total inference time: 0:01:26.377249 (0.352560 s / iter per device, on 2 devices)
[08/23 13:16:58] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:08 (0.277878 s / iter per device, on 2 devices)
[08/23 13:16:58] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval2aixij24 ...
[08/23 13:17:21] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 53.547 | 80.543 | 65.322 |      19       |
| Things | 44.319 | 79.914 | 55.329 |       8       |
| Stuff  | 60.258 | 81.001 | 72.590 |      11       |
[08/23 13:17:21] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 97.049 | 97.656 | 99.378 |     Stuff     |
| class_8  | 62.354 | 83.686 | 74.510 |     Stuff     |
| class_11 | 83.936 | 87.929 | 95.459 |     Stuff     |
| class_12 | 34.977 | 78.956 | 44.300 |     Stuff     |
| class_13 | 29.554 | 77.363 | 38.202 |     Stuff     |
| class_17 | 42.294 | 63.305 | 66.810 |     Stuff     |
| class_19 | 43.051 | 69.151 | 62.257 |     Stuff     |
| class_20 | 64.615 | 76.046 | 84.967 |     Stuff     |
| class_21 | 88.074 | 89.459 | 98.452 |     Stuff     |
| class_22 | 29.784 | 75.371 | 39.516 |     Stuff     |
| class_23 | 87.153 | 92.088 | 94.641 |     Stuff     |
| class_24 | 43.296 | 75.884 | 57.055 |    Things     |
| class_25 | 38.075 | 73.884 | 51.534 |    Things     |
| class_26 | 60.405 | 83.262 | 72.549 |    Things     |
| class_27 | 40.247 | 86.244 | 46.667 |    Things     |
| class_28 | 55.574 | 90.309 | 61.538 |    Things     |
| class_31 | 39.353 | 84.328 | 46.667 |    Things     |
| class_32 | 41.447 | 74.308 | 55.777 |    Things     |
| class_33 | 36.152 | 71.097 | 50.849 |    Things     |
[08/23 13:17:21] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/23 13:17:21] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/23 13:17:21] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/23 13:17:21] d2.evaluation.testing INFO: copypaste: 53.5469,80.5435,65.3225,44.3187,79.9144,55.3294,60.2583,81.0010,72.5901,97.0486,97.6564,99.3776,62.3544,83.6862,74.5098,83.9360,87.9286,95.4593,34.9773,78.9560,44.2997,29.5543,77.3627,38.2022,42.2942,63.3053,66.8099,43.0511,69.1509,62.2568,64.6147,76.0465,84.9673,88.0742,89.4590,98.4520,29.7835,75.3706,39.5161,87.1532,92.0884,94.6408,43.2956,75.8840,57.0550,38.0751,73.8838,51.5337,60.4053,83.2616,72.5488,40.2474,86.2444,46.6667,55.5745,90.3085,61.5385,39.3532,84.3283,46.6667,41.4465,74.3077,55.7769,36.1521,71.0970,50.8491
[08/23 13:37:19] detectron2 INFO: Rank of current process: 0. World size: 2
[08/23 13:37:19] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/23 13:37:19] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/23 13:37:19] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/23 13:37:19] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/23 13:37:20] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/config.yaml
[08/23 13:37:20] d2.utils.env INFO: Using a generated random seed 22918453
[08/23 13:37:23] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/23 13:37:23] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/23 13:37:23] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/23 13:37:24] d2.data.build INFO: Using training sampler TrainingSampler
[08/23 13:37:24] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/23 13:37:24] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/23 13:37:24] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/23 13:37:24] d2.data.build INFO: Making batched data loader with batch_size=4
[08/23 13:37:24] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/23 13:37:24] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/23 13:37:24] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/23 13:37:24] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/23 13:37:24] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/23 13:37:24] d2.engine.train_loop INFO: Starting training from iteration 0
[08/23 13:37:42] d2.utils.events INFO:  eta: 0:09:51  iter: 19  total_loss: 30.55  loss_ce: 1.256  loss_mask: 0.2965  loss_dice: 1.487  loss_ce_0: 1.544  loss_mask_0: 0.3281  loss_dice_0: 1.813  loss_ce_1: 1.375  loss_mask_1: 0.3208  loss_dice_1: 1.644  loss_ce_2: 1.325  loss_mask_2: 0.3063  loss_dice_2: 1.6  loss_ce_3: 1.385  loss_mask_3: 0.3007  loss_dice_3: 1.52  loss_ce_4: 1.207  loss_mask_4: 0.3082  loss_dice_4: 1.532  loss_ce_5: 1.229  loss_mask_5: 0.3067  loss_dice_5: 1.519  loss_ce_6: 1.244  loss_mask_6: 0.3047  loss_dice_6: 1.5  loss_ce_7: 1.271  loss_mask_7: 0.3005  loss_dice_7: 1.502  loss_ce_8: 1.231  loss_mask_8: 0.2959  loss_dice_8: 1.507    time: 0.6139  last_time: 0.6129  data_time: 0.1803  last_data_time: 0.0233   lr: 0.0001  max_mem: 16178M
[08/23 13:37:54] d2.utils.events INFO:  eta: 0:09:49  iter: 39  total_loss: 26.65  loss_ce: 0.8925  loss_mask: 0.237  loss_dice: 1.403  loss_ce_0: 0.9276  loss_mask_0: 0.2723  loss_dice_0: 1.763  loss_ce_1: 1.025  loss_mask_1: 0.2554  loss_dice_1: 1.583  loss_ce_2: 0.9497  loss_mask_2: 0.2442  loss_dice_2: 1.543  loss_ce_3: 0.9533  loss_mask_3: 0.2411  loss_dice_3: 1.444  loss_ce_4: 0.8976  loss_mask_4: 0.2406  loss_dice_4: 1.473  loss_ce_5: 0.8783  loss_mask_5: 0.2365  loss_dice_5: 1.456  loss_ce_6: 0.8887  loss_mask_6: 0.2344  loss_dice_6: 1.445  loss_ce_7: 0.8943  loss_mask_7: 0.2347  loss_dice_7: 1.435  loss_ce_8: 0.9069  loss_mask_8: 0.2351  loss_dice_8: 1.424    time: 0.6208  last_time: 0.5671  data_time: 0.0259  last_data_time: 0.0287   lr: 0.0001  max_mem: 16351M
[08/23 13:38:07] d2.utils.events INFO:  eta: 0:09:47  iter: 59  total_loss: 24.8  loss_ce: 0.7874  loss_mask: 0.1964  loss_dice: 1.331  loss_ce_0: 0.8088  loss_mask_0: 0.2327  loss_dice_0: 1.722  loss_ce_1: 0.9409  loss_mask_1: 0.2174  loss_dice_1: 1.619  loss_ce_2: 0.8991  loss_mask_2: 0.2082  loss_dice_2: 1.481  loss_ce_3: 0.8254  loss_mask_3: 0.2019  loss_dice_3: 1.428  loss_ce_4: 0.7839  loss_mask_4: 0.2014  loss_dice_4: 1.438  loss_ce_5: 0.7874  loss_mask_5: 0.1976  loss_dice_5: 1.413  loss_ce_6: 0.7864  loss_mask_6: 0.1987  loss_dice_6: 1.394  loss_ce_7: 0.7878  loss_mask_7: 0.1973  loss_dice_7: 1.363  loss_ce_8: 0.7784  loss_mask_8: 0.199  loss_dice_8: 1.375    time: 0.6280  last_time: 0.7051  data_time: 0.0283  last_data_time: 0.0495   lr: 0.0001  max_mem: 16497M
[08/23 13:38:20] d2.utils.events INFO:  eta: 0:09:36  iter: 79  total_loss: 24.52  loss_ce: 0.7088  loss_mask: 0.2138  loss_dice: 1.34  loss_ce_0: 0.803  loss_mask_0: 0.2337  loss_dice_0: 1.65  loss_ce_1: 0.903  loss_mask_1: 0.2262  loss_dice_1: 1.5  loss_ce_2: 0.8173  loss_mask_2: 0.2207  loss_dice_2: 1.426  loss_ce_3: 0.7914  loss_mask_3: 0.2157  loss_dice_3: 1.402  loss_ce_4: 0.7353  loss_mask_4: 0.2158  loss_dice_4: 1.386  loss_ce_5: 0.7296  loss_mask_5: 0.2148  loss_dice_5: 1.367  loss_ce_6: 0.7448  loss_mask_6: 0.2126  loss_dice_6: 1.353  loss_ce_7: 0.7196  loss_mask_7: 0.2157  loss_dice_7: 1.364  loss_ce_8: 0.7274  loss_mask_8: 0.2171  loss_dice_8: 1.371    time: 0.6270  last_time: 0.5805  data_time: 0.0282  last_data_time: 0.0276   lr: 0.0001  max_mem: 16497M
[08/23 13:38:32] d2.utils.events INFO:  eta: 0:09:22  iter: 99  total_loss: 23.75  loss_ce: 0.6866  loss_mask: 0.2032  loss_dice: 1.399  loss_ce_0: 0.798  loss_mask_0: 0.2337  loss_dice_0: 1.672  loss_ce_1: 0.8478  loss_mask_1: 0.2214  loss_dice_1: 1.518  loss_ce_2: 0.7947  loss_mask_2: 0.2073  loss_dice_2: 1.471  loss_ce_3: 0.7552  loss_mask_3: 0.2082  loss_dice_3: 1.389  loss_ce_4: 0.6928  loss_mask_4: 0.2038  loss_dice_4: 1.415  loss_ce_5: 0.6944  loss_mask_5: 0.2045  loss_dice_5: 1.404  loss_ce_6: 0.7014  loss_mask_6: 0.2036  loss_dice_6: 1.365  loss_ce_7: 0.6729  loss_mask_7: 0.204  loss_dice_7: 1.384  loss_ce_8: 0.6862  loss_mask_8: 0.2016  loss_dice_8: 1.372    time: 0.6259  last_time: 0.6144  data_time: 0.0292  last_data_time: 0.0249   lr: 0.0001  max_mem: 16497M
[08/23 13:38:45] d2.utils.events INFO:  eta: 0:09:06  iter: 119  total_loss: 23.31  loss_ce: 0.6959  loss_mask: 0.2098  loss_dice: 1.269  loss_ce_0: 0.7716  loss_mask_0: 0.2409  loss_dice_0: 1.528  loss_ce_1: 0.9004  loss_mask_1: 0.2276  loss_dice_1: 1.427  loss_ce_2: 0.7912  loss_mask_2: 0.2141  loss_dice_2: 1.36  loss_ce_3: 0.7407  loss_mask_3: 0.2149  loss_dice_3: 1.298  loss_ce_4: 0.7138  loss_mask_4: 0.2129  loss_dice_4: 1.31  loss_ce_5: 0.72  loss_mask_5: 0.2146  loss_dice_5: 1.29  loss_ce_6: 0.7093  loss_mask_6: 0.2138  loss_dice_6: 1.287  loss_ce_7: 0.672  loss_mask_7: 0.2131  loss_dice_7: 1.265  loss_ce_8: 0.7125  loss_mask_8: 0.2106  loss_dice_8: 1.267    time: 0.6236  last_time: 0.6149  data_time: 0.0277  last_data_time: 0.0277   lr: 0.0001  max_mem: 16497M
[08/23 13:38:57] d2.utils.events INFO:  eta: 0:08:56  iter: 139  total_loss: 23.66  loss_ce: 0.7203  loss_mask: 0.1794  loss_dice: 1.392  loss_ce_0: 0.8014  loss_mask_0: 0.2161  loss_dice_0: 1.674  loss_ce_1: 0.8965  loss_mask_1: 0.1916  loss_dice_1: 1.578  loss_ce_2: 0.8099  loss_mask_2: 0.185  loss_dice_2: 1.461  loss_ce_3: 0.7752  loss_mask_3: 0.1825  loss_dice_3: 1.404  loss_ce_4: 0.755  loss_mask_4: 0.1815  loss_dice_4: 1.376  loss_ce_5: 0.7438  loss_mask_5: 0.182  loss_dice_5: 1.367  loss_ce_6: 0.6931  loss_mask_6: 0.1836  loss_dice_6: 1.382  loss_ce_7: 0.7173  loss_mask_7: 0.183  loss_dice_7: 1.357  loss_ce_8: 0.7278  loss_mask_8: 0.1818  loss_dice_8: 1.374    time: 0.6253  last_time: 0.6153  data_time: 0.0281  last_data_time: 0.0296   lr: 0.0001  max_mem: 16597M
[08/23 13:39:10] d2.utils.events INFO:  eta: 0:08:46  iter: 159  total_loss: 23.68  loss_ce: 0.7126  loss_mask: 0.1782  loss_dice: 1.3  loss_ce_0: 0.7476  loss_mask_0: 0.2091  loss_dice_0: 1.633  loss_ce_1: 0.8838  loss_mask_1: 0.1868  loss_dice_1: 1.506  loss_ce_2: 0.7952  loss_mask_2: 0.1814  loss_dice_2: 1.437  loss_ce_3: 0.7549  loss_mask_3: 0.1817  loss_dice_3: 1.363  loss_ce_4: 0.75  loss_mask_4: 0.1782  loss_dice_4: 1.343  loss_ce_5: 0.7136  loss_mask_5: 0.1779  loss_dice_5: 1.342  loss_ce_6: 0.7179  loss_mask_6: 0.1775  loss_dice_6: 1.336  loss_ce_7: 0.6977  loss_mask_7: 0.1793  loss_dice_7: 1.341  loss_ce_8: 0.717  loss_mask_8: 0.1807  loss_dice_8: 1.335    time: 0.6275  last_time: 0.6365  data_time: 0.0328  last_data_time: 0.0263   lr: 0.0001  max_mem: 17093M
[08/23 13:39:23] d2.utils.events INFO:  eta: 0:08:33  iter: 179  total_loss: 23.5  loss_ce: 0.6912  loss_mask: 0.1829  loss_dice: 1.358  loss_ce_0: 0.7614  loss_mask_0: 0.2117  loss_dice_0: 1.612  loss_ce_1: 0.852  loss_mask_1: 0.194  loss_dice_1: 1.538  loss_ce_2: 0.7725  loss_mask_2: 0.1846  loss_dice_2: 1.429  loss_ce_3: 0.734  loss_mask_3: 0.1842  loss_dice_3: 1.418  loss_ce_4: 0.7163  loss_mask_4: 0.1864  loss_dice_4: 1.424  loss_ce_5: 0.7007  loss_mask_5: 0.1843  loss_dice_5: 1.382  loss_ce_6: 0.7013  loss_mask_6: 0.1809  loss_dice_6: 1.352  loss_ce_7: 0.6731  loss_mask_7: 0.1818  loss_dice_7: 1.347  loss_ce_8: 0.6832  loss_mask_8: 0.1829  loss_dice_8: 1.347    time: 0.6269  last_time: 0.6039  data_time: 0.0272  last_data_time: 0.0210   lr: 0.0001  max_mem: 17093M
[08/23 13:39:35] d2.utils.events INFO:  eta: 0:08:19  iter: 199  total_loss: 22.31  loss_ce: 0.5995  loss_mask: 0.1866  loss_dice: 1.243  loss_ce_0: 0.7079  loss_mask_0: 0.2321  loss_dice_0: 1.541  loss_ce_1: 0.8034  loss_mask_1: 0.2073  loss_dice_1: 1.463  loss_ce_2: 0.76  loss_mask_2: 0.1939  loss_dice_2: 1.367  loss_ce_3: 0.6849  loss_mask_3: 0.1955  loss_dice_3: 1.323  loss_ce_4: 0.6498  loss_mask_4: 0.1913  loss_dice_4: 1.304  loss_ce_5: 0.6664  loss_mask_5: 0.187  loss_dice_5: 1.288  loss_ce_6: 0.6428  loss_mask_6: 0.1936  loss_dice_6: 1.31  loss_ce_7: 0.6218  loss_mask_7: 0.1878  loss_dice_7: 1.309  loss_ce_8: 0.5928  loss_mask_8: 0.1852  loss_dice_8: 1.285    time: 0.6249  last_time: 0.6098  data_time: 0.0262  last_data_time: 0.0256   lr: 0.0001  max_mem: 17093M
[08/23 13:39:47] d2.utils.events INFO:  eta: 0:08:05  iter: 219  total_loss: 21.61  loss_ce: 0.6212  loss_mask: 0.2027  loss_dice: 1.224  loss_ce_0: 0.7088  loss_mask_0: 0.2316  loss_dice_0: 1.459  loss_ce_1: 0.7989  loss_mask_1: 0.2171  loss_dice_1: 1.366  loss_ce_2: 0.7442  loss_mask_2: 0.2062  loss_dice_2: 1.297  loss_ce_3: 0.6848  loss_mask_3: 0.2038  loss_dice_3: 1.251  loss_ce_4: 0.6685  loss_mask_4: 0.1984  loss_dice_4: 1.278  loss_ce_5: 0.6429  loss_mask_5: 0.2045  loss_dice_5: 1.234  loss_ce_6: 0.6379  loss_mask_6: 0.1981  loss_dice_6: 1.216  loss_ce_7: 0.6286  loss_mask_7: 0.2053  loss_dice_7: 1.21  loss_ce_8: 0.6212  loss_mask_8: 0.2015  loss_dice_8: 1.207    time: 0.6234  last_time: 0.5620  data_time: 0.0274  last_data_time: 0.0280   lr: 0.0001  max_mem: 17093M
[08/23 13:40:00] d2.utils.events INFO:  eta: 0:07:50  iter: 239  total_loss: 23.64  loss_ce: 0.6993  loss_mask: 0.2118  loss_dice: 1.339  loss_ce_0: 0.75  loss_mask_0: 0.2441  loss_dice_0: 1.531  loss_ce_1: 0.8226  loss_mask_1: 0.2322  loss_dice_1: 1.467  loss_ce_2: 0.7757  loss_mask_2: 0.2191  loss_dice_2: 1.414  loss_ce_3: 0.7366  loss_mask_3: 0.2192  loss_dice_3: 1.342  loss_ce_4: 0.7051  loss_mask_4: 0.2196  loss_dice_4: 1.352  loss_ce_5: 0.7266  loss_mask_5: 0.2139  loss_dice_5: 1.359  loss_ce_6: 0.6972  loss_mask_6: 0.2122  loss_dice_6: 1.32  loss_ce_7: 0.7037  loss_mask_7: 0.2133  loss_dice_7: 1.3  loss_ce_8: 0.6853  loss_mask_8: 0.2096  loss_dice_8: 1.352    time: 0.6223  last_time: 0.6147  data_time: 0.0270  last_data_time: 0.0195   lr: 0.0001  max_mem: 17093M
[08/23 13:40:12] d2.utils.events INFO:  eta: 0:07:36  iter: 259  total_loss: 22.11  loss_ce: 0.6635  loss_mask: 0.1747  loss_dice: 1.293  loss_ce_0: 0.7223  loss_mask_0: 0.2068  loss_dice_0: 1.552  loss_ce_1: 0.7847  loss_mask_1: 0.1904  loss_dice_1: 1.418  loss_ce_2: 0.7445  loss_mask_2: 0.1796  loss_dice_2: 1.375  loss_ce_3: 0.7001  loss_mask_3: 0.1757  loss_dice_3: 1.313  loss_ce_4: 0.6865  loss_mask_4: 0.1765  loss_dice_4: 1.334  loss_ce_5: 0.6934  loss_mask_5: 0.1752  loss_dice_5: 1.304  loss_ce_6: 0.6984  loss_mask_6: 0.1751  loss_dice_6: 1.304  loss_ce_7: 0.6926  loss_mask_7: 0.175  loss_dice_7: 1.282  loss_ce_8: 0.6659  loss_mask_8: 0.1743  loss_dice_8: 1.282    time: 0.6213  last_time: 0.5677  data_time: 0.0272  last_data_time: 0.0300   lr: 0.0001  max_mem: 17093M
[08/23 13:40:24] d2.utils.events INFO:  eta: 0:07:22  iter: 279  total_loss: 22.82  loss_ce: 0.6444  loss_mask: 0.1926  loss_dice: 1.294  loss_ce_0: 0.6953  loss_mask_0: 0.2159  loss_dice_0: 1.543  loss_ce_1: 0.808  loss_mask_1: 0.2026  loss_dice_1: 1.479  loss_ce_2: 0.7512  loss_mask_2: 0.1978  loss_dice_2: 1.382  loss_ce_3: 0.703  loss_mask_3: 0.1944  loss_dice_3: 1.35  loss_ce_4: 0.6708  loss_mask_4: 0.1939  loss_dice_4: 1.332  loss_ce_5: 0.6555  loss_mask_5: 0.1943  loss_dice_5: 1.329  loss_ce_6: 0.6622  loss_mask_6: 0.1936  loss_dice_6: 1.338  loss_ce_7: 0.6624  loss_mask_7: 0.1946  loss_dice_7: 1.305  loss_ce_8: 0.6518  loss_mask_8: 0.1924  loss_dice_8: 1.303    time: 0.6199  last_time: 0.6201  data_time: 0.0269  last_data_time: 0.0250   lr: 0.0001  max_mem: 17093M
[08/23 13:40:36] d2.utils.events INFO:  eta: 0:07:10  iter: 299  total_loss: 21.71  loss_ce: 0.6099  loss_mask: 0.1922  loss_dice: 1.269  loss_ce_0: 0.6952  loss_mask_0: 0.2276  loss_dice_0: 1.503  loss_ce_1: 0.7592  loss_mask_1: 0.2074  loss_dice_1: 1.41  loss_ce_2: 0.7055  loss_mask_2: 0.1968  loss_dice_2: 1.354  loss_ce_3: 0.6695  loss_mask_3: 0.1965  loss_dice_3: 1.318  loss_ce_4: 0.6655  loss_mask_4: 0.2002  loss_dice_4: 1.296  loss_ce_5: 0.6308  loss_mask_5: 0.1987  loss_dice_5: 1.293  loss_ce_6: 0.6105  loss_mask_6: 0.1922  loss_dice_6: 1.267  loss_ce_7: 0.6264  loss_mask_7: 0.1929  loss_dice_7: 1.264  loss_ce_8: 0.6311  loss_mask_8: 0.1919  loss_dice_8: 1.296    time: 0.6186  last_time: 0.5948  data_time: 0.0244  last_data_time: 0.0224   lr: 0.0001  max_mem: 17093M
[08/23 13:40:48] d2.utils.events INFO:  eta: 0:06:58  iter: 319  total_loss: 22.65  loss_ce: 0.6013  loss_mask: 0.1862  loss_dice: 1.316  loss_ce_0: 0.7485  loss_mask_0: 0.2164  loss_dice_0: 1.565  loss_ce_1: 0.7795  loss_mask_1: 0.1998  loss_dice_1: 1.44  loss_ce_2: 0.7419  loss_mask_2: 0.1927  loss_dice_2: 1.387  loss_ce_3: 0.6839  loss_mask_3: 0.1879  loss_dice_3: 1.345  loss_ce_4: 0.6606  loss_mask_4: 0.1839  loss_dice_4: 1.329  loss_ce_5: 0.675  loss_mask_5: 0.1856  loss_dice_5: 1.32  loss_ce_6: 0.6318  loss_mask_6: 0.1866  loss_dice_6: 1.323  loss_ce_7: 0.6451  loss_mask_7: 0.1853  loss_dice_7: 1.337  loss_ce_8: 0.6644  loss_mask_8: 0.1858  loss_dice_8: 1.296    time: 0.6185  last_time: 0.5971  data_time: 0.0267  last_data_time: 0.0286   lr: 0.0001  max_mem: 17093M
[08/23 13:41:01] d2.utils.events INFO:  eta: 0:06:45  iter: 339  total_loss: 21.87  loss_ce: 0.6242  loss_mask: 0.1899  loss_dice: 1.28  loss_ce_0: 0.7086  loss_mask_0: 0.2066  loss_dice_0: 1.446  loss_ce_1: 0.7582  loss_mask_1: 0.1945  loss_dice_1: 1.413  loss_ce_2: 0.7507  loss_mask_2: 0.1857  loss_dice_2: 1.32  loss_ce_3: 0.6851  loss_mask_3: 0.1867  loss_dice_3: 1.308  loss_ce_4: 0.6508  loss_mask_4: 0.1877  loss_dice_4: 1.246  loss_ce_5: 0.6564  loss_mask_5: 0.1893  loss_dice_5: 1.274  loss_ce_6: 0.6061  loss_mask_6: 0.1891  loss_dice_6: 1.276  loss_ce_7: 0.6119  loss_mask_7: 0.1912  loss_dice_7: 1.261  loss_ce_8: 0.6398  loss_mask_8: 0.189  loss_dice_8: 1.273    time: 0.6179  last_time: 0.5935  data_time: 0.0274  last_data_time: 0.0277   lr: 0.0001  max_mem: 17093M
[08/23 13:41:13] d2.utils.events INFO:  eta: 0:06:33  iter: 359  total_loss: 22.4  loss_ce: 0.6263  loss_mask: 0.1881  loss_dice: 1.325  loss_ce_0: 0.7275  loss_mask_0: 0.2193  loss_dice_0: 1.564  loss_ce_1: 0.7785  loss_mask_1: 0.2127  loss_dice_1: 1.46  loss_ce_2: 0.7587  loss_mask_2: 0.1928  loss_dice_2: 1.425  loss_ce_3: 0.6679  loss_mask_3: 0.197  loss_dice_3: 1.352  loss_ce_4: 0.6454  loss_mask_4: 0.193  loss_dice_4: 1.333  loss_ce_5: 0.6465  loss_mask_5: 0.1936  loss_dice_5: 1.365  loss_ce_6: 0.6182  loss_mask_6: 0.191  loss_dice_6: 1.33  loss_ce_7: 0.6305  loss_mask_7: 0.1904  loss_dice_7: 1.334  loss_ce_8: 0.6085  loss_mask_8: 0.1898  loss_dice_8: 1.319    time: 0.6178  last_time: 0.6177  data_time: 0.0268  last_data_time: 0.0168   lr: 0.0001  max_mem: 17093M
[08/23 13:41:25] d2.utils.events INFO:  eta: 0:06:20  iter: 379  total_loss: 21.47  loss_ce: 0.5931  loss_mask: 0.1958  loss_dice: 1.231  loss_ce_0: 0.6463  loss_mask_0: 0.2238  loss_dice_0: 1.493  loss_ce_1: 0.7555  loss_mask_1: 0.21  loss_dice_1: 1.359  loss_ce_2: 0.7014  loss_mask_2: 0.2012  loss_dice_2: 1.317  loss_ce_3: 0.6497  loss_mask_3: 0.1982  loss_dice_3: 1.277  loss_ce_4: 0.6355  loss_mask_4: 0.1985  loss_dice_4: 1.246  loss_ce_5: 0.6045  loss_mask_5: 0.1986  loss_dice_5: 1.241  loss_ce_6: 0.6209  loss_mask_6: 0.1956  loss_dice_6: 1.243  loss_ce_7: 0.604  loss_mask_7: 0.1949  loss_dice_7: 1.236  loss_ce_8: 0.596  loss_mask_8: 0.1945  loss_dice_8: 1.23    time: 0.6171  last_time: 0.6275  data_time: 0.0253  last_data_time: 0.0290   lr: 0.0001  max_mem: 17093M
[08/23 13:41:38] d2.utils.events INFO:  eta: 0:06:08  iter: 399  total_loss: 22.73  loss_ce: 0.6653  loss_mask: 0.1884  loss_dice: 1.292  loss_ce_0: 0.7263  loss_mask_0: 0.2081  loss_dice_0: 1.581  loss_ce_1: 0.8387  loss_mask_1: 0.1948  loss_dice_1: 1.442  loss_ce_2: 0.7844  loss_mask_2: 0.1887  loss_dice_2: 1.383  loss_ce_3: 0.7123  loss_mask_3: 0.187  loss_dice_3: 1.358  loss_ce_4: 0.6761  loss_mask_4: 0.1854  loss_dice_4: 1.312  loss_ce_5: 0.6835  loss_mask_5: 0.1856  loss_dice_5: 1.32  loss_ce_6: 0.6697  loss_mask_6: 0.189  loss_dice_6: 1.293  loss_ce_7: 0.6789  loss_mask_7: 0.1856  loss_dice_7: 1.285  loss_ce_8: 0.6719  loss_mask_8: 0.1832  loss_dice_8: 1.276    time: 0.6173  last_time: 0.5739  data_time: 0.0225  last_data_time: 0.0246   lr: 0.0001  max_mem: 17093M
[08/23 13:41:50] d2.utils.events INFO:  eta: 0:05:56  iter: 419  total_loss: 21.54  loss_ce: 0.6455  loss_mask: 0.1743  loss_dice: 1.237  loss_ce_0: 0.7008  loss_mask_0: 0.1941  loss_dice_0: 1.476  loss_ce_1: 0.7782  loss_mask_1: 0.1841  loss_dice_1: 1.369  loss_ce_2: 0.7312  loss_mask_2: 0.1771  loss_dice_2: 1.304  loss_ce_3: 0.6667  loss_mask_3: 0.1718  loss_dice_3: 1.254  loss_ce_4: 0.6218  loss_mask_4: 0.1733  loss_dice_4: 1.257  loss_ce_5: 0.6217  loss_mask_5: 0.173  loss_dice_5: 1.254  loss_ce_6: 0.6218  loss_mask_6: 0.1754  loss_dice_6: 1.226  loss_ce_7: 0.6229  loss_mask_7: 0.1743  loss_dice_7: 1.247  loss_ce_8: 0.616  loss_mask_8: 0.1739  loss_dice_8: 1.24    time: 0.6174  last_time: 0.6025  data_time: 0.0248  last_data_time: 0.0283   lr: 0.0001  max_mem: 17093M
[08/23 13:42:02] d2.utils.events INFO:  eta: 0:05:43  iter: 439  total_loss: 21.36  loss_ce: 0.6273  loss_mask: 0.1828  loss_dice: 1.237  loss_ce_0: 0.7237  loss_mask_0: 0.2166  loss_dice_0: 1.488  loss_ce_1: 0.8007  loss_mask_1: 0.2005  loss_dice_1: 1.372  loss_ce_2: 0.736  loss_mask_2: 0.1879  loss_dice_2: 1.319  loss_ce_3: 0.7168  loss_mask_3: 0.1821  loss_dice_3: 1.274  loss_ce_4: 0.683  loss_mask_4: 0.1829  loss_dice_4: 1.279  loss_ce_5: 0.6481  loss_mask_5: 0.1798  loss_dice_5: 1.247  loss_ce_6: 0.6436  loss_mask_6: 0.1837  loss_dice_6: 1.237  loss_ce_7: 0.6159  loss_mask_7: 0.1841  loss_dice_7: 1.241  loss_ce_8: 0.6447  loss_mask_8: 0.1824  loss_dice_8: 1.247    time: 0.6170  last_time: 0.6154  data_time: 0.0265  last_data_time: 0.0319   lr: 0.0001  max_mem: 17093M
[08/23 13:42:14] d2.utils.events INFO:  eta: 0:05:30  iter: 459  total_loss: 20.58  loss_ce: 0.5606  loss_mask: 0.1873  loss_dice: 1.221  loss_ce_0: 0.665  loss_mask_0: 0.2157  loss_dice_0: 1.449  loss_ce_1: 0.7531  loss_mask_1: 0.199  loss_dice_1: 1.358  loss_ce_2: 0.6785  loss_mask_2: 0.1992  loss_dice_2: 1.293  loss_ce_3: 0.6321  loss_mask_3: 0.1858  loss_dice_3: 1.26  loss_ce_4: 0.5987  loss_mask_4: 0.1793  loss_dice_4: 1.255  loss_ce_5: 0.5512  loss_mask_5: 0.1873  loss_dice_5: 1.263  loss_ce_6: 0.5944  loss_mask_6: 0.1866  loss_dice_6: 1.232  loss_ce_7: 0.5345  loss_mask_7: 0.1817  loss_dice_7: 1.2  loss_ce_8: 0.5591  loss_mask_8: 0.1813  loss_dice_8: 1.265    time: 0.6157  last_time: 0.5823  data_time: 0.0254  last_data_time: 0.0219   lr: 0.0001  max_mem: 17093M
[08/23 13:42:27] d2.utils.events INFO:  eta: 0:05:18  iter: 479  total_loss: 21.53  loss_ce: 0.5945  loss_mask: 0.1737  loss_dice: 1.241  loss_ce_0: 0.6213  loss_mask_0: 0.1976  loss_dice_0: 1.51  loss_ce_1: 0.7217  loss_mask_1: 0.2001  loss_dice_1: 1.399  loss_ce_2: 0.6572  loss_mask_2: 0.1841  loss_dice_2: 1.358  loss_ce_3: 0.6328  loss_mask_3: 0.1799  loss_dice_3: 1.292  loss_ce_4: 0.6003  loss_mask_4: 0.1768  loss_dice_4: 1.298  loss_ce_5: 0.5764  loss_mask_5: 0.1754  loss_dice_5: 1.274  loss_ce_6: 0.5799  loss_mask_6: 0.1778  loss_dice_6: 1.283  loss_ce_7: 0.5568  loss_mask_7: 0.1747  loss_dice_7: 1.28  loss_ce_8: 0.5841  loss_mask_8: 0.1747  loss_dice_8: 1.272    time: 0.6158  last_time: 0.6579  data_time: 0.0256  last_data_time: 0.0262   lr: 0.0001  max_mem: 17093M
[08/23 13:42:39] d2.utils.events INFO:  eta: 0:05:07  iter: 499  total_loss: 21.61  loss_ce: 0.6067  loss_mask: 0.1796  loss_dice: 1.278  loss_ce_0: 0.7228  loss_mask_0: 0.2219  loss_dice_0: 1.518  loss_ce_1: 0.7663  loss_mask_1: 0.1972  loss_dice_1: 1.366  loss_ce_2: 0.6991  loss_mask_2: 0.1898  loss_dice_2: 1.329  loss_ce_3: 0.6622  loss_mask_3: 0.183  loss_dice_3: 1.297  loss_ce_4: 0.649  loss_mask_4: 0.1849  loss_dice_4: 1.254  loss_ce_5: 0.6415  loss_mask_5: 0.1824  loss_dice_5: 1.263  loss_ce_6: 0.6224  loss_mask_6: 0.1845  loss_dice_6: 1.208  loss_ce_7: 0.6041  loss_mask_7: 0.1826  loss_dice_7: 1.256  loss_ce_8: 0.6428  loss_mask_8: 0.1798  loss_dice_8: 1.26    time: 0.6162  last_time: 0.6407  data_time: 0.0253  last_data_time: 0.0260   lr: 0.0001  max_mem: 17093M
[08/23 13:42:51] d2.utils.events INFO:  eta: 0:04:54  iter: 519  total_loss: 21.88  loss_ce: 0.5839  loss_mask: 0.1764  loss_dice: 1.27  loss_ce_0: 0.6659  loss_mask_0: 0.2056  loss_dice_0: 1.509  loss_ce_1: 0.745  loss_mask_1: 0.1888  loss_dice_1: 1.417  loss_ce_2: 0.6807  loss_mask_2: 0.1796  loss_dice_2: 1.363  loss_ce_3: 0.6165  loss_mask_3: 0.1754  loss_dice_3: 1.361  loss_ce_4: 0.6008  loss_mask_4: 0.1731  loss_dice_4: 1.322  loss_ce_5: 0.6017  loss_mask_5: 0.1752  loss_dice_5: 1.343  loss_ce_6: 0.5881  loss_mask_6: 0.1739  loss_dice_6: 1.278  loss_ce_7: 0.6034  loss_mask_7: 0.1744  loss_dice_7: 1.283  loss_ce_8: 0.5954  loss_mask_8: 0.1751  loss_dice_8: 1.29    time: 0.6157  last_time: 0.6227  data_time: 0.0262  last_data_time: 0.0255   lr: 0.0001  max_mem: 17093M
[08/23 13:43:04] d2.utils.events INFO:  eta: 0:04:42  iter: 539  total_loss: 20.7  loss_ce: 0.5932  loss_mask: 0.1944  loss_dice: 1.191  loss_ce_0: 0.6825  loss_mask_0: 0.217  loss_dice_0: 1.412  loss_ce_1: 0.7191  loss_mask_1: 0.2122  loss_dice_1: 1.354  loss_ce_2: 0.6875  loss_mask_2: 0.1995  loss_dice_2: 1.29  loss_ce_3: 0.6166  loss_mask_3: 0.1944  loss_dice_3: 1.236  loss_ce_4: 0.5783  loss_mask_4: 0.1928  loss_dice_4: 1.244  loss_ce_5: 0.5929  loss_mask_5: 0.195  loss_dice_5: 1.215  loss_ce_6: 0.5857  loss_mask_6: 0.195  loss_dice_6: 1.215  loss_ce_7: 0.5505  loss_mask_7: 0.1968  loss_dice_7: 1.2  loss_ce_8: 0.5805  loss_mask_8: 0.1961  loss_dice_8: 1.227    time: 0.6158  last_time: 0.5762  data_time: 0.0284  last_data_time: 0.0238   lr: 0.0001  max_mem: 17093M
[08/23 13:43:16] d2.utils.events INFO:  eta: 0:04:30  iter: 559  total_loss: 21.19  loss_ce: 0.6112  loss_mask: 0.1817  loss_dice: 1.238  loss_ce_0: 0.6923  loss_mask_0: 0.2124  loss_dice_0: 1.41  loss_ce_1: 0.775  loss_mask_1: 0.1997  loss_dice_1: 1.368  loss_ce_2: 0.7534  loss_mask_2: 0.1937  loss_dice_2: 1.314  loss_ce_3: 0.6778  loss_mask_3: 0.1897  loss_dice_3: 1.27  loss_ce_4: 0.6456  loss_mask_4: 0.1829  loss_dice_4: 1.262  loss_ce_5: 0.613  loss_mask_5: 0.1842  loss_dice_5: 1.308  loss_ce_6: 0.6225  loss_mask_6: 0.1833  loss_dice_6: 1.242  loss_ce_7: 0.61  loss_mask_7: 0.1801  loss_dice_7: 1.253  loss_ce_8: 0.6274  loss_mask_8: 0.1808  loss_dice_8: 1.254    time: 0.6153  last_time: 0.6329  data_time: 0.0264  last_data_time: 0.0335   lr: 0.0001  max_mem: 17093M
[08/23 13:43:28] d2.utils.events INFO:  eta: 0:04:17  iter: 579  total_loss: 20.85  loss_ce: 0.6035  loss_mask: 0.1837  loss_dice: 1.265  loss_ce_0: 0.6636  loss_mask_0: 0.2087  loss_dice_0: 1.513  loss_ce_1: 0.75  loss_mask_1: 0.195  loss_dice_1: 1.396  loss_ce_2: 0.6876  loss_mask_2: 0.1883  loss_dice_2: 1.318  loss_ce_3: 0.6338  loss_mask_3: 0.1838  loss_dice_3: 1.271  loss_ce_4: 0.6015  loss_mask_4: 0.1835  loss_dice_4: 1.275  loss_ce_5: 0.57  loss_mask_5: 0.1876  loss_dice_5: 1.274  loss_ce_6: 0.579  loss_mask_6: 0.1878  loss_dice_6: 1.219  loss_ce_7: 0.5884  loss_mask_7: 0.1873  loss_dice_7: 1.221  loss_ce_8: 0.581  loss_mask_8: 0.1845  loss_dice_8: 1.238    time: 0.6154  last_time: 0.6696  data_time: 0.0254  last_data_time: 0.0213   lr: 0.0001  max_mem: 17093M
[08/23 13:43:41] d2.utils.events INFO:  eta: 0:04:05  iter: 599  total_loss: 20.69  loss_ce: 0.5495  loss_mask: 0.1735  loss_dice: 1.234  loss_ce_0: 0.6424  loss_mask_0: 0.2042  loss_dice_0: 1.48  loss_ce_1: 0.741  loss_mask_1: 0.1863  loss_dice_1: 1.373  loss_ce_2: 0.6145  loss_mask_2: 0.1827  loss_dice_2: 1.334  loss_ce_3: 0.6004  loss_mask_3: 0.1826  loss_dice_3: 1.313  loss_ce_4: 0.5729  loss_mask_4: 0.1779  loss_dice_4: 1.291  loss_ce_5: 0.5655  loss_mask_5: 0.1739  loss_dice_5: 1.265  loss_ce_6: 0.5794  loss_mask_6: 0.1729  loss_dice_6: 1.261  loss_ce_7: 0.5725  loss_mask_7: 0.1727  loss_dice_7: 1.228  loss_ce_8: 0.5767  loss_mask_8: 0.172  loss_dice_8: 1.237    time: 0.6159  last_time: 0.6568  data_time: 0.0275  last_data_time: 0.0220   lr: 0.0001  max_mem: 17093M
[08/23 13:43:53] d2.utils.events INFO:  eta: 0:03:53  iter: 619  total_loss: 21.03  loss_ce: 0.6132  loss_mask: 0.188  loss_dice: 1.167  loss_ce_0: 0.6846  loss_mask_0: 0.2178  loss_dice_0: 1.478  loss_ce_1: 0.7458  loss_mask_1: 0.2002  loss_dice_1: 1.364  loss_ce_2: 0.6938  loss_mask_2: 0.1912  loss_dice_2: 1.294  loss_ce_3: 0.6413  loss_mask_3: 0.1937  loss_dice_3: 1.257  loss_ce_4: 0.6017  loss_mask_4: 0.1917  loss_dice_4: 1.246  loss_ce_5: 0.5868  loss_mask_5: 0.1908  loss_dice_5: 1.207  loss_ce_6: 0.6036  loss_mask_6: 0.1902  loss_dice_6: 1.218  loss_ce_7: 0.5844  loss_mask_7: 0.1895  loss_dice_7: 1.223  loss_ce_8: 0.6064  loss_mask_8: 0.1899  loss_dice_8: 1.211    time: 0.6158  last_time: 0.6398  data_time: 0.0271  last_data_time: 0.0257   lr: 0.0001  max_mem: 17093M
[08/23 13:44:06] d2.utils.events INFO:  eta: 0:03:41  iter: 639  total_loss: 22.31  loss_ce: 0.6092  loss_mask: 0.1795  loss_dice: 1.341  loss_ce_0: 0.6404  loss_mask_0: 0.2053  loss_dice_0: 1.653  loss_ce_1: 0.7366  loss_mask_1: 0.1899  loss_dice_1: 1.444  loss_ce_2: 0.705  loss_mask_2: 0.1835  loss_dice_2: 1.433  loss_ce_3: 0.6521  loss_mask_3: 0.1812  loss_dice_3: 1.332  loss_ce_4: 0.6122  loss_mask_4: 0.1798  loss_dice_4: 1.346  loss_ce_5: 0.6247  loss_mask_5: 0.1738  loss_dice_5: 1.367  loss_ce_6: 0.6009  loss_mask_6: 0.1787  loss_dice_6: 1.324  loss_ce_7: 0.612  loss_mask_7: 0.1761  loss_dice_7: 1.332  loss_ce_8: 0.621  loss_mask_8: 0.178  loss_dice_8: 1.329    time: 0.6161  last_time: 0.7227  data_time: 0.0302  last_data_time: 0.0326   lr: 0.0001  max_mem: 17165M
[08/23 13:44:18] d2.utils.events INFO:  eta: 0:03:28  iter: 659  total_loss: 20.67  loss_ce: 0.6307  loss_mask: 0.1659  loss_dice: 1.201  loss_ce_0: 0.6828  loss_mask_0: 0.1845  loss_dice_0: 1.521  loss_ce_1: 0.7557  loss_mask_1: 0.1732  loss_dice_1: 1.344  loss_ce_2: 0.7034  loss_mask_2: 0.1675  loss_dice_2: 1.287  loss_ce_3: 0.6191  loss_mask_3: 0.1678  loss_dice_3: 1.248  loss_ce_4: 0.6377  loss_mask_4: 0.1658  loss_dice_4: 1.209  loss_ce_5: 0.5947  loss_mask_5: 0.1646  loss_dice_5: 1.169  loss_ce_6: 0.624  loss_mask_6: 0.1642  loss_dice_6: 1.196  loss_ce_7: 0.6163  loss_mask_7: 0.1644  loss_dice_7: 1.186  loss_ce_8: 0.6047  loss_mask_8: 0.1628  loss_dice_8: 1.186    time: 0.6161  last_time: 0.5890  data_time: 0.0271  last_data_time: 0.0194   lr: 0.0001  max_mem: 17165M
[08/23 13:44:30] d2.utils.events INFO:  eta: 0:03:16  iter: 679  total_loss: 22.11  loss_ce: 0.6486  loss_mask: 0.1598  loss_dice: 1.282  loss_ce_0: 0.7306  loss_mask_0: 0.1968  loss_dice_0: 1.561  loss_ce_1: 0.791  loss_mask_1: 0.1786  loss_dice_1: 1.44  loss_ce_2: 0.7267  loss_mask_2: 0.1637  loss_dice_2: 1.382  loss_ce_3: 0.6986  loss_mask_3: 0.164  loss_dice_3: 1.333  loss_ce_4: 0.6627  loss_mask_4: 0.1661  loss_dice_4: 1.323  loss_ce_5: 0.6428  loss_mask_5: 0.1609  loss_dice_5: 1.29  loss_ce_6: 0.6516  loss_mask_6: 0.1608  loss_dice_6: 1.271  loss_ce_7: 0.6681  loss_mask_7: 0.1586  loss_dice_7: 1.281  loss_ce_8: 0.6513  loss_mask_8: 0.1592  loss_dice_8: 1.312    time: 0.6156  last_time: 0.6057  data_time: 0.0250  last_data_time: 0.0286   lr: 0.0001  max_mem: 17165M
[08/23 13:44:43] d2.utils.events INFO:  eta: 0:03:04  iter: 699  total_loss: 22.32  loss_ce: 0.5851  loss_mask: 0.1673  loss_dice: 1.328  loss_ce_0: 0.7262  loss_mask_0: 0.2018  loss_dice_0: 1.588  loss_ce_1: 0.7435  loss_mask_1: 0.1821  loss_dice_1: 1.473  loss_ce_2: 0.6823  loss_mask_2: 0.1742  loss_dice_2: 1.412  loss_ce_3: 0.634  loss_mask_3: 0.1719  loss_dice_3: 1.399  loss_ce_4: 0.5854  loss_mask_4: 0.1668  loss_dice_4: 1.376  loss_ce_5: 0.5694  loss_mask_5: 0.1648  loss_dice_5: 1.351  loss_ce_6: 0.6002  loss_mask_6: 0.1698  loss_dice_6: 1.331  loss_ce_7: 0.5638  loss_mask_7: 0.1677  loss_dice_7: 1.33  loss_ce_8: 0.6068  loss_mask_8: 0.1685  loss_dice_8: 1.376    time: 0.6160  last_time: 0.6512  data_time: 0.0272  last_data_time: 0.0204   lr: 0.0001  max_mem: 17165M
[08/23 13:44:56] d2.utils.events INFO:  eta: 0:02:52  iter: 719  total_loss: 21.66  loss_ce: 0.5818  loss_mask: 0.1657  loss_dice: 1.306  loss_ce_0: 0.6529  loss_mask_0: 0.1968  loss_dice_0: 1.509  loss_ce_1: 0.707  loss_mask_1: 0.1862  loss_dice_1: 1.458  loss_ce_2: 0.6725  loss_mask_2: 0.1701  loss_dice_2: 1.391  loss_ce_3: 0.6062  loss_mask_3: 0.1678  loss_dice_3: 1.315  loss_ce_4: 0.6063  loss_mask_4: 0.1654  loss_dice_4: 1.298  loss_ce_5: 0.5813  loss_mask_5: 0.1651  loss_dice_5: 1.266  loss_ce_6: 0.5994  loss_mask_6: 0.1638  loss_dice_6: 1.264  loss_ce_7: 0.5796  loss_mask_7: 0.1653  loss_dice_7: 1.289  loss_ce_8: 0.5715  loss_mask_8: 0.164  loss_dice_8: 1.295    time: 0.6163  last_time: 0.6177  data_time: 0.0265  last_data_time: 0.0236   lr: 0.0001  max_mem: 17165M
[08/23 13:45:08] d2.utils.events INFO:  eta: 0:02:39  iter: 739  total_loss: 20.67  loss_ce: 0.5282  loss_mask: 0.1724  loss_dice: 1.265  loss_ce_0: 0.6361  loss_mask_0: 0.1936  loss_dice_0: 1.477  loss_ce_1: 0.673  loss_mask_1: 0.1892  loss_dice_1: 1.397  loss_ce_2: 0.6273  loss_mask_2: 0.1787  loss_dice_2: 1.33  loss_ce_3: 0.5643  loss_mask_3: 0.1743  loss_dice_3: 1.276  loss_ce_4: 0.5587  loss_mask_4: 0.1734  loss_dice_4: 1.261  loss_ce_5: 0.5401  loss_mask_5: 0.173  loss_dice_5: 1.283  loss_ce_6: 0.5507  loss_mask_6: 0.1707  loss_dice_6: 1.269  loss_ce_7: 0.5137  loss_mask_7: 0.1764  loss_dice_7: 1.257  loss_ce_8: 0.5313  loss_mask_8: 0.1735  loss_dice_8: 1.262    time: 0.6167  last_time: 0.6432  data_time: 0.0287  last_data_time: 0.0304   lr: 0.0001  max_mem: 17165M
[08/23 13:45:20] d2.utils.events INFO:  eta: 0:02:27  iter: 759  total_loss: 20.3  loss_ce: 0.5367  loss_mask: 0.1835  loss_dice: 1.226  loss_ce_0: 0.6734  loss_mask_0: 0.2089  loss_dice_0: 1.405  loss_ce_1: 0.7095  loss_mask_1: 0.1964  loss_dice_1: 1.334  loss_ce_2: 0.6806  loss_mask_2: 0.1864  loss_dice_2: 1.259  loss_ce_3: 0.6135  loss_mask_3: 0.1883  loss_dice_3: 1.225  loss_ce_4: 0.5885  loss_mask_4: 0.1879  loss_dice_4: 1.261  loss_ce_5: 0.5916  loss_mask_5: 0.1874  loss_dice_5: 1.206  loss_ce_6: 0.5528  loss_mask_6: 0.1854  loss_dice_6: 1.242  loss_ce_7: 0.5409  loss_mask_7: 0.1832  loss_dice_7: 1.221  loss_ce_8: 0.5423  loss_mask_8: 0.182  loss_dice_8: 1.222    time: 0.6166  last_time: 0.6048  data_time: 0.0255  last_data_time: 0.0261   lr: 0.0001  max_mem: 17165M
[08/23 13:45:33] d2.utils.events INFO:  eta: 0:02:15  iter: 779  total_loss: 21.55  loss_ce: 0.5978  loss_mask: 0.1577  loss_dice: 1.256  loss_ce_0: 0.6978  loss_mask_0: 0.1839  loss_dice_0: 1.465  loss_ce_1: 0.747  loss_mask_1: 0.1705  loss_dice_1: 1.386  loss_ce_2: 0.7099  loss_mask_2: 0.163  loss_dice_2: 1.344  loss_ce_3: 0.646  loss_mask_3: 0.1608  loss_dice_3: 1.305  loss_ce_4: 0.6233  loss_mask_4: 0.1581  loss_dice_4: 1.292  loss_ce_5: 0.6342  loss_mask_5: 0.1569  loss_dice_5: 1.277  loss_ce_6: 0.6078  loss_mask_6: 0.1584  loss_dice_6: 1.321  loss_ce_7: 0.5885  loss_mask_7: 0.158  loss_dice_7: 1.283  loss_ce_8: 0.5978  loss_mask_8: 0.1598  loss_dice_8: 1.288    time: 0.6169  last_time: 0.6129  data_time: 0.0269  last_data_time: 0.0292   lr: 0.0001  max_mem: 17165M
[08/23 13:45:46] d2.utils.events INFO:  eta: 0:02:03  iter: 799  total_loss: 20.88  loss_ce: 0.5216  loss_mask: 0.1814  loss_dice: 1.173  loss_ce_0: 0.6295  loss_mask_0: 0.216  loss_dice_0: 1.442  loss_ce_1: 0.712  loss_mask_1: 0.1917  loss_dice_1: 1.347  loss_ce_2: 0.6572  loss_mask_2: 0.1856  loss_dice_2: 1.277  loss_ce_3: 0.6493  loss_mask_3: 0.1864  loss_dice_3: 1.221  loss_ce_4: 0.572  loss_mask_4: 0.1856  loss_dice_4: 1.234  loss_ce_5: 0.5583  loss_mask_5: 0.1822  loss_dice_5: 1.191  loss_ce_6: 0.5524  loss_mask_6: 0.1817  loss_dice_6: 1.24  loss_ce_7: 0.5409  loss_mask_7: 0.1809  loss_dice_7: 1.203  loss_ce_8: 0.5628  loss_mask_8: 0.1819  loss_dice_8: 1.219    time: 0.6171  last_time: 0.5961  data_time: 0.0285  last_data_time: 0.0215   lr: 0.0001  max_mem: 17165M
[08/23 13:45:58] d2.utils.events INFO:  eta: 0:01:50  iter: 819  total_loss: 21.3  loss_ce: 0.5798  loss_mask: 0.164  loss_dice: 1.28  loss_ce_0: 0.6172  loss_mask_0: 0.1986  loss_dice_0: 1.55  loss_ce_1: 0.7327  loss_mask_1: 0.1775  loss_dice_1: 1.423  loss_ce_2: 0.6598  loss_mask_2: 0.1741  loss_dice_2: 1.351  loss_ce_3: 0.6134  loss_mask_3: 0.1672  loss_dice_3: 1.299  loss_ce_4: 0.5712  loss_mask_4: 0.1646  loss_dice_4: 1.32  loss_ce_5: 0.585  loss_mask_5: 0.1637  loss_dice_5: 1.295  loss_ce_6: 0.5714  loss_mask_6: 0.1621  loss_dice_6: 1.323  loss_ce_7: 0.596  loss_mask_7: 0.1614  loss_dice_7: 1.289  loss_ce_8: 0.5918  loss_mask_8: 0.1613  loss_dice_8: 1.273    time: 0.6172  last_time: 0.7042  data_time: 0.0265  last_data_time: 0.0339   lr: 0.0001  max_mem: 17165M
[08/23 13:46:11] d2.utils.events INFO:  eta: 0:01:38  iter: 839  total_loss: 21.17  loss_ce: 0.6207  loss_mask: 0.1729  loss_dice: 1.233  loss_ce_0: 0.6489  loss_mask_0: 0.1957  loss_dice_0: 1.444  loss_ce_1: 0.7412  loss_mask_1: 0.1846  loss_dice_1: 1.356  loss_ce_2: 0.6993  loss_mask_2: 0.173  loss_dice_2: 1.307  loss_ce_3: 0.6384  loss_mask_3: 0.1728  loss_dice_3: 1.26  loss_ce_4: 0.5917  loss_mask_4: 0.1725  loss_dice_4: 1.249  loss_ce_5: 0.5884  loss_mask_5: 0.1753  loss_dice_5: 1.23  loss_ce_6: 0.5911  loss_mask_6: 0.1709  loss_dice_6: 1.231  loss_ce_7: 0.5841  loss_mask_7: 0.1697  loss_dice_7: 1.213  loss_ce_8: 0.5775  loss_mask_8: 0.1729  loss_dice_8: 1.229    time: 0.6171  last_time: 0.5903  data_time: 0.0275  last_data_time: 0.0218   lr: 0.0001  max_mem: 17165M
[08/23 13:46:23] d2.utils.events INFO:  eta: 0:01:26  iter: 859  total_loss: 20.43  loss_ce: 0.516  loss_mask: 0.1775  loss_dice: 1.229  loss_ce_0: 0.6273  loss_mask_0: 0.2065  loss_dice_0: 1.443  loss_ce_1: 0.698  loss_mask_1: 0.1896  loss_dice_1: 1.354  loss_ce_2: 0.6149  loss_mask_2: 0.1848  loss_dice_2: 1.303  loss_ce_3: 0.5668  loss_mask_3: 0.1823  loss_dice_3: 1.276  loss_ce_4: 0.567  loss_mask_4: 0.182  loss_dice_4: 1.246  loss_ce_5: 0.5403  loss_mask_5: 0.1822  loss_dice_5: 1.291  loss_ce_6: 0.5271  loss_mask_6: 0.1791  loss_dice_6: 1.278  loss_ce_7: 0.5237  loss_mask_7: 0.1785  loss_dice_7: 1.259  loss_ce_8: 0.5366  loss_mask_8: 0.1796  loss_dice_8: 1.258    time: 0.6172  last_time: 0.6178  data_time: 0.0269  last_data_time: 0.0284   lr: 0.0001  max_mem: 17165M
[08/23 13:46:35] d2.utils.events INFO:  eta: 0:01:13  iter: 879  total_loss: 22  loss_ce: 0.5955  loss_mask: 0.1548  loss_dice: 1.306  loss_ce_0: 0.7343  loss_mask_0: 0.183  loss_dice_0: 1.521  loss_ce_1: 0.7476  loss_mask_1: 0.1763  loss_dice_1: 1.468  loss_ce_2: 0.7093  loss_mask_2: 0.1633  loss_dice_2: 1.401  loss_ce_3: 0.6607  loss_mask_3: 0.1616  loss_dice_3: 1.316  loss_ce_4: 0.6386  loss_mask_4: 0.1574  loss_dice_4: 1.316  loss_ce_5: 0.6133  loss_mask_5: 0.1579  loss_dice_5: 1.339  loss_ce_6: 0.597  loss_mask_6: 0.1565  loss_dice_6: 1.278  loss_ce_7: 0.5983  loss_mask_7: 0.1553  loss_dice_7: 1.28  loss_ce_8: 0.5873  loss_mask_8: 0.1575  loss_dice_8: 1.286    time: 0.6172  last_time: 0.6387  data_time: 0.0271  last_data_time: 0.0269   lr: 0.0001  max_mem: 17165M
[08/23 13:46:48] d2.utils.events INFO:  eta: 0:01:01  iter: 899  total_loss: 21.29  loss_ce: 0.5238  loss_mask: 0.1702  loss_dice: 1.287  loss_ce_0: 0.6583  loss_mask_0: 0.2015  loss_dice_0: 1.475  loss_ce_1: 0.7278  loss_mask_1: 0.1902  loss_dice_1: 1.423  loss_ce_2: 0.639  loss_mask_2: 0.1775  loss_dice_2: 1.348  loss_ce_3: 0.6163  loss_mask_3: 0.1813  loss_dice_3: 1.297  loss_ce_4: 0.5605  loss_mask_4: 0.177  loss_dice_4: 1.305  loss_ce_5: 0.5634  loss_mask_5: 0.1769  loss_dice_5: 1.274  loss_ce_6: 0.562  loss_mask_6: 0.1743  loss_dice_6: 1.288  loss_ce_7: 0.5477  loss_mask_7: 0.1687  loss_dice_7: 1.292  loss_ce_8: 0.5476  loss_mask_8: 0.1748  loss_dice_8: 1.316    time: 0.6172  last_time: 0.6571  data_time: 0.0259  last_data_time: 0.0230   lr: 0.0001  max_mem: 17165M
[08/23 13:47:00] d2.utils.events INFO:  eta: 0:00:49  iter: 919  total_loss: 20.96  loss_ce: 0.5173  loss_mask: 0.1671  loss_dice: 1.238  loss_ce_0: 0.6654  loss_mask_0: 0.1935  loss_dice_0: 1.464  loss_ce_1: 0.7294  loss_mask_1: 0.1758  loss_dice_1: 1.386  loss_ce_2: 0.646  loss_mask_2: 0.173  loss_dice_2: 1.371  loss_ce_3: 0.6235  loss_mask_3: 0.1688  loss_dice_3: 1.276  loss_ce_4: 0.5794  loss_mask_4: 0.1688  loss_dice_4: 1.304  loss_ce_5: 0.6005  loss_mask_5: 0.1679  loss_dice_5: 1.261  loss_ce_6: 0.5487  loss_mask_6: 0.1684  loss_dice_6: 1.209  loss_ce_7: 0.5569  loss_mask_7: 0.1655  loss_dice_7: 1.224  loss_ce_8: 0.5579  loss_mask_8: 0.1643  loss_dice_8: 1.23    time: 0.6173  last_time: 0.6257  data_time: 0.0262  last_data_time: 0.0309   lr: 0.0001  max_mem: 17165M
[08/23 13:47:13] d2.utils.events INFO:  eta: 0:00:36  iter: 939  total_loss: 20.16  loss_ce: 0.5634  loss_mask: 0.1688  loss_dice: 1.175  loss_ce_0: 0.6712  loss_mask_0: 0.1998  loss_dice_0: 1.385  loss_ce_1: 0.7367  loss_mask_1: 0.1841  loss_dice_1: 1.302  loss_ce_2: 0.6517  loss_mask_2: 0.1725  loss_dice_2: 1.283  loss_ce_3: 0.6118  loss_mask_3: 0.1727  loss_dice_3: 1.21  loss_ce_4: 0.5868  loss_mask_4: 0.1708  loss_dice_4: 1.209  loss_ce_5: 0.5759  loss_mask_5: 0.1711  loss_dice_5: 1.223  loss_ce_6: 0.5259  loss_mask_6: 0.1719  loss_dice_6: 1.196  loss_ce_7: 0.5515  loss_mask_7: 0.1665  loss_dice_7: 1.178  loss_ce_8: 0.5654  loss_mask_8: 0.1683  loss_dice_8: 1.182    time: 0.6174  last_time: 0.5651  data_time: 0.0291  last_data_time: 0.0339   lr: 0.0001  max_mem: 17165M
[08/23 13:47:25] d2.utils.events INFO:  eta: 0:00:24  iter: 959  total_loss: 20.42  loss_ce: 0.5138  loss_mask: 0.1738  loss_dice: 1.206  loss_ce_0: 0.6427  loss_mask_0: 0.1938  loss_dice_0: 1.434  loss_ce_1: 0.6439  loss_mask_1: 0.1849  loss_dice_1: 1.315  loss_ce_2: 0.6455  loss_mask_2: 0.175  loss_dice_2: 1.292  loss_ce_3: 0.5859  loss_mask_3: 0.1775  loss_dice_3: 1.23  loss_ce_4: 0.5437  loss_mask_4: 0.175  loss_dice_4: 1.225  loss_ce_5: 0.5407  loss_mask_5: 0.1744  loss_dice_5: 1.252  loss_ce_6: 0.514  loss_mask_6: 0.1743  loss_dice_6: 1.222  loss_ce_7: 0.5458  loss_mask_7: 0.1733  loss_dice_7: 1.249  loss_ce_8: 0.5467  loss_mask_8: 0.1709  loss_dice_8: 1.203    time: 0.6174  last_time: 0.6546  data_time: 0.0272  last_data_time: 0.0212   lr: 0.0001  max_mem: 17165M
[08/23 13:47:37] d2.utils.events INFO:  eta: 0:00:12  iter: 979  total_loss: 20.89  loss_ce: 0.5684  loss_mask: 0.173  loss_dice: 1.242  loss_ce_0: 0.638  loss_mask_0: 0.2003  loss_dice_0: 1.479  loss_ce_1: 0.7113  loss_mask_1: 0.1848  loss_dice_1: 1.387  loss_ce_2: 0.6373  loss_mask_2: 0.1785  loss_dice_2: 1.313  loss_ce_3: 0.6197  loss_mask_3: 0.1742  loss_dice_3: 1.261  loss_ce_4: 0.5556  loss_mask_4: 0.1729  loss_dice_4: 1.242  loss_ce_5: 0.569  loss_mask_5: 0.1753  loss_dice_5: 1.254  loss_ce_6: 0.5642  loss_mask_6: 0.171  loss_dice_6: 1.229  loss_ce_7: 0.5546  loss_mask_7: 0.1726  loss_dice_7: 1.214  loss_ce_8: 0.5503  loss_mask_8: 0.1724  loss_dice_8: 1.264    time: 0.6172  last_time: 0.6062  data_time: 0.0271  last_data_time: 0.0247   lr: 0.0001  max_mem: 17165M
[08/23 13:47:50] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/model_final.pth
[08/23 13:47:52] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 21.53  loss_ce: 0.5708  loss_mask: 0.1782  loss_dice: 1.27  loss_ce_0: 0.7017  loss_mask_0: 0.2027  loss_dice_0: 1.533  loss_ce_1: 0.7221  loss_mask_1: 0.197  loss_dice_1: 1.446  loss_ce_2: 0.7349  loss_mask_2: 0.1799  loss_dice_2: 1.401  loss_ce_3: 0.6147  loss_mask_3: 0.1805  loss_dice_3: 1.329  loss_ce_4: 0.6125  loss_mask_4: 0.1815  loss_dice_4: 1.344  loss_ce_5: 0.6075  loss_mask_5: 0.18  loss_dice_5: 1.292  loss_ce_6: 0.5397  loss_mask_6: 0.1777  loss_dice_6: 1.278  loss_ce_7: 0.5951  loss_mask_7: 0.1805  loss_dice_7: 1.304  loss_ce_8: 0.595  loss_mask_8: 0.1807  loss_dice_8: 1.28    time: 0.6172  last_time: 0.6132  data_time: 0.0245  last_data_time: 0.0330   lr: 0.0001  max_mem: 17165M
[08/23 13:47:52] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:10:15 (0.6172 s / it)
[08/23 13:47:52] d2.engine.hooks INFO: Total training time: 0:10:21 (0:00:05 on hooks)
[08/23 13:47:52] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/23 13:47:53] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/23 13:47:53] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/23 13:47:53] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/23 13:47:53] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/23 13:47:53] d2.evaluation.evaluator INFO: Start inference on 250 batches
[08/23 13:48:00] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0028 s/iter. Inference: 0.2783 s/iter. Eval: 0.0782 s/iter. Total: 0.3593 s/iter. ETA=0:01:25
[08/23 13:48:05] d2.evaluation.evaluator INFO: Inference done 24/250. Dataloading: 0.0035 s/iter. Inference: 0.2997 s/iter. Eval: 0.0739 s/iter. Total: 0.3772 s/iter. ETA=0:01:25
[08/23 13:48:10] d2.evaluation.evaluator INFO: Inference done 38/250. Dataloading: 0.0038 s/iter. Inference: 0.2955 s/iter. Eval: 0.0721 s/iter. Total: 0.3714 s/iter. ETA=0:01:18
[08/23 13:48:15] d2.evaluation.evaluator INFO: Inference done 52/250. Dataloading: 0.0037 s/iter. Inference: 0.2936 s/iter. Eval: 0.0708 s/iter. Total: 0.3682 s/iter. ETA=0:01:12
[08/23 13:48:20] d2.evaluation.evaluator INFO: Inference done 66/250. Dataloading: 0.0042 s/iter. Inference: 0.2894 s/iter. Eval: 0.0746 s/iter. Total: 0.3682 s/iter. ETA=0:01:07
[08/23 13:48:26] d2.evaluation.evaluator INFO: Inference done 81/250. Dataloading: 0.0041 s/iter. Inference: 0.2860 s/iter. Eval: 0.0752 s/iter. Total: 0.3653 s/iter. ETA=0:01:01
[08/23 13:48:31] d2.evaluation.evaluator INFO: Inference done 95/250. Dataloading: 0.0042 s/iter. Inference: 0.2839 s/iter. Eval: 0.0781 s/iter. Total: 0.3662 s/iter. ETA=0:00:56
[08/23 13:48:36] d2.evaluation.evaluator INFO: Inference done 109/250. Dataloading: 0.0043 s/iter. Inference: 0.2842 s/iter. Eval: 0.0780 s/iter. Total: 0.3666 s/iter. ETA=0:00:51
[08/23 13:48:41] d2.evaluation.evaluator INFO: Inference done 124/250. Dataloading: 0.0042 s/iter. Inference: 0.2818 s/iter. Eval: 0.0783 s/iter. Total: 0.3645 s/iter. ETA=0:00:45
[08/23 13:48:47] d2.evaluation.evaluator INFO: Inference done 138/250. Dataloading: 0.0043 s/iter. Inference: 0.2820 s/iter. Eval: 0.0794 s/iter. Total: 0.3657 s/iter. ETA=0:00:40
[08/23 13:48:52] d2.evaluation.evaluator INFO: Inference done 153/250. Dataloading: 0.0042 s/iter. Inference: 0.2821 s/iter. Eval: 0.0779 s/iter. Total: 0.3643 s/iter. ETA=0:00:35
[08/23 13:48:57] d2.evaluation.evaluator INFO: Inference done 168/250. Dataloading: 0.0042 s/iter. Inference: 0.2811 s/iter. Eval: 0.0770 s/iter. Total: 0.3624 s/iter. ETA=0:00:29
[08/23 13:49:02] d2.evaluation.evaluator INFO: Inference done 182/250. Dataloading: 0.0043 s/iter. Inference: 0.2797 s/iter. Eval: 0.0783 s/iter. Total: 0.3624 s/iter. ETA=0:00:24
[08/23 13:49:07] d2.evaluation.evaluator INFO: Inference done 196/250. Dataloading: 0.0043 s/iter. Inference: 0.2799 s/iter. Eval: 0.0789 s/iter. Total: 0.3632 s/iter. ETA=0:00:19
[08/23 13:49:12] d2.evaluation.evaluator INFO: Inference done 210/250. Dataloading: 0.0042 s/iter. Inference: 0.2809 s/iter. Eval: 0.0783 s/iter. Total: 0.3635 s/iter. ETA=0:00:14
[08/23 13:49:18] d2.evaluation.evaluator INFO: Inference done 224/250. Dataloading: 0.0044 s/iter. Inference: 0.2811 s/iter. Eval: 0.0789 s/iter. Total: 0.3644 s/iter. ETA=0:00:09
[08/23 13:49:23] d2.evaluation.evaluator INFO: Inference done 239/250. Dataloading: 0.0043 s/iter. Inference: 0.2797 s/iter. Eval: 0.0788 s/iter. Total: 0.3629 s/iter. ETA=0:00:03
[08/23 13:49:27] d2.evaluation.evaluator INFO: Total inference time: 0:01:28.851109 (0.362658 s / iter per device, on 2 devices)
[08/23 13:49:27] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:08 (0.277925 s / iter per device, on 2 devices)
[08/23 13:49:27] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval2wiveqhm ...
[08/23 13:49:50] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 52.805 | 80.164 | 64.730 |      19       |
| Things | 42.597 | 79.611 | 53.444 |       8       |
| Stuff  | 60.230 | 80.566 | 72.938 |      11       |
[08/23 13:49:50] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.592 | 97.197 | 99.378 |     Stuff     |
| class_8  | 64.234 | 82.786 | 77.590 |     Stuff     |
| class_11 | 85.263 | 87.525 | 97.415 |     Stuff     |
| class_12 | 36.073 | 79.572 | 45.333 |     Stuff     |
| class_13 | 32.812 | 74.762 | 43.889 |     Stuff     |
| class_17 | 42.969 | 63.905 | 67.240 |     Stuff     |
| class_19 | 43.137 | 69.168 | 62.366 |     Stuff     |
| class_20 | 59.284 | 74.636 | 79.431 |     Stuff     |
| class_21 | 87.874 | 89.631 | 98.039 |     Stuff     |
| class_22 | 29.088 | 75.561 | 38.496 |     Stuff     |
| class_23 | 85.205 | 91.479 | 93.142 |     Stuff     |
| class_24 | 47.849 | 76.725 | 62.363 |    Things     |
| class_25 | 43.449 | 75.000 | 57.933 |    Things     |
| class_26 | 59.130 | 82.704 | 71.496 |    Things     |
| class_27 | 33.534 | 86.101 | 38.947 |    Things     |
| class_28 | 46.584 | 90.506 | 51.471 |    Things     |
| class_31 | 46.423 | 82.295 | 56.410 |    Things     |
| class_32 | 31.791 | 73.167 | 43.450 |    Things     |
| class_33 | 32.014 | 70.391 | 45.480 |    Things     |
[08/23 13:49:50] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/23 13:49:50] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/23 13:49:50] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/23 13:49:50] d2.evaluation.testing INFO: copypaste: 52.8055,80.1637,64.7299,42.5967,79.6110,53.4438,60.2300,80.5657,72.9379,96.5922,97.1972,99.3776,64.2342,82.7863,77.5904,85.2625,87.5253,97.4147,36.0725,79.5718,45.3333,32.8121,74.7617,43.8889,42.9695,63.9051,67.2395,43.1369,69.1678,62.3656,59.2840,74.6358,79.4311,87.8737,89.6312,98.0392,29.0878,75.5614,38.4956,85.2051,91.4791,93.1416,47.8485,76.7252,62.3635,43.4494,74.9999,57.9327,59.1298,82.7037,71.4959,33.5339,86.1005,38.9474,46.5839,90.5059,51.4706,46.4229,82.2952,56.4103,31.7912,73.1666,43.4505,32.0139,70.3911,45.4800
[08/26 09:28:57] detectron2 INFO: Rank of current process: 0. World size: 2
[08/26 09:28:58] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/26 09:28:58] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[08/26 09:28:58] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/26 09:28:58] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/26 09:28:58] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/config.yaml
[08/26 09:28:58] d2.utils.env INFO: Using a generated random seed 61987693
[08/26 09:29:02] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/26 09:29:02] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/26 09:29:03] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/26 09:29:03] d2.data.build INFO: Using training sampler TrainingSampler
[08/26 09:29:03] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/26 09:29:03] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/26 09:29:03] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/26 09:29:03] d2.data.build INFO: Making batched data loader with batch_size=4
[08/26 09:29:03] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/26 09:29:03] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/26 09:29:03] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /home/ids/ext-4208/FC/fc-clip/fcclip_cocopan_r50.pth ...
[08/26 09:29:04] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/26 09:29:04] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/26 09:29:04] d2.engine.train_loop INFO: Starting training from iteration 0
[08/26 09:29:23] d2.utils.events INFO:  eta: 0:10:42  iter: 19  total_loss: 34.5  loss_ce: 1.382  loss_mask: 0.2761  loss_dice: 1.548  loss_ce_0: 1.621  loss_mask_0: 0.2999  loss_dice_0: 1.878  loss_ce_1: 1.644  loss_mask_1: 0.291  loss_dice_1: 1.708  loss_ce_2: 1.483  loss_mask_2: 0.2884  loss_dice_2: 1.65  loss_ce_3: 1.408  loss_mask_3: 0.2773  loss_dice_3: 1.606  loss_ce_4: 1.417  loss_mask_4: 0.2773  loss_dice_4: 1.583  loss_ce_5: 1.35  loss_mask_5: 0.2808  loss_dice_5: 1.536  loss_ce_6: 1.35  loss_mask_6: 0.2775  loss_dice_6: 1.539  loss_ce_7: 1.391  loss_mask_7: 0.2774  loss_dice_7: 1.529  loss_ce_8: 1.398  loss_mask_8: 0.2759  loss_dice_8: 1.535    time: 0.6538  last_time: 0.6867  data_time: 0.1962  last_data_time: 0.0306   lr: 0.0001  max_mem: 16339M
[08/26 09:29:36] d2.utils.events INFO:  eta: 0:10:18  iter: 39  total_loss: 25.69  loss_ce: 0.8507  loss_mask: 0.2369  loss_dice: 1.367  loss_ce_0: 0.8924  loss_mask_0: 0.2689  loss_dice_0: 1.703  loss_ce_1: 1.007  loss_mask_1: 0.2593  loss_dice_1: 1.541  loss_ce_2: 0.963  loss_mask_2: 0.2422  loss_dice_2: 1.472  loss_ce_3: 0.9246  loss_mask_3: 0.2455  loss_dice_3: 1.425  loss_ce_4: 0.8799  loss_mask_4: 0.2435  loss_dice_4: 1.435  loss_ce_5: 0.8719  loss_mask_5: 0.2401  loss_dice_5: 1.39  loss_ce_6: 0.8764  loss_mask_6: 0.2432  loss_dice_6: 1.411  loss_ce_7: 0.8545  loss_mask_7: 0.2408  loss_dice_7: 1.404  loss_ce_8: 0.897  loss_mask_8: 0.239  loss_dice_8: 1.387    time: 0.6460  last_time: 0.6642  data_time: 0.0315  last_data_time: 0.0314   lr: 0.0001  max_mem: 16339M
[08/26 09:29:49] d2.utils.events INFO:  eta: 0:09:56  iter: 59  total_loss: 26.15  loss_ce: 0.857  loss_mask: 0.2064  loss_dice: 1.427  loss_ce_0: 0.8698  loss_mask_0: 0.2365  loss_dice_0: 1.696  loss_ce_1: 0.9924  loss_mask_1: 0.2244  loss_dice_1: 1.616  loss_ce_2: 0.9132  loss_mask_2: 0.2147  loss_dice_2: 1.528  loss_ce_3: 0.8703  loss_mask_3: 0.209  loss_dice_3: 1.465  loss_ce_4: 0.8243  loss_mask_4: 0.2083  loss_dice_4: 1.493  loss_ce_5: 0.8263  loss_mask_5: 0.2076  loss_dice_5: 1.498  loss_ce_6: 0.8258  loss_mask_6: 0.2058  loss_dice_6: 1.477  loss_ce_7: 0.8249  loss_mask_7: 0.2048  loss_dice_7: 1.441  loss_ce_8: 0.8318  loss_mask_8: 0.2074  loss_dice_8: 1.425    time: 0.6380  last_time: 0.5980  data_time: 0.0316  last_data_time: 0.0306   lr: 0.0001  max_mem: 16339M
[08/26 09:30:01] d2.utils.events INFO:  eta: 0:09:36  iter: 79  total_loss: 23.85  loss_ce: 0.7484  loss_mask: 0.2127  loss_dice: 1.325  loss_ce_0: 0.82  loss_mask_0: 0.2391  loss_dice_0: 1.58  loss_ce_1: 0.9301  loss_mask_1: 0.2236  loss_dice_1: 1.46  loss_ce_2: 0.8418  loss_mask_2: 0.2132  loss_dice_2: 1.427  loss_ce_3: 0.8081  loss_mask_3: 0.2165  loss_dice_3: 1.322  loss_ce_4: 0.769  loss_mask_4: 0.2186  loss_dice_4: 1.34  loss_ce_5: 0.7666  loss_mask_5: 0.2151  loss_dice_5: 1.322  loss_ce_6: 0.7838  loss_mask_6: 0.2124  loss_dice_6: 1.313  loss_ce_7: 0.7377  loss_mask_7: 0.2139  loss_dice_7: 1.326  loss_ce_8: 0.7548  loss_mask_8: 0.2133  loss_dice_8: 1.314    time: 0.6304  last_time: 0.6253  data_time: 0.0294  last_data_time: 0.0250   lr: 0.0001  max_mem: 16339M
[08/26 09:30:13] d2.utils.events INFO:  eta: 0:09:22  iter: 99  total_loss: 23.46  loss_ce: 0.6895  loss_mask: 0.1955  loss_dice: 1.281  loss_ce_0: 0.7455  loss_mask_0: 0.2388  loss_dice_0: 1.586  loss_ce_1: 0.8547  loss_mask_1: 0.2265  loss_dice_1: 1.492  loss_ce_2: 0.8092  loss_mask_2: 0.2095  loss_dice_2: 1.38  loss_ce_3: 0.7289  loss_mask_3: 0.2021  loss_dice_3: 1.342  loss_ce_4: 0.7361  loss_mask_4: 0.2017  loss_dice_4: 1.371  loss_ce_5: 0.7001  loss_mask_5: 0.199  loss_dice_5: 1.328  loss_ce_6: 0.672  loss_mask_6: 0.1967  loss_dice_6: 1.295  loss_ce_7: 0.6831  loss_mask_7: 0.198  loss_dice_7: 1.326  loss_ce_8: 0.7013  loss_mask_8: 0.1979  loss_dice_8: 1.322    time: 0.6292  last_time: 0.5811  data_time: 0.0279  last_data_time: 0.0289   lr: 0.0001  max_mem: 16339M
[08/26 09:30:26] d2.utils.events INFO:  eta: 0:09:09  iter: 119  total_loss: 23.03  loss_ce: 0.6881  loss_mask: 0.2261  loss_dice: 1.294  loss_ce_0: 0.7778  loss_mask_0: 0.2679  loss_dice_0: 1.557  loss_ce_1: 0.8577  loss_mask_1: 0.2417  loss_dice_1: 1.467  loss_ce_2: 0.8094  loss_mask_2: 0.2296  loss_dice_2: 1.401  loss_ce_3: 0.7197  loss_mask_3: 0.2261  loss_dice_3: 1.363  loss_ce_4: 0.6992  loss_mask_4: 0.2232  loss_dice_4: 1.343  loss_ce_5: 0.6815  loss_mask_5: 0.2241  loss_dice_5: 1.327  loss_ce_6: 0.6701  loss_mask_6: 0.2254  loss_dice_6: 1.286  loss_ce_7: 0.654  loss_mask_7: 0.2265  loss_dice_7: 1.33  loss_ce_8: 0.6733  loss_mask_8: 0.224  loss_dice_8: 1.341    time: 0.6268  last_time: 0.5847  data_time: 0.0272  last_data_time: 0.0271   lr: 0.0001  max_mem: 16361M
[08/26 09:30:38] d2.utils.events INFO:  eta: 0:08:54  iter: 139  total_loss: 23.73  loss_ce: 0.6761  loss_mask: 0.2029  loss_dice: 1.328  loss_ce_0: 0.7716  loss_mask_0: 0.2355  loss_dice_0: 1.629  loss_ce_1: 0.886  loss_mask_1: 0.2132  loss_dice_1: 1.512  loss_ce_2: 0.7769  loss_mask_2: 0.203  loss_dice_2: 1.459  loss_ce_3: 0.7358  loss_mask_3: 0.2035  loss_dice_3: 1.396  loss_ce_4: 0.7342  loss_mask_4: 0.2049  loss_dice_4: 1.373  loss_ce_5: 0.6891  loss_mask_5: 0.2018  loss_dice_5: 1.369  loss_ce_6: 0.6938  loss_mask_6: 0.2072  loss_dice_6: 1.33  loss_ce_7: 0.6876  loss_mask_7: 0.2066  loss_dice_7: 1.351  loss_ce_8: 0.6737  loss_mask_8: 0.2013  loss_dice_8: 1.348    time: 0.6236  last_time: 0.6049  data_time: 0.0242  last_data_time: 0.0210   lr: 0.0001  max_mem: 16361M
[08/26 09:30:50] d2.utils.events INFO:  eta: 0:08:37  iter: 159  total_loss: 23.05  loss_ce: 0.6852  loss_mask: 0.1941  loss_dice: 1.291  loss_ce_0: 0.7283  loss_mask_0: 0.2188  loss_dice_0: 1.573  loss_ce_1: 0.8507  loss_mask_1: 0.2064  loss_dice_1: 1.45  loss_ce_2: 0.7882  loss_mask_2: 0.2014  loss_dice_2: 1.378  loss_ce_3: 0.7173  loss_mask_3: 0.1911  loss_dice_3: 1.331  loss_ce_4: 0.696  loss_mask_4: 0.1906  loss_dice_4: 1.294  loss_ce_5: 0.6778  loss_mask_5: 0.19  loss_dice_5: 1.33  loss_ce_6: 0.6979  loss_mask_6: 0.1941  loss_dice_6: 1.299  loss_ce_7: 0.6623  loss_mask_7: 0.192  loss_dice_7: 1.309  loss_ce_8: 0.6748  loss_mask_8: 0.1912  loss_dice_8: 1.326    time: 0.6199  last_time: 0.5805  data_time: 0.0222  last_data_time: 0.0203   lr: 0.0001  max_mem: 16361M
[08/26 09:31:02] d2.utils.events INFO:  eta: 0:08:24  iter: 179  total_loss: 22.46  loss_ce: 0.6591  loss_mask: 0.199  loss_dice: 1.267  loss_ce_0: 0.7345  loss_mask_0: 0.2166  loss_dice_0: 1.526  loss_ce_1: 0.8308  loss_mask_1: 0.2053  loss_dice_1: 1.454  loss_ce_2: 0.7973  loss_mask_2: 0.2044  loss_dice_2: 1.357  loss_ce_3: 0.7065  loss_mask_3: 0.203  loss_dice_3: 1.326  loss_ce_4: 0.7267  loss_mask_4: 0.2049  loss_dice_4: 1.334  loss_ce_5: 0.6995  loss_mask_5: 0.203  loss_dice_5: 1.287  loss_ce_6: 0.681  loss_mask_6: 0.2046  loss_dice_6: 1.273  loss_ce_7: 0.6649  loss_mask_7: 0.2006  loss_dice_7: 1.27  loss_ce_8: 0.6625  loss_mask_8: 0.1997  loss_dice_8: 1.298    time: 0.6183  last_time: 0.6091  data_time: 0.0213  last_data_time: 0.0264   lr: 0.0001  max_mem: 16361M
[08/26 09:31:14] d2.utils.events INFO:  eta: 0:08:09  iter: 199  total_loss: 22.86  loss_ce: 0.638  loss_mask: 0.1853  loss_dice: 1.301  loss_ce_0: 0.6843  loss_mask_0: 0.2186  loss_dice_0: 1.564  loss_ce_1: 0.8105  loss_mask_1: 0.2001  loss_dice_1: 1.504  loss_ce_2: 0.717  loss_mask_2: 0.1958  loss_dice_2: 1.46  loss_ce_3: 0.71  loss_mask_3: 0.1863  loss_dice_3: 1.36  loss_ce_4: 0.6968  loss_mask_4: 0.1927  loss_dice_4: 1.309  loss_ce_5: 0.7008  loss_mask_5: 0.1863  loss_dice_5: 1.316  loss_ce_6: 0.6211  loss_mask_6: 0.1868  loss_dice_6: 1.295  loss_ce_7: 0.6208  loss_mask_7: 0.1879  loss_dice_7: 1.306  loss_ce_8: 0.6771  loss_mask_8: 0.1858  loss_dice_8: 1.29    time: 0.6147  last_time: 0.6131  data_time: 0.0226  last_data_time: 0.0208   lr: 0.0001  max_mem: 16361M
[08/26 09:31:26] d2.utils.events INFO:  eta: 0:07:55  iter: 219  total_loss: 23.21  loss_ce: 0.644  loss_mask: 0.1938  loss_dice: 1.301  loss_ce_0: 0.7311  loss_mask_0: 0.2164  loss_dice_0: 1.586  loss_ce_1: 0.8326  loss_mask_1: 0.2017  loss_dice_1: 1.492  loss_ce_2: 0.7546  loss_mask_2: 0.2016  loss_dice_2: 1.41  loss_ce_3: 0.7013  loss_mask_3: 0.1931  loss_dice_3: 1.33  loss_ce_4: 0.6926  loss_mask_4: 0.1917  loss_dice_4: 1.337  loss_ce_5: 0.6597  loss_mask_5: 0.1935  loss_dice_5: 1.333  loss_ce_6: 0.6404  loss_mask_6: 0.1926  loss_dice_6: 1.316  loss_ce_7: 0.6506  loss_mask_7: 0.1933  loss_dice_7: 1.31  loss_ce_8: 0.6597  loss_mask_8: 0.1921  loss_dice_8: 1.289    time: 0.6135  last_time: 0.5887  data_time: 0.0223  last_data_time: 0.0250   lr: 0.0001  max_mem: 16361M
[08/26 09:31:38] d2.utils.events INFO:  eta: 0:07:42  iter: 239  total_loss: 23  loss_ce: 0.6864  loss_mask: 0.1885  loss_dice: 1.342  loss_ce_0: 0.7022  loss_mask_0: 0.2135  loss_dice_0: 1.607  loss_ce_1: 0.8258  loss_mask_1: 0.2046  loss_dice_1: 1.515  loss_ce_2: 0.755  loss_mask_2: 0.196  loss_dice_2: 1.458  loss_ce_3: 0.7063  loss_mask_3: 0.1944  loss_dice_3: 1.402  loss_ce_4: 0.6648  loss_mask_4: 0.195  loss_dice_4: 1.406  loss_ce_5: 0.6737  loss_mask_5: 0.1918  loss_dice_5: 1.4  loss_ce_6: 0.6512  loss_mask_6: 0.1929  loss_dice_6: 1.353  loss_ce_7: 0.654  loss_mask_7: 0.19  loss_dice_7: 1.376  loss_ce_8: 0.6688  loss_mask_8: 0.1909  loss_dice_8: 1.387    time: 0.6122  last_time: 0.5928  data_time: 0.0211  last_data_time: 0.0231   lr: 0.0001  max_mem: 16361M
[08/26 09:31:50] d2.utils.events INFO:  eta: 0:07:29  iter: 259  total_loss: 22.85  loss_ce: 0.6627  loss_mask: 0.1938  loss_dice: 1.302  loss_ce_0: 0.7755  loss_mask_0: 0.2251  loss_dice_0: 1.558  loss_ce_1: 0.8159  loss_mask_1: 0.2049  loss_dice_1: 1.478  loss_ce_2: 0.752  loss_mask_2: 0.1983  loss_dice_2: 1.388  loss_ce_3: 0.7249  loss_mask_3: 0.1979  loss_dice_3: 1.325  loss_ce_4: 0.7018  loss_mask_4: 0.1944  loss_dice_4: 1.324  loss_ce_5: 0.7126  loss_mask_5: 0.195  loss_dice_5: 1.334  loss_ce_6: 0.6455  loss_mask_6: 0.1947  loss_dice_6: 1.338  loss_ce_7: 0.6692  loss_mask_7: 0.1938  loss_dice_7: 1.318  loss_ce_8: 0.668  loss_mask_8: 0.1929  loss_dice_8: 1.303    time: 0.6113  last_time: 0.5824  data_time: 0.0218  last_data_time: 0.0169   lr: 0.0001  max_mem: 16361M
[08/26 09:32:02] d2.utils.events INFO:  eta: 0:07:17  iter: 279  total_loss: 22.59  loss_ce: 0.6612  loss_mask: 0.1899  loss_dice: 1.298  loss_ce_0: 0.7297  loss_mask_0: 0.2164  loss_dice_0: 1.476  loss_ce_1: 0.8327  loss_mask_1: 0.1997  loss_dice_1: 1.435  loss_ce_2: 0.7393  loss_mask_2: 0.1946  loss_dice_2: 1.397  loss_ce_3: 0.6662  loss_mask_3: 0.1898  loss_dice_3: 1.335  loss_ce_4: 0.6683  loss_mask_4: 0.1926  loss_dice_4: 1.312  loss_ce_5: 0.6809  loss_mask_5: 0.1935  loss_dice_5: 1.3  loss_ce_6: 0.664  loss_mask_6: 0.1879  loss_dice_6: 1.3  loss_ce_7: 0.6455  loss_mask_7: 0.1885  loss_dice_7: 1.26  loss_ce_8: 0.6322  loss_mask_8: 0.1873  loss_dice_8: 1.265    time: 0.6112  last_time: 0.6128  data_time: 0.0213  last_data_time: 0.0272   lr: 0.0001  max_mem: 16620M
[08/26 09:32:14] d2.utils.events INFO:  eta: 0:07:05  iter: 299  total_loss: 23.12  loss_ce: 0.6618  loss_mask: 0.1861  loss_dice: 1.346  loss_ce_0: 0.7086  loss_mask_0: 0.2276  loss_dice_0: 1.556  loss_ce_1: 0.8097  loss_mask_1: 0.2045  loss_dice_1: 1.468  loss_ce_2: 0.7429  loss_mask_2: 0.1882  loss_dice_2: 1.414  loss_ce_3: 0.7044  loss_mask_3: 0.2036  loss_dice_3: 1.366  loss_ce_4: 0.6933  loss_mask_4: 0.196  loss_dice_4: 1.352  loss_ce_5: 0.6941  loss_mask_5: 0.1905  loss_dice_5: 1.313  loss_ce_6: 0.6364  loss_mask_6: 0.1863  loss_dice_6: 1.338  loss_ce_7: 0.6816  loss_mask_7: 0.1867  loss_dice_7: 1.306  loss_ce_8: 0.6795  loss_mask_8: 0.1868  loss_dice_8: 1.279    time: 0.6111  last_time: 0.6000  data_time: 0.0238  last_data_time: 0.0237   lr: 0.0001  max_mem: 16620M
[08/26 09:32:27] d2.utils.events INFO:  eta: 0:06:53  iter: 319  total_loss: 22.28  loss_ce: 0.6241  loss_mask: 0.1757  loss_dice: 1.276  loss_ce_0: 0.693  loss_mask_0: 0.1941  loss_dice_0: 1.565  loss_ce_1: 0.8209  loss_mask_1: 0.1906  loss_dice_1: 1.437  loss_ce_2: 0.7072  loss_mask_2: 0.1794  loss_dice_2: 1.372  loss_ce_3: 0.6598  loss_mask_3: 0.1794  loss_dice_3: 1.344  loss_ce_4: 0.6438  loss_mask_4: 0.1733  loss_dice_4: 1.305  loss_ce_5: 0.6381  loss_mask_5: 0.1742  loss_dice_5: 1.303  loss_ce_6: 0.6157  loss_mask_6: 0.1734  loss_dice_6: 1.309  loss_ce_7: 0.6194  loss_mask_7: 0.1729  loss_dice_7: 1.263  loss_ce_8: 0.6373  loss_mask_8: 0.1756  loss_dice_8: 1.304    time: 0.6110  last_time: 0.6502  data_time: 0.0205  last_data_time: 0.0198   lr: 0.0001  max_mem: 16620M
[08/26 09:32:39] d2.utils.events INFO:  eta: 0:06:41  iter: 339  total_loss: 22.5  loss_ce: 0.6001  loss_mask: 0.186  loss_dice: 1.35  loss_ce_0: 0.6513  loss_mask_0: 0.2145  loss_dice_0: 1.553  loss_ce_1: 0.75  loss_mask_1: 0.2015  loss_dice_1: 1.461  loss_ce_2: 0.6833  loss_mask_2: 0.1939  loss_dice_2: 1.406  loss_ce_3: 0.6194  loss_mask_3: 0.1907  loss_dice_3: 1.348  loss_ce_4: 0.5973  loss_mask_4: 0.1917  loss_dice_4: 1.325  loss_ce_5: 0.6176  loss_mask_5: 0.189  loss_dice_5: 1.348  loss_ce_6: 0.578  loss_mask_6: 0.1881  loss_dice_6: 1.337  loss_ce_7: 0.5726  loss_mask_7: 0.1875  loss_dice_7: 1.306  loss_ce_8: 0.5979  loss_mask_8: 0.1849  loss_dice_8: 1.314    time: 0.6118  last_time: 0.6438  data_time: 0.0243  last_data_time: 0.0218   lr: 0.0001  max_mem: 16620M
[08/26 09:32:52] d2.utils.events INFO:  eta: 0:06:29  iter: 359  total_loss: 22.69  loss_ce: 0.6192  loss_mask: 0.185  loss_dice: 1.347  loss_ce_0: 0.6906  loss_mask_0: 0.2146  loss_dice_0: 1.556  loss_ce_1: 0.7831  loss_mask_1: 0.2066  loss_dice_1: 1.49  loss_ce_2: 0.7187  loss_mask_2: 0.1981  loss_dice_2: 1.414  loss_ce_3: 0.6795  loss_mask_3: 0.1918  loss_dice_3: 1.372  loss_ce_4: 0.6334  loss_mask_4: 0.1919  loss_dice_4: 1.389  loss_ce_5: 0.6382  loss_mask_5: 0.1904  loss_dice_5: 1.367  loss_ce_6: 0.6181  loss_mask_6: 0.1874  loss_dice_6: 1.332  loss_ce_7: 0.6168  loss_mask_7: 0.1883  loss_dice_7: 1.342  loss_ce_8: 0.6231  loss_mask_8: 0.1898  loss_dice_8: 1.356    time: 0.6121  last_time: 0.6076  data_time: 0.0221  last_data_time: 0.0210   lr: 0.0001  max_mem: 16620M
[08/26 09:33:03] d2.utils.events INFO:  eta: 0:06:16  iter: 379  total_loss: 21.59  loss_ce: 0.6035  loss_mask: 0.1936  loss_dice: 1.213  loss_ce_0: 0.6998  loss_mask_0: 0.2166  loss_dice_0: 1.467  loss_ce_1: 0.7672  loss_mask_1: 0.2095  loss_dice_1: 1.387  loss_ce_2: 0.7201  loss_mask_2: 0.1989  loss_dice_2: 1.307  loss_ce_3: 0.6844  loss_mask_3: 0.1959  loss_dice_3: 1.27  loss_ce_4: 0.6689  loss_mask_4: 0.1949  loss_dice_4: 1.213  loss_ce_5: 0.6326  loss_mask_5: 0.1943  loss_dice_5: 1.256  loss_ce_6: 0.6088  loss_mask_6: 0.1913  loss_dice_6: 1.269  loss_ce_7: 0.6194  loss_mask_7: 0.1942  loss_dice_7: 1.238  loss_ce_8: 0.6418  loss_mask_8: 0.1958  loss_dice_8: 1.242    time: 0.6109  last_time: 0.5961  data_time: 0.0219  last_data_time: 0.0179   lr: 0.0001  max_mem: 16620M
[08/26 09:33:16] d2.utils.events INFO:  eta: 0:06:04  iter: 399  total_loss: 21.95  loss_ce: 0.6102  loss_mask: 0.1819  loss_dice: 1.272  loss_ce_0: 0.6827  loss_mask_0: 0.2027  loss_dice_0: 1.489  loss_ce_1: 0.7619  loss_mask_1: 0.1897  loss_dice_1: 1.434  loss_ce_2: 0.6966  loss_mask_2: 0.187  loss_dice_2: 1.364  loss_ce_3: 0.6766  loss_mask_3: 0.185  loss_dice_3: 1.273  loss_ce_4: 0.6397  loss_mask_4: 0.1876  loss_dice_4: 1.296  loss_ce_5: 0.6348  loss_mask_5: 0.1833  loss_dice_5: 1.304  loss_ce_6: 0.5826  loss_mask_6: 0.1825  loss_dice_6: 1.242  loss_ce_7: 0.5956  loss_mask_7: 0.1831  loss_dice_7: 1.29  loss_ce_8: 0.5876  loss_mask_8: 0.1821  loss_dice_8: 1.27    time: 0.6103  last_time: 0.5923  data_time: 0.0227  last_data_time: 0.0258   lr: 0.0001  max_mem: 16620M
[08/26 09:33:28] d2.utils.events INFO:  eta: 0:05:52  iter: 419  total_loss: 21.52  loss_ce: 0.6195  loss_mask: 0.1823  loss_dice: 1.235  loss_ce_0: 0.6965  loss_mask_0: 0.2086  loss_dice_0: 1.522  loss_ce_1: 0.7517  loss_mask_1: 0.1975  loss_dice_1: 1.395  loss_ce_2: 0.7366  loss_mask_2: 0.1903  loss_dice_2: 1.321  loss_ce_3: 0.6534  loss_mask_3: 0.1852  loss_dice_3: 1.279  loss_ce_4: 0.6158  loss_mask_4: 0.1859  loss_dice_4: 1.258  loss_ce_5: 0.6075  loss_mask_5: 0.1809  loss_dice_5: 1.267  loss_ce_6: 0.6129  loss_mask_6: 0.1812  loss_dice_6: 1.27  loss_ce_7: 0.5954  loss_mask_7: 0.1813  loss_dice_7: 1.26  loss_ce_8: 0.6034  loss_mask_8: 0.1849  loss_dice_8: 1.258    time: 0.6103  last_time: 0.5930  data_time: 0.0257  last_data_time: 0.0229   lr: 0.0001  max_mem: 16620M
[08/26 09:33:40] d2.utils.events INFO:  eta: 0:05:40  iter: 439  total_loss: 21.64  loss_ce: 0.6037  loss_mask: 0.1707  loss_dice: 1.308  loss_ce_0: 0.6321  loss_mask_0: 0.1926  loss_dice_0: 1.554  loss_ce_1: 0.7711  loss_mask_1: 0.1822  loss_dice_1: 1.42  loss_ce_2: 0.6716  loss_mask_2: 0.18  loss_dice_2: 1.404  loss_ce_3: 0.6689  loss_mask_3: 0.1762  loss_dice_3: 1.311  loss_ce_4: 0.6535  loss_mask_4: 0.1727  loss_dice_4: 1.36  loss_ce_5: 0.6192  loss_mask_5: 0.1718  loss_dice_5: 1.345  loss_ce_6: 0.5792  loss_mask_6: 0.1721  loss_dice_6: 1.305  loss_ce_7: 0.5954  loss_mask_7: 0.1714  loss_dice_7: 1.324  loss_ce_8: 0.5611  loss_mask_8: 0.172  loss_dice_8: 1.36    time: 0.6101  last_time: 0.5858  data_time: 0.0241  last_data_time: 0.0233   lr: 0.0001  max_mem: 16754M
[08/26 09:33:52] d2.utils.events INFO:  eta: 0:05:28  iter: 459  total_loss: 21.46  loss_ce: 0.5786  loss_mask: 0.1896  loss_dice: 1.228  loss_ce_0: 0.6581  loss_mask_0: 0.2091  loss_dice_0: 1.465  loss_ce_1: 0.7381  loss_mask_1: 0.198  loss_dice_1: 1.371  loss_ce_2: 0.6742  loss_mask_2: 0.1904  loss_dice_2: 1.303  loss_ce_3: 0.6426  loss_mask_3: 0.1906  loss_dice_3: 1.289  loss_ce_4: 0.6278  loss_mask_4: 0.1889  loss_dice_4: 1.271  loss_ce_5: 0.6032  loss_mask_5: 0.1899  loss_dice_5: 1.276  loss_ce_6: 0.5961  loss_mask_6: 0.1893  loss_dice_6: 1.279  loss_ce_7: 0.5837  loss_mask_7: 0.1915  loss_dice_7: 1.246  loss_ce_8: 0.5845  loss_mask_8: 0.1879  loss_dice_8: 1.298    time: 0.6101  last_time: 0.5845  data_time: 0.0249  last_data_time: 0.0262   lr: 0.0001  max_mem: 16754M
[08/26 09:34:05] d2.utils.events INFO:  eta: 0:05:16  iter: 479  total_loss: 20.58  loss_ce: 0.5739  loss_mask: 0.182  loss_dice: 1.179  loss_ce_0: 0.6781  loss_mask_0: 0.2169  loss_dice_0: 1.404  loss_ce_1: 0.751  loss_mask_1: 0.1986  loss_dice_1: 1.335  loss_ce_2: 0.6976  loss_mask_2: 0.1909  loss_dice_2: 1.315  loss_ce_3: 0.65  loss_mask_3: 0.1876  loss_dice_3: 1.225  loss_ce_4: 0.6044  loss_mask_4: 0.1848  loss_dice_4: 1.223  loss_ce_5: 0.5818  loss_mask_5: 0.1844  loss_dice_5: 1.206  loss_ce_6: 0.5615  loss_mask_6: 0.1789  loss_dice_6: 1.218  loss_ce_7: 0.5799  loss_mask_7: 0.1778  loss_dice_7: 1.203  loss_ce_8: 0.5895  loss_mask_8: 0.1795  loss_dice_8: 1.213    time: 0.6105  last_time: 0.6119  data_time: 0.0240  last_data_time: 0.0214   lr: 0.0001  max_mem: 16754M
[08/26 09:34:17] d2.utils.events INFO:  eta: 0:05:04  iter: 499  total_loss: 21.13  loss_ce: 0.5793  loss_mask: 0.1778  loss_dice: 1.286  loss_ce_0: 0.6268  loss_mask_0: 0.2026  loss_dice_0: 1.544  loss_ce_1: 0.7511  loss_mask_1: 0.1881  loss_dice_1: 1.442  loss_ce_2: 0.6689  loss_mask_2: 0.1816  loss_dice_2: 1.367  loss_ce_3: 0.6057  loss_mask_3: 0.1809  loss_dice_3: 1.313  loss_ce_4: 0.6232  loss_mask_4: 0.1806  loss_dice_4: 1.29  loss_ce_5: 0.6066  loss_mask_5: 0.177  loss_dice_5: 1.304  loss_ce_6: 0.5825  loss_mask_6: 0.1728  loss_dice_6: 1.308  loss_ce_7: 0.5786  loss_mask_7: 0.1784  loss_dice_7: 1.282  loss_ce_8: 0.5807  loss_mask_8: 0.1788  loss_dice_8: 1.284    time: 0.6106  last_time: 0.5891  data_time: 0.0245  last_data_time: 0.0242   lr: 0.0001  max_mem: 16754M
[08/26 09:34:29] d2.utils.events INFO:  eta: 0:04:51  iter: 519  total_loss: 21.22  loss_ce: 0.6104  loss_mask: 0.1856  loss_dice: 1.195  loss_ce_0: 0.7076  loss_mask_0: 0.221  loss_dice_0: 1.404  loss_ce_1: 0.7642  loss_mask_1: 0.2069  loss_dice_1: 1.329  loss_ce_2: 0.699  loss_mask_2: 0.2001  loss_dice_2: 1.284  loss_ce_3: 0.6631  loss_mask_3: 0.1937  loss_dice_3: 1.209  loss_ce_4: 0.6214  loss_mask_4: 0.1945  loss_dice_4: 1.228  loss_ce_5: 0.6199  loss_mask_5: 0.1925  loss_dice_5: 1.269  loss_ce_6: 0.617  loss_mask_6: 0.1897  loss_dice_6: 1.224  loss_ce_7: 0.6005  loss_mask_7: 0.1894  loss_dice_7: 1.215  loss_ce_8: 0.6183  loss_mask_8: 0.1865  loss_dice_8: 1.186    time: 0.6105  last_time: 0.6114  data_time: 0.0221  last_data_time: 0.0218   lr: 0.0001  max_mem: 16754M
[08/26 09:34:42] d2.utils.events INFO:  eta: 0:04:39  iter: 539  total_loss: 22.2  loss_ce: 0.624  loss_mask: 0.1841  loss_dice: 1.285  loss_ce_0: 0.7193  loss_mask_0: 0.1959  loss_dice_0: 1.486  loss_ce_1: 0.789  loss_mask_1: 0.1842  loss_dice_1: 1.424  loss_ce_2: 0.7248  loss_mask_2: 0.1805  loss_dice_2: 1.357  loss_ce_3: 0.6737  loss_mask_3: 0.1787  loss_dice_3: 1.306  loss_ce_4: 0.6457  loss_mask_4: 0.176  loss_dice_4: 1.326  loss_ce_5: 0.6536  loss_mask_5: 0.1797  loss_dice_5: 1.303  loss_ce_6: 0.6335  loss_mask_6: 0.1764  loss_dice_6: 1.27  loss_ce_7: 0.6465  loss_mask_7: 0.1824  loss_dice_7: 1.309  loss_ce_8: 0.6287  loss_mask_8: 0.1806  loss_dice_8: 1.285    time: 0.6107  last_time: 0.6118  data_time: 0.0244  last_data_time: 0.0272   lr: 0.0001  max_mem: 16754M
[08/26 09:34:54] d2.utils.events INFO:  eta: 0:04:27  iter: 559  total_loss: 21.07  loss_ce: 0.6004  loss_mask: 0.1786  loss_dice: 1.239  loss_ce_0: 0.6297  loss_mask_0: 0.2148  loss_dice_0: 1.519  loss_ce_1: 0.7554  loss_mask_1: 0.1869  loss_dice_1: 1.415  loss_ce_2: 0.6566  loss_mask_2: 0.1805  loss_dice_2: 1.318  loss_ce_3: 0.6332  loss_mask_3: 0.1822  loss_dice_3: 1.273  loss_ce_4: 0.6361  loss_mask_4: 0.1821  loss_dice_4: 1.271  loss_ce_5: 0.6199  loss_mask_5: 0.1802  loss_dice_5: 1.284  loss_ce_6: 0.5686  loss_mask_6: 0.1816  loss_dice_6: 1.263  loss_ce_7: 0.5835  loss_mask_7: 0.1823  loss_dice_7: 1.267  loss_ce_8: 0.5842  loss_mask_8: 0.1797  loss_dice_8: 1.262    time: 0.6107  last_time: 0.6109  data_time: 0.0244  last_data_time: 0.0217   lr: 0.0001  max_mem: 16754M
[08/26 09:35:06] d2.utils.events INFO:  eta: 0:04:15  iter: 579  total_loss: 21.38  loss_ce: 0.592  loss_mask: 0.1951  loss_dice: 1.217  loss_ce_0: 0.6693  loss_mask_0: 0.2191  loss_dice_0: 1.481  loss_ce_1: 0.7542  loss_mask_1: 0.2114  loss_dice_1: 1.363  loss_ce_2: 0.6916  loss_mask_2: 0.2034  loss_dice_2: 1.333  loss_ce_3: 0.6561  loss_mask_3: 0.1966  loss_dice_3: 1.253  loss_ce_4: 0.6281  loss_mask_4: 0.2014  loss_dice_4: 1.301  loss_ce_5: 0.6185  loss_mask_5: 0.1978  loss_dice_5: 1.253  loss_ce_6: 0.5959  loss_mask_6: 0.1961  loss_dice_6: 1.224  loss_ce_7: 0.6176  loss_mask_7: 0.2  loss_dice_7: 1.227  loss_ce_8: 0.6185  loss_mask_8: 0.1975  loss_dice_8: 1.224    time: 0.6108  last_time: 0.6018  data_time: 0.0263  last_data_time: 0.0246   lr: 0.0001  max_mem: 16754M
[08/26 09:35:19] d2.utils.events INFO:  eta: 0:04:03  iter: 599  total_loss: 21.52  loss_ce: 0.577  loss_mask: 0.1649  loss_dice: 1.246  loss_ce_0: 0.6899  loss_mask_0: 0.2034  loss_dice_0: 1.505  loss_ce_1: 0.7278  loss_mask_1: 0.1774  loss_dice_1: 1.419  loss_ce_2: 0.6529  loss_mask_2: 0.1707  loss_dice_2: 1.346  loss_ce_3: 0.6084  loss_mask_3: 0.1661  loss_dice_3: 1.274  loss_ce_4: 0.5816  loss_mask_4: 0.1666  loss_dice_4: 1.28  loss_ce_5: 0.5828  loss_mask_5: 0.1656  loss_dice_5: 1.25  loss_ce_6: 0.6022  loss_mask_6: 0.1644  loss_dice_6: 1.249  loss_ce_7: 0.5964  loss_mask_7: 0.1638  loss_dice_7: 1.23  loss_ce_8: 0.5979  loss_mask_8: 0.1634  loss_dice_8: 1.243    time: 0.6114  last_time: 0.6420  data_time: 0.0229  last_data_time: 0.0240   lr: 0.0001  max_mem: 17227M
[08/26 09:35:31] d2.utils.events INFO:  eta: 0:03:51  iter: 619  total_loss: 21.12  loss_ce: 0.5222  loss_mask: 0.1837  loss_dice: 1.242  loss_ce_0: 0.6469  loss_mask_0: 0.2189  loss_dice_0: 1.498  loss_ce_1: 0.7026  loss_mask_1: 0.1974  loss_dice_1: 1.384  loss_ce_2: 0.6566  loss_mask_2: 0.1935  loss_dice_2: 1.337  loss_ce_3: 0.5857  loss_mask_3: 0.1861  loss_dice_3: 1.29  loss_ce_4: 0.5573  loss_mask_4: 0.1848  loss_dice_4: 1.27  loss_ce_5: 0.5213  loss_mask_5: 0.1847  loss_dice_5: 1.267  loss_ce_6: 0.5286  loss_mask_6: 0.1853  loss_dice_6: 1.27  loss_ce_7: 0.5303  loss_mask_7: 0.184  loss_dice_7: 1.244  loss_ce_8: 0.5662  loss_mask_8: 0.1828  loss_dice_8: 1.228    time: 0.6113  last_time: 0.6185  data_time: 0.0241  last_data_time: 0.0248   lr: 0.0001  max_mem: 17227M
[08/26 09:35:44] d2.utils.events INFO:  eta: 0:03:39  iter: 639  total_loss: 22.09  loss_ce: 0.592  loss_mask: 0.1927  loss_dice: 1.304  loss_ce_0: 0.675  loss_mask_0: 0.2197  loss_dice_0: 1.486  loss_ce_1: 0.7787  loss_mask_1: 0.1911  loss_dice_1: 1.388  loss_ce_2: 0.7011  loss_mask_2: 0.1984  loss_dice_2: 1.342  loss_ce_3: 0.6455  loss_mask_3: 0.1871  loss_dice_3: 1.35  loss_ce_4: 0.626  loss_mask_4: 0.1863  loss_dice_4: 1.349  loss_ce_5: 0.6219  loss_mask_5: 0.1887  loss_dice_5: 1.327  loss_ce_6: 0.6119  loss_mask_6: 0.1892  loss_dice_6: 1.287  loss_ce_7: 0.6024  loss_mask_7: 0.1869  loss_dice_7: 1.306  loss_ce_8: 0.5872  loss_mask_8: 0.1878  loss_dice_8: 1.323    time: 0.6117  last_time: 0.6358  data_time: 0.0266  last_data_time: 0.0268   lr: 0.0001  max_mem: 17227M
[08/26 09:35:56] d2.utils.events INFO:  eta: 0:03:27  iter: 659  total_loss: 22.9  loss_ce: 0.66  loss_mask: 0.1693  loss_dice: 1.303  loss_ce_0: 0.7402  loss_mask_0: 0.2125  loss_dice_0: 1.601  loss_ce_1: 0.8513  loss_mask_1: 0.1929  loss_dice_1: 1.512  loss_ce_2: 0.7549  loss_mask_2: 0.1824  loss_dice_2: 1.431  loss_ce_3: 0.7298  loss_mask_3: 0.1715  loss_dice_3: 1.377  loss_ce_4: 0.6831  loss_mask_4: 0.1719  loss_dice_4: 1.346  loss_ce_5: 0.673  loss_mask_5: 0.1748  loss_dice_5: 1.357  loss_ce_6: 0.6512  loss_mask_6: 0.1707  loss_dice_6: 1.317  loss_ce_7: 0.645  loss_mask_7: 0.1715  loss_dice_7: 1.346  loss_ce_8: 0.6319  loss_mask_8: 0.1721  loss_dice_8: 1.31    time: 0.6120  last_time: 0.6315  data_time: 0.0275  last_data_time: 0.0270   lr: 0.0001  max_mem: 17227M
[08/26 09:36:08] d2.utils.events INFO:  eta: 0:03:15  iter: 679  total_loss: 21.58  loss_ce: 0.6051  loss_mask: 0.1806  loss_dice: 1.256  loss_ce_0: 0.6861  loss_mask_0: 0.1989  loss_dice_0: 1.492  loss_ce_1: 0.7887  loss_mask_1: 0.1895  loss_dice_1: 1.393  loss_ce_2: 0.7223  loss_mask_2: 0.1817  loss_dice_2: 1.329  loss_ce_3: 0.6649  loss_mask_3: 0.1784  loss_dice_3: 1.296  loss_ce_4: 0.6461  loss_mask_4: 0.1838  loss_dice_4: 1.28  loss_ce_5: 0.6271  loss_mask_5: 0.1791  loss_dice_5: 1.271  loss_ce_6: 0.6121  loss_mask_6: 0.1831  loss_dice_6: 1.253  loss_ce_7: 0.6172  loss_mask_7: 0.1837  loss_dice_7: 1.247  loss_ce_8: 0.6248  loss_mask_8: 0.1812  loss_dice_8: 1.238    time: 0.6117  last_time: 0.5878  data_time: 0.0249  last_data_time: 0.0227   lr: 0.0001  max_mem: 17227M
[08/26 09:36:21] d2.utils.events INFO:  eta: 0:03:02  iter: 699  total_loss: 23.1  loss_ce: 0.6168  loss_mask: 0.1689  loss_dice: 1.324  loss_ce_0: 0.7303  loss_mask_0: 0.2002  loss_dice_0: 1.553  loss_ce_1: 0.7935  loss_mask_1: 0.175  loss_dice_1: 1.453  loss_ce_2: 0.7216  loss_mask_2: 0.1726  loss_dice_2: 1.431  loss_ce_3: 0.6731  loss_mask_3: 0.1687  loss_dice_3: 1.342  loss_ce_4: 0.6564  loss_mask_4: 0.1689  loss_dice_4: 1.354  loss_ce_5: 0.6274  loss_mask_5: 0.1696  loss_dice_5: 1.351  loss_ce_6: 0.6274  loss_mask_6: 0.1709  loss_dice_6: 1.35  loss_ce_7: 0.6143  loss_mask_7: 0.1684  loss_dice_7: 1.394  loss_ce_8: 0.6155  loss_mask_8: 0.1687  loss_dice_8: 1.352    time: 0.6119  last_time: 0.6019  data_time: 0.0258  last_data_time: 0.0333   lr: 0.0001  max_mem: 17227M
[08/26 09:36:33] d2.utils.events INFO:  eta: 0:02:50  iter: 719  total_loss: 21.18  loss_ce: 0.5994  loss_mask: 0.172  loss_dice: 1.216  loss_ce_0: 0.7328  loss_mask_0: 0.2012  loss_dice_0: 1.436  loss_ce_1: 0.7408  loss_mask_1: 0.1827  loss_dice_1: 1.37  loss_ce_2: 0.69  loss_mask_2: 0.1782  loss_dice_2: 1.323  loss_ce_3: 0.647  loss_mask_3: 0.1725  loss_dice_3: 1.266  loss_ce_4: 0.6262  loss_mask_4: 0.1746  loss_dice_4: 1.279  loss_ce_5: 0.6276  loss_mask_5: 0.1743  loss_dice_5: 1.241  loss_ce_6: 0.6042  loss_mask_6: 0.1747  loss_dice_6: 1.224  loss_ce_7: 0.6186  loss_mask_7: 0.1714  loss_dice_7: 1.222  loss_ce_8: 0.6101  loss_mask_8: 0.17  loss_dice_8: 1.22    time: 0.6117  last_time: 0.5790  data_time: 0.0244  last_data_time: 0.0235   lr: 0.0001  max_mem: 17227M
[08/26 09:36:45] d2.utils.events INFO:  eta: 0:02:38  iter: 739  total_loss: 21.84  loss_ce: 0.6036  loss_mask: 0.161  loss_dice: 1.33  loss_ce_0: 0.6878  loss_mask_0: 0.1844  loss_dice_0: 1.524  loss_ce_1: 0.7405  loss_mask_1: 0.1744  loss_dice_1: 1.489  loss_ce_2: 0.7039  loss_mask_2: 0.1706  loss_dice_2: 1.41  loss_ce_3: 0.6628  loss_mask_3: 0.1684  loss_dice_3: 1.326  loss_ce_4: 0.6288  loss_mask_4: 0.1658  loss_dice_4: 1.38  loss_ce_5: 0.6321  loss_mask_5: 0.1644  loss_dice_5: 1.375  loss_ce_6: 0.5853  loss_mask_6: 0.165  loss_dice_6: 1.345  loss_ce_7: 0.5871  loss_mask_7: 0.1633  loss_dice_7: 1.329  loss_ce_8: 0.5837  loss_mask_8: 0.1615  loss_dice_8: 1.358    time: 0.6118  last_time: 0.5872  data_time: 0.0223  last_data_time: 0.0204   lr: 0.0001  max_mem: 17227M
[08/26 09:36:58] d2.utils.events INFO:  eta: 0:02:26  iter: 759  total_loss: 21.37  loss_ce: 0.6371  loss_mask: 0.1657  loss_dice: 1.253  loss_ce_0: 0.7055  loss_mask_0: 0.1904  loss_dice_0: 1.49  loss_ce_1: 0.7547  loss_mask_1: 0.1704  loss_dice_1: 1.441  loss_ce_2: 0.7319  loss_mask_2: 0.1669  loss_dice_2: 1.386  loss_ce_3: 0.6439  loss_mask_3: 0.1672  loss_dice_3: 1.316  loss_ce_4: 0.6176  loss_mask_4: 0.1663  loss_dice_4: 1.281  loss_ce_5: 0.6082  loss_mask_5: 0.1681  loss_dice_5: 1.26  loss_ce_6: 0.609  loss_mask_6: 0.1658  loss_dice_6: 1.263  loss_ce_7: 0.5888  loss_mask_7: 0.1663  loss_dice_7: 1.302  loss_ce_8: 0.615  loss_mask_8: 0.1666  loss_dice_8: 1.238    time: 0.6123  last_time: 0.6200  data_time: 0.0247  last_data_time: 0.0205   lr: 0.0001  max_mem: 17227M
[08/26 09:37:10] d2.utils.events INFO:  eta: 0:02:14  iter: 779  total_loss: 20.15  loss_ce: 0.5132  loss_mask: 0.1824  loss_dice: 1.174  loss_ce_0: 0.6006  loss_mask_0: 0.2052  loss_dice_0: 1.431  loss_ce_1: 0.6633  loss_mask_1: 0.1949  loss_dice_1: 1.31  loss_ce_2: 0.6326  loss_mask_2: 0.1861  loss_dice_2: 1.224  loss_ce_3: 0.5558  loss_mask_3: 0.1872  loss_dice_3: 1.238  loss_ce_4: 0.5501  loss_mask_4: 0.1837  loss_dice_4: 1.229  loss_ce_5: 0.526  loss_mask_5: 0.1871  loss_dice_5: 1.249  loss_ce_6: 0.5221  loss_mask_6: 0.1842  loss_dice_6: 1.179  loss_ce_7: 0.5243  loss_mask_7: 0.1792  loss_dice_7: 1.199  loss_ce_8: 0.5299  loss_mask_8: 0.182  loss_dice_8: 1.19    time: 0.6125  last_time: 0.6374  data_time: 0.0271  last_data_time: 0.0244   lr: 0.0001  max_mem: 17227M
[08/26 09:37:23] d2.utils.events INFO:  eta: 0:02:02  iter: 799  total_loss: 21.62  loss_ce: 0.5441  loss_mask: 0.1664  loss_dice: 1.328  loss_ce_0: 0.597  loss_mask_0: 0.1889  loss_dice_0: 1.587  loss_ce_1: 0.6902  loss_mask_1: 0.1773  loss_dice_1: 1.425  loss_ce_2: 0.6666  loss_mask_2: 0.1712  loss_dice_2: 1.426  loss_ce_3: 0.6094  loss_mask_3: 0.1687  loss_dice_3: 1.353  loss_ce_4: 0.596  loss_mask_4: 0.1694  loss_dice_4: 1.383  loss_ce_5: 0.5933  loss_mask_5: 0.1677  loss_dice_5: 1.366  loss_ce_6: 0.5515  loss_mask_6: 0.1668  loss_dice_6: 1.37  loss_ce_7: 0.5346  loss_mask_7: 0.1639  loss_dice_7: 1.351  loss_ce_8: 0.5738  loss_mask_8: 0.1649  loss_dice_8: 1.32    time: 0.6131  last_time: 0.6165  data_time: 0.0239  last_data_time: 0.0261   lr: 0.0001  max_mem: 17227M
[08/26 09:37:35] d2.utils.events INFO:  eta: 0:01:49  iter: 819  total_loss: 20.76  loss_ce: 0.5482  loss_mask: 0.167  loss_dice: 1.278  loss_ce_0: 0.6601  loss_mask_0: 0.2068  loss_dice_0: 1.524  loss_ce_1: 0.6965  loss_mask_1: 0.1837  loss_dice_1: 1.403  loss_ce_2: 0.6394  loss_mask_2: 0.1828  loss_dice_2: 1.34  loss_ce_3: 0.622  loss_mask_3: 0.1769  loss_dice_3: 1.309  loss_ce_4: 0.5705  loss_mask_4: 0.1783  loss_dice_4: 1.306  loss_ce_5: 0.5689  loss_mask_5: 0.1784  loss_dice_5: 1.298  loss_ce_6: 0.5479  loss_mask_6: 0.1775  loss_dice_6: 1.313  loss_ce_7: 0.5447  loss_mask_7: 0.1683  loss_dice_7: 1.3  loss_ce_8: 0.5791  loss_mask_8: 0.1708  loss_dice_8: 1.278    time: 0.6133  last_time: 0.5803  data_time: 0.0254  last_data_time: 0.0247   lr: 0.0001  max_mem: 17227M
[08/26 09:37:48] d2.utils.events INFO:  eta: 0:01:37  iter: 839  total_loss: 20.66  loss_ce: 0.5825  loss_mask: 0.173  loss_dice: 1.196  loss_ce_0: 0.678  loss_mask_0: 0.1963  loss_dice_0: 1.418  loss_ce_1: 0.7653  loss_mask_1: 0.1811  loss_dice_1: 1.304  loss_ce_2: 0.7122  loss_mask_2: 0.1745  loss_dice_2: 1.249  loss_ce_3: 0.6344  loss_mask_3: 0.1701  loss_dice_3: 1.217  loss_ce_4: 0.6218  loss_mask_4: 0.1664  loss_dice_4: 1.221  loss_ce_5: 0.5853  loss_mask_5: 0.1671  loss_dice_5: 1.206  loss_ce_6: 0.6039  loss_mask_6: 0.1687  loss_dice_6: 1.182  loss_ce_7: 0.5846  loss_mask_7: 0.1712  loss_dice_7: 1.201  loss_ce_8: 0.598  loss_mask_8: 0.1728  loss_dice_8: 1.209    time: 0.6130  last_time: 0.5756  data_time: 0.0201  last_data_time: 0.0187   lr: 0.0001  max_mem: 17227M
[08/26 09:38:00] d2.utils.events INFO:  eta: 0:01:25  iter: 859  total_loss: 21.14  loss_ce: 0.573  loss_mask: 0.1629  loss_dice: 1.221  loss_ce_0: 0.6604  loss_mask_0: 0.201  loss_dice_0: 1.502  loss_ce_1: 0.7624  loss_mask_1: 0.1726  loss_dice_1: 1.377  loss_ce_2: 0.7017  loss_mask_2: 0.1726  loss_dice_2: 1.329  loss_ce_3: 0.6227  loss_mask_3: 0.1713  loss_dice_3: 1.311  loss_ce_4: 0.644  loss_mask_4: 0.1646  loss_dice_4: 1.284  loss_ce_5: 0.5746  loss_mask_5: 0.1654  loss_dice_5: 1.256  loss_ce_6: 0.5949  loss_mask_6: 0.1622  loss_dice_6: 1.249  loss_ce_7: 0.5946  loss_mask_7: 0.1637  loss_dice_7: 1.257  loss_ce_8: 0.5568  loss_mask_8: 0.1638  loss_dice_8: 1.257    time: 0.6127  last_time: 0.6094  data_time: 0.0259  last_data_time: 0.0313   lr: 0.0001  max_mem: 17227M
[08/26 09:38:12] d2.utils.events INFO:  eta: 0:01:13  iter: 879  total_loss: 21.08  loss_ce: 0.575  loss_mask: 0.1659  loss_dice: 1.238  loss_ce_0: 0.6397  loss_mask_0: 0.1985  loss_dice_0: 1.509  loss_ce_1: 0.727  loss_mask_1: 0.1771  loss_dice_1: 1.369  loss_ce_2: 0.7088  loss_mask_2: 0.1736  loss_dice_2: 1.32  loss_ce_3: 0.6421  loss_mask_3: 0.1711  loss_dice_3: 1.233  loss_ce_4: 0.595  loss_mask_4: 0.17  loss_dice_4: 1.263  loss_ce_5: 0.5855  loss_mask_5: 0.167  loss_dice_5: 1.277  loss_ce_6: 0.567  loss_mask_6: 0.1671  loss_dice_6: 1.253  loss_ce_7: 0.571  loss_mask_7: 0.1684  loss_dice_7: 1.246  loss_ce_8: 0.553  loss_mask_8: 0.1657  loss_dice_8: 1.212    time: 0.6125  last_time: 0.6041  data_time: 0.0268  last_data_time: 0.0297   lr: 0.0001  max_mem: 17227M
[08/26 09:38:24] d2.utils.events INFO:  eta: 0:01:00  iter: 899  total_loss: 20.82  loss_ce: 0.5544  loss_mask: 0.173  loss_dice: 1.187  loss_ce_0: 0.6678  loss_mask_0: 0.2061  loss_dice_0: 1.393  loss_ce_1: 0.6595  loss_mask_1: 0.1888  loss_dice_1: 1.318  loss_ce_2: 0.6201  loss_mask_2: 0.1785  loss_dice_2: 1.264  loss_ce_3: 0.5999  loss_mask_3: 0.1768  loss_dice_3: 1.212  loss_ce_4: 0.5899  loss_mask_4: 0.1752  loss_dice_4: 1.202  loss_ce_5: 0.5926  loss_mask_5: 0.1763  loss_dice_5: 1.209  loss_ce_6: 0.5538  loss_mask_6: 0.1762  loss_dice_6: 1.175  loss_ce_7: 0.5368  loss_mask_7: 0.1759  loss_dice_7: 1.198  loss_ce_8: 0.5216  loss_mask_8: 0.1755  loss_dice_8: 1.176    time: 0.6122  last_time: 0.6226  data_time: 0.0223  last_data_time: 0.0226   lr: 0.0001  max_mem: 17227M
[08/26 09:38:36] d2.utils.events INFO:  eta: 0:00:48  iter: 919  total_loss: 21.54  loss_ce: 0.5778  loss_mask: 0.1729  loss_dice: 1.23  loss_ce_0: 0.6804  loss_mask_0: 0.1889  loss_dice_0: 1.485  loss_ce_1: 0.7476  loss_mask_1: 0.1874  loss_dice_1: 1.37  loss_ce_2: 0.6832  loss_mask_2: 0.1778  loss_dice_2: 1.33  loss_ce_3: 0.6705  loss_mask_3: 0.1773  loss_dice_3: 1.269  loss_ce_4: 0.6481  loss_mask_4: 0.174  loss_dice_4: 1.262  loss_ce_5: 0.6217  loss_mask_5: 0.1732  loss_dice_5: 1.279  loss_ce_6: 0.6024  loss_mask_6: 0.1712  loss_dice_6: 1.233  loss_ce_7: 0.6044  loss_mask_7: 0.1695  loss_dice_7: 1.224  loss_ce_8: 0.6107  loss_mask_8: 0.1678  loss_dice_8: 1.257    time: 0.6121  last_time: 0.6179  data_time: 0.0224  last_data_time: 0.0220   lr: 0.0001  max_mem: 17227M
[08/26 09:38:48] d2.utils.events INFO:  eta: 0:00:36  iter: 939  total_loss: 21.13  loss_ce: 0.5948  loss_mask: 0.1805  loss_dice: 1.268  loss_ce_0: 0.6913  loss_mask_0: 0.2091  loss_dice_0: 1.498  loss_ce_1: 0.7041  loss_mask_1: 0.198  loss_dice_1: 1.41  loss_ce_2: 0.6658  loss_mask_2: 0.1817  loss_dice_2: 1.378  loss_ce_3: 0.6247  loss_mask_3: 0.1846  loss_dice_3: 1.309  loss_ce_4: 0.6001  loss_mask_4: 0.1839  loss_dice_4: 1.313  loss_ce_5: 0.5793  loss_mask_5: 0.1811  loss_dice_5: 1.297  loss_ce_6: 0.5998  loss_mask_6: 0.1823  loss_dice_6: 1.304  loss_ce_7: 0.5951  loss_mask_7: 0.1809  loss_dice_7: 1.296  loss_ce_8: 0.5616  loss_mask_8: 0.1768  loss_dice_8: 1.305    time: 0.6122  last_time: 0.6453  data_time: 0.0220  last_data_time: 0.0172   lr: 0.0001  max_mem: 17227M
[08/26 09:39:01] d2.utils.events INFO:  eta: 0:00:24  iter: 959  total_loss: 21.61  loss_ce: 0.585  loss_mask: 0.1574  loss_dice: 1.266  loss_ce_0: 0.6642  loss_mask_0: 0.1859  loss_dice_0: 1.527  loss_ce_1: 0.723  loss_mask_1: 0.1779  loss_dice_1: 1.466  loss_ce_2: 0.6897  loss_mask_2: 0.1683  loss_dice_2: 1.408  loss_ce_3: 0.6448  loss_mask_3: 0.1608  loss_dice_3: 1.326  loss_ce_4: 0.5992  loss_mask_4: 0.1638  loss_dice_4: 1.335  loss_ce_5: 0.6056  loss_mask_5: 0.161  loss_dice_5: 1.331  loss_ce_6: 0.5491  loss_mask_6: 0.1577  loss_dice_6: 1.283  loss_ce_7: 0.5771  loss_mask_7: 0.1604  loss_dice_7: 1.29  loss_ce_8: 0.5942  loss_mask_8: 0.1581  loss_dice_8: 1.293    time: 0.6122  last_time: 0.5837  data_time: 0.0268  last_data_time: 0.0185   lr: 0.0001  max_mem: 17227M
[08/26 09:39:13] d2.utils.events INFO:  eta: 0:00:12  iter: 979  total_loss: 20.55  loss_ce: 0.5888  loss_mask: 0.176  loss_dice: 1.2  loss_ce_0: 0.6752  loss_mask_0: 0.2033  loss_dice_0: 1.465  loss_ce_1: 0.7383  loss_mask_1: 0.1745  loss_dice_1: 1.365  loss_ce_2: 0.6723  loss_mask_2: 0.1793  loss_dice_2: 1.319  loss_ce_3: 0.6402  loss_mask_3: 0.1751  loss_dice_3: 1.237  loss_ce_4: 0.5952  loss_mask_4: 0.1755  loss_dice_4: 1.225  loss_ce_5: 0.5875  loss_mask_5: 0.1761  loss_dice_5: 1.213  loss_ce_6: 0.5855  loss_mask_6: 0.1745  loss_dice_6: 1.214  loss_ce_7: 0.5638  loss_mask_7: 0.1737  loss_dice_7: 1.235  loss_ce_8: 0.5447  loss_mask_8: 0.173  loss_dice_8: 1.197    time: 0.6119  last_time: 0.6138  data_time: 0.0233  last_data_time: 0.0231   lr: 0.0001  max_mem: 17227M
[08/26 09:39:25] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/model_final.pth
[08/26 09:39:27] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 20.65  loss_ce: 0.5766  loss_mask: 0.1736  loss_dice: 1.231  loss_ce_0: 0.6842  loss_mask_0: 0.197  loss_dice_0: 1.486  loss_ce_1: 0.7261  loss_mask_1: 0.1836  loss_dice_1: 1.373  loss_ce_2: 0.6314  loss_mask_2: 0.1768  loss_dice_2: 1.305  loss_ce_3: 0.5864  loss_mask_3: 0.1752  loss_dice_3: 1.255  loss_ce_4: 0.603  loss_mask_4: 0.1719  loss_dice_4: 1.251  loss_ce_5: 0.5755  loss_mask_5: 0.1735  loss_dice_5: 1.27  loss_ce_6: 0.596  loss_mask_6: 0.1717  loss_dice_6: 1.227  loss_ce_7: 0.5906  loss_mask_7: 0.1733  loss_dice_7: 1.208  loss_ce_8: 0.5736  loss_mask_8: 0.172  loss_dice_8: 1.226    time: 0.6118  last_time: 0.6045  data_time: 0.0250  last_data_time: 0.0231   lr: 0.0001  max_mem: 17227M
[08/26 09:39:27] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:10:10 (0.6118 s / it)
[08/26 09:39:27] d2.engine.hooks INFO: Total training time: 0:10:16 (0:00:05 on hooks)
[08/26 09:39:27] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/26 09:39:27] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/26 09:39:27] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/26 09:39:27] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/26 09:39:27] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/26 09:39:27] d2.evaluation.evaluator INFO: Start inference on 250 batches
[08/26 09:39:34] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0025 s/iter. Inference: 0.2569 s/iter. Eval: 0.0729 s/iter. Total: 0.3323 s/iter. ETA=0:01:19
[08/26 09:39:39] d2.evaluation.evaluator INFO: Inference done 25/250. Dataloading: 0.0033 s/iter. Inference: 0.2849 s/iter. Eval: 0.0680 s/iter. Total: 0.3563 s/iter. ETA=0:01:20
[08/26 09:39:44] d2.evaluation.evaluator INFO: Inference done 39/250. Dataloading: 0.0035 s/iter. Inference: 0.2841 s/iter. Eval: 0.0719 s/iter. Total: 0.3594 s/iter. ETA=0:01:15
[08/26 09:39:50] d2.evaluation.evaluator INFO: Inference done 54/250. Dataloading: 0.0035 s/iter. Inference: 0.2854 s/iter. Eval: 0.0708 s/iter. Total: 0.3598 s/iter. ETA=0:01:10
[08/26 09:39:55] d2.evaluation.evaluator INFO: Inference done 69/250. Dataloading: 0.0035 s/iter. Inference: 0.2840 s/iter. Eval: 0.0705 s/iter. Total: 0.3581 s/iter. ETA=0:01:04
[08/26 09:40:00] d2.evaluation.evaluator INFO: Inference done 84/250. Dataloading: 0.0035 s/iter. Inference: 0.2849 s/iter. Eval: 0.0697 s/iter. Total: 0.3581 s/iter. ETA=0:00:59
[08/26 09:40:06] d2.evaluation.evaluator INFO: Inference done 99/250. Dataloading: 0.0034 s/iter. Inference: 0.2852 s/iter. Eval: 0.0690 s/iter. Total: 0.3577 s/iter. ETA=0:00:54
[08/26 09:40:11] d2.evaluation.evaluator INFO: Inference done 115/250. Dataloading: 0.0034 s/iter. Inference: 0.2830 s/iter. Eval: 0.0677 s/iter. Total: 0.3542 s/iter. ETA=0:00:47
[08/26 09:40:16] d2.evaluation.evaluator INFO: Inference done 130/250. Dataloading: 0.0034 s/iter. Inference: 0.2832 s/iter. Eval: 0.0667 s/iter. Total: 0.3534 s/iter. ETA=0:00:42
[08/26 09:40:21] d2.evaluation.evaluator INFO: Inference done 145/250. Dataloading: 0.0034 s/iter. Inference: 0.2826 s/iter. Eval: 0.0656 s/iter. Total: 0.3516 s/iter. ETA=0:00:36
[08/26 09:40:27] d2.evaluation.evaluator INFO: Inference done 160/250. Dataloading: 0.0034 s/iter. Inference: 0.2831 s/iter. Eval: 0.0648 s/iter. Total: 0.3514 s/iter. ETA=0:00:31
[08/26 09:40:32] d2.evaluation.evaluator INFO: Inference done 175/250. Dataloading: 0.0034 s/iter. Inference: 0.2822 s/iter. Eval: 0.0644 s/iter. Total: 0.3501 s/iter. ETA=0:00:26
[08/26 09:40:37] d2.evaluation.evaluator INFO: Inference done 190/250. Dataloading: 0.0034 s/iter. Inference: 0.2822 s/iter. Eval: 0.0640 s/iter. Total: 0.3496 s/iter. ETA=0:00:20
[08/26 09:40:42] d2.evaluation.evaluator INFO: Inference done 204/250. Dataloading: 0.0034 s/iter. Inference: 0.2826 s/iter. Eval: 0.0641 s/iter. Total: 0.3502 s/iter. ETA=0:00:16
[08/26 09:40:47] d2.evaluation.evaluator INFO: Inference done 219/250. Dataloading: 0.0033 s/iter. Inference: 0.2831 s/iter. Eval: 0.0635 s/iter. Total: 0.3500 s/iter. ETA=0:00:10
[08/26 09:40:52] d2.evaluation.evaluator INFO: Inference done 233/250. Dataloading: 0.0033 s/iter. Inference: 0.2846 s/iter. Eval: 0.0634 s/iter. Total: 0.3514 s/iter. ETA=0:00:05
[08/26 09:40:57] d2.evaluation.evaluator INFO: Inference done 248/250. Dataloading: 0.0033 s/iter. Inference: 0.2843 s/iter. Eval: 0.0631 s/iter. Total: 0.3509 s/iter. ETA=0:00:00
[08/26 09:40:59] d2.evaluation.evaluator INFO: Total inference time: 0:01:26.424496 (0.352753 s / iter per device, on 2 devices)
[08/26 09:40:59] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:09 (0.283952 s / iter per device, on 2 devices)
[08/26 09:40:59] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalkefx3asn ...
[08/26 09:41:22] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 52.972 | 79.884 | 64.982 |      19       |
| Things | 45.346 | 79.283 | 56.844 |       8       |
| Stuff  | 58.519 | 80.321 | 70.900 |      11       |
[08/26 09:41:22] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.112 | 96.816 | 99.273 |     Stuff     |
| class_8  | 39.869 | 81.561 | 48.883 |     Stuff     |
| class_11 | 86.079 | 88.832 | 96.901 |     Stuff     |
| class_12 | 39.713 | 77.220 | 51.429 |     Stuff     |
| class_13 | 33.060 | 75.001 | 44.079 |     Stuff     |
| class_17 | 40.301 | 63.151 | 63.816 |     Stuff     |
| class_19 | 44.678 | 68.790 | 64.948 |     Stuff     |
| class_20 | 61.720 | 75.672 | 81.562 |     Stuff     |
| class_21 | 88.515 | 89.629 | 98.758 |     Stuff     |
| class_22 | 27.064 | 74.834 | 36.166 |     Stuff     |
| class_23 | 86.594 | 92.032 | 94.091 |     Stuff     |
| class_24 | 46.609 | 76.660 | 60.799 |    Things     |
| class_25 | 41.664 | 73.590 | 56.617 |    Things     |
| class_26 | 59.149 | 83.305 | 71.003 |    Things     |
| class_27 | 40.663 | 85.162 | 47.748 |    Things     |
| class_28 | 63.530 | 88.943 | 71.429 |    Things     |
| class_31 | 41.423 | 82.846 | 50.000 |    Things     |
| class_32 | 32.693 | 73.232 | 44.643 |    Things     |
| class_33 | 37.036 | 70.529 | 52.511 |    Things     |
[08/26 09:41:22] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/26 09:41:22] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/26 09:41:22] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/26 09:41:22] d2.evaluation.testing INFO: copypaste: 52.9721,79.8844,64.9818,45.3458,79.2834,56.8437,58.5185,80.3215,70.9005,96.1118,96.8155,99.2731,39.8690,81.5605,48.8827,86.0793,88.8323,96.9008,39.7131,77.2198,51.4286,33.0595,75.0007,44.0789,40.3007,63.1510,63.8165,44.6781,68.7901,64.9485,61.7196,75.6722,81.5618,88.5152,89.6286,98.7578,27.0641,74.8339,36.1656,86.5935,92.0317,94.0909,46.6085,76.6596,60.7993,41.6643,73.5900,56.6168,59.1487,83.3050,71.0025,40.6628,85.1618,47.7477,63.5304,88.9426,71.4286,41.4232,82.8465,50.0000,32.6930,73.2324,44.6429,37.0358,70.5290,52.5114
