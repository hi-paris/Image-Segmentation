[08/29 23:02:23] detectron2 INFO: Rank of current process: 0. World size: 1
[08/29 23:02:24] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   545.29.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/29 23:02:24] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[08/29 23:02:24] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 1000
TEST:
  EVAL_PERIOD: 1000


[08/29 23:02:24] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 1000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 1000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/29 23:02:24] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/config.yaml
[08/29 23:02:24] d2.utils.env INFO: Using a generated random seed 24530242
[08/29 23:02:27] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[08/29 23:02:27] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/29 23:02:27] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/29 23:02:27] d2.data.build INFO: Using training sampler TrainingSampler
[08/29 23:02:27] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/29 23:02:27] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/29 23:02:27] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/29 23:02:27] d2.data.build INFO: Making batched data loader with batch_size=8
[08/29 23:02:27] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/29 23:02:27] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[08/29 23:02:27] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r50.pth ...
[08/29 23:02:27] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/29 23:02:27] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/29 23:02:27] d2.engine.train_loop INFO: Starting training from iteration 0
[08/29 23:02:51] d2.utils.events INFO:  eta: 0:16:17  iter: 19  total_loss: 31.45  loss_ce: 1.27  loss_mask: 0.3226  loss_dice: 1.486  loss_ce_0: 1.511  loss_mask_0: 0.3232  loss_dice_0: 1.786  loss_ce_1: 1.544  loss_mask_1: 0.3245  loss_dice_1: 1.608  loss_ce_2: 1.476  loss_mask_2: 0.3091  loss_dice_2: 1.562  loss_ce_3: 1.368  loss_mask_3: 0.3116  loss_dice_3: 1.489  loss_ce_4: 1.352  loss_mask_4: 0.3203  loss_dice_4: 1.501  loss_ce_5: 1.269  loss_mask_5: 0.3175  loss_dice_5: 1.452  loss_ce_6: 1.29  loss_mask_6: 0.3201  loss_dice_6: 1.492  loss_ce_7: 1.281  loss_mask_7: 0.3204  loss_dice_7: 1.47  loss_ce_8: 1.311  loss_mask_8: 0.3226  loss_dice_8: 1.489    time: 1.0114  last_time: 1.0398  data_time: 0.0689  last_data_time: 0.0465   lr: 0.0001  max_mem: 31849M
[08/29 23:03:11] d2.utils.events INFO:  eta: 0:16:10  iter: 39  total_loss: 26.82  loss_ce: 0.9001  loss_mask: 0.234  loss_dice: 1.373  loss_ce_0: 0.9098  loss_mask_0: 0.2598  loss_dice_0: 1.763  loss_ce_1: 1.112  loss_mask_1: 0.2436  loss_dice_1: 1.556  loss_ce_2: 0.9922  loss_mask_2: 0.2407  loss_dice_2: 1.475  loss_ce_3: 0.9591  loss_mask_3: 0.2372  loss_dice_3: 1.455  loss_ce_4: 0.9437  loss_mask_4: 0.2384  loss_dice_4: 1.41  loss_ce_5: 0.9349  loss_mask_5: 0.2389  loss_dice_5: 1.425  loss_ce_6: 0.8948  loss_mask_6: 0.236  loss_dice_6: 1.395  loss_ce_7: 0.9039  loss_mask_7: 0.2342  loss_dice_7: 1.384  loss_ce_8: 0.9011  loss_mask_8: 0.2327  loss_dice_8: 1.367    time: 1.0166  last_time: 1.0545  data_time: 0.0369  last_data_time: 0.0329   lr: 0.0001  max_mem: 31849M
[08/29 23:03:32] d2.utils.events INFO:  eta: 0:15:46  iter: 59  total_loss: 25.47  loss_ce: 0.8436  loss_mask: 0.2149  loss_dice: 1.341  loss_ce_0: 0.9094  loss_mask_0: 0.2572  loss_dice_0: 1.603  loss_ce_1: 0.9999  loss_mask_1: 0.2492  loss_dice_1: 1.478  loss_ce_2: 0.9328  loss_mask_2: 0.2245  loss_dice_2: 1.4  loss_ce_3: 0.8761  loss_mask_3: 0.2244  loss_dice_3: 1.37  loss_ce_4: 0.8845  loss_mask_4: 0.219  loss_dice_4: 1.334  loss_ce_5: 0.8452  loss_mask_5: 0.2153  loss_dice_5: 1.347  loss_ce_6: 0.8632  loss_mask_6: 0.2116  loss_dice_6: 1.323  loss_ce_7: 0.8331  loss_mask_7: 0.2129  loss_dice_7: 1.336  loss_ce_8: 0.8553  loss_mask_8: 0.2166  loss_dice_8: 1.364    time: 1.0121  last_time: 0.9674  data_time: 0.0377  last_data_time: 0.0364   lr: 0.0001  max_mem: 31849M
[08/29 23:03:52] d2.utils.events INFO:  eta: 0:15:30  iter: 79  total_loss: 23.72  loss_ce: 0.7435  loss_mask: 0.2154  loss_dice: 1.303  loss_ce_0: 0.795  loss_mask_0: 0.2461  loss_dice_0: 1.62  loss_ce_1: 0.9166  loss_mask_1: 0.2321  loss_dice_1: 1.488  loss_ce_2: 0.8561  loss_mask_2: 0.2199  loss_dice_2: 1.414  loss_ce_3: 0.8001  loss_mask_3: 0.2162  loss_dice_3: 1.369  loss_ce_4: 0.7874  loss_mask_4: 0.2145  loss_dice_4: 1.389  loss_ce_5: 0.7589  loss_mask_5: 0.2117  loss_dice_5: 1.369  loss_ce_6: 0.7676  loss_mask_6: 0.2119  loss_dice_6: 1.3  loss_ce_7: 0.7482  loss_mask_7: 0.2146  loss_dice_7: 1.331  loss_ce_8: 0.736  loss_mask_8: 0.2163  loss_dice_8: 1.342    time: 1.0172  last_time: 1.0552  data_time: 0.0375  last_data_time: 0.0360   lr: 0.0001  max_mem: 31972M
[08/29 23:04:13] d2.utils.events INFO:  eta: 0:15:18  iter: 99  total_loss: 24.03  loss_ce: 0.7159  loss_mask: 0.1958  loss_dice: 1.363  loss_ce_0: 0.7797  loss_mask_0: 0.2225  loss_dice_0: 1.617  loss_ce_1: 0.8956  loss_mask_1: 0.213  loss_dice_1: 1.509  loss_ce_2: 0.8025  loss_mask_2: 0.2011  loss_dice_2: 1.478  loss_ce_3: 0.7393  loss_mask_3: 0.2018  loss_dice_3: 1.42  loss_ce_4: 0.723  loss_mask_4: 0.2008  loss_dice_4: 1.377  loss_ce_5: 0.7449  loss_mask_5: 0.1996  loss_dice_5: 1.411  loss_ce_6: 0.7563  loss_mask_6: 0.1993  loss_dice_6: 1.407  loss_ce_7: 0.7303  loss_mask_7: 0.1941  loss_dice_7: 1.392  loss_ce_8: 0.7265  loss_mask_8: 0.1954  loss_dice_8: 1.384    time: 1.0212  last_time: 1.0240  data_time: 0.0365  last_data_time: 0.0378   lr: 0.0001  max_mem: 32340M
[08/29 23:04:33] d2.utils.events INFO:  eta: 0:14:51  iter: 119  total_loss: 22.93  loss_ce: 0.6687  loss_mask: 0.1945  loss_dice: 1.296  loss_ce_0: 0.7742  loss_mask_0: 0.2244  loss_dice_0: 1.576  loss_ce_1: 0.8541  loss_mask_1: 0.2066  loss_dice_1: 1.43  loss_ce_2: 0.7771  loss_mask_2: 0.2059  loss_dice_2: 1.387  loss_ce_3: 0.7102  loss_mask_3: 0.1977  loss_dice_3: 1.311  loss_ce_4: 0.7158  loss_mask_4: 0.194  loss_dice_4: 1.354  loss_ce_5: 0.713  loss_mask_5: 0.1921  loss_dice_5: 1.291  loss_ce_6: 0.6906  loss_mask_6: 0.1952  loss_dice_6: 1.278  loss_ce_7: 0.7215  loss_mask_7: 0.1924  loss_dice_7: 1.285  loss_ce_8: 0.7042  loss_mask_8: 0.1929  loss_dice_8: 1.255    time: 1.0191  last_time: 0.9842  data_time: 0.0378  last_data_time: 0.0405   lr: 0.0001  max_mem: 32340M
[08/29 23:04:54] d2.utils.events INFO:  eta: 0:14:33  iter: 139  total_loss: 24.21  loss_ce: 0.7166  loss_mask: 0.1969  loss_dice: 1.346  loss_ce_0: 0.8055  loss_mask_0: 0.2189  loss_dice_0: 1.591  loss_ce_1: 0.9147  loss_mask_1: 0.2112  loss_dice_1: 1.503  loss_ce_2: 0.8225  loss_mask_2: 0.2006  loss_dice_2: 1.466  loss_ce_3: 0.7726  loss_mask_3: 0.1992  loss_dice_3: 1.374  loss_ce_4: 0.7556  loss_mask_4: 0.1981  loss_dice_4: 1.385  loss_ce_5: 0.7542  loss_mask_5: 0.1977  loss_dice_5: 1.395  loss_ce_6: 0.7471  loss_mask_6: 0.1954  loss_dice_6: 1.331  loss_ce_7: 0.7521  loss_mask_7: 0.1977  loss_dice_7: 1.325  loss_ce_8: 0.7192  loss_mask_8: 0.1965  loss_dice_8: 1.38    time: 1.0190  last_time: 1.0979  data_time: 0.0351  last_data_time: 0.0318   lr: 0.0001  max_mem: 32340M
[08/29 23:05:14] d2.utils.events INFO:  eta: 0:14:12  iter: 159  total_loss: 24.18  loss_ce: 0.7195  loss_mask: 0.2076  loss_dice: 1.365  loss_ce_0: 0.7931  loss_mask_0: 0.243  loss_dice_0: 1.648  loss_ce_1: 0.893  loss_mask_1: 0.2244  loss_dice_1: 1.522  loss_ce_2: 0.8267  loss_mask_2: 0.2088  loss_dice_2: 1.454  loss_ce_3: 0.76  loss_mask_3: 0.2118  loss_dice_3: 1.436  loss_ce_4: 0.7441  loss_mask_4: 0.2118  loss_dice_4: 1.406  loss_ce_5: 0.7362  loss_mask_5: 0.2061  loss_dice_5: 1.403  loss_ce_6: 0.7164  loss_mask_6: 0.2097  loss_dice_6: 1.391  loss_ce_7: 0.7245  loss_mask_7: 0.2074  loss_dice_7: 1.377  loss_ce_8: 0.7143  loss_mask_8: 0.2087  loss_dice_8: 1.36    time: 1.0184  last_time: 1.0147  data_time: 0.0386  last_data_time: 0.0385   lr: 0.0001  max_mem: 32340M
[08/29 23:05:34] d2.utils.events INFO:  eta: 0:13:50  iter: 179  total_loss: 22.7  loss_ce: 0.6472  loss_mask: 0.1972  loss_dice: 1.277  loss_ce_0: 0.7115  loss_mask_0: 0.2351  loss_dice_0: 1.557  loss_ce_1: 0.8067  loss_mask_1: 0.2107  loss_dice_1: 1.448  loss_ce_2: 0.7286  loss_mask_2: 0.2012  loss_dice_2: 1.355  loss_ce_3: 0.7196  loss_mask_3: 0.1941  loss_dice_3: 1.331  loss_ce_4: 0.6477  loss_mask_4: 0.1965  loss_dice_4: 1.333  loss_ce_5: 0.6706  loss_mask_5: 0.2  loss_dice_5: 1.3  loss_ce_6: 0.6623  loss_mask_6: 0.1968  loss_dice_6: 1.296  loss_ce_7: 0.6496  loss_mask_7: 0.1994  loss_dice_7: 1.28  loss_ce_8: 0.648  loss_mask_8: 0.1995  loss_dice_8: 1.241    time: 1.0172  last_time: 1.0376  data_time: 0.0384  last_data_time: 0.0307   lr: 0.0001  max_mem: 32340M
[08/29 23:05:55] d2.utils.events INFO:  eta: 0:13:31  iter: 199  total_loss: 21.95  loss_ce: 0.5991  loss_mask: 0.2022  loss_dice: 1.275  loss_ce_0: 0.7319  loss_mask_0: 0.2302  loss_dice_0: 1.538  loss_ce_1: 0.7796  loss_mask_1: 0.211  loss_dice_1: 1.416  loss_ce_2: 0.694  loss_mask_2: 0.2013  loss_dice_2: 1.39  loss_ce_3: 0.6495  loss_mask_3: 0.2023  loss_dice_3: 1.326  loss_ce_4: 0.6243  loss_mask_4: 0.202  loss_dice_4: 1.337  loss_ce_5: 0.6421  loss_mask_5: 0.2017  loss_dice_5: 1.304  loss_ce_6: 0.6156  loss_mask_6: 0.1992  loss_dice_6: 1.281  loss_ce_7: 0.6188  loss_mask_7: 0.2023  loss_dice_7: 1.282  loss_ce_8: 0.6218  loss_mask_8: 0.2  loss_dice_8: 1.298    time: 1.0177  last_time: 1.0710  data_time: 0.0384  last_data_time: 0.0302   lr: 0.0001  max_mem: 32340M
[08/29 23:06:15] d2.utils.events INFO:  eta: 0:13:10  iter: 219  total_loss: 22.91  loss_ce: 0.6714  loss_mask: 0.197  loss_dice: 1.365  loss_ce_0: 0.7106  loss_mask_0: 0.2244  loss_dice_0: 1.58  loss_ce_1: 0.8404  loss_mask_1: 0.2097  loss_dice_1: 1.488  loss_ce_2: 0.7913  loss_mask_2: 0.2044  loss_dice_2: 1.369  loss_ce_3: 0.7068  loss_mask_3: 0.1952  loss_dice_3: 1.364  loss_ce_4: 0.6722  loss_mask_4: 0.2004  loss_dice_4: 1.386  loss_ce_5: 0.7159  loss_mask_5: 0.1943  loss_dice_5: 1.365  loss_ce_6: 0.6886  loss_mask_6: 0.197  loss_dice_6: 1.29  loss_ce_7: 0.6629  loss_mask_7: 0.1938  loss_dice_7: 1.366  loss_ce_8: 0.6542  loss_mask_8: 0.1952  loss_dice_8: 1.334    time: 1.0160  last_time: 1.0067  data_time: 0.0357  last_data_time: 0.0293   lr: 0.0001  max_mem: 32340M
[08/29 23:06:35] d2.utils.events INFO:  eta: 0:12:50  iter: 239  total_loss: 22.91  loss_ce: 0.6411  loss_mask: 0.1782  loss_dice: 1.323  loss_ce_0: 0.7779  loss_mask_0: 0.2025  loss_dice_0: 1.637  loss_ce_1: 0.8002  loss_mask_1: 0.1901  loss_dice_1: 1.532  loss_ce_2: 0.7333  loss_mask_2: 0.1841  loss_dice_2: 1.46  loss_ce_3: 0.6638  loss_mask_3: 0.182  loss_dice_3: 1.416  loss_ce_4: 0.6614  loss_mask_4: 0.1785  loss_dice_4: 1.413  loss_ce_5: 0.6468  loss_mask_5: 0.1788  loss_dice_5: 1.399  loss_ce_6: 0.6587  loss_mask_6: 0.1803  loss_dice_6: 1.365  loss_ce_7: 0.6531  loss_mask_7: 0.1788  loss_dice_7: 1.401  loss_ce_8: 0.6224  loss_mask_8: 0.1765  loss_dice_8: 1.388    time: 1.0165  last_time: 0.9928  data_time: 0.0354  last_data_time: 0.0355   lr: 0.0001  max_mem: 32340M
[08/29 23:06:56] d2.utils.events INFO:  eta: 0:12:31  iter: 259  total_loss: 22.53  loss_ce: 0.6464  loss_mask: 0.1645  loss_dice: 1.223  loss_ce_0: 0.7588  loss_mask_0: 0.1948  loss_dice_0: 1.514  loss_ce_1: 0.8139  loss_mask_1: 0.1762  loss_dice_1: 1.448  loss_ce_2: 0.7513  loss_mask_2: 0.1678  loss_dice_2: 1.324  loss_ce_3: 0.6825  loss_mask_3: 0.1644  loss_dice_3: 1.259  loss_ce_4: 0.642  loss_mask_4: 0.1636  loss_dice_4: 1.309  loss_ce_5: 0.6641  loss_mask_5: 0.1627  loss_dice_5: 1.282  loss_ce_6: 0.6195  loss_mask_6: 0.1619  loss_dice_6: 1.305  loss_ce_7: 0.6669  loss_mask_7: 0.163  loss_dice_7: 1.269  loss_ce_8: 0.6506  loss_mask_8: 0.1624  loss_dice_8: 1.272    time: 1.0172  last_time: 1.0263  data_time: 0.0416  last_data_time: 0.0530   lr: 0.0001  max_mem: 32340M
[08/29 23:07:16] d2.utils.events INFO:  eta: 0:12:11  iter: 279  total_loss: 22.68  loss_ce: 0.6474  loss_mask: 0.1767  loss_dice: 1.32  loss_ce_0: 0.7278  loss_mask_0: 0.206  loss_dice_0: 1.558  loss_ce_1: 0.8338  loss_mask_1: 0.1846  loss_dice_1: 1.469  loss_ce_2: 0.7336  loss_mask_2: 0.1751  loss_dice_2: 1.415  loss_ce_3: 0.692  loss_mask_3: 0.1768  loss_dice_3: 1.349  loss_ce_4: 0.6867  loss_mask_4: 0.1761  loss_dice_4: 1.352  loss_ce_5: 0.6691  loss_mask_5: 0.1739  loss_dice_5: 1.341  loss_ce_6: 0.6665  loss_mask_6: 0.1746  loss_dice_6: 1.318  loss_ce_7: 0.6234  loss_mask_7: 0.1762  loss_dice_7: 1.303  loss_ce_8: 0.6627  loss_mask_8: 0.1767  loss_dice_8: 1.305    time: 1.0179  last_time: 1.0043  data_time: 0.0366  last_data_time: 0.0289   lr: 0.0001  max_mem: 32340M
[08/29 23:07:37] d2.utils.events INFO:  eta: 0:11:51  iter: 299  total_loss: 21.81  loss_ce: 0.5898  loss_mask: 0.1901  loss_dice: 1.26  loss_ce_0: 0.7018  loss_mask_0: 0.2174  loss_dice_0: 1.492  loss_ce_1: 0.7412  loss_mask_1: 0.2018  loss_dice_1: 1.42  loss_ce_2: 0.6981  loss_mask_2: 0.1933  loss_dice_2: 1.358  loss_ce_3: 0.6765  loss_mask_3: 0.19  loss_dice_3: 1.261  loss_ce_4: 0.6402  loss_mask_4: 0.1889  loss_dice_4: 1.274  loss_ce_5: 0.6206  loss_mask_5: 0.1872  loss_dice_5: 1.239  loss_ce_6: 0.6166  loss_mask_6: 0.1885  loss_dice_6: 1.251  loss_ce_7: 0.6019  loss_mask_7: 0.1912  loss_dice_7: 1.25  loss_ce_8: 0.6027  loss_mask_8: 0.1881  loss_dice_8: 1.256    time: 1.0187  last_time: 0.9750  data_time: 0.0381  last_data_time: 0.0238   lr: 0.0001  max_mem: 32340M
[08/29 23:07:58] d2.utils.events INFO:  eta: 0:11:31  iter: 319  total_loss: 22.65  loss_ce: 0.6441  loss_mask: 0.1869  loss_dice: 1.304  loss_ce_0: 0.7355  loss_mask_0: 0.2196  loss_dice_0: 1.534  loss_ce_1: 0.8153  loss_mask_1: 0.2012  loss_dice_1: 1.454  loss_ce_2: 0.7316  loss_mask_2: 0.1975  loss_dice_2: 1.374  loss_ce_3: 0.6986  loss_mask_3: 0.1924  loss_dice_3: 1.333  loss_ce_4: 0.6907  loss_mask_4: 0.1896  loss_dice_4: 1.3  loss_ce_5: 0.6622  loss_mask_5: 0.1913  loss_dice_5: 1.344  loss_ce_6: 0.663  loss_mask_6: 0.191  loss_dice_6: 1.311  loss_ce_7: 0.6269  loss_mask_7: 0.1888  loss_dice_7: 1.309  loss_ce_8: 0.65  loss_mask_8: 0.1901  loss_dice_8: 1.297    time: 1.0199  last_time: 1.0920  data_time: 0.0371  last_data_time: 0.0308   lr: 0.0001  max_mem: 32340M
[08/29 23:08:19] d2.utils.events INFO:  eta: 0:11:12  iter: 339  total_loss: 22.03  loss_ce: 0.6422  loss_mask: 0.1985  loss_dice: 1.26  loss_ce_0: 0.6995  loss_mask_0: 0.2229  loss_dice_0: 1.489  loss_ce_1: 0.764  loss_mask_1: 0.2077  loss_dice_1: 1.41  loss_ce_2: 0.7179  loss_mask_2: 0.2017  loss_dice_2: 1.333  loss_ce_3: 0.6857  loss_mask_3: 0.1966  loss_dice_3: 1.275  loss_ce_4: 0.6623  loss_mask_4: 0.1952  loss_dice_4: 1.276  loss_ce_5: 0.6407  loss_mask_5: 0.1923  loss_dice_5: 1.28  loss_ce_6: 0.6023  loss_mask_6: 0.1947  loss_dice_6: 1.292  loss_ce_7: 0.6239  loss_mask_7: 0.1974  loss_dice_7: 1.255  loss_ce_8: 0.6158  loss_mask_8: 0.1998  loss_dice_8: 1.272    time: 1.0207  last_time: 1.0439  data_time: 0.0343  last_data_time: 0.0300   lr: 0.0001  max_mem: 32340M
[08/29 23:08:39] d2.utils.events INFO:  eta: 0:10:52  iter: 359  total_loss: 21.14  loss_ce: 0.6241  loss_mask: 0.1816  loss_dice: 1.213  loss_ce_0: 0.7282  loss_mask_0: 0.209  loss_dice_0: 1.468  loss_ce_1: 0.7948  loss_mask_1: 0.1982  loss_dice_1: 1.368  loss_ce_2: 0.7206  loss_mask_2: 0.1896  loss_dice_2: 1.307  loss_ce_3: 0.6677  loss_mask_3: 0.187  loss_dice_3: 1.276  loss_ce_4: 0.6318  loss_mask_4: 0.1869  loss_dice_4: 1.251  loss_ce_5: 0.6294  loss_mask_5: 0.186  loss_dice_5: 1.241  loss_ce_6: 0.6157  loss_mask_6: 0.1802  loss_dice_6: 1.234  loss_ce_7: 0.6421  loss_mask_7: 0.1823  loss_dice_7: 1.232  loss_ce_8: 0.6206  loss_mask_8: 0.1803  loss_dice_8: 1.213    time: 1.0211  last_time: 1.0328  data_time: 0.0355  last_data_time: 0.0405   lr: 0.0001  max_mem: 32340M
[08/29 23:09:00] d2.utils.events INFO:  eta: 0:10:32  iter: 379  total_loss: 22.39  loss_ce: 0.6407  loss_mask: 0.1878  loss_dice: 1.297  loss_ce_0: 0.6875  loss_mask_0: 0.2066  loss_dice_0: 1.546  loss_ce_1: 0.7989  loss_mask_1: 0.1979  loss_dice_1: 1.454  loss_ce_2: 0.7491  loss_mask_2: 0.1911  loss_dice_2: 1.388  loss_ce_3: 0.6987  loss_mask_3: 0.1859  loss_dice_3: 1.331  loss_ce_4: 0.6628  loss_mask_4: 0.185  loss_dice_4: 1.348  loss_ce_5: 0.6708  loss_mask_5: 0.1853  loss_dice_5: 1.317  loss_ce_6: 0.6394  loss_mask_6: 0.1895  loss_dice_6: 1.3  loss_ce_7: 0.6522  loss_mask_7: 0.1883  loss_dice_7: 1.312  loss_ce_8: 0.6467  loss_mask_8: 0.1863  loss_dice_8: 1.281    time: 1.0211  last_time: 1.0339  data_time: 0.0380  last_data_time: 0.0397   lr: 0.0001  max_mem: 32340M
[08/29 23:09:21] d2.utils.events INFO:  eta: 0:10:12  iter: 399  total_loss: 21.53  loss_ce: 0.5767  loss_mask: 0.1719  loss_dice: 1.308  loss_ce_0: 0.7065  loss_mask_0: 0.2007  loss_dice_0: 1.524  loss_ce_1: 0.7901  loss_mask_1: 0.1854  loss_dice_1: 1.425  loss_ce_2: 0.7085  loss_mask_2: 0.1749  loss_dice_2: 1.408  loss_ce_3: 0.6572  loss_mask_3: 0.1749  loss_dice_3: 1.342  loss_ce_4: 0.6342  loss_mask_4: 0.1738  loss_dice_4: 1.302  loss_ce_5: 0.6294  loss_mask_5: 0.173  loss_dice_5: 1.265  loss_ce_6: 0.5888  loss_mask_6: 0.1722  loss_dice_6: 1.298  loss_ce_7: 0.6107  loss_mask_7: 0.1727  loss_dice_7: 1.291  loss_ce_8: 0.5827  loss_mask_8: 0.1711  loss_dice_8: 1.26    time: 1.0228  last_time: 1.0627  data_time: 0.0398  last_data_time: 0.0402   lr: 0.0001  max_mem: 32340M
[08/29 23:09:42] d2.utils.events INFO:  eta: 0:09:52  iter: 419  total_loss: 23.39  loss_ce: 0.6415  loss_mask: 0.1866  loss_dice: 1.352  loss_ce_0: 0.7404  loss_mask_0: 0.2097  loss_dice_0: 1.648  loss_ce_1: 0.8309  loss_mask_1: 0.2038  loss_dice_1: 1.54  loss_ce_2: 0.772  loss_mask_2: 0.1893  loss_dice_2: 1.425  loss_ce_3: 0.7453  loss_mask_3: 0.1856  loss_dice_3: 1.409  loss_ce_4: 0.7059  loss_mask_4: 0.1895  loss_dice_4: 1.39  loss_ce_5: 0.6909  loss_mask_5: 0.1859  loss_dice_5: 1.373  loss_ce_6: 0.6787  loss_mask_6: 0.1848  loss_dice_6: 1.346  loss_ce_7: 0.6988  loss_mask_7: 0.1879  loss_dice_7: 1.384  loss_ce_8: 0.6846  loss_mask_8: 0.1845  loss_dice_8: 1.345    time: 1.0246  last_time: 1.0947  data_time: 0.0375  last_data_time: 0.0450   lr: 0.0001  max_mem: 33031M
[08/29 23:10:03] d2.utils.events INFO:  eta: 0:09:32  iter: 439  total_loss: 21.81  loss_ce: 0.5961  loss_mask: 0.187  loss_dice: 1.247  loss_ce_0: 0.7189  loss_mask_0: 0.2152  loss_dice_0: 1.479  loss_ce_1: 0.7861  loss_mask_1: 0.1994  loss_dice_1: 1.382  loss_ce_2: 0.71  loss_mask_2: 0.1942  loss_dice_2: 1.321  loss_ce_3: 0.6939  loss_mask_3: 0.1877  loss_dice_3: 1.272  loss_ce_4: 0.6362  loss_mask_4: 0.1896  loss_dice_4: 1.273  loss_ce_5: 0.6446  loss_mask_5: 0.1875  loss_dice_5: 1.276  loss_ce_6: 0.6045  loss_mask_6: 0.1852  loss_dice_6: 1.262  loss_ce_7: 0.6102  loss_mask_7: 0.1851  loss_dice_7: 1.263  loss_ce_8: 0.6134  loss_mask_8: 0.1844  loss_dice_8: 1.23    time: 1.0246  last_time: 1.0261  data_time: 0.0358  last_data_time: 0.0390   lr: 0.0001  max_mem: 33031M
[08/29 23:10:23] d2.utils.events INFO:  eta: 0:09:11  iter: 459  total_loss: 21.46  loss_ce: 0.5859  loss_mask: 0.1704  loss_dice: 1.237  loss_ce_0: 0.6385  loss_mask_0: 0.1974  loss_dice_0: 1.491  loss_ce_1: 0.7254  loss_mask_1: 0.1912  loss_dice_1: 1.348  loss_ce_2: 0.6691  loss_mask_2: 0.1795  loss_dice_2: 1.352  loss_ce_3: 0.6247  loss_mask_3: 0.1777  loss_dice_3: 1.287  loss_ce_4: 0.6366  loss_mask_4: 0.1727  loss_dice_4: 1.312  loss_ce_5: 0.6086  loss_mask_5: 0.1742  loss_dice_5: 1.294  loss_ce_6: 0.5975  loss_mask_6: 0.1722  loss_dice_6: 1.272  loss_ce_7: 0.5849  loss_mask_7: 0.1708  loss_dice_7: 1.293  loss_ce_8: 0.6077  loss_mask_8: 0.1715  loss_dice_8: 1.253    time: 1.0246  last_time: 0.9730  data_time: 0.0347  last_data_time: 0.0336   lr: 0.0001  max_mem: 33031M
[08/29 23:10:44] d2.utils.events INFO:  eta: 0:08:51  iter: 479  total_loss: 21.09  loss_ce: 0.5545  loss_mask: 0.1683  loss_dice: 1.298  loss_ce_0: 0.6229  loss_mask_0: 0.1896  loss_dice_0: 1.516  loss_ce_1: 0.6967  loss_mask_1: 0.1794  loss_dice_1: 1.421  loss_ce_2: 0.6288  loss_mask_2: 0.1715  loss_dice_2: 1.372  loss_ce_3: 0.5981  loss_mask_3: 0.1697  loss_dice_3: 1.337  loss_ce_4: 0.5757  loss_mask_4: 0.1696  loss_dice_4: 1.314  loss_ce_5: 0.5698  loss_mask_5: 0.1717  loss_dice_5: 1.292  loss_ce_6: 0.5705  loss_mask_6: 0.1703  loss_dice_6: 1.299  loss_ce_7: 0.5474  loss_mask_7: 0.1687  loss_dice_7: 1.264  loss_ce_8: 0.5469  loss_mask_8: 0.1677  loss_dice_8: 1.284    time: 1.0246  last_time: 0.9978  data_time: 0.0361  last_data_time: 0.0341   lr: 0.0001  max_mem: 33031M
[08/29 23:11:04] d2.utils.events INFO:  eta: 0:08:30  iter: 499  total_loss: 20.58  loss_ce: 0.6036  loss_mask: 0.1821  loss_dice: 1.218  loss_ce_0: 0.659  loss_mask_0: 0.2218  loss_dice_0: 1.39  loss_ce_1: 0.7868  loss_mask_1: 0.1971  loss_dice_1: 1.376  loss_ce_2: 0.6857  loss_mask_2: 0.192  loss_dice_2: 1.306  loss_ce_3: 0.6177  loss_mask_3: 0.1951  loss_dice_3: 1.272  loss_ce_4: 0.5901  loss_mask_4: 0.1891  loss_dice_4: 1.262  loss_ce_5: 0.5839  loss_mask_5: 0.1898  loss_dice_5: 1.267  loss_ce_6: 0.6067  loss_mask_6: 0.1856  loss_dice_6: 1.207  loss_ce_7: 0.6056  loss_mask_7: 0.1873  loss_dice_7: 1.248  loss_ce_8: 0.5798  loss_mask_8: 0.1847  loss_dice_8: 1.253    time: 1.0241  last_time: 0.9441  data_time: 0.0367  last_data_time: 0.0309   lr: 0.0001  max_mem: 33031M
[08/29 23:11:25] d2.utils.events INFO:  eta: 0:08:10  iter: 519  total_loss: 21.86  loss_ce: 0.5862  loss_mask: 0.1713  loss_dice: 1.279  loss_ce_0: 0.7161  loss_mask_0: 0.1918  loss_dice_0: 1.479  loss_ce_1: 0.7552  loss_mask_1: 0.1863  loss_dice_1: 1.395  loss_ce_2: 0.6766  loss_mask_2: 0.177  loss_dice_2: 1.344  loss_ce_3: 0.612  loss_mask_3: 0.1739  loss_dice_3: 1.367  loss_ce_4: 0.6103  loss_mask_4: 0.1731  loss_dice_4: 1.345  loss_ce_5: 0.6168  loss_mask_5: 0.169  loss_dice_5: 1.311  loss_ce_6: 0.6317  loss_mask_6: 0.1708  loss_dice_6: 1.288  loss_ce_7: 0.6118  loss_mask_7: 0.1711  loss_dice_7: 1.298  loss_ce_8: 0.6276  loss_mask_8: 0.1699  loss_dice_8: 1.279    time: 1.0247  last_time: 1.0877  data_time: 0.0392  last_data_time: 0.0399   lr: 0.0001  max_mem: 33031M
[08/29 23:11:45] d2.utils.events INFO:  eta: 0:07:49  iter: 539  total_loss: 21.57  loss_ce: 0.6093  loss_mask: 0.1807  loss_dice: 1.245  loss_ce_0: 0.7254  loss_mask_0: 0.2037  loss_dice_0: 1.51  loss_ce_1: 0.8059  loss_mask_1: 0.2019  loss_dice_1: 1.409  loss_ce_2: 0.7151  loss_mask_2: 0.1865  loss_dice_2: 1.354  loss_ce_3: 0.6744  loss_mask_3: 0.1833  loss_dice_3: 1.269  loss_ce_4: 0.6556  loss_mask_4: 0.1821  loss_dice_4: 1.283  loss_ce_5: 0.6525  loss_mask_5: 0.1815  loss_dice_5: 1.307  loss_ce_6: 0.6169  loss_mask_6: 0.1807  loss_dice_6: 1.257  loss_ce_7: 0.6113  loss_mask_7: 0.1807  loss_dice_7: 1.254  loss_ce_8: 0.6175  loss_mask_8: 0.18  loss_dice_8: 1.296    time: 1.0245  last_time: 1.0000  data_time: 0.0384  last_data_time: 0.0420   lr: 0.0001  max_mem: 33031M
[08/29 23:12:06] d2.utils.events INFO:  eta: 0:07:29  iter: 559  total_loss: 20.6  loss_ce: 0.5663  loss_mask: 0.1739  loss_dice: 1.234  loss_ce_0: 0.6623  loss_mask_0: 0.1993  loss_dice_0: 1.458  loss_ce_1: 0.7388  loss_mask_1: 0.1808  loss_dice_1: 1.364  loss_ce_2: 0.6741  loss_mask_2: 0.1745  loss_dice_2: 1.333  loss_ce_3: 0.5977  loss_mask_3: 0.1765  loss_dice_3: 1.279  loss_ce_4: 0.599  loss_mask_4: 0.1758  loss_dice_4: 1.278  loss_ce_5: 0.5711  loss_mask_5: 0.1742  loss_dice_5: 1.275  loss_ce_6: 0.5772  loss_mask_6: 0.1734  loss_dice_6: 1.219  loss_ce_7: 0.5477  loss_mask_7: 0.1721  loss_dice_7: 1.257  loss_ce_8: 0.581  loss_mask_8: 0.1707  loss_dice_8: 1.238    time: 1.0239  last_time: 0.9754  data_time: 0.0371  last_data_time: 0.0376   lr: 0.0001  max_mem: 33031M
[08/29 23:12:26] d2.utils.events INFO:  eta: 0:07:08  iter: 579  total_loss: 21.17  loss_ce: 0.5627  loss_mask: 0.178  loss_dice: 1.185  loss_ce_0: 0.7088  loss_mask_0: 0.2115  loss_dice_0: 1.427  loss_ce_1: 0.7933  loss_mask_1: 0.1983  loss_dice_1: 1.363  loss_ce_2: 0.6853  loss_mask_2: 0.1865  loss_dice_2: 1.326  loss_ce_3: 0.6542  loss_mask_3: 0.184  loss_dice_3: 1.239  loss_ce_4: 0.5845  loss_mask_4: 0.1829  loss_dice_4: 1.222  loss_ce_5: 0.6198  loss_mask_5: 0.1812  loss_dice_5: 1.192  loss_ce_6: 0.5873  loss_mask_6: 0.1762  loss_dice_6: 1.195  loss_ce_7: 0.5845  loss_mask_7: 0.1787  loss_dice_7: 1.195  loss_ce_8: 0.5968  loss_mask_8: 0.1776  loss_dice_8: 1.218    time: 1.0238  last_time: 0.9760  data_time: 0.0386  last_data_time: 0.0494   lr: 0.0001  max_mem: 33031M
[08/29 23:12:46] d2.utils.events INFO:  eta: 0:06:48  iter: 599  total_loss: 22.2  loss_ce: 0.6246  loss_mask: 0.1667  loss_dice: 1.284  loss_ce_0: 0.716  loss_mask_0: 0.2006  loss_dice_0: 1.55  loss_ce_1: 0.7619  loss_mask_1: 0.1867  loss_dice_1: 1.456  loss_ce_2: 0.7029  loss_mask_2: 0.1743  loss_dice_2: 1.34  loss_ce_3: 0.6838  loss_mask_3: 0.1721  loss_dice_3: 1.293  loss_ce_4: 0.6131  loss_mask_4: 0.1721  loss_dice_4: 1.303  loss_ce_5: 0.6374  loss_mask_5: 0.17  loss_dice_5: 1.293  loss_ce_6: 0.6049  loss_mask_6: 0.1708  loss_dice_6: 1.272  loss_ce_7: 0.6394  loss_mask_7: 0.168  loss_dice_7: 1.31  loss_ce_8: 0.6106  loss_mask_8: 0.1664  loss_dice_8: 1.285    time: 1.0237  last_time: 0.9705  data_time: 0.0390  last_data_time: 0.0358   lr: 0.0001  max_mem: 33031M
[08/29 23:13:07] d2.utils.events INFO:  eta: 0:06:27  iter: 619  total_loss: 21.63  loss_ce: 0.5624  loss_mask: 0.1861  loss_dice: 1.254  loss_ce_0: 0.6477  loss_mask_0: 0.2208  loss_dice_0: 1.485  loss_ce_1: 0.693  loss_mask_1: 0.1956  loss_dice_1: 1.397  loss_ce_2: 0.6759  loss_mask_2: 0.1877  loss_dice_2: 1.389  loss_ce_3: 0.6173  loss_mask_3: 0.192  loss_dice_3: 1.34  loss_ce_4: 0.6191  loss_mask_4: 0.1907  loss_dice_4: 1.299  loss_ce_5: 0.6134  loss_mask_5: 0.1891  loss_dice_5: 1.305  loss_ce_6: 0.592  loss_mask_6: 0.187  loss_dice_6: 1.301  loss_ce_7: 0.5669  loss_mask_7: 0.1867  loss_dice_7: 1.28  loss_ce_8: 0.5793  loss_mask_8: 0.1879  loss_dice_8: 1.287    time: 1.0235  last_time: 1.0278  data_time: 0.0380  last_data_time: 0.0288   lr: 0.0001  max_mem: 33031M
[08/29 23:13:28] d2.utils.events INFO:  eta: 0:06:07  iter: 639  total_loss: 21.38  loss_ce: 0.5934  loss_mask: 0.1633  loss_dice: 1.269  loss_ce_0: 0.6835  loss_mask_0: 0.1906  loss_dice_0: 1.528  loss_ce_1: 0.7243  loss_mask_1: 0.1769  loss_dice_1: 1.421  loss_ce_2: 0.7351  loss_mask_2: 0.1675  loss_dice_2: 1.337  loss_ce_3: 0.6342  loss_mask_3: 0.1645  loss_dice_3: 1.306  loss_ce_4: 0.6185  loss_mask_4: 0.1655  loss_dice_4: 1.281  loss_ce_5: 0.639  loss_mask_5: 0.1675  loss_dice_5: 1.294  loss_ce_6: 0.6086  loss_mask_6: 0.1678  loss_dice_6: 1.279  loss_ce_7: 0.5877  loss_mask_7: 0.1681  loss_dice_7: 1.298  loss_ce_8: 0.6001  loss_mask_8: 0.164  loss_dice_8: 1.284    time: 1.0243  last_time: 1.0659  data_time: 0.0366  last_data_time: 0.0355   lr: 0.0001  max_mem: 33031M
[08/29 23:13:48] d2.utils.events INFO:  eta: 0:05:46  iter: 659  total_loss: 21.76  loss_ce: 0.594  loss_mask: 0.1785  loss_dice: 1.245  loss_ce_0: 0.6738  loss_mask_0: 0.2078  loss_dice_0: 1.507  loss_ce_1: 0.8059  loss_mask_1: 0.1963  loss_dice_1: 1.387  loss_ce_2: 0.6859  loss_mask_2: 0.1867  loss_dice_2: 1.313  loss_ce_3: 0.6467  loss_mask_3: 0.1809  loss_dice_3: 1.245  loss_ce_4: 0.6335  loss_mask_4: 0.1811  loss_dice_4: 1.25  loss_ce_5: 0.6315  loss_mask_5: 0.1823  loss_dice_5: 1.227  loss_ce_6: 0.6286  loss_mask_6: 0.1801  loss_dice_6: 1.235  loss_ce_7: 0.5979  loss_mask_7: 0.1798  loss_dice_7: 1.256  loss_ce_8: 0.6094  loss_mask_8: 0.1782  loss_dice_8: 1.242    time: 1.0237  last_time: 0.9978  data_time: 0.0352  last_data_time: 0.0361   lr: 0.0001  max_mem: 33031M
[08/29 23:14:09] d2.utils.events INFO:  eta: 0:05:26  iter: 679  total_loss: 21.43  loss_ce: 0.6002  loss_mask: 0.1823  loss_dice: 1.233  loss_ce_0: 0.7103  loss_mask_0: 0.2141  loss_dice_0: 1.506  loss_ce_1: 0.7371  loss_mask_1: 0.2041  loss_dice_1: 1.441  loss_ce_2: 0.6828  loss_mask_2: 0.186  loss_dice_2: 1.342  loss_ce_3: 0.6541  loss_mask_3: 0.1874  loss_dice_3: 1.305  loss_ce_4: 0.5989  loss_mask_4: 0.1842  loss_dice_4: 1.285  loss_ce_5: 0.6326  loss_mask_5: 0.1854  loss_dice_5: 1.321  loss_ce_6: 0.5915  loss_mask_6: 0.1846  loss_dice_6: 1.245  loss_ce_7: 0.5904  loss_mask_7: 0.1875  loss_dice_7: 1.264  loss_ce_8: 0.599  loss_mask_8: 0.1832  loss_dice_8: 1.24    time: 1.0238  last_time: 1.0207  data_time: 0.0359  last_data_time: 0.0370   lr: 0.0001  max_mem: 33031M
[08/29 23:14:29] d2.utils.events INFO:  eta: 0:05:06  iter: 699  total_loss: 21.44  loss_ce: 0.6025  loss_mask: 0.183  loss_dice: 1.28  loss_ce_0: 0.6894  loss_mask_0: 0.2007  loss_dice_0: 1.511  loss_ce_1: 0.7572  loss_mask_1: 0.1974  loss_dice_1: 1.43  loss_ce_2: 0.6818  loss_mask_2: 0.1881  loss_dice_2: 1.334  loss_ce_3: 0.6635  loss_mask_3: 0.1844  loss_dice_3: 1.297  loss_ce_4: 0.6497  loss_mask_4: 0.1841  loss_dice_4: 1.276  loss_ce_5: 0.6498  loss_mask_5: 0.183  loss_dice_5: 1.33  loss_ce_6: 0.6077  loss_mask_6: 0.181  loss_dice_6: 1.276  loss_ce_7: 0.6469  loss_mask_7: 0.1821  loss_dice_7: 1.262  loss_ce_8: 0.6091  loss_mask_8: 0.1796  loss_dice_8: 1.294    time: 1.0239  last_time: 1.0265  data_time: 0.0370  last_data_time: 0.0256   lr: 0.0001  max_mem: 33031M
[08/29 23:14:50] d2.utils.events INFO:  eta: 0:04:45  iter: 719  total_loss: 20.92  loss_ce: 0.5826  loss_mask: 0.1739  loss_dice: 1.245  loss_ce_0: 0.6858  loss_mask_0: 0.1902  loss_dice_0: 1.473  loss_ce_1: 0.7425  loss_mask_1: 0.1843  loss_dice_1: 1.382  loss_ce_2: 0.6931  loss_mask_2: 0.1779  loss_dice_2: 1.313  loss_ce_3: 0.6341  loss_mask_3: 0.1762  loss_dice_3: 1.271  loss_ce_4: 0.6148  loss_mask_4: 0.1749  loss_dice_4: 1.253  loss_ce_5: 0.6059  loss_mask_5: 0.1736  loss_dice_5: 1.25  loss_ce_6: 0.5863  loss_mask_6: 0.1719  loss_dice_6: 1.215  loss_ce_7: 0.6111  loss_mask_7: 0.1707  loss_dice_7: 1.236  loss_ce_8: 0.6024  loss_mask_8: 0.1721  loss_dice_8: 1.231    time: 1.0238  last_time: 0.9938  data_time: 0.0367  last_data_time: 0.0314   lr: 0.0001  max_mem: 33031M
[08/29 23:15:10] d2.utils.events INFO:  eta: 0:04:25  iter: 739  total_loss: 20.75  loss_ce: 0.5905  loss_mask: 0.1874  loss_dice: 1.203  loss_ce_0: 0.6779  loss_mask_0: 0.217  loss_dice_0: 1.426  loss_ce_1: 0.7406  loss_mask_1: 0.2032  loss_dice_1: 1.378  loss_ce_2: 0.6763  loss_mask_2: 0.1923  loss_dice_2: 1.327  loss_ce_3: 0.627  loss_mask_3: 0.1879  loss_dice_3: 1.238  loss_ce_4: 0.622  loss_mask_4: 0.1877  loss_dice_4: 1.265  loss_ce_5: 0.5951  loss_mask_5: 0.1868  loss_dice_5: 1.244  loss_ce_6: 0.5907  loss_mask_6: 0.1897  loss_dice_6: 1.187  loss_ce_7: 0.6013  loss_mask_7: 0.1874  loss_dice_7: 1.172  loss_ce_8: 0.6049  loss_mask_8: 0.1884  loss_dice_8: 1.179    time: 1.0233  last_time: 1.0572  data_time: 0.0361  last_data_time: 0.0449   lr: 0.0001  max_mem: 33031M
[08/29 23:15:31] d2.utils.events INFO:  eta: 0:04:04  iter: 759  total_loss: 21.74  loss_ce: 0.6035  loss_mask: 0.1765  loss_dice: 1.225  loss_ce_0: 0.6752  loss_mask_0: 0.2144  loss_dice_0: 1.504  loss_ce_1: 0.742  loss_mask_1: 0.1911  loss_dice_1: 1.38  loss_ce_2: 0.6962  loss_mask_2: 0.1801  loss_dice_2: 1.333  loss_ce_3: 0.6297  loss_mask_3: 0.1789  loss_dice_3: 1.262  loss_ce_4: 0.6119  loss_mask_4: 0.1809  loss_dice_4: 1.281  loss_ce_5: 0.6142  loss_mask_5: 0.1764  loss_dice_5: 1.243  loss_ce_6: 0.628  loss_mask_6: 0.1757  loss_dice_6: 1.232  loss_ce_7: 0.5893  loss_mask_7: 0.1747  loss_dice_7: 1.227  loss_ce_8: 0.5912  loss_mask_8: 0.1779  loss_dice_8: 1.213    time: 1.0236  last_time: 1.0431  data_time: 0.0376  last_data_time: 0.0508   lr: 0.0001  max_mem: 33031M
[08/29 23:15:51] d2.utils.events INFO:  eta: 0:03:44  iter: 779  total_loss: 20.74  loss_ce: 0.5599  loss_mask: 0.174  loss_dice: 1.221  loss_ce_0: 0.6436  loss_mask_0: 0.1998  loss_dice_0: 1.477  loss_ce_1: 0.7241  loss_mask_1: 0.188  loss_dice_1: 1.407  loss_ce_2: 0.6598  loss_mask_2: 0.1777  loss_dice_2: 1.315  loss_ce_3: 0.6541  loss_mask_3: 0.1798  loss_dice_3: 1.27  loss_ce_4: 0.5973  loss_mask_4: 0.1797  loss_dice_4: 1.262  loss_ce_5: 0.6229  loss_mask_5: 0.1755  loss_dice_5: 1.249  loss_ce_6: 0.5811  loss_mask_6: 0.1785  loss_dice_6: 1.221  loss_ce_7: 0.5714  loss_mask_7: 0.1752  loss_dice_7: 1.235  loss_ce_8: 0.5458  loss_mask_8: 0.1728  loss_dice_8: 1.219    time: 1.0235  last_time: 1.0169  data_time: 0.0394  last_data_time: 0.0453   lr: 0.0001  max_mem: 33031M
[08/29 23:16:12] d2.utils.events INFO:  eta: 0:03:24  iter: 799  total_loss: 20.61  loss_ce: 0.5588  loss_mask: 0.1727  loss_dice: 1.197  loss_ce_0: 0.6849  loss_mask_0: 0.1995  loss_dice_0: 1.424  loss_ce_1: 0.7707  loss_mask_1: 0.1771  loss_dice_1: 1.37  loss_ce_2: 0.6853  loss_mask_2: 0.1717  loss_dice_2: 1.309  loss_ce_3: 0.6213  loss_mask_3: 0.1745  loss_dice_3: 1.22  loss_ce_4: 0.5929  loss_mask_4: 0.1715  loss_dice_4: 1.219  loss_ce_5: 0.6059  loss_mask_5: 0.1726  loss_dice_5: 1.244  loss_ce_6: 0.5755  loss_mask_6: 0.1739  loss_dice_6: 1.192  loss_ce_7: 0.5773  loss_mask_7: 0.1745  loss_dice_7: 1.191  loss_ce_8: 0.5795  loss_mask_8: 0.1725  loss_dice_8: 1.183    time: 1.0234  last_time: 0.9869  data_time: 0.0419  last_data_time: 0.0320   lr: 0.0001  max_mem: 33031M
[08/29 23:16:32] d2.utils.events INFO:  eta: 0:03:03  iter: 819  total_loss: 21.45  loss_ce: 0.5841  loss_mask: 0.1644  loss_dice: 1.29  loss_ce_0: 0.7054  loss_mask_0: 0.1864  loss_dice_0: 1.458  loss_ce_1: 0.7458  loss_mask_1: 0.1709  loss_dice_1: 1.405  loss_ce_2: 0.6702  loss_mask_2: 0.1639  loss_dice_2: 1.327  loss_ce_3: 0.6418  loss_mask_3: 0.1649  loss_dice_3: 1.283  loss_ce_4: 0.6504  loss_mask_4: 0.1659  loss_dice_4: 1.264  loss_ce_5: 0.6347  loss_mask_5: 0.1638  loss_dice_5: 1.31  loss_ce_6: 0.5793  loss_mask_6: 0.1658  loss_dice_6: 1.278  loss_ce_7: 0.5946  loss_mask_7: 0.1643  loss_dice_7: 1.27  loss_ce_8: 0.5988  loss_mask_8: 0.1638  loss_dice_8: 1.249    time: 1.0236  last_time: 1.1257  data_time: 0.0406  last_data_time: 0.0306   lr: 0.0001  max_mem: 33031M
[08/29 23:16:52] d2.utils.events INFO:  eta: 0:02:43  iter: 839  total_loss: 20.77  loss_ce: 0.5923  loss_mask: 0.1698  loss_dice: 1.196  loss_ce_0: 0.6861  loss_mask_0: 0.1936  loss_dice_0: 1.427  loss_ce_1: 0.755  loss_mask_1: 0.1816  loss_dice_1: 1.354  loss_ce_2: 0.6973  loss_mask_2: 0.1758  loss_dice_2: 1.315  loss_ce_3: 0.6464  loss_mask_3: 0.1745  loss_dice_3: 1.26  loss_ce_4: 0.5941  loss_mask_4: 0.1744  loss_dice_4: 1.267  loss_ce_5: 0.5866  loss_mask_5: 0.1728  loss_dice_5: 1.222  loss_ce_6: 0.5887  loss_mask_6: 0.1712  loss_dice_6: 1.218  loss_ce_7: 0.6065  loss_mask_7: 0.1707  loss_dice_7: 1.211  loss_ce_8: 0.578  loss_mask_8: 0.1694  loss_dice_8: 1.236    time: 1.0232  last_time: 1.0521  data_time: 0.0373  last_data_time: 0.0495   lr: 0.0001  max_mem: 33031M
[08/29 23:17:13] d2.utils.events INFO:  eta: 0:02:22  iter: 859  total_loss: 21.61  loss_ce: 0.5905  loss_mask: 0.1768  loss_dice: 1.236  loss_ce_0: 0.6483  loss_mask_0: 0.2009  loss_dice_0: 1.464  loss_ce_1: 0.6912  loss_mask_1: 0.1905  loss_dice_1: 1.386  loss_ce_2: 0.6625  loss_mask_2: 0.1812  loss_dice_2: 1.35  loss_ce_3: 0.6229  loss_mask_3: 0.18  loss_dice_3: 1.313  loss_ce_4: 0.6061  loss_mask_4: 0.1745  loss_dice_4: 1.273  loss_ce_5: 0.5788  loss_mask_5: 0.1766  loss_dice_5: 1.271  loss_ce_6: 0.5968  loss_mask_6: 0.1818  loss_dice_6: 1.244  loss_ce_7: 0.596  loss_mask_7: 0.1786  loss_dice_7: 1.253  loss_ce_8: 0.5735  loss_mask_8: 0.1791  loss_dice_8: 1.261    time: 1.0234  last_time: 0.9961  data_time: 0.0379  last_data_time: 0.0448   lr: 0.0001  max_mem: 33031M
[08/29 23:17:33] d2.utils.events INFO:  eta: 0:02:02  iter: 879  total_loss: 20.64  loss_ce: 0.5305  loss_mask: 0.1684  loss_dice: 1.254  loss_ce_0: 0.6694  loss_mask_0: 0.2019  loss_dice_0: 1.457  loss_ce_1: 0.7139  loss_mask_1: 0.1818  loss_dice_1: 1.363  loss_ce_2: 0.6437  loss_mask_2: 0.1738  loss_dice_2: 1.328  loss_ce_3: 0.5659  loss_mask_3: 0.1725  loss_dice_3: 1.287  loss_ce_4: 0.5684  loss_mask_4: 0.175  loss_dice_4: 1.257  loss_ce_5: 0.5439  loss_mask_5: 0.1695  loss_dice_5: 1.278  loss_ce_6: 0.5414  loss_mask_6: 0.1703  loss_dice_6: 1.232  loss_ce_7: 0.5601  loss_mask_7: 0.1707  loss_dice_7: 1.237  loss_ce_8: 0.5313  loss_mask_8: 0.1705  loss_dice_8: 1.242    time: 1.0232  last_time: 1.0207  data_time: 0.0400  last_data_time: 0.0420   lr: 0.0001  max_mem: 33031M
[08/29 23:17:54] d2.utils.events INFO:  eta: 0:01:41  iter: 899  total_loss: 21.05  loss_ce: 0.5731  loss_mask: 0.1746  loss_dice: 1.212  loss_ce_0: 0.6736  loss_mask_0: 0.2011  loss_dice_0: 1.454  loss_ce_1: 0.7271  loss_mask_1: 0.1857  loss_dice_1: 1.407  loss_ce_2: 0.62  loss_mask_2: 0.1837  loss_dice_2: 1.329  loss_ce_3: 0.6198  loss_mask_3: 0.1789  loss_dice_3: 1.271  loss_ce_4: 0.6059  loss_mask_4: 0.1795  loss_dice_4: 1.273  loss_ce_5: 0.5836  loss_mask_5: 0.1785  loss_dice_5: 1.248  loss_ce_6: 0.5798  loss_mask_6: 0.1766  loss_dice_6: 1.23  loss_ce_7: 0.5885  loss_mask_7: 0.1734  loss_dice_7: 1.206  loss_ce_8: 0.5874  loss_mask_8: 0.1738  loss_dice_8: 1.244    time: 1.0228  last_time: 0.9852  data_time: 0.0342  last_data_time: 0.0296   lr: 0.0001  max_mem: 33031M
[08/29 23:18:14] d2.utils.events INFO:  eta: 0:01:21  iter: 919  total_loss: 21.11  loss_ce: 0.5279  loss_mask: 0.1606  loss_dice: 1.296  loss_ce_0: 0.6754  loss_mask_0: 0.1863  loss_dice_0: 1.496  loss_ce_1: 0.7493  loss_mask_1: 0.1721  loss_dice_1: 1.416  loss_ce_2: 0.6554  loss_mask_2: 0.1632  loss_dice_2: 1.35  loss_ce_3: 0.6299  loss_mask_3: 0.1643  loss_dice_3: 1.289  loss_ce_4: 0.6157  loss_mask_4: 0.1635  loss_dice_4: 1.268  loss_ce_5: 0.5796  loss_mask_5: 0.1626  loss_dice_5: 1.308  loss_ce_6: 0.5889  loss_mask_6: 0.1644  loss_dice_6: 1.268  loss_ce_7: 0.5782  loss_mask_7: 0.1599  loss_dice_7: 1.261  loss_ce_8: 0.5602  loss_mask_8: 0.1619  loss_dice_8: 1.259    time: 1.0231  last_time: 1.0927  data_time: 0.0372  last_data_time: 0.0464   lr: 0.0001  max_mem: 33031M
[08/29 23:18:35] d2.utils.events INFO:  eta: 0:01:01  iter: 939  total_loss: 20.89  loss_ce: 0.5863  loss_mask: 0.1931  loss_dice: 1.206  loss_ce_0: 0.7033  loss_mask_0: 0.2169  loss_dice_0: 1.467  loss_ce_1: 0.7646  loss_mask_1: 0.2104  loss_dice_1: 1.38  loss_ce_2: 0.7073  loss_mask_2: 0.1989  loss_dice_2: 1.323  loss_ce_3: 0.6477  loss_mask_3: 0.1965  loss_dice_3: 1.247  loss_ce_4: 0.6326  loss_mask_4: 0.1906  loss_dice_4: 1.281  loss_ce_5: 0.6235  loss_mask_5: 0.1885  loss_dice_5: 1.208  loss_ce_6: 0.5867  loss_mask_6: 0.1939  loss_dice_6: 1.222  loss_ce_7: 0.5986  loss_mask_7: 0.194  loss_dice_7: 1.183  loss_ce_8: 0.586  loss_mask_8: 0.1937  loss_dice_8: 1.213    time: 1.0228  last_time: 1.0039  data_time: 0.0382  last_data_time: 0.0391   lr: 0.0001  max_mem: 33031M
[08/29 23:18:55] d2.utils.events INFO:  eta: 0:00:40  iter: 959  total_loss: 21.03  loss_ce: 0.5626  loss_mask: 0.1824  loss_dice: 1.216  loss_ce_0: 0.6861  loss_mask_0: 0.2135  loss_dice_0: 1.465  loss_ce_1: 0.7296  loss_mask_1: 0.198  loss_dice_1: 1.41  loss_ce_2: 0.671  loss_mask_2: 0.186  loss_dice_2: 1.327  loss_ce_3: 0.6179  loss_mask_3: 0.1843  loss_dice_3: 1.228  loss_ce_4: 0.5806  loss_mask_4: 0.1844  loss_dice_4: 1.256  loss_ce_5: 0.5956  loss_mask_5: 0.1799  loss_dice_5: 1.215  loss_ce_6: 0.5804  loss_mask_6: 0.1819  loss_dice_6: 1.215  loss_ce_7: 0.5757  loss_mask_7: 0.1801  loss_dice_7: 1.223  loss_ce_8: 0.573  loss_mask_8: 0.1811  loss_dice_8: 1.244    time: 1.0229  last_time: 1.0219  data_time: 0.0361  last_data_time: 0.0271   lr: 0.0001  max_mem: 33031M
[08/29 23:19:16] d2.utils.events INFO:  eta: 0:00:20  iter: 979  total_loss: 19.87  loss_ce: 0.5503  loss_mask: 0.1701  loss_dice: 1.158  loss_ce_0: 0.6142  loss_mask_0: 0.2005  loss_dice_0: 1.409  loss_ce_1: 0.7099  loss_mask_1: 0.1896  loss_dice_1: 1.308  loss_ce_2: 0.6358  loss_mask_2: 0.1786  loss_dice_2: 1.253  loss_ce_3: 0.5862  loss_mask_3: 0.1756  loss_dice_3: 1.227  loss_ce_4: 0.5897  loss_mask_4: 0.1742  loss_dice_4: 1.207  loss_ce_5: 0.5298  loss_mask_5: 0.1714  loss_dice_5: 1.216  loss_ce_6: 0.5565  loss_mask_6: 0.1734  loss_dice_6: 1.155  loss_ce_7: 0.5256  loss_mask_7: 0.1696  loss_dice_7: 1.184  loss_ce_8: 0.5618  loss_mask_8: 0.1714  loss_dice_8: 1.174    time: 1.0229  last_time: 1.1363  data_time: 0.0390  last_data_time: 0.0333   lr: 0.0001  max_mem: 33031M
[08/29 23:19:37] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_008_1000_19/model_final.pth
[08/29 23:19:39] d2.utils.events INFO:  eta: 0:00:00  iter: 999  total_loss: 21.2  loss_ce: 0.5368  loss_mask: 0.1636  loss_dice: 1.224  loss_ce_0: 0.666  loss_mask_0: 0.1866  loss_dice_0: 1.473  loss_ce_1: 0.7251  loss_mask_1: 0.1779  loss_dice_1: 1.398  loss_ce_2: 0.6278  loss_mask_2: 0.1683  loss_dice_2: 1.308  loss_ce_3: 0.6027  loss_mask_3: 0.1688  loss_dice_3: 1.257  loss_ce_4: 0.5819  loss_mask_4: 0.164  loss_dice_4: 1.276  loss_ce_5: 0.5582  loss_mask_5: 0.1614  loss_dice_5: 1.249  loss_ce_6: 0.5423  loss_mask_6: 0.1618  loss_dice_6: 1.251  loss_ce_7: 0.5662  loss_mask_7: 0.1628  loss_dice_7: 1.265  loss_ce_8: 0.5179  loss_mask_8: 0.163  loss_dice_8: 1.274    time: 1.0232  last_time: 1.0078  data_time: 0.0419  last_data_time: 0.0310   lr: 0.0001  max_mem: 33031M
[08/29 23:19:39] d2.engine.hooks INFO: Overall training speed: 998 iterations in 0:17:01 (1.0232 s / it)
[08/29 23:19:39] d2.engine.hooks INFO: Total training time: 0:17:06 (0:00:05 on hooks)
[08/29 23:19:39] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/29 23:19:39] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/29 23:19:39] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/29 23:19:39] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/29 23:19:39] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/29 23:19:39] d2.evaluation.evaluator INFO: Start inference on 500 batches
[08/29 23:19:44] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0022 s/iter. Inference: 0.2435 s/iter. Eval: 0.0563 s/iter. Total: 0.3021 s/iter. ETA=0:02:27
[08/29 23:19:49] d2.evaluation.evaluator INFO: Inference done 28/500. Dataloading: 0.0028 s/iter. Inference: 0.2400 s/iter. Eval: 0.0574 s/iter. Total: 0.3003 s/iter. ETA=0:02:21
[08/29 23:19:54] d2.evaluation.evaluator INFO: Inference done 45/500. Dataloading: 0.0029 s/iter. Inference: 0.2447 s/iter. Eval: 0.0572 s/iter. Total: 0.3049 s/iter. ETA=0:02:18
[08/29 23:19:59] d2.evaluation.evaluator INFO: Inference done 61/500. Dataloading: 0.0029 s/iter. Inference: 0.2488 s/iter. Eval: 0.0574 s/iter. Total: 0.3091 s/iter. ETA=0:02:15
[08/29 23:20:05] d2.evaluation.evaluator INFO: Inference done 77/500. Dataloading: 0.0029 s/iter. Inference: 0.2511 s/iter. Eval: 0.0572 s/iter. Total: 0.3113 s/iter. ETA=0:02:11
[08/29 23:20:10] d2.evaluation.evaluator INFO: Inference done 93/500. Dataloading: 0.0029 s/iter. Inference: 0.2527 s/iter. Eval: 0.0576 s/iter. Total: 0.3134 s/iter. ETA=0:02:07
[08/29 23:20:15] d2.evaluation.evaluator INFO: Inference done 110/500. Dataloading: 0.0029 s/iter. Inference: 0.2517 s/iter. Eval: 0.0575 s/iter. Total: 0.3123 s/iter. ETA=0:02:01
[08/29 23:20:20] d2.evaluation.evaluator INFO: Inference done 126/500. Dataloading: 0.0029 s/iter. Inference: 0.2523 s/iter. Eval: 0.0575 s/iter. Total: 0.3128 s/iter. ETA=0:01:56
[08/29 23:20:25] d2.evaluation.evaluator INFO: Inference done 142/500. Dataloading: 0.0029 s/iter. Inference: 0.2538 s/iter. Eval: 0.0575 s/iter. Total: 0.3143 s/iter. ETA=0:01:52
[08/29 23:20:30] d2.evaluation.evaluator INFO: Inference done 158/500. Dataloading: 0.0030 s/iter. Inference: 0.2541 s/iter. Eval: 0.0575 s/iter. Total: 0.3147 s/iter. ETA=0:01:47
[08/29 23:20:35] d2.evaluation.evaluator INFO: Inference done 174/500. Dataloading: 0.0030 s/iter. Inference: 0.2544 s/iter. Eval: 0.0575 s/iter. Total: 0.3149 s/iter. ETA=0:01:42
[08/29 23:20:40] d2.evaluation.evaluator INFO: Inference done 190/500. Dataloading: 0.0030 s/iter. Inference: 0.2547 s/iter. Eval: 0.0575 s/iter. Total: 0.3152 s/iter. ETA=0:01:37
[08/29 23:20:46] d2.evaluation.evaluator INFO: Inference done 207/500. Dataloading: 0.0030 s/iter. Inference: 0.2543 s/iter. Eval: 0.0574 s/iter. Total: 0.3148 s/iter. ETA=0:01:32
[08/29 23:20:51] d2.evaluation.evaluator INFO: Inference done 223/500. Dataloading: 0.0030 s/iter. Inference: 0.2545 s/iter. Eval: 0.0573 s/iter. Total: 0.3149 s/iter. ETA=0:01:27
[08/29 23:20:56] d2.evaluation.evaluator INFO: Inference done 240/500. Dataloading: 0.0030 s/iter. Inference: 0.2539 s/iter. Eval: 0.0573 s/iter. Total: 0.3143 s/iter. ETA=0:01:21
[08/29 23:21:01] d2.evaluation.evaluator INFO: Inference done 256/500. Dataloading: 0.0030 s/iter. Inference: 0.2546 s/iter. Eval: 0.0574 s/iter. Total: 0.3150 s/iter. ETA=0:01:16
[08/29 23:21:07] d2.evaluation.evaluator INFO: Inference done 273/500. Dataloading: 0.0030 s/iter. Inference: 0.2543 s/iter. Eval: 0.0574 s/iter. Total: 0.3147 s/iter. ETA=0:01:11
[08/29 23:21:12] d2.evaluation.evaluator INFO: Inference done 290/500. Dataloading: 0.0030 s/iter. Inference: 0.2540 s/iter. Eval: 0.0574 s/iter. Total: 0.3144 s/iter. ETA=0:01:06
[08/29 23:21:17] d2.evaluation.evaluator INFO: Inference done 306/500. Dataloading: 0.0030 s/iter. Inference: 0.2550 s/iter. Eval: 0.0573 s/iter. Total: 0.3153 s/iter. ETA=0:01:01
[08/29 23:21:22] d2.evaluation.evaluator INFO: Inference done 322/500. Dataloading: 0.0030 s/iter. Inference: 0.2551 s/iter. Eval: 0.0572 s/iter. Total: 0.3153 s/iter. ETA=0:00:56
[08/29 23:21:27] d2.evaluation.evaluator INFO: Inference done 338/500. Dataloading: 0.0030 s/iter. Inference: 0.2560 s/iter. Eval: 0.0572 s/iter. Total: 0.3162 s/iter. ETA=0:00:51
[08/29 23:21:33] d2.evaluation.evaluator INFO: Inference done 354/500. Dataloading: 0.0030 s/iter. Inference: 0.2562 s/iter. Eval: 0.0572 s/iter. Total: 0.3164 s/iter. ETA=0:00:46
[08/29 23:21:38] d2.evaluation.evaluator INFO: Inference done 370/500. Dataloading: 0.0030 s/iter. Inference: 0.2563 s/iter. Eval: 0.0571 s/iter. Total: 0.3165 s/iter. ETA=0:00:41
[08/29 23:21:43] d2.evaluation.evaluator INFO: Inference done 387/500. Dataloading: 0.0030 s/iter. Inference: 0.2556 s/iter. Eval: 0.0572 s/iter. Total: 0.3159 s/iter. ETA=0:00:35
[08/29 23:21:48] d2.evaluation.evaluator INFO: Inference done 404/500. Dataloading: 0.0029 s/iter. Inference: 0.2549 s/iter. Eval: 0.0572 s/iter. Total: 0.3151 s/iter. ETA=0:00:30
[08/29 23:21:53] d2.evaluation.evaluator INFO: Inference done 420/500. Dataloading: 0.0030 s/iter. Inference: 0.2552 s/iter. Eval: 0.0572 s/iter. Total: 0.3154 s/iter. ETA=0:00:25
[08/29 23:21:58] d2.evaluation.evaluator INFO: Inference done 437/500. Dataloading: 0.0029 s/iter. Inference: 0.2549 s/iter. Eval: 0.0572 s/iter. Total: 0.3151 s/iter. ETA=0:00:19
[08/29 23:22:04] d2.evaluation.evaluator INFO: Inference done 454/500. Dataloading: 0.0030 s/iter. Inference: 0.2548 s/iter. Eval: 0.0572 s/iter. Total: 0.3149 s/iter. ETA=0:00:14
[08/29 23:22:09] d2.evaluation.evaluator INFO: Inference done 470/500. Dataloading: 0.0030 s/iter. Inference: 0.2547 s/iter. Eval: 0.0571 s/iter. Total: 0.3149 s/iter. ETA=0:00:09
[08/29 23:22:14] d2.evaluation.evaluator INFO: Inference done 488/500. Dataloading: 0.0030 s/iter. Inference: 0.2539 s/iter. Eval: 0.0571 s/iter. Total: 0.3140 s/iter. ETA=0:00:03
[08/29 23:22:17] d2.evaluation.evaluator INFO: Total inference time: 0:02:35.266243 (0.313669 s / iter per device, on 1 devices)
[08/29 23:22:17] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:05 (0.253467 s / iter per device, on 1 devices)
[08/29 23:22:17] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_evalnw06338t ...
[08/29 23:22:34] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 51.577 | 80.315 | 63.178 |      19       |
| Things | 41.319 | 80.414 | 51.517 |       8       |
| Stuff  | 59.038 | 80.243 | 71.658 |      11       |
[08/29 23:22:34] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 95.602 | 96.506 | 99.063 |     Stuff     |
| class_8  | 51.165 | 82.161 | 62.274 |     Stuff     |
| class_11 | 83.963 | 88.853 | 94.496 |     Stuff     |
| class_12 | 31.043 | 77.114 | 40.256 |     Stuff     |
| class_13 | 30.770 | 74.873 | 41.096 |     Stuff     |
| class_17 | 42.266 | 63.202 | 66.874 |     Stuff     |
| class_19 | 46.642 | 68.331 | 68.259 |     Stuff     |
| class_20 | 62.659 | 76.287 | 82.135 |     Stuff     |
| class_21 | 88.861 | 89.786 | 98.969 |     Stuff     |
| class_22 | 29.378 | 74.027 | 39.686 |     Stuff     |
| class_23 | 87.075 | 91.533 | 95.130 |     Stuff     |
| class_24 | 45.505 | 76.096 | 59.799 |    Things     |
| class_25 | 33.906 | 71.812 | 47.215 |    Things     |
| class_26 | 61.372 | 83.820 | 73.219 |    Things     |
| class_27 | 44.208 | 86.065 | 51.366 |    Things     |
| class_28 | 60.356 | 90.005 | 67.059 |    Things     |
| class_31 | 13.854 | 90.051 | 15.385 |    Things     |
| class_32 | 36.509 | 74.346 | 49.107 |    Things     |
| class_33 | 34.839 | 71.122 | 48.985 |    Things     |
[08/29 23:22:34] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/29 23:22:34] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/29 23:22:34] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/29 23:22:34] d2.evaluation.testing INFO: copypaste: 51.5774,80.3152,63.1776,41.3186,80.4145,51.5168,59.0384,80.2430,71.6581,95.6020,96.5058,99.0635,51.1651,82.1614,62.2739,83.9627,88.8529,94.4964,31.0426,77.1137,40.2556,30.7698,74.8732,41.0959,42.2659,63.2019,66.8744,46.6422,68.3308,68.2594,62.6585,76.2872,82.1351,88.8607,89.7863,98.9691,29.3780,74.0267,39.6857,87.0754,91.5328,95.1302,45.5047,76.0958,59.7991,33.9059,71.8119,47.2149,61.3716,83.8196,73.2187,44.2082,86.0648,51.3661,60.3560,90.0046,67.0588,13.8541,90.0515,15.3846,36.5091,74.3457,49.1071,34.8391,71.1217,48.9851
