[08/30 21:31:35] detectron2 INFO: Rank of current process: 0. World size: 1
[08/30 21:31:36] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0                            NVIDIA L40S (arch=8.9)
Driver version                   555.42.06
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[08/30 21:31:36] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r101_exp_2000.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=1, num_machines=1, opts=[], resume=False)
[08/30 21:31:36] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r101_exp_2000.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r101.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 2000
TEST:
  EVAL_PERIOD: 2000


[08/30 21:31:36] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN101
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 512
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 2000
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 2000
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[08/30 21:31:36] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/config.yaml
[08/30 21:31:36] d2.utils.env INFO: Using a generated random seed 36717941
[08/30 21:31:41] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (6): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (7): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (8): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (9): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (10): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (11): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (12): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (13): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (14): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (15): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (16): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (17): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (18): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (19): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (20): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (21): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (22): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=512, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=512, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 512)
)
[08/30 21:31:41] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[08/30 21:31:41] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[08/30 21:31:41] d2.data.build INFO: Using training sampler TrainingSampler
[08/30 21:31:41] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/30 21:31:41] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[08/30 21:31:41] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[08/30 21:31:41] d2.data.build INFO: Making batched data loader with batch_size=8
[08/30 21:31:41] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[08/30 21:31:41] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth ...
[08/30 21:31:41] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/models/fcclip_cocopan_r101.pth ...
[08/30 21:31:44] fvcore.common.checkpoint WARNING: Skip loading parameter 'criterion.empty_weight' to the model due to incompatible shapes: (134,) in the checkpoint but (20,) in the model! You might want to double check if this is expected.
[08/30 21:31:44] fvcore.common.checkpoint WARNING: Some model parameters or buffers are not found in the checkpoint:
[34mbackbone.clip_model.ln_final.{bias, weight}[0m
[34mbackbone.clip_model.token_embedding.weight[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.0.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.1.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.10.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.11.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.2.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.3.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.4.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.5.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.6.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.7.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.8.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.out_proj.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.attn.{in_proj_bias, in_proj_weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_1.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.ln_2.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_fc.{bias, weight}[0m
[34mbackbone.clip_model.transformer.resblocks.9.mlp.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.c_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.k_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.positional_embedding[0m
[34mbackbone.clip_model.visual.attnpool.q_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.attnpool.v_proj.{bias, weight}[0m
[34mbackbone.clip_model.visual.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.conv1.weight[0m
[34mbackbone.clip_model.visual.conv2.weight[0m
[34mbackbone.clip_model.visual.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer1.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer1.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer1.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer1.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer2.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer2.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer2.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer2.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer3.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.10.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.10.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.10.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.10.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.10.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.10.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.11.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.11.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.11.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.11.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.11.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.11.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.12.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.12.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.12.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.12.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.12.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.12.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.13.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.13.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.13.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.13.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.13.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.13.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.14.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.14.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.14.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.14.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.14.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.14.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.15.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.15.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.15.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.15.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.15.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.15.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.16.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.16.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.16.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.16.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.16.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.16.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.17.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.17.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.17.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.17.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.17.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.17.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.18.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.18.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.18.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.18.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.18.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.18.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.19.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.19.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.19.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.19.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.19.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.19.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.2.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.20.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.20.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.20.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.20.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.20.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.20.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.21.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.21.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.21.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.21.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.21.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.21.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.22.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.22.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.22.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.22.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.22.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.22.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.3.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.3.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.3.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.4.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.4.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.4.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.5.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.5.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.5.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.6.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.6.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.6.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.6.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.6.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.6.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.7.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.7.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.7.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.7.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.7.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.7.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.8.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.8.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.8.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.8.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.8.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.8.conv3.weight[0m
[34mbackbone.clip_model.visual.layer3.9.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.9.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.9.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer3.9.conv1.weight[0m
[34mbackbone.clip_model.visual.layer3.9.conv2.weight[0m
[34mbackbone.clip_model.visual.layer3.9.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.0.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.0.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.0.weight[0m
[34mbackbone.clip_model.visual.layer4.0.downsample.1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.1.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.1.conv3.weight[0m
[34mbackbone.clip_model.visual.layer4.2.bn1.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn2.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.bn3.{bias, num_batches_tracked, running_mean, running_var, weight}[0m
[34mbackbone.clip_model.visual.layer4.2.conv1.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv2.weight[0m
[34mbackbone.clip_model.visual.layer4.2.conv3.weight[0m
[34mbackbone.clip_model.{logit_scale, positional_embedding, text_projection}[0m
[34mcriterion.empty_weight[0m
[08/30 21:31:44] d2.engine.train_loop INFO: Starting training from iteration 0
[08/30 21:32:09] d2.utils.events INFO:  eta: 0:35:48  iter: 19  total_loss: 32.16  loss_ce: 1.297  loss_mask: 0.3034  loss_dice: 1.442  loss_ce_0: 1.535  loss_mask_0: 0.312  loss_dice_0: 1.804  loss_ce_1: 1.44  loss_mask_1: 0.3139  loss_dice_1: 1.657  loss_ce_2: 1.412  loss_mask_2: 0.3071  loss_dice_2: 1.57  loss_ce_3: 1.373  loss_mask_3: 0.304  loss_dice_3: 1.505  loss_ce_4: 1.294  loss_mask_4: 0.3038  loss_dice_4: 1.503  loss_ce_5: 1.241  loss_mask_5: 0.3004  loss_dice_5: 1.471  loss_ce_6: 1.226  loss_mask_6: 0.304  loss_dice_6: 1.464  loss_ce_7: 1.263  loss_mask_7: 0.3019  loss_dice_7: 1.443  loss_ce_8: 1.255  loss_mask_8: 0.3039  loss_dice_8: 1.465    time: 1.0889  last_time: 1.0759  data_time: 0.1092  last_data_time: 0.0598   lr: 0.0001  max_mem: 30678M
[08/30 21:32:31] d2.utils.events INFO:  eta: 0:35:35  iter: 39  total_loss: 26.62  loss_ce: 0.8524  loss_mask: 0.2371  loss_dice: 1.43  loss_ce_0: 0.9084  loss_mask_0: 0.2683  loss_dice_0: 1.751  loss_ce_1: 1.01  loss_mask_1: 0.2582  loss_dice_1: 1.608  loss_ce_2: 0.9586  loss_mask_2: 0.244  loss_dice_2: 1.523  loss_ce_3: 0.9216  loss_mask_3: 0.2364  loss_dice_3: 1.489  loss_ce_4: 0.8535  loss_mask_4: 0.2342  loss_dice_4: 1.457  loss_ce_5: 0.8819  loss_mask_5: 0.2325  loss_dice_5: 1.466  loss_ce_6: 0.8801  loss_mask_6: 0.231  loss_dice_6: 1.423  loss_ce_7: 0.854  loss_mask_7: 0.2342  loss_dice_7: 1.429  loss_ce_8: 0.879  loss_mask_8: 0.233  loss_dice_8: 1.425    time: 1.0913  last_time: 1.0703  data_time: 0.0728  last_data_time: 0.0812   lr: 0.0001  max_mem: 31486M
[08/30 21:32:52] d2.utils.events INFO:  eta: 0:35:12  iter: 59  total_loss: 24.84  loss_ce: 0.7775  loss_mask: 0.2136  loss_dice: 1.347  loss_ce_0: 0.8645  loss_mask_0: 0.2497  loss_dice_0: 1.675  loss_ce_1: 0.9412  loss_mask_1: 0.2403  loss_dice_1: 1.551  loss_ce_2: 0.9153  loss_mask_2: 0.2265  loss_dice_2: 1.431  loss_ce_3: 0.8479  loss_mask_3: 0.2201  loss_dice_3: 1.401  loss_ce_4: 0.8375  loss_mask_4: 0.2122  loss_dice_4: 1.388  loss_ce_5: 0.7797  loss_mask_5: 0.2111  loss_dice_5: 1.398  loss_ce_6: 0.7785  loss_mask_6: 0.2175  loss_dice_6: 1.366  loss_ce_7: 0.7844  loss_mask_7: 0.2162  loss_dice_7: 1.376  loss_ce_8: 0.7765  loss_mask_8: 0.2127  loss_dice_8: 1.378    time: 1.0897  last_time: 1.1049  data_time: 0.0715  last_data_time: 0.0521   lr: 0.0001  max_mem: 31486M
[08/30 21:33:14] d2.utils.events INFO:  eta: 0:34:48  iter: 79  total_loss: 23.24  loss_ce: 0.7059  loss_mask: 0.206  loss_dice: 1.312  loss_ce_0: 0.7513  loss_mask_0: 0.25  loss_dice_0: 1.574  loss_ce_1: 0.8476  loss_mask_1: 0.23  loss_dice_1: 1.469  loss_ce_2: 0.7891  loss_mask_2: 0.2185  loss_dice_2: 1.392  loss_ce_3: 0.7332  loss_mask_3: 0.2125  loss_dice_3: 1.379  loss_ce_4: 0.7089  loss_mask_4: 0.2081  loss_dice_4: 1.338  loss_ce_5: 0.6947  loss_mask_5: 0.2071  loss_dice_5: 1.336  loss_ce_6: 0.716  loss_mask_6: 0.2081  loss_dice_6: 1.318  loss_ce_7: 0.7062  loss_mask_7: 0.2061  loss_dice_7: 1.332  loss_ce_8: 0.6983  loss_mask_8: 0.2032  loss_dice_8: 1.306    time: 1.0886  last_time: 1.0580  data_time: 0.0706  last_data_time: 0.0595   lr: 0.0001  max_mem: 31486M
[08/30 21:33:36] d2.utils.events INFO:  eta: 0:34:28  iter: 99  total_loss: 24.34  loss_ce: 0.7514  loss_mask: 0.1956  loss_dice: 1.367  loss_ce_0: 0.7956  loss_mask_0: 0.2268  loss_dice_0: 1.579  loss_ce_1: 0.8865  loss_mask_1: 0.204  loss_dice_1: 1.525  loss_ce_2: 0.7899  loss_mask_2: 0.1996  loss_dice_2: 1.467  loss_ce_3: 0.7798  loss_mask_3: 0.1986  loss_dice_3: 1.417  loss_ce_4: 0.7418  loss_mask_4: 0.1951  loss_dice_4: 1.409  loss_ce_5: 0.7135  loss_mask_5: 0.1957  loss_dice_5: 1.41  loss_ce_6: 0.697  loss_mask_6: 0.1956  loss_dice_6: 1.379  loss_ce_7: 0.7211  loss_mask_7: 0.1956  loss_dice_7: 1.39  loss_ce_8: 0.6858  loss_mask_8: 0.1938  loss_dice_8: 1.365    time: 1.0907  last_time: 1.0871  data_time: 0.0751  last_data_time: 0.0597   lr: 0.0001  max_mem: 31486M
[08/30 21:33:58] d2.utils.events INFO:  eta: 0:34:07  iter: 119  total_loss: 22.98  loss_ce: 0.6174  loss_mask: 0.199  loss_dice: 1.327  loss_ce_0: 0.7628  loss_mask_0: 0.2378  loss_dice_0: 1.612  loss_ce_1: 0.7791  loss_mask_1: 0.2086  loss_dice_1: 1.483  loss_ce_2: 0.7307  loss_mask_2: 0.2045  loss_dice_2: 1.416  loss_ce_3: 0.6854  loss_mask_3: 0.2008  loss_dice_3: 1.349  loss_ce_4: 0.6961  loss_mask_4: 0.2024  loss_dice_4: 1.349  loss_ce_5: 0.6675  loss_mask_5: 0.2013  loss_dice_5: 1.36  loss_ce_6: 0.6496  loss_mask_6: 0.1994  loss_dice_6: 1.313  loss_ce_7: 0.6587  loss_mask_7: 0.1985  loss_dice_7: 1.331  loss_ce_8: 0.6558  loss_mask_8: 0.1979  loss_dice_8: 1.344    time: 1.0926  last_time: 1.2142  data_time: 0.0776  last_data_time: 0.0709   lr: 0.0001  max_mem: 31850M
[08/30 21:34:20] d2.utils.events INFO:  eta: 0:33:50  iter: 139  total_loss: 23.07  loss_ce: 0.7065  loss_mask: 0.1889  loss_dice: 1.323  loss_ce_0: 0.7642  loss_mask_0: 0.2169  loss_dice_0: 1.569  loss_ce_1: 0.864  loss_mask_1: 0.2109  loss_dice_1: 1.457  loss_ce_2: 0.7869  loss_mask_2: 0.2022  loss_dice_2: 1.382  loss_ce_3: 0.7204  loss_mask_3: 0.196  loss_dice_3: 1.344  loss_ce_4: 0.7376  loss_mask_4: 0.1927  loss_dice_4: 1.343  loss_ce_5: 0.7509  loss_mask_5: 0.1892  loss_dice_5: 1.372  loss_ce_6: 0.7233  loss_mask_6: 0.19  loss_dice_6: 1.324  loss_ce_7: 0.7098  loss_mask_7: 0.192  loss_dice_7: 1.325  loss_ce_8: 0.7082  loss_mask_8: 0.1898  loss_dice_8: 1.268    time: 1.0941  last_time: 1.1646  data_time: 0.0739  last_data_time: 0.0674   lr: 0.0001  max_mem: 31850M
[08/30 21:34:42] d2.utils.events INFO:  eta: 0:33:30  iter: 159  total_loss: 22.2  loss_ce: 0.6692  loss_mask: 0.1973  loss_dice: 1.289  loss_ce_0: 0.7309  loss_mask_0: 0.2358  loss_dice_0: 1.609  loss_ce_1: 0.789  loss_mask_1: 0.2078  loss_dice_1: 1.478  loss_ce_2: 0.7453  loss_mask_2: 0.1985  loss_dice_2: 1.399  loss_ce_3: 0.6808  loss_mask_3: 0.1945  loss_dice_3: 1.309  loss_ce_4: 0.649  loss_mask_4: 0.2  loss_dice_4: 1.343  loss_ce_5: 0.6416  loss_mask_5: 0.1997  loss_dice_5: 1.321  loss_ce_6: 0.6333  loss_mask_6: 0.1975  loss_dice_6: 1.328  loss_ce_7: 0.6101  loss_mask_7: 0.1997  loss_dice_7: 1.298  loss_ce_8: 0.6456  loss_mask_8: 0.1969  loss_dice_8: 1.265    time: 1.0945  last_time: 1.1118  data_time: 0.0751  last_data_time: 0.0816   lr: 0.0001  max_mem: 31850M
[08/30 21:35:04] d2.utils.events INFO:  eta: 0:33:08  iter: 179  total_loss: 22.06  loss_ce: 0.5958  loss_mask: 0.1905  loss_dice: 1.279  loss_ce_0: 0.6468  loss_mask_0: 0.2203  loss_dice_0: 1.484  loss_ce_1: 0.7363  loss_mask_1: 0.202  loss_dice_1: 1.391  loss_ce_2: 0.675  loss_mask_2: 0.1918  loss_dice_2: 1.385  loss_ce_3: 0.6473  loss_mask_3: 0.187  loss_dice_3: 1.322  loss_ce_4: 0.6044  loss_mask_4: 0.1929  loss_dice_4: 1.332  loss_ce_5: 0.5968  loss_mask_5: 0.1879  loss_dice_5: 1.315  loss_ce_6: 0.5857  loss_mask_6: 0.1869  loss_dice_6: 1.294  loss_ce_7: 0.5939  loss_mask_7: 0.189  loss_dice_7: 1.305  loss_ce_8: 0.5978  loss_mask_8: 0.1892  loss_dice_8: 1.298    time: 1.0949  last_time: 1.1676  data_time: 0.0745  last_data_time: 0.0920   lr: 0.0001  max_mem: 31850M
[08/30 21:35:27] d2.utils.events INFO:  eta: 0:32:50  iter: 199  total_loss: 23.48  loss_ce: 0.6892  loss_mask: 0.1887  loss_dice: 1.306  loss_ce_0: 0.7186  loss_mask_0: 0.226  loss_dice_0: 1.582  loss_ce_1: 0.7522  loss_mask_1: 0.1977  loss_dice_1: 1.461  loss_ce_2: 0.737  loss_mask_2: 0.1918  loss_dice_2: 1.419  loss_ce_3: 0.7204  loss_mask_3: 0.1896  loss_dice_3: 1.358  loss_ce_4: 0.6817  loss_mask_4: 0.1935  loss_dice_4: 1.349  loss_ce_5: 0.7231  loss_mask_5: 0.19  loss_dice_5: 1.328  loss_ce_6: 0.6871  loss_mask_6: 0.1895  loss_dice_6: 1.326  loss_ce_7: 0.6737  loss_mask_7: 0.1921  loss_dice_7: 1.318  loss_ce_8: 0.6762  loss_mask_8: 0.1882  loss_dice_8: 1.329    time: 1.0968  last_time: 1.1614  data_time: 0.0793  last_data_time: 0.0857   lr: 0.0001  max_mem: 31850M
[08/30 21:35:49] d2.utils.events INFO:  eta: 0:32:30  iter: 219  total_loss: 23.72  loss_ce: 0.6483  loss_mask: 0.1884  loss_dice: 1.335  loss_ce_0: 0.7909  loss_mask_0: 0.2133  loss_dice_0: 1.6  loss_ce_1: 0.8269  loss_mask_1: 0.2013  loss_dice_1: 1.493  loss_ce_2: 0.7407  loss_mask_2: 0.1943  loss_dice_2: 1.443  loss_ce_3: 0.7038  loss_mask_3: 0.1935  loss_dice_3: 1.386  loss_ce_4: 0.7077  loss_mask_4: 0.19  loss_dice_4: 1.389  loss_ce_5: 0.7046  loss_mask_5: 0.193  loss_dice_5: 1.381  loss_ce_6: 0.6892  loss_mask_6: 0.1879  loss_dice_6: 1.365  loss_ce_7: 0.6782  loss_mask_7: 0.1889  loss_dice_7: 1.342  loss_ce_8: 0.6707  loss_mask_8: 0.1886  loss_dice_8: 1.373    time: 1.0990  last_time: 1.0880  data_time: 0.0801  last_data_time: 0.0846   lr: 0.0001  max_mem: 32543M
[08/30 21:36:11] d2.utils.events INFO:  eta: 0:32:07  iter: 239  total_loss: 21.65  loss_ce: 0.6897  loss_mask: 0.1815  loss_dice: 1.291  loss_ce_0: 0.7272  loss_mask_0: 0.2216  loss_dice_0: 1.536  loss_ce_1: 0.7729  loss_mask_1: 0.1964  loss_dice_1: 1.41  loss_ce_2: 0.7289  loss_mask_2: 0.187  loss_dice_2: 1.403  loss_ce_3: 0.6742  loss_mask_3: 0.1876  loss_dice_3: 1.31  loss_ce_4: 0.6706  loss_mask_4: 0.1897  loss_dice_4: 1.328  loss_ce_5: 0.6651  loss_mask_5: 0.1875  loss_dice_5: 1.318  loss_ce_6: 0.6247  loss_mask_6: 0.1824  loss_dice_6: 1.286  loss_ce_7: 0.6391  loss_mask_7: 0.1854  loss_dice_7: 1.324  loss_ce_8: 0.6347  loss_mask_8: 0.1845  loss_dice_8: 1.261    time: 1.0985  last_time: 1.0911  data_time: 0.0751  last_data_time: 0.0798   lr: 0.0001  max_mem: 32543M
[08/30 21:36:33] d2.utils.events INFO:  eta: 0:31:45  iter: 259  total_loss: 23.04  loss_ce: 0.6448  loss_mask: 0.1874  loss_dice: 1.272  loss_ce_0: 0.7165  loss_mask_0: 0.2166  loss_dice_0: 1.511  loss_ce_1: 0.7695  loss_mask_1: 0.199  loss_dice_1: 1.463  loss_ce_2: 0.7564  loss_mask_2: 0.1858  loss_dice_2: 1.357  loss_ce_3: 0.6845  loss_mask_3: 0.1902  loss_dice_3: 1.329  loss_ce_4: 0.6604  loss_mask_4: 0.1903  loss_dice_4: 1.314  loss_ce_5: 0.6533  loss_mask_5: 0.1898  loss_dice_5: 1.258  loss_ce_6: 0.642  loss_mask_6: 0.1867  loss_dice_6: 1.284  loss_ce_7: 0.6313  loss_mask_7: 0.1867  loss_dice_7: 1.31  loss_ce_8: 0.658  loss_mask_8: 0.1848  loss_dice_8: 1.298    time: 1.0975  last_time: 1.0647  data_time: 0.0714  last_data_time: 0.0633   lr: 0.0001  max_mem: 32543M
[08/30 21:36:55] d2.utils.events INFO:  eta: 0:31:25  iter: 279  total_loss: 21.88  loss_ce: 0.6128  loss_mask: 0.1785  loss_dice: 1.334  loss_ce_0: 0.7387  loss_mask_0: 0.2143  loss_dice_0: 1.517  loss_ce_1: 0.7743  loss_mask_1: 0.1987  loss_dice_1: 1.466  loss_ce_2: 0.7185  loss_mask_2: 0.183  loss_dice_2: 1.383  loss_ce_3: 0.6575  loss_mask_3: 0.1828  loss_dice_3: 1.354  loss_ce_4: 0.6516  loss_mask_4: 0.1794  loss_dice_4: 1.38  loss_ce_5: 0.6506  loss_mask_5: 0.1803  loss_dice_5: 1.345  loss_ce_6: 0.6069  loss_mask_6: 0.1781  loss_dice_6: 1.267  loss_ce_7: 0.6203  loss_mask_7: 0.1801  loss_dice_7: 1.283  loss_ce_8: 0.6248  loss_mask_8: 0.1778  loss_dice_8: 1.333    time: 1.0981  last_time: 1.1101  data_time: 0.0744  last_data_time: 0.0786   lr: 0.0001  max_mem: 32543M
[08/30 21:37:17] d2.utils.events INFO:  eta: 0:31:01  iter: 299  total_loss: 21.33  loss_ce: 0.6471  loss_mask: 0.1794  loss_dice: 1.203  loss_ce_0: 0.7181  loss_mask_0: 0.2041  loss_dice_0: 1.402  loss_ce_1: 0.7663  loss_mask_1: 0.19  loss_dice_1: 1.356  loss_ce_2: 0.7406  loss_mask_2: 0.1838  loss_dice_2: 1.263  loss_ce_3: 0.7261  loss_mask_3: 0.1809  loss_dice_3: 1.232  loss_ce_4: 0.6633  loss_mask_4: 0.1791  loss_dice_4: 1.233  loss_ce_5: 0.6905  loss_mask_5: 0.1786  loss_dice_5: 1.215  loss_ce_6: 0.6656  loss_mask_6: 0.1805  loss_dice_6: 1.202  loss_ce_7: 0.6561  loss_mask_7: 0.1804  loss_dice_7: 1.199  loss_ce_8: 0.6874  loss_mask_8: 0.18  loss_dice_8: 1.169    time: 1.0974  last_time: 1.1020  data_time: 0.0709  last_data_time: 0.0608   lr: 0.0001  max_mem: 32543M
[08/30 21:37:39] d2.utils.events INFO:  eta: 0:30:40  iter: 319  total_loss: 21.83  loss_ce: 0.6035  loss_mask: 0.1865  loss_dice: 1.328  loss_ce_0: 0.6724  loss_mask_0: 0.2177  loss_dice_0: 1.529  loss_ce_1: 0.7164  loss_mask_1: 0.1917  loss_dice_1: 1.441  loss_ce_2: 0.6932  loss_mask_2: 0.1948  loss_dice_2: 1.38  loss_ce_3: 0.6334  loss_mask_3: 0.19  loss_dice_3: 1.35  loss_ce_4: 0.621  loss_mask_4: 0.1909  loss_dice_4: 1.339  loss_ce_5: 0.6175  loss_mask_5: 0.1888  loss_dice_5: 1.341  loss_ce_6: 0.5984  loss_mask_6: 0.1869  loss_dice_6: 1.315  loss_ce_7: 0.6375  loss_mask_7: 0.1864  loss_dice_7: 1.309  loss_ce_8: 0.6331  loss_mask_8: 0.1875  loss_dice_8: 1.27    time: 1.0974  last_time: 1.0857  data_time: 0.0719  last_data_time: 0.0738   lr: 0.0001  max_mem: 32543M
[08/30 21:38:01] d2.utils.events INFO:  eta: 0:30:16  iter: 339  total_loss: 21.11  loss_ce: 0.598  loss_mask: 0.1911  loss_dice: 1.238  loss_ce_0: 0.6735  loss_mask_0: 0.2239  loss_dice_0: 1.46  loss_ce_1: 0.7401  loss_mask_1: 0.2022  loss_dice_1: 1.391  loss_ce_2: 0.6958  loss_mask_2: 0.1983  loss_dice_2: 1.292  loss_ce_3: 0.6465  loss_mask_3: 0.1957  loss_dice_3: 1.25  loss_ce_4: 0.6098  loss_mask_4: 0.1928  loss_dice_4: 1.264  loss_ce_5: 0.5862  loss_mask_5: 0.1952  loss_dice_5: 1.235  loss_ce_6: 0.6014  loss_mask_6: 0.1941  loss_dice_6: 1.226  loss_ce_7: 0.5748  loss_mask_7: 0.1938  loss_dice_7: 1.223  loss_ce_8: 0.5714  loss_mask_8: 0.1917  loss_dice_8: 1.199    time: 1.0966  last_time: 1.0834  data_time: 0.0708  last_data_time: 0.0792   lr: 0.0001  max_mem: 32543M
[08/30 21:38:23] d2.utils.events INFO:  eta: 0:29:55  iter: 359  total_loss: 21.64  loss_ce: 0.5795  loss_mask: 0.1788  loss_dice: 1.24  loss_ce_0: 0.7015  loss_mask_0: 0.2014  loss_dice_0: 1.512  loss_ce_1: 0.7578  loss_mask_1: 0.1928  loss_dice_1: 1.377  loss_ce_2: 0.6685  loss_mask_2: 0.1875  loss_dice_2: 1.329  loss_ce_3: 0.6517  loss_mask_3: 0.1849  loss_dice_3: 1.272  loss_ce_4: 0.6328  loss_mask_4: 0.1823  loss_dice_4: 1.266  loss_ce_5: 0.644  loss_mask_5: 0.1825  loss_dice_5: 1.261  loss_ce_6: 0.5753  loss_mask_6: 0.183  loss_dice_6: 1.238  loss_ce_7: 0.5677  loss_mask_7: 0.1773  loss_dice_7: 1.248  loss_ce_8: 0.6069  loss_mask_8: 0.1763  loss_dice_8: 1.248    time: 1.0973  last_time: 1.1174  data_time: 0.0739  last_data_time: 0.0600   lr: 0.0001  max_mem: 32543M
[08/30 21:38:45] d2.utils.events INFO:  eta: 0:29:33  iter: 379  total_loss: 21.57  loss_ce: 0.6545  loss_mask: 0.1624  loss_dice: 1.283  loss_ce_0: 0.7106  loss_mask_0: 0.194  loss_dice_0: 1.533  loss_ce_1: 0.7746  loss_mask_1: 0.1847  loss_dice_1: 1.452  loss_ce_2: 0.707  loss_mask_2: 0.1694  loss_dice_2: 1.374  loss_ce_3: 0.6736  loss_mask_3: 0.1705  loss_dice_3: 1.324  loss_ce_4: 0.6673  loss_mask_4: 0.1693  loss_dice_4: 1.358  loss_ce_5: 0.6471  loss_mask_5: 0.1667  loss_dice_5: 1.36  loss_ce_6: 0.6911  loss_mask_6: 0.1673  loss_dice_6: 1.338  loss_ce_7: 0.6638  loss_mask_7: 0.168  loss_dice_7: 1.316  loss_ce_8: 0.6605  loss_mask_8: 0.1652  loss_dice_8: 1.308    time: 1.0975  last_time: 1.0629  data_time: 0.0731  last_data_time: 0.0595   lr: 0.0001  max_mem: 32543M
[08/30 21:39:07] d2.utils.events INFO:  eta: 0:29:12  iter: 399  total_loss: 21.61  loss_ce: 0.5896  loss_mask: 0.1803  loss_dice: 1.27  loss_ce_0: 0.6924  loss_mask_0: 0.2168  loss_dice_0: 1.514  loss_ce_1: 0.7547  loss_mask_1: 0.2017  loss_dice_1: 1.426  loss_ce_2: 0.708  loss_mask_2: 0.1877  loss_dice_2: 1.365  loss_ce_3: 0.6814  loss_mask_3: 0.1874  loss_dice_3: 1.315  loss_ce_4: 0.6533  loss_mask_4: 0.1872  loss_dice_4: 1.274  loss_ce_5: 0.6262  loss_mask_5: 0.1778  loss_dice_5: 1.285  loss_ce_6: 0.6064  loss_mask_6: 0.181  loss_dice_6: 1.282  loss_ce_7: 0.6063  loss_mask_7: 0.1829  loss_dice_7: 1.247  loss_ce_8: 0.6023  loss_mask_8: 0.1811  loss_dice_8: 1.303    time: 1.0975  last_time: 1.0992  data_time: 0.0727  last_data_time: 0.0740   lr: 0.0001  max_mem: 32543M
[08/30 21:39:29] d2.utils.events INFO:  eta: 0:28:48  iter: 419  total_loss: 21.68  loss_ce: 0.5568  loss_mask: 0.2014  loss_dice: 1.277  loss_ce_0: 0.644  loss_mask_0: 0.2276  loss_dice_0: 1.494  loss_ce_1: 0.6954  loss_mask_1: 0.2127  loss_dice_1: 1.401  loss_ce_2: 0.6898  loss_mask_2: 0.2022  loss_dice_2: 1.383  loss_ce_3: 0.6542  loss_mask_3: 0.201  loss_dice_3: 1.283  loss_ce_4: 0.6333  loss_mask_4: 0.2005  loss_dice_4: 1.321  loss_ce_5: 0.5833  loss_mask_5: 0.2008  loss_dice_5: 1.287  loss_ce_6: 0.5976  loss_mask_6: 0.2037  loss_dice_6: 1.263  loss_ce_7: 0.5929  loss_mask_7: 0.1995  loss_dice_7: 1.243  loss_ce_8: 0.5738  loss_mask_8: 0.2019  loss_dice_8: 1.272    time: 1.0968  last_time: 1.1533  data_time: 0.0721  last_data_time: 0.0764   lr: 0.0001  max_mem: 32543M
[08/30 21:39:50] d2.utils.events INFO:  eta: 0:28:25  iter: 439  total_loss: 20.86  loss_ce: 0.5546  loss_mask: 0.1779  loss_dice: 1.187  loss_ce_0: 0.658  loss_mask_0: 0.2014  loss_dice_0: 1.453  loss_ce_1: 0.7426  loss_mask_1: 0.1927  loss_dice_1: 1.373  loss_ce_2: 0.6706  loss_mask_2: 0.1855  loss_dice_2: 1.312  loss_ce_3: 0.612  loss_mask_3: 0.1847  loss_dice_3: 1.273  loss_ce_4: 0.592  loss_mask_4: 0.1868  loss_dice_4: 1.259  loss_ce_5: 0.6078  loss_mask_5: 0.1833  loss_dice_5: 1.266  loss_ce_6: 0.573  loss_mask_6: 0.1807  loss_dice_6: 1.239  loss_ce_7: 0.5617  loss_mask_7: 0.1791  loss_dice_7: 1.211  loss_ce_8: 0.55  loss_mask_8: 0.1784  loss_dice_8: 1.193    time: 1.0962  last_time: 1.2337  data_time: 0.0685  last_data_time: 0.0722   lr: 0.0001  max_mem: 32543M
[08/30 21:40:13] d2.utils.events INFO:  eta: 0:28:05  iter: 459  total_loss: 22.16  loss_ce: 0.5881  loss_mask: 0.1564  loss_dice: 1.327  loss_ce_0: 0.6704  loss_mask_0: 0.1887  loss_dice_0: 1.608  loss_ce_1: 0.7094  loss_mask_1: 0.1739  loss_dice_1: 1.53  loss_ce_2: 0.6799  loss_mask_2: 0.168  loss_dice_2: 1.461  loss_ce_3: 0.6624  loss_mask_3: 0.1665  loss_dice_3: 1.395  loss_ce_4: 0.6209  loss_mask_4: 0.1635  loss_dice_4: 1.34  loss_ce_5: 0.6012  loss_mask_5: 0.1601  loss_dice_5: 1.369  loss_ce_6: 0.5925  loss_mask_6: 0.1601  loss_dice_6: 1.332  loss_ce_7: 0.583  loss_mask_7: 0.162  loss_dice_7: 1.35  loss_ce_8: 0.6059  loss_mask_8: 0.1643  loss_dice_8: 1.367    time: 1.0973  last_time: 1.1459  data_time: 0.0766  last_data_time: 0.0654   lr: 0.0001  max_mem: 32839M
[08/30 21:40:35] d2.utils.events INFO:  eta: 0:27:42  iter: 479  total_loss: 21.17  loss_ce: 0.5827  loss_mask: 0.1843  loss_dice: 1.206  loss_ce_0: 0.7101  loss_mask_0: 0.225  loss_dice_0: 1.462  loss_ce_1: 0.7448  loss_mask_1: 0.2044  loss_dice_1: 1.338  loss_ce_2: 0.7111  loss_mask_2: 0.1911  loss_dice_2: 1.31  loss_ce_3: 0.6776  loss_mask_3: 0.1883  loss_dice_3: 1.232  loss_ce_4: 0.6012  loss_mask_4: 0.1844  loss_dice_4: 1.27  loss_ce_5: 0.6161  loss_mask_5: 0.1865  loss_dice_5: 1.222  loss_ce_6: 0.6175  loss_mask_6: 0.1828  loss_dice_6: 1.253  loss_ce_7: 0.6154  loss_mask_7: 0.1815  loss_dice_7: 1.217  loss_ce_8: 0.5971  loss_mask_8: 0.1825  loss_dice_8: 1.22    time: 1.0972  last_time: 1.0613  data_time: 0.0694  last_data_time: 0.0736   lr: 0.0001  max_mem: 32839M
[08/30 21:40:57] d2.utils.events INFO:  eta: 0:27:21  iter: 499  total_loss: 21.88  loss_ce: 0.6064  loss_mask: 0.1696  loss_dice: 1.263  loss_ce_0: 0.7178  loss_mask_0: 0.2062  loss_dice_0: 1.505  loss_ce_1: 0.761  loss_mask_1: 0.1854  loss_dice_1: 1.407  loss_ce_2: 0.697  loss_mask_2: 0.1733  loss_dice_2: 1.371  loss_ce_3: 0.6727  loss_mask_3: 0.1723  loss_dice_3: 1.27  loss_ce_4: 0.6401  loss_mask_4: 0.1727  loss_dice_4: 1.271  loss_ce_5: 0.6114  loss_mask_5: 0.1699  loss_dice_5: 1.249  loss_ce_6: 0.6083  loss_mask_6: 0.1721  loss_dice_6: 1.29  loss_ce_7: 0.603  loss_mask_7: 0.1707  loss_dice_7: 1.264  loss_ce_8: 0.6111  loss_mask_8: 0.1695  loss_dice_8: 1.265    time: 1.0976  last_time: 1.1142  data_time: 0.0751  last_data_time: 0.0847   lr: 0.0001  max_mem: 32839M
[08/30 21:41:19] d2.utils.events INFO:  eta: 0:26:59  iter: 519  total_loss: 21.15  loss_ce: 0.5592  loss_mask: 0.1857  loss_dice: 1.244  loss_ce_0: 0.6605  loss_mask_0: 0.2152  loss_dice_0: 1.478  loss_ce_1: 0.6841  loss_mask_1: 0.2024  loss_dice_1: 1.398  loss_ce_2: 0.6487  loss_mask_2: 0.1848  loss_dice_2: 1.344  loss_ce_3: 0.6093  loss_mask_3: 0.1843  loss_dice_3: 1.309  loss_ce_4: 0.5861  loss_mask_4: 0.1827  loss_dice_4: 1.249  loss_ce_5: 0.5872  loss_mask_5: 0.1827  loss_dice_5: 1.261  loss_ce_6: 0.5701  loss_mask_6: 0.1852  loss_dice_6: 1.252  loss_ce_7: 0.5764  loss_mask_7: 0.1795  loss_dice_7: 1.241  loss_ce_8: 0.5956  loss_mask_8: 0.1878  loss_dice_8: 1.247    time: 1.0980  last_time: 1.0889  data_time: 0.0760  last_data_time: 0.0622   lr: 0.0001  max_mem: 32839M
[08/30 21:41:41] d2.utils.events INFO:  eta: 0:26:37  iter: 539  total_loss: 21.55  loss_ce: 0.5804  loss_mask: 0.1773  loss_dice: 1.221  loss_ce_0: 0.6474  loss_mask_0: 0.2066  loss_dice_0: 1.524  loss_ce_1: 0.7585  loss_mask_1: 0.1942  loss_dice_1: 1.387  loss_ce_2: 0.7113  loss_mask_2: 0.1814  loss_dice_2: 1.333  loss_ce_3: 0.6761  loss_mask_3: 0.1809  loss_dice_3: 1.298  loss_ce_4: 0.6194  loss_mask_4: 0.1757  loss_dice_4: 1.291  loss_ce_5: 0.6028  loss_mask_5: 0.1795  loss_dice_5: 1.289  loss_ce_6: 0.6084  loss_mask_6: 0.1778  loss_dice_6: 1.267  loss_ce_7: 0.6213  loss_mask_7: 0.175  loss_dice_7: 1.26  loss_ce_8: 0.6084  loss_mask_8: 0.1792  loss_dice_8: 1.3    time: 1.0978  last_time: 1.0567  data_time: 0.0720  last_data_time: 0.0638   lr: 0.0001  max_mem: 32839M
[08/30 21:42:03] d2.utils.events INFO:  eta: 0:26:15  iter: 559  total_loss: 20.78  loss_ce: 0.573  loss_mask: 0.1867  loss_dice: 1.223  loss_ce_0: 0.6645  loss_mask_0: 0.2146  loss_dice_0: 1.406  loss_ce_1: 0.7442  loss_mask_1: 0.1974  loss_dice_1: 1.332  loss_ce_2: 0.6629  loss_mask_2: 0.1876  loss_dice_2: 1.279  loss_ce_3: 0.6417  loss_mask_3: 0.1832  loss_dice_3: 1.266  loss_ce_4: 0.6286  loss_mask_4: 0.1819  loss_dice_4: 1.237  loss_ce_5: 0.6061  loss_mask_5: 0.1828  loss_dice_5: 1.207  loss_ce_6: 0.5852  loss_mask_6: 0.1862  loss_dice_6: 1.225  loss_ce_7: 0.5842  loss_mask_7: 0.1821  loss_dice_7: 1.209  loss_ce_8: 0.5996  loss_mask_8: 0.1838  loss_dice_8: 1.222    time: 1.0975  last_time: 1.0578  data_time: 0.0699  last_data_time: 0.0591   lr: 0.0001  max_mem: 32839M
[08/30 21:42:25] d2.utils.events INFO:  eta: 0:25:53  iter: 579  total_loss: 21.24  loss_ce: 0.6354  loss_mask: 0.177  loss_dice: 1.233  loss_ce_0: 0.7086  loss_mask_0: 0.2068  loss_dice_0: 1.47  loss_ce_1: 0.7696  loss_mask_1: 0.1883  loss_dice_1: 1.385  loss_ce_2: 0.7505  loss_mask_2: 0.1761  loss_dice_2: 1.339  loss_ce_3: 0.6824  loss_mask_3: 0.1747  loss_dice_3: 1.276  loss_ce_4: 0.6619  loss_mask_4: 0.1726  loss_dice_4: 1.252  loss_ce_5: 0.6413  loss_mask_5: 0.1733  loss_dice_5: 1.251  loss_ce_6: 0.6249  loss_mask_6: 0.1766  loss_dice_6: 1.262  loss_ce_7: 0.6292  loss_mask_7: 0.1752  loss_dice_7: 1.24  loss_ce_8: 0.6148  loss_mask_8: 0.1757  loss_dice_8: 1.233    time: 1.0973  last_time: 1.0788  data_time: 0.0689  last_data_time: 0.0661   lr: 0.0001  max_mem: 32839M
[08/30 21:42:47] d2.utils.events INFO:  eta: 0:25:31  iter: 599  total_loss: 21.05  loss_ce: 0.5754  loss_mask: 0.1713  loss_dice: 1.279  loss_ce_0: 0.6744  loss_mask_0: 0.2008  loss_dice_0: 1.516  loss_ce_1: 0.7247  loss_mask_1: 0.1918  loss_dice_1: 1.4  loss_ce_2: 0.654  loss_mask_2: 0.1817  loss_dice_2: 1.331  loss_ce_3: 0.6026  loss_mask_3: 0.1767  loss_dice_3: 1.296  loss_ce_4: 0.5949  loss_mask_4: 0.1741  loss_dice_4: 1.252  loss_ce_5: 0.5854  loss_mask_5: 0.1711  loss_dice_5: 1.276  loss_ce_6: 0.5856  loss_mask_6: 0.1709  loss_dice_6: 1.24  loss_ce_7: 0.5939  loss_mask_7: 0.1726  loss_dice_7: 1.246  loss_ce_8: 0.5614  loss_mask_8: 0.1714  loss_dice_8: 1.271    time: 1.0975  last_time: 1.1341  data_time: 0.0737  last_data_time: 0.0758   lr: 0.0001  max_mem: 32839M
[08/30 21:43:09] d2.utils.events INFO:  eta: 0:25:10  iter: 619  total_loss: 21.53  loss_ce: 0.5907  loss_mask: 0.1802  loss_dice: 1.252  loss_ce_0: 0.7021  loss_mask_0: 0.2053  loss_dice_0: 1.487  loss_ce_1: 0.707  loss_mask_1: 0.195  loss_dice_1: 1.403  loss_ce_2: 0.6765  loss_mask_2: 0.1833  loss_dice_2: 1.321  loss_ce_3: 0.6186  loss_mask_3: 0.1845  loss_dice_3: 1.284  loss_ce_4: 0.6122  loss_mask_4: 0.1837  loss_dice_4: 1.292  loss_ce_5: 0.6215  loss_mask_5: 0.1816  loss_dice_5: 1.255  loss_ce_6: 0.5965  loss_mask_6: 0.1798  loss_dice_6: 1.287  loss_ce_7: 0.6044  loss_mask_7: 0.1798  loss_dice_7: 1.271  loss_ce_8: 0.6004  loss_mask_8: 0.1783  loss_dice_8: 1.256    time: 1.0977  last_time: 1.1077  data_time: 0.0733  last_data_time: 0.0755   lr: 0.0001  max_mem: 32839M
[08/30 21:43:31] d2.utils.events INFO:  eta: 0:24:48  iter: 639  total_loss: 21.55  loss_ce: 0.5886  loss_mask: 0.1747  loss_dice: 1.314  loss_ce_0: 0.6833  loss_mask_0: 0.209  loss_dice_0: 1.466  loss_ce_1: 0.7372  loss_mask_1: 0.189  loss_dice_1: 1.432  loss_ce_2: 0.7111  loss_mask_2: 0.1805  loss_dice_2: 1.341  loss_ce_3: 0.6553  loss_mask_3: 0.1742  loss_dice_3: 1.302  loss_ce_4: 0.6206  loss_mask_4: 0.173  loss_dice_4: 1.308  loss_ce_5: 0.5778  loss_mask_5: 0.1771  loss_dice_5: 1.299  loss_ce_6: 0.5992  loss_mask_6: 0.172  loss_dice_6: 1.286  loss_ce_7: 0.5783  loss_mask_7: 0.1731  loss_dice_7: 1.284  loss_ce_8: 0.569  loss_mask_8: 0.1715  loss_dice_8: 1.287    time: 1.0976  last_time: 1.0402  data_time: 0.0742  last_data_time: 0.0616   lr: 0.0001  max_mem: 32839M
[08/30 21:43:53] d2.utils.events INFO:  eta: 0:24:26  iter: 659  total_loss: 20.81  loss_ce: 0.5727  loss_mask: 0.1739  loss_dice: 1.258  loss_ce_0: 0.6792  loss_mask_0: 0.1961  loss_dice_0: 1.429  loss_ce_1: 0.7521  loss_mask_1: 0.1906  loss_dice_1: 1.388  loss_ce_2: 0.679  loss_mask_2: 0.1797  loss_dice_2: 1.305  loss_ce_3: 0.5885  loss_mask_3: 0.1766  loss_dice_3: 1.258  loss_ce_4: 0.6082  loss_mask_4: 0.1774  loss_dice_4: 1.256  loss_ce_5: 0.6011  loss_mask_5: 0.1758  loss_dice_5: 1.27  loss_ce_6: 0.5517  loss_mask_6: 0.173  loss_dice_6: 1.221  loss_ce_7: 0.5706  loss_mask_7: 0.1723  loss_dice_7: 1.215  loss_ce_8: 0.5872  loss_mask_8: 0.1732  loss_dice_8: 1.23    time: 1.0976  last_time: 1.0784  data_time: 0.0703  last_data_time: 0.0594   lr: 0.0001  max_mem: 32839M
[08/30 21:44:15] d2.utils.events INFO:  eta: 0:24:04  iter: 679  total_loss: 21.84  loss_ce: 0.5598  loss_mask: 0.1649  loss_dice: 1.306  loss_ce_0: 0.652  loss_mask_0: 0.1957  loss_dice_0: 1.523  loss_ce_1: 0.7073  loss_mask_1: 0.1746  loss_dice_1: 1.426  loss_ce_2: 0.6684  loss_mask_2: 0.1671  loss_dice_2: 1.333  loss_ce_3: 0.6448  loss_mask_3: 0.1653  loss_dice_3: 1.292  loss_ce_4: 0.5969  loss_mask_4: 0.167  loss_dice_4: 1.312  loss_ce_5: 0.6153  loss_mask_5: 0.1677  loss_dice_5: 1.314  loss_ce_6: 0.5895  loss_mask_6: 0.167  loss_dice_6: 1.29  loss_ce_7: 0.5656  loss_mask_7: 0.166  loss_dice_7: 1.29  loss_ce_8: 0.5907  loss_mask_8: 0.1656  loss_dice_8: 1.29    time: 1.0982  last_time: 1.1136  data_time: 0.0783  last_data_time: 0.0924   lr: 0.0001  max_mem: 32839M
[08/30 21:44:38] d2.utils.events INFO:  eta: 0:23:43  iter: 699  total_loss: 21.18  loss_ce: 0.6336  loss_mask: 0.1751  loss_dice: 1.219  loss_ce_0: 0.6936  loss_mask_0: 0.2022  loss_dice_0: 1.441  loss_ce_1: 0.7511  loss_mask_1: 0.1897  loss_dice_1: 1.394  loss_ce_2: 0.6983  loss_mask_2: 0.18  loss_dice_2: 1.324  loss_ce_3: 0.67  loss_mask_3: 0.1784  loss_dice_3: 1.276  loss_ce_4: 0.612  loss_mask_4: 0.1802  loss_dice_4: 1.267  loss_ce_5: 0.6229  loss_mask_5: 0.1794  loss_dice_5: 1.257  loss_ce_6: 0.6154  loss_mask_6: 0.1771  loss_dice_6: 1.235  loss_ce_7: 0.6097  loss_mask_7: 0.1765  loss_dice_7: 1.233  loss_ce_8: 0.6225  loss_mask_8: 0.1746  loss_dice_8: 1.238    time: 1.0988  last_time: 1.1166  data_time: 0.0753  last_data_time: 0.0681   lr: 0.0001  max_mem: 32839M
[08/30 21:45:00] d2.utils.events INFO:  eta: 0:23:21  iter: 719  total_loss: 21.67  loss_ce: 0.5803  loss_mask: 0.1756  loss_dice: 1.241  loss_ce_0: 0.6441  loss_mask_0: 0.1992  loss_dice_0: 1.552  loss_ce_1: 0.735  loss_mask_1: 0.1884  loss_dice_1: 1.372  loss_ce_2: 0.6609  loss_mask_2: 0.1783  loss_dice_2: 1.325  loss_ce_3: 0.6278  loss_mask_3: 0.1748  loss_dice_3: 1.291  loss_ce_4: 0.577  loss_mask_4: 0.1728  loss_dice_4: 1.278  loss_ce_5: 0.5902  loss_mask_5: 0.178  loss_dice_5: 1.305  loss_ce_6: 0.5526  loss_mask_6: 0.1757  loss_dice_6: 1.248  loss_ce_7: 0.5689  loss_mask_7: 0.1777  loss_dice_7: 1.272  loss_ce_8: 0.6016  loss_mask_8: 0.1754  loss_dice_8: 1.271    time: 1.0989  last_time: 1.0654  data_time: 0.0731  last_data_time: 0.0683   lr: 0.0001  max_mem: 32839M
[08/30 21:45:22] d2.utils.events INFO:  eta: 0:22:59  iter: 739  total_loss: 19.88  loss_ce: 0.5554  loss_mask: 0.1782  loss_dice: 1.194  loss_ce_0: 0.6129  loss_mask_0: 0.2195  loss_dice_0: 1.429  loss_ce_1: 0.6866  loss_mask_1: 0.2021  loss_dice_1: 1.338  loss_ce_2: 0.6761  loss_mask_2: 0.187  loss_dice_2: 1.268  loss_ce_3: 0.572  loss_mask_3: 0.1863  loss_dice_3: 1.232  loss_ce_4: 0.5514  loss_mask_4: 0.1848  loss_dice_4: 1.218  loss_ce_5: 0.5506  loss_mask_5: 0.1791  loss_dice_5: 1.223  loss_ce_6: 0.5433  loss_mask_6: 0.178  loss_dice_6: 1.182  loss_ce_7: 0.5214  loss_mask_7: 0.1773  loss_dice_7: 1.172  loss_ce_8: 0.5721  loss_mask_8: 0.1765  loss_dice_8: 1.197    time: 1.0987  last_time: 1.0990  data_time: 0.0715  last_data_time: 0.0941   lr: 0.0001  max_mem: 32839M
[08/30 21:45:44] d2.utils.events INFO:  eta: 0:22:38  iter: 759  total_loss: 20.9  loss_ce: 0.5738  loss_mask: 0.1596  loss_dice: 1.239  loss_ce_0: 0.6756  loss_mask_0: 0.1833  loss_dice_0: 1.491  loss_ce_1: 0.7398  loss_mask_1: 0.1716  loss_dice_1: 1.379  loss_ce_2: 0.6576  loss_mask_2: 0.1618  loss_dice_2: 1.35  loss_ce_3: 0.5989  loss_mask_3: 0.1614  loss_dice_3: 1.293  loss_ce_4: 0.6005  loss_mask_4: 0.1652  loss_dice_4: 1.303  loss_ce_5: 0.5649  loss_mask_5: 0.1613  loss_dice_5: 1.293  loss_ce_6: 0.561  loss_mask_6: 0.1623  loss_dice_6: 1.266  loss_ce_7: 0.5491  loss_mask_7: 0.1617  loss_dice_7: 1.31  loss_ce_8: 0.5848  loss_mask_8: 0.1599  loss_dice_8: 1.294    time: 1.0992  last_time: 1.0680  data_time: 0.0745  last_data_time: 0.0605   lr: 0.0001  max_mem: 32839M
[08/30 21:46:06] d2.utils.events INFO:  eta: 0:22:16  iter: 779  total_loss: 21.41  loss_ce: 0.5946  loss_mask: 0.1766  loss_dice: 1.302  loss_ce_0: 0.6653  loss_mask_0: 0.1937  loss_dice_0: 1.527  loss_ce_1: 0.7305  loss_mask_1: 0.1875  loss_dice_1: 1.434  loss_ce_2: 0.678  loss_mask_2: 0.1784  loss_dice_2: 1.378  loss_ce_3: 0.6259  loss_mask_3: 0.1773  loss_dice_3: 1.329  loss_ce_4: 0.5996  loss_mask_4: 0.1782  loss_dice_4: 1.314  loss_ce_5: 0.584  loss_mask_5: 0.1755  loss_dice_5: 1.319  loss_ce_6: 0.5993  loss_mask_6: 0.1799  loss_dice_6: 1.266  loss_ce_7: 0.5861  loss_mask_7: 0.176  loss_dice_7: 1.257  loss_ce_8: 0.6038  loss_mask_8: 0.1763  loss_dice_8: 1.285    time: 1.0994  last_time: 1.2234  data_time: 0.0725  last_data_time: 0.0733   lr: 0.0001  max_mem: 32839M
[08/30 21:46:29] d2.utils.events INFO:  eta: 0:21:55  iter: 799  total_loss: 20.91  loss_ce: 0.5541  loss_mask: 0.1758  loss_dice: 1.236  loss_ce_0: 0.622  loss_mask_0: 0.2061  loss_dice_0: 1.438  loss_ce_1: 0.7093  loss_mask_1: 0.2021  loss_dice_1: 1.329  loss_ce_2: 0.6665  loss_mask_2: 0.1927  loss_dice_2: 1.295  loss_ce_3: 0.5904  loss_mask_3: 0.1795  loss_dice_3: 1.262  loss_ce_4: 0.562  loss_mask_4: 0.1791  loss_dice_4: 1.233  loss_ce_5: 0.5624  loss_mask_5: 0.18  loss_dice_5: 1.242  loss_ce_6: 0.5691  loss_mask_6: 0.1757  loss_dice_6: 1.188  loss_ce_7: 0.5472  loss_mask_7: 0.1752  loss_dice_7: 1.212  loss_ce_8: 0.5572  loss_mask_8: 0.1762  loss_dice_8: 1.177    time: 1.0996  last_time: 1.0699  data_time: 0.0730  last_data_time: 0.0653   lr: 0.0001  max_mem: 32839M
[08/30 21:46:51] d2.utils.events INFO:  eta: 0:21:33  iter: 819  total_loss: 21.16  loss_ce: 0.5505  loss_mask: 0.1619  loss_dice: 1.299  loss_ce_0: 0.664  loss_mask_0: 0.1935  loss_dice_0: 1.499  loss_ce_1: 0.7437  loss_mask_1: 0.1851  loss_dice_1: 1.389  loss_ce_2: 0.6836  loss_mask_2: 0.1682  loss_dice_2: 1.327  loss_ce_3: 0.6416  loss_mask_3: 0.1653  loss_dice_3: 1.318  loss_ce_4: 0.6089  loss_mask_4: 0.167  loss_dice_4: 1.298  loss_ce_5: 0.562  loss_mask_5: 0.1647  loss_dice_5: 1.321  loss_ce_6: 0.5711  loss_mask_6: 0.1647  loss_dice_6: 1.283  loss_ce_7: 0.532  loss_mask_7: 0.164  loss_dice_7: 1.302  loss_ce_8: 0.5837  loss_mask_8: 0.162  loss_dice_8: 1.291    time: 1.1001  last_time: 1.1914  data_time: 0.0752  last_data_time: 0.0812   lr: 0.0001  max_mem: 32839M
[08/30 21:47:13] d2.utils.events INFO:  eta: 0:21:12  iter: 839  total_loss: 21.11  loss_ce: 0.5367  loss_mask: 0.1674  loss_dice: 1.296  loss_ce_0: 0.6152  loss_mask_0: 0.1983  loss_dice_0: 1.475  loss_ce_1: 0.7114  loss_mask_1: 0.1832  loss_dice_1: 1.429  loss_ce_2: 0.6321  loss_mask_2: 0.1721  loss_dice_2: 1.358  loss_ce_3: 0.6055  loss_mask_3: 0.1711  loss_dice_3: 1.304  loss_ce_4: 0.5666  loss_mask_4: 0.1722  loss_dice_4: 1.346  loss_ce_5: 0.5704  loss_mask_5: 0.1689  loss_dice_5: 1.323  loss_ce_6: 0.5906  loss_mask_6: 0.1683  loss_dice_6: 1.269  loss_ce_7: 0.5799  loss_mask_7: 0.1691  loss_dice_7: 1.288  loss_ce_8: 0.5676  loss_mask_8: 0.1692  loss_dice_8: 1.293    time: 1.1003  last_time: 1.0797  data_time: 0.0736  last_data_time: 0.0698   lr: 0.0001  max_mem: 32839M
[08/30 21:47:36] d2.utils.events INFO:  eta: 0:20:50  iter: 859  total_loss: 21.77  loss_ce: 0.6023  loss_mask: 0.1688  loss_dice: 1.349  loss_ce_0: 0.6754  loss_mask_0: 0.2089  loss_dice_0: 1.533  loss_ce_1: 0.6966  loss_mask_1: 0.1891  loss_dice_1: 1.485  loss_ce_2: 0.6619  loss_mask_2: 0.1751  loss_dice_2: 1.398  loss_ce_3: 0.6377  loss_mask_3: 0.1733  loss_dice_3: 1.307  loss_ce_4: 0.6128  loss_mask_4: 0.171  loss_dice_4: 1.324  loss_ce_5: 0.5854  loss_mask_5: 0.1671  loss_dice_5: 1.341  loss_ce_6: 0.5848  loss_mask_6: 0.1698  loss_dice_6: 1.328  loss_ce_7: 0.5604  loss_mask_7: 0.1676  loss_dice_7: 1.348  loss_ce_8: 0.5729  loss_mask_8: 0.1678  loss_dice_8: 1.337    time: 1.1007  last_time: 1.1500  data_time: 0.0738  last_data_time: 0.0702   lr: 0.0001  max_mem: 32839M
[08/30 21:47:58] d2.utils.events INFO:  eta: 0:20:28  iter: 879  total_loss: 20.81  loss_ce: 0.5632  loss_mask: 0.1773  loss_dice: 1.237  loss_ce_0: 0.6598  loss_mask_0: 0.1943  loss_dice_0: 1.443  loss_ce_1: 0.7216  loss_mask_1: 0.1815  loss_dice_1: 1.422  loss_ce_2: 0.6753  loss_mask_2: 0.1718  loss_dice_2: 1.304  loss_ce_3: 0.6111  loss_mask_3: 0.1709  loss_dice_3: 1.289  loss_ce_4: 0.5729  loss_mask_4: 0.1767  loss_dice_4: 1.249  loss_ce_5: 0.5655  loss_mask_5: 0.1739  loss_dice_5: 1.243  loss_ce_6: 0.5524  loss_mask_6: 0.1713  loss_dice_6: 1.258  loss_ce_7: 0.5388  loss_mask_7: 0.175  loss_dice_7: 1.253  loss_ce_8: 0.5764  loss_mask_8: 0.175  loss_dice_8: 1.246    time: 1.1010  last_time: 1.2078  data_time: 0.0717  last_data_time: 0.0868   lr: 0.0001  max_mem: 32839M
[08/30 21:48:20] d2.utils.events INFO:  eta: 0:20:06  iter: 899  total_loss: 20.64  loss_ce: 0.5304  loss_mask: 0.1713  loss_dice: 1.203  loss_ce_0: 0.6225  loss_mask_0: 0.1975  loss_dice_0: 1.498  loss_ce_1: 0.7233  loss_mask_1: 0.1888  loss_dice_1: 1.356  loss_ce_2: 0.637  loss_mask_2: 0.1782  loss_dice_2: 1.297  loss_ce_3: 0.5516  loss_mask_3: 0.1802  loss_dice_3: 1.276  loss_ce_4: 0.5689  loss_mask_4: 0.18  loss_dice_4: 1.261  loss_ce_5: 0.5567  loss_mask_5: 0.1733  loss_dice_5: 1.223  loss_ce_6: 0.5342  loss_mask_6: 0.1687  loss_dice_6: 1.254  loss_ce_7: 0.552  loss_mask_7: 0.17  loss_dice_7: 1.245  loss_ce_8: 0.5334  loss_mask_8: 0.1714  loss_dice_8: 1.239    time: 1.1010  last_time: 1.0967  data_time: 0.0711  last_data_time: 0.0761   lr: 0.0001  max_mem: 32839M
[08/30 21:48:43] d2.utils.events INFO:  eta: 0:19:44  iter: 919  total_loss: 21.75  loss_ce: 0.5797  loss_mask: 0.1673  loss_dice: 1.316  loss_ce_0: 0.7174  loss_mask_0: 0.189  loss_dice_0: 1.532  loss_ce_1: 0.77  loss_mask_1: 0.1808  loss_dice_1: 1.443  loss_ce_2: 0.717  loss_mask_2: 0.1678  loss_dice_2: 1.434  loss_ce_3: 0.6793  loss_mask_3: 0.1651  loss_dice_3: 1.37  loss_ce_4: 0.6328  loss_mask_4: 0.1672  loss_dice_4: 1.332  loss_ce_5: 0.6646  loss_mask_5: 0.1648  loss_dice_5: 1.331  loss_ce_6: 0.5981  loss_mask_6: 0.1668  loss_dice_6: 1.331  loss_ce_7: 0.6201  loss_mask_7: 0.1683  loss_dice_7: 1.342  loss_ce_8: 0.585  loss_mask_8: 0.1686  loss_dice_8: 1.33    time: 1.1013  last_time: 1.1186  data_time: 0.0757  last_data_time: 0.0753   lr: 0.0001  max_mem: 32839M
[08/30 21:49:05] d2.utils.events INFO:  eta: 0:19:23  iter: 939  total_loss: 20.08  loss_ce: 0.5402  loss_mask: 0.1758  loss_dice: 1.193  loss_ce_0: 0.6639  loss_mask_0: 0.196  loss_dice_0: 1.378  loss_ce_1: 0.6884  loss_mask_1: 0.1912  loss_dice_1: 1.284  loss_ce_2: 0.6198  loss_mask_2: 0.1789  loss_dice_2: 1.277  loss_ce_3: 0.6008  loss_mask_3: 0.177  loss_dice_3: 1.217  loss_ce_4: 0.5848  loss_mask_4: 0.1754  loss_dice_4: 1.178  loss_ce_5: 0.5508  loss_mask_5: 0.173  loss_dice_5: 1.206  loss_ce_6: 0.5432  loss_mask_6: 0.1757  loss_dice_6: 1.198  loss_ce_7: 0.5581  loss_mask_7: 0.1761  loss_dice_7: 1.184  loss_ce_8: 0.5426  loss_mask_8: 0.1737  loss_dice_8: 1.165    time: 1.1013  last_time: 1.0778  data_time: 0.0726  last_data_time: 0.0647   lr: 0.0001  max_mem: 32839M
[08/30 21:49:27] d2.utils.events INFO:  eta: 0:19:00  iter: 959  total_loss: 20.16  loss_ce: 0.5251  loss_mask: 0.174  loss_dice: 1.184  loss_ce_0: 0.6378  loss_mask_0: 0.192  loss_dice_0: 1.361  loss_ce_1: 0.7065  loss_mask_1: 0.1828  loss_dice_1: 1.328  loss_ce_2: 0.6495  loss_mask_2: 0.1754  loss_dice_2: 1.257  loss_ce_3: 0.5887  loss_mask_3: 0.1717  loss_dice_3: 1.205  loss_ce_4: 0.5823  loss_mask_4: 0.172  loss_dice_4: 1.208  loss_ce_5: 0.5879  loss_mask_5: 0.1733  loss_dice_5: 1.184  loss_ce_6: 0.5341  loss_mask_6: 0.174  loss_dice_6: 1.192  loss_ce_7: 0.5742  loss_mask_7: 0.1741  loss_dice_7: 1.193  loss_ce_8: 0.5347  loss_mask_8: 0.1776  loss_dice_8: 1.176    time: 1.1012  last_time: 1.0548  data_time: 0.0729  last_data_time: 0.0667   lr: 0.0001  max_mem: 32839M
[08/30 21:49:48] d2.utils.events INFO:  eta: 0:18:38  iter: 979  total_loss: 20.28  loss_ce: 0.5252  loss_mask: 0.1672  loss_dice: 1.184  loss_ce_0: 0.6269  loss_mask_0: 0.1899  loss_dice_0: 1.361  loss_ce_1: 0.7029  loss_mask_1: 0.1764  loss_dice_1: 1.322  loss_ce_2: 0.6663  loss_mask_2: 0.1731  loss_dice_2: 1.264  loss_ce_3: 0.5894  loss_mask_3: 0.1726  loss_dice_3: 1.214  loss_ce_4: 0.6029  loss_mask_4: 0.1723  loss_dice_4: 1.252  loss_ce_5: 0.5707  loss_mask_5: 0.1696  loss_dice_5: 1.207  loss_ce_6: 0.5273  loss_mask_6: 0.1712  loss_dice_6: 1.237  loss_ce_7: 0.5317  loss_mask_7: 0.1707  loss_dice_7: 1.201  loss_ce_8: 0.5587  loss_mask_8: 0.1678  loss_dice_8: 1.219    time: 1.1009  last_time: 1.0932  data_time: 0.0685  last_data_time: 0.0795   lr: 0.0001  max_mem: 32839M
[08/30 21:50:10] d2.utils.events INFO:  eta: 0:18:16  iter: 999  total_loss: 19.5  loss_ce: 0.5483  loss_mask: 0.1706  loss_dice: 1.134  loss_ce_0: 0.6419  loss_mask_0: 0.1979  loss_dice_0: 1.346  loss_ce_1: 0.6883  loss_mask_1: 0.1793  loss_dice_1: 1.258  loss_ce_2: 0.6286  loss_mask_2: 0.1729  loss_dice_2: 1.197  loss_ce_3: 0.5765  loss_mask_3: 0.1743  loss_dice_3: 1.161  loss_ce_4: 0.5735  loss_mask_4: 0.1764  loss_dice_4: 1.167  loss_ce_5: 0.5305  loss_mask_5: 0.1736  loss_dice_5: 1.126  loss_ce_6: 0.5305  loss_mask_6: 0.1713  loss_dice_6: 1.167  loss_ce_7: 0.5529  loss_mask_7: 0.1723  loss_dice_7: 1.121  loss_ce_8: 0.5274  loss_mask_8: 0.1714  loss_dice_8: 1.133    time: 1.1007  last_time: 1.1268  data_time: 0.0679  last_data_time: 0.0717   lr: 0.0001  max_mem: 32839M
[08/30 21:50:32] d2.utils.events INFO:  eta: 0:17:54  iter: 1019  total_loss: 20.36  loss_ce: 0.5453  loss_mask: 0.1843  loss_dice: 1.191  loss_ce_0: 0.6504  loss_mask_0: 0.206  loss_dice_0: 1.366  loss_ce_1: 0.6836  loss_mask_1: 0.1939  loss_dice_1: 1.289  loss_ce_2: 0.6647  loss_mask_2: 0.1879  loss_dice_2: 1.214  loss_ce_3: 0.6187  loss_mask_3: 0.185  loss_dice_3: 1.224  loss_ce_4: 0.5995  loss_mask_4: 0.186  loss_dice_4: 1.197  loss_ce_5: 0.5695  loss_mask_5: 0.1833  loss_dice_5: 1.188  loss_ce_6: 0.5529  loss_mask_6: 0.1824  loss_dice_6: 1.197  loss_ce_7: 0.5695  loss_mask_7: 0.1831  loss_dice_7: 1.178  loss_ce_8: 0.5657  loss_mask_8: 0.1843  loss_dice_8: 1.201    time: 1.1005  last_time: 1.0965  data_time: 0.0702  last_data_time: 0.0957   lr: 0.0001  max_mem: 32839M
[08/30 21:50:54] d2.utils.events INFO:  eta: 0:17:33  iter: 1039  total_loss: 20.53  loss_ce: 0.5373  loss_mask: 0.1658  loss_dice: 1.208  loss_ce_0: 0.6794  loss_mask_0: 0.1895  loss_dice_0: 1.483  loss_ce_1: 0.7015  loss_mask_1: 0.1768  loss_dice_1: 1.376  loss_ce_2: 0.6329  loss_mask_2: 0.1696  loss_dice_2: 1.314  loss_ce_3: 0.6072  loss_mask_3: 0.1701  loss_dice_3: 1.273  loss_ce_4: 0.5691  loss_mask_4: 0.1682  loss_dice_4: 1.247  loss_ce_5: 0.5252  loss_mask_5: 0.1704  loss_dice_5: 1.235  loss_ce_6: 0.5506  loss_mask_6: 0.1694  loss_dice_6: 1.229  loss_ce_7: 0.5612  loss_mask_7: 0.167  loss_dice_7: 1.246  loss_ce_8: 0.5333  loss_mask_8: 0.1671  loss_dice_8: 1.216    time: 1.1006  last_time: 1.0752  data_time: 0.0731  last_data_time: 0.0717   lr: 0.0001  max_mem: 32839M
[08/30 21:51:16] d2.utils.events INFO:  eta: 0:17:10  iter: 1059  total_loss: 20.64  loss_ce: 0.5745  loss_mask: 0.1643  loss_dice: 1.2  loss_ce_0: 0.6682  loss_mask_0: 0.1994  loss_dice_0: 1.415  loss_ce_1: 0.7878  loss_mask_1: 0.1798  loss_dice_1: 1.374  loss_ce_2: 0.6678  loss_mask_2: 0.1706  loss_dice_2: 1.277  loss_ce_3: 0.6166  loss_mask_3: 0.1682  loss_dice_3: 1.24  loss_ce_4: 0.595  loss_mask_4: 0.1687  loss_dice_4: 1.202  loss_ce_5: 0.5954  loss_mask_5: 0.1675  loss_dice_5: 1.228  loss_ce_6: 0.5955  loss_mask_6: 0.1662  loss_dice_6: 1.235  loss_ce_7: 0.5246  loss_mask_7: 0.1672  loss_dice_7: 1.232  loss_ce_8: 0.5976  loss_mask_8: 0.1643  loss_dice_8: 1.191    time: 1.1004  last_time: 1.0655  data_time: 0.0715  last_data_time: 0.0684   lr: 0.0001  max_mem: 32839M
[08/30 21:51:38] d2.utils.events INFO:  eta: 0:16:48  iter: 1079  total_loss: 20.66  loss_ce: 0.5526  loss_mask: 0.1675  loss_dice: 1.12  loss_ce_0: 0.6671  loss_mask_0: 0.1911  loss_dice_0: 1.375  loss_ce_1: 0.7355  loss_mask_1: 0.1808  loss_dice_1: 1.307  loss_ce_2: 0.6552  loss_mask_2: 0.1717  loss_dice_2: 1.269  loss_ce_3: 0.6355  loss_mask_3: 0.1724  loss_dice_3: 1.201  loss_ce_4: 0.5778  loss_mask_4: 0.1729  loss_dice_4: 1.205  loss_ce_5: 0.5687  loss_mask_5: 0.1688  loss_dice_5: 1.185  loss_ce_6: 0.5467  loss_mask_6: 0.1684  loss_dice_6: 1.217  loss_ce_7: 0.5601  loss_mask_7: 0.1678  loss_dice_7: 1.18  loss_ce_8: 0.57  loss_mask_8: 0.1678  loss_dice_8: 1.189    time: 1.1003  last_time: 1.1494  data_time: 0.0720  last_data_time: 0.0830   lr: 0.0001  max_mem: 32839M
[08/30 21:52:00] d2.utils.events INFO:  eta: 0:16:26  iter: 1099  total_loss: 20.15  loss_ce: 0.5458  loss_mask: 0.1671  loss_dice: 1.165  loss_ce_0: 0.6506  loss_mask_0: 0.191  loss_dice_0: 1.418  loss_ce_1: 0.694  loss_mask_1: 0.1848  loss_dice_1: 1.33  loss_ce_2: 0.6314  loss_mask_2: 0.1803  loss_dice_2: 1.279  loss_ce_3: 0.5818  loss_mask_3: 0.1699  loss_dice_3: 1.197  loss_ce_4: 0.5809  loss_mask_4: 0.1698  loss_dice_4: 1.223  loss_ce_5: 0.5558  loss_mask_5: 0.1666  loss_dice_5: 1.237  loss_ce_6: 0.5421  loss_mask_6: 0.1657  loss_dice_6: 1.188  loss_ce_7: 0.5617  loss_mask_7: 0.1666  loss_dice_7: 1.199  loss_ce_8: 0.5438  loss_mask_8: 0.1657  loss_dice_8: 1.186    time: 1.1003  last_time: 1.0927  data_time: 0.0729  last_data_time: 0.0490   lr: 0.0001  max_mem: 32839M
[08/30 21:52:22] d2.utils.events INFO:  eta: 0:16:05  iter: 1119  total_loss: 20.91  loss_ce: 0.5723  loss_mask: 0.1682  loss_dice: 1.211  loss_ce_0: 0.6585  loss_mask_0: 0.1982  loss_dice_0: 1.47  loss_ce_1: 0.7648  loss_mask_1: 0.1779  loss_dice_1: 1.444  loss_ce_2: 0.698  loss_mask_2: 0.1723  loss_dice_2: 1.326  loss_ce_3: 0.6236  loss_mask_3: 0.1748  loss_dice_3: 1.251  loss_ce_4: 0.5863  loss_mask_4: 0.1735  loss_dice_4: 1.27  loss_ce_5: 0.592  loss_mask_5: 0.1679  loss_dice_5: 1.252  loss_ce_6: 0.5859  loss_mask_6: 0.1712  loss_dice_6: 1.236  loss_ce_7: 0.6031  loss_mask_7: 0.1703  loss_dice_7: 1.243  loss_ce_8: 0.597  loss_mask_8: 0.1693  loss_dice_8: 1.268    time: 1.1002  last_time: 1.1383  data_time: 0.0719  last_data_time: 0.1045   lr: 0.0001  max_mem: 32839M
[08/30 21:52:44] d2.utils.events INFO:  eta: 0:15:42  iter: 1139  total_loss: 19.82  loss_ce: 0.5223  loss_mask: 0.1713  loss_dice: 1.155  loss_ce_0: 0.6308  loss_mask_0: 0.1944  loss_dice_0: 1.412  loss_ce_1: 0.6608  loss_mask_1: 0.1828  loss_dice_1: 1.343  loss_ce_2: 0.5946  loss_mask_2: 0.1794  loss_dice_2: 1.235  loss_ce_3: 0.5566  loss_mask_3: 0.177  loss_dice_3: 1.24  loss_ce_4: 0.5254  loss_mask_4: 0.1735  loss_dice_4: 1.214  loss_ce_5: 0.5495  loss_mask_5: 0.1725  loss_dice_5: 1.19  loss_ce_6: 0.5239  loss_mask_6: 0.1776  loss_dice_6: 1.165  loss_ce_7: 0.5077  loss_mask_7: 0.1721  loss_dice_7: 1.202  loss_ce_8: 0.5161  loss_mask_8: 0.1712  loss_dice_8: 1.18    time: 1.1002  last_time: 1.0784  data_time: 0.0764  last_data_time: 0.0873   lr: 0.0001  max_mem: 32839M
[08/30 21:53:06] d2.utils.events INFO:  eta: 0:15:20  iter: 1159  total_loss: 18.82  loss_ce: 0.4764  loss_mask: 0.1732  loss_dice: 1.134  loss_ce_0: 0.6127  loss_mask_0: 0.208  loss_dice_0: 1.309  loss_ce_1: 0.649  loss_mask_1: 0.1861  loss_dice_1: 1.221  loss_ce_2: 0.5934  loss_mask_2: 0.1775  loss_dice_2: 1.2  loss_ce_3: 0.5688  loss_mask_3: 0.1736  loss_dice_3: 1.158  loss_ce_4: 0.5068  loss_mask_4: 0.1769  loss_dice_4: 1.153  loss_ce_5: 0.4953  loss_mask_5: 0.1737  loss_dice_5: 1.176  loss_ce_6: 0.5027  loss_mask_6: 0.1735  loss_dice_6: 1.133  loss_ce_7: 0.5023  loss_mask_7: 0.1728  loss_dice_7: 1.11  loss_ce_8: 0.4686  loss_mask_8: 0.1715  loss_dice_8: 1.13    time: 1.0999  last_time: 1.0556  data_time: 0.0702  last_data_time: 0.0664   lr: 0.0001  max_mem: 32839M
[08/30 21:53:28] d2.utils.events INFO:  eta: 0:14:58  iter: 1179  total_loss: 20.59  loss_ce: 0.5343  loss_mask: 0.1633  loss_dice: 1.238  loss_ce_0: 0.6421  loss_mask_0: 0.1878  loss_dice_0: 1.492  loss_ce_1: 0.716  loss_mask_1: 0.1783  loss_dice_1: 1.398  loss_ce_2: 0.6804  loss_mask_2: 0.1746  loss_dice_2: 1.319  loss_ce_3: 0.5719  loss_mask_3: 0.1669  loss_dice_3: 1.31  loss_ce_4: 0.5916  loss_mask_4: 0.1663  loss_dice_4: 1.309  loss_ce_5: 0.581  loss_mask_5: 0.1651  loss_dice_5: 1.282  loss_ce_6: 0.5591  loss_mask_6: 0.1655  loss_dice_6: 1.271  loss_ce_7: 0.5356  loss_mask_7: 0.166  loss_dice_7: 1.283  loss_ce_8: 0.5512  loss_mask_8: 0.164  loss_dice_8: 1.274    time: 1.0999  last_time: 1.1490  data_time: 0.0703  last_data_time: 0.0589   lr: 0.0001  max_mem: 32839M
[08/30 21:53:51] d2.utils.events INFO:  eta: 0:14:37  iter: 1199  total_loss: 20.07  loss_ce: 0.5281  loss_mask: 0.158  loss_dice: 1.169  loss_ce_0: 0.6304  loss_mask_0: 0.198  loss_dice_0: 1.438  loss_ce_1: 0.7299  loss_mask_1: 0.184  loss_dice_1: 1.349  loss_ce_2: 0.7017  loss_mask_2: 0.1645  loss_dice_2: 1.247  loss_ce_3: 0.613  loss_mask_3: 0.1609  loss_dice_3: 1.22  loss_ce_4: 0.5845  loss_mask_4: 0.1595  loss_dice_4: 1.216  loss_ce_5: 0.5924  loss_mask_5: 0.159  loss_dice_5: 1.193  loss_ce_6: 0.567  loss_mask_6: 0.1576  loss_dice_6: 1.209  loss_ce_7: 0.558  loss_mask_7: 0.1577  loss_dice_7: 1.199  loss_ce_8: 0.5758  loss_mask_8: 0.1582  loss_dice_8: 1.178    time: 1.1005  last_time: 1.1841  data_time: 0.0858  last_data_time: 0.0707   lr: 0.0001  max_mem: 32839M
[08/30 21:54:13] d2.utils.events INFO:  eta: 0:14:14  iter: 1219  total_loss: 19.93  loss_ce: 0.4975  loss_mask: 0.1673  loss_dice: 1.14  loss_ce_0: 0.6662  loss_mask_0: 0.1896  loss_dice_0: 1.375  loss_ce_1: 0.687  loss_mask_1: 0.1759  loss_dice_1: 1.268  loss_ce_2: 0.6487  loss_mask_2: 0.1697  loss_dice_2: 1.254  loss_ce_3: 0.592  loss_mask_3: 0.1705  loss_dice_3: 1.189  loss_ce_4: 0.5552  loss_mask_4: 0.1696  loss_dice_4: 1.206  loss_ce_5: 0.5231  loss_mask_5: 0.1696  loss_dice_5: 1.196  loss_ce_6: 0.5211  loss_mask_6: 0.1678  loss_dice_6: 1.177  loss_ce_7: 0.5065  loss_mask_7: 0.1655  loss_dice_7: 1.157  loss_ce_8: 0.5113  loss_mask_8: 0.167  loss_dice_8: 1.203    time: 1.1003  last_time: 1.0595  data_time: 0.0698  last_data_time: 0.0697   lr: 0.0001  max_mem: 32839M
[08/30 21:54:34] d2.utils.events INFO:  eta: 0:13:52  iter: 1239  total_loss: 19.75  loss_ce: 0.5146  loss_mask: 0.1709  loss_dice: 1.205  loss_ce_0: 0.6296  loss_mask_0: 0.2041  loss_dice_0: 1.375  loss_ce_1: 0.7146  loss_mask_1: 0.1882  loss_dice_1: 1.29  loss_ce_2: 0.6522  loss_mask_2: 0.1822  loss_dice_2: 1.225  loss_ce_3: 0.6114  loss_mask_3: 0.1788  loss_dice_3: 1.208  loss_ce_4: 0.5827  loss_mask_4: 0.1747  loss_dice_4: 1.17  loss_ce_5: 0.5754  loss_mask_5: 0.1739  loss_dice_5: 1.179  loss_ce_6: 0.53  loss_mask_6: 0.1743  loss_dice_6: 1.152  loss_ce_7: 0.5247  loss_mask_7: 0.1735  loss_dice_7: 1.169  loss_ce_8: 0.5311  loss_mask_8: 0.1721  loss_dice_8: 1.177    time: 1.1001  last_time: 1.0475  data_time: 0.0696  last_data_time: 0.0666   lr: 0.0001  max_mem: 32839M
[08/30 21:54:57] d2.utils.events INFO:  eta: 0:13:31  iter: 1259  total_loss: 21.17  loss_ce: 0.5553  loss_mask: 0.1686  loss_dice: 1.259  loss_ce_0: 0.6837  loss_mask_0: 0.197  loss_dice_0: 1.471  loss_ce_1: 0.7182  loss_mask_1: 0.1831  loss_dice_1: 1.37  loss_ce_2: 0.6631  loss_mask_2: 0.1786  loss_dice_2: 1.342  loss_ce_3: 0.6349  loss_mask_3: 0.1751  loss_dice_3: 1.316  loss_ce_4: 0.5946  loss_mask_4: 0.1705  loss_dice_4: 1.269  loss_ce_5: 0.5945  loss_mask_5: 0.1708  loss_dice_5: 1.277  loss_ce_6: 0.5584  loss_mask_6: 0.1697  loss_dice_6: 1.239  loss_ce_7: 0.5684  loss_mask_7: 0.1693  loss_dice_7: 1.282  loss_ce_8: 0.6066  loss_mask_8: 0.1703  loss_dice_8: 1.21    time: 1.1002  last_time: 1.0586  data_time: 0.0741  last_data_time: 0.0607   lr: 0.0001  max_mem: 32839M
[08/30 21:55:19] d2.utils.events INFO:  eta: 0:13:09  iter: 1279  total_loss: 21.14  loss_ce: 0.5554  loss_mask: 0.1564  loss_dice: 1.256  loss_ce_0: 0.6557  loss_mask_0: 0.1764  loss_dice_0: 1.548  loss_ce_1: 0.6934  loss_mask_1: 0.1677  loss_dice_1: 1.438  loss_ce_2: 0.6312  loss_mask_2: 0.1607  loss_dice_2: 1.387  loss_ce_3: 0.5981  loss_mask_3: 0.1594  loss_dice_3: 1.321  loss_ce_4: 0.5656  loss_mask_4: 0.1588  loss_dice_4: 1.309  loss_ce_5: 0.5615  loss_mask_5: 0.1576  loss_dice_5: 1.291  loss_ce_6: 0.558  loss_mask_6: 0.1567  loss_dice_6: 1.277  loss_ce_7: 0.5653  loss_mask_7: 0.1565  loss_dice_7: 1.267  loss_ce_8: 0.536  loss_mask_8: 0.1591  loss_dice_8: 1.283    time: 1.1005  last_time: 1.1512  data_time: 0.0750  last_data_time: 0.0588   lr: 0.0001  max_mem: 32839M
[08/30 21:55:41] d2.utils.events INFO:  eta: 0:12:47  iter: 1299  total_loss: 20.4  loss_ce: 0.5186  loss_mask: 0.1578  loss_dice: 1.206  loss_ce_0: 0.6358  loss_mask_0: 0.1896  loss_dice_0: 1.47  loss_ce_1: 0.6781  loss_mask_1: 0.1837  loss_dice_1: 1.368  loss_ce_2: 0.6446  loss_mask_2: 0.169  loss_dice_2: 1.347  loss_ce_3: 0.6037  loss_mask_3: 0.1604  loss_dice_3: 1.235  loss_ce_4: 0.5824  loss_mask_4: 0.1616  loss_dice_4: 1.221  loss_ce_5: 0.5929  loss_mask_5: 0.1601  loss_dice_5: 1.217  loss_ce_6: 0.5371  loss_mask_6: 0.1586  loss_dice_6: 1.191  loss_ce_7: 0.542  loss_mask_7: 0.1587  loss_dice_7: 1.217  loss_ce_8: 0.5561  loss_mask_8: 0.1603  loss_dice_8: 1.234    time: 1.1003  last_time: 1.0669  data_time: 0.0693  last_data_time: 0.0729   lr: 0.0001  max_mem: 32839M
[08/30 21:56:03] d2.utils.events INFO:  eta: 0:12:25  iter: 1319  total_loss: 20.83  loss_ce: 0.5573  loss_mask: 0.1677  loss_dice: 1.273  loss_ce_0: 0.6422  loss_mask_0: 0.1829  loss_dice_0: 1.437  loss_ce_1: 0.6848  loss_mask_1: 0.1776  loss_dice_1: 1.368  loss_ce_2: 0.6588  loss_mask_2: 0.1749  loss_dice_2: 1.303  loss_ce_3: 0.6253  loss_mask_3: 0.1728  loss_dice_3: 1.296  loss_ce_4: 0.5628  loss_mask_4: 0.1728  loss_dice_4: 1.28  loss_ce_5: 0.5723  loss_mask_5: 0.1708  loss_dice_5: 1.249  loss_ce_6: 0.5562  loss_mask_6: 0.1681  loss_dice_6: 1.25  loss_ce_7: 0.5304  loss_mask_7: 0.1691  loss_dice_7: 1.257  loss_ce_8: 0.5517  loss_mask_8: 0.1681  loss_dice_8: 1.254    time: 1.1003  last_time: 1.1207  data_time: 0.0717  last_data_time: 0.0761   lr: 0.0001  max_mem: 32839M
[08/30 21:56:25] d2.utils.events INFO:  eta: 0:12:03  iter: 1339  total_loss: 20.21  loss_ce: 0.5623  loss_mask: 0.1583  loss_dice: 1.223  loss_ce_0: 0.6246  loss_mask_0: 0.182  loss_dice_0: 1.416  loss_ce_1: 0.6983  loss_mask_1: 0.17  loss_dice_1: 1.35  loss_ce_2: 0.6385  loss_mask_2: 0.1639  loss_dice_2: 1.3  loss_ce_3: 0.5611  loss_mask_3: 0.1579  loss_dice_3: 1.273  loss_ce_4: 0.5644  loss_mask_4: 0.1598  loss_dice_4: 1.242  loss_ce_5: 0.5478  loss_mask_5: 0.1588  loss_dice_5: 1.26  loss_ce_6: 0.556  loss_mask_6: 0.1572  loss_dice_6: 1.245  loss_ce_7: 0.556  loss_mask_7: 0.1557  loss_dice_7: 1.247  loss_ce_8: 0.5364  loss_mask_8: 0.1578  loss_dice_8: 1.236    time: 1.1003  last_time: 1.0561  data_time: 0.0732  last_data_time: 0.0785   lr: 0.0001  max_mem: 32839M
[08/30 21:56:47] d2.utils.events INFO:  eta: 0:11:41  iter: 1359  total_loss: 20.13  loss_ce: 0.5465  loss_mask: 0.1726  loss_dice: 1.205  loss_ce_0: 0.6239  loss_mask_0: 0.2021  loss_dice_0: 1.427  loss_ce_1: 0.7092  loss_mask_1: 0.1839  loss_dice_1: 1.288  loss_ce_2: 0.6368  loss_mask_2: 0.1786  loss_dice_2: 1.229  loss_ce_3: 0.5918  loss_mask_3: 0.1713  loss_dice_3: 1.219  loss_ce_4: 0.5654  loss_mask_4: 0.1696  loss_dice_4: 1.223  loss_ce_5: 0.5726  loss_mask_5: 0.1739  loss_dice_5: 1.2  loss_ce_6: 0.5346  loss_mask_6: 0.1706  loss_dice_6: 1.191  loss_ce_7: 0.5143  loss_mask_7: 0.171  loss_dice_7: 1.177  loss_ce_8: 0.513  loss_mask_8: 0.1699  loss_dice_8: 1.196    time: 1.1003  last_time: 1.1360  data_time: 0.0698  last_data_time: 0.0757   lr: 0.0001  max_mem: 32839M
[08/30 21:57:10] d2.utils.events INFO:  eta: 0:11:19  iter: 1379  total_loss: 20.33  loss_ce: 0.5574  loss_mask: 0.1594  loss_dice: 1.252  loss_ce_0: 0.6772  loss_mask_0: 0.1812  loss_dice_0: 1.423  loss_ce_1: 0.7033  loss_mask_1: 0.1741  loss_dice_1: 1.369  loss_ce_2: 0.6792  loss_mask_2: 0.16  loss_dice_2: 1.265  loss_ce_3: 0.6217  loss_mask_3: 0.1608  loss_dice_3: 1.242  loss_ce_4: 0.6127  loss_mask_4: 0.1618  loss_dice_4: 1.219  loss_ce_5: 0.5735  loss_mask_5: 0.1608  loss_dice_5: 1.227  loss_ce_6: 0.5461  loss_mask_6: 0.1577  loss_dice_6: 1.219  loss_ce_7: 0.5557  loss_mask_7: 0.1591  loss_dice_7: 1.23  loss_ce_8: 0.5754  loss_mask_8: 0.1584  loss_dice_8: 1.239    time: 1.1008  last_time: 1.0925  data_time: 0.0825  last_data_time: 0.0669   lr: 0.0001  max_mem: 32839M
[08/30 21:57:31] d2.utils.events INFO:  eta: 0:10:57  iter: 1399  total_loss: 19.83  loss_ce: 0.5597  loss_mask: 0.1755  loss_dice: 1.162  loss_ce_0: 0.6629  loss_mask_0: 0.2003  loss_dice_0: 1.36  loss_ce_1: 0.7035  loss_mask_1: 0.1905  loss_dice_1: 1.315  loss_ce_2: 0.6509  loss_mask_2: 0.1803  loss_dice_2: 1.203  loss_ce_3: 0.6043  loss_mask_3: 0.1771  loss_dice_3: 1.158  loss_ce_4: 0.6078  loss_mask_4: 0.1803  loss_dice_4: 1.177  loss_ce_5: 0.5464  loss_mask_5: 0.1782  loss_dice_5: 1.184  loss_ce_6: 0.5301  loss_mask_6: 0.1776  loss_dice_6: 1.165  loss_ce_7: 0.5531  loss_mask_7: 0.178  loss_dice_7: 1.133  loss_ce_8: 0.5422  loss_mask_8: 0.1793  loss_dice_8: 1.17    time: 1.1006  last_time: 1.0894  data_time: 0.0678  last_data_time: 0.0892   lr: 0.0001  max_mem: 32839M
[08/30 21:57:54] d2.utils.events INFO:  eta: 0:10:36  iter: 1419  total_loss: 20.58  loss_ce: 0.5376  loss_mask: 0.1611  loss_dice: 1.238  loss_ce_0: 0.6415  loss_mask_0: 0.2  loss_dice_0: 1.446  loss_ce_1: 0.714  loss_mask_1: 0.1737  loss_dice_1: 1.34  loss_ce_2: 0.6612  loss_mask_2: 0.1688  loss_dice_2: 1.306  loss_ce_3: 0.5828  loss_mask_3: 0.1649  loss_dice_3: 1.258  loss_ce_4: 0.5671  loss_mask_4: 0.167  loss_dice_4: 1.247  loss_ce_5: 0.5567  loss_mask_5: 0.1646  loss_dice_5: 1.237  loss_ce_6: 0.5549  loss_mask_6: 0.1621  loss_dice_6: 1.228  loss_ce_7: 0.5582  loss_mask_7: 0.1619  loss_dice_7: 1.218  loss_ce_8: 0.5542  loss_mask_8: 0.1612  loss_dice_8: 1.225    time: 1.1007  last_time: 1.1018  data_time: 0.0739  last_data_time: 0.0672   lr: 0.0001  max_mem: 32839M
[08/30 21:58:16] d2.utils.events INFO:  eta: 0:10:14  iter: 1439  total_loss: 21.15  loss_ce: 0.5608  loss_mask: 0.1629  loss_dice: 1.253  loss_ce_0: 0.6433  loss_mask_0: 0.1978  loss_dice_0: 1.519  loss_ce_1: 0.7112  loss_mask_1: 0.1808  loss_dice_1: 1.415  loss_ce_2: 0.651  loss_mask_2: 0.1732  loss_dice_2: 1.362  loss_ce_3: 0.6118  loss_mask_3: 0.164  loss_dice_3: 1.3  loss_ce_4: 0.5998  loss_mask_4: 0.1669  loss_dice_4: 1.304  loss_ce_5: 0.6205  loss_mask_5: 0.1615  loss_dice_5: 1.291  loss_ce_6: 0.5716  loss_mask_6: 0.1619  loss_dice_6: 1.281  loss_ce_7: 0.5555  loss_mask_7: 0.1614  loss_dice_7: 1.268  loss_ce_8: 0.5456  loss_mask_8: 0.1606  loss_dice_8: 1.262    time: 1.1012  last_time: 1.1315  data_time: 0.0781  last_data_time: 0.0921   lr: 0.0001  max_mem: 32839M
[08/30 21:58:38] d2.utils.events INFO:  eta: 0:09:52  iter: 1459  total_loss: 19.15  loss_ce: 0.4986  loss_mask: 0.1653  loss_dice: 1.153  loss_ce_0: 0.6315  loss_mask_0: 0.1926  loss_dice_0: 1.298  loss_ce_1: 0.6868  loss_mask_1: 0.1792  loss_dice_1: 1.284  loss_ce_2: 0.6188  loss_mask_2: 0.1705  loss_dice_2: 1.199  loss_ce_3: 0.5538  loss_mask_3: 0.1687  loss_dice_3: 1.162  loss_ce_4: 0.5443  loss_mask_4: 0.1706  loss_dice_4: 1.169  loss_ce_5: 0.5417  loss_mask_5: 0.1666  loss_dice_5: 1.139  loss_ce_6: 0.5276  loss_mask_6: 0.1671  loss_dice_6: 1.13  loss_ce_7: 0.4938  loss_mask_7: 0.1684  loss_dice_7: 1.136  loss_ce_8: 0.5017  loss_mask_8: 0.166  loss_dice_8: 1.14    time: 1.1010  last_time: 1.0959  data_time: 0.0723  last_data_time: 0.0824   lr: 0.0001  max_mem: 32839M
[08/30 21:59:00] d2.utils.events INFO:  eta: 0:09:30  iter: 1479  total_loss: 20.96  loss_ce: 0.5577  loss_mask: 0.1726  loss_dice: 1.227  loss_ce_0: 0.6755  loss_mask_0: 0.2015  loss_dice_0: 1.441  loss_ce_1: 0.7507  loss_mask_1: 0.1852  loss_dice_1: 1.381  loss_ce_2: 0.6702  loss_mask_2: 0.1733  loss_dice_2: 1.282  loss_ce_3: 0.6025  loss_mask_3: 0.1726  loss_dice_3: 1.233  loss_ce_4: 0.5648  loss_mask_4: 0.1701  loss_dice_4: 1.225  loss_ce_5: 0.5689  loss_mask_5: 0.1715  loss_dice_5: 1.263  loss_ce_6: 0.5901  loss_mask_6: 0.1709  loss_dice_6: 1.24  loss_ce_7: 0.5615  loss_mask_7: 0.1726  loss_dice_7: 1.248  loss_ce_8: 0.546  loss_mask_8: 0.1721  loss_dice_8: 1.216    time: 1.1011  last_time: 1.0555  data_time: 0.0740  last_data_time: 0.0681   lr: 0.0001  max_mem: 32839M
[08/30 21:59:23] d2.utils.events INFO:  eta: 0:09:08  iter: 1499  total_loss: 20.03  loss_ce: 0.5359  loss_mask: 0.1734  loss_dice: 1.203  loss_ce_0: 0.5929  loss_mask_0: 0.2052  loss_dice_0: 1.373  loss_ce_1: 0.7113  loss_mask_1: 0.1931  loss_dice_1: 1.275  loss_ce_2: 0.6184  loss_mask_2: 0.18  loss_dice_2: 1.247  loss_ce_3: 0.5918  loss_mask_3: 0.1802  loss_dice_3: 1.217  loss_ce_4: 0.5605  loss_mask_4: 0.1792  loss_dice_4: 1.211  loss_ce_5: 0.5701  loss_mask_5: 0.1766  loss_dice_5: 1.203  loss_ce_6: 0.5348  loss_mask_6: 0.1749  loss_dice_6: 1.215  loss_ce_7: 0.5416  loss_mask_7: 0.1722  loss_dice_7: 1.231  loss_ce_8: 0.5556  loss_mask_8: 0.1742  loss_dice_8: 1.169    time: 1.1011  last_time: 1.1288  data_time: 0.0695  last_data_time: 0.0810   lr: 0.0001  max_mem: 32839M
[08/30 21:59:45] d2.utils.events INFO:  eta: 0:08:46  iter: 1519  total_loss: 20.74  loss_ce: 0.5499  loss_mask: 0.1492  loss_dice: 1.25  loss_ce_0: 0.6986  loss_mask_0: 0.1795  loss_dice_0: 1.465  loss_ce_1: 0.7028  loss_mask_1: 0.162  loss_dice_1: 1.418  loss_ce_2: 0.6531  loss_mask_2: 0.1553  loss_dice_2: 1.34  loss_ce_3: 0.5846  loss_mask_3: 0.1551  loss_dice_3: 1.272  loss_ce_4: 0.57  loss_mask_4: 0.1553  loss_dice_4: 1.262  loss_ce_5: 0.5736  loss_mask_5: 0.1513  loss_dice_5: 1.287  loss_ce_6: 0.5634  loss_mask_6: 0.1514  loss_dice_6: 1.235  loss_ce_7: 0.54  loss_mask_7: 0.1496  loss_dice_7: 1.263  loss_ce_8: 0.5448  loss_mask_8: 0.1494  loss_dice_8: 1.263    time: 1.1014  last_time: 1.1313  data_time: 0.0807  last_data_time: 0.0888   lr: 0.0001  max_mem: 32839M
[08/30 22:00:07] d2.utils.events INFO:  eta: 0:08:25  iter: 1539  total_loss: 20.09  loss_ce: 0.5085  loss_mask: 0.1707  loss_dice: 1.264  loss_ce_0: 0.6166  loss_mask_0: 0.1929  loss_dice_0: 1.471  loss_ce_1: 0.6796  loss_mask_1: 0.1815  loss_dice_1: 1.383  loss_ce_2: 0.6081  loss_mask_2: 0.1762  loss_dice_2: 1.283  loss_ce_3: 0.5517  loss_mask_3: 0.1793  loss_dice_3: 1.246  loss_ce_4: 0.5232  loss_mask_4: 0.1731  loss_dice_4: 1.233  loss_ce_5: 0.508  loss_mask_5: 0.1725  loss_dice_5: 1.238  loss_ce_6: 0.5022  loss_mask_6: 0.1747  loss_dice_6: 1.233  loss_ce_7: 0.4948  loss_mask_7: 0.1659  loss_dice_7: 1.246  loss_ce_8: 0.5116  loss_mask_8: 0.1644  loss_dice_8: 1.226    time: 1.1016  last_time: 1.0998  data_time: 0.0738  last_data_time: 0.0870   lr: 0.0001  max_mem: 32839M
[08/30 22:00:30] d2.utils.events INFO:  eta: 0:08:03  iter: 1559  total_loss: 19.83  loss_ce: 0.5296  loss_mask: 0.157  loss_dice: 1.219  loss_ce_0: 0.5755  loss_mask_0: 0.188  loss_dice_0: 1.432  loss_ce_1: 0.6706  loss_mask_1: 0.1679  loss_dice_1: 1.355  loss_ce_2: 0.6355  loss_mask_2: 0.159  loss_dice_2: 1.272  loss_ce_3: 0.5886  loss_mask_3: 0.1628  loss_dice_3: 1.235  loss_ce_4: 0.5474  loss_mask_4: 0.1629  loss_dice_4: 1.244  loss_ce_5: 0.5541  loss_mask_5: 0.1597  loss_dice_5: 1.203  loss_ce_6: 0.5329  loss_mask_6: 0.1596  loss_dice_6: 1.207  loss_ce_7: 0.5391  loss_mask_7: 0.1594  loss_dice_7: 1.188  loss_ce_8: 0.5099  loss_mask_8: 0.1585  loss_dice_8: 1.206    time: 1.1016  last_time: 1.1643  data_time: 0.0763  last_data_time: 0.0894   lr: 0.0001  max_mem: 32839M
[08/30 22:00:51] d2.utils.events INFO:  eta: 0:07:41  iter: 1579  total_loss: 19.9  loss_ce: 0.5229  loss_mask: 0.1671  loss_dice: 1.224  loss_ce_0: 0.6632  loss_mask_0: 0.1922  loss_dice_0: 1.442  loss_ce_1: 0.6981  loss_mask_1: 0.1777  loss_dice_1: 1.337  loss_ce_2: 0.6176  loss_mask_2: 0.169  loss_dice_2: 1.298  loss_ce_3: 0.5433  loss_mask_3: 0.1695  loss_dice_3: 1.256  loss_ce_4: 0.5885  loss_mask_4: 0.1699  loss_dice_4: 1.257  loss_ce_5: 0.5144  loss_mask_5: 0.1668  loss_dice_5: 1.254  loss_ce_6: 0.5389  loss_mask_6: 0.1644  loss_dice_6: 1.227  loss_ce_7: 0.523  loss_mask_7: 0.1651  loss_dice_7: 1.223  loss_ce_8: 0.528  loss_mask_8: 0.1691  loss_dice_8: 1.21    time: 1.1015  last_time: 1.0812  data_time: 0.0728  last_data_time: 0.0742   lr: 0.0001  max_mem: 32839M
[08/30 22:01:13] d2.utils.events INFO:  eta: 0:07:19  iter: 1599  total_loss: 19.78  loss_ce: 0.5238  loss_mask: 0.1621  loss_dice: 1.148  loss_ce_0: 0.6223  loss_mask_0: 0.1857  loss_dice_0: 1.398  loss_ce_1: 0.6826  loss_mask_1: 0.1697  loss_dice_1: 1.269  loss_ce_2: 0.6377  loss_mask_2: 0.1629  loss_dice_2: 1.257  loss_ce_3: 0.5809  loss_mask_3: 0.1632  loss_dice_3: 1.216  loss_ce_4: 0.5767  loss_mask_4: 0.1631  loss_dice_4: 1.185  loss_ce_5: 0.5282  loss_mask_5: 0.1613  loss_dice_5: 1.223  loss_ce_6: 0.5207  loss_mask_6: 0.1618  loss_dice_6: 1.168  loss_ce_7: 0.5359  loss_mask_7: 0.163  loss_dice_7: 1.197  loss_ce_8: 0.5254  loss_mask_8: 0.1641  loss_dice_8: 1.209    time: 1.1014  last_time: 1.1081  data_time: 0.0735  last_data_time: 0.0868   lr: 0.0001  max_mem: 32839M
[08/30 22:01:36] d2.utils.events INFO:  eta: 0:06:57  iter: 1619  total_loss: 20.19  loss_ce: 0.51  loss_mask: 0.1518  loss_dice: 1.213  loss_ce_0: 0.6196  loss_mask_0: 0.1945  loss_dice_0: 1.473  loss_ce_1: 0.7088  loss_mask_1: 0.1684  loss_dice_1: 1.363  loss_ce_2: 0.614  loss_mask_2: 0.1587  loss_dice_2: 1.29  loss_ce_3: 0.5674  loss_mask_3: 0.1567  loss_dice_3: 1.267  loss_ce_4: 0.5684  loss_mask_4: 0.1539  loss_dice_4: 1.253  loss_ce_5: 0.5474  loss_mask_5: 0.153  loss_dice_5: 1.271  loss_ce_6: 0.5392  loss_mask_6: 0.1507  loss_dice_6: 1.239  loss_ce_7: 0.535  loss_mask_7: 0.1491  loss_dice_7: 1.224  loss_ce_8: 0.5225  loss_mask_8: 0.1532  loss_dice_8: 1.221    time: 1.1015  last_time: 1.1186  data_time: 0.0754  last_data_time: 0.0701   lr: 0.0001  max_mem: 32839M
[08/30 22:01:58] d2.utils.events INFO:  eta: 0:06:35  iter: 1639  total_loss: 20.28  loss_ce: 0.5435  loss_mask: 0.156  loss_dice: 1.263  loss_ce_0: 0.6409  loss_mask_0: 0.1849  loss_dice_0: 1.474  loss_ce_1: 0.6775  loss_mask_1: 0.1704  loss_dice_1: 1.394  loss_ce_2: 0.6168  loss_mask_2: 0.1633  loss_dice_2: 1.358  loss_ce_3: 0.5886  loss_mask_3: 0.1591  loss_dice_3: 1.304  loss_ce_4: 0.566  loss_mask_4: 0.1589  loss_dice_4: 1.25  loss_ce_5: 0.5204  loss_mask_5: 0.1562  loss_dice_5: 1.27  loss_ce_6: 0.5081  loss_mask_6: 0.1574  loss_dice_6: 1.264  loss_ce_7: 0.5283  loss_mask_7: 0.1557  loss_dice_7: 1.253  loss_ce_8: 0.5117  loss_mask_8: 0.1553  loss_dice_8: 1.244    time: 1.1018  last_time: 1.0851  data_time: 0.0767  last_data_time: 0.0772   lr: 0.0001  max_mem: 32839M
[08/30 22:02:20] d2.utils.events INFO:  eta: 0:06:13  iter: 1659  total_loss: 20.41  loss_ce: 0.5013  loss_mask: 0.1502  loss_dice: 1.265  loss_ce_0: 0.6206  loss_mask_0: 0.1777  loss_dice_0: 1.428  loss_ce_1: 0.7023  loss_mask_1: 0.1713  loss_dice_1: 1.375  loss_ce_2: 0.6365  loss_mask_2: 0.153  loss_dice_2: 1.292  loss_ce_3: 0.5794  loss_mask_3: 0.1532  loss_dice_3: 1.281  loss_ce_4: 0.5539  loss_mask_4: 0.1529  loss_dice_4: 1.274  loss_ce_5: 0.515  loss_mask_5: 0.1524  loss_dice_5: 1.285  loss_ce_6: 0.5092  loss_mask_6: 0.1526  loss_dice_6: 1.27  loss_ce_7: 0.5121  loss_mask_7: 0.1494  loss_dice_7: 1.242  loss_ce_8: 0.5038  loss_mask_8: 0.1489  loss_dice_8: 1.26    time: 1.1018  last_time: 1.1405  data_time: 0.0762  last_data_time: 0.0666   lr: 0.0001  max_mem: 32839M
[08/30 22:02:42] d2.utils.events INFO:  eta: 0:05:51  iter: 1679  total_loss: 19.06  loss_ce: 0.5057  loss_mask: 0.1643  loss_dice: 1.131  loss_ce_0: 0.6312  loss_mask_0: 0.1935  loss_dice_0: 1.372  loss_ce_1: 0.664  loss_mask_1: 0.1786  loss_dice_1: 1.285  loss_ce_2: 0.6048  loss_mask_2: 0.1687  loss_dice_2: 1.264  loss_ce_3: 0.5672  loss_mask_3: 0.1659  loss_dice_3: 1.171  loss_ce_4: 0.5071  loss_mask_4: 0.1643  loss_dice_4: 1.152  loss_ce_5: 0.5104  loss_mask_5: 0.1644  loss_dice_5: 1.168  loss_ce_6: 0.5203  loss_mask_6: 0.1645  loss_dice_6: 1.16  loss_ce_7: 0.4981  loss_mask_7: 0.1621  loss_dice_7: 1.156  loss_ce_8: 0.506  loss_mask_8: 0.1631  loss_dice_8: 1.134    time: 1.1017  last_time: 1.0753  data_time: 0.0724  last_data_time: 0.0671   lr: 0.0001  max_mem: 32839M
[08/30 22:03:04] d2.utils.events INFO:  eta: 0:05:29  iter: 1699  total_loss: 19.84  loss_ce: 0.5473  loss_mask: 0.1607  loss_dice: 1.194  loss_ce_0: 0.6434  loss_mask_0: 0.1857  loss_dice_0: 1.379  loss_ce_1: 0.7034  loss_mask_1: 0.1698  loss_dice_1: 1.26  loss_ce_2: 0.6583  loss_mask_2: 0.1644  loss_dice_2: 1.259  loss_ce_3: 0.5797  loss_mask_3: 0.1608  loss_dice_3: 1.228  loss_ce_4: 0.574  loss_mask_4: 0.1603  loss_dice_4: 1.195  loss_ce_5: 0.5424  loss_mask_5: 0.1585  loss_dice_5: 1.205  loss_ce_6: 0.5544  loss_mask_6: 0.1584  loss_dice_6: 1.181  loss_ce_7: 0.5508  loss_mask_7: 0.1593  loss_dice_7: 1.215  loss_ce_8: 0.534  loss_mask_8: 0.1593  loss_dice_8: 1.195    time: 1.1018  last_time: 1.1015  data_time: 0.0748  last_data_time: 0.0864   lr: 0.0001  max_mem: 32839M
[08/30 22:03:27] d2.utils.events INFO:  eta: 0:05:07  iter: 1719  total_loss: 20.55  loss_ce: 0.5483  loss_mask: 0.1556  loss_dice: 1.237  loss_ce_0: 0.6676  loss_mask_0: 0.1961  loss_dice_0: 1.472  loss_ce_1: 0.7144  loss_mask_1: 0.1714  loss_dice_1: 1.357  loss_ce_2: 0.6584  loss_mask_2: 0.1601  loss_dice_2: 1.301  loss_ce_3: 0.5602  loss_mask_3: 0.1587  loss_dice_3: 1.269  loss_ce_4: 0.5565  loss_mask_4: 0.1561  loss_dice_4: 1.228  loss_ce_5: 0.5683  loss_mask_5: 0.159  loss_dice_5: 1.269  loss_ce_6: 0.5394  loss_mask_6: 0.1549  loss_dice_6: 1.225  loss_ce_7: 0.5374  loss_mask_7: 0.1566  loss_dice_7: 1.283  loss_ce_8: 0.5101  loss_mask_8: 0.1557  loss_dice_8: 1.251    time: 1.1018  last_time: 1.0883  data_time: 0.0748  last_data_time: 0.0661   lr: 0.0001  max_mem: 32839M
[08/30 22:03:48] d2.utils.events INFO:  eta: 0:04:45  iter: 1739  total_loss: 18.95  loss_ce: 0.4678  loss_mask: 0.1809  loss_dice: 1.105  loss_ce_0: 0.6147  loss_mask_0: 0.2077  loss_dice_0: 1.303  loss_ce_1: 0.6382  loss_mask_1: 0.1933  loss_dice_1: 1.238  loss_ce_2: 0.5832  loss_mask_2: 0.1852  loss_dice_2: 1.186  loss_ce_3: 0.5172  loss_mask_3: 0.1823  loss_dice_3: 1.117  loss_ce_4: 0.5067  loss_mask_4: 0.1852  loss_dice_4: 1.16  loss_ce_5: 0.5054  loss_mask_5: 0.1807  loss_dice_5: 1.133  loss_ce_6: 0.4883  loss_mask_6: 0.1766  loss_dice_6: 1.127  loss_ce_7: 0.4846  loss_mask_7: 0.1772  loss_dice_7: 1.108  loss_ce_8: 0.4789  loss_mask_8: 0.1794  loss_dice_8: 1.143    time: 1.1015  last_time: 1.0801  data_time: 0.0676  last_data_time: 0.0791   lr: 0.0001  max_mem: 32839M
[08/30 22:04:10] d2.utils.events INFO:  eta: 0:04:23  iter: 1759  total_loss: 19.3  loss_ce: 0.5336  loss_mask: 0.1616  loss_dice: 1.124  loss_ce_0: 0.6309  loss_mask_0: 0.186  loss_dice_0: 1.306  loss_ce_1: 0.6725  loss_mask_1: 0.176  loss_dice_1: 1.277  loss_ce_2: 0.5921  loss_mask_2: 0.172  loss_dice_2: 1.23  loss_ce_3: 0.5683  loss_mask_3: 0.1675  loss_dice_3: 1.187  loss_ce_4: 0.5357  loss_mask_4: 0.1671  loss_dice_4: 1.159  loss_ce_5: 0.5377  loss_mask_5: 0.1644  loss_dice_5: 1.159  loss_ce_6: 0.4984  loss_mask_6: 0.1631  loss_dice_6: 1.168  loss_ce_7: 0.526  loss_mask_7: 0.1617  loss_dice_7: 1.147  loss_ce_8: 0.4948  loss_mask_8: 0.1627  loss_dice_8: 1.133    time: 1.1014  last_time: 1.0186  data_time: 0.0688  last_data_time: 0.0518   lr: 0.0001  max_mem: 32839M
[08/30 22:04:32] d2.utils.events INFO:  eta: 0:04:01  iter: 1779  total_loss: 20.28  loss_ce: 0.51  loss_mask: 0.1586  loss_dice: 1.239  loss_ce_0: 0.6033  loss_mask_0: 0.191  loss_dice_0: 1.401  loss_ce_1: 0.7221  loss_mask_1: 0.17  loss_dice_1: 1.372  loss_ce_2: 0.6331  loss_mask_2: 0.1601  loss_dice_2: 1.289  loss_ce_3: 0.5631  loss_mask_3: 0.1615  loss_dice_3: 1.271  loss_ce_4: 0.5652  loss_mask_4: 0.1629  loss_dice_4: 1.217  loss_ce_5: 0.5466  loss_mask_5: 0.1625  loss_dice_5: 1.241  loss_ce_6: 0.5712  loss_mask_6: 0.1604  loss_dice_6: 1.236  loss_ce_7: 0.5243  loss_mask_7: 0.1641  loss_dice_7: 1.278  loss_ce_8: 0.5429  loss_mask_8: 0.1606  loss_dice_8: 1.238    time: 1.1015  last_time: 1.1191  data_time: 0.0733  last_data_time: 0.0658   lr: 0.0001  max_mem: 32839M
[08/30 22:04:54] d2.utils.events INFO:  eta: 0:03:39  iter: 1799  total_loss: 19.32  loss_ce: 0.4979  loss_mask: 0.1564  loss_dice: 1.19  loss_ce_0: 0.6034  loss_mask_0: 0.1873  loss_dice_0: 1.327  loss_ce_1: 0.6616  loss_mask_1: 0.1729  loss_dice_1: 1.265  loss_ce_2: 0.6273  loss_mask_2: 0.1636  loss_dice_2: 1.221  loss_ce_3: 0.563  loss_mask_3: 0.1599  loss_dice_3: 1.179  loss_ce_4: 0.5356  loss_mask_4: 0.1606  loss_dice_4: 1.156  loss_ce_5: 0.5131  loss_mask_5: 0.1576  loss_dice_5: 1.159  loss_ce_6: 0.4956  loss_mask_6: 0.1572  loss_dice_6: 1.177  loss_ce_7: 0.5039  loss_mask_7: 0.157  loss_dice_7: 1.167  loss_ce_8: 0.4885  loss_mask_8: 0.1567  loss_dice_8: 1.143    time: 1.1015  last_time: 1.1340  data_time: 0.0721  last_data_time: 0.0924   lr: 0.0001  max_mem: 32839M
[08/30 22:05:17] d2.utils.events INFO:  eta: 0:03:17  iter: 1819  total_loss: 19.3  loss_ce: 0.5396  loss_mask: 0.1755  loss_dice: 1.164  loss_ce_0: 0.6162  loss_mask_0: 0.1956  loss_dice_0: 1.334  loss_ce_1: 0.716  loss_mask_1: 0.1852  loss_dice_1: 1.247  loss_ce_2: 0.6488  loss_mask_2: 0.1805  loss_dice_2: 1.209  loss_ce_3: 0.5605  loss_mask_3: 0.1794  loss_dice_3: 1.181  loss_ce_4: 0.5821  loss_mask_4: 0.1749  loss_dice_4: 1.173  loss_ce_5: 0.5241  loss_mask_5: 0.1728  loss_dice_5: 1.17  loss_ce_6: 0.4951  loss_mask_6: 0.1736  loss_dice_6: 1.154  loss_ce_7: 0.5195  loss_mask_7: 0.1757  loss_dice_7: 1.15  loss_ce_8: 0.5589  loss_mask_8: 0.174  loss_dice_8: 1.139    time: 1.1015  last_time: 1.0890  data_time: 0.0727  last_data_time: 0.0743   lr: 0.0001  max_mem: 32839M
[08/30 22:05:39] d2.utils.events INFO:  eta: 0:02:55  iter: 1839  total_loss: 20.61  loss_ce: 0.5047  loss_mask: 0.1596  loss_dice: 1.22  loss_ce_0: 0.6362  loss_mask_0: 0.1919  loss_dice_0: 1.461  loss_ce_1: 0.6907  loss_mask_1: 0.1743  loss_dice_1: 1.387  loss_ce_2: 0.6581  loss_mask_2: 0.1642  loss_dice_2: 1.311  loss_ce_3: 0.5523  loss_mask_3: 0.1634  loss_dice_3: 1.276  loss_ce_4: 0.5593  loss_mask_4: 0.1586  loss_dice_4: 1.241  loss_ce_5: 0.5593  loss_mask_5: 0.1554  loss_dice_5: 1.26  loss_ce_6: 0.5256  loss_mask_6: 0.1583  loss_dice_6: 1.245  loss_ce_7: 0.5208  loss_mask_7: 0.1602  loss_dice_7: 1.238  loss_ce_8: 0.514  loss_mask_8: 0.1591  loss_dice_8: 1.23    time: 1.1016  last_time: 1.1413  data_time: 0.0774  last_data_time: 0.0688   lr: 0.0001  max_mem: 32839M
[08/30 22:06:01] d2.utils.events INFO:  eta: 0:02:33  iter: 1859  total_loss: 19.9  loss_ce: 0.5431  loss_mask: 0.1604  loss_dice: 1.205  loss_ce_0: 0.6718  loss_mask_0: 0.1833  loss_dice_0: 1.414  loss_ce_1: 0.7136  loss_mask_1: 0.1707  loss_dice_1: 1.343  loss_ce_2: 0.6597  loss_mask_2: 0.1622  loss_dice_2: 1.298  loss_ce_3: 0.5749  loss_mask_3: 0.1608  loss_dice_3: 1.244  loss_ce_4: 0.5705  loss_mask_4: 0.1592  loss_dice_4: 1.227  loss_ce_5: 0.5611  loss_mask_5: 0.1597  loss_dice_5: 1.212  loss_ce_6: 0.5598  loss_mask_6: 0.1585  loss_dice_6: 1.178  loss_ce_7: 0.5488  loss_mask_7: 0.1576  loss_dice_7: 1.194  loss_ce_8: 0.5394  loss_mask_8: 0.1597  loss_dice_8: 1.23    time: 1.1017  last_time: 1.1368  data_time: 0.0782  last_data_time: 0.0816   lr: 0.0001  max_mem: 32839M
[08/30 22:06:23] d2.utils.events INFO:  eta: 0:02:11  iter: 1879  total_loss: 19.07  loss_ce: 0.4664  loss_mask: 0.1627  loss_dice: 1.174  loss_ce_0: 0.6035  loss_mask_0: 0.1845  loss_dice_0: 1.346  loss_ce_1: 0.6516  loss_mask_1: 0.1721  loss_dice_1: 1.254  loss_ce_2: 0.5683  loss_mask_2: 0.1612  loss_dice_2: 1.253  loss_ce_3: 0.5255  loss_mask_3: 0.1605  loss_dice_3: 1.217  loss_ce_4: 0.4902  loss_mask_4: 0.1616  loss_dice_4: 1.196  loss_ce_5: 0.4682  loss_mask_5: 0.1635  loss_dice_5: 1.203  loss_ce_6: 0.4561  loss_mask_6: 0.1606  loss_dice_6: 1.153  loss_ce_7: 0.445  loss_mask_7: 0.1573  loss_dice_7: 1.174  loss_ce_8: 0.4453  loss_mask_8: 0.1623  loss_dice_8: 1.197    time: 1.1016  last_time: 1.0838  data_time: 0.0713  last_data_time: 0.0595   lr: 0.0001  max_mem: 32839M
[08/30 22:06:45] d2.utils.events INFO:  eta: 0:01:49  iter: 1899  total_loss: 18.44  loss_ce: 0.4558  loss_mask: 0.1475  loss_dice: 1.143  loss_ce_0: 0.6045  loss_mask_0: 0.1732  loss_dice_0: 1.34  loss_ce_1: 0.6363  loss_mask_1: 0.1611  loss_dice_1: 1.268  loss_ce_2: 0.5938  loss_mask_2: 0.1532  loss_dice_2: 1.217  loss_ce_3: 0.5284  loss_mask_3: 0.1524  loss_dice_3: 1.156  loss_ce_4: 0.4721  loss_mask_4: 0.1521  loss_dice_4: 1.187  loss_ce_5: 0.4694  loss_mask_5: 0.1536  loss_dice_5: 1.186  loss_ce_6: 0.461  loss_mask_6: 0.1482  loss_dice_6: 1.156  loss_ce_7: 0.4939  loss_mask_7: 0.1472  loss_dice_7: 1.194  loss_ce_8: 0.4358  loss_mask_8: 0.1483  loss_dice_8: 1.139    time: 1.1016  last_time: 1.0850  data_time: 0.0732  last_data_time: 0.0658   lr: 0.0001  max_mem: 32839M
[08/30 22:07:07] d2.utils.events INFO:  eta: 0:01:27  iter: 1919  total_loss: 19.28  loss_ce: 0.5042  loss_mask: 0.1588  loss_dice: 1.161  loss_ce_0: 0.598  loss_mask_0: 0.1793  loss_dice_0: 1.322  loss_ce_1: 0.6698  loss_mask_1: 0.1707  loss_dice_1: 1.283  loss_ce_2: 0.6507  loss_mask_2: 0.1613  loss_dice_2: 1.217  loss_ce_3: 0.5994  loss_mask_3: 0.163  loss_dice_3: 1.179  loss_ce_4: 0.5479  loss_mask_4: 0.1563  loss_dice_4: 1.181  loss_ce_5: 0.5555  loss_mask_5: 0.1564  loss_dice_5: 1.18  loss_ce_6: 0.5208  loss_mask_6: 0.1568  loss_dice_6: 1.145  loss_ce_7: 0.543  loss_mask_7: 0.1583  loss_dice_7: 1.111  loss_ce_8: 0.5181  loss_mask_8: 0.158  loss_dice_8: 1.163    time: 1.1015  last_time: 1.0797  data_time: 0.0737  last_data_time: 0.0829   lr: 0.0001  max_mem: 32839M
[08/30 22:07:29] d2.utils.events INFO:  eta: 0:01:05  iter: 1939  total_loss: 19.31  loss_ce: 0.5081  loss_mask: 0.1562  loss_dice: 1.137  loss_ce_0: 0.6593  loss_mask_0: 0.1783  loss_dice_0: 1.332  loss_ce_1: 0.7027  loss_mask_1: 0.167  loss_dice_1: 1.264  loss_ce_2: 0.6248  loss_mask_2: 0.1591  loss_dice_2: 1.219  loss_ce_3: 0.5442  loss_mask_3: 0.1567  loss_dice_3: 1.168  loss_ce_4: 0.5197  loss_mask_4: 0.1547  loss_dice_4: 1.179  loss_ce_5: 0.5358  loss_mask_5: 0.153  loss_dice_5: 1.167  loss_ce_6: 0.5109  loss_mask_6: 0.1549  loss_dice_6: 1.125  loss_ce_7: 0.4899  loss_mask_7: 0.1527  loss_dice_7: 1.131  loss_ce_8: 0.5051  loss_mask_8: 0.1537  loss_dice_8: 1.162    time: 1.1014  last_time: 1.0796  data_time: 0.0714  last_data_time: 0.0697   lr: 0.0001  max_mem: 32839M
[08/30 22:07:51] d2.utils.events INFO:  eta: 0:00:43  iter: 1959  total_loss: 19.62  loss_ce: 0.4903  loss_mask: 0.1506  loss_dice: 1.177  loss_ce_0: 0.5957  loss_mask_0: 0.1768  loss_dice_0: 1.383  loss_ce_1: 0.6357  loss_mask_1: 0.1639  loss_dice_1: 1.333  loss_ce_2: 0.5743  loss_mask_2: 0.1565  loss_dice_2: 1.276  loss_ce_3: 0.5517  loss_mask_3: 0.153  loss_dice_3: 1.231  loss_ce_4: 0.5392  loss_mask_4: 0.1481  loss_dice_4: 1.222  loss_ce_5: 0.5033  loss_mask_5: 0.1482  loss_dice_5: 1.219  loss_ce_6: 0.4748  loss_mask_6: 0.1506  loss_dice_6: 1.208  loss_ce_7: 0.4968  loss_mask_7: 0.1488  loss_dice_7: 1.224  loss_ce_8: 0.4707  loss_mask_8: 0.1528  loss_dice_8: 1.231    time: 1.1014  last_time: 1.1582  data_time: 0.0723  last_data_time: 0.0734   lr: 0.0001  max_mem: 32839M
[08/30 22:08:13] d2.utils.events INFO:  eta: 0:00:21  iter: 1979  total_loss: 19.34  loss_ce: 0.477  loss_mask: 0.1586  loss_dice: 1.178  loss_ce_0: 0.605  loss_mask_0: 0.1893  loss_dice_0: 1.396  loss_ce_1: 0.6668  loss_mask_1: 0.1674  loss_dice_1: 1.288  loss_ce_2: 0.6112  loss_mask_2: 0.1623  loss_dice_2: 1.247  loss_ce_3: 0.5397  loss_mask_3: 0.1643  loss_dice_3: 1.203  loss_ce_4: 0.525  loss_mask_4: 0.161  loss_dice_4: 1.185  loss_ce_5: 0.5114  loss_mask_5: 0.1604  loss_dice_5: 1.194  loss_ce_6: 0.4925  loss_mask_6: 0.1592  loss_dice_6: 1.208  loss_ce_7: 0.502  loss_mask_7: 0.1595  loss_dice_7: 1.152  loss_ce_8: 0.4901  loss_mask_8: 0.1585  loss_dice_8: 1.178    time: 1.1014  last_time: 1.1183  data_time: 0.0776  last_data_time: 0.0822   lr: 0.0001  max_mem: 32839M
[08/30 22:08:36] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r101_008_2000_19/model_final.pth
[08/30 22:08:39] d2.utils.events INFO:  eta: 0:00:00  iter: 1999  total_loss: 20.4  loss_ce: 0.549  loss_mask: 0.1396  loss_dice: 1.276  loss_ce_0: 0.6975  loss_mask_0: 0.1789  loss_dice_0: 1.466  loss_ce_1: 0.7062  loss_mask_1: 0.1712  loss_dice_1: 1.407  loss_ce_2: 0.6563  loss_mask_2: 0.155  loss_dice_2: 1.328  loss_ce_3: 0.5902  loss_mask_3: 0.1541  loss_dice_3: 1.275  loss_ce_4: 0.5867  loss_mask_4: 0.1414  loss_dice_4: 1.261  loss_ce_5: 0.5581  loss_mask_5: 0.1411  loss_dice_5: 1.282  loss_ce_6: 0.5141  loss_mask_6: 0.1412  loss_dice_6: 1.276  loss_ce_7: 0.5385  loss_mask_7: 0.1427  loss_dice_7: 1.251  loss_ce_8: 0.539  loss_mask_8: 0.1401  loss_dice_8: 1.208    time: 1.1017  last_time: 1.1007  data_time: 0.0777  last_data_time: 0.0672   lr: 0.0001  max_mem: 32839M
[08/30 22:08:39] d2.engine.hooks INFO: Overall training speed: 1998 iterations in 0:36:41 (1.1017 s / it)
[08/30 22:08:39] d2.engine.hooks INFO: Total training time: 0:36:49 (0:00:08 on hooks)
[08/30 22:08:39] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[08/30 22:08:39] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[08/30 22:08:39] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[08/30 22:08:39] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[08/30 22:08:39] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[08/30 22:08:39] d2.evaluation.evaluator INFO: Start inference on 500 batches
[08/30 22:08:44] d2.evaluation.evaluator INFO: Inference done 11/500. Dataloading: 0.0038 s/iter. Inference: 0.2513 s/iter. Eval: 0.0665 s/iter. Total: 0.3216 s/iter. ETA=0:02:37
[08/30 22:08:49] d2.evaluation.evaluator INFO: Inference done 27/500. Dataloading: 0.0045 s/iter. Inference: 0.2528 s/iter. Eval: 0.0675 s/iter. Total: 0.3248 s/iter. ETA=0:02:33
[08/30 22:08:54] d2.evaluation.evaluator INFO: Inference done 43/500. Dataloading: 0.0047 s/iter. Inference: 0.2491 s/iter. Eval: 0.0674 s/iter. Total: 0.3213 s/iter. ETA=0:02:26
[08/30 22:08:59] d2.evaluation.evaluator INFO: Inference done 59/500. Dataloading: 0.0047 s/iter. Inference: 0.2478 s/iter. Eval: 0.0672 s/iter. Total: 0.3198 s/iter. ETA=0:02:21
[08/30 22:09:04] d2.evaluation.evaluator INFO: Inference done 75/500. Dataloading: 0.0047 s/iter. Inference: 0.2474 s/iter. Eval: 0.0671 s/iter. Total: 0.3192 s/iter. ETA=0:02:15
[08/30 22:09:09] d2.evaluation.evaluator INFO: Inference done 91/500. Dataloading: 0.0047 s/iter. Inference: 0.2471 s/iter. Eval: 0.0672 s/iter. Total: 0.3191 s/iter. ETA=0:02:10
[08/30 22:09:14] d2.evaluation.evaluator INFO: Inference done 107/500. Dataloading: 0.0047 s/iter. Inference: 0.2467 s/iter. Eval: 0.0671 s/iter. Total: 0.3185 s/iter. ETA=0:02:05
[08/30 22:09:19] d2.evaluation.evaluator INFO: Inference done 123/500. Dataloading: 0.0047 s/iter. Inference: 0.2464 s/iter. Eval: 0.0670 s/iter. Total: 0.3182 s/iter. ETA=0:01:59
[08/30 22:09:24] d2.evaluation.evaluator INFO: Inference done 139/500. Dataloading: 0.0048 s/iter. Inference: 0.2463 s/iter. Eval: 0.0668 s/iter. Total: 0.3180 s/iter. ETA=0:01:54
[08/30 22:09:29] d2.evaluation.evaluator INFO: Inference done 155/500. Dataloading: 0.0048 s/iter. Inference: 0.2466 s/iter. Eval: 0.0668 s/iter. Total: 0.3182 s/iter. ETA=0:01:49
[08/30 22:09:34] d2.evaluation.evaluator INFO: Inference done 171/500. Dataloading: 0.0048 s/iter. Inference: 0.2464 s/iter. Eval: 0.0667 s/iter. Total: 0.3179 s/iter. ETA=0:01:44
[08/30 22:09:39] d2.evaluation.evaluator INFO: Inference done 187/500. Dataloading: 0.0048 s/iter. Inference: 0.2465 s/iter. Eval: 0.0666 s/iter. Total: 0.3180 s/iter. ETA=0:01:39
[08/30 22:09:45] d2.evaluation.evaluator INFO: Inference done 203/500. Dataloading: 0.0048 s/iter. Inference: 0.2464 s/iter. Eval: 0.0666 s/iter. Total: 0.3178 s/iter. ETA=0:01:34
[08/30 22:09:50] d2.evaluation.evaluator INFO: Inference done 219/500. Dataloading: 0.0047 s/iter. Inference: 0.2462 s/iter. Eval: 0.0665 s/iter. Total: 0.3175 s/iter. ETA=0:01:29
[08/30 22:09:55] d2.evaluation.evaluator INFO: Inference done 235/500. Dataloading: 0.0047 s/iter. Inference: 0.2461 s/iter. Eval: 0.0665 s/iter. Total: 0.3174 s/iter. ETA=0:01:24
[08/30 22:10:00] d2.evaluation.evaluator INFO: Inference done 251/500. Dataloading: 0.0048 s/iter. Inference: 0.2461 s/iter. Eval: 0.0665 s/iter. Total: 0.3174 s/iter. ETA=0:01:19
[08/30 22:10:05] d2.evaluation.evaluator INFO: Inference done 267/500. Dataloading: 0.0048 s/iter. Inference: 0.2462 s/iter. Eval: 0.0665 s/iter. Total: 0.3175 s/iter. ETA=0:01:13
[08/30 22:10:10] d2.evaluation.evaluator INFO: Inference done 283/500. Dataloading: 0.0048 s/iter. Inference: 0.2460 s/iter. Eval: 0.0665 s/iter. Total: 0.3173 s/iter. ETA=0:01:08
[08/30 22:10:15] d2.evaluation.evaluator INFO: Inference done 299/500. Dataloading: 0.0048 s/iter. Inference: 0.2459 s/iter. Eval: 0.0665 s/iter. Total: 0.3172 s/iter. ETA=0:01:03
[08/30 22:10:20] d2.evaluation.evaluator INFO: Inference done 316/500. Dataloading: 0.0047 s/iter. Inference: 0.2457 s/iter. Eval: 0.0664 s/iter. Total: 0.3169 s/iter. ETA=0:00:58
[08/30 22:10:25] d2.evaluation.evaluator INFO: Inference done 332/500. Dataloading: 0.0047 s/iter. Inference: 0.2457 s/iter. Eval: 0.0663 s/iter. Total: 0.3168 s/iter. ETA=0:00:53
[08/30 22:10:30] d2.evaluation.evaluator INFO: Inference done 348/500. Dataloading: 0.0047 s/iter. Inference: 0.2456 s/iter. Eval: 0.0664 s/iter. Total: 0.3168 s/iter. ETA=0:00:48
[08/30 22:10:35] d2.evaluation.evaluator INFO: Inference done 364/500. Dataloading: 0.0047 s/iter. Inference: 0.2456 s/iter. Eval: 0.0664 s/iter. Total: 0.3169 s/iter. ETA=0:00:43
[08/30 22:10:40] d2.evaluation.evaluator INFO: Inference done 380/500. Dataloading: 0.0048 s/iter. Inference: 0.2456 s/iter. Eval: 0.0664 s/iter. Total: 0.3169 s/iter. ETA=0:00:38
[08/30 22:10:46] d2.evaluation.evaluator INFO: Inference done 396/500. Dataloading: 0.0048 s/iter. Inference: 0.2457 s/iter. Eval: 0.0665 s/iter. Total: 0.3171 s/iter. ETA=0:00:32
[08/30 22:10:51] d2.evaluation.evaluator INFO: Inference done 412/500. Dataloading: 0.0048 s/iter. Inference: 0.2458 s/iter. Eval: 0.0665 s/iter. Total: 0.3171 s/iter. ETA=0:00:27
[08/30 22:10:56] d2.evaluation.evaluator INFO: Inference done 428/500. Dataloading: 0.0048 s/iter. Inference: 0.2459 s/iter. Eval: 0.0665 s/iter. Total: 0.3172 s/iter. ETA=0:00:22
[08/30 22:11:01] d2.evaluation.evaluator INFO: Inference done 444/500. Dataloading: 0.0048 s/iter. Inference: 0.2459 s/iter. Eval: 0.0665 s/iter. Total: 0.3173 s/iter. ETA=0:00:17
[08/30 22:11:06] d2.evaluation.evaluator INFO: Inference done 460/500. Dataloading: 0.0048 s/iter. Inference: 0.2461 s/iter. Eval: 0.0664 s/iter. Total: 0.3174 s/iter. ETA=0:00:12
[08/30 22:11:11] d2.evaluation.evaluator INFO: Inference done 476/500. Dataloading: 0.0048 s/iter. Inference: 0.2461 s/iter. Eval: 0.0664 s/iter. Total: 0.3174 s/iter. ETA=0:00:07
[08/30 22:11:16] d2.evaluation.evaluator INFO: Inference done 492/500. Dataloading: 0.0048 s/iter. Inference: 0.2460 s/iter. Eval: 0.0664 s/iter. Total: 0.3173 s/iter. ETA=0:00:02
[08/30 22:11:19] d2.evaluation.evaluator INFO: Total inference time: 0:02:37.085362 (0.317344 s / iter per device, on 1 devices)
[08/30 22:11:19] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:02:01 (0.245990 s / iter per device, on 1 devices)
[08/30 22:11:19] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval004lqnsb ...
[08/30 22:11:42] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 55.976 | 80.410 | 68.396 |      19       |
| Things | 48.721 | 79.916 | 60.634 |       8       |
| Stuff  | 61.251 | 80.769 | 74.042 |      11       |
[08/30 22:11:42] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.138 | 96.538 | 99.586 |     Stuff     |
| class_8  | 62.742 | 82.742 | 75.828 |     Stuff     |
| class_11 | 86.486 | 89.138 | 97.026 |     Stuff     |
| class_12 | 40.224 | 77.515 | 51.892 |     Stuff     |
| class_13 | 32.522 | 76.751 | 42.373 |     Stuff     |
| class_17 | 44.201 | 63.663 | 69.430 |     Stuff     |
| class_19 | 45.753 | 69.134 | 66.179 |     Stuff     |
| class_20 | 62.572 | 76.419 | 81.879 |     Stuff     |
| class_21 | 88.635 | 89.835 | 98.664 |     Stuff     |
| class_22 | 28.278 | 74.806 | 37.802 |     Stuff     |
| class_23 | 86.215 | 91.915 | 93.799 |     Stuff     |
| class_24 | 47.827 | 77.170 | 61.976 |    Things     |
| class_25 | 45.644 | 74.737 | 61.072 |    Things     |
| class_26 | 60.426 | 83.945 | 71.982 |    Things     |
| class_27 | 48.983 | 88.409 | 55.405 |    Things     |
| class_28 | 61.887 | 89.736 | 68.966 |    Things     |
| class_31 | 50.644 | 81.030 | 62.500 |    Things     |
| class_32 | 35.022 | 73.150 | 47.876 |    Things     |
| class_33 | 39.338 | 71.147 | 55.291 |    Things     |
[08/30 22:11:42] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[08/30 22:11:42] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[08/30 22:11:42] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[08/30 22:11:42] d2.evaluation.testing INFO: copypaste: 55.9756,80.4095,68.3962,48.7212,79.9156,60.6336,61.2515,80.7688,74.0417,96.1383,96.5380,99.5859,62.7417,82.7419,75.8282,86.4865,89.1377,97.0256,40.2239,77.5147,51.8919,32.5217,76.7513,42.3729,44.2012,63.6629,69.4301,45.7526,69.1345,66.1792,62.5715,76.4193,81.8792,88.6349,89.8352,98.6639,28.2784,74.8062,37.8022,86.2155,91.9148,93.7993,47.8273,77.1703,61.9763,45.6437,74.7372,61.0723,60.4257,83.9455,71.9821,48.9835,88.4092,55.4054,61.8866,89.7355,68.9655,50.6438,81.0300,62.5000,35.0216,73.1500,47.8764,39.3377,71.1470,55.2908
