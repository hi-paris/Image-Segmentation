[09/22 13:06:23] detectron2 INFO: Rank of current process: 0. World size: 2
[09/22 13:06:25] detectron2 INFO: Environment info:
-------------------------------  -------------------------------------------------------------------------------------------------------
sys.platform                     linux
Python                           3.8.19 | packaged by conda-forge | (default, Mar 20 2024, 12:47:35) [GCC 12.3.0]
numpy                            1.24.4
detectron2                       0.6 @/home/ids/gbrison/segmentation/segmentation/detectron2/detectron2
Compiler                         GCC 11.4
CUDA compiler                    CUDA 12.5
detectron2 arch flags            8.9
DETECTRON2_ENV_MODULE            <not set>
PyTorch                          2.4.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torch
PyTorch debug build              False
torch._C._GLIBCXX_USE_CXX11_ABI  False
GPU available                    Yes
GPU 0,1                          NVIDIA L40S (arch=8.9)
Driver version                   560.35.03
CUDA_HOME                        /usr/local/cuda
Pillow                           9.4.0
torchvision                      0.19.0+cu121 @/home/ids/gbrison/segmentation/miniconda3/envs/fc/lib/python3.8/site-packages/torchvision
torchvision arch flags           5.0, 6.0, 7.0, 7.5, 8.0, 8.6, 9.0
fvcore                           0.1.5.post20221221
iopath                           0.1.9
cv2                              4.10.0
-------------------------------  -------------------------------------------------------------------------------------------------------
PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX512
  - CUDA Runtime 12.1
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_90,code=sm_90
  - CuDNN 90.1  (built against CUDA 12.4)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=12.1, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

[09/22 13:06:25] detectron2 INFO: Command line arguments: Namespace(config_file='configs/coco/panoptic-segmentation/fcclip/r50_exp_1500_500_008.yaml', dist_url='tcp://127.0.0.1:51163', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[09/22 13:06:25] detectron2 INFO: Contents of args.config_file=configs/coco/panoptic-segmentation/fcclip/r50_exp_1500_500_008.yaml:
_BASE_: ./fcclip_convnext_large_eval_ade20k_r50.yaml

INPUT:
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TEST: 2560

MODEL:
  SEM_SEG_HEAD:
    NUM_CLASSES: 19
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1500_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_normal_008_1500_in_500_19
DATASETS:
  TRAIN: ("openvocab_cityscapes_fine_panoptic_train",)
  TEST: ("openvocab_cityscapes_fine_panoptic_val",)
SOLVER:
  IMS_PER_BATCH: 8
  MAX_ITER: 500
TEST:
  EVAL_PERIOD: 500


[09/22 13:06:25] detectron2 INFO: Running with full config:
CUDNN_BENCHMARK: false
DATALOADER:
  ASPECT_RATIO_GROUPING: true
  FILTER_EMPTY_ANNOTATIONS: true
  NUM_WORKERS: 4
  REPEAT_SQRT: true
  REPEAT_THRESHOLD: 0.0
  SAMPLER_TRAIN: TrainingSampler
DATASETS:
  PRECOMPUTED_PROPOSAL_TOPK_TEST: 1000
  PRECOMPUTED_PROPOSAL_TOPK_TRAIN: 2000
  PROPOSAL_FILES_TEST: []
  PROPOSAL_FILES_TRAIN: []
  TEST:
  - openvocab_cityscapes_fine_panoptic_val
  TRAIN:
  - openvocab_cityscapes_fine_panoptic_train
GLOBAL:
  HACK: 1.0
INPUT:
  COLOR_AUG_SSD: false
  CROP:
    ENABLED: false
    MINIMUM_INST_AREA: 1
    SINGLE_CATEGORY_MAX_AREA: 1.0
    SIZE:
    - 0.9
    - 0.9
    TYPE: relative_range
  DATASET_MAPPER_NAME: coco_panoptic_lsj
  FORMAT: RGB
  IMAGE_SIZE: 1024
  MASK_FORMAT: polygon
  MAX_SCALE: 2.0
  MAX_SIZE_TEST: 2560
  MAX_SIZE_TRAIN: 1333
  MIN_SCALE: 0.1
  MIN_SIZE_TEST: 1024
  MIN_SIZE_TRAIN:
  - 800
  MIN_SIZE_TRAIN_SAMPLING: choice
  RANDOM_FLIP: horizontal
  SIZE_DIVISIBILITY: -1
MODEL:
  ANCHOR_GENERATOR:
    ANGLES:
    - - -90
      - 0
      - 90
    ASPECT_RATIOS:
    - - 0.5
      - 1.0
      - 2.0
    NAME: DefaultAnchorGenerator
    OFFSET: 0.0
    SIZES:
    - - 32
      - 64
      - 128
      - 256
      - 512
  BACKBONE:
    FREEZE_AT: 0
    NAME: CLIP
  DEVICE: cuda
  FC_CLIP:
    CLIP_MODEL_NAME: RN50
    CLIP_PRETRAINED_WEIGHTS: openai
    EMBED_DIM: 1024
    ENSEMBLE_ON_VALID_MASK: true
    GEOMETRIC_ENSEMBLE_ALPHA: 0.4
    GEOMETRIC_ENSEMBLE_BETA: 0.8
  FPN:
    FUSE_TYPE: sum
    IN_FEATURES: []
    NORM: ''
    OUT_CHANNELS: 256
  KEYPOINT_ON: false
  LOAD_PROPOSALS: false
  MASK_FORMER:
    CLASS_WEIGHT: 2.0
    DEC_LAYERS: 10
    DEEP_SUPERVISION: true
    DICE_WEIGHT: 5.0
    DIM_FEEDFORWARD: 2048
    DROPOUT: 0.0
    ENC_LAYERS: 0
    ENFORCE_INPUT_PROJ: false
    HIDDEN_DIM: 256
    IMPORTANCE_SAMPLE_RATIO: 0.75
    MASK_WEIGHT: 5.0
    NHEADS: 8
    NO_OBJECT_WEIGHT: 0.1
    NUM_OBJECT_QUERIES: 250
    OVERSAMPLE_RATIO: 3.0
    PRE_NORM: false
    SIZE_DIVISIBILITY: 32
    TEST:
      INSTANCE_ON: true
      OBJECT_MASK_THRESHOLD: 0.0
      OVERLAP_THRESHOLD: 0.8
      PANOPTIC_ON: true
      SEMANTIC_ON: true
      SEM_SEG_POSTPROCESSING_BEFORE_INFERENCE: false
    TRAIN_NUM_POINTS: 12544
    TRANSFORMER_DECODER_NAME: MultiScaleMaskedTransformerDecoder
    TRANSFORMER_IN_FEATURE: multi_scale_pixel_decoder
  MASK_ON: false
  META_ARCHITECTURE: FCCLIP
  PANOPTIC_FPN:
    COMBINE:
      ENABLED: true
      INSTANCES_CONFIDENCE_THRESH: 0.5
      OVERLAP_THRESH: 0.5
      STUFF_AREA_LIMIT: 4096
    INSTANCE_LOSS_WEIGHT: 1.0
  PIXEL_MEAN:
  - 122.7709383
  - 116.7460125
  - 104.09373615
  PIXEL_STD:
  - 68.5005327
  - 66.6321579
  - 70.32316305
  PROPOSAL_GENERATOR:
    MIN_SIZE: 0
    NAME: RPN
  RESNETS:
    DEFORM_MODULATED: false
    DEFORM_NUM_GROUPS: 1
    DEFORM_ON_PER_STAGE:
    - false
    - false
    - false
    - false
    DEPTH: 50
    NORM: FrozenBN
    NUM_GROUPS: 1
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    RES2_OUT_CHANNELS: 256
    RES4_DILATION: 1
    RES5_DILATION: 1
    RES5_MULTI_GRID:
    - 1
    - 1
    - 1
    STEM_OUT_CHANNELS: 64
    STEM_TYPE: basic
    STRIDE_IN_1X1: false
    WIDTH_PER_GROUP: 64
  RETINANET:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_WEIGHTS: &id002
    - 1.0
    - 1.0
    - 1.0
    - 1.0
    FOCAL_LOSS_ALPHA: 0.25
    FOCAL_LOSS_GAMMA: 2.0
    IN_FEATURES:
    - p3
    - p4
    - p5
    - p6
    - p7
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.4
    - 0.5
    NMS_THRESH_TEST: 0.5
    NORM: ''
    NUM_CLASSES: 80
    NUM_CONVS: 4
    PRIOR_PROB: 0.01
    SCORE_THRESH_TEST: 0.05
    SMOOTH_L1_LOSS_BETA: 0.1
    TOPK_CANDIDATES_TEST: 1000
  ROI_BOX_CASCADE_HEAD:
    BBOX_REG_WEIGHTS:
    - &id001
      - 10.0
      - 10.0
      - 5.0
      - 5.0
    - - 20.0
      - 20.0
      - 10.0
      - 10.0
    - - 30.0
      - 30.0
      - 15.0
      - 15.0
    IOUS:
    - 0.5
    - 0.6
    - 0.7
  ROI_BOX_HEAD:
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id001
    CLS_AGNOSTIC_BBOX_REG: false
    CONV_DIM: 256
    FC_DIM: 1024
    FED_LOSS_FREQ_WEIGHT_POWER: 0.5
    FED_LOSS_NUM_CLASSES: 50
    NAME: ''
    NORM: ''
    NUM_CONV: 0
    NUM_FC: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
    SMOOTH_L1_BETA: 0.0
    TRAIN_ON_PRED_BOXES: false
    USE_FED_LOSS: false
    USE_SIGMOID_CE: false
  ROI_HEADS:
    BATCH_SIZE_PER_IMAGE: 512
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - 1
    IOU_THRESHOLDS:
    - 0.5
    NAME: Res5ROIHeads
    NMS_THRESH_TEST: 0.5
    NUM_CLASSES: 80
    POSITIVE_FRACTION: 0.25
    PROPOSAL_APPEND_GT: true
    SCORE_THRESH_TEST: 0.05
  ROI_KEYPOINT_HEAD:
    CONV_DIMS:
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    - 512
    LOSS_WEIGHT: 1.0
    MIN_KEYPOINTS_PER_IMAGE: 1
    NAME: KRCNNConvDeconvUpsampleHead
    NORMALIZE_LOSS_BY_VISIBLE_KEYPOINTS: true
    NUM_KEYPOINTS: 17
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  ROI_MASK_HEAD:
    CLS_AGNOSTIC_MASK: false
    CONV_DIM: 256
    NAME: MaskRCNNConvUpsampleHead
    NORM: ''
    NUM_CONV: 0
    POOLER_RESOLUTION: 14
    POOLER_SAMPLING_RATIO: 0
    POOLER_TYPE: ROIAlignV2
  RPN:
    BATCH_SIZE_PER_IMAGE: 256
    BBOX_REG_LOSS_TYPE: smooth_l1
    BBOX_REG_LOSS_WEIGHT: 1.0
    BBOX_REG_WEIGHTS: *id002
    BOUNDARY_THRESH: -1
    CONV_DIMS:
    - -1
    HEAD_NAME: StandardRPNHead
    IN_FEATURES:
    - res4
    IOU_LABELS:
    - 0
    - -1
    - 1
    IOU_THRESHOLDS:
    - 0.3
    - 0.7
    LOSS_WEIGHT: 1.0
    NMS_THRESH: 0.7
    POSITIVE_FRACTION: 0.5
    POST_NMS_TOPK_TEST: 1000
    POST_NMS_TOPK_TRAIN: 2000
    PRE_NMS_TOPK_TEST: 6000
    PRE_NMS_TOPK_TRAIN: 12000
    SMOOTH_L1_BETA: 0.0
  SEM_SEG_HEAD:
    ASPP_CHANNELS: 256
    ASPP_DILATIONS:
    - 6
    - 12
    - 18
    ASPP_DROPOUT: 0.1
    COMMON_STRIDE: 4
    CONVS_DIM: 256
    DEFORMABLE_TRANSFORMER_ENCODER_IN_FEATURES:
    - res3
    - res4
    - res5
    DEFORMABLE_TRANSFORMER_ENCODER_N_HEADS: 8
    DEFORMABLE_TRANSFORMER_ENCODER_N_POINTS: 4
    IGNORE_VALUE: 255
    IN_FEATURES:
    - res2
    - res3
    - res4
    - res5
    LOSS_TYPE: hard_pixel_mining
    LOSS_WEIGHT: 1.0
    MASK_DIM: 256
    NAME: FCCLIPHead
    NORM: GN
    NUM_CLASSES: 19
    PIXEL_DECODER_NAME: MSDeformAttnPixelDecoder
    PROJECT_CHANNELS:
    - 48
    PROJECT_FEATURES:
    - res2
    TRANSFORMER_ENC_LAYERS: 6
    USE_DEPTHWISE_SEPARABLE_CONV: false
  SWIN:
    APE: false
    ATTN_DROP_RATE: 0.0
    DEPTHS:
    - 2
    - 2
    - 6
    - 2
    DROP_PATH_RATE: 0.3
    DROP_RATE: 0.0
    EMBED_DIM: 96
    MLP_RATIO: 4.0
    NUM_HEADS:
    - 3
    - 6
    - 12
    - 24
    OUT_FEATURES:
    - res2
    - res3
    - res4
    - res5
    PATCH_NORM: true
    PATCH_SIZE: 4
    PRETRAIN_IMG_SIZE: 224
    QKV_BIAS: true
    QK_SCALE: null
    USE_CHECKPOINT: false
    WINDOW_SIZE: 7
  WEIGHTS: /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1500_19/model_final.pth
OUTPUT_DIR: /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_normal_008_1500_in_500_19
SEED: -1
SOLVER:
  AMP:
    ENABLED: true
  BACKBONE_MULTIPLIER: 0.1
  BASE_LR: 0.0001
  BASE_LR_END: 0.0
  BIAS_LR_FACTOR: 1.0
  CHECKPOINT_PERIOD: 5000
  CLIP_GRADIENTS:
    CLIP_TYPE: full_model
    CLIP_VALUE: 0.01
    ENABLED: true
    NORM_TYPE: 2.0
  GAMMA: 0.1
  IMS_PER_BATCH: 8
  LR_SCHEDULER_NAME: WarmupMultiStepLR
  MAX_ITER: 500
  MOMENTUM: 0.9
  NESTEROV: false
  NUM_DECAYS: 3
  OPTIMIZER: ADAMW
  POLY_LR_CONSTANT_ENDING: 0.0
  POLY_LR_POWER: 0.9
  REFERENCE_WORLD_SIZE: 0
  RESCALE_INTERVAL: false
  STEPS:
  - 327778
  - 355092
  WARMUP_FACTOR: 1.0
  WARMUP_ITERS: 10
  WARMUP_METHOD: linear
  WEIGHT_DECAY: 0.05
  WEIGHT_DECAY_BIAS: null
  WEIGHT_DECAY_EMBED: 0.0
  WEIGHT_DECAY_NORM: 0.0
TEST:
  AUG:
    ENABLED: false
    FLIP: true
    MAX_SIZE: 4000
    MIN_SIZES:
    - 400
    - 500
    - 600
    - 700
    - 800
    - 900
    - 1000
    - 1100
    - 1200
  DETECTIONS_PER_IMAGE: 100
  EVAL_PERIOD: 500
  EXPECTED_RESULTS: []
  KEYPOINT_OKS_SIGMAS: []
  PRECISE_BN:
    ENABLED: false
    NUM_ITER: 200
VERSION: 2
VIS_PERIOD: 0

[09/22 13:06:25] detectron2 INFO: Full config saved to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_normal_008_1500_in_500_19/config.yaml
[09/22 13:06:25] d2.utils.env INFO: Using a generated random seed 25393328
[09/22 13:06:28] d2.engine.defaults INFO: Model:
FCCLIP(
  (backbone): CLIP(
    (clip_model): CLIP(
      (visual): ModifiedResNet(
        (conv1): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act1): ReLU(inplace=True)
        (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act2): ReLU(inplace=True)
        (conv3): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (act3): ReLU(inplace=True)
        (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
        (layer1): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=1, stride=1, padding=0)
              (0): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer2): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer3): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (3): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (4): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (5): Bottleneck(
            (conv1): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (layer4): Sequential(
          (0): Bottleneck(
            (conv1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): AvgPool2d(kernel_size=2, stride=2, padding=0)
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
            (downsample): Sequential(
              (-1): AvgPool2d(kernel_size=2, stride=2, padding=0)
              (0): Conv2d(1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
              (1): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
          (1): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
          (2): Bottleneck(
            (conv1): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act1): ReLU(inplace=True)
            (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act2): ReLU(inplace=True)
            (avgpool): Identity()
            (conv3): Conv2d(512, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn3): BatchNorm2d(2048, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act3): ReLU(inplace=True)
          )
        )
        (attnpool): AttentionPool2d(
          (k_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (q_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (v_proj): Linear(in_features=2048, out_features=2048, bias=True)
          (c_proj): Linear(in_features=2048, out_features=1024, bias=True)
        )
      )
      (transformer): Transformer(
        (resblocks): ModuleList(
          (0-11): 12 x ResidualAttentionBlock(
            (ln_1): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (attn): MultiheadAttention(
              (out_proj): NonDynamicallyQuantizableLinear(in_features=512, out_features=512, bias=True)
            )
            (ls_1): Identity()
            (ln_2): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
            (mlp): Sequential(
              (c_fc): Linear(in_features=512, out_features=2048, bias=True)
              (gelu): QuickGELU()
              (c_proj): Linear(in_features=2048, out_features=512, bias=True)
            )
            (ls_2): Identity()
          )
        )
      )
      (token_embedding): Embedding(49408, 512)
      (ln_final): LayerNorm((512,), eps=1e-05, elementwise_affine=True)
    )
  )
  (sem_seg_head): FCCLIPHead(
    (pixel_decoder): MSDeformAttnPixelDecoder(
      (input_proj): ModuleList(
        (0): Sequential(
          (0): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (1): Sequential(
          (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
        (2): Sequential(
          (0): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
          (1): GroupNorm(32, 256, eps=1e-05, affine=True)
        )
      )
      (transformer): MSDeformAttnTransformerEncoderOnly(
        (encoder): MSDeformAttnTransformerEncoder(
          (layers): ModuleList(
            (0-5): 6 x MSDeformAttnTransformerEncoderLayer(
              (self_attn): MSDeformAttn(
                (sampling_offsets): Linear(in_features=256, out_features=192, bias=True)
                (attention_weights): Linear(in_features=256, out_features=96, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
              (dropout1): Dropout(p=0.0, inplace=False)
              (norm1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (linear1): Linear(in_features=256, out_features=1024, bias=True)
              (dropout2): Dropout(p=0.0, inplace=False)
              (linear2): Linear(in_features=1024, out_features=256, bias=True)
              (dropout3): Dropout(p=0.0, inplace=False)
              (norm2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
      )
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (mask_features): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
      (adapter_1): Conv2d(
        256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
      (layer_1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
      )
    )
    (predictor): MultiScaleMaskedTransformerDecoder(
      (pe_layer): Positional encoding PositionEmbeddingSine
          num_pos_feats: 128
          temperature: 10000
          normalize: True
          scale: 6.283185307179586
      (transformer_self_attention_layers): ModuleList(
        (0-8): 9 x SelfAttentionLayer(
          (self_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_cross_attention_layers): ModuleList(
        (0-8): 9 x CrossAttentionLayer(
          (multihead_attn): MultiheadAttention(
            (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
          )
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
        )
      )
      (transformer_ffn_layers): ModuleList(
        (0-8): 9 x FFNLayer(
          (linear1): Linear(in_features=256, out_features=2048, bias=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (linear2): Linear(in_features=2048, out_features=256, bias=True)
          (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        )
      )
      (decoder_norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
      (query_feat): Embedding(250, 256)
      (query_embed): Embedding(250, 256)
      (level_embed): Embedding(3, 256)
      (input_proj): ModuleList(
        (0-2): 3 x Sequential()
      )
      (mask_embed): MLP(
        (layers): ModuleList(
          (0-2): 3 x Linear(in_features=256, out_features=256, bias=True)
        )
      )
      (mask_pooling): MaskPooling()
      (_mask_pooling_proj): Sequential(
        (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
        (1): Linear(in_features=256, out_features=256, bias=True)
      )
      (class_embed): MLP(
        (layers): ModuleList(
          (0-1): 2 x Linear(in_features=256, out_features=256, bias=True)
          (2): Linear(in_features=256, out_features=1024, bias=True)
        )
      )
    )
  )
  (criterion): Criterion SetCriterion
      matcher: Matcher HungarianMatcher
          cost_class: 2.0
          cost_mask: 5.0
          cost_dice: 5.0
      losses: ['labels', 'masks']
      weight_dict: {'loss_ce': 2.0, 'loss_mask': 5.0, 'loss_dice': 5.0, 'loss_ce_0': 2.0, 'loss_mask_0': 5.0, 'loss_dice_0': 5.0, 'loss_ce_1': 2.0, 'loss_mask_1': 5.0, 'loss_dice_1': 5.0, 'loss_ce_2': 2.0, 'loss_mask_2': 5.0, 'loss_dice_2': 5.0, 'loss_ce_3': 2.0, 'loss_mask_3': 5.0, 'loss_dice_3': 5.0, 'loss_ce_4': 2.0, 'loss_mask_4': 5.0, 'loss_dice_4': 5.0, 'loss_ce_5': 2.0, 'loss_mask_5': 5.0, 'loss_dice_5': 5.0, 'loss_ce_6': 2.0, 'loss_mask_6': 5.0, 'loss_dice_6': 5.0, 'loss_ce_7': 2.0, 'loss_mask_7': 5.0, 'loss_dice_7': 5.0, 'loss_ce_8': 2.0, 'loss_mask_8': 5.0, 'loss_dice_8': 5.0}
      num_classes: 19
      eos_coef: 0.1
      num_points: 12544
      oversample_ratio: 3.0
      importance_sample_ratio: 0.75
  (mask_pooling): MaskPooling()
  (void_embedding): Embedding(1, 1024)
)
[09/22 13:06:28] fcclip.data.dataset_mappers.mask_former_semantic_dataset_mapper INFO: [MaskFormerPanopticDatasetMapper] Augmentations used in training: [ResizeShortestEdge(short_edge_length=(800,), max_size=1333, sample_style='choice'), RandomFlip()]
[09/22 13:06:28] fcclip.data.datasets.register_cityscapes_panoptic INFO: 18 cities found in 'datasets/cityscapes/leftImg8bit/train'.
[09/22 13:06:28] d2.data.build INFO: Using training sampler TrainingSampler
[09/22 13:06:29] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/22 13:06:29] d2.data.common INFO: Serializing 2975 elements to byte tensors and concatenating them all ...
[09/22 13:06:29] d2.data.common INFO: Serialized dataset takes 4.12 MiB
[09/22 13:06:29] d2.data.build INFO: Making batched data loader with batch_size=4
[09/22 13:06:29] d2.solver.build WARNING: SOLVER.STEPS contains values larger than SOLVER.MAX_ITER. These values will be ignored.
[09/22 13:06:29] d2.checkpoint.detection_checkpoint INFO: [DetectionCheckpointer] Loading from /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1500_19/model_final.pth ...
[09/22 13:06:29] fvcore.common.checkpoint INFO: [Checkpointer] Loading from /tsi/hi-paris/GB/segmentation/results/Normal/r50_008_1500_19/model_final.pth ...
[09/22 13:06:31] d2.engine.train_loop INFO: Starting training from iteration 0
[09/22 13:06:51] d2.utils.events INFO:  eta: 0:05:22  iter: 19  total_loss: 61.88  loss_ce: 3.588  loss_mask: 0.2289  loss_dice: 2.094  loss_ce_0: 4.113  loss_mask_0: 0.2386  loss_dice_0: 2.478  loss_ce_1: 3.884  loss_mask_1: 0.2281  loss_dice_1: 2.279  loss_ce_2: 3.733  loss_mask_2: 0.2237  loss_dice_2: 2.293  loss_ce_3: 3.692  loss_mask_3: 0.2287  loss_dice_3: 2.237  loss_ce_4: 3.663  loss_mask_4: 0.2294  loss_dice_4: 2.204  loss_ce_5: 3.627  loss_mask_5: 0.2296  loss_dice_5: 2.179  loss_ce_6: 3.591  loss_mask_6: 0.2349  loss_dice_6: 2.133  loss_ce_7: 3.561  loss_mask_7: 0.2342  loss_dice_7: 2.174  loss_ce_8: 3.571  loss_mask_8: 0.2301  loss_dice_8: 2.161    time: 0.6774  last_time: 0.7208  data_time: 0.2433  last_data_time: 0.0441   lr: 0.0001  max_mem: 16629M
[09/22 13:07:04] d2.utils.events INFO:  eta: 0:05:05  iter: 39  total_loss: 24.35  loss_ce: 0.7438  loss_mask: 0.1791  loss_dice: 1.386  loss_ce_0: 0.9101  loss_mask_0: 0.2146  loss_dice_0: 1.716  loss_ce_1: 0.9165  loss_mask_1: 0.1911  loss_dice_1: 1.544  loss_ce_2: 0.8481  loss_mask_2: 0.1819  loss_dice_2: 1.517  loss_ce_3: 0.7861  loss_mask_3: 0.1808  loss_dice_3: 1.44  loss_ce_4: 0.7561  loss_mask_4: 0.18  loss_dice_4: 1.412  loss_ce_5: 0.766  loss_mask_5: 0.1824  loss_dice_5: 1.392  loss_ce_6: 0.6911  loss_mask_6: 0.1785  loss_dice_6: 1.418  loss_ce_7: 0.732  loss_mask_7: 0.1784  loss_dice_7: 1.392  loss_ce_8: 0.7275  loss_mask_8: 0.1808  loss_dice_8: 1.378    time: 0.6669  last_time: 0.6479  data_time: 0.0538  last_data_time: 0.0531   lr: 0.0001  max_mem: 16629M
[09/22 13:07:17] d2.utils.events INFO:  eta: 0:04:53  iter: 59  total_loss: 22.47  loss_ce: 0.6611  loss_mask: 0.1544  loss_dice: 1.323  loss_ce_0: 0.7878  loss_mask_0: 0.1724  loss_dice_0: 1.616  loss_ce_1: 0.8256  loss_mask_1: 0.1717  loss_dice_1: 1.468  loss_ce_2: 0.7876  loss_mask_2: 0.1608  loss_dice_2: 1.414  loss_ce_3: 0.6916  loss_mask_3: 0.1588  loss_dice_3: 1.356  loss_ce_4: 0.6821  loss_mask_4: 0.1547  loss_dice_4: 1.396  loss_ce_5: 0.6733  loss_mask_5: 0.1534  loss_dice_5: 1.37  loss_ce_6: 0.6988  loss_mask_6: 0.1542  loss_dice_6: 1.302  loss_ce_7: 0.6896  loss_mask_7: 0.1557  loss_dice_7: 1.316  loss_ce_8: 0.6576  loss_mask_8: 0.1536  loss_dice_8: 1.335    time: 0.6690  last_time: 0.6587  data_time: 0.0505  last_data_time: 0.0480   lr: 0.0001  max_mem: 16629M
[09/22 13:07:30] d2.utils.events INFO:  eta: 0:04:38  iter: 79  total_loss: 21.61  loss_ce: 0.5779  loss_mask: 0.1532  loss_dice: 1.249  loss_ce_0: 0.675  loss_mask_0: 0.179  loss_dice_0: 1.553  loss_ce_1: 0.7438  loss_mask_1: 0.1677  loss_dice_1: 1.45  loss_ce_2: 0.6742  loss_mask_2: 0.1589  loss_dice_2: 1.383  loss_ce_3: 0.7028  loss_mask_3: 0.155  loss_dice_3: 1.313  loss_ce_4: 0.6348  loss_mask_4: 0.1571  loss_dice_4: 1.299  loss_ce_5: 0.6115  loss_mask_5: 0.1603  loss_dice_5: 1.318  loss_ce_6: 0.5963  loss_mask_6: 0.1558  loss_dice_6: 1.276  loss_ce_7: 0.5936  loss_mask_7: 0.1557  loss_dice_7: 1.252  loss_ce_8: 0.5986  loss_mask_8: 0.1524  loss_dice_8: 1.278    time: 0.6623  last_time: 0.6099  data_time: 0.0483  last_data_time: 0.0392   lr: 0.0001  max_mem: 16629M
[09/22 13:07:43] d2.utils.events INFO:  eta: 0:04:19  iter: 99  total_loss: 20.1  loss_ce: 0.5695  loss_mask: 0.1659  loss_dice: 1.14  loss_ce_0: 0.6218  loss_mask_0: 0.1956  loss_dice_0: 1.397  loss_ce_1: 0.7371  loss_mask_1: 0.1861  loss_dice_1: 1.327  loss_ce_2: 0.6703  loss_mask_2: 0.1726  loss_dice_2: 1.228  loss_ce_3: 0.6327  loss_mask_3: 0.1695  loss_dice_3: 1.2  loss_ce_4: 0.603  loss_mask_4: 0.1687  loss_dice_4: 1.174  loss_ce_5: 0.5656  loss_mask_5: 0.1684  loss_dice_5: 1.156  loss_ce_6: 0.5711  loss_mask_6: 0.1678  loss_dice_6: 1.143  loss_ce_7: 0.5965  loss_mask_7: 0.1694  loss_dice_7: 1.144  loss_ce_8: 0.5706  loss_mask_8: 0.1661  loss_dice_8: 1.157    time: 0.6531  last_time: 0.6224  data_time: 0.0483  last_data_time: 0.0343   lr: 0.0001  max_mem: 16629M
[09/22 13:07:56] d2.utils.events INFO:  eta: 0:04:06  iter: 119  total_loss: 22.05  loss_ce: 0.5681  loss_mask: 0.1685  loss_dice: 1.329  loss_ce_0: 0.6776  loss_mask_0: 0.1914  loss_dice_0: 1.572  loss_ce_1: 0.7283  loss_mask_1: 0.18  loss_dice_1: 1.479  loss_ce_2: 0.6625  loss_mask_2: 0.1724  loss_dice_2: 1.431  loss_ce_3: 0.5908  loss_mask_3: 0.1719  loss_dice_3: 1.379  loss_ce_4: 0.5774  loss_mask_4: 0.1717  loss_dice_4: 1.402  loss_ce_5: 0.5718  loss_mask_5: 0.1713  loss_dice_5: 1.384  loss_ce_6: 0.5733  loss_mask_6: 0.1693  loss_dice_6: 1.332  loss_ce_7: 0.5825  loss_mask_7: 0.1698  loss_dice_7: 1.314  loss_ce_8: 0.5711  loss_mask_8: 0.1664  loss_dice_8: 1.35    time: 0.6544  last_time: 0.6281  data_time: 0.0498  last_data_time: 0.0346   lr: 0.0001  max_mem: 16629M
[09/22 13:08:09] d2.utils.events INFO:  eta: 0:03:53  iter: 139  total_loss: 19.89  loss_ce: 0.5278  loss_mask: 0.1559  loss_dice: 1.232  loss_ce_0: 0.663  loss_mask_0: 0.1843  loss_dice_0: 1.474  loss_ce_1: 0.7112  loss_mask_1: 0.1684  loss_dice_1: 1.396  loss_ce_2: 0.6348  loss_mask_2: 0.158  loss_dice_2: 1.329  loss_ce_3: 0.5794  loss_mask_3: 0.1564  loss_dice_3: 1.297  loss_ce_4: 0.5552  loss_mask_4: 0.1583  loss_dice_4: 1.296  loss_ce_5: 0.5404  loss_mask_5: 0.158  loss_dice_5: 1.286  loss_ce_6: 0.5484  loss_mask_6: 0.1579  loss_dice_6: 1.259  loss_ce_7: 0.5349  loss_mask_7: 0.1572  loss_dice_7: 1.273  loss_ce_8: 0.5647  loss_mask_8: 0.1595  loss_dice_8: 1.246    time: 0.6535  last_time: 0.7076  data_time: 0.0497  last_data_time: 0.0540   lr: 0.0001  max_mem: 17163M
[09/22 13:08:22] d2.utils.events INFO:  eta: 0:03:40  iter: 159  total_loss: 20.16  loss_ce: 0.5392  loss_mask: 0.1592  loss_dice: 1.178  loss_ce_0: 0.619  loss_mask_0: 0.1831  loss_dice_0: 1.428  loss_ce_1: 0.694  loss_mask_1: 0.1695  loss_dice_1: 1.324  loss_ce_2: 0.6112  loss_mask_2: 0.1642  loss_dice_2: 1.29  loss_ce_3: 0.5768  loss_mask_3: 0.1621  loss_dice_3: 1.241  loss_ce_4: 0.5589  loss_mask_4: 0.1598  loss_dice_4: 1.239  loss_ce_5: 0.5383  loss_mask_5: 0.1581  loss_dice_5: 1.207  loss_ce_6: 0.5222  loss_mask_6: 0.16  loss_dice_6: 1.215  loss_ce_7: 0.5467  loss_mask_7: 0.1596  loss_dice_7: 1.205  loss_ce_8: 0.5263  loss_mask_8: 0.1576  loss_dice_8: 1.207    time: 0.6525  last_time: 0.6267  data_time: 0.0504  last_data_time: 0.0362   lr: 0.0001  max_mem: 17163M
[09/22 13:08:35] d2.utils.events INFO:  eta: 0:03:27  iter: 179  total_loss: 20.93  loss_ce: 0.5217  loss_mask: 0.1569  loss_dice: 1.286  loss_ce_0: 0.6711  loss_mask_0: 0.1959  loss_dice_0: 1.511  loss_ce_1: 0.7231  loss_mask_1: 0.177  loss_dice_1: 1.424  loss_ce_2: 0.6725  loss_mask_2: 0.1593  loss_dice_2: 1.354  loss_ce_3: 0.6161  loss_mask_3: 0.1577  loss_dice_3: 1.3  loss_ce_4: 0.5506  loss_mask_4: 0.157  loss_dice_4: 1.307  loss_ce_5: 0.5421  loss_mask_5: 0.1579  loss_dice_5: 1.293  loss_ce_6: 0.5525  loss_mask_6: 0.1584  loss_dice_6: 1.296  loss_ce_7: 0.5641  loss_mask_7: 0.158  loss_dice_7: 1.278  loss_ce_8: 0.5205  loss_mask_8: 0.1572  loss_dice_8: 1.286    time: 0.6504  last_time: 0.5997  data_time: 0.0443  last_data_time: 0.0442   lr: 0.0001  max_mem: 17163M
[09/22 13:08:48] d2.utils.events INFO:  eta: 0:03:13  iter: 199  total_loss: 19.77  loss_ce: 0.5171  loss_mask: 0.1503  loss_dice: 1.215  loss_ce_0: 0.6511  loss_mask_0: 0.1774  loss_dice_0: 1.45  loss_ce_1: 0.6752  loss_mask_1: 0.165  loss_dice_1: 1.375  loss_ce_2: 0.6297  loss_mask_2: 0.1529  loss_dice_2: 1.298  loss_ce_3: 0.5904  loss_mask_3: 0.156  loss_dice_3: 1.241  loss_ce_4: 0.5414  loss_mask_4: 0.1494  loss_dice_4: 1.26  loss_ce_5: 0.5223  loss_mask_5: 0.1526  loss_dice_5: 1.274  loss_ce_6: 0.5201  loss_mask_6: 0.1535  loss_dice_6: 1.258  loss_ce_7: 0.5174  loss_mask_7: 0.1509  loss_dice_7: 1.245  loss_ce_8: 0.5216  loss_mask_8: 0.151  loss_dice_8: 1.225    time: 0.6495  last_time: 0.6455  data_time: 0.0444  last_data_time: 0.0559   lr: 0.0001  max_mem: 17163M
[09/22 13:09:01] d2.utils.events INFO:  eta: 0:03:01  iter: 219  total_loss: 21.34  loss_ce: 0.5764  loss_mask: 0.1631  loss_dice: 1.269  loss_ce_0: 0.6454  loss_mask_0: 0.1812  loss_dice_0: 1.551  loss_ce_1: 0.6765  loss_mask_1: 0.1742  loss_dice_1: 1.469  loss_ce_2: 0.6493  loss_mask_2: 0.1649  loss_dice_2: 1.358  loss_ce_3: 0.6139  loss_mask_3: 0.164  loss_dice_3: 1.326  loss_ce_4: 0.5884  loss_mask_4: 0.164  loss_dice_4: 1.333  loss_ce_5: 0.5879  loss_mask_5: 0.1646  loss_dice_5: 1.298  loss_ce_6: 0.5622  loss_mask_6: 0.1649  loss_dice_6: 1.297  loss_ce_7: 0.5729  loss_mask_7: 0.1637  loss_dice_7: 1.285  loss_ce_8: 0.5689  loss_mask_8: 0.1645  loss_dice_8: 1.283    time: 0.6524  last_time: 0.6702  data_time: 0.0597  last_data_time: 0.0487   lr: 0.0001  max_mem: 17163M
[09/22 13:09:15] d2.utils.events INFO:  eta: 0:02:49  iter: 239  total_loss: 20.23  loss_ce: 0.5538  loss_mask: 0.1488  loss_dice: 1.146  loss_ce_0: 0.6139  loss_mask_0: 0.1769  loss_dice_0: 1.427  loss_ce_1: 0.6942  loss_mask_1: 0.1614  loss_dice_1: 1.341  loss_ce_2: 0.6381  loss_mask_2: 0.1545  loss_dice_2: 1.285  loss_ce_3: 0.5951  loss_mask_3: 0.1519  loss_dice_3: 1.244  loss_ce_4: 0.5787  loss_mask_4: 0.1497  loss_dice_4: 1.213  loss_ce_5: 0.5841  loss_mask_5: 0.1499  loss_dice_5: 1.234  loss_ce_6: 0.5405  loss_mask_6: 0.1491  loss_dice_6: 1.216  loss_ce_7: 0.5472  loss_mask_7: 0.1476  loss_dice_7: 1.198  loss_ce_8: 0.5508  loss_mask_8: 0.1496  loss_dice_8: 1.183    time: 0.6540  last_time: 0.6602  data_time: 0.0556  last_data_time: 0.0503   lr: 0.0001  max_mem: 17163M
[09/22 13:09:28] d2.utils.events INFO:  eta: 0:02:36  iter: 259  total_loss: 18.55  loss_ce: 0.4796  loss_mask: 0.1541  loss_dice: 1.094  loss_ce_0: 0.5851  loss_mask_0: 0.1751  loss_dice_0: 1.317  loss_ce_1: 0.6302  loss_mask_1: 0.1656  loss_dice_1: 1.251  loss_ce_2: 0.5704  loss_mask_2: 0.1538  loss_dice_2: 1.205  loss_ce_3: 0.545  loss_mask_3: 0.1563  loss_dice_3: 1.169  loss_ce_4: 0.4885  loss_mask_4: 0.1621  loss_dice_4: 1.141  loss_ce_5: 0.4988  loss_mask_5: 0.1548  loss_dice_5: 1.152  loss_ce_6: 0.4704  loss_mask_6: 0.1539  loss_dice_6: 1.106  loss_ce_7: 0.4929  loss_mask_7: 0.1544  loss_dice_7: 1.126  loss_ce_8: 0.4843  loss_mask_8: 0.1517  loss_dice_8: 1.116    time: 0.6536  last_time: 0.6764  data_time: 0.0506  last_data_time: 0.0358   lr: 0.0001  max_mem: 17163M
[09/22 13:09:41] d2.utils.events INFO:  eta: 0:02:23  iter: 279  total_loss: 20.48  loss_ce: 0.549  loss_mask: 0.1488  loss_dice: 1.248  loss_ce_0: 0.6433  loss_mask_0: 0.1753  loss_dice_0: 1.506  loss_ce_1: 0.7043  loss_mask_1: 0.1653  loss_dice_1: 1.403  loss_ce_2: 0.6745  loss_mask_2: 0.1512  loss_dice_2: 1.305  loss_ce_3: 0.5916  loss_mask_3: 0.1524  loss_dice_3: 1.257  loss_ce_4: 0.5955  loss_mask_4: 0.1553  loss_dice_4: 1.274  loss_ce_5: 0.5883  loss_mask_5: 0.1512  loss_dice_5: 1.248  loss_ce_6: 0.5313  loss_mask_6: 0.1502  loss_dice_6: 1.265  loss_ce_7: 0.578  loss_mask_7: 0.1512  loss_dice_7: 1.239  loss_ce_8: 0.5664  loss_mask_8: 0.15  loss_dice_8: 1.213    time: 0.6550  last_time: 0.6355  data_time: 0.0558  last_data_time: 0.0480   lr: 0.0001  max_mem: 17163M
[09/22 13:09:55] d2.utils.events INFO:  eta: 0:02:10  iter: 299  total_loss: 19.8  loss_ce: 0.5342  loss_mask: 0.1621  loss_dice: 1.126  loss_ce_0: 0.5938  loss_mask_0: 0.1933  loss_dice_0: 1.35  loss_ce_1: 0.7043  loss_mask_1: 0.1789  loss_dice_1: 1.275  loss_ce_2: 0.6284  loss_mask_2: 0.1734  loss_dice_2: 1.273  loss_ce_3: 0.5817  loss_mask_3: 0.1758  loss_dice_3: 1.206  loss_ce_4: 0.5751  loss_mask_4: 0.1675  loss_dice_4: 1.16  loss_ce_5: 0.5374  loss_mask_5: 0.1676  loss_dice_5: 1.172  loss_ce_6: 0.5319  loss_mask_6: 0.1658  loss_dice_6: 1.176  loss_ce_7: 0.5078  loss_mask_7: 0.1673  loss_dice_7: 1.162  loss_ce_8: 0.5545  loss_mask_8: 0.163  loss_dice_8: 1.139    time: 0.6551  last_time: 0.6763  data_time: 0.0450  last_data_time: 0.0339   lr: 0.0001  max_mem: 17163M
[09/22 13:10:08] d2.utils.events INFO:  eta: 0:01:57  iter: 319  total_loss: 20.77  loss_ce: 0.5397  loss_mask: 0.1555  loss_dice: 1.283  loss_ce_0: 0.5967  loss_mask_0: 0.188  loss_dice_0: 1.473  loss_ce_1: 0.6674  loss_mask_1: 0.1682  loss_dice_1: 1.412  loss_ce_2: 0.6584  loss_mask_2: 0.1591  loss_dice_2: 1.325  loss_ce_3: 0.6193  loss_mask_3: 0.1595  loss_dice_3: 1.322  loss_ce_4: 0.5707  loss_mask_4: 0.1599  loss_dice_4: 1.302  loss_ce_5: 0.5651  loss_mask_5: 0.1585  loss_dice_5: 1.299  loss_ce_6: 0.5361  loss_mask_6: 0.1599  loss_dice_6: 1.274  loss_ce_7: 0.5353  loss_mask_7: 0.1589  loss_dice_7: 1.27  loss_ce_8: 0.5476  loss_mask_8: 0.1599  loss_dice_8: 1.255    time: 0.6554  last_time: 0.6666  data_time: 0.0493  last_data_time: 0.0417   lr: 0.0001  max_mem: 17163M
[09/22 13:10:21] d2.utils.events INFO:  eta: 0:01:44  iter: 339  total_loss: 19.47  loss_ce: 0.5284  loss_mask: 0.1521  loss_dice: 1.149  loss_ce_0: 0.6253  loss_mask_0: 0.1853  loss_dice_0: 1.382  loss_ce_1: 0.6762  loss_mask_1: 0.1739  loss_dice_1: 1.317  loss_ce_2: 0.6405  loss_mask_2: 0.1639  loss_dice_2: 1.224  loss_ce_3: 0.6019  loss_mask_3: 0.16  loss_dice_3: 1.208  loss_ce_4: 0.5486  loss_mask_4: 0.1629  loss_dice_4: 1.18  loss_ce_5: 0.5586  loss_mask_5: 0.1583  loss_dice_5: 1.216  loss_ce_6: 0.5333  loss_mask_6: 0.1544  loss_dice_6: 1.159  loss_ce_7: 0.5199  loss_mask_7: 0.1565  loss_dice_7: 1.165  loss_ce_8: 0.5386  loss_mask_8: 0.1567  loss_dice_8: 1.148    time: 0.6557  last_time: 0.6669  data_time: 0.0478  last_data_time: 0.0429   lr: 0.0001  max_mem: 17163M
[09/22 13:10:34] d2.utils.events INFO:  eta: 0:01:31  iter: 359  total_loss: 19.91  loss_ce: 0.5258  loss_mask: 0.1457  loss_dice: 1.22  loss_ce_0: 0.629  loss_mask_0: 0.1716  loss_dice_0: 1.451  loss_ce_1: 0.6696  loss_mask_1: 0.1621  loss_dice_1: 1.381  loss_ce_2: 0.6039  loss_mask_2: 0.1498  loss_dice_2: 1.325  loss_ce_3: 0.5689  loss_mask_3: 0.1509  loss_dice_3: 1.241  loss_ce_4: 0.5614  loss_mask_4: 0.1522  loss_dice_4: 1.25  loss_ce_5: 0.5487  loss_mask_5: 0.15  loss_dice_5: 1.256  loss_ce_6: 0.5472  loss_mask_6: 0.1474  loss_dice_6: 1.2  loss_ce_7: 0.5177  loss_mask_7: 0.1472  loss_dice_7: 1.204  loss_ce_8: 0.5519  loss_mask_8: 0.1463  loss_dice_8: 1.208    time: 0.6557  last_time: 0.6522  data_time: 0.0458  last_data_time: 0.0384   lr: 0.0001  max_mem: 17163M
[09/22 13:10:48] d2.utils.events INFO:  eta: 0:01:18  iter: 379  total_loss: 20.58  loss_ce: 0.5249  loss_mask: 0.1538  loss_dice: 1.28  loss_ce_0: 0.6455  loss_mask_0: 0.1895  loss_dice_0: 1.459  loss_ce_1: 0.6785  loss_mask_1: 0.1792  loss_dice_1: 1.402  loss_ce_2: 0.6202  loss_mask_2: 0.1622  loss_dice_2: 1.354  loss_ce_3: 0.5743  loss_mask_3: 0.1573  loss_dice_3: 1.296  loss_ce_4: 0.562  loss_mask_4: 0.1619  loss_dice_4: 1.3  loss_ce_5: 0.5536  loss_mask_5: 0.1586  loss_dice_5: 1.294  loss_ce_6: 0.5089  loss_mask_6: 0.1577  loss_dice_6: 1.28  loss_ce_7: 0.5322  loss_mask_7: 0.1578  loss_dice_7: 1.295  loss_ce_8: 0.5195  loss_mask_8: 0.1566  loss_dice_8: 1.298    time: 0.6562  last_time: 0.6101  data_time: 0.0618  last_data_time: 0.0426   lr: 0.0001  max_mem: 17163M
[09/22 13:11:01] d2.utils.events INFO:  eta: 0:01:05  iter: 399  total_loss: 18.68  loss_ce: 0.4489  loss_mask: 0.1507  loss_dice: 1.131  loss_ce_0: 0.5451  loss_mask_0: 0.1773  loss_dice_0: 1.381  loss_ce_1: 0.6347  loss_mask_1: 0.1641  loss_dice_1: 1.31  loss_ce_2: 0.6023  loss_mask_2: 0.1552  loss_dice_2: 1.252  loss_ce_3: 0.5562  loss_mask_3: 0.1551  loss_dice_3: 1.188  loss_ce_4: 0.5243  loss_mask_4: 0.1533  loss_dice_4: 1.169  loss_ce_5: 0.5454  loss_mask_5: 0.1496  loss_dice_5: 1.15  loss_ce_6: 0.4638  loss_mask_6: 0.1511  loss_dice_6: 1.168  loss_ce_7: 0.4729  loss_mask_7: 0.1499  loss_dice_7: 1.143  loss_ce_8: 0.4942  loss_mask_8: 0.1491  loss_dice_8: 1.129    time: 0.6557  last_time: 0.6943  data_time: 0.0442  last_data_time: 0.0528   lr: 0.0001  max_mem: 17163M
[09/22 13:11:14] d2.utils.events INFO:  eta: 0:00:52  iter: 419  total_loss: 19.57  loss_ce: 0.4623  loss_mask: 0.1422  loss_dice: 1.202  loss_ce_0: 0.5843  loss_mask_0: 0.163  loss_dice_0: 1.434  loss_ce_1: 0.6748  loss_mask_1: 0.1508  loss_dice_1: 1.343  loss_ce_2: 0.5979  loss_mask_2: 0.1444  loss_dice_2: 1.306  loss_ce_3: 0.5633  loss_mask_3: 0.1473  loss_dice_3: 1.211  loss_ce_4: 0.5209  loss_mask_4: 0.145  loss_dice_4: 1.207  loss_ce_5: 0.5046  loss_mask_5: 0.1434  loss_dice_5: 1.201  loss_ce_6: 0.4996  loss_mask_6: 0.1433  loss_dice_6: 1.214  loss_ce_7: 0.482  loss_mask_7: 0.1432  loss_dice_7: 1.185  loss_ce_8: 0.4854  loss_mask_8: 0.1445  loss_dice_8: 1.18    time: 0.6560  last_time: 0.6607  data_time: 0.0512  last_data_time: 0.0426   lr: 0.0001  max_mem: 17163M
[09/22 13:11:27] d2.utils.events INFO:  eta: 0:00:39  iter: 439  total_loss: 18.77  loss_ce: 0.4727  loss_mask: 0.1531  loss_dice: 1.138  loss_ce_0: 0.5848  loss_mask_0: 0.1701  loss_dice_0: 1.349  loss_ce_1: 0.6288  loss_mask_1: 0.1611  loss_dice_1: 1.266  loss_ce_2: 0.6029  loss_mask_2: 0.1576  loss_dice_2: 1.238  loss_ce_3: 0.5442  loss_mask_3: 0.1525  loss_dice_3: 1.156  loss_ce_4: 0.525  loss_mask_4: 0.1571  loss_dice_4: 1.189  loss_ce_5: 0.5326  loss_mask_5: 0.1515  loss_dice_5: 1.157  loss_ce_6: 0.4908  loss_mask_6: 0.15  loss_dice_6: 1.146  loss_ce_7: 0.482  loss_mask_7: 0.1524  loss_dice_7: 1.162  loss_ce_8: 0.4832  loss_mask_8: 0.1514  loss_dice_8: 1.147    time: 0.6556  last_time: 0.6585  data_time: 0.0464  last_data_time: 0.0410   lr: 0.0001  max_mem: 17163M
[09/22 13:11:40] d2.utils.events INFO:  eta: 0:00:26  iter: 459  total_loss: 19.56  loss_ce: 0.4217  loss_mask: 0.1574  loss_dice: 1.189  loss_ce_0: 0.5871  loss_mask_0: 0.1867  loss_dice_0: 1.447  loss_ce_1: 0.6554  loss_mask_1: 0.17  loss_dice_1: 1.344  loss_ce_2: 0.5827  loss_mask_2: 0.1594  loss_dice_2: 1.256  loss_ce_3: 0.5489  loss_mask_3: 0.1603  loss_dice_3: 1.264  loss_ce_4: 0.5253  loss_mask_4: 0.1646  loss_dice_4: 1.219  loss_ce_5: 0.4943  loss_mask_5: 0.1585  loss_dice_5: 1.231  loss_ce_6: 0.5011  loss_mask_6: 0.1573  loss_dice_6: 1.212  loss_ce_7: 0.4888  loss_mask_7: 0.1564  loss_dice_7: 1.222  loss_ce_8: 0.4832  loss_mask_8: 0.1565  loss_dice_8: 1.219    time: 0.6563  last_time: 0.6583  data_time: 0.0524  last_data_time: 0.0412   lr: 0.0001  max_mem: 17163M
[09/22 13:11:53] d2.utils.events INFO:  eta: 0:00:13  iter: 479  total_loss: 19.3  loss_ce: 0.497  loss_mask: 0.1759  loss_dice: 1.115  loss_ce_0: 0.6006  loss_mask_0: 0.2059  loss_dice_0: 1.361  loss_ce_1: 0.6156  loss_mask_1: 0.1887  loss_dice_1: 1.291  loss_ce_2: 0.6035  loss_mask_2: 0.1846  loss_dice_2: 1.21  loss_ce_3: 0.5529  loss_mask_3: 0.1824  loss_dice_3: 1.178  loss_ce_4: 0.5371  loss_mask_4: 0.1796  loss_dice_4: 1.164  loss_ce_5: 0.5415  loss_mask_5: 0.1786  loss_dice_5: 1.175  loss_ce_6: 0.5347  loss_mask_6: 0.1768  loss_dice_6: 1.149  loss_ce_7: 0.507  loss_mask_7: 0.1757  loss_dice_7: 1.174  loss_ce_8: 0.527  loss_mask_8: 0.1751  loss_dice_8: 1.156    time: 0.6549  last_time: 0.6128  data_time: 0.0463  last_data_time: 0.0473   lr: 0.0001  max_mem: 17163M
[09/22 13:12:06] fvcore.common.checkpoint INFO: Saving checkpoint to /tsi/hi-paris/GB/segmentation/results/In_vocab/r50_normal_008_1500_in_500_19/model_final.pth
[09/22 13:12:09] d2.utils.events INFO:  eta: 0:00:00  iter: 499  total_loss: 19.27  loss_ce: 0.5186  loss_mask: 0.1423  loss_dice: 1.177  loss_ce_0: 0.6432  loss_mask_0: 0.1718  loss_dice_0: 1.435  loss_ce_1: 0.6723  loss_mask_1: 0.1507  loss_dice_1: 1.349  loss_ce_2: 0.6233  loss_mask_2: 0.1429  loss_dice_2: 1.345  loss_ce_3: 0.553  loss_mask_3: 0.1421  loss_dice_3: 1.244  loss_ce_4: 0.5056  loss_mask_4: 0.1414  loss_dice_4: 1.263  loss_ce_5: 0.5449  loss_mask_5: 0.141  loss_dice_5: 1.261  loss_ce_6: 0.5006  loss_mask_6: 0.1406  loss_dice_6: 1.25  loss_ce_7: 0.5361  loss_mask_7: 0.1407  loss_dice_7: 1.255  loss_ce_8: 0.521  loss_mask_8: 0.1419  loss_dice_8: 1.194    time: 0.6555  last_time: 0.6590  data_time: 0.0532  last_data_time: 0.0434   lr: 0.0001  max_mem: 17163M
[09/22 13:12:09] d2.engine.hooks INFO: Overall training speed: 498 iterations in 0:05:26 (0.6555 s / it)
[09/22 13:12:09] d2.engine.hooks INFO: Total training time: 0:05:30 (0:00:04 on hooks)
[09/22 13:12:09] fcclip.data.datasets.register_cityscapes_panoptic INFO: 3 cities found in 'datasets/cityscapes/leftImg8bit/val'.
[09/22 13:12:09] d2.data.dataset_mapper INFO: [DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1024, 1024), max_size=2560, sample_style='choice')]
[09/22 13:12:09] d2.data.common INFO: Serializing the dataset using: <class 'detectron2.data.common._TorchSerializedList'>
[09/22 13:12:09] d2.data.common INFO: Serializing 500 elements to byte tensors and concatenating them all ...
[09/22 13:12:09] d2.data.common INFO: Serialized dataset takes 0.74 MiB
[09/22 13:12:09] d2.evaluation.evaluator INFO: Start inference on 250 batches
[09/22 13:12:17] d2.evaluation.evaluator INFO: Inference done 11/250. Dataloading: 0.0061 s/iter. Inference: 0.2460 s/iter. Eval: 0.0841 s/iter. Total: 0.3362 s/iter. ETA=0:01:20
[09/22 13:12:22] d2.evaluation.evaluator INFO: Inference done 27/250. Dataloading: 0.0066 s/iter. Inference: 0.2460 s/iter. Eval: 0.0765 s/iter. Total: 0.3292 s/iter. ETA=0:01:13
[09/22 13:12:28] d2.evaluation.evaluator INFO: Inference done 42/250. Dataloading: 0.0074 s/iter. Inference: 0.2506 s/iter. Eval: 0.0741 s/iter. Total: 0.3323 s/iter. ETA=0:01:09
[09/22 13:12:33] d2.evaluation.evaluator INFO: Inference done 57/250. Dataloading: 0.0078 s/iter. Inference: 0.2521 s/iter. Eval: 0.0747 s/iter. Total: 0.3346 s/iter. ETA=0:01:04
[09/22 13:12:38] d2.evaluation.evaluator INFO: Inference done 72/250. Dataloading: 0.0078 s/iter. Inference: 0.2534 s/iter. Eval: 0.0758 s/iter. Total: 0.3370 s/iter. ETA=0:00:59
[09/22 13:12:43] d2.evaluation.evaluator INFO: Inference done 86/250. Dataloading: 0.0076 s/iter. Inference: 0.2585 s/iter. Eval: 0.0753 s/iter. Total: 0.3414 s/iter. ETA=0:00:55
[09/22 13:12:48] d2.evaluation.evaluator INFO: Inference done 101/250. Dataloading: 0.0074 s/iter. Inference: 0.2604 s/iter. Eval: 0.0748 s/iter. Total: 0.3426 s/iter. ETA=0:00:51
[09/22 13:12:53] d2.evaluation.evaluator INFO: Inference done 117/250. Dataloading: 0.0073 s/iter. Inference: 0.2599 s/iter. Eval: 0.0741 s/iter. Total: 0.3414 s/iter. ETA=0:00:45
[09/22 13:12:59] d2.evaluation.evaluator INFO: Inference done 132/250. Dataloading: 0.0074 s/iter. Inference: 0.2595 s/iter. Eval: 0.0756 s/iter. Total: 0.3426 s/iter. ETA=0:00:40
[09/22 13:13:04] d2.evaluation.evaluator INFO: Inference done 148/250. Dataloading: 0.0075 s/iter. Inference: 0.2589 s/iter. Eval: 0.0751 s/iter. Total: 0.3414 s/iter. ETA=0:00:34
[09/22 13:13:09] d2.evaluation.evaluator INFO: Inference done 162/250. Dataloading: 0.0075 s/iter. Inference: 0.2594 s/iter. Eval: 0.0767 s/iter. Total: 0.3436 s/iter. ETA=0:00:30
[09/22 13:13:14] d2.evaluation.evaluator INFO: Inference done 177/250. Dataloading: 0.0077 s/iter. Inference: 0.2598 s/iter. Eval: 0.0763 s/iter. Total: 0.3438 s/iter. ETA=0:00:25
[09/22 13:13:20] d2.evaluation.evaluator INFO: Inference done 192/250. Dataloading: 0.0077 s/iter. Inference: 0.2606 s/iter. Eval: 0.0765 s/iter. Total: 0.3449 s/iter. ETA=0:00:20
[09/22 13:13:25] d2.evaluation.evaluator INFO: Inference done 206/250. Dataloading: 0.0077 s/iter. Inference: 0.2623 s/iter. Eval: 0.0766 s/iter. Total: 0.3467 s/iter. ETA=0:00:15
[09/22 13:13:30] d2.evaluation.evaluator INFO: Inference done 221/250. Dataloading: 0.0077 s/iter. Inference: 0.2617 s/iter. Eval: 0.0765 s/iter. Total: 0.3460 s/iter. ETA=0:00:10
[09/22 13:13:35] d2.evaluation.evaluator INFO: Inference done 236/250. Dataloading: 0.0076 s/iter. Inference: 0.2617 s/iter. Eval: 0.0763 s/iter. Total: 0.3457 s/iter. ETA=0:00:04
[09/22 13:13:40] d2.evaluation.evaluator INFO: Total inference time: 0:01:25.122762 (0.347440 s / iter per device, on 2 devices)
[09/22 13:13:40] d2.evaluation.evaluator INFO: Total inference pure compute time: 0:01:04 (0.261256 s / iter per device, on 2 devices)
[09/22 13:13:40] d2.evaluation.panoptic_evaluation INFO: Writing all panoptic predictions to /tmp/panoptic_eval217cshp0 ...
[09/22 13:14:45] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|        |   PQ   |   SQ   |   RQ   |  #categories  |
|:------:|:------:|:------:|:------:|:-------------:|
|  All   | 54.632 | 80.852 | 66.473 |      19       |
| Things | 45.303 | 80.022 | 56.463 |       8       |
| Stuff  | 61.417 | 81.455 | 73.753 |      11       |
[09/22 13:14:45] d2.evaluation.panoptic_evaluation INFO: Panoptic Evaluation Results:
|          |   PQ   |   SQ   |   RQ   |  #categories  |
|:--------:|:------:|:------:|:------:|:-------------:|
| class_7  | 96.321 | 97.026 | 99.273 |     Stuff     |
| class_8  | 63.814 | 84.173 | 75.812 |     Stuff     |
| class_11 | 85.809 | 89.045 | 96.366 |     Stuff     |
| class_12 | 35.328 | 79.929 | 44.199 |     Stuff     |
| class_13 | 27.905 | 77.566 | 35.976 |     Stuff     |
| class_17 | 45.457 | 64.918 | 70.021 |     Stuff     |
| class_19 | 49.905 | 69.703 | 71.597 |     Stuff     |
| class_20 | 65.387 | 78.091 | 83.731 |     Stuff     |
| class_21 | 88.536 | 89.640 | 98.768 |     Stuff     |
| class_22 | 30.335 | 74.258 | 40.851 |     Stuff     |
| class_23 | 86.792 | 91.660 | 94.689 |     Stuff     |
| class_24 | 46.196 | 76.901 | 60.072 |    Things     |
| class_25 | 42.370 | 73.850 | 57.373 |    Things     |
| class_26 | 60.500 | 83.044 | 72.854 |    Things     |
| class_27 | 36.242 | 86.696 | 41.803 |    Things     |
| class_28 | 52.637 | 90.861 | 57.931 |    Things     |
| class_31 | 53.085 | 85.753 | 61.905 |    Things     |
| class_32 | 37.123 | 73.085 | 50.794 |    Things     |
| class_33 | 34.274 | 69.984 | 48.974 |    Things     |
[09/22 13:14:45] d2.engine.defaults INFO: Evaluation results for openvocab_cityscapes_fine_panoptic_val in csv format:
[09/22 13:14:45] d2.evaluation.testing INFO: copypaste: Task: panoptic_seg
[09/22 13:14:45] d2.evaluation.testing INFO: copypaste: PQ,SQ,RQ,PQ_th,SQ_th,RQ_th,PQ_st,SQ_st,RQ_st,PQ_7,SQ_7,RQ_7,PQ_8,SQ_8,RQ_8,PQ_11,SQ_11,RQ_11,PQ_12,SQ_12,RQ_12,PQ_13,SQ_13,RQ_13,PQ_17,SQ_17,RQ_17,PQ_19,SQ_19,RQ_19,PQ_20,SQ_20,RQ_20,PQ_21,SQ_21,RQ_21,PQ_22,SQ_22,RQ_22,PQ_23,SQ_23,RQ_23,PQ_24,SQ_24,RQ_24,PQ_25,SQ_25,RQ_25,PQ_26,SQ_26,RQ_26,PQ_27,SQ_27,RQ_27,PQ_28,SQ_28,RQ_28,PQ_31,SQ_31,RQ_31,PQ_32,SQ_32,RQ_32,PQ_33,SQ_33,RQ_33
[09/22 13:14:45] d2.evaluation.testing INFO: copypaste: 54.6323,80.8517,66.4731,45.3033,80.0217,56.4632,61.4170,81.4554,73.7530,96.3205,97.0258,99.2731,63.8136,84.1732,75.8123,85.8090,89.0454,96.3655,35.3279,79.9293,44.1989,27.9048,77.5658,35.9756,45.4567,64.9183,70.0214,49.9050,69.7031,71.5966,65.3867,78.0913,83.7310,88.5357,89.6401,98.7680,30.3351,74.2577,40.8511,86.7918,91.6596,94.6893,46.1958,76.9006,60.0721,42.3701,73.8499,57.3733,60.5004,83.0438,72.8536,36.2418,86.6960,41.8033,52.6368,90.8611,57.9310,53.0852,85.7531,61.9048,37.1225,73.0850,50.7937,34.2739,69.9842,48.9737
